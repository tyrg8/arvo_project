{
    "fix": "https://github.com/libjpeg-turbo/libjpeg-turbo/commit/f35fd27ec641c42d6b115bfa595e483ec58188d2",
    "verify": "0",
    "localId": 32964,
    "project": "libjpeg-turbo",
    "fuzzer": "honggfuzz",
    "sanitizer": "asan",
    "crash_type": "Heap-buffer-overflow WRITE 1",
    "severity": "High",
    "report": {
        "comments": [
            {
                "projectName": "oss-fuzz",
                "localId": 32964,
                "commenter": {
                    "userId": "382749006",
                    "displayName": "ClusterFuzz-External"
                },
                "timestamp": 1617717032,
                "content": "Detailed Report: https://oss-fuzz.com/testcase?key=6618589424648192\n\nProject: libjpeg-turbo\nFuzzing Engine: honggfuzz\nFuzz Target: compress_fuzzer\nJob Type: honggfuzz_asan_libjpeg-turbo\nPlatform Id: linux\n\nCrash Type: Heap-buffer-overflow WRITE 1\nCrash Address: 0x60c0000003b7\nCrash State:\n  get_word_rgb_row\n  tjLoadImage\n  compress.cc\n  \nSanitizer: address (ASAN)\n\nRecommended Security Severity: High\n\nRegressed: https://oss-fuzz.com/revisions?job=honggfuzz_asan_libjpeg-turbo&range=202104050600:202104060609\n\nReproducer Testcase: https://oss-fuzz.com/download?testcase_id=6618589424648192\n\nIssue filed automatically.\n\nSee https://google.github.io/oss-fuzz/advanced-topics/reproducing for instructions to reproduce this bug locally.\nWhen you fix this bug, please\n  * mention the fix revision(s).\n  * state whether the bug was a short-lived regression or an old bug in any stable releases.\n  * add any other useful information.\nThis information can help downstream consumers.\n\nIf you need to contact the OSS-Fuzz team with a question, concern, or any other feedback, please file an issue at https://github.com/google/oss-fuzz/issues. Comments on individual Monorail issues are not monitored.\n\nThis bug is subject to a 90 day disclosure deadline. If 90 days elapse\nwithout an upstream patch, then the bug report will automatically\nbecome visible to the public.",
                "descriptionNum": 1
            },
            {
                "projectName": "oss-fuzz",
                "localId": 32964,
                "sequenceNum": 1,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1617735750,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "Disclosure-2021-07-05"
                    }
                ]
            },
            {
                "projectName": "oss-fuzz",
                "localId": 32964,
                "sequenceNum": 2,
                "commenter": {
                    "userId": "3352982042",
                    "displayName": "d...@virtualgl.org"
                },
                "timestamp": 1617804767,
                "content": "This issue was exposed by the new compress_fuzzer target that I introduced this week.  The issue was almost immediately fixed (in https://github.com/libjpeg-turbo/libjpeg-turbo/commit/f35fd27ec641c42d6b115bfa595e483ec58188d2), but despite selecting \"Redo Task\" yesterday, the OSS-Fuzz back end hasn't yet retested and cleared the issue.  I'd love to know when I can expect that to happen.\n\nThis is *not* a high-risk security issue, as it only affects an incorrect usage of tjLoadImage().  More specifically, the crash occurs only when attempting to load a 16-bit RGB PPM file into an image buffer that the caller forces to be grayscale (by setting *pixelFormat=TJPF_GRAYSCALE rather than TJPF_UNKNOWN.)  That use case is not expected to work and never has worked.  No sane application would ever do that when loading an arbitrary PPM file (PPM files, as opposed to PGM files, are RGB by definition), and no known application does do that.  Not even the libjpeg-turbo test programs were able to reproduce this issue, so it should be regarded as an API usability concern (the TurboJPEG API library should throw an error rather than crashing if the caller accidentally does something stupid.)  There is no known real-world impact.\n"
            },
            {
                "projectName": "oss-fuzz",
                "localId": 32964,
                "sequenceNum": 3,
                "commenter": {
                    "userId": "382749006",
                    "displayName": "ClusterFuzz-External"
                },
                "timestamp": 1617808864,
                "content": "ClusterFuzz testcase 6618589424648192 is verified as fixed in https://oss-fuzz.com/revisions?job=honggfuzz_asan_libjpeg-turbo&range=202104060609:202104070621\n\nIf this is incorrect, please file a bug on https://github.com/google/oss-fuzz/issues/new",
                "amendments": [
                    {
                        "fieldName": "Status",
                        "newOrDeltaValue": "Verified",
                        "oldValue": "New"
                    },
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "ClusterFuzz-Verified"
                    }
                ]
            },
            {
                "projectName": "oss-fuzz",
                "localId": 32964,
                "sequenceNum": 4,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1617821565,
                "content": "This bug has been fixed. It has been opened to the public.\n\n- Your friendly Sheriffbot",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-restrict-view-commit"
                    }
                ]
            }
        ]
    },
    "fix_commit": "f35fd27ec641c42d6b115bfa595e483ec58188d2",
    "repo_addr": "https://github.com/libjpeg-turbo/libjpeg-turbo"
}