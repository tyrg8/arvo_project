{
    "fix": "https://github.com/libexpat/libexpat/commit/56b64ca0406d31f0a8cd93e155c38a3b30b002f8",
    "verify": "0",
    "localId": 3233,
    "project": "expat",
    "fuzzer": "libfuzzer",
    "sanitizer": "msan",
    "crash_type": "Use-of-uninitialized-value",
    "severity": "Medium",
    "report": {
        "comments": [
            {
                "projectName": "oss-fuzz",
                "localId": 3233,
                "commenter": {
                    "userId": "382749006",
                    "displayName": "ClusterFuzz-External"
                },
                "timestamp": 1504080090,
                "content": "Detailed report: https://oss-fuzz.com/testcase?key=4629672333672448\n\nProject: expat\nFuzzer: libFuzzer_expat_parse_UTF_8_fuzzer\nFuzz target binary: parse_UTF_8_fuzzer\nJob Type: libfuzzer_msan_expat_untrusted\nPlatform Id: linux\n\nCrash Type: Use-of-uninitialized-value\nCrash Address: \nCrash State:\n  lookup\n  doProlog\n  prologProcessor\n  \nSanitizer: memory (MSAN)\n\nRecommended Security Severity: Medium\n\nRegressed: https://oss-fuzz.com/revisions?job=libfuzzer_msan_expat_untrusted&range=201706071619:201706081621\n\nReproducer Testcase: https://oss-fuzz.com/download?testcase_id=4629672333672448\n\nIssue filed automatically.\n\nSee https://github.com/google/oss-fuzz/blob/master/docs/reproducing.md for more information.\n\nThis bug is subject to a 90 day disclosure deadline. If 90 days elapse\nwithout an upstream patch, then the bug report will automatically\nbecome visible to the public.\n\nWhen you fix this bug, please\n  * mention the fix revision(s).\n  * state whether the bug was a short-lived regression or an old bug in any stable releases.\n  * add any other useful information.\nThis information can help downstream consumers.\n\nIf you have questions for the OSS-Fuzz team, please file an issue at https://github.com/google/oss-fuzz/issues.",
                "descriptionNum": 1
            },
            {
                "projectName": "oss-fuzz",
                "localId": 3233,
                "sequenceNum": 1,
                "commenter": {
                    "userId": "382749006",
                    "displayName": "ClusterFuzz-External"
                },
                "timestamp": 1504085237,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "OS-Linux"
                    }
                ]
            },
            {
                "projectName": "oss-fuzz",
                "localId": 3233,
                "sequenceNum": 2,
                "commenter": {
                    "userId": "1894634752",
                    "displayName": "webma...@hartwork.org"
                },
                "timestamp": 1504117285,
                "content": "Hi!\r\n\r\nI have trouble reproducing this case using the file downloaded from the report, Clang 4.0 memory sanitizer, and the C code attached.  I don't see anything in the commits mentioned and a quick code review doesn't reveal uninitialized variables for mentioned line \"table->v[i] = (NAMED *)table->mem->malloc_fcn(createSize);\" either.  Please help.\r\n\r\nThanks and best, Sebastian",
                "attachments": [
                    {
                        "attachmentId": "300117",
                        "filename": "expat_fuzz_3233.c",
                        "size": "1637",
                        "contentType": "text/plain",
                        "viewUrl": "/p/oss-fuzz/issues/attachmentText?aid=300117",
                        "downloadUrl": "attachment?aid=300117&signed_aid=Rq6j0dhRZNwi5g-n74taZA=="
                    }
                ]
            },
            {
                "projectName": "oss-fuzz",
                "localId": 3233,
                "sequenceNum": 3,
                "commenter": {
                    "userId": "71439148",
                    "displayName": "kcc@google.com"
                },
                "timestamp": 1504131509,
                "content": "Hi, \r\n\r\nThis is what I've done manually to reproduce the bug:\r\n\r\npython infra/helper.py build_image expat\r\npython infra/helper.py build_fuzzers --sanitizer memory  expat\r\npython infra/helper.py build_fuzzers shell expat\r\n# Inside the docker shell:\r\necho PCFET0NUWVBFCnUKUFVCTElDCgoKIj1VJyQzIg== | base64 -d > INPUT && /out/parse_UTF_8_fuzzer INPUT\r\n\r\n==18==WARNING: MemorySanitizer: use-of-uninitialized-value\r\n    #0 0x57cba9 in lookup /src/expat/expat/lib/xmlparse.c:6773:15\r\n    #1 0x574871 in doProlog /src/expat/expat/lib/xmlparse.c:4464:30\r\n    #2 0x56c58b in prologProcessor /src/expat/expat/lib/xmlparse.c:4319:10\r\n\r\nThe same bug reproduces if I just run \r\n/out/parse_UTF_8_fuzzer \r\n\r\n\r\nRemember, msan is tricky: it needs to see everything. If there is inline assembly or an uninstrumented third_party library involved it may produce false positives. \r\n\r\nI guess that the code that initializes entropy in generate_hash_secret_salt is unfriendly to msan. \r\n\r\nOne way to fix it is to just initialize entropy to zero at the top of generate_hash_secret_salt. \r\n\r\nAlso, is the randomness actually used somewhere in expat? \r\nI.e. can it cause expat to behave differently on the same inputs?\r\nThat might be bad for fuzzing. \r\n \r\nFinally: we do not guarantee to answer your questions in this bug tracker. \r\nIf you need to contact the oss-fuzz team, please open an issue at  https://github.com/google/oss-fuzz/issues\r\n\r\nThanks!"
            },
            {
                "projectName": "oss-fuzz",
                "localId": 3233,
                "sequenceNum": 4,
                "commenter": {
                    "userId": "1894634752",
                    "displayName": "webma...@hartwork.org"
                },
                "timestamp": 1504134278,
                "content": "Created an oss-fuzz ticket now as requested: https://github.com/google/oss-fuzz/issues/806"
            },
            {
                "projectName": "oss-fuzz",
                "localId": 3233,
                "sequenceNum": 5,
                "commenter": {
                    "userId": "382749006",
                    "displayName": "ClusterFuzz-External"
                },
                "timestamp": 1504854372,
                "content": "ClusterFuzz has detected this issue as fixed in range 201709070517:201709080517.\n\nDetailed report: https://oss-fuzz.com/testcase?key=4629672333672448\n\nProject: expat\nFuzzer: libFuzzer_expat_parse_UTF_8_fuzzer\nFuzz target binary: parse_UTF_8_fuzzer\nJob Type: libfuzzer_msan_expat\nPlatform Id: linux\n\nCrash Type: Use-of-uninitialized-value\nCrash Address: \nCrash State:\n  lookup\n  doProlog\n  prologProcessor\n  \nSanitizer: memory (MSAN)\n\nRecommended Security Severity: Medium\n\nRegressed: https://oss-fuzz.com/revisions?job=libfuzzer_msan_expat&range=201706071619:201706081621\nFixed: https://oss-fuzz.com/revisions?job=libfuzzer_msan_expat&range=201709070517:201709080517\n\nReproducer Testcase: https://oss-fuzz.com/download?testcase_id=4629672333672448\n\nSee https://github.com/google/oss-fuzz/blob/master/docs/reproducing.md for more information.\n\nIf you suspect that the result above is incorrect, try re-doing that job on the test case report page."
            },
            {
                "projectName": "oss-fuzz",
                "localId": 3233,
                "sequenceNum": 6,
                "commenter": {
                    "userId": "382749006",
                    "displayName": "ClusterFuzz-External"
                },
                "timestamp": 1504856041,
                "content": "ClusterFuzz testcase 4629672333672448 is verified as fixed, so closing issue as verified.\n\nIf this is incorrect, please file a bug on https://github.com/google/oss-fuzz/issues/new",
                "amendments": [
                    {
                        "fieldName": "Status",
                        "newOrDeltaValue": "Verified",
                        "oldValue": "New"
                    },
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "ClusterFuzz-Verified"
                    }
                ]
            },
            {
                "projectName": "oss-fuzz",
                "localId": 3233,
                "sequenceNum": 7,
                "commenter": {
                    "userId": "4164592774",
                    "displayName": "sheriffbot@chromium.org"
                },
                "timestamp": 1507467929,
                "content": "This bug has been fixed for 30 days. It has been opened to the public.\n\n- Your friendly Sheriffbot",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-restrict-view-commit"
                    }
                ]
            }
        ]
    },
    "fix_commit": "56b64ca0406d31f0a8cd93e155c38a3b30b002f8",
    "repo_addr": "https://github.com/libexpat/libexpat"
}