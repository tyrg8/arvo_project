{
    "fix": "https://skia.googlesource.com/skia.git/+/cbf66a22130a1fd13285bb65d3a0d7ee6b4e8ab3%5E%21/",
    "verify": "0",
    "localId": 6274,
    "project": "skia",
    "fuzzer": "libfuzzer",
    "sanitizer": "msan",
    "crash_type": "Use-of-uninitialized-value",
    "severity": "Medium",
    "report": {
        "comments": [
            {
                "projectName": "oss-fuzz",
                "localId": 6274,
                "commenter": {
                    "userId": "382749006",
                    "displayName": "ClusterFuzz-External"
                },
                "timestamp": 1518515834,
                "content": "Detailed report: https://oss-fuzz.com/testcase?key=5290020882612224\n\nProject: skia\nFuzzer: libFuzzer_skia_image_decode\nFuzz target binary: image_decode\nJob Type: libfuzzer_msan_skia\nPlatform Id: linux\n\nCrash Type: Use-of-uninitialized-value\nCrash Address: \nCrash State:\n  sse2::blit_row_s32a_opaque\n  Sprite_D32_S32::blitRect\n  SkDraw::drawBitmap\n  \nSanitizer: memory (MSAN)\n\nRecommended Security Severity: Medium\n\nRegressed: https://oss-fuzz.com/revisions?job=libfuzzer_msan_skia&range=201802120711:201802130706\n\nReproducer Testcase: https://oss-fuzz.com/download?testcase_id=5290020882612224\n\nIssue filed automatically.\n\nSee https://github.com/google/oss-fuzz/blob/master/docs/reproducing.md for more information.\n\nThis bug is subject to a 90 day disclosure deadline. If 90 days elapse\nwithout an upstream patch, then the bug report will automatically\nbecome visible to the public.\n\nWhen you fix this bug, please\n  * mention the fix revision(s).\n  * state whether the bug was a short-lived regression or an old bug in any stable releases.\n  * add any other useful information.\nThis information can help downstream consumers.\n\nIf you have questions for the OSS-Fuzz team, please file an issue at https://github.com/google/oss-fuzz/issues.",
                "descriptionNum": 1
            },
            {
                "projectName": "oss-fuzz",
                "localId": 6274,
                "sequenceNum": 1,
                "commenter": {
                    "userId": "382749006",
                    "displayName": "ClusterFuzz-External"
                },
                "timestamp": 1518516092,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "OS-Linux"
                    }
                ]
            },
            {
                "projectName": "oss-fuzz",
                "localId": 6274,
                "sequenceNum": 2,
                "commenter": {
                    "userId": "382749006",
                    "displayName": "ClusterFuzz-External"
                },
                "timestamp": 1518516093,
                "content": "This crash occurs very frequently on linux platform and is likely preventing the fuzzer image_decode from making much progress. Fixing this will allow more bugs to be found.\n\nIf this is incorrect, please file a bug on https://github.com/google/oss-fuzz/issues/new",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "Fuzz-Blocker"
                    }
                ]
            },
            {
                "projectName": "oss-fuzz",
                "localId": 6274,
                "sequenceNum": 3,
                "commenter": {
                    "userId": "2195585128",
                    "displayName": "kjlubick@chromium.org"
                },
                "timestamp": 1518531596,
                "content": "Leon, do you mind taking a look?  You can repro it in the Skia repo by building with MSAN.\r\n\r\nout/MSAN/fuzz -t image_decode -b ~/Downloads/image_decode-5290020882612224 \r\n\r\nUninitialized bytes in __msan_check_mem_is_initialized at offset 0 inside [0x720000000000, 128)\r\n==136335==WARNING: MemorySanitizer: use-of-uninitialized-value\r\n    #0 0x120454d in sk_msan_assert_initialized(void const*, void const*) /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../src/core/SkMSAN.h:24:9\r\n    #1 0x120454d in sse2::blit_row_s32a_opaque(unsigned int*, unsigned int const*, int, unsigned int) /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../src/opts/SkBlitRow_opts.h:83\r\n    #2 0x14935e2 in Sprite_D32_S32::blitRect(int, int, int, int) /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../src/core/SkSpriteBlitter_ARGB32.cpp:47:13\r\n    #3 0x1113255 in SkDraw::drawBitmap(SkBitmap const&, SkMatrix const&, SkRect const*, SkPaint const&) const /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../src/core/SkDraw.cpp:1263:17\r\n    #4 0x109229f in SkBitmapDevice::drawBitmap(SkBitmap const&, float, float, SkPaint const&) /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../src/core/SkBitmapDevice.cpp:233:18\r\n    #5 0x10fc349 in SkBaseDevice::drawImage(SkImage const*, float, float, SkPaint const&) /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../src/core/SkDevice.cpp:187:15\r\n    #6 0x1076465 in SkCanvas::onDrawImage(SkImage const*, float, float, SkPaint const*) /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../src/core/SkCanvas.cpp:2231:27\r\n    #7 0x1065af5 in SkCanvas::drawImage(SkImage const*, float, float, SkPaint const*) /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../src/core/SkCanvas.cpp:1763:11\r\n    #8 0xf16870 in SkCanvas::drawImage(sk_sp<SkImage> const&, float, float, SkPaint const*) /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../include/core/SkCanvas.h:1389:15\r\n    #9 0xf16870 in FuzzImage(sk_sp<SkData>) /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../fuzz/oss_fuzz/FuzzImage.cpp:27\r\n    #10 0xf101b4 in fuzz_img2(sk_sp<SkData>) /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../fuzz/fuzz.cpp:234:5\r\n    #11 0xf101b4 in fuzz_file(char const*) /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../fuzz/fuzz.cpp:130\r\n    #12 0xf0ee16 in main /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../fuzz/fuzz.cpp:90:16\r\n    #13 0x7f608ea732b0 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x202b0)\r\n    #14 0xe26029 in _start (/usr/local/google/home/kjlubick/skia/skia/out/MSAN/fuzz+0xe26029)\r\n\r\n  Uninitialized value was created by a heap allocation\r\n    #0 0xe47ae1 in __interceptor_malloc /tmp/tmpt5tVDi/llvm/projects/compiler-rt/lib/msan/msan_interceptors.cc:865\r\n    #1 0x180b390 in sk_malloc_flags(unsigned long, unsigned int) /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../src/ports/SkMemory_malloc.cpp:69:13\r\n    #2 0x12fb329 in sk_malloc_canfail(unsigned long) /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../include/private/SkMalloc.h:93:12\r\n    #3 0x12fb329 in SkBitmapCache::Alloc(SkBitmapCacheDesc const&, SkImageInfo const&, SkPixmap*) /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../src/core/SkBitmapCache.cpp:304\r\n    #4 0x1523377 in SkImage_Lazy::lockAsBitmap(SkBitmap*, SkImage::CachingHint, SkImageCacherator::CachedFormat, SkImageInfo const&, SkTransferFunctionBehavior) const /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../src/image/SkImage_Lazy.cpp:506:20\r\n    #5 0x15261df in SkImage_Lazy::getROPixels(SkBitmap*, SkColorSpace*, SkImage::CachingHint) const /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../src/image/SkImage_Lazy.cpp:579:18\r\n    #6 0x10fc2c8 in SkBaseDevice::drawImage(SkImage const*, float, float, SkPaint const&) /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../src/core/SkDevice.cpp:186:23\r\n    #7 0x1076465 in SkCanvas::onDrawImage(SkImage const*, float, float, SkPaint const*) /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../src/core/SkCanvas.cpp:2231:27\r\n    #8 0x1065af5 in SkCanvas::drawImage(SkImage const*, float, float, SkPaint const*) /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../src/core/SkCanvas.cpp:1763:11\r\n    #9 0xf16870 in SkCanvas::drawImage(sk_sp<SkImage> const&, float, float, SkPaint const*) /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../include/core/SkCanvas.h:1389:15\r\n    #10 0xf16870 in FuzzImage(sk_sp<SkData>) /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../fuzz/oss_fuzz/FuzzImage.cpp:27\r\n    #11 0xf101b4 in fuzz_img2(sk_sp<SkData>) /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../fuzz/fuzz.cpp:234:5\r\n    #12 0xf101b4 in fuzz_file(char const*) /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../fuzz/fuzz.cpp:130\r\n    #13 0xf0ee16 in main /usr/local/google/home/kjlubick/skia/skia/out/MSAN/../../fuzz/fuzz.cpp:90:16\r\n    #14 0x7f608ea732b0 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x202b0)\r\n\r\n(p.s. If you download the file and it gets mangled to a .txt file, don't worry - it's a known monorail bug: https://bugs.chromium.org/p/monorail/issues/detail?id=3490)",
                "amendments": [
                    {
                        "fieldName": "Cc",
                        "newOrDeltaValue": "scro...@google.com"
                    }
                ],
                "attachments": [
                    {
                        "attachmentId": "324634",
                        "filename": "image_decode-5023708264529920",
                        "size": "20",
                        "contentType": "text/plain",
                        "viewUrl": "/p/oss-fuzz/issues/attachmentText?aid=324634",
                        "downloadUrl": "attachment?aid=324634&signed_aid=uDnsRf1DpoGYM-a3mm54nw=="
                    }
                ]
            },
            {
                "projectName": "oss-fuzz",
                "localId": 6274,
                "sequenceNum": 4,
                "commenter": {
                    "userId": "1869659596",
                    "displayName": "scro...@google.com"
                },
                "timestamp": 1518533872,
                "content": "> (p.s. If you download the file and it gets mangled to a .txt file, don't worry\r\n> - it's a known monorail bug:\r\n> https://bugs.chromium.org/p/monorail/issues/detail?id=3490)\r\n\r\nIs the file still the correct file, with the wrong extension/name? I tested using the (mangled) file, and SkImage::MakeFromEncoded correctly returns null. The test checks for this and returns before ever reaching the draw call on line 27, which shows up in the stack trace."
            },
            {
                "projectName": "oss-fuzz",
                "localId": 6274,
                "sequenceNum": 5,
                "commenter": {
                    "userId": "2195585128",
                    "displayName": "kjlubick@chromium.org"
                },
                "timestamp": 1518534511,
                "content": "Darn, I attached the wrong file.  This one crashes at ToT for me.",
                "attachments": [
                    {
                        "attachmentId": "324639",
                        "filename": "image_decode-5290020882612224",
                        "size": "45",
                        "contentType": "text/plain",
                        "viewUrl": "/p/oss-fuzz/issues/attachmentText?aid=324639",
                        "downloadUrl": "attachment?aid=324639&signed_aid=JJ71VXY0P0fLhtzsjDqQ-g=="
                    }
                ]
            },
            {
                "projectName": "oss-fuzz",
                "localId": 6274,
                "sequenceNum": 6,
                "commenter": {
                    "userId": "2320805031",
                    "displayName": "aarya@google.com"
                },
                "timestamp": 1518535281,
                "content": " kjlubick@, you can add some skia folks to project.yaml file, then dont have to worry about attaching files to bug. they can all download using links in c#0, like https://oss-fuzz.com/download?testcase_id=5290020882612224"
            },
            {
                "projectName": "oss-fuzz",
                "localId": 6274,
                "sequenceNum": 7,
                "commenter": {
                    "userId": "1869659596",
                    "displayName": "scro...@google.com"
                },
                "timestamp": 1518539841,
                "content": "Ok, reproduces  with attachment in #5. I have uploaded a fix at https://skia-review.googlesource.com/c/skia/+/106964\r\n\r\n(I'm unable to assign this bug to me, or set its status to started, or I would make those changes.)"
            },
            {
                "projectName": "oss-fuzz",
                "localId": 6274,
                "sequenceNum": 8,
                "commenter": {
                    "userId": "1869659596",
                    "displayName": "scro...@google.com"
                },
                "timestamp": 1518540012,
                "content": "Oh, and this is an existing bug in stable releases. For Android, this would occur since we switched to SkGifImageReader, which is either in N or O. The result would be drawing from uninitialized memory. Due to the way Android allocate memory for images, this would either be memory that was previously zero-initialized outside of this code, or a prior Bitmap."
            },
            {
                "projectName": "oss-fuzz",
                "localId": 6274,
                "sequenceNum": 9,
                "commenter": {
                    "userId": "3275348242",
                    "displayName": "bugdroid1@chromium.org"
                },
                "timestamp": 1518802034,
                "content": "The following revision refers to this bug:\n  https://skia.googlesource.com/skia/+/cbf66a22130a1fd13285bb65d3a0d7ee6b4e8ab3\n\ncommit cbf66a22130a1fd13285bb65d3a0d7ee6b4e8ab3\nAuthor: Leon Scroggins III <scroggo@google.com>\nDate: Fri Feb 16 17:26:56 2018\n\nEnsure all rows of a gif are initialized\n\nBug: oss-fuzz:6274\n\nEven if a frame does not have enough LZW blocks to decode all rows,\n(which is unknown until we actually decode them), it is marked complete\nonce there are no more LZW blocks.\n\nWhen decoding, even if we've decoded all LZW blocks, check fRowsDecoded\nto determine whether we've actually all the rows. Report the number of\nrows decoded so that SkCodec can fill in the remaining ones.\n\nChange-Id: I1d6e0c29e3c37649725836cf24a4a239e3266b76\nReviewed-on: https://skia-review.googlesource.com/106964\nCommit-Queue: Leon Scroggins <scroggo@google.com>\nReviewed-by: Mike Klein <mtklein@google.com>\n\n[add] https://crrev.com/cbf66a22130a1fd13285bb65d3a0d7ee6b4e8ab3/resources/invalid_images/ossfuzz6274.gif\n[modify] https://crrev.com/cbf66a22130a1fd13285bb65d3a0d7ee6b4e8ab3/src/codec/SkGifCodec.cpp\n[modify] https://crrev.com/cbf66a22130a1fd13285bb65d3a0d7ee6b4e8ab3/tests/CodecTest.cpp\n"
            },
            {
                "projectName": "oss-fuzz",
                "localId": 6274,
                "sequenceNum": 10,
                "commenter": {
                    "userId": "382749006",
                    "displayName": "ClusterFuzz-External"
                },
                "timestamp": 1518854529,
                "content": "ClusterFuzz has detected this issue as fixed in range 201802160709:201802170712.\n\nDetailed report: https://oss-fuzz.com/testcase?key=5290020882612224\n\nProject: skia\nFuzzer: libFuzzer_skia_image_decode\nFuzz target binary: image_decode\nJob Type: libfuzzer_msan_skia\nPlatform Id: linux\n\nCrash Type: Use-of-uninitialized-value\nCrash Address: \nCrash State:\n  sse2::blit_row_s32a_opaque\n  Sprite_D32_S32::blitRect\n  SkDraw::drawBitmap\n  \nSanitizer: memory (MSAN)\n\nRecommended Security Severity: Medium\n\nRegressed: https://oss-fuzz.com/revisions?job=libfuzzer_msan_skia&range=201802120711:201802130706\nFixed: https://oss-fuzz.com/revisions?job=libfuzzer_msan_skia&range=201802160709:201802170712\n\nReproducer Testcase: https://oss-fuzz.com/download?testcase_id=5290020882612224\n\nSee https://github.com/google/oss-fuzz/blob/master/docs/reproducing.md for more information.\n\nIf you suspect that the result above is incorrect, try re-doing that job on the test case report page."
            },
            {
                "projectName": "oss-fuzz",
                "localId": 6274,
                "sequenceNum": 11,
                "commenter": {
                    "userId": "382749006",
                    "displayName": "ClusterFuzz-External"
                },
                "timestamp": 1518855081,
                "content": "ClusterFuzz testcase 5290020882612224 is verified as fixed, so closing issue as verified.\n\nIf this is incorrect, please file a bug on https://github.com/google/oss-fuzz/issues/new",
                "amendments": [
                    {
                        "fieldName": "Status",
                        "newOrDeltaValue": "Verified",
                        "oldValue": "New"
                    },
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "ClusterFuzz-Verified"
                    }
                ]
            },
            {
                "projectName": "oss-fuzz",
                "localId": 6274,
                "sequenceNum": 12,
                "commenter": {
                    "userId": "4164592774",
                    "displayName": "sheriffbot@chromium.org"
                },
                "timestamp": 1521472917,
                "content": "This bug has been fixed for 30 days. It has been opened to the public.\n\n- Your friendly Sheriffbot",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-restrict-view-commit"
                    }
                ]
            }
        ]
    },
    "fix_commit": "cbf66a22130a1fd13285bb65d3a0d7ee6b4e8ab3",
    "repo_addr": "https://skia.googlesource.com/skia.git"
}