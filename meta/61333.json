{
    "fix": "https://gitlab.gnome.org/GNOME/libxslt.gitf86c64b6d5a11eef881f08a64627df6a8c77febb",
    "verify": "0",
    "localId": 61333,
    "project": "libxslt",
    "fuzzer": "libfuzzer",
    "sanitizer": "msan",
    "crash_type": "Use-of-uninitialized-value",
    "severity": "Medium",
    "report": {
        "comments": [
            {
                "projectName": "oss-fuzz",
                "localId": 61333,
                "commenter": {
                    "userId": "382749006",
                    "displayName": "ClusterFuzz-External"
                },
                "timestamp": 1691596147,
                "content": "Detailed Report: https://oss-fuzz.com/testcase?key=4994680088297472\n\nProject: libxslt\nFuzzing Engine: libFuzzer\nFuzz Target: xslt\nJob Type: libfuzzer_msan_libxslt\nPlatform Id: linux\n\nCrash Type: Use-of-uninitialized-value\nCrash Address: \nCrash State:\n  xmlDetectEncoding\n  xmlParseExternalEntityPrivate\n  xmlParseReference\n  \nSanitizer: memory (MSAN)\n\nRecommended Security Severity: Medium\n\nRegressed: https://oss-fuzz.com/revisions?job=libfuzzer_msan_libxslt&range=202308080639:202308090606\n\nReproducer Testcase: https://oss-fuzz.com/download?testcase_id=4994680088297472\n\nIssue filed automatically.\n\nSee https://google.github.io/oss-fuzz/advanced-topics/reproducing for instructions to reproduce this bug locally.\nWhen you fix this bug, please\n  * mention the fix revision(s).\n  * state whether the bug was a short-lived regression or an old bug in any stable releases.\n  * add any other useful information.\nThis information can help downstream consumers.\n\nIf you need to contact the OSS-Fuzz team with a question, concern, or any other feedback, please file an issue at https://github.com/google/oss-fuzz/issues. Comments on individual Monorail issues are not monitored.\n\nThis bug is subject to a 90 day disclosure deadline. If 90 days elapse\nwithout an upstream patch, then the bug report will automatically\nbecome visible to the public.",
                "descriptionNum": 1
            },
            {
                "projectName": "oss-fuzz",
                "localId": 61333,
                "sequenceNum": 1,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1691607980,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "Disclosure-2023-11-07"
                    }
                ]
            },
            {
                "projectName": "oss-fuzz",
                "localId": 61333,
                "sequenceNum": 2,
                "commenter": {
                    "userId": "1373012459",
                    "displayName": "ddkil...@apple.com"
                },
                "timestamp": 1691869782,
                "content": "The buffer allocation happens here at the end of `xmlFuzzMalloc()`:\n\n```\n    [...]\n    return malloc(size);\n}\n```\n<https://gitlab.gnome.org/GNOME/libxslt/blob/cc9627b41d40f543cde1c6224b197584ac97e3ad/tests/fuzz/fuzz.c#L423>\n\n\nThe uninitialized read happens in `xmlDetectEncoding()`:\n\n```\n    [...]\n    switch (in[0]) {\n        case 0x00:\n            if ((in[1] == 0x00) && (in[2] == 0x00) && (in[3] == 0x3C)) {   // Uninitialized read at in[1].\n                [...]\n```\n<https://gitlab.gnome.org/GNOME/libxml2/blob/5db5a704eb6b030e6bebec9d358d739f1eb24fed/parserInternals.c#L1498>\n\n\nMaybe `xmlFuzzMalloc()` should use `calloc(1, size)` instead of `malloc(size)` to ensure the entire buffer is initialized?\n\nOtherwise it needs to initialize the first four bytes of the buffer for BOM checks:\n\n```\n    [...]\n    return memset(malloc(size), 0, (size > 4 ? 4 : size)));\n}\n```\n"
            },
            {
                "projectName": "oss-fuzz",
                "localId": 61333,
                "sequenceNum": 3,
                "commenter": {
                    "userId": "382749006",
                    "displayName": "ClusterFuzz-External"
                },
                "timestamp": 1692116278,
                "content": "ClusterFuzz testcase 4994680088297472 is verified as fixed in https://oss-fuzz.com/revisions?job=libfuzzer_msan_libxslt&range=202308140609:202308150604\n\nIf this is incorrect, please file a bug on https://github.com/google/oss-fuzz/issues/new",
                "amendments": [
                    {
                        "fieldName": "Status",
                        "newOrDeltaValue": "Verified",
                        "oldValue": "New"
                    },
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "ClusterFuzz-Verified"
                    }
                ]
            },
            {
                "projectName": "oss-fuzz",
                "localId": 61333,
                "sequenceNum": 4,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1692126064,
                "content": "This bug has been fixed. It has been opened to the public.\n\n- Your friendly Sheriffbot",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-restrict-view-commit"
                    }
                ]
            }
        ]
    },
    "fix_commit": "f86c64b6d5a11eef881f08a64627df6a8c77febb",
    "repo_addr": "https://gitlab.gnome.org/GNOME/libxslt.git"
}