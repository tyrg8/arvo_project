commit fce5d5e906f49c988106aeaae88ed6b6ce3e0a2a
Merge: e6d1cf4a9 fd66f3a63
Author: eugene7646 <elivis@basistech.com>
Date:   Wed Aug 17 14:15:01 2022 -0400

    Merge pull request #2669 from msuhanov/develop
    
    Fix the issue #2663.

diff --git a/tsk/fs/fatfs_utils.c b/tsk/fs/fatfs_utils.c
index 42e7fe57d..9495ac923 100755
--- a/tsk/fs/fatfs_utils.c
+++ b/tsk/fs/fatfs_utils.c
@@ -137,72 +137,72 @@ time_t
 fatfs_dos_2_unix_time(uint16_t date, uint16_t time, uint8_t timetens)
 {
     struct tm tm1;
     time_t ret;
 
     if (date == 0)
         return 0;
 
     memset(&tm1, 0, sizeof(struct tm));
 
     tm1.tm_sec = ((time & FATFS_SEC_MASK) >> FATFS_SEC_SHIFT) * 2;
     if ((tm1.tm_sec < 0) || (tm1.tm_sec > 60))
         tm1.tm_sec = 0;
 
     /* The ctimetens value has a range of 0 to 199 */
-    if (timetens > 100)
+    if (timetens >= 100)
         tm1.tm_sec++;
 
     tm1.tm_min = ((time & FATFS_MIN_MASK) >> FATFS_MIN_SHIFT);
     if ((tm1.tm_min < 0) || (tm1.tm_min > 59))
         tm1.tm_min = 0;
 
     tm1.tm_hour = ((time & FATFS_HOUR_MASK) >> FATFS_HOUR_SHIFT);
     if ((tm1.tm_hour < 0) || (tm1.tm_hour > 23))
         tm1.tm_hour = 0;
 
     tm1.tm_mday = ((date & FATFS_DAY_MASK) >> FATFS_DAY_SHIFT);
     if ((tm1.tm_mday < 1) || (tm1.tm_mday > 31))
         tm1.tm_mday = 0;
 
     tm1.tm_mon = ((date & FATFS_MON_MASK) >> FATFS_MON_SHIFT) - 1;
     if ((tm1.tm_mon < 0) || (tm1.tm_mon > 11))
         tm1.tm_mon = 0;
 
     /* There is a limit to the year because the UNIX time value is
      * a 32-bit value
      * the maximum UNIX time is Tue Jan 19 03:14:07 2038 */
     tm1.tm_year = ((date & FATFS_YEAR_MASK) >> FATFS_YEAR_SHIFT) + 80;
     if ((tm1.tm_year < 0) || (tm1.tm_year > 137))
         tm1.tm_year = 0;
 
     /* set the daylight savings variable to -1 so that mktime() figures
      * it out */
     tm1.tm_isdst = -1;
 
     ret = mktime(&tm1);
 
     if (ret < 0) {
         if (tsk_verbose)
             tsk_fprintf(stderr,
                 "fatfs_dos_2_unix_time: Error running mktime() on: %d:%d:%d %d/%d/%d\n",
                 ((time & FATFS_HOUR_MASK) >> FATFS_HOUR_SHIFT),
                 ((time & FATFS_MIN_MASK) >> FATFS_MIN_SHIFT),
                 ((time & FATFS_SEC_MASK) >> FATFS_SEC_SHIFT) * 2,
                 ((date & FATFS_MON_MASK) >> FATFS_MON_SHIFT) - 1,
                 ((date & FATFS_DAY_MASK) >> FATFS_DAY_SHIFT),
                 ((date & FATFS_YEAR_MASK) >> FATFS_YEAR_SHIFT) + 80);
         return 0;
     }
 
     return ret;
 }
 
 /**
  * \internal
  * Converts the tenths of seconds part a DOS time stamp into nanoseconds.
  * of a date with the year specified as an offset from 1980. A UNIX time stamp
  * is seconds since January 1, 1970 in UTC.
  *
  * @param timetens Tenths of seconds part of a DOS time stamp, range is 0-199.
  * @return A duration in nanoseconds.
  */
