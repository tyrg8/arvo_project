commit 51a9f487ae2a12fa51db916315c88e6f38adca15
Author: Paul B Mahol <onemda@gmail.com>
Date:   Wed Feb 17 17:19:55 2021 +0100

    avformat: add Simbiosis IMX demuxer

diff --git a/Changelog b/Changelog
index 3067d951ed..ba5aebf79d 100644
--- a/Changelog
+++ b/Changelog
@@ -4,78 +4,79 @@ releases are sorted from youngest to oldest.
 version <next>:
 - AudioToolbox output device
 - MacCaption demuxer
 - PGX decoder
 - chromanr video filter
 - VDPAU accelerated HEVC 10/12bit decoding
 - ADPCM IMA Ubisoft APM encoder
 - Rayman 2 APM muxer
 - AV1 encoding support SVT-AV1
 - Cineform HD encoder
 - ADPCM Argonaut Games encoder
 - Argonaut Games ASF muxer
 - AV1 Low overhead bitstream format demuxer
 - RPZA video encoder
 - ADPCM IMA MOFLEX decoder
 - MobiClip FastAudio decoder
 - MobiClip video decoder
 - MOFLEX demuxer
 - MODS demuxer
 - PhotoCD decoder
 - MCA demuxer
 - AV1 decoder (Hardware acceleration used only)
 - SVS demuxer
 - Argonaut Games BRP demuxer
 - DAT demuxer
 - aax demuxer
 - IPU decoder, parser and demuxer
 - Intel QSV-accelerated AV1 decoding
 - Argonaut Games Video decoder
 - libwavpack encoder removed
 - ACE demuxer
 - AVS3 demuxer
 - AVS3 video decoder via libuavs3d
 - Cintel RAW decoder
 - VDPAU accelerated VP9 10/12bit decoding
 - afreqshift and aphaseshift filters
 - High Voltage Software ADPCM encoder
 - LEGO Racers ALP (.tun & .pcm) muxer
 - AV1 VAAPI decoder
 - adenorm filter
 - ADPCM IMA AMV encoder
 - AMV muxer
 - NVDEC AV1 hwaccel
 - DXVA2/D3D11VA hardware accelerated AV1 decoding
 - speechnorm filter
 - SpeedHQ encoder
 - asupercut filter
 - asubcut filter
 - Microsoft Paint (MSP) version 2 decoder
 - Microsoft Paint (MSP) demuxer
 - AV1 monochrome encoding support via libaom >= 2.0.1
 - asuperpass and asuperstop filter
 - shufflepixels filter
 - tmidequalizer filter
 - estdif filter
 - epx filter
 - Dolby E parser
 - shear filter
 - kirsch filter
 - colortemperature filter
 - colorcontrast filter
 - PFM encoder
 - colorcorrect filter
 - binka demuxer
 - XBM parser
 - xbm_pipe demuxer
 - colorize filter
 - CRI parser
 - aexciter audio filter
 - exposure video filter
 - monochrome video filter
 - setts bitstream filter
 - vif video filter
 - OpenEXR image encoder
 - Simbiosis IMX decoder
+- Simbiosis IMX demuxer
 
 
 version 4.3:
diff --git a/libavformat/Makefile b/libavformat/Makefile
index 10fee749c8..fcb39ce133 100644
--- a/libavformat/Makefile
+++ b/libavformat/Makefile
@@ -504,6 +504,7 @@ OBJS-$(CONFIG_SEGMENT_MUXER)             += segment.o
 OBJS-$(CONFIG_SER_DEMUXER)               += serdec.o
 OBJS-$(CONFIG_SHORTEN_DEMUXER)           += shortendec.o rawdec.o
 OBJS-$(CONFIG_SIFF_DEMUXER)              += siff.o
+OBJS-$(CONFIG_SIMBIOSIS_IMX_DEMUXER)     += imx.o
 OBJS-$(CONFIG_SINGLEJPEG_MUXER)          += rawenc.o
 OBJS-$(CONFIG_SLN_DEMUXER)               += pcmdec.o pcm.o
 OBJS-$(CONFIG_SMACKER_DEMUXER)           += smacker.o
diff --git a/libavformat/allformats.c b/libavformat/allformats.c
index f837ddabc8..3b69423508 100644
--- a/libavformat/allformats.c
+++ b/libavformat/allformats.c
@@ -403,6 +403,7 @@ extern AVOutputFormat ff_stream_segment_muxer;
 extern AVInputFormat  ff_ser_demuxer;
 extern AVInputFormat  ff_shorten_demuxer;
 extern AVInputFormat  ff_siff_demuxer;
+extern AVInputFormat  ff_simbiosis_imx_demuxer;
 extern AVOutputFormat ff_singlejpeg_muxer;
 extern AVInputFormat  ff_sln_demuxer;
 extern AVInputFormat  ff_smacker_demuxer;
diff --git a/libavformat/imx.c b/libavformat/imx.c
new file mode 100644
index 0000000000..66f18177a5
--- /dev/null
+++ b/libavformat/imx.c
@@ -0,0 +1,160 @@
+/*
+ * Simbiosis game demuxer
+ *
+ * Copyright (C) 2021 Paul B Mahol
+ *
+ * This file is part of FFmpeg.
+ *
+ * FFmpeg is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * FFmpeg is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with FFmpeg; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+
+#include "avformat.h"
+#include "internal.h"
+#include "libavutil/intreadwrite.h"
+#include "libavutil/avassert.h"
+#include "libavutil/internal.h"
+#include "argo_asf.h"
+
+#define IMX_TAG MKTAG('I', 'M', 'A', 'X')
+
+typedef struct SimbiosisIMXDemuxContext {
+    uint8_t pal[AVPALETTE_SIZE];
+    int pal_changed;
+} SimbiosisIMXDemuxContext;
+
+static int simbiosis_imx_probe(const AVProbeData *p)
+{
+    if (AV_RL32(p->buf) != IMX_TAG)
+        return 0;
+    if (AV_RN32(p->buf+4) == 0)
+        return 0;
+    if (AV_RN16(p->buf+8) == 0)
+        return 0;
+    if (AV_RL16(p->buf+10) != 0x102)
+        return 0;
+
+    return AVPROBE_SCORE_EXTENSION + 10;
+}
+
+static int simbiosis_imx_read_header(AVFormatContext *s)
+{
+    AVIOContext *pb = s->pb;
+    AVStream *vst, *ast;
+    int rate;
+
+    vst = avformat_new_stream(s, NULL);
+    ast = avformat_new_stream(s, NULL);
+    if (!vst || !ast)
+        return AVERROR(ENOMEM);
+
+    avio_skip(pb, 4);
+
+    vst->codecpar->codec_type = AVMEDIA_TYPE_VIDEO;
+    vst->codecpar->codec_tag  = 0;
+    vst->codecpar->format     = AV_PIX_FMT_PAL8;
+    vst->codecpar->codec_id   = AV_CODEC_ID_SIMBIOSIS_IMX;
+    vst->start_time = 0;
+    vst->nb_frames = avio_rl32(pb);
+    rate = avio_rl16(pb);
+    avio_skip(pb, 12);
+
+    avpriv_set_pts_info(vst, 64, 1, rate);
+
+    ast->codecpar->codec_type = AVMEDIA_TYPE_AUDIO;
+    ast->codecpar->codec_tag  = 0;
+    ast->codecpar->codec_id   = AV_CODEC_ID_PCM_U8;
+    ast->codecpar->channels   = 1;
+    ast->codecpar->channel_layout = AV_CH_LAYOUT_MONO;
+    ast->codecpar->sample_rate = 22050;
+    ast->start_time = 0;
+
+    avpriv_set_pts_info(ast, 64, 1, 22050);
+
+    return 0;
+}
+
+static int simbiosis_imx_read_packet(AVFormatContext *s, AVPacket *pkt)
+{
+    AVIOContext *pb = s->pb;
+    SimbiosisIMXDemuxContext *imx = s->priv_data;
+    uint32_t chunk_size, chunk_type;
+    int64_t pos = avio_tell(pb);
+    int ret, idx = -1;
+
+retry:
+    if (avio_feof(pb))
+        return AVERROR_EOF;
+
+    chunk_size = avio_rl32(pb);
+    chunk_type = avio_rl32(pb);
+
+    switch (chunk_type) {
+    case 0xAAFF:
+        return AVERROR_EOF;
+    case 0xAA99:
+        idx = 1;
+        break;
+    case 0xAA97:
+        idx = 0;
+        break;
+    case 0xAA98:
+        for (int i = 0; i < chunk_size / 3; i++) {
+            unsigned r = avio_r8(pb) << 18;
+            unsigned g = avio_r8(pb) << 10;
+            unsigned b = avio_r8(pb) <<  2;
+
+            AV_WL32(imx->pal + i * 4, (0xFFU << 24) | r | g | b);
+        }
+        imx->pal_changed = 1;
+        idx = -1;
+        break;
+    default:
+        return AVERROR_INVALIDDATA;
+    }
+
+    if (idx == -1)
+        goto retry;
+
+    ret = av_get_packet(pb, pkt, chunk_size);
+    if (ret < 0)
+        return ret;
+
+    if (imx->pal_changed && idx == 0) {
+        uint8_t *pal = av_packet_new_side_data(pkt, AV_PKT_DATA_PALETTE,
+                                               AVPALETTE_SIZE);
+        if (!pal)
+            return AVERROR(ENOMEM);
+        memcpy(pal, imx->pal, AVPALETTE_SIZE);
+        imx->pal_changed = 0;
+        pkt->flags |= AV_PKT_FLAG_KEY;
+    }
+
+    pkt->pos = pos;
+    pkt->stream_index = idx;
+    pkt->duration = idx ? chunk_size : 1;
+
+    return ret;
+}
+
+AVInputFormat ff_simbiosis_imx_demuxer = {
+    .name           = "simbiosis_imx",
+    .long_name      = NULL_IF_CONFIG_SMALL("Simbiosis Interactive IMX"),
+    .priv_data_size = sizeof(SimbiosisIMXDemuxContext),
+    .read_probe     = simbiosis_imx_probe,
+    .read_header    = simbiosis_imx_read_header,
+    .read_packet    = simbiosis_imx_read_packet,
+    .extensions     = "imx",
+    .flags          = AVFMT_GENERIC_INDEX,
+};
diff --git a/libavformat/version.h b/libavformat/version.h
index 3e92bfca4a..c11d885b83 100644
--- a/libavformat/version.h
+++ b/libavformat/version.h
@@ -1,114 +1,114 @@
 /*
  * Version macros.
  *
  * This file is part of FFmpeg.
  *
  * FFmpeg is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
  * License as published by the Free Software Foundation; either
  * version 2.1 of the License, or (at your option) any later version.
  *
  * FFmpeg is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  * Lesser General Public License for more details.
  *
  * You should have received a copy of the GNU Lesser General Public
  * License along with FFmpeg; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
  */
 
 #ifndef AVFORMAT_VERSION_H
 #define AVFORMAT_VERSION_H
 
 /**
  * @file
  * @ingroup libavf
  * Libavformat version macros
  */
 
 #include "libavutil/version.h"
 
 // Major bumping may affect Ticket5467, 5421, 5451(compatibility with Chromium)
 // Also please add any ticket numbers that you believe might be affected here
 #define LIBAVFORMAT_VERSION_MAJOR  58
-#define LIBAVFORMAT_VERSION_MINOR  67
+#define LIBAVFORMAT_VERSION_MINOR  68
 #define LIBAVFORMAT_VERSION_MICRO 100
 
 #define LIBAVFORMAT_VERSION_INT AV_VERSION_INT(LIBAVFORMAT_VERSION_MAJOR, \
                                                LIBAVFORMAT_VERSION_MINOR, \
                                                LIBAVFORMAT_VERSION_MICRO)
 #define LIBAVFORMAT_VERSION     AV_VERSION(LIBAVFORMAT_VERSION_MAJOR,   \
                                            LIBAVFORMAT_VERSION_MINOR,   \
                                            LIBAVFORMAT_VERSION_MICRO)
 #define LIBAVFORMAT_BUILD       LIBAVFORMAT_VERSION_INT
 
 #define LIBAVFORMAT_IDENT       "Lavf" AV_STRINGIFY(LIBAVFORMAT_VERSION)
 
 /**
  * FF_API_* defines may be placed below to indicate public API that will be
  * dropped at a future version bump. The defines themselves are not part of
  * the public API and may change, break or disappear at any time.
  *
  * @note, when bumping the major version it is recommended to manually
  * disable each FF_API_* in its own commit instead of disabling them all
  * at once through the bump. This improves the git bisect-ability of the change.
  *
  */
 #ifndef FF_API_COMPUTE_PKT_FIELDS2
 #define FF_API_COMPUTE_PKT_FIELDS2      (LIBAVFORMAT_VERSION_MAJOR < 59)
 #endif
 #ifndef FF_API_OLD_OPEN_CALLBACKS
 #define FF_API_OLD_OPEN_CALLBACKS       (LIBAVFORMAT_VERSION_MAJOR < 59)
 #endif
 #ifndef FF_API_LAVF_AVCTX
 #define FF_API_LAVF_AVCTX               (LIBAVFORMAT_VERSION_MAJOR < 59)
 #endif
 #ifndef FF_API_HTTP_USER_AGENT
 #define FF_API_HTTP_USER_AGENT          (LIBAVFORMAT_VERSION_MAJOR < 59)
 #endif
 #ifndef FF_API_HLS_WRAP
 #define FF_API_HLS_WRAP                 (LIBAVFORMAT_VERSION_MAJOR < 59)
 #endif
 #ifndef FF_API_HLS_USE_LOCALTIME
 #define FF_API_HLS_USE_LOCALTIME        (LIBAVFORMAT_VERSION_MAJOR < 59)
 #endif
 #ifndef FF_API_LAVF_KEEPSIDE_FLAG
 #define FF_API_LAVF_KEEPSIDE_FLAG       (LIBAVFORMAT_VERSION_MAJOR < 59)
 #endif
 #ifndef FF_API_OLD_ROTATE_API
 #define FF_API_OLD_ROTATE_API           (LIBAVFORMAT_VERSION_MAJOR < 59)
 #endif
 #ifndef FF_API_FORMAT_GET_SET
 #define FF_API_FORMAT_GET_SET           (LIBAVFORMAT_VERSION_MAJOR < 59)
 #endif
 #ifndef FF_API_OLD_AVIO_EOF_0
 #define FF_API_OLD_AVIO_EOF_0           (LIBAVFORMAT_VERSION_MAJOR < 59)
 #endif
 #ifndef FF_API_LAVF_FFSERVER
 #define FF_API_LAVF_FFSERVER            (LIBAVFORMAT_VERSION_MAJOR < 59)
 #endif
 #ifndef FF_API_FORMAT_FILENAME
 #define FF_API_FORMAT_FILENAME          (LIBAVFORMAT_VERSION_MAJOR < 59)
 #endif
 #ifndef FF_API_OLD_RTSP_OPTIONS
 #define FF_API_OLD_RTSP_OPTIONS         (LIBAVFORMAT_VERSION_MAJOR < 59)
 #endif
 #ifndef FF_API_NEXT
 #define FF_API_NEXT                     (LIBAVFORMAT_VERSION_MAJOR < 59)
 #endif
 #ifndef FF_API_DASH_MIN_SEG_DURATION
 #define FF_API_DASH_MIN_SEG_DURATION    (LIBAVFORMAT_VERSION_MAJOR < 59)
 #endif
 #ifndef FF_API_LAVF_MP4A_LATM
 #define FF_API_LAVF_MP4A_LATM           (LIBAVFORMAT_VERSION_MAJOR < 59)
 #endif
 #ifndef FF_API_AVIOFORMAT
 #define FF_API_AVIOFORMAT               (LIBAVFORMAT_VERSION_MAJOR < 59)
 #endif
 
 
 #ifndef FF_API_R_FRAME_RATE
 #define FF_API_R_FRAME_RATE            1
 #endif
 #endif /* AVFORMAT_VERSION_H */
