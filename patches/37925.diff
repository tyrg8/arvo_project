commit 202950bb01e225581fcacd865f80386322a6cee4
Author: Andreas Kling <kling@serenityos.org>
Date:   Sat Nov 6 22:16:50 2021 +0100

    AK: Make Error and ErrorOr<T> work in Lagom as well :^)
    
    ErrnoCode is not a thing outside __serenity__, so let's not make
    assumptions about it existing.

diff --git a/AK/Error.h b/AK/Error.h
index ba318e082d..bdc495f889 100644
--- a/AK/Error.h
+++ b/AK/Error.h
@@ -48,34 +48,36 @@ class [[nodiscard]] ErrorOr {
 public:
     ErrorOr(T const& value)
         : m_value(value)
     {
     }
 
     ErrorOr(T&& value)
         : m_value(move(value))
     {
     }
 
-    ErrorOr(ErrnoCode errno)
-        : m_error(Error::from_errno(errno))
+#ifdef __serenity__
+    ErrorOr(ErrnoCode code)
+        : m_error(Error::from_errno(code))
     {
     }
+#endif
 
     ErrorOr(Error&& error)
         : m_error(move(error))
     {
     }
 
     ErrorOr(ErrorOr&& other) = default;
     ErrorOr(ErrorOr const& other) = default;
     ~ErrorOr() = default;
 
     T& value() { return m_value.value(); }
     Error& error() { return m_error.value(); }
 
     bool is_error() const { return m_error.has_value(); }
 
     T release_value() { return m_value.release_value(); }
     Error release_error() { return m_error.release_value(); }
 
     T release_value_but_fixme_should_propagate_errors() { return release_value(); }
diff --git a/AK/RefPtr.h b/AK/RefPtr.h
index 7c56b287e8..db350b847f 100644
--- a/AK/RefPtr.h
+++ b/AK/RefPtr.h
@@ -352,9 +352,9 @@ template<typename T>
 inline ErrorOr<NonnullRefPtr<T>> adopt_nonnull_ref_or_enomem(T* object)
 {
     auto result = adopt_ref_if_nonnull(object);
     if (!result)
-        return ENOMEM;
+        return Error::from_errno(ENOMEM);
     return result.release_nonnull();
 }
 
 }
