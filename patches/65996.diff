commit 888dd230ddca688a41c147059fea0e6425847018
Merge: 12483c839 772f13520
Author: Yukihiro "Matz" Matsumoto <matz@ruby.or.jp>
Date:   Sat Jan 20 23:25:34 2024 +0900

    Merge pull request #6147 from dearblue/memsearch
    
    Fixed buffer overflow in `mrb_memsearch()`

diff --git a/src/string.c b/src/string.c
index e80f7fbff..eb1ca78c3 100644
--- a/src/string.c
+++ b/src/string.c
@@ -477,36 +477,36 @@ static mrb_int
 mrb_memsearch(const void *x0, mrb_int m, const void *y0, mrb_int n)
 {
   const unsigned char *x = (const unsigned char*)x0, *y = (const unsigned char*)y0;
 
   if (m > n) return -1;
   else if (m == n) {
     return memcmp(x0, y0, m) == 0 ? 0 : -1;
   }
   else if (m < 1) {
     return 0;
   }
   else if (m == 1) {
     const unsigned char *ys = (const unsigned char*)memchr(y, *x, n);
 
     if (ys)
       return (mrb_int)(ys - y);
     else
       return -1;
   }
   if (n + m < MRB_QS_SHORT_STRING_LENGTH) {
     const unsigned char *ys = (unsigned char*)y0;
     const unsigned char *y = ys;
     const unsigned char *ye = ys+n-m+1;
 
     for (;;) {
-      y = (const unsigned char*)memchr(y, x[0], (size_t)(ye-ys));
+      y = (const unsigned char*)memchr(y, x[0], (size_t)(ye-y));
       if (y == NULL) return -1;
       if (memcmp(x, y, m) == 0) {
         return (mrb_int)(y - ys);
       }
       y++;
     }
     return -1;
   }
   return mrb_memsearch_qs((const unsigned char*)x0, m, (const unsigned char*)y0, n);
 }
