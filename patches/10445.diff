commit 414c230b59643cf15914b7374a3b72ef00a07038
Author: Chen Huitao <h980501427@163.com>
Date:   Tue Apr 28 09:51:45 2020 +0800

    fix m68k func name (#1245)
    
    * fix finding python path which only has python3.
    
    * fix m68k func name.

diff --git a/qemu/target-m68k/helper.c b/qemu/target-m68k/helper.c
index 6bbdb312..3ecc496a 100644
--- a/qemu/target-m68k/helper.c
+++ b/qemu/target-m68k/helper.c
@@ -47,105 +47,102 @@ M68kCPU *cpu_m68k_init(struct uc_struct *uc, const char *cpu_model)
 void cpu_m68k_flush_flags(CPUM68KState *env, int cc_op)
 {
     M68kCPU *cpu = m68k_env_get_cpu(env);
     int flags;
     uint32_t src;
     uint32_t dest;
     uint32_t tmp;
 
 #define HIGHBIT 0x80000000u
 
 #define SET_NZ(x) do { \
     if ((x) == 0) \
         flags |= CCF_Z; \
     else if ((int32_t)(x) < 0) \
         flags |= CCF_N; \
     } while (0)
 
 #define SET_FLAGS_SUB(type, utype) do { \
     SET_NZ((type)dest); \
     tmp = dest + src; \
     if ((utype) tmp < (utype) src) \
         flags |= CCF_C; \
     if ((1u << (sizeof(type) * 8 - 1)) & (tmp ^ dest) & (tmp ^ src)) \
         flags |= CCF_V; \
     } while (0)
 
     flags = 0;
     src = env->cc_src;
     dest = env->cc_dest;
     switch (cc_op) {
     case CC_OP_FLAGS:
         flags = dest;
         break;
     case CC_OP_LOGIC:
         SET_NZ(dest);
         break;
     case CC_OP_ADD:
         SET_NZ(dest);
         if (dest < src)
             flags |= CCF_C;
         tmp = dest - src;
         if (HIGHBIT & (src ^ dest) & ~(tmp ^ src))
             flags |= CCF_V;
         break;
     case CC_OP_SUB:
         SET_FLAGS_SUB(int32_t, uint32_t);
         break;
     case CC_OP_CMPB:
         SET_FLAGS_SUB(int8_t, uint8_t);
         break;
     case CC_OP_CMPW:
         SET_FLAGS_SUB(int16_t, uint16_t);
         break;
     case CC_OP_ADDX:
         SET_NZ(dest);
         if (dest <= src)
             flags |= CCF_C;
         tmp = dest - src - 1;
         if (HIGHBIT & (src ^ dest) & ~(tmp ^ src))
             flags |= CCF_V;
         break;
     case CC_OP_SUBX:
         SET_NZ(dest);
         tmp = dest + src + 1;
         if (tmp <= src)
             flags |= CCF_C;
         if (HIGHBIT & (tmp ^ dest) & (tmp ^ src))
             flags |= CCF_V;
         break;
     case CC_OP_SHIFT:
         SET_NZ(dest);
         if (src)
             flags |= CCF_C;
         break;
     default:
         cpu_abort(CPU(cpu), "Bad CC_OP %d", cc_op);
     }
     env->cc_op = CC_OP_FLAGS;
     env->cc_dest = flags;
 }
 
-/* this function is implemented in op_helper.c: void HELPER(raise_exception) */
-void raise_exception(CPUM68KState *env, uint32_t tt);
-
 void HELPER(movec)(CPUM68KState *env, uint32_t reg, uint32_t val)
 {
     switch (reg) {
     case 0x02: /* CACR */
         env->cacr = val;
         m68k_switch_sp(env);
         break;
     case 0x04: case 0x05: case 0x06: case 0x07: /* ACR[0-3] */
         /* TODO: Implement Access Control Registers.  */
         break;
     case 0x801: /* VBR */
         env->vbr = val;
         break;
     /* TODO: Implement control registers.  */
     default:
         qemu_log("Unimplemented control register write 0x%x = 0x%x\n",
                  reg, val);
-        raise_exception(env, EXCP_UNSUPPORTED);
+        helper_raise_exception(env, EXCP_UNSUPPORTED);
     }
 }
 
