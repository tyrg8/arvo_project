commit d0a0a0db9a4be8b8fad1cd78a0605b2343425f65
Merge: c8b957e62 cad6401c2
Author: Treehugger Robot <treehugger-gerrit@google.com>
Date:   Tue Apr 28 13:08:43 2020 +0000

    Merge "gn: Disable new GCC redundant move warning" am: 0df72fe5d2 am: e7ac9bc61b am: cad6401c29
    
    Change-Id: I381714a7b93a2bc3566ec3219f3cde048a786e76

diff --git a/gn/standalone/BUILD.gn b/gn/standalone/BUILD.gn
index 9928a728d..f11bb5f1d 100644
--- a/gn/standalone/BUILD.gn
+++ b/gn/standalone/BUILD.gn
@@ -29,31 +29,36 @@ hermetic_clang_suppressions = [
 config("extra_warnings") {
   cflags = [
     "-Wall",
     "-Wextra",
     "-Wpedantic",
   ]
 
   # Disable variadic macro warning as we make extensive use of them in trace
   # processor and client API.
   if (is_clang) {
     cflags += [ "-Wno-gnu-zero-variadic-macro-arguments" ]
   }
 
   # Disable Weverything on fuzzers to avoid breakages when new versions of clang
   # are rolled into OSS-fuzz.
   if (is_clang && !is_fuzzer) {
     cflags += [
       "-Weverything",
       "-Wno-c++98-compat-pedantic",
       "-Wno-c++98-compat",
       "-Wno-disabled-macro-expansion",
       "-Wno-gnu-include-next",
       "-Wno-gnu-statement-expression",
       "-Wno-padded",
       "-Wno-reserved-id-macro",
       "-Wno-unknown-sanitizers",
     ]
   }
+
+  if (!is_clang) {
+    # Use return std::move(...) for compatibility with old compilers.
+    cflags += [ "-Wno-redundant-move" ]
+  }
 }
 
 config("no_exceptions") {
