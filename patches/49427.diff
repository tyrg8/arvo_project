commit a107b850eb7ad72d45aca19035da35d8af071acc
Author: Yukihiro "Matz" Matsumoto <matz@ruby.or.jp>
Date:   Mon Jul 25 15:31:43 2022 +0900

    codegen.c (new_bitbn): fixed wrong packing of integer radix.

diff --git a/mrbgems/mruby-compiler/core/codegen.c b/mrbgems/mruby-compiler/core/codegen.c
index bf91a9c41..6c586ad9b 100644
--- a/mrbgems/mruby-compiler/core/codegen.c
+++ b/mrbgems/mruby-compiler/core/codegen.c
@@ -1004,34 +1004,34 @@ static int
 new_litbn(codegen_scope *s, const char *p, int base, mrb_bool neg)
 {
   int i;
   size_t plen;
   mrb_pool_value *pv;
 
   plen = strlen(p);
   if (plen > 255) {
     codegen_error(s, "integer too big");
   }
   for (i=0; i<s->irep->plen; i++) {
     size_t len;
     pv = &s->pool[i];
     if (pv->tt != IREP_TT_BIGINT) continue;
     len = pv->u.str[0];
     if (len == plen && pv->u.str[1] == base && memcmp(pv->u.str+2, p, len) == 0)
       return i;
   }
 
   pv = lit_pool_extend(s);
 
   {
     char *buf;
     pv->tt = IREP_TT_BIGINT;
     buf = (char*)codegen_realloc(s, NULL, plen+3);
     buf[0] = (char)plen;
+    if (neg) buf[1] = -base;
     buf[1] = base;
-    if (neg) buf[1] = 0x80;
     memcpy(buf+2, p, plen);
     buf[plen+2] = '\0';
     pv->u.str = buf;
   }
   return i;
 }
