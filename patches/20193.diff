commit 3bc7acc62646b105b03fd3c65e9170a373f95392
Author: Douglas Bagnall <douglas.bagnall@catalyst.net.nz>
Date:   Sun Jan 19 15:08:58 2020 +1300

    nmblib: avoid undefined behaviour in handle_name_ptrs()
    
    If *offset is length - 1, we would read ubuf[(*offset)+1] as the lower
    bits of the new *offset. This value is undefined, but because it is
    checked against the valid range, there is no way to read further
    beyond that one byte.
    
    Credit to oss-fuzz.
    
    BUG: https://bugzilla.samba.org/show_bug.cgi?id=14242
    OSS-Fuzz: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=20193
    
    Signed-off-by: Douglas Bagnall <douglas.bagnall@catalyst.net.nz>
    Reviewed-by: Jeremy Allison <jra@samba.org>
    Reviewed-by: Andrew Bartlett <abartlet@samba.org>
    
    Autobuild-User(master): Andrew Bartlett <abartlet@samba.org>
    Autobuild-Date(master): Fri Feb  7 10:19:39 UTC 2020 on sn-devel-184

diff --git a/source3/libsmb/nmblib.c b/source3/libsmb/nmblib.c
index 84cbb054b8e..c05fac2bba9 100644
--- a/source3/libsmb/nmblib.c
+++ b/source3/libsmb/nmblib.c
@@ -154,22 +154,25 @@ void debug_nmb_packet(struct packet_struct *p)
 static bool handle_name_ptrs(unsigned char *ubuf,int *offset,int length,
 			     bool *got_pointer,int *ret)
 {
 	int loop_count=0;
 
 	while ((ubuf[*offset] & 0xC0) == 0xC0) {
 		if (!*got_pointer)
 			(*ret) += 2;
 		(*got_pointer)=True;
+		if (*offset > length - 2) {
+			return False;
+		}
 		(*offset) = ((ubuf[*offset] & ~0xC0)<<8) | ubuf[(*offset)+1];
 		if (loop_count++ == 10 ||
 				(*offset) < 0 || (*offset)>(length-2)) {
 			return False;
 		}
 	}
 	return True;
 }
 
 /*******************************************************************
  Parse a nmb name from "compressed" format to something readable
  return the space taken by the name, or 0 if the name is invalid
 ******************************************************************/
