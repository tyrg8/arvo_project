commit 3d261b9a7f4b056b5b342c8b6ca1a5b1d91ee01e
Author: Veronika Hanulikova <vhanulik@redhat.com>
Date:   Fri May 13 11:03:40 2022 +0200

    pkcs15-tool: Free PIN only if allocated
    
    Thanks oss-fuzz
    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47143
    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47155

diff --git a/src/tools/pkcs15-tool.c b/src/tools/pkcs15-tool.c
index 56494e5d..fff93ab7 100644
--- a/src/tools/pkcs15-tool.c
+++ b/src/tools/pkcs15-tool.c
@@ -1800,94 +1800,95 @@ static int unblock_pin(void)
 static int change_pin(void)
 {
 	sc_pkcs15_object_t *pin_obj;
 	sc_pkcs15_auth_info_t *pinfo = NULL;
 	u8 *pincode, *newpin;
 	int r, pinpad_present = 0;
 
 	pinpad_present = p15card->card->reader->capabilities & SC_READER_CAP_PIN_PAD
 	   	|| p15card->card->caps & SC_CARD_CAP_PROTECTED_AUTHENTICATION_PATH;
 
 	if (!(pin_obj = get_pin_info()))
 		return 2;
 
 	pinfo = (sc_pkcs15_auth_info_t *) pin_obj->data;
 	if (pinfo->auth_type != SC_PKCS15_PIN_AUTH_TYPE_PIN)
 		return 1;
 
 	if (pinfo->tries_left != -1) {
 		if (pinfo->tries_left != pinfo->max_tries) {
 			if (pinfo->tries_left == 0) {
 				fprintf(stderr, "PIN code blocked!\n");
 				return 2;
 			} else {
 				fprintf(stderr, "%d PIN tries left.\n", pinfo->tries_left);
 			}
 		}
 	}
 
 	pincode = (u8 *) opt_pin;
 	if (pincode == NULL) {
 		pincode = get_pin("Enter old PIN", pin_obj);
 		if (!pinpad_present && pincode == NULL)
 			return 2;
 	}
 
 	if (pincode && strlen((char *) pincode) == 0) {
 		fprintf(stderr, "No PIN code supplied.\n");
-		free(pincode);
+		if (opt_pin == NULL)
+			free(pincode);
 		return 2;
 	}
 
 	if (pincode == NULL && verbose)
 		printf("Old PIN value will be prompted with pinpad.\n");
 
 	newpin = (u8 *) opt_newpin;
 	while (newpin == NULL) {
 		u8 *newpin2;
 
 		newpin = get_pin("Enter new PIN", pin_obj);
 		if (pinpad_present && newpin == NULL)   {
 			if (verbose)
 				printf("New PIN value will be prompted with pinpad.\n");
 			break;
 		}
 		if (newpin == NULL || strlen((char *) newpin) == 0)   {
 			fprintf(stderr, "No new PIN value supplied.\n");
 			free(newpin);
 			if (opt_pin == NULL)
 				free(pincode);
 			return 2;
 		}
 
 		newpin2 = get_pin("Enter new PIN again", pin_obj);
 		if (newpin2 && strlen((char *) newpin2) &&
 				strcmp((char *) newpin, (char *) newpin2) == 0) {
 			free(newpin2);
 			break;
 		}
 		printf("PIN codes do not match, try again.\n");
 		free(newpin);
 		free(newpin2);
 		newpin=NULL;
 	}
 
 	r = sc_pkcs15_change_pin(p15card, pin_obj,
 			pincode, pincode ? strlen((char *) pincode) : 0,
 			newpin, newpin ? strlen((char *) newpin) : 0);
 	if (r == SC_ERROR_PIN_CODE_INCORRECT) {
 		fprintf(stderr, "PIN code incorrect; tries left: %d\n", pinfo->tries_left);
 		return 3;
 	} else if (r) {
 		fprintf(stderr, "PIN code change failed: %s\n", sc_strerror(r));
 		return 2;
 	}
 	if (verbose)
 		printf("PIN code changed successfully.\n");
 
 	if (opt_pin == NULL)
 		free(pincode);
 	if (opt_newpin == NULL)
 		free(newpin);
 
 	return 0;
 }
