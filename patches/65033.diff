commit 862e9ce0e63a74fb39522a4bc9152cdddef51f8f
Author: Nick Wellnhofer <wellnhofer@aevum.de>
Date:   Wed Dec 13 14:53:44 2023 +0100

    malloc-fail: Fix use-of-uninitialized-value in xmlParseConditionalSections
    
    Short-lived regression.

diff --git a/parser.c b/parser.c
index d6b8f2a1..2b32097b 100644
--- a/parser.c
+++ b/parser.c
@@ -6738,117 +6738,116 @@ static void
 xmlParseConditionalSections(xmlParserCtxtPtr ctxt) {
     int *inputIds = NULL;
     size_t inputIdsSize = 0;
     size_t depth = 0;
 
     while (PARSER_STOPPED(ctxt) == 0) {
         if ((RAW == '<') && (NXT(1) == '!') && (NXT(2) == '[')) {
             int id = ctxt->input->id;
 
             SKIP(3);
             SKIP_BLANKS;
 
             if (CMP7(CUR_PTR, 'I', 'N', 'C', 'L', 'U', 'D', 'E')) {
                 SKIP(7);
                 SKIP_BLANKS;
                 if (RAW != '[') {
                     xmlFatalErr(ctxt, XML_ERR_CONDSEC_INVALID, NULL);
                     xmlHaltParser(ctxt);
                     goto error;
                 }
                 if (ctxt->input->id != id) {
                     xmlFatalErrMsg(ctxt, XML_ERR_ENTITY_BOUNDARY,
                                    "All markup of the conditional section is"
                                    " not in the same entity\n");
                 }
                 NEXT;
 
                 if (inputIdsSize <= depth) {
                     int *tmp;
 
                     inputIdsSize = (inputIdsSize == 0 ? 4 : inputIdsSize * 2);
                     tmp = (int *) xmlRealloc(inputIds,
                             inputIdsSize * sizeof(int));
                     if (tmp == NULL) {
                         xmlErrMemory(ctxt, NULL);
                         goto error;
                     }
                     inputIds = tmp;
                 }
                 inputIds[depth] = id;
                 depth++;
             } else if (CMP6(CUR_PTR, 'I', 'G', 'N', 'O', 'R', 'E')) {
                 size_t ignoreDepth = 0;
 
                 SKIP(6);
                 SKIP_BLANKS;
                 if (RAW != '[') {
                     xmlFatalErr(ctxt, XML_ERR_CONDSEC_INVALID, NULL);
                     xmlHaltParser(ctxt);
                     goto error;
                 }
                 if (ctxt->input->id != id) {
                     xmlFatalErrMsg(ctxt, XML_ERR_ENTITY_BOUNDARY,
                                    "All markup of the conditional section is"
                                    " not in the same entity\n");
                 }
                 NEXT;
 
-                while ((PARSER_STOPPED(ctxt) == 0) && (RAW != 0)) {
+                while (PARSER_STOPPED(ctxt) == 0) {
+                    if (RAW == 0) {
+                        xmlFatalErr(ctxt, XML_ERR_CONDSEC_NOT_FINISHED, NULL);
+                        goto error;
+                    }
                     if ((RAW == '<') && (NXT(1) == '!') && (NXT(2) == '[')) {
                         SKIP(3);
                         ignoreDepth++;
                         /* Check for integer overflow */
                         if (ignoreDepth == 0) {
                             xmlErrMemory(ctxt, NULL);
                             goto error;
                         }
                     } else if ((RAW == ']') && (NXT(1) == ']') &&
                                (NXT(2) == '>')) {
+                        SKIP(3);
                         if (ignoreDepth == 0)
                             break;
-                        SKIP(3);
                         ignoreDepth--;
                     } else {
                         NEXT;
                     }
                 }
 
-		if (RAW == 0) {
-		    xmlFatalErr(ctxt, XML_ERR_CONDSEC_NOT_FINISHED, NULL);
-                    goto error;
-		}
                 if (ctxt->input->id != id) {
                     xmlFatalErrMsg(ctxt, XML_ERR_ENTITY_BOUNDARY,
                                    "All markup of the conditional section is"
                                    " not in the same entity\n");
                 }
-                SKIP(3);
             } else {
                 xmlFatalErr(ctxt, XML_ERR_CONDSEC_INVALID_KEYWORD, NULL);
                 xmlHaltParser(ctxt);
                 goto error;
             }
         } else if ((depth > 0) &&
                    (RAW == ']') && (NXT(1) == ']') && (NXT(2) == '>')) {
             depth--;
             if (ctxt->input->id != inputIds[depth]) {
                 xmlFatalErrMsg(ctxt, XML_ERR_ENTITY_BOUNDARY,
                                "All markup of the conditional section is not"
                                " in the same entity\n");
             }
             SKIP(3);
         } else if ((RAW == '<') && ((NXT(1) == '!') || (NXT(1) == '?'))) {
             xmlParseMarkupDecl(ctxt);
         } else {
             xmlFatalErr(ctxt, XML_ERR_EXT_SUBSET_NOT_FINISHED, NULL);
             xmlHaltParser(ctxt);
             goto error;
         }
 
         if (depth == 0)
             break;
 
         SKIP_BLANKS;
         SHRINK;
         GROW;
     }
