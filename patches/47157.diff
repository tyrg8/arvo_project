commit 12532548a94c94821da0238b84c04b918659eb4a
Author: Chris Liddell <chris.liddell@artifex.com>
Date:   Tue May 3 10:34:13 2022 +0100

    oss-fuzz 47157: Fix buffer limit for decoding pfb font streams

diff --git a/pdf/pdf_font1.c b/pdf/pdf_font1.c
index 05189ef40..887a97491 100644
--- a/pdf/pdf_font1.c
+++ b/pdf/pdf_font1.c
@@ -366,43 +366,43 @@ static int
 pdfi_t1_decode_pfb(pdf_context *ctx, byte *inbuf, int inlen, byte **outbuf, int *outlen)
 {
     stream *strm;
     int c, code = 0;
     int decodelen = 0;
     byte *d, *decodebuf = NULL;
 
     *outbuf = NULL;
     *outlen = 0;
 
-    strm = push_pfb_filter(ctx->memory, inbuf, inbuf + inlen + 1);
+    strm = push_pfb_filter(ctx->memory, inbuf, inbuf + inlen);
     if (strm == NULL) {
         code = gs_note_error(gs_error_VMerror);
     }
     else {
         while (1) {
             c = sgetc(strm);
             if (c < 0)
                 break;
             decodelen++;
         }
         pop_pfb_filter(ctx->memory, strm);
         decodebuf = gs_alloc_bytes(ctx->memory, decodelen, "pdfi_t1_decode_pfb(decodebuf)");
         if (decodebuf == NULL) {
             code = gs_note_error(gs_error_VMerror);
         }
         else {
             d = decodebuf;
-            strm = push_pfb_filter(ctx->memory, inbuf, inbuf + inlen + 1);
+            strm = push_pfb_filter(ctx->memory, inbuf, inbuf + inlen);
             while (1) {
                 c = sgetc(strm);
                 if (c < 0)
                     break;
                 *d = c;
                 d++;
             }
             pop_pfb_filter(ctx->memory, strm);
             *outbuf = decodebuf;
             *outlen = decodelen;
         }
     }
     return code;
 }
