commit aec9667bd19a8ca9bdd519db3a231a95b9e92674
Author: Matt Caswell <matt@openssl.org>
Date:   Wed Oct 30 13:23:18 2019 +0000

    Don't assume the type we read was the type we expected
    
    i2v_GENERAL_NAME and GENERAL_NAME_print were assuming that the type of
    of a GENERAL_NAME (OTHERNAME) that we read in was the type we expected
    it to be. If its something else then this can cause unexpected
    behaviour. In the added fuzz test case an OOB read was occurring.
    
    This issue was recently added by commit 4baee2d.
    
    Credit to OSSFuzz for finding this issue.
    
    Reviewed-by: Dmitry Belyavskiy <beldmit@gmail.com>
    Reviewed-by: Viktor Dukhovni <viktor@openssl.org>
    (Merged from https://github.com/openssl/openssl/pull/10300)

diff --git a/crypto/x509/v3_alt.c b/crypto/x509/v3_alt.c
index 1feb2d6735..f31b884db1 100644
--- a/crypto/x509/v3_alt.c
+++ b/crypto/x509/v3_alt.c
@@ -77,96 +77,108 @@ STACK_OF(CONF_VALUE) *i2v_GENERAL_NAMES(X509V3_EXT_METHOD *method,
 STACK_OF(CONF_VALUE) *i2v_GENERAL_NAME(X509V3_EXT_METHOD *method,
                                        GENERAL_NAME *gen,
                                        STACK_OF(CONF_VALUE) *ret)
 {
     unsigned char *p;
     char oline[256], htmp[5];
     int i;
 
     switch (gen->type) {
     case GEN_OTHERNAME:
         switch (OBJ_obj2nid(gen->d.otherName->type_id)) {
         case NID_id_on_SmtpUTF8Mailbox:
-            if (!X509V3_add_value_uchar("othername: SmtpUTF8Mailbox:", gen->d.otherName->value->value.utf8string->data, &ret))
+            if (gen->d.otherName->value->type != V_ASN1_UTF8STRING
+                    || !X509V3_add_value_uchar("othername: SmtpUTF8Mailbox:",
+                            gen->d.otherName->value->value.utf8string->data,
+                            &ret))
                 return NULL;
             break;
         case NID_XmppAddr:
-            if (!X509V3_add_value_uchar("othername: XmppAddr:", gen->d.otherName->value->value.utf8string->data, &ret))
+            if (gen->d.otherName->value->type != V_ASN1_UTF8STRING
+                    || !X509V3_add_value_uchar("othername: XmppAddr:",
+                            gen->d.otherName->value->value.utf8string->data,
+                            &ret))
                 return NULL;
             break;
         case NID_SRVName:
-            if (!X509V3_add_value_uchar("othername: SRVName:", gen->d.otherName->value->value.ia5string->data, &ret))
+            if (gen->d.otherName->value->type != V_ASN1_IA5STRING
+                    || !X509V3_add_value_uchar("othername: SRVName:",
+                            gen->d.otherName->value->value.ia5string->data,
+                            &ret))
                 return NULL;
             break;
         case NID_ms_upn:
-            if (!X509V3_add_value_uchar("othername: UPN:", gen->d.otherName->value->value.utf8string->data, &ret))
+            if (gen->d.otherName->value->type != V_ASN1_UTF8STRING
+                    || !X509V3_add_value_uchar("othername: UPN:",
+                            gen->d.otherName->value->value.utf8string->data,
+                            &ret))
                 return NULL;
             break;
         default:
             if (!X509V3_add_value("othername", "<unsupported>", &ret))
                 return NULL;
             break;
         }
         break;
 
     case GEN_X400:
         if (!X509V3_add_value("X400Name", "<unsupported>", &ret))
             return NULL;
         break;
 
     case GEN_EDIPARTY:
         if (!X509V3_add_value("EdiPartyName", "<unsupported>", &ret))
             return NULL;
         break;
 
     case GEN_EMAIL:
         if (!X509V3_add_value_uchar("email", gen->d.ia5->data, &ret))
             return NULL;
         break;
 
     case GEN_DNS:
         if (!X509V3_add_value_uchar("DNS", gen->d.ia5->data, &ret))
             return NULL;
         break;
 
     case GEN_URI:
         if (!X509V3_add_value_uchar("URI", gen->d.ia5->data, &ret))
             return NULL;
         break;
 
     case GEN_DIRNAME:
         if (X509_NAME_oneline(gen->d.dirn, oline, sizeof(oline)) == NULL
                 || !X509V3_add_value("DirName", oline, &ret))
             return NULL;
         break;
 
     case GEN_IPADD:
         p = gen->d.ip->data;
         if (gen->d.ip->length == 4)
             BIO_snprintf(oline, sizeof(oline), "%d.%d.%d.%d",
                          p[0], p[1], p[2], p[3]);
         else if (gen->d.ip->length == 16) {
             oline[0] = 0;
             for (i = 0; i < 8; i++) {
                 BIO_snprintf(htmp, sizeof(htmp), "%X", p[0] << 8 | p[1]);
                 p += 2;
                 strcat(oline, htmp);
                 if (i != 7)
                     strcat(oline, ":");
             }
         } else {
             if (!X509V3_add_value("IP Address", "<invalid>", &ret))
                 return NULL;
             break;
         }
         if (!X509V3_add_value("IP Address", oline, &ret))
             return NULL;
         break;
 
     case GEN_RID:
         i2t_ASN1_OBJECT(oline, 256, gen->d.rid);
         if (!X509V3_add_value("Registered ID", oline, &ret))
             return NULL;
         break;
     }
     return ret;
 }
@@ -174,77 +186,92 @@ STACK_OF(CONF_VALUE) *i2v_GENERAL_NAME(X509V3_EXT_METHOD *method,
 int GENERAL_NAME_print(BIO *out, GENERAL_NAME *gen)
 {
     unsigned char *p;
-    int i;
+    int i, nid;
+
     switch (gen->type) {
     case GEN_OTHERNAME:
-        switch (OBJ_obj2nid(gen->d.otherName->type_id)) {
+        nid = OBJ_obj2nid(gen->d.otherName->type_id);
+        /* Validate the types are as we expect before we use them */
+        if ((nid == NID_SRVName
+             && gen->d.otherName->value->type != V_ASN1_IA5STRING)
+                || (nid != NID_SRVName
+                    && gen->d.otherName->value->type != V_ASN1_UTF8STRING)) {
+            BIO_printf(out, "othername:<unsupported>");
+            break;
+        }
+
+        switch (nid) {
         case NID_id_on_SmtpUTF8Mailbox:
-            BIO_printf(out, "othername:SmtpUTF8Mailbox:%s", gen->d.otherName->value->value.utf8string->data);
+            BIO_printf(out, "othername:SmtpUTF8Mailbox:%s",
+                       gen->d.otherName->value->value.utf8string->data);
             break;
         case NID_XmppAddr:
-            BIO_printf(out, "othername:XmppAddr:%s", gen->d.otherName->value->value.utf8string->data);
+            BIO_printf(out, "othername:XmppAddr:%s",
+                       gen->d.otherName->value->value.utf8string->data);
             break;
         case NID_SRVName:
-            BIO_printf(out, "othername:SRVName:%s", gen->d.otherName->value->value.ia5string->data);
+            BIO_printf(out, "othername:SRVName:%s",
+                       gen->d.otherName->value->value.ia5string->data);
             break;
         case NID_ms_upn:
-            BIO_printf(out, "othername:UPN:%s", gen->d.otherName->value->value.utf8string->data);
+            BIO_printf(out, "othername:UPN:%s",
+                       gen->d.otherName->value->value.utf8string->data);
             break;
         default:
             BIO_printf(out, "othername:<unsupported>");
             break;
         }
         break;
 
     case GEN_X400:
         BIO_printf(out, "X400Name:<unsupported>");
         break;
 
     case GEN_EDIPARTY:
         /* Maybe fix this: it is supported now */
         BIO_printf(out, "EdiPartyName:<unsupported>");
         break;
 
     case GEN_EMAIL:
         BIO_printf(out, "email:");
         ASN1_STRING_print(out, gen->d.ia5);
         break;
 
     case GEN_DNS:
         BIO_printf(out, "DNS:");
         ASN1_STRING_print(out, gen->d.ia5);
         break;
 
     case GEN_URI:
         BIO_printf(out, "URI:");
         ASN1_STRING_print(out, gen->d.ia5);
         break;
 
     case GEN_DIRNAME:
         BIO_printf(out, "DirName:");
         X509_NAME_print_ex(out, gen->d.dirn, 0, XN_FLAG_ONELINE);
         break;
 
     case GEN_IPADD:
         p = gen->d.ip->data;
         if (gen->d.ip->length == 4)
             BIO_printf(out, "IP Address:%d.%d.%d.%d", p[0], p[1], p[2], p[3]);
         else if (gen->d.ip->length == 16) {
             BIO_printf(out, "IP Address");
             for (i = 0; i < 8; i++) {
                 BIO_printf(out, ":%X", p[0] << 8 | p[1]);
                 p += 2;
             }
         } else {
             BIO_printf(out, "IP Address:<invalid>");
             break;
         }
         break;
 
     case GEN_RID:
         BIO_printf(out, "Registered ID:");
         i2a_ASN1_OBJECT(out, gen->d.rid);
         break;
     }
     return 1;
 }
diff --git a/fuzz/corpora/x509/9901a721c7fe85b8208198cc5e77ac719f592577 b/fuzz/corpora/x509/9901a721c7fe85b8208198cc5e77ac719f592577
new file mode 100644
index 0000000000..40369cd294
Binary files /dev/null and b/fuzz/corpora/x509/9901a721c7fe85b8208198cc5e77ac719f592577 differ
