commit 89e23615828ea64af9858e5942d6bc4d82c458a6
Author: Evan Miller <emmiller@gmail.com>
Date:   Fri Jan 15 07:44:50 2021 -0500

    Fix buffer overrun (oss-fuzz/28832+28807)
    
    len_out was wrapping to a large number when bad input was encountered.
    Ensure it's non-zero before proceeding with iconv.

diff --git a/src/libmdb/iconv.c b/src/libmdb/iconv.c
index fcc5788..73851bf 100644
--- a/src/libmdb/iconv.c
+++ b/src/libmdb/iconv.c
@@ -51,26 +51,26 @@ static size_t decompress_unicode(const char *src, size_t slen, char *dst, size_t
 #if HAVE_ICONV
 static size_t decompressed_to_utf8_with_iconv(MdbHandle *mdb, const char *in_ptr, size_t len_in, char *dest, size_t dlen) {
 	char *out_ptr = dest;
 	size_t len_out = dlen - 1;
 
-	while (1) {
+	while (len_out) {
 		iconv(mdb->iconv_in, (ICONV_CONST char **)&in_ptr, &len_in, &out_ptr, &len_out);
 		/* 
 		 * Have seen database with odd number of bytes in UCS-2, shouldn't happen but protect against it
 		 */
 		if (!IS_JET3(mdb) && len_in<=1) {
 			//fprintf(stderr, "Detected invalid number of UCS-2 bytes\n");
 			break;
 		}
 		if ((!len_in) || (errno == E2BIG)) break;
 		/* Don't bail if impossible conversion is encountered */
 		in_ptr += (IS_JET3(mdb)) ? 1 : 2;
 		len_in -= (IS_JET3(mdb)) ? 1 : 2;
 		*out_ptr++ = '?';
 		len_out--;
 	}
 	dlen -= len_out + 1;
 	dest[dlen] = '\0';
 	return dlen;
 }
 #else
