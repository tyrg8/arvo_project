changeset:   15897:225f3f58eb20
user:        Bob Friesenhahn <bfriesen@GraphicsMagick.org>
date:        Sat Feb 16 09:47:14 2019 -0600
summary:     ReadTIFFImage(): Only disassociate alpha channel for images where photometic is PHOTOMETRIC_RGB.

diff -r d7c161148b75 -r 225f3f58eb20 ChangeLog
--- a/ChangeLog	Fri Feb 15 08:20:06 2019 -0600
+++ b/ChangeLog	Sat Feb 16 09:47:14 2019 -0600
@@ -1,3 +1,11 @@
+2019-02-16  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>
+
+	* coders/tiff.c (ReadTIFFImage): Only disassociate alpha channel
+	for images where photometic is PHOTOMETRIC_RGB. Fixes oss-fuzz
+	13115 "graphicsmagick/coder_PTIF_fuzzer:
+	Use-of-uninitialized-value in DisassociateAlphaRegion". (Credit to
+	OSS-Fuzz)
+
 2019-02-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>
 
 	* coders/jpeg.c (ReadJPEGImage): Base test for "Unreasonable
diff -r d7c161148b75 -r 225f3f58eb20 VisualMagick/installer/inc/version.isx
--- a/VisualMagick/installer/inc/version.isx	Fri Feb 15 08:20:06 2019 -0600
+++ b/VisualMagick/installer/inc/version.isx	Sat Feb 16 09:47:14 2019 -0600
@@ -10,5 +10,5 @@
 
 #define public MagickPackageName "GraphicsMagick"
 #define public MagickPackageVersion "1.4"
-#define public MagickPackageVersionAddendum ".020190215"
-#define public MagickPackageReleaseDate "snapshot-20190215"
+#define public MagickPackageVersionAddendum ".020190216"
+#define public MagickPackageReleaseDate "snapshot-20190216"
diff -r d7c161148b75 -r 225f3f58eb20 coders/tiff.c
--- a/coders/tiff.c	Fri Feb 15 08:20:06 2019 -0600
+++ b/coders/tiff.c	Sat Feb 16 09:47:14 2019 -0600
@@ -2601,7 +2601,8 @@
                     /*
                       Disassociate alpha from pixels if necessary.
                     */
-                    if ((image->matte) && (alpha_type == AssociatedAlpha) &&
+                    if ((PHOTOMETRIC_RGB == photometric) &&
+                        (image->matte) && (alpha_type == AssociatedAlpha) &&
                         (sample == (max_sample-1)))
                       DisassociateAlphaRegion(image);
                     /*
@@ -2810,7 +2811,8 @@
                     /*
                       Disassociate alpha from pixels if necessary.
                     */
-                    if ((image->matte) && (alpha_type == AssociatedAlpha)
+                    if ((PHOTOMETRIC_RGB == photometric) &&
+                        (image->matte) && (alpha_type == AssociatedAlpha)
                         && (sample == (max_sample-1)))
                       DisassociateAlphaRegion(image);
                     /*
@@ -3079,7 +3081,8 @@
                             /*
                               Disassociate alpha from pixels if necessary.
                             */
-                            if ((image->matte) && (alpha_type == AssociatedAlpha)
+                            if ((PHOTOMETRIC_RGB == photometric) &&
+                                (image->matte) && (alpha_type == AssociatedAlpha)
                                 && (sample == (max_sample-1)))
                               DisassociateAlphaRegion(image);
                             /*
@@ -3218,7 +3221,8 @@
                 /*
                   Disassociate alpha from pixels if necessary.
                 */
-                if ((image->matte) && (alpha_type == AssociatedAlpha))
+                if ((PHOTOMETRIC_RGB == photometric) &&
+                    (image->matte) && (alpha_type == AssociatedAlpha))
                   DisassociateAlphaRegion(image);
                 if (!SyncImagePixelsEx(image,exception))
                   {
@@ -3406,7 +3410,8 @@
                 /*
                   Disassociate alpha from pixels if necessary.
                 */
-                if ((image->matte) && (alpha_type == AssociatedAlpha))
+                if ((PHOTOMETRIC_RGB == photometric) &&
+                    (image->matte) && (alpha_type == AssociatedAlpha))
                   DisassociateAlphaRegion(image);
                 if (!SyncImagePixelsEx(image,exception))
                   {
@@ -3531,7 +3536,8 @@
                 /*
                   Disassociate alpha from pixels if necessary.
                 */
-                if ((image->matte) && (alpha_type == AssociatedAlpha))
+                if ((PHOTOMETRIC_RGB == photometric) &&
+                    (image->matte) && (alpha_type == AssociatedAlpha))
                   DisassociateAlphaRegion(image);
                 if (!SyncImagePixelsEx(image,exception))
                   {
diff -r d7c161148b75 -r 225f3f58eb20 magick/version.h
--- a/magick/version.h	Fri Feb 15 08:20:06 2019 -0600
+++ b/magick/version.h	Sat Feb 16 09:47:14 2019 -0600
@@ -38,8 +38,8 @@
 #define MagickLibVersion  0x221900
 #define MagickLibVersionText  "1.4"
 #define MagickLibVersionNumber 22,19,0
-#define MagickChangeDate   "20190215"
-#define MagickReleaseDate  "snapshot-20190215"
+#define MagickChangeDate   "20190216"
+#define MagickReleaseDate  "snapshot-20190216"
 
 /*
   The MagickLibInterfaceNewest and MagickLibInterfaceOldest defines
diff -r d7c161148b75 -r 225f3f58eb20 www/Changelog.html
--- a/www/Changelog.html	Fri Feb 15 08:20:06 2019 -0600
+++ b/www/Changelog.html	Sat Feb 16 09:47:14 2019 -0600
@@ -35,6 +35,16 @@
 <div class="document">
 
 
+<p>2019-02-16  Bob Friesenhahn  &lt;<a class="reference external" href="mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>
+<blockquote>
+<ul class="simple">
+<li>coders/tiff.c (ReadTIFFImage): Only disassociate alpha channel
+for images where photometic is PHOTOMETRIC_RGB. Fixes oss-fuzz
+13115 &quot;graphicsmagick/coder_PTIF_fuzzer:
+Use-of-uninitialized-value in DisassociateAlphaRegion&quot;. (Credit to
+OSS-Fuzz)</li>
+</ul>
+</blockquote>
 <p>2019-02-15  Bob Friesenhahn  &lt;<a class="reference external" href="mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>
 <blockquote>
 <ul class="simple">

