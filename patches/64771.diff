commit c9a51565214eece8f1053089739aea73145bfd6b
Author: Emanuele Torre <torreemanuele6@gmail.com>
Date:   Wed Dec 13 20:17:17 2023 +0100

    Merge pull request from GHSA-7hmr-442f-qc8j
    
    The unit allocated for decNumberCompare was accidentally removed by
    commit 680baeffeb7983e7570b5e68db07fe47f94db8c7 (PR #2804)
    
    This caused a stack overflow when comparing a nan with a payload of 1000
    or more.
    
    This bug was found by OSS-fuzz.
    Ref: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=64771
    Fixes GHSA-7hmr-442f-qc8j
    
    It also fixes 1e999999999 > 1e-1147483646   triggering UBSAN errors
    Fixes #2968

diff --git a/NEWS.md b/NEWS.md
index fffdbd9..913be89 100644
--- a/NEWS.md
+++ b/NEWS.md
@@ -1,49 +1,49 @@
 # 1.7.1
 
 ## Security
 
 - CVE-2023-50246: ....
-- CVE-2023-50268: ....
+- CVE-2023-50268: fix stack-buffer-overflow if comparing nan with payload
 
 ## CLI changes
 
 - Make the default background color more suitable for bright backgrounds. @mjarosie @taoky @nicowilliams @itchyny #2904
 - Allow passing the inline jq script after `--`. @emanuele6 #2919
 - Restrict systems operations on OpenBSD and remove unused `mkstemp`. @klemensn #2934
 - Fix possible uninitialised value dereference if `jq_init()` fails. @emanuele6 @nicowilliams #2935
 
 ## Language changes
 
 - Simplify `paths/0` and `paths/1`. @asheiduk @emanuele6 #2946
 - Reject `U+001F` in string literals. @torsten-schenk @itchyny @wader #2911
 - Remove unused nref accumulator in `block_bind_library`. @emanuele6 #2914
 - Remove a bunch of unused variables, and useless assignments. @emanuele6 #2914
 - main.c: Remove unused EXIT\_STATUS\_EXACT option. @emanuele6 #2915
 - Actually use the number correctly casted from double to int as index. @emanuele6 #2916
 - src/builtin.c: remove unnecessary jv\_copy-s in type\_error/type\_error2. @emanuele6 #2937
 - Remove undefined behavior caught by LLVM 10 UBSAN. @Gaelan @emanuele6 #2926
 - Convert decnum to binary64 (double) instead of decimal64. This makes jq behave like the JSON specification suggests and more similar to other languages. @wader @leonid-s-usov #2949
 - Fix memory leaks on invalid input for `ltrimstr/1` and `rtrimstr/1`. @emanuele6 #2977
 - Fix memory leak on failed get for `setpath/2`. @emanuele6 #2970
 - Fix nan from json parsing also for nans with payload that start with 'n'. @emanuele6 #2985
 - Allow carriage return characters in comments. @emanuele6 #2942 #2984
 
 ## Documentation changes
 
 - Generate links in the man page. @emanuele6 #2931
 - Standardize arch types to AMD64 & ARM64 from index page download dropdown. @owenthereal #2884
 
 ## libjq
 
 - Add extern C for C++. @rockwotj #2953
 
 ## Build and test changes
 
 - Fix incorrect syntax for checksum file. @kamontat @wader #2899
 - Remove `-dirty` version suffix for windows release build. @itchyny #2888
 - Make use of `od` in tests more compatible. @nabijaczleweli @emanuele6 @nicowilliams #2922
 - Add dependabot. @yeikel #2889
 - Extend fuzzing setup to fuzz parser and and JSON serializer. @DavidKorczynski @emanuele6 #2952
 - Keep releasing executables with legacy names. @itchyny #2951
 
 # 1.7
diff --git a/src/jv.c b/src/jv.c
index 4031dc6..6ca1e1d 100644
--- a/src/jv.c
+++ b/src/jv.c
@@ -737,30 +737,34 @@ int jvp_number_is_nan(jv n) {
 int jvp_number_cmp(jv a, jv b) {
   assert(JVP_HAS_KIND(a, JV_KIND_NUMBER));
   assert(JVP_HAS_KIND(b, JV_KIND_NUMBER));
 
 #ifdef USE_DECNUM
   if (JVP_HAS_FLAGS(a, JVP_FLAGS_NUMBER_LITERAL) && JVP_HAS_FLAGS(b, JVP_FLAGS_NUMBER_LITERAL)) {
-    decNumber res;
-    decNumberCompare(&res,
+    struct {
+      decNumber number;
+      decNumberUnit units[1];
+    } res;
+
+    decNumberCompare(&res.number,
                      jvp_dec_number_ptr(a),
                      jvp_dec_number_ptr(b),
                      DEC_CONTEXT()
                      );
-    if (decNumberIsZero(&res)) {
+    if (decNumberIsZero(&res.number)) {
       return 0;
-    } else if (decNumberIsNegative(&res)) {
+    } else if (decNumberIsNegative(&res.number)) {
       return -1;
     } else {
       return 1;
     }
   }
 #endif
   double da = jv_number_value(a), db = jv_number_value(b);
   if (da < db) {
     return -1;
   } else if (da == db) {
     return 0;
   } else {
     return 1;
   }
 }
diff --git a/tests/shtest b/tests/shtest
index 469ea1d..a426c79 100755
--- a/tests/shtest
+++ b/tests/shtest
@@ -593,7 +593,12 @@ if ! x=$($JQ -n "1 # foo$cr + 2") || [ "$x" != 1 ]; then
   echo 'regression: carriage return terminates comment'
   exit 1
 fi
 
+# CVE-2023-50268: No stack overflow comparing a nan with a large payload
+$VALGRIND $Q $JQ '1 != .' <<\EOF >/dev/null
+Nan4000
+EOF
+
 # Allow passing the inline jq script before -- #2919
 if ! r=$($JQ --args -rn -- '$ARGS.positional[0]' bar) || [ "$r" != bar ]; then
     echo "passing the inline script after -- didn't work"
