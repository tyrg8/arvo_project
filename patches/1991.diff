commit 89c5ac13dfc50b372b75c18316e34d12169464a2
Author: Even Rouault <even.rouault@mines-paris.org>
Date:   Thu Jun 1 08:22:09 2017 +0000

    ILI2: fix null pointer dereference on corrupted files. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=1993. Credit to OSS Fuzz
    
    git-svn-id: https://svn.osgeo.org/gdal/trunk@38753 f0d54148-0727-0410-94bb-9a71ac55c965

diff --git a/gdal/ogr/ogrsf_frmts/ili/ili2reader.cpp b/gdal/ogr/ogrsf_frmts/ili/ili2reader.cpp
index b09a56928c..4fd53bf4e8 100644
--- a/gdal/ogr/ogrsf_frmts/ili/ili2reader.cpp
+++ b/gdal/ogr/ogrsf_frmts/ili/ili2reader.cpp
@@ -141,23 +141,26 @@ static char *getREFValue(DOMElement *elem) {
 static OGRPoint *getPoint(DOMElement *elem) {
   // elem -> COORD (or ARC)
   DOMElement *coordElem = dynamic_cast<DOMElement*>(elem->getFirstChild());
   if( coordElem == NULL )
       return NULL;
   OGRPoint *pt = new OGRPoint();
 
   while (coordElem != NULL) {
     char* pszTagName = XMLString::transcode(coordElem->getTagName());
     char* pszObjValue = getObjValue(coordElem);
-    if (cmpStr("C1", pszTagName) == 0)
-      pt->setX(CPLAtof(pszObjValue));
-    else if (cmpStr("C2", pszTagName) == 0)
-      pt->setY(CPLAtof(pszObjValue));
-    else if (cmpStr("C3", pszTagName) == 0)
-      pt->setZ(CPLAtof(pszObjValue));
+    if( pszObjValue )
+    {
+        if (cmpStr("C1", pszTagName) == 0)
+        pt->setX(CPLAtof(pszObjValue));
+        else if (cmpStr("C2", pszTagName) == 0)
+        pt->setY(CPLAtof(pszObjValue));
+        else if (cmpStr("C3", pszTagName) == 0)
+        pt->setZ(CPLAtof(pszObjValue));
+    }
     CPLFree(pszObjValue);
     XMLString::release(&pszTagName);
     coordElem = dynamic_cast<DOMElement*>(coordElem->getNextSibling());
   }
   pt->flattenTo2D();
   return pt;
 }
@@ -165,45 +168,48 @@ static OGRPoint *getPoint(DOMElement *elem) {
 OGRCircularString *ILI2Reader::getArc(DOMElement *elem) {
   // previous point -> start point
   OGRPoint *ptStart = getPoint(dynamic_cast<DOMElement*>(elem->getPreviousSibling())); // COORD or ARC
   if( ptStart == NULL )
       return NULL;
   
   // elem -> ARC
   OGRCircularString *arc = new OGRCircularString();
   // end point
   OGRPoint *ptEnd = new OGRPoint();
   // point on the arc
   OGRPoint *ptOnArc = new OGRPoint();
   // double radius = 0; // radius
 
   DOMElement *arcElem = dynamic_cast<DOMElement*>(elem->getFirstChild());
   while (arcElem != NULL) {
     char* pszTagName = XMLString::transcode(arcElem->getTagName());
     char* pszObjValue = getObjValue(arcElem);
-    if (cmpStr("C1", pszTagName) == 0)
-      ptEnd->setX(CPLAtof(pszObjValue));
-    else if (cmpStr("C2", pszTagName) == 0)
-      ptEnd->setY(CPLAtof(pszObjValue));
-    else if (cmpStr("C3", pszTagName) == 0)
-      ptEnd->setZ(CPLAtof(pszObjValue));
-    else if (cmpStr("A1", pszTagName) == 0)
-      ptOnArc->setX(CPLAtof(pszObjValue));
-    else if (cmpStr("A2", pszTagName) == 0)
-      ptOnArc->setY(CPLAtof(pszObjValue));
-    else if (cmpStr("A3", pszTagName) == 0)
-      ptOnArc->setZ(CPLAtof(pszObjValue));
-    else if (cmpStr("R", pszTagName) == 0) {
-      // radius = CPLAtof(pszObjValue);
+    if( pszObjValue )
+    {
+        if (cmpStr("C1", pszTagName) == 0)
+        ptEnd->setX(CPLAtof(pszObjValue));
+        else if (cmpStr("C2", pszTagName) == 0)
+        ptEnd->setY(CPLAtof(pszObjValue));
+        else if (cmpStr("C3", pszTagName) == 0)
+        ptEnd->setZ(CPLAtof(pszObjValue));
+        else if (cmpStr("A1", pszTagName) == 0)
+        ptOnArc->setX(CPLAtof(pszObjValue));
+        else if (cmpStr("A2", pszTagName) == 0)
+        ptOnArc->setY(CPLAtof(pszObjValue));
+        else if (cmpStr("A3", pszTagName) == 0)
+        ptOnArc->setZ(CPLAtof(pszObjValue));
+        else if (cmpStr("R", pszTagName) == 0) {
+        // radius = CPLAtof(pszObjValue);
+        }
     }
     CPLFree(pszObjValue);
     XMLString::release(&pszTagName);
     arcElem = dynamic_cast<DOMElement*>(arcElem->getNextSibling());
   }
   arc->addPoint(ptStart);
   arc->addPoint(ptOnArc);
   arc->addPoint(ptEnd);
   delete ptStart;
   delete ptOnArc;
   delete ptEnd;
   return arc;
 }
@@ -211,83 +217,86 @@ OGRCircularString *ILI2Reader::getArc(DOMElement *elem) {
 static OGRCompoundCurve *getPolyline(DOMElement *elem) {
   // elem -> POLYLINE
   OGRCompoundCurve *ogrCurve = new OGRCompoundCurve();
   OGRLineString *ls = new OGRLineString();
 
   DOMElement *lineElem = dynamic_cast<DOMElement *>(elem->getFirstChild());
   while (lineElem != NULL) {
     char* pszTagName = XMLString::transcode(lineElem->getTagName());
     if (cmpStr(ILI2_COORD, pszTagName) == 0)
     {
       OGRPoint* poPoint = getPoint(lineElem);
       if( poPoint )
       {
         ls->addPoint(poPoint);
         delete poPoint;
       }
     }
     else if (cmpStr(ILI2_ARC, pszTagName) == 0) {
       //Finish line and start arc
       if (ls->getNumPoints() > 1) {
         ogrCurve->addCurveDirectly(ls);
         ls = new OGRLineString();
       } else {
         ls->empty();
       }
       OGRCircularString *arc = new OGRCircularString();
       // end point
       OGRPoint *ptEnd = new OGRPoint();
       // point on the arc
       OGRPoint *ptOnArc = new OGRPoint();
       // radius
       // double radius = 0;
 
       DOMElement *arcElem = dynamic_cast<DOMElement *>(lineElem->getFirstChild());
       while (arcElem != NULL) {
         char* pszTagName2 = XMLString::transcode(arcElem->getTagName());
         char* pszObjValue = getObjValue(arcElem);
-        if (cmpStr("C1", pszTagName2) == 0)
-          ptEnd->setX(CPLAtof(pszObjValue));
-        else if (cmpStr("C2", pszTagName2) == 0)
-          ptEnd->setY(CPLAtof(pszObjValue));
-        else if (cmpStr("C3", pszTagName2) == 0)
-          ptEnd->setZ(CPLAtof(pszObjValue));
-        else if (cmpStr("A1", pszTagName2) == 0)
-          ptOnArc->setX(CPLAtof(pszObjValue));
-        else if (cmpStr("A2", pszTagName2) == 0)
-          ptOnArc->setY(CPLAtof(pszObjValue));
-        else if (cmpStr("A3", pszTagName2) == 0)
-          ptOnArc->setZ(CPLAtof(pszObjValue));
-        else if (cmpStr("R", pszTagName2) == 0) {
-          // radius = CPLAtof(pszObjValue);
+        if( pszObjValue )
+        {
+            if (cmpStr("C1", pszTagName2) == 0)
+            ptEnd->setX(CPLAtof(pszObjValue));
+            else if (cmpStr("C2", pszTagName2) == 0)
+            ptEnd->setY(CPLAtof(pszObjValue));
+            else if (cmpStr("C3", pszTagName2) == 0)
+            ptEnd->setZ(CPLAtof(pszObjValue));
+            else if (cmpStr("A1", pszTagName2) == 0)
+            ptOnArc->setX(CPLAtof(pszObjValue));
+            else if (cmpStr("A2", pszTagName2) == 0)
+            ptOnArc->setY(CPLAtof(pszObjValue));
+            else if (cmpStr("A3", pszTagName2) == 0)
+            ptOnArc->setZ(CPLAtof(pszObjValue));
+            else if (cmpStr("R", pszTagName2) == 0) {
+            // radius = CPLAtof(pszObjValue);
+            }
         }
         CPLFree(pszObjValue);
         XMLString::release(&pszTagName2);
 
         arcElem = dynamic_cast<DOMElement *>(arcElem->getNextSibling());
       }
 
       OGRPoint *ptStart = getPoint(dynamic_cast<DOMElement *>(lineElem->getPreviousSibling())); // COORD or ARC
       if( ptStart )
         arc->addPoint(ptStart);
       arc->addPoint(ptOnArc);
       arc->addPoint(ptEnd);
       ogrCurve->addCurveDirectly(arc);
 
       delete ptStart;
       delete ptEnd;
       delete ptOnArc;
     } /* else { // TODO: StructureValue in Polyline not yet supported
     } */
     XMLString::release(&pszTagName);
 
     lineElem = dynamic_cast<DOMElement *>(lineElem->getNextSibling());
   }
 
   if (ls->getNumPoints() > 1) {
     ogrCurve->addCurveDirectly(ls);
   }
   else {
     delete ls;
   }
   return ogrCurve;
 }
