commit 8697a01850d5e02a3099acd5160d0a0ee2d31077
Author: Frank Morgner <frankmorgner@gmail.com>
Date:   Sat Apr 30 00:55:52 2022 +0200

    fixed input checking
    
    fixes Heap-buffer-overflow WRITE 2 Â· do_fileid
    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=45430

diff --git a/src/pkcs15init/profile.c b/src/pkcs15init/profile.c
index d2376abf..598daf39 100644
--- a/src/pkcs15init/profile.c
+++ b/src/pkcs15init/profile.c
@@ -1325,39 +1325,43 @@ static int
 do_fileid(struct state *cur, int argc, char **argv)
 {
 	struct file_info *fi;
 	struct sc_file	*df, *file = NULL;
 	struct sc_path	temp, *path = NULL;
 
 	if (!cur->file) {
 		parse_error(cur, "Invalid state\n");
 		return 1;
 	}
 	file = cur->file->file;
 	path = &file->path;
 
 	/* sc_format_path doesn't return an error indication
 	 * when it's unable to parse the path */
 	sc_format_path(argv[0], &temp);
 	if (temp.len != 2) {
 		parse_error(cur, "Invalid file ID length\n");
 		return 1;
 	}
 
 	/* Get the DF, if any */
 	if ((fi = cur->file->parent) && (df = fi->file)) {
 		if (!df->path.len && !df->path.aid.len) {
 			parse_error(cur, "No path/fileid set for parent DF\n");
 			return 1;
 		}
 		if (df->path.len + 2 > sizeof(df->path.value)) {
 			parse_error(cur, "File path too long\n");
 			return 1;
 		}
 		*path = df->path;
 	}
+	if (path->len + 2 > sizeof(path->value)) {
+		parse_error(cur, "File path too long\n");
+		return 1;
+	}
 	memcpy(path->value + path->len, temp.value, 2);
 	path->len += 2;
 
 	file->id = (temp.value[0] << 8) | temp.value[1];
 	return 0;
 }
