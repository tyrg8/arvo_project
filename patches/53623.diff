commit a9d15d43eb0f976b982bf2ad6ec1d8ac084c7ded
Author: Michael Niedermayer <michael@niedermayer.cc>
Date:   Wed Nov 23 21:27:13 2022 +0100

    avcodec/vqcdec: Check width & 15
    
    Various parts of the code assume that width can be divided by various powers of 2
    without rounding
    
    Fixes: out of array access
    Fixes: 53623/clusterfuzz-testcase-minimized-ffmpeg_AV_CODEC_ID_VQC_fuzzer-6209269924233216
    
    Found-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg
    Reviewed-by: Peter Ross <pross@xvid.org>
    Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

diff --git a/libavcodec/vqcdec.c b/libavcodec/vqcdec.c
index 18cd99462e..c3bce87974 100644
--- a/libavcodec/vqcdec.c
+++ b/libavcodec/vqcdec.c
@@ -69,30 +69,33 @@ typedef struct VqcContext {
 static av_cold int vqc_decode_init(AVCodecContext * avctx)
 {
     static AVOnce init_static_once = AV_ONCE_INIT;
     VqcContext *s = avctx->priv_data;
 
+    if (avctx->width & 15)
+        return AVERROR_PATCHWELCOME;
+
     s->vectors = av_malloc((avctx->width * avctx->height * 3) / 2);
     if (!s->vectors)
         return AVERROR(ENOMEM);
 
     s->coeff = av_malloc_array(2 * avctx->width, sizeof(s->coeff[0]));
     if (!s->coeff)
         return AVERROR(ENOMEM);
 
     s->tmp1 = av_malloc_array(avctx->width / 2, sizeof(s->tmp1[0]));
     if (!s->tmp1)
         return AVERROR(ENOMEM);
 
     s->tmp2 = av_malloc_array(avctx->width / 2, sizeof(s->tmp2[0]));
     if (!s->tmp2)
         return AVERROR(ENOMEM);
 
     avctx->pix_fmt = AV_PIX_FMT_YUV420P;
     s->frame = av_frame_alloc();
     if (!s->frame)
         return AVERROR(ENOMEM);
 
     ff_thread_once(&init_static_once, vqc_init_static_data);
 
     return 0;
 }
