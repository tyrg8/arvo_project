commit 6dde9f7dc03f94648ce65e203eb1ca382a63016a
Author: John Reiser <jreiser@BitWagon.com>
Date:   Wed Jan 10 10:05:28 2024 -0800

    find_overlay_offset() did not check carefully enough
    
    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=65518
    https://github.com/upx/upx/issues/760
            modified:   p_unix.cpp

diff --git a/src/p_unix.cpp b/src/p_unix.cpp
index 40321268..bb472cdc 100644
--- a/src/p_unix.cpp
+++ b/src/p_unix.cpp
@@ -572,27 +572,27 @@ tribool PackUnix::canUnpack()
 int PackUnix::find_overlay_offset(MemBuffer const &buf)
 {
     int const small = 32 + sizeof(overlay_offset);
     int const bufsize = buf.getSize();
     int i = bufsize;
     while (i > small && 0 == buf[--i]) { }
     i -= small;
     // allow incompressible extents
     if (i < 0 || !getPackHeader(buf + i, bufsize - i, true))
         return false;
 
     int l = ph.buf_offset + ph.getPackHeaderSize();
-    if (l < 0 || l + 4 > bufsize)
+    if (l < 0 || i + l + 4 > bufsize)
         throwCantUnpack("file corrupted");
     overlay_offset = get_te32(buf + i + l);
     if ((off_t)overlay_offset >= file_size)
         throwCantUnpack("file corrupted");
 
     return true;
 }
 
 /*************************************************************************
 // Generic Unix unpack().
 //
 // This code looks much like the one in stub/l_linux.c
 // See notes there.
 **************************************************************************/
