commit bf1ba89a400038deee7742c97327037bbd58f1d3
Author: RÃ©mi Denis-Courmont <remi@remlab.net>
Date:   Wed Sep 15 17:04:57 2021 +0300

    demux: require :// in MRL
    
    Otherwise, creating the demux won't work anyway.
    This is consistent with the current behaviour of access_New().

diff --git a/src/input/demux.c b/src/input/demux.c
index 1daf74b4a9..673213102b 100644
--- a/src/input/demux.c
+++ b/src/input/demux.c
@@ -117,79 +117,84 @@ static int demux_Probe(void *func, bool forced, va_list ap)
 demux_t *demux_NewAdvanced( vlc_object_t *p_obj, input_thread_t *p_input,
                             const char *module, const char *url,
                             stream_t *s, es_out_t *out, bool b_preparsing )
 {
+    const char *p = strstr(url, "://");
+    if (p == NULL) {
+        errno = EINVAL;
+        return NULL;
+    }
+
     struct vlc_demux_private *priv;
     demux_t *p_demux = vlc_stream_CustomNew(p_obj, demux_DestroyDemux,
                                             sizeof (*priv), "demux");
 
     if (unlikely(p_demux == NULL))
         return NULL;
 
     assert(s != NULL);
     priv = vlc_stream_Private(p_demux);
 
     p_demux->p_input_item = p_input ? input_GetItem(p_input) : NULL;
     p_demux->psz_name = strdup(module);
     if (unlikely(p_demux->psz_name == NULL))
         goto error;
 
     p_demux->psz_url = strdup(url);
     if (unlikely(p_demux->psz_url == NULL))
         goto error;
 
-    const char *p = strstr(p_demux->psz_url, "://");
-    p_demux->psz_location = (p != NULL) ? (p + 3) : "";
+    p_demux->psz_location = p_demux->psz_url + 3 + (p - url);
     p_demux->psz_filepath = get_path(p_demux->psz_location); /* parse URL */
 
     if( !b_preparsing )
         msg_Dbg( p_obj, "creating demux \"%s\", URL: %s, path: %s",
                  module, url, p_demux->psz_filepath );
 
     p_demux->s              = s;
     p_demux->out            = out;
     p_demux->b_preparsing   = b_preparsing;
 
     p_demux->pf_readdir = NULL;
     p_demux->pf_demux   = NULL;
     p_demux->pf_control = NULL;
     p_demux->p_sys      = NULL;
 
     char *modbuf = NULL;
     bool strict = true;
 
     if (!strcasecmp(module, "any" ) || module[0] == '\0') {
         /* Look up demux by content type for hard to detect formats */
         char *type = stream_MimeType(s);
 
         if (type != NULL) {
             module = demux_NameFromMimeType(type);
             free(type);
         }
         strict = false;
     }
 
     if (strcasecmp(module, "any") == 0 && p_demux->psz_filepath != NULL)
     {
         const char *ext = strrchr(p_demux->psz_filepath, '.');
 
         if (ext != NULL) {
             if (b_preparsing && !vlc_ascii_strcasecmp(ext, ".mp3"))
                 module = "mpga";
             else
             if (likely(asprintf(&modbuf, "ext-%s", ext + 1) >= 0))
                 module = modbuf;
         }
         strict = false;
     }
 
     priv->module = vlc_module_load(p_demux, "demux", module, strict,
                                    demux_Probe, p_demux);
     free(modbuf);
 
     if (priv->module == NULL)
     {
         free( p_demux->psz_filepath );
         goto error;
     }
 
     return p_demux;
