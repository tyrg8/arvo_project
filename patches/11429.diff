commit 0bcf3488a4989c2724f0c4383401b0d0dcfc3dcc
Author: Roman Lebedev <lebedev.ri@gmail.com>
Date:   Sun Nov 18 11:23:16 2018 +0300

    VC5Decompressor: HighPassBand::decode(): fix off-by-one in out buffer check

diff --git a/src/librawspeed/decompressors/VC5Decompressor.cpp b/src/librawspeed/decompressors/VC5Decompressor.cpp
index cffa9bae..b0c7e738 100644
--- a/src/librawspeed/decompressors/VC5Decompressor.cpp
+++ b/src/librawspeed/decompressors/VC5Decompressor.cpp
@@ -531,28 +531,28 @@ void VC5Decompressor::Wavelet::LowPassBand::decode(const Wavelet& wavelet) {
 void VC5Decompressor::Wavelet::HighPassBand::decode(const Wavelet& wavelet) {
   auto dequantize = [quant = quant](int16_t val) -> int16_t {
     return mVC5DecompandingTable[uint16_t(val)] * quant;
   };
 
   data = Array2DRef<int16_t>::create(wavelet.width, wavelet.height);
   const Array2DRef<int16_t> dst(data.data(), wavelet.width, wavelet.height);
 
   BitPumpMSB bits(bs);
   // decode highpass band
   int pixelValue = 0;
   unsigned int count = 0;
   int nPixels = wavelet.width * wavelet.height;
   for (int iPixel = 0; iPixel < nPixels;) {
     getRLV(&bits, &pixelValue, &count);
     for (; count > 0; --count) {
-      if (iPixel > nPixels)
+      if (iPixel >= nPixels)
         ThrowRDE("Buffer overflow");
       data[iPixel] = dequantize(pixelValue);
       ++iPixel;
     }
   }
   if (bits.getPosition() < bits.getSize()) {
     getRLV(&bits, &pixelValue, &count);
     if (pixelValue != MARKER_BAND_END || count != 0)
       ThrowRDE("EndOfBand marker not found");
   }
 }
