commit 404b736883726778fd8d99776d0c28652394711d
Author: Roman Lebedev <lebedev.ri@gmail.com>
Date:   Fri Dec 29 00:27:47 2017 +0300

    FujiDecompressor: actually check which CFA colors we got.

diff --git a/src/librawspeed/decompressors/FujiDecompressor.cpp b/src/librawspeed/decompressors/FujiDecompressor.cpp
index 013dc2a0..44459419 100644
--- a/src/librawspeed/decompressors/FujiDecompressor.cpp
+++ b/src/librawspeed/decompressors/FujiDecompressor.cpp
@@ -38,27 +38,37 @@ namespace rawspeed {
 FujiDecompressor::FujiDecompressor(const RawImage& img, ByteStream input_)
     : AbstractParallelizedDecompressor(img), input(std::move(input_)) {
   if (mRaw->getCpp() != 1 || mRaw->getDataType() != TYPE_USHORT16 ||
       mRaw->getBpp() != 2)
     ThrowRDE("Unexpected component count / data type");
 
   input.setByteOrder(Endianness::big);
 
   header = FujiHeader(&input);
   if (!header)
     ThrowRDE("compressed RAF header check");
 
   if (mRaw->dim != iPoint2D(header.raw_width, header.raw_height))
     ThrowRDE("RAF header specifies different dimensions!");
 
   if (12 == header.raw_bits) {
     ThrowRDE("Aha, finally, a 12-bit compressed RAF! Please consider providing "
              "samples on <https://raw.pixls.us/>, thanks!");
   }
 
   for (int i = 0; i < 6; i++) {
-    for (int j = 0; j < 6; j++)
-      CFA[i][j] = mRaw->cfa.getColorAt(j, i);
+    for (int j = 0; j < 6; j++) {
+      const CFAColor c = mRaw->cfa.getColorAt(j, i);
+      switch (c) {
+      case CFA_RED:
+      case CFA_GREEN:
+      case CFA_BLUE:
+        CFA[i][j] = c;
+        break;
+      default:
+        ThrowRDE("Got unexpected color %u", c);
+      }
+    }
   }
 
   fuji_compressed_load_raw();
 }
