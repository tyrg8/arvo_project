changeset:   16634:1aece932bb29
parent:      16632:b067afcd6aa7
parent:      16633:9164b6c0f0a6
user:        Bob Friesenhahn <bfriesen@GraphicsMagick.org>
date:        Fri Jan 14 18:08:18 2022 -0600
summary:     Merge heif

diff -r b067afcd6aa7 -r 1aece932bb29 ChangeLog
--- a/ChangeLog	Fri Jan 14 15:01:00 2022 -0600
+++ b/ChangeLog	Fri Jan 14 18:08:18 2022 -0600
@@ -1,5 +1,8 @@
 2022-01-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>
 
+        * coders/heif.c: HEIF reader written by Tobias Mark.  From
+        SourceForge Code Merge Request #15: "Added minimal heif support".
+
         * magick/blob.c (ReadBlobStream): Fix EOF logic similar to
         ReadBlob. Addresses oss-fuzz 43617
         "graphicsmagick:coder_P7_fuzzer: Use-of-uninitialized-value in
diff -r b067afcd6aa7 -r 1aece932bb29 Makefile.in
--- a/Makefile.in	Fri Jan 14 15:01:00 2022 -0600
+++ b/Makefile.in	Fri Jan 14 18:08:18 2022 -0600
@@ -522,6 +522,15 @@
 	$(AM_CFLAGS) $(CFLAGS) $(coders_gray_la_LDFLAGS) $(LDFLAGS) -o \
 	$@
 @WITH_MODULES_TRUE@am_coders_gray_la_rpath = -rpath $(codersdir)
+coders_heif_la_DEPENDENCIES = $(LIBMAGICK) $(am__DEPENDENCIES_1)
+am_coders_heif_la_OBJECTS = coders/heif_la-heif.lo
+coders_heif_la_OBJECTS = $(am_coders_heif_la_OBJECTS)
+coders_heif_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
+	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
+	$(AM_CFLAGS) $(CFLAGS) $(coders_heif_la_LDFLAGS) $(LDFLAGS) -o \
+	$@
+@HasHEIF_TRUE@@WITH_MODULES_TRUE@am_coders_heif_la_rpath = -rpath \
+@HasHEIF_TRUE@@WITH_MODULES_TRUE@	$(codersdir)
 coders_histogram_la_DEPENDENCIES = $(LIBMAGICK)
 am_coders_histogram_la_OBJECTS = coders/histogram_la-histogram.lo
 coders_histogram_la_OBJECTS = $(am_coders_histogram_la_OBJECTS)
@@ -1219,7 +1228,7 @@
 	coders/psd.c coders/dps.c coders/clipboard.c coders/emf.c \
 	coders/fpx.c coders/jbig.c coders/jnx.c coders/jpeg.c \
 	coders/jp2.c coders/ept.c coders/tiff.c coders/x.c \
-	coders/xwd.c coders/webp.c filters/analyze.c
+	coders/xwd.c coders/webp.c coders/heif.c filters/analyze.c
 @HasX11_TRUE@am__objects_1 = magick/libGraphicsMagick_la-animate.lo \
 @HasX11_TRUE@	magick/libGraphicsMagick_la-display.lo \
 @HasX11_TRUE@	magick/libGraphicsMagick_la-PreRvIcccm.lo \
@@ -1325,7 +1334,9 @@
 @HasX11_TRUE@	coders/magick_libGraphicsMagick_la-xwd.lo
 @HasWEBP_TRUE@am__objects_14 =  \
 @HasWEBP_TRUE@	coders/magick_libGraphicsMagick_la-webp.lo
-am__objects_15 = $(am__objects_4) \
+@HasHEIF_TRUE@am__objects_15 =  \
+@HasHEIF_TRUE@	coders/magick_libGraphicsMagick_la-heif.lo
+am__objects_16 = $(am__objects_4) \
 	coders/magick_libGraphicsMagick_la-art.lo \
 	coders/magick_libGraphicsMagick_la-avs.lo \
 	coders/magick_libGraphicsMagick_la-bmp.lo \
@@ -1414,11 +1425,12 @@
 	coders/magick_libGraphicsMagick_la-yuv.lo $(am__objects_5) \
 	$(am__objects_6) $(am__objects_7) $(am__objects_8) \
 	$(am__objects_9) $(am__objects_10) $(am__objects_11) \
-	$(am__objects_12) $(am__objects_13) $(am__objects_14)
-am__objects_16 = filters/magick_libGraphicsMagick_la-analyze.lo
+	$(am__objects_12) $(am__objects_13) $(am__objects_14) \
+	$(am__objects_15)
+am__objects_17 = filters/magick_libGraphicsMagick_la-analyze.lo
 @WITH_MODULES_FALSE@am_magick_libGraphicsMagick_la_OBJECTS =  \
 @WITH_MODULES_FALSE@	$(am__objects_2) $(am__objects_3) \
-@WITH_MODULES_FALSE@	$(am__objects_15) $(am__objects_16)
+@WITH_MODULES_FALSE@	$(am__objects_16) $(am__objects_17)
 @WITH_MODULES_TRUE@am_magick_libGraphicsMagick_la_OBJECTS =  \
 @WITH_MODULES_TRUE@	$(am__objects_2) $(am__objects_3)
 magick_libGraphicsMagick_la_OBJECTS =  \
@@ -1429,11 +1441,11 @@
 	$(LDFLAGS) -o $@
 wand_libGraphicsMagickWand_la_DEPENDENCIES = $(LIBMAGICK) \
 	$(am__DEPENDENCIES_1)
-am__objects_17 = wand/libGraphicsMagickWand_la-drawing_wand.lo \
+am__objects_18 = wand/libGraphicsMagickWand_la-drawing_wand.lo \
 	wand/libGraphicsMagickWand_la-magick_compat.lo \
 	wand/libGraphicsMagickWand_la-magick_wand.lo \
 	wand/libGraphicsMagickWand_la-pixel_wand.lo
-am_wand_libGraphicsMagickWand_la_OBJECTS = $(am__objects_17)
+am_wand_libGraphicsMagickWand_la_OBJECTS = $(am__objects_18)
 wand_libGraphicsMagickWand_la_OBJECTS =  \
 	$(am_wand_libGraphicsMagickWand_la_OBJECTS)
 wand_libGraphicsMagickWand_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
@@ -1644,6 +1656,7 @@
 	coders/$(DEPDIR)/gif_la-gif.Plo \
 	coders/$(DEPDIR)/gradient_la-gradient.Plo \
 	coders/$(DEPDIR)/gray_la-gray.Plo \
+	coders/$(DEPDIR)/heif_la-heif.Plo \
 	coders/$(DEPDIR)/histogram_la-histogram.Plo \
 	coders/$(DEPDIR)/hrz_la-hrz.Plo \
 	coders/$(DEPDIR)/html_la-html.Plo \
@@ -1681,6 +1694,7 @@
 	coders/$(DEPDIR)/magick_libGraphicsMagick_la-gif.Plo \
 	coders/$(DEPDIR)/magick_libGraphicsMagick_la-gradient.Plo \
 	coders/$(DEPDIR)/magick_libGraphicsMagick_la-gray.Plo \
+	coders/$(DEPDIR)/magick_libGraphicsMagick_la-heif.Plo \
 	coders/$(DEPDIR)/magick_libGraphicsMagick_la-histogram.Plo \
 	coders/$(DEPDIR)/magick_libGraphicsMagick_la-hrz.Plo \
 	coders/$(DEPDIR)/magick_libGraphicsMagick_la-html.Plo \
@@ -1965,46 +1979,47 @@
 	$(coders_ept_la_SOURCES) $(coders_fax_la_SOURCES) \
 	$(coders_fits_la_SOURCES) $(coders_fpx_la_SOURCES) \
 	$(coders_gif_la_SOURCES) $(coders_gradient_la_SOURCES) \
-	$(coders_gray_la_SOURCES) $(coders_histogram_la_SOURCES) \
-	$(coders_hrz_la_SOURCES) $(coders_html_la_SOURCES) \
-	$(coders_icon_la_SOURCES) $(coders_identity_la_SOURCES) \
-	$(coders_info_la_SOURCES) $(coders_jbig_la_SOURCES) \
-	$(coders_jnx_la_SOURCES) $(coders_jp2_la_SOURCES) \
-	$(coders_jpeg_la_SOURCES) $(coders_label_la_SOURCES) \
-	$(coders_locale_la_SOURCES) $(coders_logo_la_SOURCES) \
-	$(coders_mac_la_SOURCES) $(coders_map_la_SOURCES) \
-	$(coders_mat_la_SOURCES) $(coders_matte_la_SOURCES) \
-	$(coders_meta_la_SOURCES) $(coders_miff_la_SOURCES) \
-	$(coders_mono_la_SOURCES) $(coders_mpc_la_SOURCES) \
-	$(coders_mpeg_la_SOURCES) $(coders_mpr_la_SOURCES) \
-	$(coders_msl_la_SOURCES) $(coders_mtv_la_SOURCES) \
-	$(coders_mvg_la_SOURCES) $(coders_null_la_SOURCES) \
-	$(coders_otb_la_SOURCES) $(coders_palm_la_SOURCES) \
-	$(coders_pcd_la_SOURCES) $(coders_pcl_la_SOURCES) \
-	$(coders_pcx_la_SOURCES) $(coders_pdb_la_SOURCES) \
-	$(coders_pdf_la_SOURCES) $(coders_pict_la_SOURCES) \
-	$(coders_pix_la_SOURCES) $(coders_plasma_la_SOURCES) \
-	$(coders_png_la_SOURCES) $(coders_pnm_la_SOURCES) \
-	$(coders_preview_la_SOURCES) $(coders_ps_la_SOURCES) \
-	$(coders_ps2_la_SOURCES) $(coders_ps3_la_SOURCES) \
-	$(coders_psd_la_SOURCES) $(coders_pwp_la_SOURCES) \
-	$(coders_rgb_la_SOURCES) $(coders_rla_la_SOURCES) \
-	$(coders_rle_la_SOURCES) $(coders_sct_la_SOURCES) \
-	$(coders_sfw_la_SOURCES) $(coders_sgi_la_SOURCES) \
-	$(coders_stegano_la_SOURCES) $(coders_sun_la_SOURCES) \
-	$(coders_svg_la_SOURCES) $(coders_tga_la_SOURCES) \
-	$(coders_tiff_la_SOURCES) $(coders_tile_la_SOURCES) \
-	$(coders_tim_la_SOURCES) $(coders_topol_la_SOURCES) \
-	$(coders_ttf_la_SOURCES) $(coders_txt_la_SOURCES) \
-	$(coders_uil_la_SOURCES) $(coders_url_la_SOURCES) \
-	$(coders_uyvy_la_SOURCES) $(coders_vicar_la_SOURCES) \
-	$(coders_vid_la_SOURCES) $(coders_viff_la_SOURCES) \
-	$(coders_wbmp_la_SOURCES) $(coders_webp_la_SOURCES) \
-	$(coders_wmf_la_SOURCES) $(coders_wpg_la_SOURCES) \
-	$(coders_x_la_SOURCES) $(coders_xbm_la_SOURCES) \
-	$(coders_xc_la_SOURCES) $(coders_xcf_la_SOURCES) \
-	$(coders_xpm_la_SOURCES) $(coders_xwd_la_SOURCES) \
-	$(coders_yuv_la_SOURCES) $(filters_analyze_la_SOURCES) \
+	$(coders_gray_la_SOURCES) $(coders_heif_la_SOURCES) \
+	$(coders_histogram_la_SOURCES) $(coders_hrz_la_SOURCES) \
+	$(coders_html_la_SOURCES) $(coders_icon_la_SOURCES) \
+	$(coders_identity_la_SOURCES) $(coders_info_la_SOURCES) \
+	$(coders_jbig_la_SOURCES) $(coders_jnx_la_SOURCES) \
+	$(coders_jp2_la_SOURCES) $(coders_jpeg_la_SOURCES) \
+	$(coders_label_la_SOURCES) $(coders_locale_la_SOURCES) \
+	$(coders_logo_la_SOURCES) $(coders_mac_la_SOURCES) \
+	$(coders_map_la_SOURCES) $(coders_mat_la_SOURCES) \
+	$(coders_matte_la_SOURCES) $(coders_meta_la_SOURCES) \
+	$(coders_miff_la_SOURCES) $(coders_mono_la_SOURCES) \
+	$(coders_mpc_la_SOURCES) $(coders_mpeg_la_SOURCES) \
+	$(coders_mpr_la_SOURCES) $(coders_msl_la_SOURCES) \
+	$(coders_mtv_la_SOURCES) $(coders_mvg_la_SOURCES) \
+	$(coders_null_la_SOURCES) $(coders_otb_la_SOURCES) \
+	$(coders_palm_la_SOURCES) $(coders_pcd_la_SOURCES) \
+	$(coders_pcl_la_SOURCES) $(coders_pcx_la_SOURCES) \
+	$(coders_pdb_la_SOURCES) $(coders_pdf_la_SOURCES) \
+	$(coders_pict_la_SOURCES) $(coders_pix_la_SOURCES) \
+	$(coders_plasma_la_SOURCES) $(coders_png_la_SOURCES) \
+	$(coders_pnm_la_SOURCES) $(coders_preview_la_SOURCES) \
+	$(coders_ps_la_SOURCES) $(coders_ps2_la_SOURCES) \
+	$(coders_ps3_la_SOURCES) $(coders_psd_la_SOURCES) \
+	$(coders_pwp_la_SOURCES) $(coders_rgb_la_SOURCES) \
+	$(coders_rla_la_SOURCES) $(coders_rle_la_SOURCES) \
+	$(coders_sct_la_SOURCES) $(coders_sfw_la_SOURCES) \
+	$(coders_sgi_la_SOURCES) $(coders_stegano_la_SOURCES) \
+	$(coders_sun_la_SOURCES) $(coders_svg_la_SOURCES) \
+	$(coders_tga_la_SOURCES) $(coders_tiff_la_SOURCES) \
+	$(coders_tile_la_SOURCES) $(coders_tim_la_SOURCES) \
+	$(coders_topol_la_SOURCES) $(coders_ttf_la_SOURCES) \
+	$(coders_txt_la_SOURCES) $(coders_uil_la_SOURCES) \
+	$(coders_url_la_SOURCES) $(coders_uyvy_la_SOURCES) \
+	$(coders_vicar_la_SOURCES) $(coders_vid_la_SOURCES) \
+	$(coders_viff_la_SOURCES) $(coders_wbmp_la_SOURCES) \
+	$(coders_webp_la_SOURCES) $(coders_wmf_la_SOURCES) \
+	$(coders_wpg_la_SOURCES) $(coders_x_la_SOURCES) \
+	$(coders_xbm_la_SOURCES) $(coders_xc_la_SOURCES) \
+	$(coders_xcf_la_SOURCES) $(coders_xpm_la_SOURCES) \
+	$(coders_xwd_la_SOURCES) $(coders_yuv_la_SOURCES) \
+	$(filters_analyze_la_SOURCES) \
 	$(magick_libGraphicsMagick_la_SOURCES) \
 	$(wand_libGraphicsMagickWand_la_SOURCES) \
 	$(Magick___demo_analyze_SOURCES) \
@@ -2042,46 +2057,47 @@
 	$(coders_ept_la_SOURCES) $(coders_fax_la_SOURCES) \
 	$(coders_fits_la_SOURCES) $(coders_fpx_la_SOURCES) \
 	$(coders_gif_la_SOURCES) $(coders_gradient_la_SOURCES) \
-	$(coders_gray_la_SOURCES) $(coders_histogram_la_SOURCES) \
-	$(coders_hrz_la_SOURCES) $(coders_html_la_SOURCES) \
-	$(coders_icon_la_SOURCES) $(coders_identity_la_SOURCES) \
-	$(coders_info_la_SOURCES) $(coders_jbig_la_SOURCES) \
-	$(coders_jnx_la_SOURCES) $(coders_jp2_la_SOURCES) \
-	$(coders_jpeg_la_SOURCES) $(coders_label_la_SOURCES) \
-	$(coders_locale_la_SOURCES) $(coders_logo_la_SOURCES) \
-	$(coders_mac_la_SOURCES) $(coders_map_la_SOURCES) \
-	$(coders_mat_la_SOURCES) $(coders_matte_la_SOURCES) \
-	$(coders_meta_la_SOURCES) $(coders_miff_la_SOURCES) \
-	$(coders_mono_la_SOURCES) $(coders_mpc_la_SOURCES) \
-	$(coders_mpeg_la_SOURCES) $(coders_mpr_la_SOURCES) \
-	$(coders_msl_la_SOURCES) $(coders_mtv_la_SOURCES) \
-	$(coders_mvg_la_SOURCES) $(coders_null_la_SOURCES) \
-	$(coders_otb_la_SOURCES) $(coders_palm_la_SOURCES) \
-	$(coders_pcd_la_SOURCES) $(coders_pcl_la_SOURCES) \
-	$(coders_pcx_la_SOURCES) $(coders_pdb_la_SOURCES) \
-	$(coders_pdf_la_SOURCES) $(coders_pict_la_SOURCES) \
-	$(coders_pix_la_SOURCES) $(coders_plasma_la_SOURCES) \
-	$(coders_png_la_SOURCES) $(coders_pnm_la_SOURCES) \
-	$(coders_preview_la_SOURCES) $(coders_ps_la_SOURCES) \
-	$(coders_ps2_la_SOURCES) $(coders_ps3_la_SOURCES) \
-	$(coders_psd_la_SOURCES) $(coders_pwp_la_SOURCES) \
-	$(coders_rgb_la_SOURCES) $(coders_rla_la_SOURCES) \
-	$(coders_rle_la_SOURCES) $(coders_sct_la_SOURCES) \
-	$(coders_sfw_la_SOURCES) $(coders_sgi_la_SOURCES) \
-	$(coders_stegano_la_SOURCES) $(coders_sun_la_SOURCES) \
-	$(coders_svg_la_SOURCES) $(coders_tga_la_SOURCES) \
-	$(coders_tiff_la_SOURCES) $(coders_tile_la_SOURCES) \
-	$(coders_tim_la_SOURCES) $(coders_topol_la_SOURCES) \
-	$(coders_ttf_la_SOURCES) $(coders_txt_la_SOURCES) \
-	$(coders_uil_la_SOURCES) $(coders_url_la_SOURCES) \
-	$(coders_uyvy_la_SOURCES) $(coders_vicar_la_SOURCES) \
-	$(coders_vid_la_SOURCES) $(coders_viff_la_SOURCES) \
-	$(coders_wbmp_la_SOURCES) $(coders_webp_la_SOURCES) \
-	$(coders_wmf_la_SOURCES) $(coders_wpg_la_SOURCES) \
-	$(coders_x_la_SOURCES) $(coders_xbm_la_SOURCES) \
-	$(coders_xc_la_SOURCES) $(coders_xcf_la_SOURCES) \
-	$(coders_xpm_la_SOURCES) $(coders_xwd_la_SOURCES) \
-	$(coders_yuv_la_SOURCES) $(filters_analyze_la_SOURCES) \
+	$(coders_gray_la_SOURCES) $(coders_heif_la_SOURCES) \
+	$(coders_histogram_la_SOURCES) $(coders_hrz_la_SOURCES) \
+	$(coders_html_la_SOURCES) $(coders_icon_la_SOURCES) \
+	$(coders_identity_la_SOURCES) $(coders_info_la_SOURCES) \
+	$(coders_jbig_la_SOURCES) $(coders_jnx_la_SOURCES) \
+	$(coders_jp2_la_SOURCES) $(coders_jpeg_la_SOURCES) \
+	$(coders_label_la_SOURCES) $(coders_locale_la_SOURCES) \
+	$(coders_logo_la_SOURCES) $(coders_mac_la_SOURCES) \
+	$(coders_map_la_SOURCES) $(coders_mat_la_SOURCES) \
+	$(coders_matte_la_SOURCES) $(coders_meta_la_SOURCES) \
+	$(coders_miff_la_SOURCES) $(coders_mono_la_SOURCES) \
+	$(coders_mpc_la_SOURCES) $(coders_mpeg_la_SOURCES) \
+	$(coders_mpr_la_SOURCES) $(coders_msl_la_SOURCES) \
+	$(coders_mtv_la_SOURCES) $(coders_mvg_la_SOURCES) \
+	$(coders_null_la_SOURCES) $(coders_otb_la_SOURCES) \
+	$(coders_palm_la_SOURCES) $(coders_pcd_la_SOURCES) \
+	$(coders_pcl_la_SOURCES) $(coders_pcx_la_SOURCES) \
+	$(coders_pdb_la_SOURCES) $(coders_pdf_la_SOURCES) \
+	$(coders_pict_la_SOURCES) $(coders_pix_la_SOURCES) \
+	$(coders_plasma_la_SOURCES) $(coders_png_la_SOURCES) \
+	$(coders_pnm_la_SOURCES) $(coders_preview_la_SOURCES) \
+	$(coders_ps_la_SOURCES) $(coders_ps2_la_SOURCES) \
+	$(coders_ps3_la_SOURCES) $(coders_psd_la_SOURCES) \
+	$(coders_pwp_la_SOURCES) $(coders_rgb_la_SOURCES) \
+	$(coders_rla_la_SOURCES) $(coders_rle_la_SOURCES) \
+	$(coders_sct_la_SOURCES) $(coders_sfw_la_SOURCES) \
+	$(coders_sgi_la_SOURCES) $(coders_stegano_la_SOURCES) \
+	$(coders_sun_la_SOURCES) $(coders_svg_la_SOURCES) \
+	$(coders_tga_la_SOURCES) $(coders_tiff_la_SOURCES) \
+	$(coders_tile_la_SOURCES) $(coders_tim_la_SOURCES) \
+	$(coders_topol_la_SOURCES) $(coders_ttf_la_SOURCES) \
+	$(coders_txt_la_SOURCES) $(coders_uil_la_SOURCES) \
+	$(coders_url_la_SOURCES) $(coders_uyvy_la_SOURCES) \
+	$(coders_vicar_la_SOURCES) $(coders_vid_la_SOURCES) \
+	$(coders_viff_la_SOURCES) $(coders_wbmp_la_SOURCES) \
+	$(coders_webp_la_SOURCES) $(coders_wmf_la_SOURCES) \
+	$(coders_wpg_la_SOURCES) $(coders_x_la_SOURCES) \
+	$(coders_xbm_la_SOURCES) $(coders_xc_la_SOURCES) \
+	$(coders_xcf_la_SOURCES) $(coders_xpm_la_SOURCES) \
+	$(coders_xwd_la_SOURCES) $(coders_yuv_la_SOURCES) \
+	$(filters_analyze_la_SOURCES) \
 	$(am__magick_libGraphicsMagick_la_SOURCES_DIST) \
 	$(wand_libGraphicsMagickWand_la_SOURCES) \
 	$(Magick___demo_analyze_SOURCES) \
@@ -2486,6 +2502,7 @@
 LIB_DPS = @LIB_DPS@
 LIB_FPX = @LIB_FPX@
 LIB_GDI32 = @LIB_GDI32@
+LIB_HEIF = @LIB_HEIF@
 LIB_JBIG = @LIB_JBIG@
 LIB_JP2 = @LIB_JP2@
 LIB_JPEG = @LIB_JPEG@
@@ -2869,6 +2886,8 @@
 @HasX11_TRUE@MAGICK_X11_CODER_SRCS = coders/x.c coders/xwd.c
 @HasWEBP_TRUE@MAGICK_WEBP_MODULES = coders/webp.la
 @HasWEBP_TRUE@MAGICK_WEBP_SRCS = coders/webp.c
+@HasHEIF_TRUE@MAGICK_HEIF_MODULES = coders/heif.la
+@HasHEIF_TRUE@MAGICK_HEIF_SRCS = coders/heif.c
 @ENABLE_BROKEN_CODERS_TRUE@MAGICK_BROKEN_MODULES = coders/psd.la
 @ENABLE_BROKEN_CODERS_TRUE@MAGICK_BROKEN_SRCS = coders/psd.c
 MAGICK_CODER_CPPFLAGS = \
@@ -2972,7 +2991,8 @@
 	$(MAGICK_JP2_SRCS) \
 	$(MAGICK_TIFF_SRCS) \
 	$(MAGICK_X11_CODER_SRCS) \
-	$(MAGICK_WEBP_SRCS)
+	$(MAGICK_WEBP_SRCS) \
+	$(MAGICK_HEIF_SRCS)
 
 @WITH_MODULES_FALSE@coders_LTLIBRARIES = 
 @WITH_MODULES_TRUE@coders_LTLIBRARIES = \
@@ -3066,7 +3086,7 @@
 @WITH_MODULES_TRUE@	$(MAGICK_DPS_MODULES) $(MAGICK_FPX_MODULES) $(MAGICK_GDI32_MODULES) \
 @WITH_MODULES_TRUE@	$(MAGICK_JBIG_MODULES) $(MAGICK_JPEG_MODULES) $(MAGICK_JP2_MODULES) \
 @WITH_MODULES_TRUE@	$(MAGICK_PNG_MODULES) $(MAGICK_TIFF_MODULES) $(MAGICK_X11_CODER_MODULES) \
-@WITH_MODULES_TRUE@	$(MAGICK_WEBP_MODULES)
+@WITH_MODULES_TRUE@	$(MAGICK_WEBP_MODULES) $(MAGICK_HEIF_MODULES)
 
 
 # ART coder module
@@ -3674,6 +3694,12 @@
 coders_webp_la_CPPFLAGS = $(MAGICK_CODER_CPPFLAGS)
 coders_webp_la_LDFLAGS = $(MODULECOMMONFLAGS)
 coders_webp_la_LIBADD = $(LIBMAGICK) $(LIB_WEBP)
+
+# HEIF coder module
+coders_heif_la_SOURCES = coders/heif.c
+coders_heif_la_CPPFLAGS = $(MAGICK_CODER_CPPFLAGS)
+coders_heif_la_LDFLAGS = $(MODULECOMMONFLAGS)
+coders_heif_la_LIBADD = $(LIBMAGICK) $(LIB_HEIF)
 magickincdir = $(topincludedir)/magick
 
 # Headers which are installed
@@ -5344,6 +5370,11 @@
 
 coders/gray.la: $(coders_gray_la_OBJECTS) $(coders_gray_la_DEPENDENCIES) $(EXTRA_coders_gray_la_DEPENDENCIES) coders/$(am__dirstamp)
 	$(AM_V_CCLD)$(coders_gray_la_LINK) $(am_coders_gray_la_rpath) $(coders_gray_la_OBJECTS) $(coders_gray_la_LIBADD) $(LIBS)
+coders/heif_la-heif.lo: coders/$(am__dirstamp) \
+	coders/$(DEPDIR)/$(am__dirstamp)
+
+coders/heif.la: $(coders_heif_la_OBJECTS) $(coders_heif_la_DEPENDENCIES) $(EXTRA_coders_heif_la_DEPENDENCIES) coders/$(am__dirstamp)
+	$(AM_V_CCLD)$(coders_heif_la_LINK) $(am_coders_heif_la_rpath) $(coders_heif_la_OBJECTS) $(coders_heif_la_LIBADD) $(LIBS)
 coders/histogram_la-histogram.lo: coders/$(am__dirstamp) \
 	coders/$(DEPDIR)/$(am__dirstamp)
 
@@ -6115,6 +6146,8 @@
 	coders/$(DEPDIR)/$(am__dirstamp)
 coders/magick_libGraphicsMagick_la-webp.lo: coders/$(am__dirstamp) \
 	coders/$(DEPDIR)/$(am__dirstamp)
+coders/magick_libGraphicsMagick_la-heif.lo: coders/$(am__dirstamp) \
+	coders/$(DEPDIR)/$(am__dirstamp)
 filters/magick_libGraphicsMagick_la-analyze.lo:  \
 	filters/$(am__dirstamp) filters/$(DEPDIR)/$(am__dirstamp)
 
@@ -6471,6 +6504,7 @@
 @AMDEP_TRUE@@am__include@ @am__quote@coders/$(DEPDIR)/gif_la-gif.Plo@am__quote@ # am--include-marker
 @AMDEP_TRUE@@am__include@ @am__quote@coders/$(DEPDIR)/gradient_la-gradient.Plo@am__quote@ # am--include-marker
 @AMDEP_TRUE@@am__include@ @am__quote@coders/$(DEPDIR)/gray_la-gray.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@coders/$(DEPDIR)/heif_la-heif.Plo@am__quote@ # am--include-marker
 @AMDEP_TRUE@@am__include@ @am__quote@coders/$(DEPDIR)/histogram_la-histogram.Plo@am__quote@ # am--include-marker
 @AMDEP_TRUE@@am__include@ @am__quote@coders/$(DEPDIR)/hrz_la-hrz.Plo@am__quote@ # am--include-marker
 @AMDEP_TRUE@@am__include@ @am__quote@coders/$(DEPDIR)/html_la-html.Plo@am__quote@ # am--include-marker
@@ -6508,6 +6542,7 @@
 @AMDEP_TRUE@@am__include@ @am__quote@coders/$(DEPDIR)/magick_libGraphicsMagick_la-gif.Plo@am__quote@ # am--include-marker
 @AMDEP_TRUE@@am__include@ @am__quote@coders/$(DEPDIR)/magick_libGraphicsMagick_la-gradient.Plo@am__quote@ # am--include-marker
 @AMDEP_TRUE@@am__include@ @am__quote@coders/$(DEPDIR)/magick_libGraphicsMagick_la-gray.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@coders/$(DEPDIR)/magick_libGraphicsMagick_la-heif.Plo@am__quote@ # am--include-marker
 @AMDEP_TRUE@@am__include@ @am__quote@coders/$(DEPDIR)/magick_libGraphicsMagick_la-histogram.Plo@am__quote@ # am--include-marker
 @AMDEP_TRUE@@am__include@ @am__quote@coders/$(DEPDIR)/magick_libGraphicsMagick_la-hrz.Plo@am__quote@ # am--include-marker
 @AMDEP_TRUE@@am__include@ @am__quote@coders/$(DEPDIR)/magick_libGraphicsMagick_la-html.Plo@am__quote@ # am--include-marker
@@ -6931,6 +6966,13 @@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coders_gray_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o coders/gray_la-gray.lo `test -f 'coders/gray.c' || echo '$(srcdir)/'`coders/gray.c
 
+coders/heif_la-heif.lo: coders/heif.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coders_heif_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT coders/heif_la-heif.lo -MD -MP -MF coders/$(DEPDIR)/heif_la-heif.Tpo -c -o coders/heif_la-heif.lo `test -f 'coders/heif.c' || echo '$(srcdir)/'`coders/heif.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) coders/$(DEPDIR)/heif_la-heif.Tpo coders/$(DEPDIR)/heif_la-heif.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='coders/heif.c' object='coders/heif_la-heif.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coders_heif_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o coders/heif_la-heif.lo `test -f 'coders/heif.c' || echo '$(srcdir)/'`coders/heif.c
+
 coders/histogram_la-histogram.lo: coders/histogram.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coders_histogram_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT coders/histogram_la-histogram.lo -MD -MP -MF coders/$(DEPDIR)/histogram_la-histogram.Tpo -c -o coders/histogram_la-histogram.lo `test -f 'coders/histogram.c' || echo '$(srcdir)/'`coders/histogram.c
 @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) coders/$(DEPDIR)/histogram_la-histogram.Tpo coders/$(DEPDIR)/histogram_la-histogram.Plo
@@ -8758,6 +8800,13 @@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(magick_libGraphicsMagick_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o coders/magick_libGraphicsMagick_la-webp.lo `test -f 'coders/webp.c' || echo '$(srcdir)/'`coders/webp.c
 
+coders/magick_libGraphicsMagick_la-heif.lo: coders/heif.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(magick_libGraphicsMagick_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT coders/magick_libGraphicsMagick_la-heif.lo -MD -MP -MF coders/$(DEPDIR)/magick_libGraphicsMagick_la-heif.Tpo -c -o coders/magick_libGraphicsMagick_la-heif.lo `test -f 'coders/heif.c' || echo '$(srcdir)/'`coders/heif.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) coders/$(DEPDIR)/magick_libGraphicsMagick_la-heif.Tpo coders/$(DEPDIR)/magick_libGraphicsMagick_la-heif.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='coders/heif.c' object='coders/magick_libGraphicsMagick_la-heif.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(magick_libGraphicsMagick_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o coders/magick_libGraphicsMagick_la-heif.lo `test -f 'coders/heif.c' || echo '$(srcdir)/'`coders/heif.c
+
 filters/magick_libGraphicsMagick_la-analyze.lo: filters/analyze.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(magick_libGraphicsMagick_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT filters/magick_libGraphicsMagick_la-analyze.lo -MD -MP -MF filters/$(DEPDIR)/magick_libGraphicsMagick_la-analyze.Tpo -c -o filters/magick_libGraphicsMagick_la-analyze.lo `test -f 'filters/analyze.c' || echo '$(srcdir)/'`filters/analyze.c
 @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) filters/$(DEPDIR)/magick_libGraphicsMagick_la-analyze.Tpo filters/$(DEPDIR)/magick_libGraphicsMagick_la-analyze.Plo
@@ -10206,6 +10255,7 @@
 	-rm -f coders/$(DEPDIR)/gif_la-gif.Plo
 	-rm -f coders/$(DEPDIR)/gradient_la-gradient.Plo
 	-rm -f coders/$(DEPDIR)/gray_la-gray.Plo
+	-rm -f coders/$(DEPDIR)/heif_la-heif.Plo
 	-rm -f coders/$(DEPDIR)/histogram_la-histogram.Plo
 	-rm -f coders/$(DEPDIR)/hrz_la-hrz.Plo
 	-rm -f coders/$(DEPDIR)/html_la-html.Plo
@@ -10243,6 +10293,7 @@
 	-rm -f coders/$(DEPDIR)/magick_libGraphicsMagick_la-gif.Plo
 	-rm -f coders/$(DEPDIR)/magick_libGraphicsMagick_la-gradient.Plo
 	-rm -f coders/$(DEPDIR)/magick_libGraphicsMagick_la-gray.Plo
+	-rm -f coders/$(DEPDIR)/magick_libGraphicsMagick_la-heif.Plo
 	-rm -f coders/$(DEPDIR)/magick_libGraphicsMagick_la-histogram.Plo
 	-rm -f coders/$(DEPDIR)/magick_libGraphicsMagick_la-hrz.Plo
 	-rm -f coders/$(DEPDIR)/magick_libGraphicsMagick_la-html.Plo
@@ -10594,6 +10645,7 @@
 	-rm -f coders/$(DEPDIR)/gif_la-gif.Plo
 	-rm -f coders/$(DEPDIR)/gradient_la-gradient.Plo
 	-rm -f coders/$(DEPDIR)/gray_la-gray.Plo
+	-rm -f coders/$(DEPDIR)/heif_la-heif.Plo
 	-rm -f coders/$(DEPDIR)/histogram_la-histogram.Plo
 	-rm -f coders/$(DEPDIR)/hrz_la-hrz.Plo
 	-rm -f coders/$(DEPDIR)/html_la-html.Plo
@@ -10631,6 +10683,7 @@
 	-rm -f coders/$(DEPDIR)/magick_libGraphicsMagick_la-gif.Plo
 	-rm -f coders/$(DEPDIR)/magick_libGraphicsMagick_la-gradient.Plo
 	-rm -f coders/$(DEPDIR)/magick_libGraphicsMagick_la-gray.Plo
+	-rm -f coders/$(DEPDIR)/magick_libGraphicsMagick_la-heif.Plo
 	-rm -f coders/$(DEPDIR)/magick_libGraphicsMagick_la-histogram.Plo
 	-rm -f coders/$(DEPDIR)/magick_libGraphicsMagick_la-hrz.Plo
 	-rm -f coders/$(DEPDIR)/magick_libGraphicsMagick_la-html.Plo
diff -r b067afcd6aa7 -r 1aece932bb29 README.txt
--- a/README.txt	Fri Jan 14 15:01:00 2022 -0600
+++ b/README.txt	Fri Jan 14 18:08:18 2022 -0600
@@ -377,3 +377,9 @@
     https://github.com/ebiggers/libdeflate).  Linking with this
     library may be necessary for builds where libtiff depends on
     libdeflate.
+
+* GraphicsMagick requires the heif library from
+
+    https://github.com/strukturag/libheif
+
+    to read heif/heic files.
diff -r b067afcd6aa7 -r 1aece932bb29 coders/Makefile.am
--- a/coders/Makefile.am	Fri Jan 14 15:01:00 2022 -0600
+++ b/coders/Makefile.am	Fri Jan 14 18:08:18 2022 -0600
@@ -61,6 +61,11 @@
 MAGICK_WEBP_SRCS = coders/webp.c
 endif
 
+if HasHEIF
+MAGICK_HEIF_MODULES = coders/heif.la
+MAGICK_HEIF_SRCS = coders/heif.c
+endif
+
 if ENABLE_BROKEN_CODERS
 MAGICK_BROKEN_MODULES = coders/psd.la
 MAGICK_BROKEN_SRCS = coders/psd.c
@@ -167,7 +172,8 @@
 	$(MAGICK_JP2_SRCS) \
 	$(MAGICK_TIFF_SRCS) \
 	$(MAGICK_X11_CODER_SRCS) \
-	$(MAGICK_WEBP_SRCS)
+	$(MAGICK_WEBP_SRCS) \
+	$(MAGICK_HEIF_SRCS)
 
 if WITH_MODULES
 coders_LTLIBRARIES = \
@@ -261,7 +267,7 @@
 	$(MAGICK_DPS_MODULES) $(MAGICK_FPX_MODULES) $(MAGICK_GDI32_MODULES) \
 	$(MAGICK_JBIG_MODULES) $(MAGICK_JPEG_MODULES) $(MAGICK_JP2_MODULES) \
 	$(MAGICK_PNG_MODULES) $(MAGICK_TIFF_MODULES) $(MAGICK_X11_CODER_MODULES) \
-	$(MAGICK_WEBP_MODULES)
+	$(MAGICK_WEBP_MODULES) $(MAGICK_HEIF_MODULES)
 else
 coders_LTLIBRARIES =
 endif # WITH_MODULES
@@ -871,3 +877,9 @@
 coders_webp_la_CPPFLAGS    = $(MAGICK_CODER_CPPFLAGS)
 coders_webp_la_LDFLAGS     = $(MODULECOMMONFLAGS)
 coders_webp_la_LIBADD      = $(LIBMAGICK) $(LIB_WEBP)
+
+# HEIF coder module
+coders_heif_la_SOURCES     = coders/heif.c
+coders_heif_la_CPPFLAGS    = $(MAGICK_CODER_CPPFLAGS)
+coders_heif_la_LDFLAGS     = $(MODULECOMMONFLAGS)
+coders_heif_la_LIBADD      = $(LIBMAGICK) $(LIB_HEIF)
diff -r b067afcd6aa7 -r 1aece932bb29 coders/heif.c
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/coders/heif.c	Fri Jan 14 18:08:18 2022 -0600
@@ -0,0 +1,382 @@
+/*
+% Copyright (C) 2022 GraphicsMagick Group
+%
+% This program is covered by multiple licenses, which are described in
+% Copyright.txt. You should have received a copy of Copyright.txt with this
+% package; otherwise see http://www.graphicsmagick.org/www/Copyright.html.
+%
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%                                                                             %
+%                                                                             %
+%                       H   H  EEEEE  I  FFFFF                                %
+%                       H   H  E      I  F                                    %
+%                       HHHHH  EEEEE  I  FFFF                                 %
+%                       H   H  E      I  F                                    %
+%                       H   H  EEEEE  I  F                                    %
+%                                                                             %
+%                     Read Heif/Heic Image Format.                            %
+%                                                                             %
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+* Status: Support for reading a single image.
+*/
+
+#include "magick/studio.h"
+#include "magick/blob.h"
+#include "magick/colormap.h"
+#include "magick/log.h"
+#include "magick/constitute.h"
+#include "magick/magick.h"
+#include "magick/monitor.h"
+#include "magick/pixel_cache.h"
+#include "magick/profile.h"
+#include "magick/utility.h"
+#include "magick/resource.h"
+
+#if defined(HasHEIF)
+#include <libheif/heif.h>
+
+/*
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%                                                                             %
+%                                                                             %
+%                                                                             %
+%   R e a d H E I F I m a g e                                                 %
+%                                                                             %
+%                                                                             %
+%                                                                             %
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+%  ReadHEIFImage() reads an image in the HEIF image format.
+%
+%  The format of the ReadHEIFImage method is:
+%
+%      Image *ReadHEIFImage(const ImageInfo *image_info,
+%        ExceptionInfo *exception)
+%
+%  A description of each parameter follows:
+%
+%    o image_info: the image info.
+%
+%    o exception: return any errors or warnings in this structure.
+%
+*/
+
+#define HEIFReadCleanup()                                              \
+  if (heif_image) heif_image_release(heif_image);                      \
+  if (heif_image_handle) heif_image_handle_release(heif_image_handle); \
+  if (heif) heif_context_free(heif);                                   \
+  MagickFreeResourceLimitedMemory(in_buf)
+
+#define ThrowHEIFReaderException(code_,reason_,image_) \
+  {                                                    \
+    HEIFReadCleanup();                                 \
+    ThrowReaderException(code_,reason_,image_)         \
+  }
+
+
+static Image *ReadMetadata(struct heif_image_handle *heif_image_handle,
+                           Image *image, ExceptionInfo *exception)
+{
+  int
+    count,
+    i;
+
+  heif_item_id
+    *ids;
+
+  struct heif_error
+    err;
+
+  count=heif_image_handle_get_number_of_metadata_blocks(heif_image_handle, NULL);
+  if (count==0)
+    return image;
+
+  ids=MagickAllocateResourceLimitedArray(heif_item_id *,count,sizeof(*ids));
+  if (ids == (heif_item_id *) NULL)
+    ThrowReaderException(ResourceLimitError,MemoryAllocationFailed,image);
+
+  count=heif_image_handle_get_list_of_metadata_block_IDs(heif_image_handle, NULL,
+                                                         ids,count);
+
+  for (i=0; i<count; i++)
+    {
+      const char*
+        profile_name=heif_image_handle_get_metadata_type(heif_image_handle,ids[i]);
+
+      size_t
+        profile_size=heif_image_handle_get_metadata_size(heif_image_handle,ids[i]);
+
+      unsigned char*
+        profile;
+
+      profile=MagickAllocateResourceLimitedArray(unsigned char*,profile_size,
+                                                 sizeof(*profile));
+      if (profile == (unsigned char*) NULL)
+        {
+          MagickFreeResourceLimitedMemory(ids);
+          ThrowReaderException(ResourceLimitError,MemoryAllocationFailed,image);
+        }
+
+      err=heif_image_handle_get_metadata(heif_image_handle,ids[i],profile);
+
+      if (err.code != heif_error_Ok)
+        {
+          MagickFreeResourceLimitedMemory(profile);
+          MagickFreeResourceLimitedMemory(ids);
+          ThrowReaderException(CorruptImageError,
+                               AnErrorHasOccurredReadingFromFile,image);
+        }
+
+      if (strncmp(profile_name,"Exif",4) == 0 && profile_size > 4)
+        {
+          /* skip TIFF-Header */
+          SetImageProfile(image,profile_name,profile+4,profile_size-4);
+        }
+      else
+        {
+          SetImageProfile(image,profile_name,profile,profile_size);
+        }
+      MagickFreeResourceLimitedMemory(profile);
+    }
+  MagickFreeResourceLimitedMemory(ids);
+  return image;
+}
+
+static Image *ReadHEIFImage(const ImageInfo *image_info,
+                            ExceptionInfo *exception)
+{
+  Image
+    *image;
+
+  struct heif_context
+    *heif = NULL;
+
+  struct heif_error
+    heif_status;
+
+  struct heif_image_handle
+    *heif_image_handle = NULL;
+
+  struct heif_image
+    *heif_image = NULL;
+
+  size_t
+    in_len;
+
+  int
+    row_stride;
+
+  unsigned char
+    *in_buf = NULL;
+
+  const uint8_t
+    *pixels = NULL;
+
+  long
+    x,
+    y;
+
+  PixelPacket
+    *q;
+
+  assert(image_info != (const ImageInfo *) NULL);
+  assert(image_info->signature == MagickSignature);
+  assert(exception != (ExceptionInfo *) NULL);
+  assert(exception->signature == MagickSignature);
+
+  /*
+    Open image file.
+  */
+  image=AllocateImage(image_info);
+  if (image == (Image *) NULL)
+    ThrowReaderException(ResourceLimitError,MemoryAllocationFailed,image);
+
+  if (OpenBlob(image_info,image,ReadBinaryBlobMode,exception) == MagickFail)
+    ThrowReaderException(FileOpenError,UnableToOpenFile,image);
+
+  in_len=GetBlobSize(image);
+  in_buf=MagickAllocateResourceLimitedArray(unsigned char *,in_len,sizeof(*in_buf));
+  if (in_buf == (unsigned char *) NULL)
+    ThrowHEIFReaderException(ResourceLimitError,MemoryAllocationFailed,image);
+
+  if (ReadBlob(image,in_len,in_buf) != in_len)
+    ThrowHEIFReaderException(CorruptImageError, UnexpectedEndOfFile, image);
+
+  /* Init HEIF-Decoder handles */
+  heif=heif_context_alloc();
+
+  heif_status=heif_context_read_from_memory(heif, in_buf, in_len, NULL);
+  if (heif_status.code == heif_error_Unsupported_filetype
+      || heif_status.code == heif_error_Unsupported_feature)
+    ThrowHEIFReaderException(CoderError, ImageTypeNotSupported, image);
+  if (heif_status.code != heif_error_Ok)
+    ThrowHEIFReaderException(CorruptImageError, AnErrorHasOccurredReadingFromFile, image);
+
+  /* no support for reading multiple images but could be added */
+  if (heif_context_get_number_of_top_level_images(heif) != 1)
+    ThrowHEIFReaderException(CoderError, NumberOfImagesIsNotSupported, image);
+
+  heif_status=heif_context_get_primary_image_handle(heif, &heif_image_handle);
+  if (heif_status.code == heif_error_Memory_allocation_error)
+    ThrowHEIFReaderException(ResourceLimitError,MemoryAllocationFailed,image);
+  if (heif_status.code != heif_error_Ok)
+    ThrowHEIFReaderException(CorruptImageError, AnErrorHasOccurredReadingFromFile, image);
+
+  image->columns=heif_image_handle_get_width(heif_image_handle);
+  image->rows=heif_image_handle_get_height(heif_image_handle);
+  if (heif_image_handle_has_alpha_channel(heif_image_handle))
+    image->matte=MagickTrue;
+
+  if (!ReadMetadata(heif_image_handle, image, exception))
+    {
+      HEIFReadCleanup();
+      return NULL;
+    }
+
+  heif_status=heif_decode_image(heif_image_handle, &heif_image,
+                                heif_colorspace_RGB, image->matte ? heif_chroma_interleaved_RGBA :
+                                heif_chroma_interleaved_RGB, NULL);
+  if (heif_status.code == heif_error_Memory_allocation_error)
+    ThrowHEIFReaderException(ResourceLimitError,MemoryAllocationFailed,image);
+  if (heif_status.code != heif_error_Ok)
+    ThrowHEIFReaderException(CorruptImageError, AnErrorHasOccurredReadingFromFile, image);
+
+  image->depth=heif_image_get_bits_per_pixel(heif_image, heif_channel_interleaved);
+  /* the requested channel is interleaved there depth is a sum of all channels
+     split it up again: */
+  if (image->depth == 32 && image->matte)
+    image->depth = 8;
+  else if (image->depth == 24 && !image->matte)
+    image->depth = 8;
+  else
+    ThrowHEIFReaderException(CoderError, UnsupportedBitsPerSample, image);
+
+  pixels=heif_image_get_plane_readonly(heif_image, heif_channel_interleaved, &row_stride);
+  if (!pixels)
+    ThrowHEIFReaderException(CoderError, NoDataReturned, image);
+
+  for (y=0; y < (long)image->rows; y++)
+    {
+      q=SetImagePixelsEx(image,0,y,image->columns,1,exception);
+      if (q == (PixelPacket *) NULL)
+        ThrowHEIFReaderException(ResourceLimitError,MemoryAllocationFailed,image);
+      for (x=0; x < (long)image->columns; x++)
+        {
+          SetRedSample(q,ScaleCharToQuantum(*pixels++));
+          SetGreenSample(q,ScaleCharToQuantum(*pixels++));
+          SetBlueSample(q,ScaleCharToQuantum(*pixels++));
+          if (image->matte) {
+            SetOpacitySample(q,MaxRGB-ScaleCharToQuantum(*pixels++));
+          } else {
+            SetOpacitySample(q,OpaqueOpacity);
+          }
+          q++;
+        }
+      if (!SyncImagePixels(image))
+        ThrowHEIFReaderException(ResourceLimitError,MemoryAllocationFailed,image);
+    }
+
+  HEIFReadCleanup();
+  CloseBlob(image);
+  return image;
+}
+
+#endif
+
+/*
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%                                                                             %
+%                                                                             %
+%                                                                             %
+%   R e g i s t e r H E I F I m a g e                                         %
+%                                                                             %
+%                                                                             %
+%                                                                             %
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+%  Method RegisterHEIFImage adds attributes for the HEIF image format to
+%  the list of supported formats.  The attributes include the image format
+%  tag, a method to read and/or write the format and a brief
+%  description of the format.
+%
+%  The format of the RegisterHEIFImage method is:
+%
+%      RegisterHEIFImage(void)
+%
+*/
+ModuleExport void RegisterHEIFImage(void)
+{
+  static const char
+    description[] = "HEIF Image Format";
+
+  static char
+    version[20];
+
+  MagickInfo
+    *entry;
+
+  unsigned int
+    heif_major,
+    heif_minor,
+    heif_revision;
+
+  int encoder_version=heif_get_version_number();
+  heif_major=(encoder_version >> 16) & 0xff;
+  heif_minor=(encoder_version >> 8) & 0xff;
+  heif_revision=encoder_version & 0xff;
+  *version='\0';
+  (void) sprintf(version,
+                  "heif v%u.%u.%u", heif_major,
+                  heif_minor, heif_revision);
+
+  entry=SetMagickInfo("HEIF");
+#if defined(HasHEIF)
+  entry->decoder=(DecoderHandler) ReadHEIFImage;
+#endif
+  entry->description=description;
+  entry->adjoin=False;
+  entry->seekable_stream=MagickTrue;
+  if (*version != '\0')
+    entry->version=version;
+  entry->module="HEIF";
+  entry->coder_class=PrimaryCoderClass;
+  (void) RegisterMagickInfo(entry);
+
+  entry=SetMagickInfo("HEIC");
+#if defined(HasHEIF)
+  entry->decoder=(DecoderHandler) ReadHEIFImage;
+#endif
+  entry->description=description;
+  entry->adjoin=False;
+  entry->seekable_stream=MagickTrue;
+  if (*version != '\0')
+    entry->version=version;
+  entry->module="HEIF";
+  entry->coder_class=PrimaryCoderClass;
+  (void) RegisterMagickInfo(entry);
+}
+
+/*
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%                                                                             %
+%                                                                             %
+%                                                                             %
+%   U n r e g i s t e r H E I F I m a g e                                     %
+%                                                                             %
+%                                                                             %
+%                                                                             %
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%
+%  Method UnregisterHEIFImage removes format registrations made by the
+%  HEIF module from the list of supported formats.
+%
+%  The format of the UnregisterHEIFImage method is:
+%
+%      UnregisterHEIFImage(void)
+%
+*/
+ModuleExport void UnregisterHEIFImage(void)
+{
+  (void) UnregisterMagickInfo("HEIF");
+  (void) UnregisterMagickInfo("HEIC");
+}
diff -r b067afcd6aa7 -r 1aece932bb29 config/config.guess
--- a/config/config.guess	Fri Jan 14 15:01:00 2022 -0600
+++ b/config/config.guess	Fri Jan 14 18:08:18 2022 -0600
@@ -1,14 +1,14 @@
 #! /bin/sh
 # Attempt to guess a canonical system name.
-#   Copyright 1992-2021 Free Software Foundation, Inc.
+#   Copyright 1992-2022 Free Software Foundation, Inc.
 
 # shellcheck disable=SC2006,SC2268 # see below for rationale
 
-timestamp='2021-06-03'
+timestamp='2022-01-09'
 
 # This file is free software; you can redistribute it and/or modify it
 # under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 3 of the License, or
+# the Free Software Foundation, either version 3 of the License, or
 # (at your option) any later version.
 #
 # This program is distributed in the hope that it will be useful, but
@@ -60,7 +60,7 @@
 GNU config.guess ($timestamp)
 
 Originally written by Per Bothner.
-Copyright 1992-2021 Free Software Foundation, Inc.
+Copyright 1992-2022 Free Software Foundation, Inc.
 
 This is free software; see the source for copying conditions.  There is NO
 warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
@@ -437,7 +437,7 @@
 	# This test works for both compilers.
 	if test "$CC_FOR_BUILD" != no_compiler_found; then
 	    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \
-		(CCOPTS="" $CC_FOR_BUILD -E - 2>/dev/null) | \
+		(CCOPTS="" $CC_FOR_BUILD -m64 -E - 2>/dev/null) | \
 		grep IS_64BIT_ARCH >/dev/null
 	    then
 		SUN_ARCH=x86_64
@@ -929,6 +929,9 @@
     i*:PW*:*)
 	GUESS=$UNAME_MACHINE-pc-pw32
 	;;
+    *:SerenityOS:*:*)
+        GUESS=$UNAME_MACHINE-pc-serenity
+        ;;
     *:Interix*:*)
 	case $UNAME_MACHINE in
 	    x86)
@@ -1522,6 +1525,9 @@
     i*86:rdos:*:*)
 	GUESS=$UNAME_MACHINE-pc-rdos
 	;;
+    i*86:Fiwix:*:*)
+	GUESS=$UNAME_MACHINE-pc-fiwix
+	;;
     *:AROS:*:*)
 	GUESS=$UNAME_MACHINE-unknown-aros
 	;;
diff -r b067afcd6aa7 -r 1aece932bb29 config/config.sub
--- a/config/config.sub	Fri Jan 14 15:01:00 2022 -0600
+++ b/config/config.sub	Fri Jan 14 18:08:18 2022 -0600
@@ -1,14 +1,14 @@
 #! /bin/sh
 # Configuration validation subroutine script.
-#   Copyright 1992-2021 Free Software Foundation, Inc.
+#   Copyright 1992-2022 Free Software Foundation, Inc.
 
 # shellcheck disable=SC2006,SC2268 # see below for rationale
 
-timestamp='2021-08-14'
+timestamp='2022-01-03'
 
 # This file is free software; you can redistribute it and/or modify it
 # under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 3 of the License, or
+# the Free Software Foundation, either version 3 of the License, or
 # (at your option) any later version.
 #
 # This program is distributed in the hope that it will be useful, but
@@ -76,7 +76,7 @@
 version="\
 GNU config.sub ($timestamp)
 
-Copyright 1992-2021 Free Software Foundation, Inc.
+Copyright 1992-2022 Free Software Foundation, Inc.
 
 This is free software; see the source for copying conditions.  There is NO
 warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
@@ -1020,6 +1020,11 @@
 		;;
 
 	# Here we normalize CPU types with a missing or matching vendor
+	armh-unknown | armh-alt)
+		cpu=armv7l
+		vendor=alt
+		basic_os=${basic_os:-linux-gnueabihf}
+		;;
 	dpx20-unknown | dpx20-bull)
 		cpu=rs6000
 		vendor=bull
@@ -1121,7 +1126,7 @@
 	xscale-* | xscalee[bl]-*)
 		cpu=`echo "$cpu" | sed 's/^xscale/arm/'`
 		;;
-	arm64-*)
+	arm64-* | aarch64le-*)
 		cpu=aarch64
 		;;
 
@@ -1304,7 +1309,7 @@
 if test x$basic_os != x
 then
 
-# First recognize some ad-hoc caes, or perhaps split kernel-os, or else just
+# First recognize some ad-hoc cases, or perhaps split kernel-os, or else just
 # set os.
 case $basic_os in
 	gnu/linux*)
@@ -1748,7 +1753,8 @@
 	     | skyos* | haiku* | rdos* | toppers* | drops* | es* \
 	     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \
 	     | midnightbsd* | amdhsa* | unleashed* | emscripten* | wasi* \
-	     | nsk* | powerunix* | genode* | zvmoe* | qnx* | emx* | zephyr*)
+	     | nsk* | powerunix* | genode* | zvmoe* | qnx* | emx* | zephyr* \
+	     | fiwix* )
 		;;
 	# This one is extra strict with allowed versions
 	sco3.2v2 | sco3.2v[4-9]* | sco5v6*)
diff -r b067afcd6aa7 -r 1aece932bb29 configure
--- a/configure	Fri Jan 14 15:01:00 2022 -0600
+++ b/configure	Fri Jan 14 18:08:18 2022 -0600
@@ -734,6 +734,9 @@
 XML_LIBS
 XML_CFLAGS
 xml2_config
+LIB_HEIF
+HasHEIF_FALSE
+HasHEIF_TRUE
 LIB_WEBP
 HasWEBP_FALSE
 HasWEBP_TRUE
@@ -1067,6 +1070,7 @@
 with_gs
 with_jbig
 with_webp
+with_heif
 with_jpeg
 with_jp2
 with_lcms2
@@ -1792,6 +1796,7 @@
   --without-gs            disable Ghostscript support
   --without-jbig          disable JBIG support
   --without-webp          disable WEBP support
+  --without-heif          disable HEIF support
   --without-jpeg          disable JPEG support
   --without-jp2           disable JPEG v2 support
   --without-lcms2         disable lcms (v2.X) support
@@ -19426,6 +19431,19 @@
     DISTCHECK_CONFIG_FLAGS="${DISTCHECK_CONFIG_FLAGS} --with-webp=$with_webp "
 fi
 
+# Disable HEIF.
+
+# Check whether --with-heif was given.
+if test "${with_heif+set}" = set; then :
+  withval=$with_heif; with_heif=$withval
+else
+  with_heif='yes'
+fi
+
+if test "$with_heif" != 'yes' ; then
+    DISTCHECK_CONFIG_FLAGS="${DISTCHECK_CONFIG_FLAGS} --with-heif=$with_heif "
+fi
+
 # Disable JPEG.
 
 # Check whether --with-jpeg was given.
@@ -27191,6 +27209,103 @@
 
 
 
+# Check for HEIF
+#
+have_heif='no'
+LIB_HEIF=''
+if test "$with_heif" != 'no'
+then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for HEIF support " >&5
+$as_echo_n "checking for HEIF support ... " >&6; }
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: " >&5
+$as_echo "" >&6; }
+    failed=0
+    passed=0
+    ac_fn_c_check_header_mongrel "$LINENO" "libheif/heif.h" "ac_cv_header_libheif_heif_h" "$ac_includes_default"
+if test "x$ac_cv_header_libheif_heif_h" = xyes; then :
+  passed=`expr $passed + 1`
+else
+  failed=`expr $failed + 1`
+fi
+
+
+    # heif always requires hwy no extra test needed
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for heif_context_alloc in -lheif" >&5
+$as_echo_n "checking for heif_context_alloc in -lheif... " >&6; }
+if ${ac_cv_lib_heif_heif_context_alloc+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-lheif  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char heif_context_alloc ();
+int
+main ()
+{
+return heif_context_alloc ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_heif_heif_context_alloc=yes
+else
+  ac_cv_lib_heif_heif_context_alloc=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_heif_heif_context_alloc" >&5
+$as_echo "$ac_cv_lib_heif_heif_context_alloc" >&6; }
+if test "x$ac_cv_lib_heif_heif_context_alloc" = xyes; then :
+  passed=`expr $passed + 1`
+else
+  failed=`expr $failed + 1`
+fi
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking if HEIF package is complete" >&5
+$as_echo_n "checking if HEIF package is complete... " >&6; }
+    if test $passed -gt 0
+    then
+    if test $failed -gt 0
+    then
+        { $as_echo "$as_me:${as_lineno-$LINENO}: result: no -- some components failed test" >&5
+$as_echo "no -- some components failed test" >&6; }
+        have_heif='no (failed tests)'
+    else
+        LIB_HEIF='-lheif'
+        LIBS="$LIB_HEIF $LIBS"
+
+$as_echo "#define HasHEIF 1" >>confdefs.h
+
+        { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+        have_heif='yes'
+    fi
+    else
+        { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+fi
+ if test "$have_heif" = 'yes'; then
+  HasHEIF_TRUE=
+  HasHEIF_FALSE='#'
+else
+  HasHEIF_TRUE='#'
+  HasHEIF_FALSE=
+fi
+
+
+
 #
 # Check for XML
 #
@@ -30063,6 +30178,10 @@
    DELEGATES="$DELEGATES webp"
    MAGICK_FEATURES="$MAGICK_FEATURES WEBP"
 fi
+if test "$have_heif"   = 'yes' ; then
+   DELEGATES="$DELEGATES heif"
+   MAGICK_FEATURES="$MAGICK_FEATURES HEIF"
+fi
 if test "$have_png$have_jpeg" = 'yesyes' ; then
    DELEGATES="$DELEGATES jng"
    MAGICK_FEATURES="$MAGICK_FEATURES JNG"
@@ -30184,7 +30303,7 @@
 then
   MAGICK_DEP_LIBS="$LIBS_USER $LIB_LCMS $LIB_TTF $LIB_GS $LIB_XEXT $LIB_IPC $LIB_X11 $LIB_BZLIB $LIB_ZLIB $LIB_LTDL $LIB_TRIO $LIB_GDI32 $LIB_MATH $LIB_THREAD $LIB_TCMALLOC $LIB_UMEM $LIB_MTMALLOC"
 else
-  MAGICK_DEP_LIBS="$LIBS_USER $LIB_JBIG $LIB_WEBP $LIB_LCMS $LIB_TIFF $LIB_TTF $LIB_JP2 $LIB_JPEG $LIB_GS $LIB_PNG $LIB_FPX $LIB_WMF $LIB_DPS $LIB_XEXT $LIB_IPC $LIB_X11 $LIB_LZMA $LIB_BZLIB $LIB_XML $LIB_ZLIB $LIB_ZSTD $LIB_TRIO $LIB_GDI32 $LIB_MATH $LIB_THREAD $LIB_TCMALLOC $LIB_UMEM $LIB_MTMALLOC"
+  MAGICK_DEP_LIBS="$LIBS_USER $LIB_JBIG $LIB_WEBP $LIB_HEIF $LIB_LCMS $LIB_TIFF $LIB_TTF $LIB_JP2 $LIB_JPEG $LIB_GS $LIB_PNG $LIB_FPX $LIB_WMF $LIB_DPS $LIB_XEXT $LIB_IPC $LIB_X11 $LIB_LZMA $LIB_BZLIB $LIB_XML $LIB_ZLIB $LIB_ZSTD $LIB_TRIO $LIB_GDI32 $LIB_MATH $LIB_THREAD $LIB_TCMALLOC $LIB_UMEM $LIB_MTMALLOC"
 fi
 MAGICK_EXTRA_DEP_LIBS="$LIB_OMP" # Extra libraries typically added due to CFLAGS
 
@@ -30555,6 +30674,10 @@
   as_fn_error $? "conditional \"HasWEBP\" was never defined.
 Usually this means the macro was only invoked conditionally." "$LINENO" 5
 fi
+if test -z "${HasHEIF_TRUE}" && test -z "${HasHEIF_FALSE}"; then
+  as_fn_error $? "conditional \"HasHEIF\" was never defined.
+Usually this means the macro was only invoked conditionally." "$LINENO" 5
+fi
 if test -z "${HasXML_TRUE}" && test -z "${HasXML_FALSE}"; then
   as_fn_error $? "conditional \"HasXML\" was never defined.
 Usually this means the macro was only invoked conditionally." "$LINENO" 5
@@ -33116,6 +33239,7 @@
 printf "TIFF              --with-tiff=$with_tiff        \t$have_tiff\n"
 printf "TRIO              --with-trio=$with_trio        \t$have_trio\n"
 printf "WEBP              --with-webp=$with_webp        \t$have_webp\n"
+printf "HEIF              --with-heif=$with_heif        \t$have_heif\n"
 result_windows_font_dir='none'
 if test "${windows_font_dir}x" != 'x'
 then
diff -r b067afcd6aa7 -r 1aece932bb29 configure.ac
--- a/configure.ac	Fri Jan 14 15:01:00 2022 -0600
+++ b/configure.ac	Fri Jan 14 18:08:18 2022 -0600
@@ -689,6 +689,16 @@
     DISTCHECK_CONFIG_FLAGS="${DISTCHECK_CONFIG_FLAGS} --with-webp=$with_webp "
 fi
 
+# Disable HEIF.
+AC_ARG_WITH([heif],
+        AS_HELP_STRING([--without-heif],
+                             [disable HEIF support]),
+        [with_heif=$withval],
+        [with_heif='yes'])
+if test "$with_heif" != 'yes' ; then
+    DISTCHECK_CONFIG_FLAGS="${DISTCHECK_CONFIG_FLAGS} --with-heif=$with_heif "
+fi
+
 # Disable JPEG.
 AC_ARG_WITH([jpeg],
               AS_HELP_STRING([--without-jpeg],
@@ -2535,6 +2545,40 @@
 AM_CONDITIONAL([HasWEBP],[test "$have_webp" = 'yes'])
 AC_SUBST([LIB_WEBP])
 
+# Check for HEIF
+#
+have_heif='no'
+LIB_HEIF=''
+if test "$with_heif" != 'no'
+then
+    AC_MSG_CHECKING([for HEIF support ])
+    AC_MSG_RESULT()
+    failed=0
+    passed=0
+    AC_CHECK_HEADER([libheif/heif.h],[passed=`expr $passed + 1`],[failed=`expr $failed + 1`])
+    # heif always requires hwy no extra test needed
+    AC_CHECK_LIB([heif],[heif_context_alloc],[passed=`expr $passed + 1`],[failed=`expr $failed + 1`])
+    AC_MSG_CHECKING([if HEIF package is complete])
+    if test $passed -gt 0
+    then
+    if test $failed -gt 0
+    then
+        AC_MSG_RESULT([no -- some components failed test])
+        have_heif='no (failed tests)'
+    else
+        LIB_HEIF='-lheif'
+        LIBS="$LIB_HEIF $LIBS"
+        AC_DEFINE([HasHEIF],[1],[Define if you have HEIF library])
+        AC_MSG_RESULT([yes])
+        have_heif='yes'
+    fi
+    else
+        AC_MSG_RESULT([no])
+    fi
+fi
+AM_CONDITIONAL([HasHEIF],[test "$have_heif" = 'yes'])
+AC_SUBST([LIB_HEIF])
+
 #
 # Check for XML
 #
@@ -3576,6 +3620,10 @@
    DELEGATES="$DELEGATES webp"
    MAGICK_FEATURES="$MAGICK_FEATURES WEBP"
 fi
+if test "$have_heif"   = 'yes' ; then
+   DELEGATES="$DELEGATES heif"
+   MAGICK_FEATURES="$MAGICK_FEATURES HEIF"
+fi
 if test "$have_png$have_jpeg" = 'yesyes' ; then
    DELEGATES="$DELEGATES jng"
    MAGICK_FEATURES="$MAGICK_FEATURES JNG"
@@ -3701,7 +3749,7 @@
 then
   MAGICK_DEP_LIBS="$LIBS_USER $LIB_LCMS $LIB_TTF $LIB_GS $LIB_XEXT $LIB_IPC $LIB_X11 $LIB_BZLIB $LIB_ZLIB $LIB_LTDL $LIB_TRIO $LIB_GDI32 $LIB_MATH $LIB_THREAD $LIB_TCMALLOC $LIB_UMEM $LIB_MTMALLOC"
 else
-  MAGICK_DEP_LIBS="$LIBS_USER $LIB_JBIG $LIB_WEBP $LIB_LCMS $LIB_TIFF $LIB_TTF $LIB_JP2 $LIB_JPEG $LIB_GS $LIB_PNG $LIB_FPX $LIB_WMF $LIB_DPS $LIB_XEXT $LIB_IPC $LIB_X11 $LIB_LZMA $LIB_BZLIB $LIB_XML $LIB_ZLIB $LIB_ZSTD $LIB_TRIO $LIB_GDI32 $LIB_MATH $LIB_THREAD $LIB_TCMALLOC $LIB_UMEM $LIB_MTMALLOC"
+  MAGICK_DEP_LIBS="$LIBS_USER $LIB_JBIG $LIB_WEBP $LIB_HEIF $LIB_LCMS $LIB_TIFF $LIB_TTF $LIB_JP2 $LIB_JPEG $LIB_GS $LIB_PNG $LIB_FPX $LIB_WMF $LIB_DPS $LIB_XEXT $LIB_IPC $LIB_X11 $LIB_LZMA $LIB_BZLIB $LIB_XML $LIB_ZLIB $LIB_ZSTD $LIB_TRIO $LIB_GDI32 $LIB_MATH $LIB_THREAD $LIB_TCMALLOC $LIB_UMEM $LIB_MTMALLOC"
 fi
 MAGICK_EXTRA_DEP_LIBS="$LIB_OMP" # Extra libraries typically added due to CFLAGS
 AC_SUBST([MAGICK_DEP_LIBS])
@@ -3845,6 +3893,7 @@
 printf "TIFF              --with-tiff=$with_tiff        \t$have_tiff\n"
 printf "TRIO              --with-trio=$with_trio        \t$have_trio\n"
 printf "WEBP              --with-webp=$with_webp        \t$have_webp\n"
+printf "HEIF              --with-heif=$with_heif        \t$have_heif\n"
 result_windows_font_dir='none'
 if test "${windows_font_dir}x" != 'x'
 then
diff -r b067afcd6aa7 -r 1aece932bb29 magick/magick_config.h.in
--- a/magick/magick_config.h.in	Fri Jan 14 15:01:00 2022 -0600
+++ b/magick/magick_config.h.in	Fri Jan 14 18:08:18 2022 -0600
@@ -426,6 +426,9 @@
 /* Enable use of Ghostscript */
 #undef HasGS
 
+/* Define if you have HEIF library */
+#undef HasHEIF
+
 /* Define if you have JBIG library */
 #undef HasJBIG
 
diff -r b067afcd6aa7 -r 1aece932bb29 magick/module_aliases.h
--- a/magick/module_aliases.h	Fri Jan 14 15:01:00 2022 -0600
+++ b/magick/module_aliases.h	Fri Jan 14 18:08:18 2022 -0600
@@ -74,6 +74,7 @@
     MODULEALIAS("H","LOGO"),
     MODULEALIAS("HTM","HTML"),
     MODULEALIAS("HTTP","URL"),
+    MODULEALIAS("HEIC","HEIF"),
     MODULEALIAS("ICB","TGA"),
     MODULEALIAS("ICC","META"),
     MODULEALIAS("ICM","META"),
diff -r b067afcd6aa7 -r 1aece932bb29 magick/static.c
--- a/magick/static.c	Fri Jan 14 15:01:00 2022 -0600
+++ b/magick/static.c	Fri Jan 14 18:08:18 2022 -0600
@@ -96,6 +96,9 @@
   STATICM("HISTOGRAM",RegisterHISTOGRAMImage,UnregisterHISTOGRAMImage),
   STATICM("HRZ",RegisterHRZImage,UnregisterHRZImage),
   STATICM("HTML",RegisterHTMLImage,UnregisterHTMLImage),
+#if defined(HasHEIF)
+  STATICM("HEIF",RegisterHEIFImage,UnregisterHEIFImage),
+#endif
   STATICM("ICON",RegisterICONImage,UnregisterICONImage),
   STATICM("IDENTITY",RegisterIDENTITYImage,UnregisterIDENTITYImage),
   STATICM("INFO",RegisterINFOImage,UnregisterINFOImage),
diff -r b067afcd6aa7 -r 1aece932bb29 magick/static.h
--- a/magick/static.h	Fri Jan 14 15:01:00 2022 -0600
+++ b/magick/static.h	Fri Jan 14 18:08:18 2022 -0600
@@ -149,6 +149,7 @@
   RegisterVSTImage(void),
   RegisterWBMPImage(void),
   RegisterWEBPImage(void),
+  RegisterHEIFImage(void),
   RegisterWMFImage(void),
   RegisterWPGImage(void),
   RegisterXImage(void),
@@ -294,6 +295,7 @@
   UnregisterVSTImage(void),
   UnregisterWBMPImage(void),
   UnregisterWEBPImage(void),
+  UnregisterHEIFImage(void),
   UnregisterWMFImage(void),
   UnregisterWPGImage(void),
   UnregisterXImage(void),
diff -r b067afcd6aa7 -r 1aece932bb29 magick/symbols.h
--- a/magick/symbols.h	Fri Jan 14 15:01:00 2022 -0600
+++ b/magick/symbols.h	Fri Jan 14 18:08:18 2022 -0600
@@ -817,6 +817,7 @@
 #define RegisterGIFImage GmRegisterGIFImage
 #define RegisterGRADIENTImage GmRegisterGRADIENTImage
 #define RegisterGRAYImage GmRegisterGRAYImage
+#define RegisterHEIFImage GmRegisterHEIFImage
 #define RegisterHISTOGRAMImage GmRegisterHISTOGRAMImage
 #define RegisterHRZImage GmRegisterHRZImage
 #define RegisterHTMLImage GmRegisterHTMLImage
@@ -1041,6 +1042,7 @@
 #define UnregisterGIFImage GmUnregisterGIFImage
 #define UnregisterGRADIENTImage GmUnregisterGRADIENTImage
 #define UnregisterGRAYImage GmUnregisterGRAYImage
+#define UnregisterHEIFImage GmUnregisterHEIFImage
 #define UnregisterHISTOGRAMImage GmUnregisterHISTOGRAMImage
 #define UnregisterHRZImage GmUnregisterHRZImage
 #define UnregisterHTMLImage GmUnregisterHTMLImage
diff -r b067afcd6aa7 -r 1aece932bb29 www/Changelog.html
--- a/www/Changelog.html	Fri Jan 14 15:01:00 2022 -0600
+++ b/www/Changelog.html	Fri Jan 14 18:08:18 2022 -0600
@@ -37,10 +37,13 @@
 
 <p>2022-01-14  Bob Friesenhahn  &lt;<a class="reference external" href="mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>
 <blockquote>
-* magick/blob.c (ReadBlobStream): Fix EOF logic similar to
+<p>* coders/heif.c: HEIF reader written by Tobias Mark.  From
+SourceForge Code Merge Request #15: &quot;Added minimal heif support&quot;.</p>
+<p>* magick/blob.c (ReadBlobStream): Fix EOF logic similar to
 ReadBlob. Addresses oss-fuzz 43617
 &quot;graphicsmagick:coder_P7_fuzzer: Use-of-uninitialized-value in
-WritePNMImage&quot;.</blockquote>
+WritePNMImage&quot;.</p>
+</blockquote>
 <p>2022-01-12  Bob Friesenhahn  &lt;<a class="reference external" href="mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>
 <blockquote>
 <p>* magick/blob.c (ReadBlob): Fix EOF logic. Addresses oss-fuzz
diff -r b067afcd6aa7 -r 1aece932bb29 www/README.html
--- a/www/README.html	Fri Jan 14 15:01:00 2022 -0600
+++ b/www/README.html	Fri Jan 14 18:08:18 2022 -0600
@@ -404,6 +404,12 @@
 libdeflate.</p>
 </blockquote>
 </li>
+<li><p class="first">GraphicsMagick requires the heif library from</p>
+<blockquote>
+<p><a class="reference external" href="https://github.com/strukturag/libheif">https://github.com/strukturag/libheif</a></p>
+<p>to read heif/heic files.</p>
+</blockquote>
+</li>
 </ul>
 </div>
 </div>

