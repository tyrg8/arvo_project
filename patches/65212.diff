commit f52ffc1ccdedcd5a885e85c2d0f0cb872b2b0a7f
Author: Michael Buckley <michael@buckleyisms.com>
Date:   Mon Jan 8 15:04:52 2024 -0800

    Fix an out-of-bounds read in _libssh2_kex_agree_instr when searching for a KEX not in the server list (#1302)

diff --git a/src/kex.c b/src/kex.c
index a7b301e1..65973297 100644
--- a/src/kex.c
+++ b/src/kex.c
@@ -3318,54 +3318,55 @@ unsigned char *
 _libssh2_kex_agree_instr(unsigned char *haystack, size_t haystack_len,
                          const unsigned char *needle, size_t needle_len)
 {
     unsigned char *s;
     unsigned char *end_haystack;
     size_t left;
 
     if(!haystack || !needle) {
         return NULL;
     }
 
     /* Haystack too short to bother trying */
     if(haystack_len < needle_len || needle_len == 0) {
         return NULL;
     }
 
     s = haystack;
     end_haystack = &haystack[haystack_len];
     left = end_haystack - s;
 
     /* Needle at start of haystack */
     if((strncmp((char *) haystack, (char *) needle, needle_len) == 0) &&
         (needle_len == haystack_len || haystack[needle_len] == ',')) {
         return haystack;
     }
 
     /* Search until we run out of comas or we run out of haystack,
        whichever comes first */
     /* !checksrc! disable EQUALSNULL 1 */
     while((s = (unsigned char *) memchr((char *) s, ',', left)) != NULL) {
         /* Advance buffer past coma if we can */
         left = end_haystack - s;
         if((left >= 1) && (left <= haystack_len) && (left > needle_len)) {
             s++;
+            left--;
         }
         else {
             return NULL;
         }
 
         /* Needle at X position */
         if((strncmp((char *) s, (char *) needle, needle_len) == 0) &&
             (((s - haystack) + needle_len) == haystack_len
              || s[needle_len] == ',')) {
             return s;
         }
     }
 
     return NULL;
 }
 
 
 
 /* kex_get_method_by_name
  */
