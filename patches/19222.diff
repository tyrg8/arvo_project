commit 4c67bbf3838aba9cf7e00697403d7b860bbae30b
Author: Jakub Jelen <jjelen@redhat.com>
Date:   Wed Dec 4 12:33:43 2019 +0100

    coolkey: Avoid addressing behind allocated buffers
    
    Thanks oss-fuzz
    
    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=19222

diff --git a/src/libopensc/card-coolkey.c b/src/libopensc/card-coolkey.c
index c95a5035..f9a1a861 100644
--- a/src/libopensc/card-coolkey.c
+++ b/src/libopensc/card-coolkey.c
@@ -511,28 +511,31 @@ static int
 coolkey_v0_get_attribute_data(const u8 *attr, size_t buf_len, sc_cardctl_coolkey_attribute_t *attr_out)
 {
 	/* we need to manually detect types CK_ULONG */
 	CK_ATTRIBUTE_TYPE attr_type = coolkey_get_attribute_type(attr, COOLKEY_V0_OBJECT, buf_len);
 	int r;
 	size_t len;
 
 	attr_out->attribute_data_type = SC_CARDCTL_COOLKEY_ATTR_TYPE_STRING;
 	attr_out->attribute_length = 0;
 	attr_out->attribute_value = NULL;
 
 	r = coolkey_v0_get_attribute_len(attr, buf_len, &len);
 	if (r < 0) {
 		return r;
 	}
+	if (len + sizeof(coolkey_v0_attribute_header_t) > buf_len) {
+		return SC_ERROR_CORRUPTED_DATA;
+	}
 	if ((attr_type == CKA_CLASS) || (attr_type == CKA_CERTIFICATE_TYPE)
 									 || (attr_type == CKA_KEY_TYPE)) {
 		if (len != 4) {
 			return SC_ERROR_CORRUPTED_DATA;
 		}
 		attr_out->attribute_data_type = SC_CARDCTL_COOLKEY_ATTR_TYPE_ULONG;
 	}
 	/* return the length and the data */
 	attr_out->attribute_length = len;
-	attr_out->attribute_value = attr+sizeof(coolkey_v0_attribute_header_t);
+	attr_out->attribute_value = attr + sizeof(coolkey_v0_attribute_header_t);
 	return SC_SUCCESS;
 }
 
