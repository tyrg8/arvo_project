commit 4f1887eb56f4abdf448274afc5abdc8f9d078929
Author: Christos Zoulas <christos@zoulas.com>
Date:   Sat Feb 15 00:59:43 2020 +0000

    - fix missed saving on push.
    - print length on overflow.

diff --git a/src/funcs.c b/src/funcs.c
index e4db9116..52fd870f 100644
--- a/src/funcs.c
+++ b/src/funcs.c
@@ -27,23 +27,23 @@
 #include "file.h"
 
 #ifndef	lint
-FILE_RCSID("@(#)$File: funcs.c,v 1.111 2020/02/14 13:50:28 christos Exp $")
+FILE_RCSID("@(#)$File: funcs.c,v 1.112 2020/02/15 00:59:43 christos Exp $")
 #endif	/* lint */
 
 #include "magic.h"
 #include <assert.h>
 #include <stdarg.h>
 #include <stdlib.h>
 #include <string.h>
 #include <ctype.h>
 #if defined(HAVE_WCHAR_H)
 #include <wchar.h>
 #endif
 #if defined(HAVE_WCTYPE_H)
 #include <wctype.h>
 #endif
 #include <limits.h>
 
 #ifndef SIZE_MAX
 #define SIZE_MAX	((size_t)~0)
 #endif
@@ -88,33 +88,34 @@ protected int
 file_vprintf(struct magic_set *ms, const char *fmt, va_list ap)
 {
 	int len;
 	char *buf, *newstr;
 	char tbuf[1024];
 
 	if (ms->event_flags & EVENT_HAD_ERR)
 		return 0;
 
 	if (file_checkfmt(tbuf, sizeof(tbuf), fmt)) {
 		ms->event_flags |= EVENT_HAD_ERR;
 		fprintf(stderr, "Bad magic format (%s)\n", tbuf);
 		return -1;
 	}
 
 	len = vasprintf(&buf, fmt, ap);
 	if (len < 0 || (size_t)len > 1024 || len + ms->o.blen > 1024 * 1024) {
 		ms->event_flags |= EVENT_HAD_ERR;
-		fprintf(stderr, "Output buffer space exceeded\n");
+		fprintf(stderr, "Output buffer space exceeded %d+%zu\n", len,
+		    ms->o.blen);
 		return -1;
 	}
 
 	if (ms->o.buf != NULL) {
 		len = asprintf(&newstr, "%s%s", ms->o.buf, buf);
 		free(buf);
 		if (len < 0)
 			goto out;
 		free(ms->o.buf);
 		buf = newstr;
 	}
 	ms->o.buf = buf;
 	ms->o.blen = len;
 	return 0;
@@ -653,19 +654,20 @@ protected file_pushbuf_t *
 file_push_buffer(struct magic_set *ms)
 {
 	file_pushbuf_t *pb;
 
 	if (ms->event_flags & EVENT_HAD_ERR)
 		return NULL;
 
 	if ((pb = (CAST(file_pushbuf_t *, malloc(sizeof(*pb))))) == NULL)
 		return NULL;
 
 	pb->buf = ms->o.buf;
+	pb->blen = ms->o.blen;
 	pb->offset = ms->offset;
 
 	ms->o.buf = NULL;
 	ms->o.blen = 0;
 	ms->offset = 0;
 
 	return pb;
 }
