commit 66a591aebe9c76d6703435426131c2494c3b25d0
Merge: 24ccbb0057 4c6e170c57
Author: Xinchen Hui <laruence@gmail.com>
Date:   Wed Dec 25 15:28:13 2019 +0800

    Merge branch 'PHP-7.4'
    
    * PHP-7.4:
      Revert "Fixed bug #79029 (Use After Free's in XMLReader / XMLWriter)"

diff --git a/ext/libxml/libxml.c b/ext/libxml/libxml.c
index f64089aa7e..9c6a51f5f8 100644
--- a/ext/libxml/libxml.c
+++ b/ext/libxml/libxml.c
@@ -267,70 +267,68 @@ static void _php_libxml_destroy_fci(zend_fcall_info *fci, zval *object)
 static void *php_libxml_streams_IO_open_wrapper(const char *filename, const char *mode, const int read_only)
 {
 	php_stream_statbuf ssbuf;
 	php_stream_context *context = NULL;
 	php_stream_wrapper *wrapper = NULL;
 	char *resolved_path;
 	const char *path_to_open = NULL;
 	void *ret_val = NULL;
 	int isescaped=0;
 	xmlURI *uri;
 
 
 	uri = xmlParseURI(filename);
 	if (uri && (uri->scheme == NULL ||
 			(xmlStrncmp(BAD_CAST uri->scheme, BAD_CAST "file", 4) == 0))) {
 		resolved_path = xmlURIUnescapeString(filename, 0, NULL);
 		isescaped = 1;
 #if LIBXML_VERSION >= 20902 && defined(PHP_WIN32)
 		/* Libxml 2.9.2 prefixes local paths with file:/ instead of file://,
 			thus the php stream wrapper will fail on a valid case. For this
 			reason the prefix is rather better cut off. */
 		{
 			size_t pre_len = sizeof("file:/") - 1;
 
 			if (strncasecmp(resolved_path, "file:/", pre_len) == 0
 				&& '/' != resolved_path[pre_len]) {
 				xmlChar *tmp = xmlStrdup(resolved_path + pre_len);
 				xmlFree(resolved_path);
 				resolved_path = tmp;
 			}
 		}
 #endif
 	} else {
 		resolved_path = (char *)filename;
 	}
 
 	if (uri) {
 		xmlFreeURI(uri);
 	}
 
 	if (resolved_path == NULL) {
 		return NULL;
 	}
 
 	/* logic copied from _php_stream_stat, but we only want to fail
 	   if the wrapper supports stat, otherwise, figure it out from
 	   the open.  This logic is only to support hiding warnings
 	   that the streams layer puts out at times, but for libxml we
 	   may try to open files that don't exist, but it is not a failure
 	   in xml processing (eg. DTD files)  */
 	wrapper = php_stream_locate_url_wrapper(resolved_path, &path_to_open, 0);
 	if (wrapper && read_only && wrapper->wops->url_stat) {
 		if (wrapper->wops->url_stat(wrapper, path_to_open, PHP_STREAM_URL_STAT_QUIET, &ssbuf, NULL) == -1) {
 			if (isescaped) {
 				xmlFree(resolved_path);
 			}
 			return NULL;
 		}
 	}
 
 	context = php_stream_context_from_zval(Z_ISUNDEF(LIBXML(stream_context))? NULL : &LIBXML(stream_context), 0);
 
 	ret_val = php_stream_open_wrapper_ex(path_to_open, (char *)mode, REPORT_ERRORS, NULL, context);
-	/* Prevent from closing this by fclose() */
-	((php_stream*)ret_val)->flags |= PHP_STREAM_FLAG_NO_FCLOSE;
 	if (isescaped) {
 		xmlFree(resolved_path);
 	}
 	return ret_val;
 }
diff --git a/ext/xmlwriter/tests/bug79029.phpt b/ext/xmlwriter/tests/bug79029.phpt
deleted file mode 100644
index f329b62756..0000000000
--- a/ext/xmlwriter/tests/bug79029.phpt
+++ /dev/null
@@ -1,32 +0,0 @@
---TEST--
-#79029 (Use After Free's in XMLReader / XMLWriter)
---SKIPIF--
-<?php if (!extension_loaded("xmlwriter")) print "skip"; ?>
---FILE--
-<?php
-$x = array( new XMLWriter() );
-$x[0]->openUri("bug79029.txt");
-$x[0]->startComment();
-@unlink("bug79029.txt");
-
-$x = new XMLWriter();
-$x->openUri("bug79029.txt");
-fclose(@end(get_resources()));
-@unlink("bug79029.txt");
-
-file_put_contents("bug79029.txt", "a");
-$x = new XMLReader();
-$x->open("bug79029.txt");
-fclose(@end(get_resources()));
-@unlink("bug79029.txt");
-?>
-okey
---CLEAN--
-<?php
-@unlink("bug79029.txt");
-?>
---EXPECTF--
-Warning: fclose(): %d is not a valid stream resource in %sbug79029.php on line %d
-
-Warning: fclose(): %d is not a valid stream resource in %sbug79029.php on line %d
-okey
diff --git a/ext/xmlwriter/tests/bug79029_1.phpt b/ext/xmlwriter/tests/bug79029_1.phpt
new file mode 100644
index 0000000000..c91295c167
--- /dev/null
+++ b/ext/xmlwriter/tests/bug79029_1.phpt
@@ -0,0 +1,13 @@
+--TEST--
+#79029 (Use After Free's in XMLReader / XMLWriter)
+--SKIPIF--
+<?php if (!extension_loaded("xmlwriter")) print "skip"; ?>
+--FILE--
+<?php
+$x = array( new XMLWriter() );
+$x[0]->openUri("a");
+$x[0]->startComment();
+?>
+okey
+--EXPECT--
+okey
