commit 994419f1bcb9151553ad8044e1757a6d406deea3
Author: seladb <pcapplusplus@gmail.com>
Date:   Sat May 30 04:51:35 2020 -0400

    Bugfixes 22451 and 22235 in oss-fuzz: Use-of-uninitialized-value in IDnsResource

diff --git a/Packet++/src/DnsResource.cpp b/Packet++/src/DnsResource.cpp
index 69070595..2f86c86a 100644
--- a/Packet++/src/DnsResource.cpp
+++ b/Packet++/src/DnsResource.cpp
@@ -12,9 +12,10 @@ namespace pcpp
 IDnsResource::IDnsResource(DnsLayer* dnsLayer, size_t offsetInLayer)
 	: m_DnsLayer(dnsLayer), m_OffsetInLayer(offsetInLayer), m_NextResource(NULL)
 {
 	char decodedName[256];
 	m_NameLength = decodeName((const char*)getRawData(), decodedName);
-	m_DecodedName = decodedName;
+	if (m_NameLength > 0)
+		m_DecodedName = decodedName;
 }
 
 IDnsResource::IDnsResource(uint8_t* emptyRawData)
@@ -33,110 +34,111 @@ uint8_t* IDnsResource::getRawData() const
 size_t IDnsResource::decodeName(const char* encodedName, char* result, int iteration)
 {
 	size_t encodedNameLength = 0;
 	size_t decodedNameLength = 0;
 	char* resultPtr = result;
 	resultPtr[0] = 0;
 
 	size_t curOffsetInLayer = (uint8_t*)encodedName - m_DnsLayer->m_Data;
 	if (curOffsetInLayer + 1 > m_DnsLayer->m_DataLen)
 		return encodedNameLength;
 
 	if (iteration > 20)
 		return encodedNameLength;
 
 	uint8_t wordLength = encodedName[0];
 
 	// A string to parse
 	while (wordLength != 0)
 	{
 		// A pointer to another place in the packet
 		if ((wordLength & 0xc0) == 0xc0)
 		{
 			if (curOffsetInLayer + 2 > m_DnsLayer->m_DataLen)
 				return encodedNameLength;
 
 			uint16_t offsetInLayer = (wordLength & 0x3f)*256 + (0xFF & encodedName[1]);
 			if (offsetInLayer < sizeof(dnshdr) || offsetInLayer >= m_DnsLayer->m_DataLen)
 			{
 				LOG_ERROR("DNS parsing error: name pointer is illegal");
 				return 0;
 			}
 
 			char tempResult[256];
+			memset(tempResult, 0, 256);
 			int i = 0;
 			decodeName((const char*)(m_DnsLayer->m_Data + offsetInLayer), tempResult, iteration+1);
 			while (tempResult[i] != 0 && decodedNameLength < 255)
 			{
 				resultPtr[0] = tempResult[i++];
 				resultPtr++;
 				decodedNameLength++;
 			}
 
 			resultPtr[0] = 0;
 
 			// in this case the length of the pointer is: 1 byte for 0xc0 + 1 byte for the offset itself
 			return encodedNameLength + sizeof(uint16_t);
 		}
 		else
 		{
 			// return if next word would be outside of the DNS layer or overflow the buffer behind resultPtr
 			if (curOffsetInLayer + wordLength + 1 > m_DnsLayer->m_DataLen || encodedNameLength + wordLength > 255)
 			{
 				// add the last '\0' to the decoded string
 				if (encodedNameLength == 256)
 				{
 					resultPtr--;
 					decodedNameLength--;
 				}
 				else
 				{
 					encodedNameLength++;
 				}
 					
 				resultPtr[0] = 0;
 				return encodedNameLength;
 			}
 				
 
 			memcpy(resultPtr, encodedName+1, wordLength);
 			resultPtr += wordLength;
 			resultPtr[0] = '.';
 			resultPtr++;
 			decodedNameLength += wordLength + 1;
 			encodedName += wordLength + 1;
 			encodedNameLength += wordLength + 1;
 
 			curOffsetInLayer = (uint8_t*)encodedName - m_DnsLayer->m_Data;
 			if (curOffsetInLayer + 1 > m_DnsLayer->m_DataLen)
 			{
 				// add the last '\0' to the decoded string
 				if (encodedNameLength == 256)
 				{
 					decodedNameLength--;
 					resultPtr--;
 				}
 				else
 				{
 					encodedNameLength++;
 				}
 				
 				resultPtr[0] = 0;	
 				return encodedNameLength;
 			}
 
 			wordLength = encodedName[0];
 		}
 	}
 
 	// remove the last "."
 	if (resultPtr > result)
 	{
 		result[resultPtr - result - 1] = 0;
 	}
 
 	// add the last '\0' to encodedNameLength
 	resultPtr[0] = 0;
 	encodedNameLength++;
 
 	return encodedNameLength;
 }
diff --git a/Tests/Fuzzers/RegressionTests/regression_samples/clusterfuzz-testcase-minimized-FuzzTarget-5654053026791424 b/Tests/Fuzzers/RegressionTests/regression_samples/clusterfuzz-testcase-minimized-FuzzTarget-5654053026791424
new file mode 100644
index 00000000..b28a465b
Binary files /dev/null and b/Tests/Fuzzers/RegressionTests/regression_samples/clusterfuzz-testcase-minimized-FuzzTarget-5654053026791424 differ
diff --git a/Tests/Fuzzers/RegressionTests/regression_samples/clusterfuzz-testcase-minimized-FuzzTarget-5766939894087680 b/Tests/Fuzzers/RegressionTests/regression_samples/clusterfuzz-testcase-minimized-FuzzTarget-5766939894087680
new file mode 100644
index 00000000..38627111
Binary files /dev/null and b/Tests/Fuzzers/RegressionTests/regression_samples/clusterfuzz-testcase-minimized-FuzzTarget-5766939894087680 differ
