commit fef765d68d090bb439f58347afc930f48567673e
Author: Caolán McNamara <caolanm@redhat.com>
Date:   Fri Mar 31 11:23:04 2017 +0100

    ofz#974 check SetBorder bounds like the other maHorizontalBorders users
    
    Change-Id: Iac113433ac2317ddfebc68ed793c481384d56551
    Reviewed-on: https://gerrit.libreoffice.org/35964
    Tested-by: Jenkins <ci@libreoffice.org>
    Reviewed-by: Caolán McNamara <caolanm@redhat.com>
    Tested-by: Caolán McNamara <caolanm@redhat.com>

diff --git a/svx/source/table/tablelayouter.cxx b/svx/source/table/tablelayouter.cxx
index ae588b11a5aa..3c08c79e085a 100644
--- a/svx/source/table/tablelayouter.cxx
+++ b/svx/source/table/tablelayouter.cxx
@@ -885,89 +885,92 @@ CellRef TableLayouter::getCell( const CellPos& rPos ) const
 bool TableLayouter::HasPriority( const SvxBorderLine* pThis, const SvxBorderLine* pOther )
 {
     if (!pThis || ((pThis == &gEmptyBorder) && (pOther != nullptr)))
         return false;
     if (!pOther || (pOther == &gEmptyBorder))
         return true;
 
     sal_uInt16 nThisSize = pThis->GetScaledWidth();
     sal_uInt16 nOtherSize = pOther->GetScaledWidth();
 
     if (nThisSize > nOtherSize)
         return true;
 
     else if (nThisSize < nOtherSize)
     {
         return false;
     }
     else
     {
         if ( pOther->GetInWidth() && !pThis->GetInWidth() )
         {
             return true;
         }
         else if ( pThis->GetInWidth() && !pOther->GetInWidth() )
         {
             return false;
         }
         else
         {
             return true;            //! ???
         }
     }
 }
 
-
 void TableLayouter::SetBorder( sal_Int32 nCol, sal_Int32 nRow, bool bHorizontal, const SvxBorderLine* pLine )
 {
-    if( pLine == nullptr )
+    if (!pLine)
         pLine = &gEmptyBorder;
 
-    SvxBorderLine *pOld = bHorizontal ? maHorizontalBorders[nCol][nRow] : maVerticalBorders[nCol][nRow];
+    BorderLineMap& rMap = bHorizontal ? maHorizontalBorders : maVerticalBorders;
 
-    if( HasPriority( pLine, pOld ) )
+    if( (nCol >= 0) && (nCol < sal::static_int_cast<sal_Int32>(rMap.size())) &&
+        (nRow >= 0) && (nRow < sal::static_int_cast<sal_Int32>(rMap[nCol].size())) )
     {
-        if( (pOld != nullptr) && (pOld != &gEmptyBorder) )
-            delete pOld;
+        SvxBorderLine *pOld = rMap[nCol][nRow];
 
-        SvxBorderLine* pNew = ( pLine != &gEmptyBorder ) ?  new SvxBorderLine(*pLine) : &gEmptyBorder;
+        if (HasPriority(pLine, pOld))
+        {
+            if (pOld && pOld != &gEmptyBorder)
+                delete pOld;
 
-        if( bHorizontal )
-            maHorizontalBorders[nCol][nRow] = pNew;
-        else
-            maVerticalBorders[nCol][nRow]  = pNew;
+            SvxBorderLine* pNew = (pLine != &gEmptyBorder) ?  new SvxBorderLine(*pLine) : &gEmptyBorder;
+
+            rMap[nCol][nRow] = pNew;
+        }
+    }
+    else
+    {
+        OSL_FAIL( "sdr::table::TableLayouter::SetBorder(), invalid border!" );
     }
 }
 
-
 void TableLayouter::ClearBorderLayout()
 {
     ClearBorderLayout(maHorizontalBorders);
     ClearBorderLayout(maVerticalBorders);
 }
 
-
 void TableLayouter::ClearBorderLayout(BorderLineMap& rMap)
 {
     const sal_Int32 nColCount = rMap.size();
 
     for( sal_Int32 nCol = 0; nCol < nColCount; nCol++ )
     {
         const sal_Int32 nRowCount = rMap[nCol].size();
         for( sal_Int32 nRow = 0; nRow < nRowCount; nRow++ )
         {
             SvxBorderLine* pLine = rMap[nCol][nRow];
             if( pLine )
             {
                 if( pLine != &gEmptyBorder )
                     delete pLine;
 
                 rMap[nCol][nRow] = nullptr;
             }
         }
     }
 }
 
-
 void TableLayouter::ResizeBorderLayout()
 {
     ClearBorderLayout();
