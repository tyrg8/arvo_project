commit 462ffd339228ac57d98e8034239d122e4303f653
Author: Victor M. Alvarez <vmalvarez@virustotal.com>
Date:   Fri Mar 29 10:32:39 2019 +0100

    Fix buffer overflow in str_table_entry.

diff --git a/libyara/modules/elf.c b/libyara/modules/elf.c
index 7b504b84..86c2e312 100644
--- a/libyara/modules/elf.c
+++ b/libyara/modules/elf.c
@@ -80,37 +80,44 @@ static bool is_valid_ptr(
 //
 // Returns a string table entry for the index or NULL if the entry is out
 // of bounds. A non-null return value will be a null-terminated C string.
 //
-static const char* str_table_entry(const char* str_table_base,
-                                   const char* str_table_limit,
-                                   int index) {
+static const char* str_table_entry(
+    const char* str_table_base,
+    const char* str_table_limit,
+    int index)
+{
   size_t len;
-  const char* str_entry = str_table_base + index;
+  const char* str_entry;
+
+  if (str_table_base >= str_table_limit)
+    return NULL;
 
   // The first entry in the string table must be a null character, if not the
   // string table is probably corrupted.
   if (*str_table_base != '\0')
     return NULL;
 
   if (index < 0)
     return NULL;
 
+  str_entry = str_table_base + index;
+
   if (str_entry >= str_table_limit)
     return NULL;
 
   len = strnlen(str_entry, str_table_limit - str_entry);
 
   // Entry is clamped by extent of string table, not null-terminated.
   if (str_entry + len == str_table_limit)
     return NULL;
 
   return str_entry;
 }
 
 #define ELF_SIZE_OF_SECTION_TABLE(bits,bo,h)       \
   (sizeof(elf##bits##_section_header_t) * yr_##bo##16toh(h->sh_entry_count))
 
 #define ELF_SIZE_OF_PROGRAM_TABLE(bits,bo,h)       \
   (sizeof(elf##bits##_program_header_t) * yr_##bo##16toh(h->ph_entry_count))
 
 #define ELF_RVA_TO_OFFSET(bits,bo)                                             \
