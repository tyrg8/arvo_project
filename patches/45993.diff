commit d16ca65b01188d28afbe5a52b1495ac0270dd95a
Author: Luis Díaz Más <piponazo@gmail.com>
Date:   Thu Mar 31 18:44:32 2022 +0200

    Fix out of bounds read in isValidBoxFileType()

diff --git a/src/jp2image_int.cpp b/src/jp2image_int.cpp
index 9d67bc6cc..c4a356382 100644
--- a/src/jp2image_int.cpp
+++ b/src/jp2image_int.cpp
@@ -11,22 +11,22 @@ namespace Exiv2::Internal {
 
 bool isValidBoxFileType(const std::vector<uint8_t>& boxData) {
   // BR & MinV are obligatory (4 + 4 bytes). Afterwards we have N compatibility lists (of size 4)
-  if ((boxData.size() - 8u) % 4u != 0) {
+  if (boxData.size() < 8 || ((boxData.size() - 8u) % 4u) != 0) {
     return false;
   }
 
   const size_t N = (boxData.size() - 8u) / 4u;
   const uint32_t brand = getULong(boxData.data(), bigEndian);
   const uint32_t minorVersion = getULong(boxData.data() + 4, bigEndian);
 
   bool clWithRightBrand = false;
   for (size_t i = 0; i < N; i++) {
     uint32_t compatibilityList = getULong(boxData.data() + 8 + i * 4, bigEndian);
     if (compatibilityList == brandJp2) {
       clWithRightBrand = true;
       break;
     }
   }
   return (brand == brandJp2 && minorVersion == 0 && clWithRightBrand);
 }
 }  // namespace Exiv2::Internal
diff --git a/unitTests/test_jp2image_int.cpp b/unitTests/test_jp2image_int.cpp
index 6af2bb2a5..cd83c19bf 100644
--- a/unitTests/test_jp2image_int.cpp
+++ b/unitTests/test_jp2image_int.cpp
@@ -58,6 +58,11 @@ TEST(Jp2_FileTypeBox, withInvalidBoxDataSizeIsInvalid) {
   ASSERT_FALSE(isValidBoxFileType(boxData));
 }
 
+TEST(Jp2_FileTypeBox, withSmallBoxDataSizeIsInvalid) {
+  std::vector<std::uint8_t> boxData(7);  // Minimum size is 8
+  ASSERT_FALSE(isValidBoxFileType(boxData));
+}
+
 TEST(Jp2_FileTypeBox, with2CLs_lastOneWithBrandValue_isValid) {
   std::vector<std::uint8_t> boxData(16);
   // The first 4 bytes correspond to the BR (Brand). It must have the value 'jp2\040'
