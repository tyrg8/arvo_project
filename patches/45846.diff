commit b59ea948cdcb8422964595c32076312756550f17
Author: Michael Niedermayer <michael@niedermayer.cc>
Date:   Thu Mar 17 22:52:52 2022 +0100

    avcodec/dfpwmdec: Check packet size more completely
    
    Fixes: out of array access
    Fixes: 45497/clusterfuzz-testcase-minimized-ffmpeg_AV_CODEC_ID_DFPWM_fuzzer-5239786212818944.fuzz
    Fixes: 45510/clusterfuzz-testcase-minimized-ffmpeg_AV_CODEC_ID_DFPWM_fuzzer-4947856883056640
    
    Found-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg
    Reviewed-by: Paul B Mahol <onemda@gmail.com>
    Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

diff --git a/libavcodec/dfpwmdec.c b/libavcodec/dfpwmdec.c
index 27b60a4ea4..e11f393ee4 100644
--- a/libavcodec/dfpwmdec.c
+++ b/libavcodec/dfpwmdec.c
@@ -102,21 +102,24 @@ static av_cold int dfpwm_dec_init(struct AVCodecContext *ctx)
 static int dfpwm_dec_frame(struct AVCodecContext *ctx, void *data,
     int *got_frame, struct AVPacket *packet)
 {
     DFPWMState *state = ctx->priv_data;
     AVFrame *frame = data;
     int ret;
 
-    frame->nb_samples = packet->size * 8 / ctx->ch_layout.nb_channels;
+    if (packet->size * 8LL % ctx->ch_layout.nb_channels)
+        return AVERROR_PATCHWELCOME;
+
+    frame->nb_samples = packet->size * 8LL / ctx->ch_layout.nb_channels;
     if (frame->nb_samples <= 0) {
         av_log(ctx, AV_LOG_ERROR, "invalid number of samples in packet\n");
         return AVERROR_INVALIDDATA;
     }
 
     if ((ret = ff_get_buffer(ctx, frame, 0)) < 0)
         return ret;
 
     au_decompress(state, 140, packet->size, frame->data[0], packet->data);
 
     *got_frame = 1;
     return packet->size;
 }
