commit 51b908f8fde0aa2eac8dbcfff319281625d6f3f2
Author: Liviu Chircu <liviu@opensips.org>
Date:   Tue Oct 4 12:04:46 2022 +0300

    parse_to_param(): Rework previous fix (OSS-Fuzz)
    
    Invoking strlen() on a non NULL-terminated buffer is equally bad,
    possibly even worse.  Instead, simply rely on the @end parameter being
    correct, which is an assumption already made by the current code of the
    function.
    
    Fixes OSS-Fuzz#41073

diff --git a/parser/parse_to.c b/parser/parse_to.c
index 1972f8d6e..498705d93 100644
--- a/parser/parse_to.c
+++ b/parser/parse_to.c
@@ -479,8 +479,7 @@ endofheader:
 
 parse_error:
 	LM_ERR("unexpected char [%c] in status %d: <<%.*s>> .\n",
-	    tmp < end? *tmp : *(buffer+strlen(buffer)-1),status,
-	    (int)(tmp-buffer), ZSW(buffer));
+	    tmp < end? *tmp : *(end-1),status, (int)(tmp-buffer), ZSW(buffer));
 error:
 	if (param) pkg_free(param);
 	free_to_params(to_b);
@@ -817,8 +816,7 @@ endofheader:
 
 parse_error:
 	LM_ERR("unexpected char [%c] in status %d: <<%.*s>> .\n",
-	    tmp < end? *tmp : *(buffer+strlen(buffer)-1),
-	    status, (int)(tmp-buffer), buffer);
+	    tmp < end? *tmp : *(end-1), status, (int)(tmp-buffer), buffer);
 error:
 	first_b->error=PARSE_ERROR;
 	free_to_params(first_b);
