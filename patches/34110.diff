commit 45862f9f5ef5d3c9da37f35e4fe4b18618530cfa
Author: Dennis Sweeney <36520290+sweeneyde@users.noreply.github.com>
Date:   Mon May 10 05:10:22 2021 -0400

    Prevent access outside buffer (GH-26012)

diff --git a/Python/ceval.c b/Python/ceval.c
index f745067069..8e1c5bdf03 100644
--- a/Python/ceval.c
+++ b/Python/ceval.c
@@ -4794,8 +4794,10 @@ scan_back_to_entry_start(unsigned char *p) {
 }
 
 static inline unsigned char *
-skip_to_next_entry(unsigned char *p) {
-    for (; (p[0]&128) == 0; p++);
+skip_to_next_entry(unsigned char *p, unsigned char *end) {
+    while (p < end && ((p[0] & 128) == 0)) {
+        p++;
+    }
     return p;
 }
 
@@ -4824,47 +4826,47 @@ static PyTryBlock
 get_exception_handler(PyCodeObject *code, int index)
 {
     PyTryBlock res;
     unsigned char *start = (unsigned char *)PyBytes_AS_STRING(code->co_exceptiontable);
     unsigned char *end = start + PyBytes_GET_SIZE(code->co_exceptiontable);
     /* Invariants:
      * start_table == end_table OR
      * start_table points to a legal entry and end_table points
      * beyond the table or to a legal entry that is after index.
      */
     if (end - start > MAX_LINEAR_SEARCH) {
         int offset;
         parse_varint(start, &offset);
         if (offset > index) {
             res.b_handler = -1;
             return res;
         }
         do {
             unsigned char * mid = start + ((end-start)>>1);
             mid = scan_back_to_entry_start(mid);
             parse_varint(mid, &offset);
             if (offset > index) {
                 end = mid;
             }
             else {
                 start = mid;
             }
 
         } while (end - start > MAX_LINEAR_SEARCH);
     }
     unsigned char *scan = start;
     while (scan < end) {
         int start_offset, size;
         scan = parse_varint(scan, &start_offset);
         if (start_offset > index) {
             break;
         }
         scan = parse_varint(scan, &size);
         if (start_offset + size > index) {
             parse_block(scan, &res);
             return res;
         }
-        scan = skip_to_next_entry(scan);
+        scan = skip_to_next_entry(scan, end);
     }
     res.b_handler = -1;
     return res;
 }
