commit 1e35e62da04e1597ecb45d2f7ec87297cb3022d9
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Fri Sep 22 07:50:15 2023 -0700

    testing/fuzzing: Fix a recently introduced regression
    
    Fixes: f701087096dc ("Revert "apps: Use netsnmp_cleanup_session()"")
    Fixes: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=62604

diff --git a/testing/fuzzing/snmp_e2e_fuzzer.c b/testing/fuzzing/snmp_e2e_fuzzer.c
index 0743d9beff..a32f302d9f 100644
--- a/testing/fuzzing/snmp_e2e_fuzzer.c
+++ b/testing/fuzzing/snmp_e2e_fuzzer.c
@@ -84,50 +84,50 @@ int
 LLVMFuzzerTestOneInput(const uint8_t * data, size_t size)
 {
     netsnmp_session *ss;
     netsnmp_transport *transport;
 
     u_char         *fuzz_buf = malloc(size + 1);
     memcpy(fuzz_buf, data, size);
     fuzz_buf[size] = '\0';
 
     ss = SNMP_MALLOC_TYPEDEF(netsnmp_session);
 
     /*
      * We allocate with malloc to avoid constants
      */
     char          **fake_argv = malloc(sizeof(char *) * 3);
     fake_argv[0] = strdup("snmp_e2e_fuzzer");
     fake_argv[1] = strdup("-Dall");
     fake_argv[2] = strdup("localhost");
 
     snmp_parse_args(3, fake_argv, ss, "", NULL);
 
     transport = SNMP_MALLOC_TYPEDEF(netsnmp_transport);
     transport->sock = FAKE_FD;
     transport->f_recv = snmpfuzz_recv;
 
     ss->callback = snmpfuzz_callback;
     ss->callback_magic = (void *) NULL;
     ss->securityModel = SNMP_SEC_MODEL_USM;
     create_user_from_session(ss);
 
     /*
      * Use snamp_add() to specify transport explicitly
      */
     snmp_add(ss, transport, NULL, NULL);
 
     fuzz_fake_pcap(fuzz_buf, size);
 
     snmp_close(ss);
     /* To do: register session 'ss' properly and remove the call below. */
     netsnmp_cleanup_session(ss);
     free(ss);
     free(fuzz_buf);
 
     free(fake_argv[0]);
     free(fake_argv[1]);
-    free(fake_argv[2]);
+    /*free(fake_argv[2]); -- freed by netsnmp_cleanup_session() */
     free(fake_argv);
 
     return 0;
 }
