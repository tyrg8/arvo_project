commit 144834a6aa437d7ad31c8a1073c48af2ea899928
Author: John Cupitt <jcupitt@gmail.com>
Date:   Thu Nov 10 04:45:50 2022 +0000

    replace memcpy() in d180 with a loop
    
    thanks alantudyk
    
    see https://github.com/libvips/libvips/issues/3149#issuecomment-1309405404

diff --git a/libvips/conversion/rot.c b/libvips/conversion/rot.c
index 5b06b1751..b1e0b6bb6 100644
--- a/libvips/conversion/rot.c
+++ b/libvips/conversion/rot.c
@@ -1,77 +1,79 @@
 /* rotate by 0/90/180/270 degrees
  *
  * Copyright: 1991, N. Dessipris
  * Written on: 28/10/91
  * Updated on: 2/4/92, J.Cupitt 
  * 	bugs in im_la90rot fixed, now works for any type.
  * 19/7/93 JC
  *	- IM_CODING_LABQ allowed now
  * 15/11/94 JC
  *	- name changed
  *	- memory leaks fixed
  * 8/2/95 JC
  *	- oops! memory allocation problem fixed
  * 18/5/95 JC
  * 	- IM_MAXLINES increased
  * 13/8/96 JC
  *	- rewritten for partials
  * 6/11/02 JC
  *	- speed-up ... replace memcpy() with a loop for small pixels
  * 14/4/04
  *	- sets Xoffset / Yoffset
  * 24/3/09
  * 	- added IM_CODING_RAD support
  * 1/2/10
  * 	- cleanups
  * 	- gtkdoc
  * 4/11/11
  * 	- rewrite as a class
  * 7/3/17
  * 	- added 90/180/270 convenience functions
+ * 10/11/22 alantudyk 
+ * 	- swapped memcpy() in d180 for a loop
  */
 
 /*
 
     This file is part of VIPS.
     
     VIPS is free software; you can redistribute it and/or modify
     it under the terms of the GNU Lesser General Public License as published by
     the Free Software Foundation; either version 2 of the License, or
     (at your option) any later version.
 
     This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU Lesser General Public License for more details.
 
     You should have received a copy of the GNU Lesser General Public License
     along with this program; if not, write to the Free Software
     Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
     02110-1301  USA
 
  */
 
 /*
 
     These files are distributed with VIPS - http://www.vips.ecs.soton.ac.uk
 
  */
 
 /*
 #define VIPS_DEBUG
  */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif /*HAVE_CONFIG_H*/
 #include <glib/gi18n-lib.h>
 
 #include <stdio.h>
 #include <string.h>
 #include <stdlib.h>
 
 #include <vips/vips.h>
 #include <vips/internal.h>
 #include <vips/debug.h>
 
 #include "pconversion.h"
@@ -159,59 +161,61 @@ static int
 vips_rot180_gen( VipsRegion *or, void *seq, void *a, void *b,
 	gboolean *stop )
 {
 	VipsRegion *ir = (VipsRegion *) seq;
 	VipsImage *in = (VipsImage *) a;
 
 	/* Output area.
 	 */
 	VipsRect *r = &or->valid;
 	int le = r->left;
 	int ri = VIPS_RECT_RIGHT(r);
 	int to = r->top;
 	int bo = VIPS_RECT_BOTTOM(r);
 
-	int x, y;
+	int x, y, i;
 
 	/* Pixel geometry.
 	 */
 	int ps;
 
 	/* Find the area of the input image we need.
 	 */
 	VipsRect need;
 
 	need.left = in->Xsize - ri;
 	need.top = in->Ysize - bo;
 	need.width = r->width;
 	need.height = r->height;
 	if( vips_region_prepare( ir, &need ) )
 		return( -1 );
 
 	/* Find PEL size and line skip for ir.
 	 */
 	ps = VIPS_IMAGE_SIZEOF_PEL( in );
 
 	/* Rotate the bit we now have.
 	 */
 	for( y = to; y < bo; y++ ) {
 		/* Start of this output line.
 		 */
 		VipsPel *q = VIPS_REGION_ADDR( or, le, y );
 
 		/* Corresponding position in ir.
 		 */
 		VipsPel *p = VIPS_REGION_ADDR( ir, 
 			need.left + need.width - 1, 
 			need.top + need.height - (y - to) - 1 );
 
 		/* Blap across!
 		 */
 		for( x = le; x < ri; x++ ) {
-			memcpy( q, p, ps );
+			for( i = 0; i < ps; i++ )
+				q[i] = p[i];
+
 			q += ps;
 			p -= ps;
 		}
 	}
 
 	return( 0 );
 }
