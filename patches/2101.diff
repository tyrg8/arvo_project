commit fb8053d08b406e8822560bb4c2c5dd56b661d8b6
Author: Even Rouault <even.rouault@mines-paris.org>
Date:   Mon Jun 5 07:52:29 2017 +0000

    FIT: remove useless assertion. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=2102. Credit to OSS Fuzz
    
    git-svn-id: https://svn.osgeo.org/gdal/trunk@38881 f0d54148-0727-0410-94bb-9a71ac55c965

diff --git a/gdal/frmts/fit/fitdataset.cpp b/gdal/frmts/fit/fitdataset.cpp
index 81ed29520f..deeafa4c4f 100644
--- a/gdal/frmts/fit/fitdataset.cpp
+++ b/gdal/frmts/fit/fitdataset.cpp
@@ -855,228 +855,203 @@ private:
 GDALDataset *FITDataset::Open( GDALOpenInfo * poOpenInfo )
 {
 /* -------------------------------------------------------------------- */
 /*      First we check to see if the file has the expected header       */
 /*      bytes.                                                          */
 /* -------------------------------------------------------------------- */
 
     if( poOpenInfo->nHeaderBytes < 5 )
         return NULL;
 
     if( !STARTS_WITH_CI((const char *) poOpenInfo->pabyHeader, "IT01") &&
         !STARTS_WITH_CI((const char *) poOpenInfo->pabyHeader, "IT02") )
         return NULL;
 
     if( poOpenInfo->eAccess == GA_Update )
     {
         CPLError( CE_Failure, CPLE_NotSupported,
                   "The FIT driver does not support update access to existing"
                   " files.\n" );
         return NULL;
     }
 
 /* -------------------------------------------------------------------- */
 /*      Create a corresponding GDALDataset.                             */
 /* -------------------------------------------------------------------- */
     FITDataset *poDS = new FITDataset();
     DeleteGuard<FITDataset> guard( poDS );
 
     // Re-open file for large file (64bit) access.
     if ( poOpenInfo->eAccess == GA_ReadOnly )
         poDS->fp = VSIFOpenL( poOpenInfo->pszFilename, "rb" );
     else
         poDS->fp = VSIFOpenL( poOpenInfo->pszFilename, "r+b" );
 
     if ( !poDS->fp )
     {
         CPLError( CE_Failure, CPLE_OpenFailed,
                   "Failed to re-open %s with FIT driver.\n",
                   poOpenInfo->pszFilename );
         return NULL;
     }
     poDS->eAccess = poOpenInfo->eAccess;
 
     poDS->info = new FITinfo;
     FITinfo *info = poDS->info;
 
 /* -------------------------------------------------------------------- */
 /*      Read other header values.                                       */
 /* -------------------------------------------------------------------- */
     FIThead02 *head = (FIThead02 *) poOpenInfo->pabyHeader;
 
     // extract the image attributes from the file header
     if (STARTS_WITH_CI((const char *) &head->version, "02")) {
         // incomplete header
         if( poOpenInfo->nHeaderBytes < (signed) sizeof(FIThead02) )
             return NULL;
 
         CPLDebug("FIT", "Loading file with header version 02");
 
         gst_swapb(head->minValue);
         info->minValue = head->minValue;
         gst_swapb(head->maxValue);
         info->maxValue = head->maxValue;
         gst_swapb(head->dataOffset);
         info->dataOffset = head->dataOffset;
 
         info->userOffset = sizeof(FIThead02);
     }
     else if (STARTS_WITH_CI((const char *) &head->version, "01")) {
         // incomplete header
         if( poOpenInfo->nHeaderBytes < (signed) sizeof(FIThead01) )
             return NULL;
 
         CPLDebug("FIT", "Loading file with header version 01");
 
         // map old style header into new header structure
         FIThead01* head01 = (FIThead01*)head;
         gst_swapb(head->dataOffset);
         info->dataOffset = head01->dataOffset;
 
         info->userOffset = sizeof(FIThead01);
     }
     else {
         // unrecognized header version
         CPLError( CE_Failure, CPLE_NotSupported,
                   "FIT - unsupported header version %.2s\n",
                   (const char*) &head->version);
         return NULL;
     }
 
     CPLDebug("FIT", "userOffset %i, dataOffset %i",
              info->userOffset, info->dataOffset);
 
     info->magic = head->magic;
     info->version = head->version;
 
     gst_swapb(head->xSize);
     info->xSize = head->xSize;
     gst_swapb(head->ySize);
     info->ySize = head->ySize;
     gst_swapb(head->zSize);
     info->zSize = head->zSize;
     gst_swapb(head->cSize);
     info->cSize = head->cSize;
     gst_swapb(head->dtype);
     info->dtype = head->dtype;
     gst_swapb(head->order);
     info->order = head->order;
     gst_swapb(head->space);
     info->space = head->space;
     gst_swapb(head->cm);
     info->cm = head->cm;
     gst_swapb(head->xPageSize);
     info->xPageSize = head->xPageSize;
     gst_swapb(head->yPageSize);
     info->yPageSize = head->yPageSize;
     gst_swapb(head->zPageSize);
     info->zPageSize = head->zPageSize;
     gst_swapb(head->cPageSize);
     info->cPageSize = head->cPageSize;
 
     CPLDebug("FIT", "size %i %i %i %i, pageSize %i %i %i %i",
              info->xSize, info->ySize, info->zSize, info->cSize,
              info->xPageSize, info->yPageSize, info->zPageSize,
              info->cPageSize);
 
     CPLDebug("FIT", "dtype %i order %i space %i cm %i",
              info->dtype, info->order, info->space, info->cm);
 
     /**************************/
 
     poDS->nRasterXSize = head->xSize;
     poDS->nRasterYSize = head->ySize;
 
     if (!GDALCheckDatasetDimensions(poDS->nRasterXSize, poDS->nRasterYSize) ||
         !GDALCheckBandCount(head->cSize, FALSE) ||
         head->xPageSize == 0 ||
         head->yPageSize == 0)
     {
         return NULL;
     }
 
-/* -------------------------------------------------------------------- */
-/*      Check if 64 bit seek is needed.                                 */
-/* -------------------------------------------------------------------- */
-    uint64 bytesPerComponent =
-        GDALGetDataTypeSize(fitDataType(poDS->info->dtype)) / 8;
-    uint64 bytesPerPixel = head->cSize * bytesPerComponent;
-    uint64 recordSize = bytesPerPixel * head->xPageSize *
-        head->yPageSize;
-    uint64 numXBlocks =
-        (uint64) ceil((double) head->xSize / head->xPageSize);
-    uint64 numYBlocks =
-        (uint64) ceil((double) head->ySize / head->yPageSize);
-
-    uint64 maxseek = recordSize * numXBlocks * numYBlocks;
-
-//     CPLDebug("FIT", "(sizeof %i) max seek %llx ==> %llx\n", sizeof(uint64),
-//              maxseek, maxseek >> 31);
-    if (maxseek >> 31) // signed long
-#ifdef VSI_LARGE_API_SUPPORTED
-        CPLDebug("FIT", "Using 64 bit version of fseek");
-#else
-        CPLError(CE_Fatal, CPLE_NotSupported,
-                 "FIT - need 64 bit version of fseek");
-#endif
-
 /* -------------------------------------------------------------------- */
 /*      Verify all "unused" header values.                              */
 /* -------------------------------------------------------------------- */
 
     if( info->zSize != 1 )
     {
         CPLError( CE_Failure, CPLE_NotSupported,
                   "FIT driver - unsupported zSize %i\n", info->zSize);
         return NULL;
     }
 
     if( info->order != 1 ) // interleaved - RGBRGB
     {
         CPLError( CE_Failure, CPLE_NotSupported,
                   "FIT driver - unsupported order %i\n", info->order);
         return NULL;
     }
 
     if( info->zPageSize != 1 )
     {
         CPLError( CE_Failure, CPLE_NotSupported,
                   "FIT driver - unsupported zPageSize %i\n", info->zPageSize);
         return NULL;
     }
 
     if( info->cPageSize != info->cSize )
     {
         CPLError( CE_Failure, CPLE_NotSupported,
                   "FIT driver - unsupported cPageSize %i (!= %i)\n",
                   info->cPageSize, info->cSize);
         return NULL;
     }
 
 /* -------------------------------------------------------------------- */
 /*      Create band information objects.                                */
 /* -------------------------------------------------------------------- */
     for( int i = 0; i < (int)head->cSize; i++ )
     {
         FITRasterBand* poBand = new FITRasterBand( poDS, i+1, (int)head->cSize );
         poDS->SetBand( i+1,  poBand);
         if( poBand->tmpImage == NULL )
             return NULL;
     }
 
 /* -------------------------------------------------------------------- */
 /*      Initialize any PAM information.                                 */
 /* -------------------------------------------------------------------- */
     poDS->SetDescription( poOpenInfo->pszFilename );
     poDS->TryLoadXML();
 
 /* -------------------------------------------------------------------- */
 /*      Check for external overviews.                                   */
 /* -------------------------------------------------------------------- */
     poDS->oOvManager.Initialize( poDS, poOpenInfo->pszFilename, poOpenInfo->GetSiblingFiles() );
 
     return guard.take();
 }
 
 /************************************************************************/
 /*                           FITCreateCopy()                            */
 /************************************************************************/
