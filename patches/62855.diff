commit fc49679316e067d667b71b8e0b987f0b704abce6
Author: Nick Wellnhofer <wellnhofer@aevum.de>
Date:   Mon Oct 2 12:05:36 2023 +0200

    parser: Fix error handling in xmlParseQNameHashed
    
    Short-lived regression found by OSS-Fuzz.

diff --git a/parser.c b/parser.c
index 11bb5199..b854e4a9 100644
--- a/parser.c
+++ b/parser.c
@@ -8829,54 +8829,55 @@ static xmlHashedString
 xmlParseQNameHashed(xmlParserCtxtPtr ctxt, xmlHashedString *prefix) {
     xmlHashedString l, p;
     int start;
 
     l.name = NULL;
     p.name = NULL;
 
     GROW;
     if (ctxt->instate == XML_PARSER_EOF)
         return(l);
     start = CUR_PTR - BASE_PTR;
 
     l = xmlParseNCName(ctxt);
     if ((l.name != NULL) && (CUR == ':')) {
         NEXT;
 	p = l;
 	l = xmlParseNCName(ctxt);
     }
     if ((l.name == NULL) || (CUR == ':')) {
         xmlChar *tmp;
 
+        l.name = NULL;
         p.name = NULL;
         if (ctxt->instate == XML_PARSER_EOF)
             return(l);
         if ((CUR != ':') && (CUR_PTR <= BASE_PTR + start))
             return(l);
         tmp = xmlParseNmtoken(ctxt);
         if (tmp != NULL)
             xmlFree(tmp);
         if (ctxt->instate == XML_PARSER_EOF)
             return(l);
         l = xmlDictLookupHashed(ctxt->dict, BASE_PTR + start,
                                 CUR_PTR - (BASE_PTR + start));
         xmlNsErr(ctxt, XML_NS_ERR_QNAME,
                  "Failed to parse QName '%s'\n", l.name, NULL, NULL);
     }
 
     *prefix = p;
     return(l);
 }
 
 /**
  * xmlParseQName:
  * @ctxt:  an XML parser context
  * @prefix:  pointer to store the prefix part
  *
  * parse an XML Namespace QName
  *
  * [6]  QName  ::= (Prefix ':')? LocalPart
  * [7]  Prefix  ::= NCName
  * [8]  LocalPart  ::= NCName
  *
  * Returns the Name parsed or NULL
  */
