commit a0775addf1a1039b1b7b16f7e7a3fe0cb3cdbe1d
Author: Eugene Kliuchnikov <eustas.ru@gmail.com>
Date:   Tue May 23 10:56:59 2023 +0200

    Fix DRM decoder fuzzer (#139)
    
    Drive-by: add MSAN / UBSAN bazel configs

diff --git a/.bazelrc b/.bazelrc
index 59e7267..243942a 100644
--- a/.bazelrc
+++ b/.bazelrc
@@ -6,3 +6,13 @@ build --action_env=CXX=clang++
 build:asan-libfuzzer --@rules_fuzzing//fuzzing:cc_engine=@rules_fuzzing//fuzzing/engines:libfuzzer
 build:asan-libfuzzer --@rules_fuzzing//fuzzing:cc_engine_instrumentation=libfuzzer
 build:asan-libfuzzer --@rules_fuzzing//fuzzing:cc_engine_sanitizer=asan
+
+# Define the --config=msan-libfuzzer configuration.
+build:msan-libfuzzer --@rules_fuzzing//fuzzing:cc_engine=@rules_fuzzing//fuzzing/engines:libfuzzer
+build:msan-libfuzzer --@rules_fuzzing//fuzzing:cc_engine_instrumentation=libfuzzer
+build:msan-libfuzzer --@rules_fuzzing//fuzzing:cc_engine_sanitizer=msan
+
+# Define the --config=ubsan-libfuzzer configuration.
+build:ubsan-libfuzzer --@rules_fuzzing//fuzzing:cc_engine=@rules_fuzzing//fuzzing/engines:libfuzzer
+build:ubsan-libfuzzer --@rules_fuzzing//fuzzing:cc_engine_instrumentation=libfuzzer
+build:ubsan-libfuzzer --@rules_fuzzing//fuzzing:cc_engine_sanitizer=ubsan
diff --git a/fuzz/fuzz_decode.c b/fuzz/fuzz_decode.c
index 8956e0a..0e4c200 100644
--- a/fuzz/fuzz_decode.c
+++ b/fuzz/fuzz_decode.c
@@ -39,76 +39,76 @@ int feenableexcept(int excepts);
 int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
   size_t preamble = 2 + 2 + 1 + sizeof(NeAACDecConfiguration);
   NeAACDecConfiguration config;
   uint64_t sample_rate;
   unsigned char num_channels;
   NeAACDecConfigurationPtr config_ptr;
   /* feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW | FE_UNDERFLOW); */
 
   if (size < preamble) return 0;
   size_t len1 = data[0] | (data[1] << 8);
   data += 2;
   size_t len2 = data[0] | (data[1] << 8);
   data += 2;
   uint8_t flags = data[0];
   data += 1;
   memcpy(&config, data, sizeof(NeAACDecConfiguration));
   data += sizeof(NeAACDecConfiguration);
   size -= preamble;
 
   if (len1 + len2 > size) return 0;
   size_t len3 = size - len1 - len2;
   int use_init2 = flags & 1;
   int seek_before = flags & 2;
   int seek_between = flags & 4;
   size_t buffer_op = (flags >> 3) & 3;
   int use_drm = flags & 32;
   int drm_channels = (flags >> 5) & 7;
   unsigned long drm_sample_rate = config.defSampleRate;
   int res, ok;
   const size_t kBufferSize[4] = {0, 0, 16, 16384};
   size_t buffer_size = kBufferSize[buffer_op];
   void* buffer = buffer_size > 0 ? (unsigned char *)malloc(buffer_size) : NULL;
 
   unsigned char* part1 = (unsigned char *)malloc(len1);
   unsigned char* part2 = (unsigned char *)malloc(len2);
   unsigned char* part3 = (unsigned char *)malloc(len3);
   memcpy(part1, data, len1);
   data += len1;
   memcpy(part2, data, len2);
   data += len2;
   memcpy(part3, data, len3);
   data += len3;
 
   NeAACDecHandle decoder = NeAACDecOpen();
   ok = NeAACDecSetConfiguration(decoder, &config);
   if (!ok) goto cleanup;
   config_ptr = NeAACDecGetCurrentConfiguration(decoder);
   if (!config_ptr) __builtin_trap();
   if (use_init2) {
     res = NeAACDecInit2(decoder, part1, len1, &sample_rate, &num_channels);
   } else {
     res = NeAACDecInit(decoder, part1, len1, &sample_rate, &num_channels);
   }
   if (use_drm) {
 #ifdef DRM_SUPPORT
-    NeAACDecInitDRM(decoder, drm_channels, drm_sample_rate);
+    NeAACDecInitDRM(&decoder, drm_channels, drm_sample_rate);
 #else
     (void)drm_channels;
     (void)drm_sample_rate;
 #endif
   }
 
   if (res != 0) goto cleanup;
   NeAACDecFrameInfo faad_info;
   if (seek_before) {
     NeAACDecPostSeekReset(decoder, 0x1234567);
   }
   NeAACDecDecode(decoder, &faad_info, part2, len2);
   if (seek_between) {
     NeAACDecPostSeekReset(decoder, -0x1234567);
   }
   if (buffer_op == 0) {
     NeAACDecDecode(decoder, &faad_info, part3, len3);
   } else {
     NeAACDecDecode2(decoder, &faad_info, part3, len3, &buffer, buffer_size);
   }
