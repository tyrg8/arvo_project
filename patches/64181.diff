commit 4013a807492568bf9907cfb3df41f130ac83c7b9
Author: Jakub Jelen <jjelen@redhat.com>
Date:   Wed Nov 15 10:53:46 2023 +0100

    setcos: Avoid writing behind the path buffer end
    
    The path->value buffer is fixed to 16 bytes so it is not always possible
    to append 2 more bytes. Doing so overruns the buffer, writing into the
    ACL block, crashing during the cleanup.
    
    Thanks oss-fuzz
    
    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=64181

diff --git a/src/pkcs15init/pkcs15-setcos.c b/src/pkcs15init/pkcs15-setcos.c
index 70a28048..1eeeda06 100644
--- a/src/pkcs15init/pkcs15-setcos.c
+++ b/src/pkcs15init/pkcs15-setcos.c
@@ -255,50 +255,54 @@ static int
 setcos_new_file(sc_profile_t *profile, sc_card_t *card,
 	unsigned int type,
 	unsigned int num, /* number of objects of this type already on the card */
 	sc_file_t **out)
 {
 	sc_file_t *file = NULL;
 	sc_path_t *p;
 	char name[64];
 	const char *tag;
 	int r;
 
 	if (type == SC_PKCS15_TYPE_PRKEY_RSA)
 		tag = "private-key";
 	else if (type  == SC_PKCS15_TYPE_PUBKEY_RSA)
 		tag = "public-key";
 	else if ((type & SC_PKCS15_TYPE_CLASS_MASK) == SC_PKCS15_TYPE_CERT)
 		tag = "certificate";
 	else if ((type & SC_PKCS15_TYPE_CLASS_MASK) == SC_PKCS15_TYPE_DATA_OBJECT)
 		tag = "data";
 	else {
 		sc_log(card->ctx,  "Unsupported file type");
 		return SC_ERROR_INVALID_ARGUMENTS;
 	}
 
 	/* Get template from profile  */
 	snprintf(name, sizeof(name), "template-%s", tag);
 	if (sc_profile_get_file(profile, name, &file) < 0) {
 		sc_log(card->ctx,  "Profile doesn't define %s", name);
 		return SC_ERROR_NOT_SUPPORTED;
 	}
 
 	/* Auto-increment FID for next object */
 	file->id += num;
 	p = &file->path;
 	*p = profile->df_info->file->path;
+	if (p->len + 2 > SC_MAX_PATH_SIZE) {
+		sc_file_free(file);
+		return SC_ERROR_INVALID_DATA;
+	}
 	p->value[p->len++] = (u8) (file->id / 256);
 	p->value[p->len++] = (u8) (file->id % 256);
 
 	/* Increment FID until there's no file with such path */
 	r = sc_select_file(card, p, NULL);
 	while(r == 0) {
 		file->id++;
 		p->value[p->len - 2] = (u8) (file->id / 256);
 		p->value[p->len - 1] = (u8) (file->id % 256);
 		r = sc_select_file(card, p, NULL);
 	}
 
 	*out = file;
 	return 0;
 }
