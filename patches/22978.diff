commit e70ded8b0bc231f7ed3fd5d2e83d61bd18ef5e94
Author: Alex Tutubalin <lexa@lexa.ru>
Date:   Thu Dec 3 12:28:52 2020 +0300

    LibRaw_buffer_datastream: gets() not always returns 0-terminated string
    
    Reverted back parse_rollei change

diff --git a/src/libraw_datastream.cpp b/src/libraw_datastream.cpp
index 606e5de7..eaf071ee 100644
--- a/src/libraw_datastream.cpp
+++ b/src/libraw_datastream.cpp
@@ -418,22 +418,25 @@ INT64 LibRaw_buffer_datastream::tell()
 char *LibRaw_buffer_datastream::gets(char *s, int sz)
 {
   unsigned char *psrc, *pdest, *str;
   str = (unsigned char *)s;
   psrc = buf + streampos;
   pdest = str;
   if(streampos >= streamsize) return NULL;
-  while ((size_t(psrc - buf) < streamsize) && ((pdest - str) < sz))
+  while ((size_t(psrc - buf) < streamsize) && ((pdest - str) < (sz-1)))
   {
     *pdest = *psrc;
     if (*psrc == '\n')
       break;
     psrc++;
     pdest++;
   }
   if (size_t(psrc - buf) < streamsize)
     psrc++;
-  if ((pdest - str) < sz)
+  if ((pdest - str) < sz-1)
     *(++pdest) = 0;
+  else
+    s[sz - 1] = 0; // ensure trailing zero
+
   streampos = psrc - buf;
   return s;
 }
diff --git a/src/metadata/misc_parsers.cpp b/src/metadata/misc_parsers.cpp
index 4e36e940..7a74c9f1 100644
--- a/src/metadata/misc_parsers.cpp
+++ b/src/metadata/misc_parsers.cpp
@@ -295,69 +295,68 @@ void LibRaw::parse_riff()
 void LibRaw::parse_rollei()
 {
   char line[128], *val;
   struct tm t;
 
   fseek(ifp, 0, SEEK_SET);
   memset(&t, 0, sizeof t);
   do
   {
     line[0] = 0;
     if (!fgets(line, 128, ifp))
       break;
-    line[127] = 0;
     if(!line[0]) break; // zero-length
     if ((val = strchr(line, '=')))
       *val++ = 0;
     else
       val = line + strbuflen(line);
     if (!strcmp(line, "DAT"))
       sscanf(val, "%d.%d.%d", &t.tm_mday, &t.tm_mon, &t.tm_year);
     if (!strcmp(line, "TIM"))
       sscanf(val, "%d:%d:%d", &t.tm_hour, &t.tm_min, &t.tm_sec);
     if (!strcmp(line, "HDR"))
       thumb_offset = atoi(val);
     if (!strcmp(line, "X  "))
       raw_width = atoi(val);
     if (!strcmp(line, "Y  "))
       raw_height = atoi(val);
     if (!strcmp(line, "TX "))
       thumb_width = atoi(val);
     if (!strcmp(line, "TY "))
       thumb_height = atoi(val);
     if (!strcmp(line, "APT"))
       aperture = atof(val);
     if (!strcmp(line, "SPE"))
       shutter = atof(val);
     if (!strcmp(line, "FOCLEN"))
       focal_len = atof(val);
     if (!strcmp(line, "BLKOFS"))
       black = atoi(val) +1;
     if (!strcmp(line, "ORI"))
       switch (atoi(val)) {
       case 1:
         flip = 6;
         break;
       case 2:
         flip = 3;
         break;
       case 3:
         flip = 5;
         break;
       }
     if (!strcmp(line, "CUTRECT")) {
       sscanf(val, "%hu %hu %hu %hu",
              &imgdata.sizes.raw_inset_crop.cleft,
              &imgdata.sizes.raw_inset_crop.ctop,
              &imgdata.sizes.raw_inset_crop.cwidth,
              &imgdata.sizes.raw_inset_crop.cheight);
     }
   } while (strncmp(line, "EOHD", 4));
   data_offset = thumb_offset + thumb_width * thumb_height * 2;
   t.tm_year -= 1900;
   t.tm_mon -= 1;
   if (mktime(&t) > 0)
     timestamp = mktime(&t);
   strcpy(make, "Rollei");
   strcpy(model, "d530flex");
   write_thumb = &LibRaw::rollei_thumb;
 }
