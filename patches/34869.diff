changeset:   16526:505cb03b756d
user:        Bob Friesenhahn <bfriesen@GraphicsMagick.org>
date:        Sat Jun 05 15:22:50 2021 -0500
summary:     MSLStartElement(): Use resource-managed memory allocator for msl_info->group_info and assure that memory is cleared so that empty group does not result in use of uninitialized data.

diff -r cedbb6f8bc14 -r 505cb03b756d ChangeLog
--- a/ChangeLog	Sat Jun 05 10:30:40 2021 -0500
+++ b/ChangeLog	Sat Jun 05 15:22:50 2021 -0500
@@ -1,5 +1,12 @@
 2021-06-05  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>
 
+        * coders/msl.c (MSLStartElement): Use resource-managed memory
+        allocator for msl_info->group_info and assure that memory is
+        cleared so that empty group does not result in use of
+        uninitialized data.  Addresses oss-fuzz 34869
+        "graphicsmagick:coder_MSL_fuzzer: Use-of-uninitialized-value in
+        MSLEndElement".
+
         * magick/memory.c (_MagickReallocateResourceLimitedMemory): Round
         up allocation size on small reallocs in order to lessen the number
         of actual reallocs.
diff -r cedbb6f8bc14 -r 505cb03b756d coders/msl.c
--- a/coders/msl.c	Sat Jun 05 10:30:40 2021 -0500
+++ b/coders/msl.c	Sat Jun 05 15:22:50 2021 -0500
@@ -2016,9 +2016,23 @@
           }
         else if (LocaleCompare((char *) name, "group") == 0)
           {
+            MSLGroupInfo *new_group_info;
             msl_info->nGroups++;
-            MagickReallocMemory(MSLGroupInfo *,msl_info->group_info,
-                                (msl_info->nGroups+1)*sizeof(MSLGroupInfo));
+            new_group_info =
+              MagickReallocateResourceLimitedClearedArray(MSLGroupInfo *,
+                                                          msl_info->group_info,
+                                                          msl_info->nGroups+1,
+                                                          sizeof(MSLGroupInfo));
+            if (new_group_info != (MSLGroupInfo *) NULL)
+              {
+                msl_info->group_info = new_group_info;
+              }
+            else
+            {
+              msl_info->nGroups--;
+              MagickFatalError3(ResourceLimitFatalError,
+                      MemoryAllocationFailed,UnableToAllocateImage);
+            }
             break;
           }
         ThrowException(msl_info->exception,OptionError,
@@ -4833,8 +4847,8 @@
   /* top of the stack is the MSL file itself */
   msl_info.image=MagickAllocateMemory(Image **,sizeof(Image *));
   msl_info.attributes=MagickAllocateMemory(Image **,sizeof(Image *));
-  msl_info.group_info=MagickAllocateMemory(MSLGroupInfo *,
-                                           sizeof(MSLGroupInfo));
+  msl_info.group_info=MagickAllocateResourceLimitedClearedMemory(MSLGroupInfo *,
+                                                                 sizeof(MSLGroupInfo));
   if ((msl_info.image_info == (ImageInfo **) NULL) ||
       (msl_info.draw_info == (DrawInfo **) NULL) ||
       (msl_info.image == (Image **) NULL) ||
@@ -4991,7 +5005,7 @@
   MagickFreeMemory(msl_info.draw_info);
   MagickFreeMemory(msl_info.attributes);
   MagickFreeMemory(msl_info.image);
-  MagickFreeMemory(msl_info.group_info);
+  MagickFreeResourceLimitedMemory(msl_info.group_info);
 
   CloseBlob(msl_image);
   /*
diff -r cedbb6f8bc14 -r 505cb03b756d www/Changelog.html
--- a/www/Changelog.html	Sat Jun 05 10:30:40 2021 -0500
+++ b/www/Changelog.html	Sat Jun 05 15:22:50 2021 -0500
@@ -37,9 +37,16 @@
 
 <p>2021-06-05  Bob Friesenhahn  &lt;<a class="reference external" href="mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>
 <blockquote>
-* magick/memory.c (_MagickReallocateResourceLimitedMemory): Round
+<p>* coders/msl.c (MSLStartElement): Use resource-managed memory
+allocator for msl_info-&gt;group_info and assure that memory is
+cleared so that empty group does not result in use of
+uninitialized data.  Addresses oss-fuzz 34869
+&quot;graphicsmagick:coder_MSL_fuzzer: Use-of-uninitialized-value in
+MSLEndElement&quot;.</p>
+<p>* magick/memory.c (_MagickReallocateResourceLimitedMemory): Round
 up allocation size on small reallocs in order to lessen the number
-of actual reallocs.</blockquote>
+of actual reallocs.</p>
+</blockquote>
 <p>2021-05-31  Bob Friesenhahn  &lt;<a class="reference external" href="mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>
 <blockquote>
 <p>* coders/svg.c (SVGComment): Re-implement comment callback to be based on

