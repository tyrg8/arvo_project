commit 713a1581d5c17a3445e6faa8262ec57b8743395a
Author: Craig Tiller <ctiller@google.com>
Date:   Sun Jun 5 11:01:48 2022 -0700

    Revert "Revert "Revert "[transport] Remove ByteStream (#29637)" (#29890)" (#29894)" (#29910)
    
    This reverts commit 93cdc8b77e7b3fe4a3afec1c9c7e29b3f02ec3cf.

diff --git a/BUILD b/BUILD
index de0382d0bc..3a148cb41e 100644
--- a/BUILD
+++ b/BUILD
@@ -2384,23 +2384,6 @@ grpc_cc_library(
     ],
 )
 
-grpc_cc_library(
-    name = "bdp_estimator",
-    srcs = [
-        "src/core/lib/transport/bdp_estimator.cc",
-    ],
-    hdrs = ["src/core/lib/transport/bdp_estimator.h"],
-    tags = ["grpc-autodeps"],
-    deps = [
-        "exec_ctx",
-        "gpr_base",
-        "gpr_codegen",
-        "gpr_platform",
-        "grpc_trace",
-        "time",
-    ],
-)
-
 grpc_cc_library(
     name = "percent_encoding",
     srcs = [
@@ -2421,301 +2404,305 @@ grpc_cc_library(
 grpc_cc_library(
     name = "grpc_base",
     srcs = [
         "src/core/lib/address_utils/parse_address.cc",
         "src/core/lib/backoff/backoff.cc",
         "src/core/lib/channel/channel_stack.cc",
         "src/core/lib/channel/channel_stack_builder_impl.cc",
         "src/core/lib/channel/channel_trace.cc",
         "src/core/lib/channel/channelz.cc",
         "src/core/lib/channel/channelz_registry.cc",
         "src/core/lib/channel/connected_channel.cc",
         "src/core/lib/channel/promise_based_filter.cc",
         "src/core/lib/channel/status_util.cc",
         "src/core/lib/compression/compression.cc",
         "src/core/lib/compression/compression_internal.cc",
         "src/core/lib/compression/message_compress.cc",
         "src/core/lib/debug/stats.cc",
         "src/core/lib/debug/stats_data.cc",
         "src/core/lib/event_engine/channel_args_endpoint_config.cc",
         "src/core/lib/iomgr/buffer_list.cc",
         "src/core/lib/iomgr/call_combiner.cc",
         "src/core/lib/iomgr/cfstream_handle.cc",
         "src/core/lib/iomgr/dualstack_socket_posix.cc",
         "src/core/lib/iomgr/endpoint.cc",
         "src/core/lib/iomgr/endpoint_cfstream.cc",
         "src/core/lib/iomgr/endpoint_pair_posix.cc",
         "src/core/lib/iomgr/endpoint_pair_windows.cc",
         "src/core/lib/iomgr/error_cfstream.cc",
         "src/core/lib/iomgr/ev_apple.cc",
         "src/core/lib/iomgr/ev_epoll1_linux.cc",
         "src/core/lib/iomgr/ev_poll_posix.cc",
         "src/core/lib/iomgr/ev_posix.cc",
         "src/core/lib/iomgr/ev_windows.cc",
         "src/core/lib/iomgr/executor/mpmcqueue.cc",
         "src/core/lib/iomgr/executor/threadpool.cc",
         "src/core/lib/iomgr/fork_posix.cc",
         "src/core/lib/iomgr/fork_windows.cc",
         "src/core/lib/iomgr/gethostname_fallback.cc",
         "src/core/lib/iomgr/gethostname_host_name_max.cc",
         "src/core/lib/iomgr/gethostname_sysconf.cc",
         "src/core/lib/iomgr/grpc_if_nametoindex_posix.cc",
         "src/core/lib/iomgr/grpc_if_nametoindex_unsupported.cc",
         "src/core/lib/iomgr/internal_errqueue.cc",
         "src/core/lib/iomgr/iocp_windows.cc",
         "src/core/lib/iomgr/iomgr.cc",
         "src/core/lib/iomgr/iomgr_posix.cc",
         "src/core/lib/iomgr/iomgr_posix_cfstream.cc",
         "src/core/lib/iomgr/iomgr_windows.cc",
         "src/core/lib/iomgr/load_file.cc",
         "src/core/lib/iomgr/lockfree_event.cc",
         "src/core/lib/iomgr/polling_entity.cc",
         "src/core/lib/iomgr/pollset.cc",
         "src/core/lib/iomgr/pollset_set.cc",
         "src/core/lib/iomgr/pollset_set_windows.cc",
         "src/core/lib/iomgr/pollset_windows.cc",
         "src/core/lib/iomgr/resolve_address.cc",
         "src/core/lib/iomgr/resolve_address_posix.cc",
         "src/core/lib/iomgr/resolve_address_windows.cc",
         "src/core/lib/iomgr/socket_factory_posix.cc",
         "src/core/lib/iomgr/socket_mutator.cc",
         "src/core/lib/iomgr/socket_utils_common_posix.cc",
         "src/core/lib/iomgr/socket_utils_linux.cc",
         "src/core/lib/iomgr/socket_utils_posix.cc",
         "src/core/lib/iomgr/socket_windows.cc",
         "src/core/lib/iomgr/tcp_client.cc",
         "src/core/lib/iomgr/tcp_client_cfstream.cc",
         "src/core/lib/iomgr/tcp_client_posix.cc",
         "src/core/lib/iomgr/tcp_client_windows.cc",
         "src/core/lib/iomgr/tcp_posix.cc",
         "src/core/lib/iomgr/tcp_server.cc",
         "src/core/lib/iomgr/tcp_server_posix.cc",
         "src/core/lib/iomgr/tcp_server_utils_posix_common.cc",
         "src/core/lib/iomgr/tcp_server_utils_posix_ifaddrs.cc",
         "src/core/lib/iomgr/tcp_server_utils_posix_noifaddrs.cc",
         "src/core/lib/iomgr/tcp_server_windows.cc",
         "src/core/lib/iomgr/tcp_windows.cc",
         "src/core/lib/iomgr/unix_sockets_posix.cc",
         "src/core/lib/iomgr/unix_sockets_posix_noop.cc",
         "src/core/lib/iomgr/wakeup_fd_eventfd.cc",
         "src/core/lib/iomgr/wakeup_fd_nospecial.cc",
         "src/core/lib/iomgr/wakeup_fd_pipe.cc",
         "src/core/lib/iomgr/wakeup_fd_posix.cc",
         "src/core/lib/iomgr/work_serializer.cc",
         "src/core/lib/resource_quota/api.cc",
         "src/core/lib/slice/b64.cc",
         "src/core/lib/slice/slice_api.cc",
         "src/core/lib/slice/slice_buffer_api.cc",
         "src/core/lib/slice/slice_split.cc",
         "src/core/lib/surface/api_trace.cc",
         "src/core/lib/surface/builtins.cc",
         "src/core/lib/surface/byte_buffer.cc",
         "src/core/lib/surface/byte_buffer_reader.cc",
         "src/core/lib/surface/call.cc",
         "src/core/lib/surface/call_details.cc",
         "src/core/lib/surface/call_log_batch.cc",
         "src/core/lib/surface/channel.cc",
         "src/core/lib/surface/channel_ping.cc",
         "src/core/lib/surface/completion_queue.cc",
         "src/core/lib/surface/completion_queue_factory.cc",
         "src/core/lib/surface/event_string.cc",
         "src/core/lib/surface/lame_client.cc",
         "src/core/lib/surface/metadata_array.cc",
         "src/core/lib/surface/server.cc",
         "src/core/lib/surface/validate_metadata.cc",
         "src/core/lib/surface/version.cc",
+        "src/core/lib/transport/bdp_estimator.cc",
+        "src/core/lib/transport/byte_stream.cc",
         "src/core/lib/transport/connectivity_state.cc",
         "src/core/lib/transport/error_utils.cc",
         "src/core/lib/transport/metadata_batch.cc",
         "src/core/lib/transport/parsed_metadata.cc",
         "src/core/lib/transport/status_conversion.cc",
         "src/core/lib/transport/timeout_encoding.cc",
         "src/core/lib/transport/transport.cc",
         "src/core/lib/transport/transport_op_string.cc",
     ],
     hdrs = [
         "src/core/lib/transport/error_utils.h",
         "src/core/lib/transport/http2_errors.h",
         "src/core/lib/address_utils/parse_address.h",
         "src/core/lib/backoff/backoff.h",
         "src/core/lib/channel/call_finalization.h",
         "src/core/lib/channel/call_tracer.h",
         "src/core/lib/channel/channel_stack.h",
         "src/core/lib/channel/promise_based_filter.h",
         "src/core/lib/channel/channel_stack_builder_impl.h",
         "src/core/lib/channel/channel_trace.h",
         "src/core/lib/channel/channelz.h",
         "src/core/lib/channel/channelz_registry.h",
         "src/core/lib/channel/connected_channel.h",
         "src/core/lib/channel/context.h",
         "src/core/lib/channel/status_util.h",
         "src/core/lib/compression/compression_internal.h",
         "src/core/lib/resource_quota/api.h",
         "src/core/lib/compression/message_compress.h",
         "src/core/lib/debug/stats.h",
         "src/core/lib/debug/stats_data.h",
         "src/core/lib/event_engine/channel_args_endpoint_config.h",
         "src/core/lib/iomgr/block_annotate.h",
         "src/core/lib/iomgr/buffer_list.h",
         "src/core/lib/iomgr/call_combiner.h",
         "src/core/lib/iomgr/cfstream_handle.h",
         "src/core/lib/iomgr/dynamic_annotations.h",
         "src/core/lib/iomgr/endpoint.h",
         "src/core/lib/iomgr/endpoint_cfstream.h",
         "src/core/lib/iomgr/endpoint_pair.h",
         "src/core/lib/iomgr/error_cfstream.h",
         "src/core/lib/iomgr/ev_apple.h",
         "src/core/lib/iomgr/ev_epoll1_linux.h",
         "src/core/lib/iomgr/ev_poll_posix.h",
         "src/core/lib/iomgr/ev_posix.h",
         "src/core/lib/iomgr/executor/mpmcqueue.h",
         "src/core/lib/iomgr/executor/threadpool.h",
         "src/core/lib/iomgr/gethostname.h",
         "src/core/lib/iomgr/grpc_if_nametoindex.h",
         "src/core/lib/iomgr/internal_errqueue.h",
         "src/core/lib/iomgr/iocp_windows.h",
         "src/core/lib/iomgr/iomgr.h",
         "src/core/lib/iomgr/load_file.h",
         "src/core/lib/iomgr/lockfree_event.h",
         "src/core/lib/iomgr/nameser.h",
         "src/core/lib/iomgr/polling_entity.h",
         "src/core/lib/iomgr/pollset.h",
         "src/core/lib/iomgr/pollset_set.h",
         "src/core/lib/iomgr/pollset_set_windows.h",
         "src/core/lib/iomgr/pollset_windows.h",
         "src/core/lib/iomgr/python_util.h",
         "src/core/lib/iomgr/resolve_address.h",
         "src/core/lib/iomgr/resolve_address_impl.h",
         "src/core/lib/iomgr/resolve_address_posix.h",
         "src/core/lib/iomgr/resolve_address_windows.h",
         "src/core/lib/iomgr/sockaddr.h",
         "src/core/lib/iomgr/sockaddr_posix.h",
         "src/core/lib/iomgr/sockaddr_windows.h",
         "src/core/lib/iomgr/socket_factory_posix.h",
         "src/core/lib/iomgr/socket_mutator.h",
         "src/core/lib/iomgr/socket_utils_posix.h",
         "src/core/lib/iomgr/socket_windows.h",
         "src/core/lib/iomgr/tcp_client.h",
         "src/core/lib/iomgr/tcp_client_posix.h",
         "src/core/lib/iomgr/tcp_posix.h",
         "src/core/lib/iomgr/tcp_server.h",
         "src/core/lib/iomgr/tcp_server_utils_posix.h",
         "src/core/lib/iomgr/tcp_windows.h",
         "src/core/lib/iomgr/unix_sockets_posix.h",
         "src/core/lib/iomgr/wakeup_fd_pipe.h",
         "src/core/lib/iomgr/wakeup_fd_posix.h",
         "src/core/lib/iomgr/work_serializer.h",
         "src/core/lib/slice/b64.h",
         "src/core/lib/slice/slice_split.h",
         "src/core/lib/surface/api_trace.h",
         "src/core/lib/surface/builtins.h",
         "src/core/lib/surface/call.h",
         "src/core/lib/surface/call_test_only.h",
         "src/core/lib/surface/channel.h",
         "src/core/lib/surface/completion_queue.h",
         "src/core/lib/surface/completion_queue_factory.h",
         "src/core/lib/surface/event_string.h",
         "src/core/lib/surface/init.h",
         "src/core/lib/surface/lame_client.h",
         "src/core/lib/surface/server.h",
         "src/core/lib/surface/validate_metadata.h",
+        "src/core/lib/transport/bdp_estimator.h",
+        "src/core/lib/transport/byte_stream.h",
         "src/core/lib/transport/connectivity_state.h",
         "src/core/lib/transport/metadata_batch.h",
         "src/core/lib/transport/parsed_metadata.h",
         "src/core/lib/transport/status_conversion.h",
         "src/core/lib/transport/timeout_encoding.h",
         "src/core/lib/transport/transport.h",
         "src/core/lib/transport/transport_impl.h",
     ] +
     # TODO(ctiller): remove these
     # These headers used to be vended by this target, but they have been split
     # out into separate targets now. In order to transition downstream code, we
     # re-export these headers from here for now, and when LSC's have completed
     # to clean this up, we'll remove these.
     [
         "src/core/lib/iomgr/closure.h",
         "src/core/lib/iomgr/error.h",
         "src/core/lib/iomgr/error_internal.h",
         "src/core/lib/slice/slice_internal.h",
         "src/core/lib/slice/slice_string_helpers.h",
         "src/core/lib/iomgr/exec_ctx.h",
         "src/core/lib/iomgr/executor.h",
         "src/core/lib/iomgr/combiner.h",
         "src/core/lib/iomgr/iomgr_internal.h",
         "src/core/lib/channel/channel_args.h",
         "src/core/lib/channel/channel_stack_builder.h",
     ],
     external_deps = [
         "absl/base:core_headers",
         "absl/container:flat_hash_map",
         "absl/container:inlined_vector",
         "absl/functional:bind_front",
         "absl/memory",
         "absl/meta:type_traits",
         "absl/status:statusor",
         "absl/status",
         "absl/strings:str_format",
         "absl/strings",
         "absl/types:optional",
         "absl/types:variant",
         "absl/utility",
         "madler_zlib",
     ],
     language = "c++",
     public_hdrs = GRPC_PUBLIC_HDRS + GRPC_PUBLIC_EVENT_ENGINE_HDRS,
     visibility = ["@grpc:alt_grpc_base_legacy"],
     deps = [
         "arena",
         "arena_promise",
         "atomic_utils",
         "avl",
         "bitset",
         "channel_args",
         "channel_args_preconditioning",
         "channel_fwd",
         "channel_init",
         "channel_stack_builder",
         "channel_stack_type",
         "chunked_vector",
         "closure",
         "config",
         "cpp_impl_of",
         "debug_location",
         "default_event_engine_factory",
         "dual_ref_counted",
         "error",
         "event_engine_base",
         "event_engine_common",
         "exec_ctx",
         "gpr_base",
         "gpr_codegen",
         "gpr_tls",
         "grpc_codegen",
         "grpc_sockaddr",
         "grpc_trace",
         "handshaker_registry",
         "iomgr_port",
         "iomgr_timer",
         "json",
         "latch",
         "memory_quota",
         "orphanable",
         "percent_encoding",
         "poll",
         "promise",
         "ref_counted",
         "ref_counted_ptr",
         "resolved_address",
         "resource_quota",
         "resource_quota_trace",
         "slice",
         "slice_buffer",
         "slice_refcount",
         "sockaddr_utils",
         "table",
         "thread_quota",
         "time",
         "transport_fwd",
         "uri_parser",
         "useful",
     ],
 )
@@ -3003,126 +2990,123 @@ grpc_cc_library(
 grpc_cc_library(
     name = "grpc_client_channel",
     srcs = [
         "src/core/ext/filters/client_channel/backend_metric.cc",
         "src/core/ext/filters/client_channel/backup_poller.cc",
         "src/core/ext/filters/client_channel/channel_connectivity.cc",
         "src/core/ext/filters/client_channel/client_channel.cc",
         "src/core/ext/filters/client_channel/client_channel_channelz.cc",
         "src/core/ext/filters/client_channel/client_channel_factory.cc",
         "src/core/ext/filters/client_channel/client_channel_plugin.cc",
         "src/core/ext/filters/client_channel/config_selector.cc",
         "src/core/ext/filters/client_channel/dynamic_filters.cc",
         "src/core/ext/filters/client_channel/global_subchannel_pool.cc",
         "src/core/ext/filters/client_channel/health/health_check_client.cc",
         "src/core/ext/filters/client_channel/http_proxy.cc",
         "src/core/ext/filters/client_channel/lb_policy.cc",
         "src/core/ext/filters/client_channel/lb_policy/child_policy_handler.cc",
         "src/core/ext/filters/client_channel/lb_policy/oob_backend_metric.cc",
         "src/core/ext/filters/client_channel/lb_policy_registry.cc",
         "src/core/ext/filters/client_channel/local_subchannel_pool.cc",
         "src/core/ext/filters/client_channel/proxy_mapper_registry.cc",
         "src/core/ext/filters/client_channel/resolver_result_parsing.cc",
         "src/core/ext/filters/client_channel/retry_filter.cc",
         "src/core/ext/filters/client_channel/retry_service_config.cc",
         "src/core/ext/filters/client_channel/retry_throttle.cc",
         "src/core/ext/filters/client_channel/service_config_channel_arg_filter.cc",
         "src/core/ext/filters/client_channel/subchannel.cc",
         "src/core/ext/filters/client_channel/subchannel_pool_interface.cc",
         "src/core/ext/filters/client_channel/subchannel_stream_client.cc",
     ],
     hdrs = [
         "src/core/ext/filters/client_channel/backend_metric.h",
         "src/core/ext/filters/client_channel/backup_poller.h",
         "src/core/ext/filters/client_channel/client_channel.h",
         "src/core/ext/filters/client_channel/client_channel_channelz.h",
         "src/core/ext/filters/client_channel/client_channel_factory.h",
         "src/core/ext/filters/client_channel/config_selector.h",
         "src/core/ext/filters/client_channel/connector.h",
         "src/core/ext/filters/client_channel/dynamic_filters.h",
         "src/core/ext/filters/client_channel/global_subchannel_pool.h",
         "src/core/ext/filters/client_channel/health/health_check_client.h",
         "src/core/ext/filters/client_channel/http_proxy.h",
         "src/core/ext/filters/client_channel/lb_policy.h",
         "src/core/ext/filters/client_channel/lb_policy/child_policy_handler.h",
         "src/core/ext/filters/client_channel/lb_policy/oob_backend_metric.h",
         "src/core/ext/filters/client_channel/lb_policy_factory.h",
         "src/core/ext/filters/client_channel/lb_policy_registry.h",
         "src/core/ext/filters/client_channel/local_subchannel_pool.h",
         "src/core/ext/filters/client_channel/proxy_mapper.h",
         "src/core/ext/filters/client_channel/proxy_mapper_registry.h",
         "src/core/ext/filters/client_channel/resolver_result_parsing.h",
         "src/core/ext/filters/client_channel/retry_filter.h",
         "src/core/ext/filters/client_channel/retry_service_config.h",
         "src/core/ext/filters/client_channel/retry_throttle.h",
         "src/core/ext/filters/client_channel/subchannel.h",
         "src/core/ext/filters/client_channel/subchannel_interface.h",
         "src/core/ext/filters/client_channel/subchannel_interface_internal.h",
         "src/core/ext/filters/client_channel/subchannel_pool_interface.h",
         "src/core/ext/filters/client_channel/subchannel_stream_client.h",
     ],
     external_deps = [
         "absl/base:core_headers",
         "absl/container:inlined_vector",
         "absl/memory",
         "absl/strings",
         "absl/strings:cord",
         "absl/strings:str_format",
         "absl/types:optional",
         "absl/types:variant",
         "absl/status",
         "absl/status:statusor",
-        "absl/utility",
         "upb_lib",
     ],
     language = "c++",
     visibility = ["@grpc:client_channel"],
     deps = [
         "arena",
         "channel_fwd",
         "channel_init",
         "channel_stack_type",
         "chunked_vector",
         "config",
-        "construct_destruct",
         "debug_location",
         "dual_ref_counted",
         "error",
         "gpr_base",
         "gpr_codegen",
         "grpc_backend_metric_data",
         "grpc_base",
         "grpc_client_authority_filter",
         "grpc_codegen",
         "grpc_deadline_filter",
         "grpc_health_upb",
         "grpc_resolver",
         "grpc_service_config",
         "grpc_service_config_impl",
         "grpc_trace",
         "handshaker_factory",
         "handshaker_registry",
         "http_connect_handshaker",
         "httpcli",
         "iomgr_fwd",
         "iomgr_timer",
         "json",
         "json_util",
         "orphanable",
         "protobuf_duration_upb",
         "ref_counted",
         "ref_counted_ptr",
         "resource_quota",
         "server_address",
         "service_config_parser",
         "slice",
-        "slice_buffer",
         "slice_refcount",
         "sockaddr_utils",
         "time",
         "unique_type_name",
         "uri_parser",
         "useful",
         "xds_orca_service_upb",
         "xds_orca_upb",
     ],
 )
@@ -3318,38 +3302,38 @@ grpc_cc_library(
 grpc_cc_library(
     name = "grpc_message_size_filter",
     srcs = [
         "src/core/ext/filters/message_size/message_size_filter.cc",
     ],
     hdrs = [
         "src/core/ext/filters/message_size/message_size_filter.h",
     ],
     external_deps = [
         "absl/memory",
         "absl/strings",
         "absl/strings:str_format",
         "absl/types:optional",
     ],
     language = "c++",
     tags = ["grpc-autodeps"],
     deps = [
         "channel_args",
         "channel_fwd",
         "channel_init",
         "channel_stack_builder",
         "channel_stack_type",
         "closure",
         "config",
         "debug_location",
         "error",
         "gpr_base",
         "gpr_platform",
         "grpc_base",
         "grpc_codegen",
         "grpc_public_hdrs",
         "grpc_service_config",
         "json",
+        "orphanable",
         "service_config_parser",
-        "slice_buffer",
     ],
 )
 
@@ -3432,52 +3416,51 @@ grpc_cc_library(
 grpc_cc_library(
     name = "grpc_http_filters",
     srcs = [
         "src/core/ext/filters/http/client/http_client_filter.cc",
         "src/core/ext/filters/http/http_filters_plugin.cc",
         "src/core/ext/filters/http/message_compress/message_compress_filter.cc",
         "src/core/ext/filters/http/message_compress/message_decompress_filter.cc",
         "src/core/ext/filters/http/server/http_server_filter.cc",
     ],
     hdrs = [
         "src/core/ext/filters/http/client/http_client_filter.h",
         "src/core/ext/filters/http/message_compress/message_compress_filter.h",
         "src/core/ext/filters/http/message_compress/message_decompress_filter.h",
         "src/core/ext/filters/http/server/http_server_filter.h",
     ],
     external_deps = [
         "absl/base:core_headers",
         "absl/meta:type_traits",
         "absl/status",
         "absl/strings:str_format",
         "absl/strings",
         "absl/types:optional",
         "absl/utility",
     ],
     language = "c++",
     visibility = ["@grpc:http"],
     deps = [
         "arena",
         "basic_seq",
         "call_push_pull",
         "channel_fwd",
         "channel_init",
         "channel_stack_type",
         "config",
         "context",
         "debug_location",
         "gpr_base",
         "grpc_base",
         "grpc_codegen",
         "grpc_message_size_filter",
         "grpc_trace",
         "latch",
         "orphanable",
         "percent_encoding",
         "poll",
         "promise",
         "seq",
         "slice",
-        "slice_buffer",
         "transport_fwd",
     ],
 )
@@ -5721,124 +5704,95 @@ grpc_cc_library(
     ],
 )
 
-grpc_cc_library(
-    name = "chttp2_flow_control",
-    srcs = [
-        "src/core/ext/transport/chttp2/transport/flow_control.cc",
-    ],
-    hdrs = [
-        "src/core/ext/transport/chttp2/transport/flow_control.h",
-    ],
-    external_deps = [
-        "absl/status",
-        "absl/strings",
-        "absl/strings:str_format",
-    ],
-    tags = ["grpc-autodeps"],
-    deps = [
-        "bdp_estimator",
-        "exec_ctx",
-        "gpr_base",
-        "gpr_platform",
-        "grpc_trace",
-        "memory_quota",
-        "pid_controller",
-        "time",
-        "useful",
-    ],
-)
-
 grpc_cc_library(
     name = "grpc_transport_chttp2",
     srcs = [
         "src/core/ext/transport/chttp2/transport/bin_decoder.cc",
         "src/core/ext/transport/chttp2/transport/bin_encoder.cc",
         "src/core/ext/transport/chttp2/transport/chttp2_transport.cc",
         "src/core/ext/transport/chttp2/transport/context_list.cc",
+        "src/core/ext/transport/chttp2/transport/flow_control.cc",
         "src/core/ext/transport/chttp2/transport/frame_data.cc",
         "src/core/ext/transport/chttp2/transport/frame_goaway.cc",
         "src/core/ext/transport/chttp2/transport/frame_ping.cc",
         "src/core/ext/transport/chttp2/transport/frame_rst_stream.cc",
         "src/core/ext/transport/chttp2/transport/frame_settings.cc",
         "src/core/ext/transport/chttp2/transport/frame_window_update.cc",
         "src/core/ext/transport/chttp2/transport/hpack_encoder.cc",
         "src/core/ext/transport/chttp2/transport/hpack_parser.cc",
         "src/core/ext/transport/chttp2/transport/hpack_parser_table.cc",
         "src/core/ext/transport/chttp2/transport/http2_settings.cc",
         "src/core/ext/transport/chttp2/transport/huffsyms.cc",
         "src/core/ext/transport/chttp2/transport/parsing.cc",
         "src/core/ext/transport/chttp2/transport/stream_lists.cc",
         "src/core/ext/transport/chttp2/transport/stream_map.cc",
         "src/core/ext/transport/chttp2/transport/varint.cc",
         "src/core/ext/transport/chttp2/transport/writing.cc",
     ],
     hdrs = [
         "src/core/ext/transport/chttp2/transport/bin_decoder.h",
         "src/core/ext/transport/chttp2/transport/bin_encoder.h",
         "src/core/ext/transport/chttp2/transport/chttp2_transport.h",
         "src/core/ext/transport/chttp2/transport/context_list.h",
+        "src/core/ext/transport/chttp2/transport/flow_control.h",
         "src/core/ext/transport/chttp2/transport/frame.h",
         "src/core/ext/transport/chttp2/transport/frame_data.h",
         "src/core/ext/transport/chttp2/transport/frame_goaway.h",
         "src/core/ext/transport/chttp2/transport/frame_ping.h",
         "src/core/ext/transport/chttp2/transport/frame_rst_stream.h",
         "src/core/ext/transport/chttp2/transport/frame_settings.h",
         "src/core/ext/transport/chttp2/transport/frame_window_update.h",
         "src/core/ext/transport/chttp2/transport/hpack_encoder.h",
         "src/core/ext/transport/chttp2/transport/hpack_parser.h",
         "src/core/ext/transport/chttp2/transport/hpack_parser_table.h",
         "src/core/ext/transport/chttp2/transport/http2_settings.h",
         "src/core/ext/transport/chttp2/transport/huffsyms.h",
         "src/core/ext/transport/chttp2/transport/internal.h",
         "src/core/ext/transport/chttp2/transport/stream_map.h",
         "src/core/ext/transport/chttp2/transport/varint.h",
     ],
     external_deps = [
         "absl/base:core_headers",
         "absl/memory",
         "absl/status",
         "absl/strings",
         "absl/strings:cord",
         "absl/strings:str_format",
         "absl/types:optional",
         "absl/types:span",
         "absl/types:variant",
         "absl/utility",
     ],
     language = "c++",
     visibility = ["@grpc:grpclb"],
     deps = [
         "arena",
-        "bdp_estimator",
         "bitset",
-        "chttp2_flow_control",
         "chunked_vector",
         "debug_location",
         "gpr_base",
         "grpc_base",
         "grpc_codegen",
         "grpc_http_filters",
         "grpc_resolver",
         "grpc_trace",
         "grpc_transport_chttp2_alpn",
         "hpack_constants",
         "hpack_encoder_table",
         "httpcli",
         "iomgr_fwd",
         "iomgr_timer",
         "memory_quota",
         "orphanable",
         "pid_controller",
-        "poll",
         "ref_counted",
         "ref_counted_ptr",
         "resource_quota",
         "resource_quota_trace",
         "slice",
-        "slice_buffer",
         "slice_refcount",
         "time",
         "uri_parser",
         "useful",
     ],
 )
@@ -5951,38 +5905,35 @@ grpc_cc_library(
 grpc_cc_library(
     name = "grpc_transport_inproc",
     srcs = [
         "src/core/ext/transport/inproc/inproc_plugin.cc",
         "src/core/ext/transport/inproc/inproc_transport.cc",
     ],
     hdrs = [
         "src/core/ext/transport/inproc/inproc_transport.h",
     ],
     external_deps = [
         "absl/status",
         "absl/status:statusor",
         "absl/strings",
         "absl/types:optional",
-        "absl/utility",
     ],
     language = "c++",
-    tags = ["grpc-autodeps"],
     deps = [
         "arena",
         "channel_args_preconditioning",
         "channel_stack_type",
         "config",
         "debug_location",
         "gpr_base",
         "grpc_base",
         "grpc_codegen",
-        "grpc_public_hdrs",
         "grpc_trace",
         "iomgr_fwd",
+        "orphanable",
         "ref_counted_ptr",
         "slice",
-        "slice_buffer",
         "time",
         "transport_fwd",
         "useful",
     ],
 )
@@ -6515,57 +6466,56 @@ grpc_cc_library(
 grpc_cc_library(
     name = "grpc_opencensus_plugin",
     srcs = [
         "src/cpp/ext/filters/census/channel_filter.cc",
         "src/cpp/ext/filters/census/client_filter.cc",
         "src/cpp/ext/filters/census/context.cc",
         "src/cpp/ext/filters/census/grpc_plugin.cc",
         "src/cpp/ext/filters/census/measures.cc",
         "src/cpp/ext/filters/census/rpc_encoding.cc",
         "src/cpp/ext/filters/census/server_filter.cc",
         "src/cpp/ext/filters/census/views.cc",
     ],
     hdrs = [
         "include/grpcpp/opencensus.h",
         "src/cpp/ext/filters/census/channel_filter.h",
         "src/cpp/ext/filters/census/client_filter.h",
         "src/cpp/ext/filters/census/context.h",
         "src/cpp/ext/filters/census/grpc_plugin.h",
         "src/cpp/ext/filters/census/measures.h",
         "src/cpp/ext/filters/census/open_census_call_tracer.h",
         "src/cpp/ext/filters/census/rpc_encoding.h",
         "src/cpp/ext/filters/census/server_filter.h",
     ],
     external_deps = [
         "absl-base",
         "absl-time",
         "absl/base:core_headers",
         "absl/status",
         "absl/types:optional",
         "absl/strings",
         "opencensus-trace",
         "opencensus-trace-context_util",
         "opencensus-trace-propagation",
         "opencensus-trace-span_context",
         "opencensus-tags",
         "opencensus-tags-context_util",
         "opencensus-stats",
         "opencensus-context",
     ],
     language = "c++",
     visibility = ["@grpc:grpc_opencensus_plugin"],
     deps = [
         "arena",
         "census",
         "channel_stack_type",
         "debug_location",
         "gpr",
         "gpr_base",
         "gpr_codegen",
         "grpc++",
         "grpc++_base",
         "grpc_base",
         "slice",
-        "slice_buffer",
         "slice_refcount",
     ],
 )
diff --git a/CMakeLists.txt b/CMakeLists.txt
index e00d6894dd..33db3df144 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -767,475 +767,476 @@ protobuf_generate_grpc_cpp_with_import_path_correction(
 if(gRPC_BUILD_TESTS)
   add_custom_target(buildtests_c)
   add_dependencies(buildtests_c alloc_test)
   add_dependencies(buildtests_c alpn_test)
   add_dependencies(buildtests_c alts_counter_test)
   add_dependencies(buildtests_c alts_crypt_test)
   add_dependencies(buildtests_c alts_crypter_test)
   add_dependencies(buildtests_c alts_frame_protector_test)
   add_dependencies(buildtests_c alts_grpc_record_protocol_test)
   add_dependencies(buildtests_c alts_handshaker_client_test)
   add_dependencies(buildtests_c alts_iovec_record_protocol_test)
   add_dependencies(buildtests_c alts_security_connector_test)
   add_dependencies(buildtests_c alts_tsi_handshaker_test)
   add_dependencies(buildtests_c alts_tsi_utils_test)
   add_dependencies(buildtests_c alts_zero_copy_grpc_protector_test)
   add_dependencies(buildtests_c arena_test)
   add_dependencies(buildtests_c auth_context_test)
   add_dependencies(buildtests_c b64_test)
   add_dependencies(buildtests_c bad_server_response_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_c bad_ssl_alpn_test)
   endif()
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_c bad_ssl_cert_test)
   endif()
   add_dependencies(buildtests_c bin_decoder_test)
   add_dependencies(buildtests_c bin_encoder_test)
   add_dependencies(buildtests_c buffer_list_test)
   add_dependencies(buildtests_c c_slice_buffer_test)
   add_dependencies(buildtests_c channel_stack_test)
   add_dependencies(buildtests_c check_gcp_environment_linux_test)
   add_dependencies(buildtests_c check_gcp_environment_windows_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_c client_ssl_test)
   endif()
   add_dependencies(buildtests_c cmdline_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_c combiner_test)
   endif()
   add_dependencies(buildtests_c completion_queue_threading_test)
   add_dependencies(buildtests_c compression_test)
   add_dependencies(buildtests_c concurrent_connectivity_test)
   add_dependencies(buildtests_c connection_refused_test)
   add_dependencies(buildtests_c cpu_test)
   add_dependencies(buildtests_c dns_resolver_cooldown_test)
   add_dependencies(buildtests_c dns_resolver_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_c dualstack_socket_test)
   endif()
   add_dependencies(buildtests_c endpoint_pair_test)
   add_dependencies(buildtests_c env_test)
   add_dependencies(buildtests_c fake_resolver_test)
   add_dependencies(buildtests_c fake_transport_security_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_c fd_conservation_posix_test)
   endif()
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_c fd_posix_test)
   endif()
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_c fling_stream_test)
   endif()
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_c fling_test)
   endif()
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_c fork_test)
   endif()
   add_dependencies(buildtests_c format_request_test)
   add_dependencies(buildtests_c frame_handler_test)
   add_dependencies(buildtests_c goaway_server_test)
   add_dependencies(buildtests_c grpc_alts_credentials_options_test)
   add_dependencies(buildtests_c grpc_byte_buffer_reader_test)
   add_dependencies(buildtests_c grpc_completion_queue_test)
   add_dependencies(buildtests_c grpc_ipv6_loopback_available_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_c handshake_server_with_readahead_handshaker_test)
   endif()
   add_dependencies(buildtests_c histogram_test)
   add_dependencies(buildtests_c host_port_test)
   add_dependencies(buildtests_c hpack_encoder_test)
   add_dependencies(buildtests_c inproc_callback_test)
   add_dependencies(buildtests_c invalid_call_argument_test)
   add_dependencies(buildtests_c json_token_test)
   add_dependencies(buildtests_c jwt_verifier_test)
   add_dependencies(buildtests_c lame_client_test)
   add_dependencies(buildtests_c load_file_test)
+  add_dependencies(buildtests_c manual_constructor_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_c memory_quota_stress_test)
   endif()
   add_dependencies(buildtests_c message_compress_test)
   add_dependencies(buildtests_c minimal_stack_is_minimal_test)
   add_dependencies(buildtests_c mpmcqueue_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_c mpscq_test)
   endif()
   add_dependencies(buildtests_c multiple_server_queues_test)
   add_dependencies(buildtests_c murmur_hash_test)
   add_dependencies(buildtests_c no_server_test)
   add_dependencies(buildtests_c num_external_connectivity_watchers_test)
   add_dependencies(buildtests_c parse_address_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_c parse_address_with_named_scope_id_test)
   endif()
   add_dependencies(buildtests_c parser_test)
   add_dependencies(buildtests_c percent_encoding_test)
   add_dependencies(buildtests_c public_headers_must_be_c89)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_c resolve_address_using_ares_resolver_posix_test)
   endif()
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_c resolve_address_using_native_resolver_posix_test)
   endif()
   add_dependencies(buildtests_c secure_channel_create_test)
   add_dependencies(buildtests_c secure_endpoint_test)
   add_dependencies(buildtests_c security_connector_test)
   add_dependencies(buildtests_c sequential_connectivity_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_c server_ssl_test)
   endif()
   add_dependencies(buildtests_c server_test)
   add_dependencies(buildtests_c slice_split_test)
   add_dependencies(buildtests_c slice_string_helpers_test)
   add_dependencies(buildtests_c sockaddr_resolver_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_c socket_utils_test)
   endif()
   add_dependencies(buildtests_c spinlock_test)
   add_dependencies(buildtests_c ssl_credentials_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_c ssl_transport_security_test)
   endif()
   add_dependencies(buildtests_c status_conversion_test)
   add_dependencies(buildtests_c stream_map_test)
   add_dependencies(buildtests_c string_test)
   add_dependencies(buildtests_c sync_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_c tcp_client_posix_test)
   endif()
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_c tcp_posix_test)
   endif()
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_c tcp_server_posix_test)
   endif()
   add_dependencies(buildtests_c test_core_gpr_time_test)
   add_dependencies(buildtests_c thd_test)
   add_dependencies(buildtests_c threadpool_test)
   add_dependencies(buildtests_c time_averaged_stats_test)
   add_dependencies(buildtests_c timer_heap_test)
   add_dependencies(buildtests_c timer_list_test)
   add_dependencies(buildtests_c transport_security_common_api_test)
   add_dependencies(buildtests_c transport_security_test)
   add_dependencies(buildtests_c varint_test)
 
   add_custom_target(buildtests_cxx)
   add_dependencies(buildtests_cxx activity_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx address_sorting_test)
   endif()
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx address_sorting_test_unsecure)
   endif()
   add_dependencies(buildtests_cxx admin_services_end2end_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx alarm_test)
   endif()
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx alts_concurrent_connectivity_test)
   endif()
   add_dependencies(buildtests_cxx alts_util_test)
   add_dependencies(buildtests_cxx arena_promise_test)
   add_dependencies(buildtests_cxx async_end2end_test)
   add_dependencies(buildtests_cxx auth_property_iterator_test)
   add_dependencies(buildtests_cxx authorization_matchers_test)
   add_dependencies(buildtests_cxx authorization_policy_provider_test)
   add_dependencies(buildtests_cxx avl_test)
   add_dependencies(buildtests_cxx aws_request_signer_test)
   add_dependencies(buildtests_cxx backoff_test)
   add_dependencies(buildtests_cxx bad_streaming_id_bad_client_test)
   add_dependencies(buildtests_cxx badreq_bad_client_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx bdp_estimator_test)
   endif()
   add_dependencies(buildtests_cxx binder_resolver_test)
   add_dependencies(buildtests_cxx binder_server_test)
   add_dependencies(buildtests_cxx binder_transport_test)
   add_dependencies(buildtests_cxx bitset_test)
   add_dependencies(buildtests_cxx byte_buffer_test)
+  add_dependencies(buildtests_cxx byte_stream_test)
   add_dependencies(buildtests_cxx call_finalization_test)
   add_dependencies(buildtests_cxx call_push_pull_test)
   add_dependencies(buildtests_cxx cancel_ares_query_test)
   add_dependencies(buildtests_cxx cel_authorization_engine_test)
   add_dependencies(buildtests_cxx certificate_provider_registry_test)
   add_dependencies(buildtests_cxx certificate_provider_store_test)
   add_dependencies(buildtests_cxx cfstream_test)
   add_dependencies(buildtests_cxx channel_args_test)
   add_dependencies(buildtests_cxx channel_arguments_test)
   add_dependencies(buildtests_cxx channel_creds_registry_test)
   add_dependencies(buildtests_cxx channel_filter_test)
   add_dependencies(buildtests_cxx channel_stack_builder_test)
   add_dependencies(buildtests_cxx channel_trace_test)
   add_dependencies(buildtests_cxx channelz_registry_test)
   add_dependencies(buildtests_cxx channelz_service_test)
   add_dependencies(buildtests_cxx channelz_test)
   add_dependencies(buildtests_cxx chunked_vector_test)
   add_dependencies(buildtests_cxx cli_call_test)
   add_dependencies(buildtests_cxx client_authority_filter_test)
   add_dependencies(buildtests_cxx client_callback_end2end_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx client_channel_stress_test)
   endif()
   add_dependencies(buildtests_cxx client_context_test_peer_test)
   add_dependencies(buildtests_cxx client_interceptors_end2end_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx client_lb_end2end_test)
   endif()
   add_dependencies(buildtests_cxx codegen_test_full)
   add_dependencies(buildtests_cxx codegen_test_minimal)
   add_dependencies(buildtests_cxx connection_prefix_bad_client_test)
   add_dependencies(buildtests_cxx connectivity_state_test)
   add_dependencies(buildtests_cxx context_allocator_end2end_test)
   add_dependencies(buildtests_cxx context_list_test)
   add_dependencies(buildtests_cxx context_test)
   add_dependencies(buildtests_cxx core_configuration_test)
   add_dependencies(buildtests_cxx cpp_impl_of_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx crl_ssl_transport_security_test)
   endif()
   add_dependencies(buildtests_cxx delegating_channel_test)
   add_dependencies(buildtests_cxx destroy_grpclb_channel_with_active_connect_stress_test)
   add_dependencies(buildtests_cxx dual_ref_counted_test)
   add_dependencies(buildtests_cxx duplicate_header_bad_client_test)
   add_dependencies(buildtests_cxx end2end_binder_transport_test)
   add_dependencies(buildtests_cxx end2end_test)
   add_dependencies(buildtests_cxx endpoint_binder_pool_test)
   add_dependencies(buildtests_cxx endpoint_config_test)
   add_dependencies(buildtests_cxx error_details_test)
   add_dependencies(buildtests_cxx error_test)
   add_dependencies(buildtests_cxx error_utils_test)
   add_dependencies(buildtests_cxx evaluate_args_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx examine_stack_test)
   endif()
   add_dependencies(buildtests_cxx exception_test)
   add_dependencies(buildtests_cxx exec_ctx_wakeup_scheduler_test)
   add_dependencies(buildtests_cxx fake_binder_test)
   add_dependencies(buildtests_cxx file_watcher_certificate_provider_factory_test)
   add_dependencies(buildtests_cxx filter_end2end_test)
   add_dependencies(buildtests_cxx flaky_network_test)
-  add_dependencies(buildtests_cxx flow_control_end2end_test)
   add_dependencies(buildtests_cxx flow_control_test)
   add_dependencies(buildtests_cxx for_each_test)
   add_dependencies(buildtests_cxx generic_end2end_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx global_config_env_test)
   endif()
   add_dependencies(buildtests_cxx global_config_test)
   add_dependencies(buildtests_cxx google_c2p_resolver_test)
   add_dependencies(buildtests_cxx google_mesh_ca_certificate_provider_factory_test)
   add_dependencies(buildtests_cxx graceful_shutdown_test)
   add_dependencies(buildtests_cxx grpc_authorization_engine_test)
   add_dependencies(buildtests_cxx grpc_authorization_policy_provider_test)
   add_dependencies(buildtests_cxx grpc_authz_end2end_test)
   add_dependencies(buildtests_cxx grpc_cli)
   add_dependencies(buildtests_cxx grpc_tls_certificate_distributor_test)
   add_dependencies(buildtests_cxx grpc_tls_certificate_provider_test)
   add_dependencies(buildtests_cxx grpc_tls_certificate_verifier_test)
   add_dependencies(buildtests_cxx grpc_tls_credentials_options_comparator_test)
   add_dependencies(buildtests_cxx grpc_tls_credentials_options_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx grpc_tool_test)
   endif()
   add_dependencies(buildtests_cxx grpclb_api_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx grpclb_end2end_test)
   endif()
   add_dependencies(buildtests_cxx h2_ssl_session_reuse_test)
   add_dependencies(buildtests_cxx head_of_line_blocking_bad_client_test)
   add_dependencies(buildtests_cxx headers_bad_client_test)
   add_dependencies(buildtests_cxx health_service_end2end_test)
   add_dependencies(buildtests_cxx hpack_parser_table_test)
   add_dependencies(buildtests_cxx hpack_parser_test)
   add_dependencies(buildtests_cxx http2_client)
   add_dependencies(buildtests_cxx http_proxy_mapper_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx httpcli_test)
   endif()
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx httpscli_test)
   endif()
   add_dependencies(buildtests_cxx hybrid_end2end_test)
   add_dependencies(buildtests_cxx idle_filter_state_test)
   add_dependencies(buildtests_cxx if_test)
   add_dependencies(buildtests_cxx init_test)
   add_dependencies(buildtests_cxx initial_settings_frame_bad_client_test)
   add_dependencies(buildtests_cxx insecure_security_connector_test)
   add_dependencies(buildtests_cxx interop_client)
   add_dependencies(buildtests_cxx interop_server)
   add_dependencies(buildtests_cxx iomgr_event_engine_test)
   add_dependencies(buildtests_cxx join_test)
   add_dependencies(buildtests_cxx json_test)
   add_dependencies(buildtests_cxx large_metadata_bad_client_test)
   add_dependencies(buildtests_cxx latch_test)
   add_dependencies(buildtests_cxx lb_get_cpu_stats_test)
   add_dependencies(buildtests_cxx lb_load_data_store_test)
   add_dependencies(buildtests_cxx linux_system_roots_test)
   add_dependencies(buildtests_cxx log_test)
   add_dependencies(buildtests_cxx loop_test)
   add_dependencies(buildtests_cxx match_test)
   add_dependencies(buildtests_cxx matchers_test)
   add_dependencies(buildtests_cxx memory_quota_test)
   add_dependencies(buildtests_cxx message_allocator_end2end_test)
   add_dependencies(buildtests_cxx metadata_map_test)
   add_dependencies(buildtests_cxx miscompile_with_no_unique_address_test)
   add_dependencies(buildtests_cxx mock_stream_test)
   add_dependencies(buildtests_cxx mock_test)
   add_dependencies(buildtests_cxx nonblocking_test)
   add_dependencies(buildtests_cxx observable_test)
   add_dependencies(buildtests_cxx orca_service_end2end_test)
   add_dependencies(buildtests_cxx orphanable_test)
   add_dependencies(buildtests_cxx out_of_bounds_bad_client_test)
   add_dependencies(buildtests_cxx overload_test)
   add_dependencies(buildtests_cxx parsed_metadata_test)
   add_dependencies(buildtests_cxx pid_controller_test)
   add_dependencies(buildtests_cxx pipe_test)
   add_dependencies(buildtests_cxx poll_test)
   add_dependencies(buildtests_cxx port_sharing_end2end_test)
   add_dependencies(buildtests_cxx promise_factory_test)
   add_dependencies(buildtests_cxx promise_map_test)
   add_dependencies(buildtests_cxx promise_test)
   add_dependencies(buildtests_cxx proto_server_reflection_test)
   add_dependencies(buildtests_cxx proto_utils_test)
   add_dependencies(buildtests_cxx qps_json_driver)
   add_dependencies(buildtests_cxx qps_worker)
   add_dependencies(buildtests_cxx race_test)
   add_dependencies(buildtests_cxx raw_end2end_test)
   add_dependencies(buildtests_cxx rbac_service_config_parser_test)
   add_dependencies(buildtests_cxx rbac_translator_test)
   add_dependencies(buildtests_cxx ref_counted_ptr_test)
   add_dependencies(buildtests_cxx ref_counted_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx remove_stream_from_stalled_lists_test)
   endif()
   add_dependencies(buildtests_cxx resolve_address_using_ares_resolver_test)
   add_dependencies(buildtests_cxx resolve_address_using_native_resolver_test)
   add_dependencies(buildtests_cxx resource_quota_test)
   add_dependencies(buildtests_cxx retry_throttle_test)
   add_dependencies(buildtests_cxx rls_end2end_test)
   add_dependencies(buildtests_cxx rls_lb_config_parser_test)
   add_dependencies(buildtests_cxx secure_auth_context_test)
   add_dependencies(buildtests_cxx seq_test)
   add_dependencies(buildtests_cxx server_builder_plugin_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx server_builder_test)
   endif()
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx server_builder_with_socket_mutator_test)
   endif()
   add_dependencies(buildtests_cxx server_chttp2_test)
   add_dependencies(buildtests_cxx server_config_selector_test)
   add_dependencies(buildtests_cxx server_context_test_spouse_test)
   add_dependencies(buildtests_cxx server_early_return_test)
   add_dependencies(buildtests_cxx server_interceptors_end2end_test)
   add_dependencies(buildtests_cxx server_registered_method_bad_client_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx server_request_call_test)
   endif()
   add_dependencies(buildtests_cxx service_config_end2end_test)
   add_dependencies(buildtests_cxx service_config_test)
   add_dependencies(buildtests_cxx settings_timeout_test)
   add_dependencies(buildtests_cxx shutdown_test)
   add_dependencies(buildtests_cxx simple_request_bad_client_test)
   add_dependencies(buildtests_cxx single_set_ptr_test)
   add_dependencies(buildtests_cxx sleep_test)
   add_dependencies(buildtests_cxx smoke_test)
   add_dependencies(buildtests_cxx sockaddr_utils_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx stack_tracer_test)
   endif()
   add_dependencies(buildtests_cxx stat_test)
   add_dependencies(buildtests_cxx stats_test)
   add_dependencies(buildtests_cxx status_helper_test)
   add_dependencies(buildtests_cxx status_util_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx stranded_event_test)
   endif()
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx streaming_throughput_test)
   endif()
   add_dependencies(buildtests_cxx streams_not_seen_test)
   add_dependencies(buildtests_cxx string_ref_test)
   add_dependencies(buildtests_cxx table_test)
   add_dependencies(buildtests_cxx test_core_event_engine_slice_buffer_test)
   add_dependencies(buildtests_cxx test_core_gprpp_time_test)
   add_dependencies(buildtests_cxx test_core_security_credentials_test)
   add_dependencies(buildtests_cxx test_core_slice_slice_buffer_test)
   add_dependencies(buildtests_cxx test_core_slice_slice_test)
   add_dependencies(buildtests_cxx test_cpp_client_credentials_test)
   add_dependencies(buildtests_cxx test_cpp_server_credentials_test)
   add_dependencies(buildtests_cxx test_cpp_util_slice_test)
   add_dependencies(buildtests_cxx test_cpp_util_time_test)
   add_dependencies(buildtests_cxx thread_manager_test)
   add_dependencies(buildtests_cxx thread_quota_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx thread_stress_test)
   endif()
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx time_jump_test)
   endif()
   add_dependencies(buildtests_cxx time_util_test)
   add_dependencies(buildtests_cxx timeout_encoding_test)
   add_dependencies(buildtests_cxx timer_test)
   add_dependencies(buildtests_cxx tls_certificate_verifier_test)
   add_dependencies(buildtests_cxx tls_key_export_test)
   add_dependencies(buildtests_cxx tls_security_connector_test)
   add_dependencies(buildtests_cxx tls_test)
   add_dependencies(buildtests_cxx too_many_pings_test)
   add_dependencies(buildtests_cxx transport_stream_receiver_test)
   add_dependencies(buildtests_cxx try_join_test)
   add_dependencies(buildtests_cxx try_seq_metadata_test)
   add_dependencies(buildtests_cxx try_seq_test)
   add_dependencies(buildtests_cxx unique_type_name_test)
   add_dependencies(buildtests_cxx unknown_frame_bad_client_test)
   add_dependencies(buildtests_cxx uri_parser_test)
   add_dependencies(buildtests_cxx useful_test)
   add_dependencies(buildtests_cxx window_overflow_bad_client_test)
   add_dependencies(buildtests_cxx wire_reader_test)
   add_dependencies(buildtests_cxx wire_writer_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx work_serializer_test)
   endif()
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx writes_per_rpc_test)
   endif()
   add_dependencies(buildtests_cxx xds_bootstrap_test)
   add_dependencies(buildtests_cxx xds_certificate_provider_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx xds_cluster_end2end_test)
   endif()
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx xds_cluster_type_end2end_test)
   endif()
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx xds_core_end2end_test)
   endif()
   add_dependencies(buildtests_cxx xds_credentials_end2end_test)
   add_dependencies(buildtests_cxx xds_credentials_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx xds_csds_end2end_test)
   endif()
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx xds_end2end_test)
   endif()
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx xds_fault_injection_end2end_test)
   endif()
   add_dependencies(buildtests_cxx xds_interop_client)
   add_dependencies(buildtests_cxx xds_interop_server)
   add_dependencies(buildtests_cxx xds_lb_policy_registry_test)
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx xds_outlier_detection_end2end_test)
   endif()
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx xds_ring_hash_end2end_test)
   endif()
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx xds_rls_end2end_test)
   endif()
   if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_MAC OR _gRPC_PLATFORM_POSIX)
     add_dependencies(buildtests_cxx xds_routing_end2end_test)
   endif()
 
   add_custom_target(buildtests
     DEPENDS buildtests_c buildtests_cxx)
@@ -1624,666 +1625,667 @@ endif()
 add_library(grpc
   src/core/ext/filters/census/grpc_context.cc
   src/core/ext/filters/channel_idle/channel_idle_filter.cc
   src/core/ext/filters/channel_idle/idle_filter_state.cc
   src/core/ext/filters/client_channel/backend_metric.cc
   src/core/ext/filters/client_channel/backup_poller.cc
   src/core/ext/filters/client_channel/channel_connectivity.cc
   src/core/ext/filters/client_channel/client_channel.cc
   src/core/ext/filters/client_channel/client_channel_channelz.cc
   src/core/ext/filters/client_channel/client_channel_factory.cc
   src/core/ext/filters/client_channel/client_channel_plugin.cc
   src/core/ext/filters/client_channel/config_selector.cc
   src/core/ext/filters/client_channel/dynamic_filters.cc
   src/core/ext/filters/client_channel/global_subchannel_pool.cc
   src/core/ext/filters/client_channel/health/health_check_client.cc
   src/core/ext/filters/client_channel/http_proxy.cc
   src/core/ext/filters/client_channel/lb_policy.cc
   src/core/ext/filters/client_channel/lb_policy/address_filtering.cc
   src/core/ext/filters/client_channel/lb_policy/child_policy_handler.cc
   src/core/ext/filters/client_channel/lb_policy/grpclb/client_load_reporting_filter.cc
   src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc
   src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_balancer_addresses.cc
   src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_client_stats.cc
   src/core/ext/filters/client_channel/lb_policy/grpclb/load_balancer_api.cc
   src/core/ext/filters/client_channel/lb_policy/oob_backend_metric.cc
   src/core/ext/filters/client_channel/lb_policy/outlier_detection/outlier_detection.cc
   src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc
   src/core/ext/filters/client_channel/lb_policy/priority/priority.cc
   src/core/ext/filters/client_channel/lb_policy/ring_hash/ring_hash.cc
   src/core/ext/filters/client_channel/lb_policy/rls/rls.cc
   src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc
   src/core/ext/filters/client_channel/lb_policy/weighted_target/weighted_target.cc
   src/core/ext/filters/client_channel/lb_policy/xds/cds.cc
   src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_impl.cc
   src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_manager.cc
   src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_resolver.cc
   src/core/ext/filters/client_channel/lb_policy_registry.cc
   src/core/ext/filters/client_channel/local_subchannel_pool.cc
   src/core/ext/filters/client_channel/proxy_mapper_registry.cc
   src/core/ext/filters/client_channel/resolver/binder/binder_resolver.cc
   src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc
   src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_posix.cc
   src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_windows.cc
   src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.cc
   src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_posix.cc
   src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_windows.cc
   src/core/ext/filters/client_channel/resolver/dns/dns_resolver_selection.cc
   src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc
   src/core/ext/filters/client_channel/resolver/fake/fake_resolver.cc
   src/core/ext/filters/client_channel/resolver/google_c2p/google_c2p_resolver.cc
   src/core/ext/filters/client_channel/resolver/polling_resolver.cc
   src/core/ext/filters/client_channel/resolver/sockaddr/sockaddr_resolver.cc
   src/core/ext/filters/client_channel/resolver/xds/xds_resolver.cc
   src/core/ext/filters/client_channel/resolver_result_parsing.cc
   src/core/ext/filters/client_channel/retry_filter.cc
   src/core/ext/filters/client_channel/retry_service_config.cc
   src/core/ext/filters/client_channel/retry_throttle.cc
   src/core/ext/filters/client_channel/service_config_channel_arg_filter.cc
   src/core/ext/filters/client_channel/subchannel.cc
   src/core/ext/filters/client_channel/subchannel_pool_interface.cc
   src/core/ext/filters/client_channel/subchannel_stream_client.cc
   src/core/ext/filters/deadline/deadline_filter.cc
   src/core/ext/filters/fault_injection/fault_injection_filter.cc
   src/core/ext/filters/fault_injection/service_config_parser.cc
   src/core/ext/filters/http/client/http_client_filter.cc
   src/core/ext/filters/http/client_authority_filter.cc
   src/core/ext/filters/http/http_filters_plugin.cc
   src/core/ext/filters/http/message_compress/message_compress_filter.cc
   src/core/ext/filters/http/message_compress/message_decompress_filter.cc
   src/core/ext/filters/http/server/http_server_filter.cc
   src/core/ext/filters/message_size/message_size_filter.cc
   src/core/ext/filters/rbac/rbac_filter.cc
   src/core/ext/filters/rbac/rbac_service_config_parser.cc
   src/core/ext/filters/server_config_selector/server_config_selector.cc
   src/core/ext/filters/server_config_selector/server_config_selector_filter.cc
   src/core/ext/transport/chttp2/alpn/alpn.cc
   src/core/ext/transport/chttp2/client/chttp2_connector.cc
   src/core/ext/transport/chttp2/server/chttp2_server.cc
   src/core/ext/transport/chttp2/transport/bin_decoder.cc
   src/core/ext/transport/chttp2/transport/bin_encoder.cc
   src/core/ext/transport/chttp2/transport/chttp2_transport.cc
   src/core/ext/transport/chttp2/transport/context_list.cc
   src/core/ext/transport/chttp2/transport/flow_control.cc
   src/core/ext/transport/chttp2/transport/frame_data.cc
   src/core/ext/transport/chttp2/transport/frame_goaway.cc
   src/core/ext/transport/chttp2/transport/frame_ping.cc
   src/core/ext/transport/chttp2/transport/frame_rst_stream.cc
   src/core/ext/transport/chttp2/transport/frame_settings.cc
   src/core/ext/transport/chttp2/transport/frame_window_update.cc
   src/core/ext/transport/chttp2/transport/hpack_encoder.cc
   src/core/ext/transport/chttp2/transport/hpack_encoder_table.cc
   src/core/ext/transport/chttp2/transport/hpack_parser.cc
   src/core/ext/transport/chttp2/transport/hpack_parser_table.cc
   src/core/ext/transport/chttp2/transport/http2_settings.cc
   src/core/ext/transport/chttp2/transport/huffsyms.cc
   src/core/ext/transport/chttp2/transport/parsing.cc
   src/core/ext/transport/chttp2/transport/stream_lists.cc
   src/core/ext/transport/chttp2/transport/stream_map.cc
   src/core/ext/transport/chttp2/transport/varint.cc
   src/core/ext/transport/chttp2/transport/writing.cc
   src/core/ext/transport/inproc/inproc_plugin.cc
   src/core/ext/transport/inproc/inproc_transport.cc
   src/core/ext/upb-generated/envoy/admin/v3/certs.upb.c
   src/core/ext/upb-generated/envoy/admin/v3/clusters.upb.c
   src/core/ext/upb-generated/envoy/admin/v3/config_dump.upb.c
   src/core/ext/upb-generated/envoy/admin/v3/init_dump.upb.c
   src/core/ext/upb-generated/envoy/admin/v3/listeners.upb.c
   src/core/ext/upb-generated/envoy/admin/v3/memory.upb.c
   src/core/ext/upb-generated/envoy/admin/v3/metrics.upb.c
   src/core/ext/upb-generated/envoy/admin/v3/mutex_stats.upb.c
   src/core/ext/upb-generated/envoy/admin/v3/server_info.upb.c
   src/core/ext/upb-generated/envoy/admin/v3/tap.upb.c
   src/core/ext/upb-generated/envoy/annotations/deprecation.upb.c
   src/core/ext/upb-generated/envoy/annotations/resource.upb.c
   src/core/ext/upb-generated/envoy/config/accesslog/v3/accesslog.upb.c
   src/core/ext/upb-generated/envoy/config/bootstrap/v3/bootstrap.upb.c
   src/core/ext/upb-generated/envoy/config/cluster/v3/circuit_breaker.upb.c
   src/core/ext/upb-generated/envoy/config/cluster/v3/cluster.upb.c
   src/core/ext/upb-generated/envoy/config/cluster/v3/filter.upb.c
   src/core/ext/upb-generated/envoy/config/cluster/v3/outlier_detection.upb.c
   src/core/ext/upb-generated/envoy/config/common/matcher/v3/matcher.upb.c
   src/core/ext/upb-generated/envoy/config/core/v3/address.upb.c
   src/core/ext/upb-generated/envoy/config/core/v3/backoff.upb.c
   src/core/ext/upb-generated/envoy/config/core/v3/base.upb.c
   src/core/ext/upb-generated/envoy/config/core/v3/config_source.upb.c
   src/core/ext/upb-generated/envoy/config/core/v3/event_service_config.upb.c
   src/core/ext/upb-generated/envoy/config/core/v3/extension.upb.c
   src/core/ext/upb-generated/envoy/config/core/v3/grpc_method_list.upb.c
   src/core/ext/upb-generated/envoy/config/core/v3/grpc_service.upb.c
   src/core/ext/upb-generated/envoy/config/core/v3/health_check.upb.c
   src/core/ext/upb-generated/envoy/config/core/v3/http_uri.upb.c
   src/core/ext/upb-generated/envoy/config/core/v3/protocol.upb.c
   src/core/ext/upb-generated/envoy/config/core/v3/proxy_protocol.upb.c
   src/core/ext/upb-generated/envoy/config/core/v3/resolver.upb.c
   src/core/ext/upb-generated/envoy/config/core/v3/socket_option.upb.c
   src/core/ext/upb-generated/envoy/config/core/v3/substitution_format_string.upb.c
   src/core/ext/upb-generated/envoy/config/core/v3/udp_socket_config.upb.c
   src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint.upb.c
   src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint_components.upb.c
   src/core/ext/upb-generated/envoy/config/endpoint/v3/load_report.upb.c
   src/core/ext/upb-generated/envoy/config/listener/v3/api_listener.upb.c
   src/core/ext/upb-generated/envoy/config/listener/v3/listener.upb.c
   src/core/ext/upb-generated/envoy/config/listener/v3/listener_components.upb.c
   src/core/ext/upb-generated/envoy/config/listener/v3/quic_config.upb.c
   src/core/ext/upb-generated/envoy/config/listener/v3/udp_listener_config.upb.c
   src/core/ext/upb-generated/envoy/config/metrics/v3/metrics_service.upb.c
   src/core/ext/upb-generated/envoy/config/metrics/v3/stats.upb.c
   src/core/ext/upb-generated/envoy/config/overload/v3/overload.upb.c
   src/core/ext/upb-generated/envoy/config/rbac/v3/rbac.upb.c
   src/core/ext/upb-generated/envoy/config/route/v3/route.upb.c
   src/core/ext/upb-generated/envoy/config/route/v3/route_components.upb.c
   src/core/ext/upb-generated/envoy/config/route/v3/scoped_route.upb.c
   src/core/ext/upb-generated/envoy/config/tap/v3/common.upb.c
   src/core/ext/upb-generated/envoy/config/trace/v3/datadog.upb.c
   src/core/ext/upb-generated/envoy/config/trace/v3/dynamic_ot.upb.c
   src/core/ext/upb-generated/envoy/config/trace/v3/http_tracer.upb.c
   src/core/ext/upb-generated/envoy/config/trace/v3/lightstep.upb.c
   src/core/ext/upb-generated/envoy/config/trace/v3/opencensus.upb.c
   src/core/ext/upb-generated/envoy/config/trace/v3/service.upb.c
   src/core/ext/upb-generated/envoy/config/trace/v3/skywalking.upb.c
   src/core/ext/upb-generated/envoy/config/trace/v3/trace.upb.c
   src/core/ext/upb-generated/envoy/config/trace/v3/xray.upb.c
   src/core/ext/upb-generated/envoy/config/trace/v3/zipkin.upb.c
   src/core/ext/upb-generated/envoy/extensions/clusters/aggregate/v3/cluster.upb.c
   src/core/ext/upb-generated/envoy/extensions/filters/common/fault/v3/fault.upb.c
   src/core/ext/upb-generated/envoy/extensions/filters/http/fault/v3/fault.upb.c
   src/core/ext/upb-generated/envoy/extensions/filters/http/rbac/v3/rbac.upb.c
   src/core/ext/upb-generated/envoy/extensions/filters/http/router/v3/router.upb.c
   src/core/ext/upb-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upb.c
   src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/ring_hash/v3/ring_hash.upb.c
   src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/wrr_locality/v3/wrr_locality.upb.c
   src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/cert.upb.c
   src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/common.upb.c
   src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/secret.upb.c
   src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls.upb.c
   src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upb.c
   src/core/ext/upb-generated/envoy/service/discovery/v3/ads.upb.c
   src/core/ext/upb-generated/envoy/service/discovery/v3/discovery.upb.c
   src/core/ext/upb-generated/envoy/service/load_stats/v3/lrs.upb.c
   src/core/ext/upb-generated/envoy/service/status/v3/csds.upb.c
   src/core/ext/upb-generated/envoy/type/http/v3/cookie.upb.c
   src/core/ext/upb-generated/envoy/type/http/v3/path_transformation.upb.c
   src/core/ext/upb-generated/envoy/type/matcher/v3/http_inputs.upb.c
   src/core/ext/upb-generated/envoy/type/matcher/v3/metadata.upb.c
   src/core/ext/upb-generated/envoy/type/matcher/v3/node.upb.c
   src/core/ext/upb-generated/envoy/type/matcher/v3/number.upb.c
   src/core/ext/upb-generated/envoy/type/matcher/v3/path.upb.c
   src/core/ext/upb-generated/envoy/type/matcher/v3/regex.upb.c
   src/core/ext/upb-generated/envoy/type/matcher/v3/string.upb.c
   src/core/ext/upb-generated/envoy/type/matcher/v3/struct.upb.c
   src/core/ext/upb-generated/envoy/type/matcher/v3/value.upb.c
   src/core/ext/upb-generated/envoy/type/metadata/v3/metadata.upb.c
   src/core/ext/upb-generated/envoy/type/tracing/v3/custom_tag.upb.c
   src/core/ext/upb-generated/envoy/type/v3/hash_policy.upb.c
   src/core/ext/upb-generated/envoy/type/v3/http.upb.c
   src/core/ext/upb-generated/envoy/type/v3/http_status.upb.c
   src/core/ext/upb-generated/envoy/type/v3/percent.upb.c
   src/core/ext/upb-generated/envoy/type/v3/range.upb.c
   src/core/ext/upb-generated/envoy/type/v3/ratelimit_unit.upb.c
   src/core/ext/upb-generated/envoy/type/v3/semantic_version.upb.c
   src/core/ext/upb-generated/envoy/type/v3/token_bucket.upb.c
   src/core/ext/upb-generated/google/api/annotations.upb.c
   src/core/ext/upb-generated/google/api/expr/v1alpha1/checked.upb.c
   src/core/ext/upb-generated/google/api/expr/v1alpha1/syntax.upb.c
   src/core/ext/upb-generated/google/api/http.upb.c
   src/core/ext/upb-generated/google/api/httpbody.upb.c
   src/core/ext/upb-generated/google/protobuf/any.upb.c
   src/core/ext/upb-generated/google/protobuf/descriptor.upb.c
   src/core/ext/upb-generated/google/protobuf/duration.upb.c
   src/core/ext/upb-generated/google/protobuf/empty.upb.c
   src/core/ext/upb-generated/google/protobuf/struct.upb.c
   src/core/ext/upb-generated/google/protobuf/timestamp.upb.c
   src/core/ext/upb-generated/google/protobuf/wrappers.upb.c
   src/core/ext/upb-generated/google/rpc/status.upb.c
   src/core/ext/upb-generated/opencensus/proto/trace/v1/trace_config.upb.c
   src/core/ext/upb-generated/src/proto/grpc/gcp/altscontext.upb.c
   src/core/ext/upb-generated/src/proto/grpc/gcp/handshaker.upb.c
   src/core/ext/upb-generated/src/proto/grpc/gcp/transport_security_common.upb.c
   src/core/ext/upb-generated/src/proto/grpc/health/v1/health.upb.c
   src/core/ext/upb-generated/src/proto/grpc/lb/v1/load_balancer.upb.c
   src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls.upb.c
   src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls_config.upb.c
   src/core/ext/upb-generated/udpa/annotations/migrate.upb.c
   src/core/ext/upb-generated/udpa/annotations/security.upb.c
   src/core/ext/upb-generated/udpa/annotations/sensitive.upb.c
   src/core/ext/upb-generated/udpa/annotations/status.upb.c
   src/core/ext/upb-generated/udpa/annotations/versioning.upb.c
   src/core/ext/upb-generated/validate/validate.upb.c
   src/core/ext/upb-generated/xds/annotations/v3/migrate.upb.c
   src/core/ext/upb-generated/xds/annotations/v3/security.upb.c
   src/core/ext/upb-generated/xds/annotations/v3/sensitive.upb.c
   src/core/ext/upb-generated/xds/annotations/v3/status.upb.c
   src/core/ext/upb-generated/xds/annotations/v3/versioning.upb.c
   src/core/ext/upb-generated/xds/core/v3/authority.upb.c
   src/core/ext/upb-generated/xds/core/v3/collection_entry.upb.c
   src/core/ext/upb-generated/xds/core/v3/context_params.upb.c
   src/core/ext/upb-generated/xds/core/v3/extension.upb.c
   src/core/ext/upb-generated/xds/core/v3/resource.upb.c
   src/core/ext/upb-generated/xds/core/v3/resource_locator.upb.c
   src/core/ext/upb-generated/xds/core/v3/resource_name.upb.c
   src/core/ext/upb-generated/xds/data/orca/v3/orca_load_report.upb.c
   src/core/ext/upb-generated/xds/service/orca/v3/orca.upb.c
   src/core/ext/upb-generated/xds/type/matcher/v3/matcher.upb.c
   src/core/ext/upb-generated/xds/type/matcher/v3/regex.upb.c
   src/core/ext/upb-generated/xds/type/matcher/v3/string.upb.c
   src/core/ext/upb-generated/xds/type/v3/typed_struct.upb.c
   src/core/ext/upbdefs-generated/envoy/admin/v3/certs.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/admin/v3/clusters.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/admin/v3/config_dump.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/admin/v3/init_dump.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/admin/v3/listeners.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/admin/v3/memory.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/admin/v3/metrics.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/admin/v3/mutex_stats.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/admin/v3/server_info.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/admin/v3/tap.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/annotations/deprecation.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/annotations/resource.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/accesslog/v3/accesslog.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/bootstrap/v3/bootstrap.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/cluster/v3/circuit_breaker.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/cluster/v3/cluster.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/cluster/v3/filter.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/cluster/v3/outlier_detection.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/common/matcher/v3/matcher.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/core/v3/address.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/core/v3/backoff.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/core/v3/base.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/core/v3/config_source.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/core/v3/event_service_config.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/core/v3/extension.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_method_list.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_service.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/core/v3/health_check.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/core/v3/http_uri.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/core/v3/protocol.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/core/v3/proxy_protocol.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/core/v3/resolver.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/core/v3/socket_option.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/core/v3/substitution_format_string.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/core/v3/udp_socket_config.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint_components.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/load_report.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/listener/v3/api_listener.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener_components.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/listener/v3/quic_config.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/listener/v3/udp_listener_config.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/metrics/v3/metrics_service.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/metrics/v3/stats.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/overload/v3/overload.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/rbac/v3/rbac.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/route/v3/route.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/route/v3/route_components.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/route/v3/scoped_route.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/tap/v3/common.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/trace/v3/datadog.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/trace/v3/dynamic_ot.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/trace/v3/http_tracer.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/trace/v3/lightstep.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/trace/v3/opencensus.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/trace/v3/service.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/trace/v3/skywalking.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/trace/v3/trace.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/trace/v3/xray.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/config/trace/v3/zipkin.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/extensions/clusters/aggregate/v3/cluster.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/extensions/filters/common/fault/v3/fault.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/extensions/filters/http/fault/v3/fault.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/extensions/filters/http/rbac/v3/rbac.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/extensions/filters/http/router/v3/router.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/cert.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/common.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/secret.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/service/discovery/v3/ads.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/service/discovery/v3/discovery.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/service/load_stats/v3/lrs.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/service/status/v3/csds.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/type/http/v3/cookie.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/type/http/v3/path_transformation.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/type/matcher/v3/http_inputs.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/type/matcher/v3/metadata.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/type/matcher/v3/node.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/type/matcher/v3/number.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/type/matcher/v3/path.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/type/matcher/v3/regex.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/type/matcher/v3/string.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/type/matcher/v3/struct.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/type/matcher/v3/value.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/type/metadata/v3/metadata.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/type/tracing/v3/custom_tag.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/type/v3/hash_policy.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/type/v3/http.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/type/v3/http_status.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/type/v3/percent.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/type/v3/range.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/type/v3/ratelimit_unit.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/type/v3/semantic_version.upbdefs.c
   src/core/ext/upbdefs-generated/envoy/type/v3/token_bucket.upbdefs.c
   src/core/ext/upbdefs-generated/google/api/annotations.upbdefs.c
   src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/checked.upbdefs.c
   src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/syntax.upbdefs.c
   src/core/ext/upbdefs-generated/google/api/http.upbdefs.c
   src/core/ext/upbdefs-generated/google/api/httpbody.upbdefs.c
   src/core/ext/upbdefs-generated/google/protobuf/any.upbdefs.c
   src/core/ext/upbdefs-generated/google/protobuf/descriptor.upbdefs.c
   src/core/ext/upbdefs-generated/google/protobuf/duration.upbdefs.c
   src/core/ext/upbdefs-generated/google/protobuf/empty.upbdefs.c
   src/core/ext/upbdefs-generated/google/protobuf/struct.upbdefs.c
   src/core/ext/upbdefs-generated/google/protobuf/timestamp.upbdefs.c
   src/core/ext/upbdefs-generated/google/protobuf/wrappers.upbdefs.c
   src/core/ext/upbdefs-generated/google/rpc/status.upbdefs.c
   src/core/ext/upbdefs-generated/opencensus/proto/trace/v1/trace_config.upbdefs.c
   src/core/ext/upbdefs-generated/src/proto/grpc/lookup/v1/rls_config.upbdefs.c
   src/core/ext/upbdefs-generated/udpa/annotations/migrate.upbdefs.c
   src/core/ext/upbdefs-generated/udpa/annotations/security.upbdefs.c
   src/core/ext/upbdefs-generated/udpa/annotations/sensitive.upbdefs.c
   src/core/ext/upbdefs-generated/udpa/annotations/status.upbdefs.c
   src/core/ext/upbdefs-generated/udpa/annotations/versioning.upbdefs.c
   src/core/ext/upbdefs-generated/validate/validate.upbdefs.c
   src/core/ext/upbdefs-generated/xds/annotations/v3/migrate.upbdefs.c
   src/core/ext/upbdefs-generated/xds/annotations/v3/security.upbdefs.c
   src/core/ext/upbdefs-generated/xds/annotations/v3/sensitive.upbdefs.c
   src/core/ext/upbdefs-generated/xds/annotations/v3/status.upbdefs.c
   src/core/ext/upbdefs-generated/xds/annotations/v3/versioning.upbdefs.c
   src/core/ext/upbdefs-generated/xds/core/v3/authority.upbdefs.c
   src/core/ext/upbdefs-generated/xds/core/v3/collection_entry.upbdefs.c
   src/core/ext/upbdefs-generated/xds/core/v3/context_params.upbdefs.c
   src/core/ext/upbdefs-generated/xds/core/v3/extension.upbdefs.c
   src/core/ext/upbdefs-generated/xds/core/v3/resource.upbdefs.c
   src/core/ext/upbdefs-generated/xds/core/v3/resource_locator.upbdefs.c
   src/core/ext/upbdefs-generated/xds/core/v3/resource_name.upbdefs.c
   src/core/ext/upbdefs-generated/xds/type/matcher/v3/matcher.upbdefs.c
   src/core/ext/upbdefs-generated/xds/type/matcher/v3/regex.upbdefs.c
   src/core/ext/upbdefs-generated/xds/type/matcher/v3/string.upbdefs.c
   src/core/ext/upbdefs-generated/xds/type/v3/typed_struct.upbdefs.c
   src/core/ext/xds/certificate_provider_registry.cc
   src/core/ext/xds/certificate_provider_store.cc
   src/core/ext/xds/file_watcher_certificate_provider_factory.cc
   src/core/ext/xds/xds_api.cc
   src/core/ext/xds/xds_bootstrap.cc
   src/core/ext/xds/xds_certificate_provider.cc
   src/core/ext/xds/xds_channel_stack_modifier.cc
   src/core/ext/xds/xds_client.cc
   src/core/ext/xds/xds_client_stats.cc
   src/core/ext/xds/xds_cluster.cc
   src/core/ext/xds/xds_cluster_specifier_plugin.cc
   src/core/ext/xds/xds_common_types.cc
   src/core/ext/xds/xds_endpoint.cc
   src/core/ext/xds/xds_http_fault_filter.cc
   src/core/ext/xds/xds_http_filters.cc
   src/core/ext/xds/xds_http_rbac_filter.cc
   src/core/ext/xds/xds_lb_policy_registry.cc
   src/core/ext/xds/xds_listener.cc
   src/core/ext/xds/xds_resource_type.cc
   src/core/ext/xds/xds_route_config.cc
   src/core/ext/xds/xds_routing.cc
   src/core/ext/xds/xds_server_config_fetcher.cc
   src/core/lib/address_utils/parse_address.cc
   src/core/lib/address_utils/sockaddr_utils.cc
   src/core/lib/backoff/backoff.cc
   src/core/lib/channel/channel_args.cc
   src/core/lib/channel/channel_args_preconditioning.cc
   src/core/lib/channel/channel_stack.cc
   src/core/lib/channel/channel_stack_builder.cc
   src/core/lib/channel/channel_stack_builder_impl.cc
   src/core/lib/channel/channel_trace.cc
   src/core/lib/channel/channelz.cc
   src/core/lib/channel/channelz_registry.cc
   src/core/lib/channel/connected_channel.cc
   src/core/lib/channel/promise_based_filter.cc
   src/core/lib/channel/status_util.cc
   src/core/lib/compression/compression.cc
   src/core/lib/compression/compression_internal.cc
   src/core/lib/compression/message_compress.cc
   src/core/lib/config/core_configuration.cc
   src/core/lib/debug/stats.cc
   src/core/lib/debug/stats_data.cc
   src/core/lib/debug/trace.cc
   src/core/lib/event_engine/channel_args_endpoint_config.cc
   src/core/lib/event_engine/default_event_engine_factory.cc
   src/core/lib/event_engine/event_engine.cc
   src/core/lib/event_engine/iomgr_engine.cc
   src/core/lib/event_engine/memory_allocator.cc
   src/core/lib/event_engine/resolved_address.cc
   src/core/lib/event_engine/slice.cc
   src/core/lib/event_engine/slice_buffer.cc
   src/core/lib/event_engine/trace.cc
   src/core/lib/gprpp/status_helper.cc
   src/core/lib/gprpp/time.cc
   src/core/lib/http/format_request.cc
   src/core/lib/http/httpcli.cc
   src/core/lib/http/httpcli_security_connector.cc
   src/core/lib/http/parser.cc
   src/core/lib/iomgr/buffer_list.cc
   src/core/lib/iomgr/call_combiner.cc
   src/core/lib/iomgr/cfstream_handle.cc
   src/core/lib/iomgr/combiner.cc
   src/core/lib/iomgr/dualstack_socket_posix.cc
   src/core/lib/iomgr/endpoint.cc
   src/core/lib/iomgr/endpoint_cfstream.cc
   src/core/lib/iomgr/endpoint_pair_posix.cc
   src/core/lib/iomgr/endpoint_pair_windows.cc
   src/core/lib/iomgr/error.cc
   src/core/lib/iomgr/error_cfstream.cc
   src/core/lib/iomgr/ev_apple.cc
   src/core/lib/iomgr/ev_epoll1_linux.cc
   src/core/lib/iomgr/ev_poll_posix.cc
   src/core/lib/iomgr/ev_posix.cc
   src/core/lib/iomgr/ev_windows.cc
   src/core/lib/iomgr/exec_ctx.cc
   src/core/lib/iomgr/executor.cc
   src/core/lib/iomgr/executor/mpmcqueue.cc
   src/core/lib/iomgr/executor/threadpool.cc
   src/core/lib/iomgr/fork_posix.cc
   src/core/lib/iomgr/fork_windows.cc
   src/core/lib/iomgr/gethostname_fallback.cc
   src/core/lib/iomgr/gethostname_host_name_max.cc
   src/core/lib/iomgr/gethostname_sysconf.cc
   src/core/lib/iomgr/grpc_if_nametoindex_posix.cc
   src/core/lib/iomgr/grpc_if_nametoindex_unsupported.cc
   src/core/lib/iomgr/internal_errqueue.cc
   src/core/lib/iomgr/iocp_windows.cc
   src/core/lib/iomgr/iomgr.cc
   src/core/lib/iomgr/iomgr_internal.cc
   src/core/lib/iomgr/iomgr_posix.cc
   src/core/lib/iomgr/iomgr_posix_cfstream.cc
   src/core/lib/iomgr/iomgr_windows.cc
   src/core/lib/iomgr/load_file.cc
   src/core/lib/iomgr/lockfree_event.cc
   src/core/lib/iomgr/polling_entity.cc
   src/core/lib/iomgr/pollset.cc
   src/core/lib/iomgr/pollset_set.cc
   src/core/lib/iomgr/pollset_set_windows.cc
   src/core/lib/iomgr/pollset_windows.cc
   src/core/lib/iomgr/resolve_address.cc
   src/core/lib/iomgr/resolve_address_posix.cc
   src/core/lib/iomgr/resolve_address_windows.cc
   src/core/lib/iomgr/sockaddr_utils_posix.cc
   src/core/lib/iomgr/socket_factory_posix.cc
   src/core/lib/iomgr/socket_mutator.cc
   src/core/lib/iomgr/socket_utils_common_posix.cc
   src/core/lib/iomgr/socket_utils_linux.cc
   src/core/lib/iomgr/socket_utils_posix.cc
   src/core/lib/iomgr/socket_utils_windows.cc
   src/core/lib/iomgr/socket_windows.cc
   src/core/lib/iomgr/tcp_client.cc
   src/core/lib/iomgr/tcp_client_cfstream.cc
   src/core/lib/iomgr/tcp_client_posix.cc
   src/core/lib/iomgr/tcp_client_windows.cc
   src/core/lib/iomgr/tcp_posix.cc
   src/core/lib/iomgr/tcp_server.cc
   src/core/lib/iomgr/tcp_server_posix.cc
   src/core/lib/iomgr/tcp_server_utils_posix_common.cc
   src/core/lib/iomgr/tcp_server_utils_posix_ifaddrs.cc
   src/core/lib/iomgr/tcp_server_utils_posix_noifaddrs.cc
   src/core/lib/iomgr/tcp_server_windows.cc
   src/core/lib/iomgr/tcp_windows.cc
   src/core/lib/iomgr/time_averaged_stats.cc
   src/core/lib/iomgr/timer.cc
   src/core/lib/iomgr/timer_generic.cc
   src/core/lib/iomgr/timer_heap.cc
   src/core/lib/iomgr/timer_manager.cc
   src/core/lib/iomgr/unix_sockets_posix.cc
   src/core/lib/iomgr/unix_sockets_posix_noop.cc
   src/core/lib/iomgr/wakeup_fd_eventfd.cc
   src/core/lib/iomgr/wakeup_fd_nospecial.cc
   src/core/lib/iomgr/wakeup_fd_pipe.cc
   src/core/lib/iomgr/wakeup_fd_posix.cc
   src/core/lib/iomgr/work_serializer.cc
   src/core/lib/json/json_reader.cc
   src/core/lib/json/json_util.cc
   src/core/lib/json/json_writer.cc
   src/core/lib/matchers/matchers.cc
   src/core/lib/promise/activity.cc
   src/core/lib/promise/sleep.cc
   src/core/lib/resolver/resolver.cc
   src/core/lib/resolver/resolver_registry.cc
   src/core/lib/resolver/server_address.cc
   src/core/lib/resource_quota/api.cc
   src/core/lib/resource_quota/arena.cc
   src/core/lib/resource_quota/memory_quota.cc
   src/core/lib/resource_quota/resource_quota.cc
   src/core/lib/resource_quota/thread_quota.cc
   src/core/lib/resource_quota/trace.cc
   src/core/lib/security/authorization/authorization_policy_provider_vtable.cc
   src/core/lib/security/authorization/evaluate_args.cc
   src/core/lib/security/authorization/grpc_authorization_engine.cc
   src/core/lib/security/authorization/grpc_server_authz_filter.cc
   src/core/lib/security/authorization/matchers.cc
   src/core/lib/security/authorization/rbac_policy.cc
   src/core/lib/security/context/security_context.cc
   src/core/lib/security/credentials/alts/alts_credentials.cc
   src/core/lib/security/credentials/alts/check_gcp_environment.cc
   src/core/lib/security/credentials/alts/check_gcp_environment_linux.cc
   src/core/lib/security/credentials/alts/check_gcp_environment_no_op.cc
   src/core/lib/security/credentials/alts/check_gcp_environment_windows.cc
   src/core/lib/security/credentials/alts/grpc_alts_credentials_client_options.cc
   src/core/lib/security/credentials/alts/grpc_alts_credentials_options.cc
   src/core/lib/security/credentials/alts/grpc_alts_credentials_server_options.cc
   src/core/lib/security/credentials/call_creds_util.cc
   src/core/lib/security/credentials/channel_creds_registry_init.cc
   src/core/lib/security/credentials/composite/composite_credentials.cc
   src/core/lib/security/credentials/credentials.cc
   src/core/lib/security/credentials/external/aws_external_account_credentials.cc
   src/core/lib/security/credentials/external/aws_request_signer.cc
   src/core/lib/security/credentials/external/external_account_credentials.cc
   src/core/lib/security/credentials/external/file_external_account_credentials.cc
   src/core/lib/security/credentials/external/url_external_account_credentials.cc
   src/core/lib/security/credentials/fake/fake_credentials.cc
   src/core/lib/security/credentials/google_default/credentials_generic.cc
   src/core/lib/security/credentials/google_default/google_default_credentials.cc
   src/core/lib/security/credentials/iam/iam_credentials.cc
   src/core/lib/security/credentials/insecure/insecure_credentials.cc
   src/core/lib/security/credentials/jwt/json_token.cc
   src/core/lib/security/credentials/jwt/jwt_credentials.cc
   src/core/lib/security/credentials/jwt/jwt_verifier.cc
   src/core/lib/security/credentials/local/local_credentials.cc
   src/core/lib/security/credentials/oauth2/oauth2_credentials.cc
   src/core/lib/security/credentials/plugin/plugin_credentials.cc
   src/core/lib/security/credentials/ssl/ssl_credentials.cc
   src/core/lib/security/credentials/tls/grpc_tls_certificate_distributor.cc
   src/core/lib/security/credentials/tls/grpc_tls_certificate_provider.cc
   src/core/lib/security/credentials/tls/grpc_tls_certificate_verifier.cc
   src/core/lib/security/credentials/tls/grpc_tls_credentials_options.cc
   src/core/lib/security/credentials/tls/tls_credentials.cc
   src/core/lib/security/credentials/tls/tls_utils.cc
   src/core/lib/security/credentials/xds/xds_credentials.cc
   src/core/lib/security/security_connector/alts/alts_security_connector.cc
   src/core/lib/security/security_connector/fake/fake_security_connector.cc
   src/core/lib/security/security_connector/insecure/insecure_security_connector.cc
   src/core/lib/security/security_connector/load_system_roots_fallback.cc
   src/core/lib/security/security_connector/load_system_roots_linux.cc
   src/core/lib/security/security_connector/local/local_security_connector.cc
   src/core/lib/security/security_connector/security_connector.cc
   src/core/lib/security/security_connector/ssl/ssl_security_connector.cc
   src/core/lib/security/security_connector/ssl_utils.cc
   src/core/lib/security/security_connector/ssl_utils_config.cc
   src/core/lib/security/security_connector/tls/tls_security_connector.cc
   src/core/lib/security/transport/client_auth_filter.cc
   src/core/lib/security/transport/secure_endpoint.cc
   src/core/lib/security/transport/security_handshaker.cc
   src/core/lib/security/transport/server_auth_filter.cc
   src/core/lib/security/transport/tsi_error.cc
   src/core/lib/security/util/json_util.cc
   src/core/lib/service_config/service_config_impl.cc
   src/core/lib/service_config/service_config_parser.cc
   src/core/lib/slice/b64.cc
   src/core/lib/slice/percent_encoding.cc
   src/core/lib/slice/slice.cc
   src/core/lib/slice/slice_api.cc
   src/core/lib/slice/slice_buffer.cc
   src/core/lib/slice/slice_buffer_api.cc
   src/core/lib/slice/slice_refcount.cc
   src/core/lib/slice/slice_split.cc
   src/core/lib/slice/slice_string_helpers.cc
   src/core/lib/surface/api_trace.cc
   src/core/lib/surface/builtins.cc
   src/core/lib/surface/byte_buffer.cc
   src/core/lib/surface/byte_buffer_reader.cc
   src/core/lib/surface/call.cc
   src/core/lib/surface/call_details.cc
   src/core/lib/surface/call_log_batch.cc
   src/core/lib/surface/channel.cc
   src/core/lib/surface/channel_init.cc
   src/core/lib/surface/channel_ping.cc
   src/core/lib/surface/channel_stack_type.cc
   src/core/lib/surface/completion_queue.cc
   src/core/lib/surface/completion_queue_factory.cc
   src/core/lib/surface/event_string.cc
   src/core/lib/surface/init.cc
   src/core/lib/surface/lame_client.cc
   src/core/lib/surface/metadata_array.cc
   src/core/lib/surface/server.cc
   src/core/lib/surface/validate_metadata.cc
   src/core/lib/surface/version.cc
   src/core/lib/transport/bdp_estimator.cc
+  src/core/lib/transport/byte_stream.cc
   src/core/lib/transport/connectivity_state.cc
   src/core/lib/transport/error_utils.cc
   src/core/lib/transport/handshaker.cc
   src/core/lib/transport/handshaker_registry.cc
   src/core/lib/transport/http_connect_handshaker.cc
   src/core/lib/transport/metadata_batch.cc
   src/core/lib/transport/parsed_metadata.cc
   src/core/lib/transport/pid_controller.cc
   src/core/lib/transport/status_conversion.cc
   src/core/lib/transport/tcp_connect_handshaker.cc
   src/core/lib/transport/timeout_encoding.cc
   src/core/lib/transport/transport.cc
   src/core/lib/transport/transport_op_string.cc
   src/core/lib/uri/uri_parser.cc
   src/core/plugin_registry/grpc_plugin_registry.cc
   src/core/plugin_registry/grpc_plugin_registry_extra.cc
   src/core/tsi/alts/crypt/aes_gcm.cc
   src/core/tsi/alts/crypt/gsec.cc
   src/core/tsi/alts/frame_protector/alts_counter.cc
   src/core/tsi/alts/frame_protector/alts_crypter.cc
   src/core/tsi/alts/frame_protector/alts_frame_protector.cc
   src/core/tsi/alts/frame_protector/alts_record_protocol_crypter_common.cc
   src/core/tsi/alts/frame_protector/alts_seal_privacy_integrity_crypter.cc
   src/core/tsi/alts/frame_protector/alts_unseal_privacy_integrity_crypter.cc
   src/core/tsi/alts/frame_protector/frame_handler.cc
   src/core/tsi/alts/handshaker/alts_handshaker_client.cc
   src/core/tsi/alts/handshaker/alts_shared_resource.cc
   src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc
   src/core/tsi/alts/handshaker/alts_tsi_utils.cc
   src/core/tsi/alts/handshaker/transport_security_common_api.cc
   src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_integrity_only_record_protocol.cc
   src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_privacy_integrity_record_protocol.cc
   src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol_common.cc
   src/core/tsi/alts/zero_copy_frame_protector/alts_iovec_record_protocol.cc
   src/core/tsi/alts/zero_copy_frame_protector/alts_zero_copy_grpc_protector.cc
   src/core/tsi/fake_transport_security.cc
   src/core/tsi/local_transport_security.cc
   src/core/tsi/ssl/key_logging/ssl_key_logging.cc
   src/core/tsi/ssl/session_cache/ssl_session_boringssl.cc
   src/core/tsi/ssl/session_cache/ssl_session_cache.cc
   src/core/tsi/ssl/session_cache/ssl_session_openssl.cc
   src/core/tsi/ssl_transport_security.cc
   src/core/tsi/transport_security.cc
   src/core/tsi/transport_security_grpc.cc
 )
@@ -2545,308 +2547,309 @@ endif()
 add_library(grpc_unsecure
   src/core/ext/filters/census/grpc_context.cc
   src/core/ext/filters/channel_idle/channel_idle_filter.cc
   src/core/ext/filters/channel_idle/idle_filter_state.cc
   src/core/ext/filters/client_channel/backend_metric.cc
   src/core/ext/filters/client_channel/backup_poller.cc
   src/core/ext/filters/client_channel/channel_connectivity.cc
   src/core/ext/filters/client_channel/client_channel.cc
   src/core/ext/filters/client_channel/client_channel_channelz.cc
   src/core/ext/filters/client_channel/client_channel_factory.cc
   src/core/ext/filters/client_channel/client_channel_plugin.cc
   src/core/ext/filters/client_channel/config_selector.cc
   src/core/ext/filters/client_channel/dynamic_filters.cc
   src/core/ext/filters/client_channel/global_subchannel_pool.cc
   src/core/ext/filters/client_channel/health/health_check_client.cc
   src/core/ext/filters/client_channel/http_proxy.cc
   src/core/ext/filters/client_channel/lb_policy.cc
   src/core/ext/filters/client_channel/lb_policy/address_filtering.cc
   src/core/ext/filters/client_channel/lb_policy/child_policy_handler.cc
   src/core/ext/filters/client_channel/lb_policy/grpclb/client_load_reporting_filter.cc
   src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc
   src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_balancer_addresses.cc
   src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_client_stats.cc
   src/core/ext/filters/client_channel/lb_policy/grpclb/load_balancer_api.cc
   src/core/ext/filters/client_channel/lb_policy/oob_backend_metric.cc
   src/core/ext/filters/client_channel/lb_policy/outlier_detection/outlier_detection.cc
   src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc
   src/core/ext/filters/client_channel/lb_policy/priority/priority.cc
   src/core/ext/filters/client_channel/lb_policy/ring_hash/ring_hash.cc
   src/core/ext/filters/client_channel/lb_policy/rls/rls.cc
   src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc
   src/core/ext/filters/client_channel/lb_policy/weighted_target/weighted_target.cc
   src/core/ext/filters/client_channel/lb_policy_registry.cc
   src/core/ext/filters/client_channel/local_subchannel_pool.cc
   src/core/ext/filters/client_channel/proxy_mapper_registry.cc
   src/core/ext/filters/client_channel/resolver/binder/binder_resolver.cc
   src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc
   src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_posix.cc
   src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_windows.cc
   src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.cc
   src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_posix.cc
   src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_windows.cc
   src/core/ext/filters/client_channel/resolver/dns/dns_resolver_selection.cc
   src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc
   src/core/ext/filters/client_channel/resolver/fake/fake_resolver.cc
   src/core/ext/filters/client_channel/resolver/polling_resolver.cc
   src/core/ext/filters/client_channel/resolver/sockaddr/sockaddr_resolver.cc
   src/core/ext/filters/client_channel/resolver_result_parsing.cc
   src/core/ext/filters/client_channel/retry_filter.cc
   src/core/ext/filters/client_channel/retry_service_config.cc
   src/core/ext/filters/client_channel/retry_throttle.cc
   src/core/ext/filters/client_channel/service_config_channel_arg_filter.cc
   src/core/ext/filters/client_channel/subchannel.cc
   src/core/ext/filters/client_channel/subchannel_pool_interface.cc
   src/core/ext/filters/client_channel/subchannel_stream_client.cc
   src/core/ext/filters/deadline/deadline_filter.cc
   src/core/ext/filters/fault_injection/fault_injection_filter.cc
   src/core/ext/filters/fault_injection/service_config_parser.cc
   src/core/ext/filters/http/client/http_client_filter.cc
   src/core/ext/filters/http/client_authority_filter.cc
   src/core/ext/filters/http/http_filters_plugin.cc
   src/core/ext/filters/http/message_compress/message_compress_filter.cc
   src/core/ext/filters/http/message_compress/message_decompress_filter.cc
   src/core/ext/filters/http/server/http_server_filter.cc
   src/core/ext/filters/message_size/message_size_filter.cc
   src/core/ext/transport/chttp2/alpn/alpn.cc
   src/core/ext/transport/chttp2/client/chttp2_connector.cc
   src/core/ext/transport/chttp2/server/chttp2_server.cc
   src/core/ext/transport/chttp2/transport/bin_decoder.cc
   src/core/ext/transport/chttp2/transport/bin_encoder.cc
   src/core/ext/transport/chttp2/transport/chttp2_transport.cc
   src/core/ext/transport/chttp2/transport/context_list.cc
   src/core/ext/transport/chttp2/transport/flow_control.cc
   src/core/ext/transport/chttp2/transport/frame_data.cc
   src/core/ext/transport/chttp2/transport/frame_goaway.cc
   src/core/ext/transport/chttp2/transport/frame_ping.cc
   src/core/ext/transport/chttp2/transport/frame_rst_stream.cc
   src/core/ext/transport/chttp2/transport/frame_settings.cc
   src/core/ext/transport/chttp2/transport/frame_window_update.cc
   src/core/ext/transport/chttp2/transport/hpack_encoder.cc
   src/core/ext/transport/chttp2/transport/hpack_encoder_table.cc
   src/core/ext/transport/chttp2/transport/hpack_parser.cc
   src/core/ext/transport/chttp2/transport/hpack_parser_table.cc
   src/core/ext/transport/chttp2/transport/http2_settings.cc
   src/core/ext/transport/chttp2/transport/huffsyms.cc
   src/core/ext/transport/chttp2/transport/parsing.cc
   src/core/ext/transport/chttp2/transport/stream_lists.cc
   src/core/ext/transport/chttp2/transport/stream_map.cc
   src/core/ext/transport/chttp2/transport/varint.cc
   src/core/ext/transport/chttp2/transport/writing.cc
   src/core/ext/transport/inproc/inproc_plugin.cc
   src/core/ext/transport/inproc/inproc_transport.cc
   src/core/ext/upb-generated/google/api/annotations.upb.c
   src/core/ext/upb-generated/google/api/http.upb.c
   src/core/ext/upb-generated/google/protobuf/any.upb.c
   src/core/ext/upb-generated/google/protobuf/descriptor.upb.c
   src/core/ext/upb-generated/google/protobuf/duration.upb.c
   src/core/ext/upb-generated/google/protobuf/empty.upb.c
   src/core/ext/upb-generated/google/protobuf/struct.upb.c
   src/core/ext/upb-generated/google/protobuf/timestamp.upb.c
   src/core/ext/upb-generated/google/protobuf/wrappers.upb.c
   src/core/ext/upb-generated/google/rpc/status.upb.c
   src/core/ext/upb-generated/src/proto/grpc/health/v1/health.upb.c
   src/core/ext/upb-generated/src/proto/grpc/lb/v1/load_balancer.upb.c
   src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls.upb.c
   src/core/ext/upb-generated/validate/validate.upb.c
   src/core/ext/upb-generated/xds/data/orca/v3/orca_load_report.upb.c
   src/core/ext/upb-generated/xds/service/orca/v3/orca.upb.c
   src/core/lib/address_utils/parse_address.cc
   src/core/lib/address_utils/sockaddr_utils.cc
   src/core/lib/backoff/backoff.cc
   src/core/lib/channel/channel_args.cc
   src/core/lib/channel/channel_args_preconditioning.cc
   src/core/lib/channel/channel_stack.cc
   src/core/lib/channel/channel_stack_builder.cc
   src/core/lib/channel/channel_stack_builder_impl.cc
   src/core/lib/channel/channel_trace.cc
   src/core/lib/channel/channelz.cc
   src/core/lib/channel/channelz_registry.cc
   src/core/lib/channel/connected_channel.cc
   src/core/lib/channel/promise_based_filter.cc
   src/core/lib/channel/status_util.cc
   src/core/lib/compression/compression.cc
   src/core/lib/compression/compression_internal.cc
   src/core/lib/compression/message_compress.cc
   src/core/lib/config/core_configuration.cc
   src/core/lib/debug/stats.cc
   src/core/lib/debug/stats_data.cc
   src/core/lib/debug/trace.cc
   src/core/lib/event_engine/channel_args_endpoint_config.cc
   src/core/lib/event_engine/default_event_engine_factory.cc
   src/core/lib/event_engine/event_engine.cc
   src/core/lib/event_engine/iomgr_engine.cc
   src/core/lib/event_engine/memory_allocator.cc
   src/core/lib/event_engine/resolved_address.cc
   src/core/lib/event_engine/slice.cc
   src/core/lib/event_engine/slice_buffer.cc
   src/core/lib/event_engine/trace.cc
   src/core/lib/gprpp/status_helper.cc
   src/core/lib/gprpp/time.cc
   src/core/lib/http/format_request.cc
   src/core/lib/http/httpcli.cc
   src/core/lib/http/parser.cc
   src/core/lib/iomgr/buffer_list.cc
   src/core/lib/iomgr/call_combiner.cc
   src/core/lib/iomgr/cfstream_handle.cc
   src/core/lib/iomgr/combiner.cc
   src/core/lib/iomgr/dualstack_socket_posix.cc
   src/core/lib/iomgr/endpoint.cc
   src/core/lib/iomgr/endpoint_cfstream.cc
   src/core/lib/iomgr/endpoint_pair_posix.cc
   src/core/lib/iomgr/endpoint_pair_windows.cc
   src/core/lib/iomgr/error.cc
   src/core/lib/iomgr/error_cfstream.cc
   src/core/lib/iomgr/ev_apple.cc
   src/core/lib/iomgr/ev_epoll1_linux.cc
   src/core/lib/iomgr/ev_poll_posix.cc
   src/core/lib/iomgr/ev_posix.cc
   src/core/lib/iomgr/ev_windows.cc
   src/core/lib/iomgr/exec_ctx.cc
   src/core/lib/iomgr/executor.cc
   src/core/lib/iomgr/executor/mpmcqueue.cc
   src/core/lib/iomgr/executor/threadpool.cc
   src/core/lib/iomgr/fork_posix.cc
   src/core/lib/iomgr/fork_windows.cc
   src/core/lib/iomgr/gethostname_fallback.cc
   src/core/lib/iomgr/gethostname_host_name_max.cc
   src/core/lib/iomgr/gethostname_sysconf.cc
   src/core/lib/iomgr/grpc_if_nametoindex_posix.cc
   src/core/lib/iomgr/grpc_if_nametoindex_unsupported.cc
   src/core/lib/iomgr/internal_errqueue.cc
   src/core/lib/iomgr/iocp_windows.cc
   src/core/lib/iomgr/iomgr.cc
   src/core/lib/iomgr/iomgr_internal.cc
   src/core/lib/iomgr/iomgr_posix.cc
   src/core/lib/iomgr/iomgr_posix_cfstream.cc
   src/core/lib/iomgr/iomgr_windows.cc
   src/core/lib/iomgr/load_file.cc
   src/core/lib/iomgr/lockfree_event.cc
   src/core/lib/iomgr/polling_entity.cc
   src/core/lib/iomgr/pollset.cc
   src/core/lib/iomgr/pollset_set.cc
   src/core/lib/iomgr/pollset_set_windows.cc
   src/core/lib/iomgr/pollset_windows.cc
   src/core/lib/iomgr/resolve_address.cc
   src/core/lib/iomgr/resolve_address_posix.cc
   src/core/lib/iomgr/resolve_address_windows.cc
   src/core/lib/iomgr/sockaddr_utils_posix.cc
   src/core/lib/iomgr/socket_factory_posix.cc
   src/core/lib/iomgr/socket_mutator.cc
   src/core/lib/iomgr/socket_utils_common_posix.cc
   src/core/lib/iomgr/socket_utils_linux.cc
   src/core/lib/iomgr/socket_utils_posix.cc
   src/core/lib/iomgr/socket_utils_windows.cc
   src/core/lib/iomgr/socket_windows.cc
   src/core/lib/iomgr/tcp_client.cc
   src/core/lib/iomgr/tcp_client_cfstream.cc
   src/core/lib/iomgr/tcp_client_posix.cc
   src/core/lib/iomgr/tcp_client_windows.cc
   src/core/lib/iomgr/tcp_posix.cc
   src/core/lib/iomgr/tcp_server.cc
   src/core/lib/iomgr/tcp_server_posix.cc
   src/core/lib/iomgr/tcp_server_utils_posix_common.cc
   src/core/lib/iomgr/tcp_server_utils_posix_ifaddrs.cc
   src/core/lib/iomgr/tcp_server_utils_posix_noifaddrs.cc
   src/core/lib/iomgr/tcp_server_windows.cc
   src/core/lib/iomgr/tcp_windows.cc
   src/core/lib/iomgr/time_averaged_stats.cc
   src/core/lib/iomgr/timer.cc
   src/core/lib/iomgr/timer_generic.cc
   src/core/lib/iomgr/timer_heap.cc
   src/core/lib/iomgr/timer_manager.cc
   src/core/lib/iomgr/unix_sockets_posix.cc
   src/core/lib/iomgr/unix_sockets_posix_noop.cc
   src/core/lib/iomgr/wakeup_fd_eventfd.cc
   src/core/lib/iomgr/wakeup_fd_nospecial.cc
   src/core/lib/iomgr/wakeup_fd_pipe.cc
   src/core/lib/iomgr/wakeup_fd_posix.cc
   src/core/lib/iomgr/work_serializer.cc
   src/core/lib/json/json_reader.cc
   src/core/lib/json/json_util.cc
   src/core/lib/json/json_writer.cc
   src/core/lib/promise/activity.cc
   src/core/lib/promise/sleep.cc
   src/core/lib/resolver/resolver.cc
   src/core/lib/resolver/resolver_registry.cc
   src/core/lib/resolver/server_address.cc
   src/core/lib/resource_quota/api.cc
   src/core/lib/resource_quota/arena.cc
   src/core/lib/resource_quota/memory_quota.cc
   src/core/lib/resource_quota/resource_quota.cc
   src/core/lib/resource_quota/thread_quota.cc
   src/core/lib/resource_quota/trace.cc
   src/core/lib/security/authorization/authorization_policy_provider_vtable.cc
   src/core/lib/security/authorization/evaluate_args.cc
   src/core/lib/security/authorization/grpc_server_authz_filter.cc
   src/core/lib/security/context/security_context.cc
   src/core/lib/security/credentials/call_creds_util.cc
   src/core/lib/security/credentials/composite/composite_credentials.cc
   src/core/lib/security/credentials/credentials.cc
   src/core/lib/security/credentials/fake/fake_credentials.cc
   src/core/lib/security/credentials/insecure/insecure_credentials.cc
   src/core/lib/security/credentials/plugin/plugin_credentials.cc
   src/core/lib/security/credentials/tls/tls_utils.cc
   src/core/lib/security/security_connector/fake/fake_security_connector.cc
   src/core/lib/security/security_connector/insecure/insecure_security_connector.cc
   src/core/lib/security/security_connector/load_system_roots_fallback.cc
   src/core/lib/security/security_connector/load_system_roots_linux.cc
   src/core/lib/security/security_connector/security_connector.cc
   src/core/lib/security/transport/client_auth_filter.cc
   src/core/lib/security/transport/secure_endpoint.cc
   src/core/lib/security/transport/security_handshaker.cc
   src/core/lib/security/transport/server_auth_filter.cc
   src/core/lib/security/transport/tsi_error.cc
   src/core/lib/security/util/json_util.cc
   src/core/lib/service_config/service_config_impl.cc
   src/core/lib/service_config/service_config_parser.cc
   src/core/lib/slice/b64.cc
   src/core/lib/slice/percent_encoding.cc
   src/core/lib/slice/slice.cc
   src/core/lib/slice/slice_api.cc
   src/core/lib/slice/slice_buffer.cc
   src/core/lib/slice/slice_buffer_api.cc
   src/core/lib/slice/slice_refcount.cc
   src/core/lib/slice/slice_split.cc
   src/core/lib/slice/slice_string_helpers.cc
   src/core/lib/surface/api_trace.cc
   src/core/lib/surface/builtins.cc
   src/core/lib/surface/byte_buffer.cc
   src/core/lib/surface/byte_buffer_reader.cc
   src/core/lib/surface/call.cc
   src/core/lib/surface/call_details.cc
   src/core/lib/surface/call_log_batch.cc
   src/core/lib/surface/channel.cc
   src/core/lib/surface/channel_init.cc
   src/core/lib/surface/channel_ping.cc
   src/core/lib/surface/channel_stack_type.cc
   src/core/lib/surface/completion_queue.cc
   src/core/lib/surface/completion_queue_factory.cc
   src/core/lib/surface/event_string.cc
   src/core/lib/surface/init.cc
   src/core/lib/surface/lame_client.cc
   src/core/lib/surface/metadata_array.cc
   src/core/lib/surface/server.cc
   src/core/lib/surface/validate_metadata.cc
   src/core/lib/surface/version.cc
   src/core/lib/transport/bdp_estimator.cc
+  src/core/lib/transport/byte_stream.cc
   src/core/lib/transport/connectivity_state.cc
   src/core/lib/transport/error_utils.cc
   src/core/lib/transport/handshaker.cc
   src/core/lib/transport/handshaker_registry.cc
   src/core/lib/transport/http_connect_handshaker.cc
   src/core/lib/transport/metadata_batch.cc
   src/core/lib/transport/parsed_metadata.cc
   src/core/lib/transport/pid_controller.cc
   src/core/lib/transport/status_conversion.cc
   src/core/lib/transport/tcp_connect_handshaker.cc
   src/core/lib/transport/timeout_encoding.cc
   src/core/lib/transport/transport.cc
   src/core/lib/transport/transport_op_string.cc
   src/core/lib/uri/uri_parser.cc
   src/core/plugin_registry/grpc_plugin_registry.cc
   src/core/plugin_registry/grpc_plugin_registry_noextra.cc
   src/core/tsi/fake_transport_security.cc
   src/core/tsi/local_transport_security.cc
   src/core/tsi/transport_security.cc
   src/core/tsi/transport_security_grpc.cc
 )
@@ -6003,6 +6006,33 @@ target_link_libraries(load_file_test
 )
 
 
+endif()
+if(gRPC_BUILD_TESTS)
+
+add_executable(manual_constructor_test
+  test/core/gprpp/manual_constructor_test.cc
+)
+
+target_include_directories(manual_constructor_test
+  PRIVATE
+    ${CMAKE_CURRENT_SOURCE_DIR}
+    ${CMAKE_CURRENT_SOURCE_DIR}/include
+    ${_gRPC_ADDRESS_SORTING_INCLUDE_DIR}
+    ${_gRPC_RE2_INCLUDE_DIR}
+    ${_gRPC_SSL_INCLUDE_DIR}
+    ${_gRPC_UPB_GENERATED_DIR}
+    ${_gRPC_UPB_GRPC_GENERATED_DIR}
+    ${_gRPC_UPB_INCLUDE_DIR}
+    ${_gRPC_XXHASH_INCLUDE_DIR}
+    ${_gRPC_ZLIB_INCLUDE_DIR}
+)
+
+target_link_libraries(manual_constructor_test
+  ${_gRPC_ALLTARGETS_LIBRARIES}
+  grpc_test_util
+)
+
+
 endif()
 if(gRPC_BUILD_TESTS)
 if(_gRPC_PLATFORM_LINUX OR _gRPC_PLATFORM_POSIX)
@@ -8325,6 +8355,41 @@ target_link_libraries(byte_buffer_test
 )
 
 
+endif()
+if(gRPC_BUILD_TESTS)
+
+add_executable(byte_stream_test
+  test/core/transport/byte_stream_test.cc
+  third_party/googletest/googletest/src/gtest-all.cc
+  third_party/googletest/googlemock/src/gmock-all.cc
+)
+
+target_include_directories(byte_stream_test
+  PRIVATE
+    ${CMAKE_CURRENT_SOURCE_DIR}
+    ${CMAKE_CURRENT_SOURCE_DIR}/include
+    ${_gRPC_ADDRESS_SORTING_INCLUDE_DIR}
+    ${_gRPC_RE2_INCLUDE_DIR}
+    ${_gRPC_SSL_INCLUDE_DIR}
+    ${_gRPC_UPB_GENERATED_DIR}
+    ${_gRPC_UPB_GRPC_GENERATED_DIR}
+    ${_gRPC_UPB_INCLUDE_DIR}
+    ${_gRPC_XXHASH_INCLUDE_DIR}
+    ${_gRPC_ZLIB_INCLUDE_DIR}
+    third_party/googletest/googletest/include
+    third_party/googletest/googletest
+    third_party/googletest/googlemock/include
+    third_party/googletest/googlemock
+    ${_gRPC_PROTO_GENS_DIR}
+)
+
+target_link_libraries(byte_stream_test
+  ${_gRPC_PROTOBUF_LIBRARIES}
+  ${_gRPC_ALLTARGETS_LIBRARIES}
+  grpc_test_util
+)
+
+
 endif()
 if(gRPC_BUILD_TESTS)
 
@@ -10666,70 +10731,12 @@ target_link_libraries(flaky_network_test
 )
 
 
-endif()
-if(gRPC_BUILD_TESTS)
-
-add_executable(flow_control_end2end_test
-  test/core/end2end/cq_verifier.cc
-  test/core/transport/chttp2/flow_control_end2end_test.cc
-  third_party/googletest/googletest/src/gtest-all.cc
-  third_party/googletest/googlemock/src/gmock-all.cc
-)
-
-target_include_directories(flow_control_end2end_test
-  PRIVATE
-    ${CMAKE_CURRENT_SOURCE_DIR}
-    ${CMAKE_CURRENT_SOURCE_DIR}/include
-    ${_gRPC_ADDRESS_SORTING_INCLUDE_DIR}
-    ${_gRPC_RE2_INCLUDE_DIR}
-    ${_gRPC_SSL_INCLUDE_DIR}
-    ${_gRPC_UPB_GENERATED_DIR}
-    ${_gRPC_UPB_GRPC_GENERATED_DIR}
-    ${_gRPC_UPB_INCLUDE_DIR}
-    ${_gRPC_XXHASH_INCLUDE_DIR}
-    ${_gRPC_ZLIB_INCLUDE_DIR}
-    third_party/googletest/googletest/include
-    third_party/googletest/googletest
-    third_party/googletest/googlemock/include
-    third_party/googletest/googlemock
-    ${_gRPC_PROTO_GENS_DIR}
-)
-
-target_link_libraries(flow_control_end2end_test
-  ${_gRPC_PROTOBUF_LIBRARIES}
-  ${_gRPC_ALLTARGETS_LIBRARIES}
-  grpc_test_util
-)
-
-
 endif()
 if(gRPC_BUILD_TESTS)
 
 add_executable(flow_control_test
-  src/core/ext/transport/chttp2/transport/flow_control.cc
-  src/core/ext/upb-generated/google/protobuf/any.upb.c
-  src/core/ext/upb-generated/google/rpc/status.upb.c
-  src/core/lib/debug/trace.cc
-  src/core/lib/event_engine/memory_allocator.cc
-  src/core/lib/gprpp/status_helper.cc
-  src/core/lib/gprpp/time.cc
-  src/core/lib/iomgr/combiner.cc
-  src/core/lib/iomgr/error.cc
-  src/core/lib/iomgr/exec_ctx.cc
-  src/core/lib/iomgr/executor.cc
-  src/core/lib/iomgr/iomgr_internal.cc
-  src/core/lib/promise/activity.cc
-  src/core/lib/resource_quota/memory_quota.cc
-  src/core/lib/resource_quota/resource_quota.cc
-  src/core/lib/resource_quota/thread_quota.cc
-  src/core/lib/resource_quota/trace.cc
-  src/core/lib/slice/percent_encoding.cc
-  src/core/lib/slice/slice.cc
-  src/core/lib/slice/slice_refcount.cc
-  src/core/lib/slice/slice_string_helpers.cc
-  src/core/lib/transport/bdp_estimator.cc
-  src/core/lib/transport/pid_controller.cc
+  test/core/end2end/cq_verifier.cc
   test/core/transport/chttp2/flow_control_test.cc
   third_party/googletest/googletest/src/gtest-all.cc
   third_party/googletest/googlemock/src/gmock-all.cc
 )
@@ -10756,12 +10763,7 @@ target_include_directories(flow_control_test
 target_link_libraries(flow_control_test
   ${_gRPC_PROTOBUF_LIBRARIES}
   ${_gRPC_ALLTARGETS_LIBRARIES}
-  absl::type_traits
-  absl::statusor
-  absl::variant
-  absl::utility
-  gpr
-  upb
+  grpc_test_util
 )
 
 
diff --git a/Makefile b/Makefile
index 6e0e43893a..6f622094c8 100644
--- a/Makefile
+++ b/Makefile
@@ -1016,666 +1016,667 @@ endif
 # start of build recipe for library "grpc" (generated by makelib(lib) template function)
 LIBGRPC_SRC = \
     src/core/ext/filters/census/grpc_context.cc \
     src/core/ext/filters/channel_idle/channel_idle_filter.cc \
     src/core/ext/filters/channel_idle/idle_filter_state.cc \
     src/core/ext/filters/client_channel/backend_metric.cc \
     src/core/ext/filters/client_channel/backup_poller.cc \
     src/core/ext/filters/client_channel/channel_connectivity.cc \
     src/core/ext/filters/client_channel/client_channel.cc \
     src/core/ext/filters/client_channel/client_channel_channelz.cc \
     src/core/ext/filters/client_channel/client_channel_factory.cc \
     src/core/ext/filters/client_channel/client_channel_plugin.cc \
     src/core/ext/filters/client_channel/config_selector.cc \
     src/core/ext/filters/client_channel/dynamic_filters.cc \
     src/core/ext/filters/client_channel/global_subchannel_pool.cc \
     src/core/ext/filters/client_channel/health/health_check_client.cc \
     src/core/ext/filters/client_channel/http_proxy.cc \
     src/core/ext/filters/client_channel/lb_policy.cc \
     src/core/ext/filters/client_channel/lb_policy/address_filtering.cc \
     src/core/ext/filters/client_channel/lb_policy/child_policy_handler.cc \
     src/core/ext/filters/client_channel/lb_policy/grpclb/client_load_reporting_filter.cc \
     src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc \
     src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_balancer_addresses.cc \
     src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_client_stats.cc \
     src/core/ext/filters/client_channel/lb_policy/grpclb/load_balancer_api.cc \
     src/core/ext/filters/client_channel/lb_policy/oob_backend_metric.cc \
     src/core/ext/filters/client_channel/lb_policy/outlier_detection/outlier_detection.cc \
     src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc \
     src/core/ext/filters/client_channel/lb_policy/priority/priority.cc \
     src/core/ext/filters/client_channel/lb_policy/ring_hash/ring_hash.cc \
     src/core/ext/filters/client_channel/lb_policy/rls/rls.cc \
     src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc \
     src/core/ext/filters/client_channel/lb_policy/weighted_target/weighted_target.cc \
     src/core/ext/filters/client_channel/lb_policy/xds/cds.cc \
     src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_impl.cc \
     src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_manager.cc \
     src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_resolver.cc \
     src/core/ext/filters/client_channel/lb_policy_registry.cc \
     src/core/ext/filters/client_channel/local_subchannel_pool.cc \
     src/core/ext/filters/client_channel/proxy_mapper_registry.cc \
     src/core/ext/filters/client_channel/resolver/binder/binder_resolver.cc \
     src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc \
     src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_posix.cc \
     src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_windows.cc \
     src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.cc \
     src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_posix.cc \
     src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_windows.cc \
     src/core/ext/filters/client_channel/resolver/dns/dns_resolver_selection.cc \
     src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc \
     src/core/ext/filters/client_channel/resolver/fake/fake_resolver.cc \
     src/core/ext/filters/client_channel/resolver/google_c2p/google_c2p_resolver.cc \
     src/core/ext/filters/client_channel/resolver/polling_resolver.cc \
     src/core/ext/filters/client_channel/resolver/sockaddr/sockaddr_resolver.cc \
     src/core/ext/filters/client_channel/resolver/xds/xds_resolver.cc \
     src/core/ext/filters/client_channel/resolver_result_parsing.cc \
     src/core/ext/filters/client_channel/retry_filter.cc \
     src/core/ext/filters/client_channel/retry_service_config.cc \
     src/core/ext/filters/client_channel/retry_throttle.cc \
     src/core/ext/filters/client_channel/service_config_channel_arg_filter.cc \
     src/core/ext/filters/client_channel/subchannel.cc \
     src/core/ext/filters/client_channel/subchannel_pool_interface.cc \
     src/core/ext/filters/client_channel/subchannel_stream_client.cc \
     src/core/ext/filters/deadline/deadline_filter.cc \
     src/core/ext/filters/fault_injection/fault_injection_filter.cc \
     src/core/ext/filters/fault_injection/service_config_parser.cc \
     src/core/ext/filters/http/client/http_client_filter.cc \
     src/core/ext/filters/http/client_authority_filter.cc \
     src/core/ext/filters/http/http_filters_plugin.cc \
     src/core/ext/filters/http/message_compress/message_compress_filter.cc \
     src/core/ext/filters/http/message_compress/message_decompress_filter.cc \
     src/core/ext/filters/http/server/http_server_filter.cc \
     src/core/ext/filters/message_size/message_size_filter.cc \
     src/core/ext/filters/rbac/rbac_filter.cc \
     src/core/ext/filters/rbac/rbac_service_config_parser.cc \
     src/core/ext/filters/server_config_selector/server_config_selector.cc \
     src/core/ext/filters/server_config_selector/server_config_selector_filter.cc \
     src/core/ext/transport/chttp2/alpn/alpn.cc \
     src/core/ext/transport/chttp2/client/chttp2_connector.cc \
     src/core/ext/transport/chttp2/server/chttp2_server.cc \
     src/core/ext/transport/chttp2/transport/bin_decoder.cc \
     src/core/ext/transport/chttp2/transport/bin_encoder.cc \
     src/core/ext/transport/chttp2/transport/chttp2_transport.cc \
     src/core/ext/transport/chttp2/transport/context_list.cc \
     src/core/ext/transport/chttp2/transport/flow_control.cc \
     src/core/ext/transport/chttp2/transport/frame_data.cc \
     src/core/ext/transport/chttp2/transport/frame_goaway.cc \
     src/core/ext/transport/chttp2/transport/frame_ping.cc \
     src/core/ext/transport/chttp2/transport/frame_rst_stream.cc \
     src/core/ext/transport/chttp2/transport/frame_settings.cc \
     src/core/ext/transport/chttp2/transport/frame_window_update.cc \
     src/core/ext/transport/chttp2/transport/hpack_encoder.cc \
     src/core/ext/transport/chttp2/transport/hpack_encoder_table.cc \
     src/core/ext/transport/chttp2/transport/hpack_parser.cc \
     src/core/ext/transport/chttp2/transport/hpack_parser_table.cc \
     src/core/ext/transport/chttp2/transport/http2_settings.cc \
     src/core/ext/transport/chttp2/transport/huffsyms.cc \
     src/core/ext/transport/chttp2/transport/parsing.cc \
     src/core/ext/transport/chttp2/transport/stream_lists.cc \
     src/core/ext/transport/chttp2/transport/stream_map.cc \
     src/core/ext/transport/chttp2/transport/varint.cc \
     src/core/ext/transport/chttp2/transport/writing.cc \
     src/core/ext/transport/inproc/inproc_plugin.cc \
     src/core/ext/transport/inproc/inproc_transport.cc \
     src/core/ext/upb-generated/envoy/admin/v3/certs.upb.c \
     src/core/ext/upb-generated/envoy/admin/v3/clusters.upb.c \
     src/core/ext/upb-generated/envoy/admin/v3/config_dump.upb.c \
     src/core/ext/upb-generated/envoy/admin/v3/init_dump.upb.c \
     src/core/ext/upb-generated/envoy/admin/v3/listeners.upb.c \
     src/core/ext/upb-generated/envoy/admin/v3/memory.upb.c \
     src/core/ext/upb-generated/envoy/admin/v3/metrics.upb.c \
     src/core/ext/upb-generated/envoy/admin/v3/mutex_stats.upb.c \
     src/core/ext/upb-generated/envoy/admin/v3/server_info.upb.c \
     src/core/ext/upb-generated/envoy/admin/v3/tap.upb.c \
     src/core/ext/upb-generated/envoy/annotations/deprecation.upb.c \
     src/core/ext/upb-generated/envoy/annotations/resource.upb.c \
     src/core/ext/upb-generated/envoy/config/accesslog/v3/accesslog.upb.c \
     src/core/ext/upb-generated/envoy/config/bootstrap/v3/bootstrap.upb.c \
     src/core/ext/upb-generated/envoy/config/cluster/v3/circuit_breaker.upb.c \
     src/core/ext/upb-generated/envoy/config/cluster/v3/cluster.upb.c \
     src/core/ext/upb-generated/envoy/config/cluster/v3/filter.upb.c \
     src/core/ext/upb-generated/envoy/config/cluster/v3/outlier_detection.upb.c \
     src/core/ext/upb-generated/envoy/config/common/matcher/v3/matcher.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/address.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/backoff.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/base.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/config_source.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/event_service_config.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/extension.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/grpc_method_list.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/grpc_service.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/health_check.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/http_uri.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/protocol.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/proxy_protocol.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/resolver.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/socket_option.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/substitution_format_string.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/udp_socket_config.upb.c \
     src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint.upb.c \
     src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint_components.upb.c \
     src/core/ext/upb-generated/envoy/config/endpoint/v3/load_report.upb.c \
     src/core/ext/upb-generated/envoy/config/listener/v3/api_listener.upb.c \
     src/core/ext/upb-generated/envoy/config/listener/v3/listener.upb.c \
     src/core/ext/upb-generated/envoy/config/listener/v3/listener_components.upb.c \
     src/core/ext/upb-generated/envoy/config/listener/v3/quic_config.upb.c \
     src/core/ext/upb-generated/envoy/config/listener/v3/udp_listener_config.upb.c \
     src/core/ext/upb-generated/envoy/config/metrics/v3/metrics_service.upb.c \
     src/core/ext/upb-generated/envoy/config/metrics/v3/stats.upb.c \
     src/core/ext/upb-generated/envoy/config/overload/v3/overload.upb.c \
     src/core/ext/upb-generated/envoy/config/rbac/v3/rbac.upb.c \
     src/core/ext/upb-generated/envoy/config/route/v3/route.upb.c \
     src/core/ext/upb-generated/envoy/config/route/v3/route_components.upb.c \
     src/core/ext/upb-generated/envoy/config/route/v3/scoped_route.upb.c \
     src/core/ext/upb-generated/envoy/config/tap/v3/common.upb.c \
     src/core/ext/upb-generated/envoy/config/trace/v3/datadog.upb.c \
     src/core/ext/upb-generated/envoy/config/trace/v3/dynamic_ot.upb.c \
     src/core/ext/upb-generated/envoy/config/trace/v3/http_tracer.upb.c \
     src/core/ext/upb-generated/envoy/config/trace/v3/lightstep.upb.c \
     src/core/ext/upb-generated/envoy/config/trace/v3/opencensus.upb.c \
     src/core/ext/upb-generated/envoy/config/trace/v3/service.upb.c \
     src/core/ext/upb-generated/envoy/config/trace/v3/skywalking.upb.c \
     src/core/ext/upb-generated/envoy/config/trace/v3/trace.upb.c \
     src/core/ext/upb-generated/envoy/config/trace/v3/xray.upb.c \
     src/core/ext/upb-generated/envoy/config/trace/v3/zipkin.upb.c \
     src/core/ext/upb-generated/envoy/extensions/clusters/aggregate/v3/cluster.upb.c \
     src/core/ext/upb-generated/envoy/extensions/filters/common/fault/v3/fault.upb.c \
     src/core/ext/upb-generated/envoy/extensions/filters/http/fault/v3/fault.upb.c \
     src/core/ext/upb-generated/envoy/extensions/filters/http/rbac/v3/rbac.upb.c \
     src/core/ext/upb-generated/envoy/extensions/filters/http/router/v3/router.upb.c \
     src/core/ext/upb-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upb.c \
     src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/ring_hash/v3/ring_hash.upb.c \
     src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/wrr_locality/v3/wrr_locality.upb.c \
     src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/cert.upb.c \
     src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/common.upb.c \
     src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/secret.upb.c \
     src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls.upb.c \
     src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upb.c \
     src/core/ext/upb-generated/envoy/service/discovery/v3/ads.upb.c \
     src/core/ext/upb-generated/envoy/service/discovery/v3/discovery.upb.c \
     src/core/ext/upb-generated/envoy/service/load_stats/v3/lrs.upb.c \
     src/core/ext/upb-generated/envoy/service/status/v3/csds.upb.c \
     src/core/ext/upb-generated/envoy/type/http/v3/cookie.upb.c \
     src/core/ext/upb-generated/envoy/type/http/v3/path_transformation.upb.c \
     src/core/ext/upb-generated/envoy/type/matcher/v3/http_inputs.upb.c \
     src/core/ext/upb-generated/envoy/type/matcher/v3/metadata.upb.c \
     src/core/ext/upb-generated/envoy/type/matcher/v3/node.upb.c \
     src/core/ext/upb-generated/envoy/type/matcher/v3/number.upb.c \
     src/core/ext/upb-generated/envoy/type/matcher/v3/path.upb.c \
     src/core/ext/upb-generated/envoy/type/matcher/v3/regex.upb.c \
     src/core/ext/upb-generated/envoy/type/matcher/v3/string.upb.c \
     src/core/ext/upb-generated/envoy/type/matcher/v3/struct.upb.c \
     src/core/ext/upb-generated/envoy/type/matcher/v3/value.upb.c \
     src/core/ext/upb-generated/envoy/type/metadata/v3/metadata.upb.c \
     src/core/ext/upb-generated/envoy/type/tracing/v3/custom_tag.upb.c \
     src/core/ext/upb-generated/envoy/type/v3/hash_policy.upb.c \
     src/core/ext/upb-generated/envoy/type/v3/http.upb.c \
     src/core/ext/upb-generated/envoy/type/v3/http_status.upb.c \
     src/core/ext/upb-generated/envoy/type/v3/percent.upb.c \
     src/core/ext/upb-generated/envoy/type/v3/range.upb.c \
     src/core/ext/upb-generated/envoy/type/v3/ratelimit_unit.upb.c \
     src/core/ext/upb-generated/envoy/type/v3/semantic_version.upb.c \
     src/core/ext/upb-generated/envoy/type/v3/token_bucket.upb.c \
     src/core/ext/upb-generated/google/api/annotations.upb.c \
     src/core/ext/upb-generated/google/api/expr/v1alpha1/checked.upb.c \
     src/core/ext/upb-generated/google/api/expr/v1alpha1/syntax.upb.c \
     src/core/ext/upb-generated/google/api/http.upb.c \
     src/core/ext/upb-generated/google/api/httpbody.upb.c \
     src/core/ext/upb-generated/google/protobuf/any.upb.c \
     src/core/ext/upb-generated/google/protobuf/descriptor.upb.c \
     src/core/ext/upb-generated/google/protobuf/duration.upb.c \
     src/core/ext/upb-generated/google/protobuf/empty.upb.c \
     src/core/ext/upb-generated/google/protobuf/struct.upb.c \
     src/core/ext/upb-generated/google/protobuf/timestamp.upb.c \
     src/core/ext/upb-generated/google/protobuf/wrappers.upb.c \
     src/core/ext/upb-generated/google/rpc/status.upb.c \
     src/core/ext/upb-generated/opencensus/proto/trace/v1/trace_config.upb.c \
     src/core/ext/upb-generated/src/proto/grpc/gcp/altscontext.upb.c \
     src/core/ext/upb-generated/src/proto/grpc/gcp/handshaker.upb.c \
     src/core/ext/upb-generated/src/proto/grpc/gcp/transport_security_common.upb.c \
     src/core/ext/upb-generated/src/proto/grpc/health/v1/health.upb.c \
     src/core/ext/upb-generated/src/proto/grpc/lb/v1/load_balancer.upb.c \
     src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls.upb.c \
     src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls_config.upb.c \
     src/core/ext/upb-generated/udpa/annotations/migrate.upb.c \
     src/core/ext/upb-generated/udpa/annotations/security.upb.c \
     src/core/ext/upb-generated/udpa/annotations/sensitive.upb.c \
     src/core/ext/upb-generated/udpa/annotations/status.upb.c \
     src/core/ext/upb-generated/udpa/annotations/versioning.upb.c \
     src/core/ext/upb-generated/validate/validate.upb.c \
     src/core/ext/upb-generated/xds/annotations/v3/migrate.upb.c \
     src/core/ext/upb-generated/xds/annotations/v3/security.upb.c \
     src/core/ext/upb-generated/xds/annotations/v3/sensitive.upb.c \
     src/core/ext/upb-generated/xds/annotations/v3/status.upb.c \
     src/core/ext/upb-generated/xds/annotations/v3/versioning.upb.c \
     src/core/ext/upb-generated/xds/core/v3/authority.upb.c \
     src/core/ext/upb-generated/xds/core/v3/collection_entry.upb.c \
     src/core/ext/upb-generated/xds/core/v3/context_params.upb.c \
     src/core/ext/upb-generated/xds/core/v3/extension.upb.c \
     src/core/ext/upb-generated/xds/core/v3/resource.upb.c \
     src/core/ext/upb-generated/xds/core/v3/resource_locator.upb.c \
     src/core/ext/upb-generated/xds/core/v3/resource_name.upb.c \
     src/core/ext/upb-generated/xds/data/orca/v3/orca_load_report.upb.c \
     src/core/ext/upb-generated/xds/service/orca/v3/orca.upb.c \
     src/core/ext/upb-generated/xds/type/matcher/v3/matcher.upb.c \
     src/core/ext/upb-generated/xds/type/matcher/v3/regex.upb.c \
     src/core/ext/upb-generated/xds/type/matcher/v3/string.upb.c \
     src/core/ext/upb-generated/xds/type/v3/typed_struct.upb.c \
     src/core/ext/upbdefs-generated/envoy/admin/v3/certs.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/admin/v3/clusters.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/admin/v3/config_dump.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/admin/v3/init_dump.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/admin/v3/listeners.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/admin/v3/memory.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/admin/v3/metrics.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/admin/v3/mutex_stats.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/admin/v3/server_info.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/admin/v3/tap.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/annotations/deprecation.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/annotations/resource.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/accesslog/v3/accesslog.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/bootstrap/v3/bootstrap.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/cluster/v3/circuit_breaker.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/cluster/v3/cluster.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/cluster/v3/filter.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/cluster/v3/outlier_detection.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/common/matcher/v3/matcher.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/address.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/backoff.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/base.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/config_source.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/event_service_config.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/extension.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_method_list.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_service.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/health_check.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/http_uri.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/protocol.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/proxy_protocol.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/resolver.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/socket_option.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/substitution_format_string.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/udp_socket_config.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint_components.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/load_report.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/listener/v3/api_listener.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener_components.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/listener/v3/quic_config.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/listener/v3/udp_listener_config.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/metrics/v3/metrics_service.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/metrics/v3/stats.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/overload/v3/overload.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/rbac/v3/rbac.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/route/v3/route.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/route/v3/route_components.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/route/v3/scoped_route.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/tap/v3/common.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/trace/v3/datadog.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/trace/v3/dynamic_ot.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/trace/v3/http_tracer.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/trace/v3/lightstep.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/trace/v3/opencensus.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/trace/v3/service.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/trace/v3/skywalking.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/trace/v3/trace.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/trace/v3/xray.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/trace/v3/zipkin.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/extensions/clusters/aggregate/v3/cluster.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/extensions/filters/common/fault/v3/fault.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/extensions/filters/http/fault/v3/fault.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/extensions/filters/http/rbac/v3/rbac.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/extensions/filters/http/router/v3/router.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/cert.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/common.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/secret.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/service/discovery/v3/ads.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/service/discovery/v3/discovery.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/service/load_stats/v3/lrs.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/service/status/v3/csds.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/http/v3/cookie.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/http/v3/path_transformation.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/matcher/v3/http_inputs.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/matcher/v3/metadata.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/matcher/v3/node.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/matcher/v3/number.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/matcher/v3/path.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/matcher/v3/regex.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/matcher/v3/string.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/matcher/v3/struct.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/matcher/v3/value.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/metadata/v3/metadata.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/tracing/v3/custom_tag.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/v3/hash_policy.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/v3/http.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/v3/http_status.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/v3/percent.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/v3/range.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/v3/ratelimit_unit.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/v3/semantic_version.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/v3/token_bucket.upbdefs.c \
     src/core/ext/upbdefs-generated/google/api/annotations.upbdefs.c \
     src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/checked.upbdefs.c \
     src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/syntax.upbdefs.c \
     src/core/ext/upbdefs-generated/google/api/http.upbdefs.c \
     src/core/ext/upbdefs-generated/google/api/httpbody.upbdefs.c \
     src/core/ext/upbdefs-generated/google/protobuf/any.upbdefs.c \
     src/core/ext/upbdefs-generated/google/protobuf/descriptor.upbdefs.c \
     src/core/ext/upbdefs-generated/google/protobuf/duration.upbdefs.c \
     src/core/ext/upbdefs-generated/google/protobuf/empty.upbdefs.c \
     src/core/ext/upbdefs-generated/google/protobuf/struct.upbdefs.c \
     src/core/ext/upbdefs-generated/google/protobuf/timestamp.upbdefs.c \
     src/core/ext/upbdefs-generated/google/protobuf/wrappers.upbdefs.c \
     src/core/ext/upbdefs-generated/google/rpc/status.upbdefs.c \
     src/core/ext/upbdefs-generated/opencensus/proto/trace/v1/trace_config.upbdefs.c \
     src/core/ext/upbdefs-generated/src/proto/grpc/lookup/v1/rls_config.upbdefs.c \
     src/core/ext/upbdefs-generated/udpa/annotations/migrate.upbdefs.c \
     src/core/ext/upbdefs-generated/udpa/annotations/security.upbdefs.c \
     src/core/ext/upbdefs-generated/udpa/annotations/sensitive.upbdefs.c \
     src/core/ext/upbdefs-generated/udpa/annotations/status.upbdefs.c \
     src/core/ext/upbdefs-generated/udpa/annotations/versioning.upbdefs.c \
     src/core/ext/upbdefs-generated/validate/validate.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/annotations/v3/migrate.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/annotations/v3/security.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/annotations/v3/sensitive.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/annotations/v3/status.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/annotations/v3/versioning.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/core/v3/authority.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/core/v3/collection_entry.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/core/v3/context_params.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/core/v3/extension.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/core/v3/resource.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/core/v3/resource_locator.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/core/v3/resource_name.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/type/matcher/v3/matcher.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/type/matcher/v3/regex.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/type/matcher/v3/string.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/type/v3/typed_struct.upbdefs.c \
     src/core/ext/xds/certificate_provider_registry.cc \
     src/core/ext/xds/certificate_provider_store.cc \
     src/core/ext/xds/file_watcher_certificate_provider_factory.cc \
     src/core/ext/xds/xds_api.cc \
     src/core/ext/xds/xds_bootstrap.cc \
     src/core/ext/xds/xds_certificate_provider.cc \
     src/core/ext/xds/xds_channel_stack_modifier.cc \
     src/core/ext/xds/xds_client.cc \
     src/core/ext/xds/xds_client_stats.cc \
     src/core/ext/xds/xds_cluster.cc \
     src/core/ext/xds/xds_cluster_specifier_plugin.cc \
     src/core/ext/xds/xds_common_types.cc \
     src/core/ext/xds/xds_endpoint.cc \
     src/core/ext/xds/xds_http_fault_filter.cc \
     src/core/ext/xds/xds_http_filters.cc \
     src/core/ext/xds/xds_http_rbac_filter.cc \
     src/core/ext/xds/xds_lb_policy_registry.cc \
     src/core/ext/xds/xds_listener.cc \
     src/core/ext/xds/xds_resource_type.cc \
     src/core/ext/xds/xds_route_config.cc \
     src/core/ext/xds/xds_routing.cc \
     src/core/ext/xds/xds_server_config_fetcher.cc \
     src/core/lib/address_utils/parse_address.cc \
     src/core/lib/address_utils/sockaddr_utils.cc \
     src/core/lib/backoff/backoff.cc \
     src/core/lib/channel/channel_args.cc \
     src/core/lib/channel/channel_args_preconditioning.cc \
     src/core/lib/channel/channel_stack.cc \
     src/core/lib/channel/channel_stack_builder.cc \
     src/core/lib/channel/channel_stack_builder_impl.cc \
     src/core/lib/channel/channel_trace.cc \
     src/core/lib/channel/channelz.cc \
     src/core/lib/channel/channelz_registry.cc \
     src/core/lib/channel/connected_channel.cc \
     src/core/lib/channel/promise_based_filter.cc \
     src/core/lib/channel/status_util.cc \
     src/core/lib/compression/compression.cc \
     src/core/lib/compression/compression_internal.cc \
     src/core/lib/compression/message_compress.cc \
     src/core/lib/config/core_configuration.cc \
     src/core/lib/debug/stats.cc \
     src/core/lib/debug/stats_data.cc \
     src/core/lib/debug/trace.cc \
     src/core/lib/event_engine/channel_args_endpoint_config.cc \
     src/core/lib/event_engine/default_event_engine_factory.cc \
     src/core/lib/event_engine/event_engine.cc \
     src/core/lib/event_engine/iomgr_engine.cc \
     src/core/lib/event_engine/memory_allocator.cc \
     src/core/lib/event_engine/resolved_address.cc \
     src/core/lib/event_engine/slice.cc \
     src/core/lib/event_engine/slice_buffer.cc \
     src/core/lib/event_engine/trace.cc \
     src/core/lib/gprpp/status_helper.cc \
     src/core/lib/gprpp/time.cc \
     src/core/lib/http/format_request.cc \
     src/core/lib/http/httpcli.cc \
     src/core/lib/http/httpcli_security_connector.cc \
     src/core/lib/http/parser.cc \
     src/core/lib/iomgr/buffer_list.cc \
     src/core/lib/iomgr/call_combiner.cc \
     src/core/lib/iomgr/cfstream_handle.cc \
     src/core/lib/iomgr/combiner.cc \
     src/core/lib/iomgr/dualstack_socket_posix.cc \
     src/core/lib/iomgr/endpoint.cc \
     src/core/lib/iomgr/endpoint_cfstream.cc \
     src/core/lib/iomgr/endpoint_pair_posix.cc \
     src/core/lib/iomgr/endpoint_pair_windows.cc \
     src/core/lib/iomgr/error.cc \
     src/core/lib/iomgr/error_cfstream.cc \
     src/core/lib/iomgr/ev_apple.cc \
     src/core/lib/iomgr/ev_epoll1_linux.cc \
     src/core/lib/iomgr/ev_poll_posix.cc \
     src/core/lib/iomgr/ev_posix.cc \
     src/core/lib/iomgr/ev_windows.cc \
     src/core/lib/iomgr/exec_ctx.cc \
     src/core/lib/iomgr/executor.cc \
     src/core/lib/iomgr/executor/mpmcqueue.cc \
     src/core/lib/iomgr/executor/threadpool.cc \
     src/core/lib/iomgr/fork_posix.cc \
     src/core/lib/iomgr/fork_windows.cc \
     src/core/lib/iomgr/gethostname_fallback.cc \
     src/core/lib/iomgr/gethostname_host_name_max.cc \
     src/core/lib/iomgr/gethostname_sysconf.cc \
     src/core/lib/iomgr/grpc_if_nametoindex_posix.cc \
     src/core/lib/iomgr/grpc_if_nametoindex_unsupported.cc \
     src/core/lib/iomgr/internal_errqueue.cc \
     src/core/lib/iomgr/iocp_windows.cc \
     src/core/lib/iomgr/iomgr.cc \
     src/core/lib/iomgr/iomgr_internal.cc \
     src/core/lib/iomgr/iomgr_posix.cc \
     src/core/lib/iomgr/iomgr_posix_cfstream.cc \
     src/core/lib/iomgr/iomgr_windows.cc \
     src/core/lib/iomgr/load_file.cc \
     src/core/lib/iomgr/lockfree_event.cc \
     src/core/lib/iomgr/polling_entity.cc \
     src/core/lib/iomgr/pollset.cc \
     src/core/lib/iomgr/pollset_set.cc \
     src/core/lib/iomgr/pollset_set_windows.cc \
     src/core/lib/iomgr/pollset_windows.cc \
     src/core/lib/iomgr/resolve_address.cc \
     src/core/lib/iomgr/resolve_address_posix.cc \
     src/core/lib/iomgr/resolve_address_windows.cc \
     src/core/lib/iomgr/sockaddr_utils_posix.cc \
     src/core/lib/iomgr/socket_factory_posix.cc \
     src/core/lib/iomgr/socket_mutator.cc \
     src/core/lib/iomgr/socket_utils_common_posix.cc \
     src/core/lib/iomgr/socket_utils_linux.cc \
     src/core/lib/iomgr/socket_utils_posix.cc \
     src/core/lib/iomgr/socket_utils_windows.cc \
     src/core/lib/iomgr/socket_windows.cc \
     src/core/lib/iomgr/tcp_client.cc \
     src/core/lib/iomgr/tcp_client_cfstream.cc \
     src/core/lib/iomgr/tcp_client_posix.cc \
     src/core/lib/iomgr/tcp_client_windows.cc \
     src/core/lib/iomgr/tcp_posix.cc \
     src/core/lib/iomgr/tcp_server.cc \
     src/core/lib/iomgr/tcp_server_posix.cc \
     src/core/lib/iomgr/tcp_server_utils_posix_common.cc \
     src/core/lib/iomgr/tcp_server_utils_posix_ifaddrs.cc \
     src/core/lib/iomgr/tcp_server_utils_posix_noifaddrs.cc \
     src/core/lib/iomgr/tcp_server_windows.cc \
     src/core/lib/iomgr/tcp_windows.cc \
     src/core/lib/iomgr/time_averaged_stats.cc \
     src/core/lib/iomgr/timer.cc \
     src/core/lib/iomgr/timer_generic.cc \
     src/core/lib/iomgr/timer_heap.cc \
     src/core/lib/iomgr/timer_manager.cc \
     src/core/lib/iomgr/unix_sockets_posix.cc \
     src/core/lib/iomgr/unix_sockets_posix_noop.cc \
     src/core/lib/iomgr/wakeup_fd_eventfd.cc \
     src/core/lib/iomgr/wakeup_fd_nospecial.cc \
     src/core/lib/iomgr/wakeup_fd_pipe.cc \
     src/core/lib/iomgr/wakeup_fd_posix.cc \
     src/core/lib/iomgr/work_serializer.cc \
     src/core/lib/json/json_reader.cc \
     src/core/lib/json/json_util.cc \
     src/core/lib/json/json_writer.cc \
     src/core/lib/matchers/matchers.cc \
     src/core/lib/promise/activity.cc \
     src/core/lib/promise/sleep.cc \
     src/core/lib/resolver/resolver.cc \
     src/core/lib/resolver/resolver_registry.cc \
     src/core/lib/resolver/server_address.cc \
     src/core/lib/resource_quota/api.cc \
     src/core/lib/resource_quota/arena.cc \
     src/core/lib/resource_quota/memory_quota.cc \
     src/core/lib/resource_quota/resource_quota.cc \
     src/core/lib/resource_quota/thread_quota.cc \
     src/core/lib/resource_quota/trace.cc \
     src/core/lib/security/authorization/authorization_policy_provider_vtable.cc \
     src/core/lib/security/authorization/evaluate_args.cc \
     src/core/lib/security/authorization/grpc_authorization_engine.cc \
     src/core/lib/security/authorization/grpc_server_authz_filter.cc \
     src/core/lib/security/authorization/matchers.cc \
     src/core/lib/security/authorization/rbac_policy.cc \
     src/core/lib/security/context/security_context.cc \
     src/core/lib/security/credentials/alts/alts_credentials.cc \
     src/core/lib/security/credentials/alts/check_gcp_environment.cc \
     src/core/lib/security/credentials/alts/check_gcp_environment_linux.cc \
     src/core/lib/security/credentials/alts/check_gcp_environment_no_op.cc \
     src/core/lib/security/credentials/alts/check_gcp_environment_windows.cc \
     src/core/lib/security/credentials/alts/grpc_alts_credentials_client_options.cc \
     src/core/lib/security/credentials/alts/grpc_alts_credentials_options.cc \
     src/core/lib/security/credentials/alts/grpc_alts_credentials_server_options.cc \
     src/core/lib/security/credentials/call_creds_util.cc \
     src/core/lib/security/credentials/channel_creds_registry_init.cc \
     src/core/lib/security/credentials/composite/composite_credentials.cc \
     src/core/lib/security/credentials/credentials.cc \
     src/core/lib/security/credentials/external/aws_external_account_credentials.cc \
     src/core/lib/security/credentials/external/aws_request_signer.cc \
     src/core/lib/security/credentials/external/external_account_credentials.cc \
     src/core/lib/security/credentials/external/file_external_account_credentials.cc \
     src/core/lib/security/credentials/external/url_external_account_credentials.cc \
     src/core/lib/security/credentials/fake/fake_credentials.cc \
     src/core/lib/security/credentials/google_default/credentials_generic.cc \
     src/core/lib/security/credentials/google_default/google_default_credentials.cc \
     src/core/lib/security/credentials/iam/iam_credentials.cc \
     src/core/lib/security/credentials/insecure/insecure_credentials.cc \
     src/core/lib/security/credentials/jwt/json_token.cc \
     src/core/lib/security/credentials/jwt/jwt_credentials.cc \
     src/core/lib/security/credentials/jwt/jwt_verifier.cc \
     src/core/lib/security/credentials/local/local_credentials.cc \
     src/core/lib/security/credentials/oauth2/oauth2_credentials.cc \
     src/core/lib/security/credentials/plugin/plugin_credentials.cc \
     src/core/lib/security/credentials/ssl/ssl_credentials.cc \
     src/core/lib/security/credentials/tls/grpc_tls_certificate_distributor.cc \
     src/core/lib/security/credentials/tls/grpc_tls_certificate_provider.cc \
     src/core/lib/security/credentials/tls/grpc_tls_certificate_verifier.cc \
     src/core/lib/security/credentials/tls/grpc_tls_credentials_options.cc \
     src/core/lib/security/credentials/tls/tls_credentials.cc \
     src/core/lib/security/credentials/tls/tls_utils.cc \
     src/core/lib/security/credentials/xds/xds_credentials.cc \
     src/core/lib/security/security_connector/alts/alts_security_connector.cc \
     src/core/lib/security/security_connector/fake/fake_security_connector.cc \
     src/core/lib/security/security_connector/insecure/insecure_security_connector.cc \
     src/core/lib/security/security_connector/load_system_roots_fallback.cc \
     src/core/lib/security/security_connector/load_system_roots_linux.cc \
     src/core/lib/security/security_connector/local/local_security_connector.cc \
     src/core/lib/security/security_connector/security_connector.cc \
     src/core/lib/security/security_connector/ssl/ssl_security_connector.cc \
     src/core/lib/security/security_connector/ssl_utils.cc \
     src/core/lib/security/security_connector/ssl_utils_config.cc \
     src/core/lib/security/security_connector/tls/tls_security_connector.cc \
     src/core/lib/security/transport/client_auth_filter.cc \
     src/core/lib/security/transport/secure_endpoint.cc \
     src/core/lib/security/transport/security_handshaker.cc \
     src/core/lib/security/transport/server_auth_filter.cc \
     src/core/lib/security/transport/tsi_error.cc \
     src/core/lib/security/util/json_util.cc \
     src/core/lib/service_config/service_config_impl.cc \
     src/core/lib/service_config/service_config_parser.cc \
     src/core/lib/slice/b64.cc \
     src/core/lib/slice/percent_encoding.cc \
     src/core/lib/slice/slice.cc \
     src/core/lib/slice/slice_api.cc \
     src/core/lib/slice/slice_buffer.cc \
     src/core/lib/slice/slice_buffer_api.cc \
     src/core/lib/slice/slice_refcount.cc \
     src/core/lib/slice/slice_split.cc \
     src/core/lib/slice/slice_string_helpers.cc \
     src/core/lib/surface/api_trace.cc \
     src/core/lib/surface/builtins.cc \
     src/core/lib/surface/byte_buffer.cc \
     src/core/lib/surface/byte_buffer_reader.cc \
     src/core/lib/surface/call.cc \
     src/core/lib/surface/call_details.cc \
     src/core/lib/surface/call_log_batch.cc \
     src/core/lib/surface/channel.cc \
     src/core/lib/surface/channel_init.cc \
     src/core/lib/surface/channel_ping.cc \
     src/core/lib/surface/channel_stack_type.cc \
     src/core/lib/surface/completion_queue.cc \
     src/core/lib/surface/completion_queue_factory.cc \
     src/core/lib/surface/event_string.cc \
     src/core/lib/surface/init.cc \
     src/core/lib/surface/lame_client.cc \
     src/core/lib/surface/metadata_array.cc \
     src/core/lib/surface/server.cc \
     src/core/lib/surface/validate_metadata.cc \
     src/core/lib/surface/version.cc \
     src/core/lib/transport/bdp_estimator.cc \
+    src/core/lib/transport/byte_stream.cc \
     src/core/lib/transport/connectivity_state.cc \
     src/core/lib/transport/error_utils.cc \
     src/core/lib/transport/handshaker.cc \
     src/core/lib/transport/handshaker_registry.cc \
     src/core/lib/transport/http_connect_handshaker.cc \
     src/core/lib/transport/metadata_batch.cc \
     src/core/lib/transport/parsed_metadata.cc \
     src/core/lib/transport/pid_controller.cc \
     src/core/lib/transport/status_conversion.cc \
     src/core/lib/transport/tcp_connect_handshaker.cc \
     src/core/lib/transport/timeout_encoding.cc \
     src/core/lib/transport/transport.cc \
     src/core/lib/transport/transport_op_string.cc \
     src/core/lib/uri/uri_parser.cc \
     src/core/plugin_registry/grpc_plugin_registry.cc \
     src/core/plugin_registry/grpc_plugin_registry_extra.cc \
     src/core/tsi/alts/crypt/aes_gcm.cc \
     src/core/tsi/alts/crypt/gsec.cc \
     src/core/tsi/alts/frame_protector/alts_counter.cc \
     src/core/tsi/alts/frame_protector/alts_crypter.cc \
     src/core/tsi/alts/frame_protector/alts_frame_protector.cc \
     src/core/tsi/alts/frame_protector/alts_record_protocol_crypter_common.cc \
     src/core/tsi/alts/frame_protector/alts_seal_privacy_integrity_crypter.cc \
     src/core/tsi/alts/frame_protector/alts_unseal_privacy_integrity_crypter.cc \
     src/core/tsi/alts/frame_protector/frame_handler.cc \
     src/core/tsi/alts/handshaker/alts_handshaker_client.cc \
     src/core/tsi/alts/handshaker/alts_shared_resource.cc \
     src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc \
     src/core/tsi/alts/handshaker/alts_tsi_utils.cc \
     src/core/tsi/alts/handshaker/transport_security_common_api.cc \
     src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_integrity_only_record_protocol.cc \
     src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_privacy_integrity_record_protocol.cc \
     src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol_common.cc \
     src/core/tsi/alts/zero_copy_frame_protector/alts_iovec_record_protocol.cc \
     src/core/tsi/alts/zero_copy_frame_protector/alts_zero_copy_grpc_protector.cc \
     src/core/tsi/fake_transport_security.cc \
     src/core/tsi/local_transport_security.cc \
     src/core/tsi/ssl/key_logging/ssl_key_logging.cc \
     src/core/tsi/ssl/session_cache/ssl_session_boringssl.cc \
     src/core/tsi/ssl/session_cache/ssl_session_cache.cc \
     src/core/tsi/ssl/session_cache/ssl_session_openssl.cc \
     src/core/tsi/ssl_transport_security.cc \
     src/core/tsi/transport_security.cc \
     src/core/tsi/transport_security_grpc.cc \
@@ -1777,308 +1778,309 @@ endif
 # start of build recipe for library "grpc_unsecure" (generated by makelib(lib) template function)
 LIBGRPC_UNSECURE_SRC = \
     src/core/ext/filters/census/grpc_context.cc \
     src/core/ext/filters/channel_idle/channel_idle_filter.cc \
     src/core/ext/filters/channel_idle/idle_filter_state.cc \
     src/core/ext/filters/client_channel/backend_metric.cc \
     src/core/ext/filters/client_channel/backup_poller.cc \
     src/core/ext/filters/client_channel/channel_connectivity.cc \
     src/core/ext/filters/client_channel/client_channel.cc \
     src/core/ext/filters/client_channel/client_channel_channelz.cc \
     src/core/ext/filters/client_channel/client_channel_factory.cc \
     src/core/ext/filters/client_channel/client_channel_plugin.cc \
     src/core/ext/filters/client_channel/config_selector.cc \
     src/core/ext/filters/client_channel/dynamic_filters.cc \
     src/core/ext/filters/client_channel/global_subchannel_pool.cc \
     src/core/ext/filters/client_channel/health/health_check_client.cc \
     src/core/ext/filters/client_channel/http_proxy.cc \
     src/core/ext/filters/client_channel/lb_policy.cc \
     src/core/ext/filters/client_channel/lb_policy/address_filtering.cc \
     src/core/ext/filters/client_channel/lb_policy/child_policy_handler.cc \
     src/core/ext/filters/client_channel/lb_policy/grpclb/client_load_reporting_filter.cc \
     src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc \
     src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_balancer_addresses.cc \
     src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_client_stats.cc \
     src/core/ext/filters/client_channel/lb_policy/grpclb/load_balancer_api.cc \
     src/core/ext/filters/client_channel/lb_policy/oob_backend_metric.cc \
     src/core/ext/filters/client_channel/lb_policy/outlier_detection/outlier_detection.cc \
     src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc \
     src/core/ext/filters/client_channel/lb_policy/priority/priority.cc \
     src/core/ext/filters/client_channel/lb_policy/ring_hash/ring_hash.cc \
     src/core/ext/filters/client_channel/lb_policy/rls/rls.cc \
     src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc \
     src/core/ext/filters/client_channel/lb_policy/weighted_target/weighted_target.cc \
     src/core/ext/filters/client_channel/lb_policy_registry.cc \
     src/core/ext/filters/client_channel/local_subchannel_pool.cc \
     src/core/ext/filters/client_channel/proxy_mapper_registry.cc \
     src/core/ext/filters/client_channel/resolver/binder/binder_resolver.cc \
     src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc \
     src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_posix.cc \
     src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_windows.cc \
     src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.cc \
     src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_posix.cc \
     src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_windows.cc \
     src/core/ext/filters/client_channel/resolver/dns/dns_resolver_selection.cc \
     src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc \
     src/core/ext/filters/client_channel/resolver/fake/fake_resolver.cc \
     src/core/ext/filters/client_channel/resolver/polling_resolver.cc \
     src/core/ext/filters/client_channel/resolver/sockaddr/sockaddr_resolver.cc \
     src/core/ext/filters/client_channel/resolver_result_parsing.cc \
     src/core/ext/filters/client_channel/retry_filter.cc \
     src/core/ext/filters/client_channel/retry_service_config.cc \
     src/core/ext/filters/client_channel/retry_throttle.cc \
     src/core/ext/filters/client_channel/service_config_channel_arg_filter.cc \
     src/core/ext/filters/client_channel/subchannel.cc \
     src/core/ext/filters/client_channel/subchannel_pool_interface.cc \
     src/core/ext/filters/client_channel/subchannel_stream_client.cc \
     src/core/ext/filters/deadline/deadline_filter.cc \
     src/core/ext/filters/fault_injection/fault_injection_filter.cc \
     src/core/ext/filters/fault_injection/service_config_parser.cc \
     src/core/ext/filters/http/client/http_client_filter.cc \
     src/core/ext/filters/http/client_authority_filter.cc \
     src/core/ext/filters/http/http_filters_plugin.cc \
     src/core/ext/filters/http/message_compress/message_compress_filter.cc \
     src/core/ext/filters/http/message_compress/message_decompress_filter.cc \
     src/core/ext/filters/http/server/http_server_filter.cc \
     src/core/ext/filters/message_size/message_size_filter.cc \
     src/core/ext/transport/chttp2/alpn/alpn.cc \
     src/core/ext/transport/chttp2/client/chttp2_connector.cc \
     src/core/ext/transport/chttp2/server/chttp2_server.cc \
     src/core/ext/transport/chttp2/transport/bin_decoder.cc \
     src/core/ext/transport/chttp2/transport/bin_encoder.cc \
     src/core/ext/transport/chttp2/transport/chttp2_transport.cc \
     src/core/ext/transport/chttp2/transport/context_list.cc \
     src/core/ext/transport/chttp2/transport/flow_control.cc \
     src/core/ext/transport/chttp2/transport/frame_data.cc \
     src/core/ext/transport/chttp2/transport/frame_goaway.cc \
     src/core/ext/transport/chttp2/transport/frame_ping.cc \
     src/core/ext/transport/chttp2/transport/frame_rst_stream.cc \
     src/core/ext/transport/chttp2/transport/frame_settings.cc \
     src/core/ext/transport/chttp2/transport/frame_window_update.cc \
     src/core/ext/transport/chttp2/transport/hpack_encoder.cc \
     src/core/ext/transport/chttp2/transport/hpack_encoder_table.cc \
     src/core/ext/transport/chttp2/transport/hpack_parser.cc \
     src/core/ext/transport/chttp2/transport/hpack_parser_table.cc \
     src/core/ext/transport/chttp2/transport/http2_settings.cc \
     src/core/ext/transport/chttp2/transport/huffsyms.cc \
     src/core/ext/transport/chttp2/transport/parsing.cc \
     src/core/ext/transport/chttp2/transport/stream_lists.cc \
     src/core/ext/transport/chttp2/transport/stream_map.cc \
     src/core/ext/transport/chttp2/transport/varint.cc \
     src/core/ext/transport/chttp2/transport/writing.cc \
     src/core/ext/transport/inproc/inproc_plugin.cc \
     src/core/ext/transport/inproc/inproc_transport.cc \
     src/core/ext/upb-generated/google/api/annotations.upb.c \
     src/core/ext/upb-generated/google/api/http.upb.c \
     src/core/ext/upb-generated/google/protobuf/any.upb.c \
     src/core/ext/upb-generated/google/protobuf/descriptor.upb.c \
     src/core/ext/upb-generated/google/protobuf/duration.upb.c \
     src/core/ext/upb-generated/google/protobuf/empty.upb.c \
     src/core/ext/upb-generated/google/protobuf/struct.upb.c \
     src/core/ext/upb-generated/google/protobuf/timestamp.upb.c \
     src/core/ext/upb-generated/google/protobuf/wrappers.upb.c \
     src/core/ext/upb-generated/google/rpc/status.upb.c \
     src/core/ext/upb-generated/src/proto/grpc/health/v1/health.upb.c \
     src/core/ext/upb-generated/src/proto/grpc/lb/v1/load_balancer.upb.c \
     src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls.upb.c \
     src/core/ext/upb-generated/validate/validate.upb.c \
     src/core/ext/upb-generated/xds/data/orca/v3/orca_load_report.upb.c \
     src/core/ext/upb-generated/xds/service/orca/v3/orca.upb.c \
     src/core/lib/address_utils/parse_address.cc \
     src/core/lib/address_utils/sockaddr_utils.cc \
     src/core/lib/backoff/backoff.cc \
     src/core/lib/channel/channel_args.cc \
     src/core/lib/channel/channel_args_preconditioning.cc \
     src/core/lib/channel/channel_stack.cc \
     src/core/lib/channel/channel_stack_builder.cc \
     src/core/lib/channel/channel_stack_builder_impl.cc \
     src/core/lib/channel/channel_trace.cc \
     src/core/lib/channel/channelz.cc \
     src/core/lib/channel/channelz_registry.cc \
     src/core/lib/channel/connected_channel.cc \
     src/core/lib/channel/promise_based_filter.cc \
     src/core/lib/channel/status_util.cc \
     src/core/lib/compression/compression.cc \
     src/core/lib/compression/compression_internal.cc \
     src/core/lib/compression/message_compress.cc \
     src/core/lib/config/core_configuration.cc \
     src/core/lib/debug/stats.cc \
     src/core/lib/debug/stats_data.cc \
     src/core/lib/debug/trace.cc \
     src/core/lib/event_engine/channel_args_endpoint_config.cc \
     src/core/lib/event_engine/default_event_engine_factory.cc \
     src/core/lib/event_engine/event_engine.cc \
     src/core/lib/event_engine/iomgr_engine.cc \
     src/core/lib/event_engine/memory_allocator.cc \
     src/core/lib/event_engine/resolved_address.cc \
     src/core/lib/event_engine/slice.cc \
     src/core/lib/event_engine/slice_buffer.cc \
     src/core/lib/event_engine/trace.cc \
     src/core/lib/gprpp/status_helper.cc \
     src/core/lib/gprpp/time.cc \
     src/core/lib/http/format_request.cc \
     src/core/lib/http/httpcli.cc \
     src/core/lib/http/parser.cc \
     src/core/lib/iomgr/buffer_list.cc \
     src/core/lib/iomgr/call_combiner.cc \
     src/core/lib/iomgr/cfstream_handle.cc \
     src/core/lib/iomgr/combiner.cc \
     src/core/lib/iomgr/dualstack_socket_posix.cc \
     src/core/lib/iomgr/endpoint.cc \
     src/core/lib/iomgr/endpoint_cfstream.cc \
     src/core/lib/iomgr/endpoint_pair_posix.cc \
     src/core/lib/iomgr/endpoint_pair_windows.cc \
     src/core/lib/iomgr/error.cc \
     src/core/lib/iomgr/error_cfstream.cc \
     src/core/lib/iomgr/ev_apple.cc \
     src/core/lib/iomgr/ev_epoll1_linux.cc \
     src/core/lib/iomgr/ev_poll_posix.cc \
     src/core/lib/iomgr/ev_posix.cc \
     src/core/lib/iomgr/ev_windows.cc \
     src/core/lib/iomgr/exec_ctx.cc \
     src/core/lib/iomgr/executor.cc \
     src/core/lib/iomgr/executor/mpmcqueue.cc \
     src/core/lib/iomgr/executor/threadpool.cc \
     src/core/lib/iomgr/fork_posix.cc \
     src/core/lib/iomgr/fork_windows.cc \
     src/core/lib/iomgr/gethostname_fallback.cc \
     src/core/lib/iomgr/gethostname_host_name_max.cc \
     src/core/lib/iomgr/gethostname_sysconf.cc \
     src/core/lib/iomgr/grpc_if_nametoindex_posix.cc \
     src/core/lib/iomgr/grpc_if_nametoindex_unsupported.cc \
     src/core/lib/iomgr/internal_errqueue.cc \
     src/core/lib/iomgr/iocp_windows.cc \
     src/core/lib/iomgr/iomgr.cc \
     src/core/lib/iomgr/iomgr_internal.cc \
     src/core/lib/iomgr/iomgr_posix.cc \
     src/core/lib/iomgr/iomgr_posix_cfstream.cc \
     src/core/lib/iomgr/iomgr_windows.cc \
     src/core/lib/iomgr/load_file.cc \
     src/core/lib/iomgr/lockfree_event.cc \
     src/core/lib/iomgr/polling_entity.cc \
     src/core/lib/iomgr/pollset.cc \
     src/core/lib/iomgr/pollset_set.cc \
     src/core/lib/iomgr/pollset_set_windows.cc \
     src/core/lib/iomgr/pollset_windows.cc \
     src/core/lib/iomgr/resolve_address.cc \
     src/core/lib/iomgr/resolve_address_posix.cc \
     src/core/lib/iomgr/resolve_address_windows.cc \
     src/core/lib/iomgr/sockaddr_utils_posix.cc \
     src/core/lib/iomgr/socket_factory_posix.cc \
     src/core/lib/iomgr/socket_mutator.cc \
     src/core/lib/iomgr/socket_utils_common_posix.cc \
     src/core/lib/iomgr/socket_utils_linux.cc \
     src/core/lib/iomgr/socket_utils_posix.cc \
     src/core/lib/iomgr/socket_utils_windows.cc \
     src/core/lib/iomgr/socket_windows.cc \
     src/core/lib/iomgr/tcp_client.cc \
     src/core/lib/iomgr/tcp_client_cfstream.cc \
     src/core/lib/iomgr/tcp_client_posix.cc \
     src/core/lib/iomgr/tcp_client_windows.cc \
     src/core/lib/iomgr/tcp_posix.cc \
     src/core/lib/iomgr/tcp_server.cc \
     src/core/lib/iomgr/tcp_server_posix.cc \
     src/core/lib/iomgr/tcp_server_utils_posix_common.cc \
     src/core/lib/iomgr/tcp_server_utils_posix_ifaddrs.cc \
     src/core/lib/iomgr/tcp_server_utils_posix_noifaddrs.cc \
     src/core/lib/iomgr/tcp_server_windows.cc \
     src/core/lib/iomgr/tcp_windows.cc \
     src/core/lib/iomgr/time_averaged_stats.cc \
     src/core/lib/iomgr/timer.cc \
     src/core/lib/iomgr/timer_generic.cc \
     src/core/lib/iomgr/timer_heap.cc \
     src/core/lib/iomgr/timer_manager.cc \
     src/core/lib/iomgr/unix_sockets_posix.cc \
     src/core/lib/iomgr/unix_sockets_posix_noop.cc \
     src/core/lib/iomgr/wakeup_fd_eventfd.cc \
     src/core/lib/iomgr/wakeup_fd_nospecial.cc \
     src/core/lib/iomgr/wakeup_fd_pipe.cc \
     src/core/lib/iomgr/wakeup_fd_posix.cc \
     src/core/lib/iomgr/work_serializer.cc \
     src/core/lib/json/json_reader.cc \
     src/core/lib/json/json_util.cc \
     src/core/lib/json/json_writer.cc \
     src/core/lib/promise/activity.cc \
     src/core/lib/promise/sleep.cc \
     src/core/lib/resolver/resolver.cc \
     src/core/lib/resolver/resolver_registry.cc \
     src/core/lib/resolver/server_address.cc \
     src/core/lib/resource_quota/api.cc \
     src/core/lib/resource_quota/arena.cc \
     src/core/lib/resource_quota/memory_quota.cc \
     src/core/lib/resource_quota/resource_quota.cc \
     src/core/lib/resource_quota/thread_quota.cc \
     src/core/lib/resource_quota/trace.cc \
     src/core/lib/security/authorization/authorization_policy_provider_vtable.cc \
     src/core/lib/security/authorization/evaluate_args.cc \
     src/core/lib/security/authorization/grpc_server_authz_filter.cc \
     src/core/lib/security/context/security_context.cc \
     src/core/lib/security/credentials/call_creds_util.cc \
     src/core/lib/security/credentials/composite/composite_credentials.cc \
     src/core/lib/security/credentials/credentials.cc \
     src/core/lib/security/credentials/fake/fake_credentials.cc \
     src/core/lib/security/credentials/insecure/insecure_credentials.cc \
     src/core/lib/security/credentials/plugin/plugin_credentials.cc \
     src/core/lib/security/credentials/tls/tls_utils.cc \
     src/core/lib/security/security_connector/fake/fake_security_connector.cc \
     src/core/lib/security/security_connector/insecure/insecure_security_connector.cc \
     src/core/lib/security/security_connector/load_system_roots_fallback.cc \
     src/core/lib/security/security_connector/load_system_roots_linux.cc \
     src/core/lib/security/security_connector/security_connector.cc \
     src/core/lib/security/transport/client_auth_filter.cc \
     src/core/lib/security/transport/secure_endpoint.cc \
     src/core/lib/security/transport/security_handshaker.cc \
     src/core/lib/security/transport/server_auth_filter.cc \
     src/core/lib/security/transport/tsi_error.cc \
     src/core/lib/security/util/json_util.cc \
     src/core/lib/service_config/service_config_impl.cc \
     src/core/lib/service_config/service_config_parser.cc \
     src/core/lib/slice/b64.cc \
     src/core/lib/slice/percent_encoding.cc \
     src/core/lib/slice/slice.cc \
     src/core/lib/slice/slice_api.cc \
     src/core/lib/slice/slice_buffer.cc \
     src/core/lib/slice/slice_buffer_api.cc \
     src/core/lib/slice/slice_refcount.cc \
     src/core/lib/slice/slice_split.cc \
     src/core/lib/slice/slice_string_helpers.cc \
     src/core/lib/surface/api_trace.cc \
     src/core/lib/surface/builtins.cc \
     src/core/lib/surface/byte_buffer.cc \
     src/core/lib/surface/byte_buffer_reader.cc \
     src/core/lib/surface/call.cc \
     src/core/lib/surface/call_details.cc \
     src/core/lib/surface/call_log_batch.cc \
     src/core/lib/surface/channel.cc \
     src/core/lib/surface/channel_init.cc \
     src/core/lib/surface/channel_ping.cc \
     src/core/lib/surface/channel_stack_type.cc \
     src/core/lib/surface/completion_queue.cc \
     src/core/lib/surface/completion_queue_factory.cc \
     src/core/lib/surface/event_string.cc \
     src/core/lib/surface/init.cc \
     src/core/lib/surface/lame_client.cc \
     src/core/lib/surface/metadata_array.cc \
     src/core/lib/surface/server.cc \
     src/core/lib/surface/validate_metadata.cc \
     src/core/lib/surface/version.cc \
     src/core/lib/transport/bdp_estimator.cc \
+    src/core/lib/transport/byte_stream.cc \
     src/core/lib/transport/connectivity_state.cc \
     src/core/lib/transport/error_utils.cc \
     src/core/lib/transport/handshaker.cc \
     src/core/lib/transport/handshaker_registry.cc \
     src/core/lib/transport/http_connect_handshaker.cc \
     src/core/lib/transport/metadata_batch.cc \
     src/core/lib/transport/parsed_metadata.cc \
     src/core/lib/transport/pid_controller.cc \
     src/core/lib/transport/status_conversion.cc \
     src/core/lib/transport/tcp_connect_handshaker.cc \
     src/core/lib/transport/timeout_encoding.cc \
     src/core/lib/transport/transport.cc \
     src/core/lib/transport/transport_op_string.cc \
     src/core/lib/uri/uri_parser.cc \
     src/core/plugin_registry/grpc_plugin_registry.cc \
     src/core/plugin_registry/grpc_plugin_registry_noextra.cc \
     src/core/tsi/fake_transport_security.cc \
     src/core/tsi/local_transport_security.cc \
     src/core/tsi/transport_security.cc \
     src/core/tsi/transport_security_grpc.cc \
diff --git a/build_autogenerated.yaml b/build_autogenerated.yaml
index a8f91658a9..6c977af0e2 100644
--- a/build_autogenerated.yaml
+++ b/build_autogenerated.yaml
@@ -2,9722 +2,9664 @@ filegroups: []
 libs:
 - name: address_sorting
   build: all
   language: c
   public_headers: []
   headers:
   - third_party/address_sorting/address_sorting_internal.h
   - third_party/address_sorting/include/address_sorting/address_sorting.h
   src:
   - third_party/address_sorting/address_sorting.c
   - third_party/address_sorting/address_sorting_posix.c
   - third_party/address_sorting/address_sorting_windows.c
   deps: []
 - name: end2end_tests
   build: private
   language: c
   public_headers:
   - include/grpc/byte_buffer.h
   - include/grpc/byte_buffer_reader.h
   - include/grpc/compression.h
   - include/grpc/fork.h
   - include/grpc/grpc.h
   - include/grpc/grpc_posix.h
   - include/grpc/grpc_security.h
   - include/grpc/grpc_security_constants.h
   - include/grpc/load_reporting.h
   - include/grpc/slice.h
   - include/grpc/slice_buffer.h
   - include/grpc/status.h
   - include/grpc/support/workaround_list.h
   headers:
   - src/core/lib/security/authorization/grpc_authorization_policy_provider.h
   - src/core/lib/security/authorization/rbac_translator.h
   - test/core/compression/args_utils.h
   - test/core/end2end/cq_verifier.h
   - test/core/end2end/data/ssl_test_data.h
   - test/core/end2end/end2end_tests.h
   - test/core/end2end/fixtures/http_proxy_fixture.h
   - test/core/end2end/fixtures/local_util.h
   - test/core/end2end/fixtures/proxy.h
   - test/core/end2end/tests/cancel_test_helpers.h
   - test/core/util/test_lb_policies.h
   src:
   - src/core/lib/security/authorization/grpc_authorization_policy_provider.cc
   - src/core/lib/security/authorization/rbac_translator.cc
   - test/core/compression/args_utils.cc
   - test/core/end2end/cq_verifier.cc
   - test/core/end2end/data/client_certs.cc
   - test/core/end2end/data/server1_cert.cc
   - test/core/end2end/data/server1_key.cc
   - test/core/end2end/data/test_root_cert.cc
   - test/core/end2end/end2end_test_utils.cc
   - test/core/end2end/end2end_tests.cc
   - test/core/end2end/fixtures/http_proxy_fixture.cc
   - test/core/end2end/fixtures/local_util.cc
   - test/core/end2end/fixtures/proxy.cc
   - test/core/end2end/tests/authority_not_supported.cc
   - test/core/end2end/tests/bad_hostname.cc
   - test/core/end2end/tests/bad_ping.cc
   - test/core/end2end/tests/binary_metadata.cc
   - test/core/end2end/tests/call_creds.cc
   - test/core/end2end/tests/call_host_override.cc
   - test/core/end2end/tests/cancel_after_accept.cc
   - test/core/end2end/tests/cancel_after_client_done.cc
   - test/core/end2end/tests/cancel_after_invoke.cc
   - test/core/end2end/tests/cancel_after_round_trip.cc
   - test/core/end2end/tests/cancel_before_invoke.cc
   - test/core/end2end/tests/cancel_in_a_vacuum.cc
   - test/core/end2end/tests/cancel_with_status.cc
   - test/core/end2end/tests/channelz.cc
   - test/core/end2end/tests/client_streaming.cc
   - test/core/end2end/tests/compressed_payload.cc
   - test/core/end2end/tests/connectivity.cc
   - test/core/end2end/tests/default_host.cc
   - test/core/end2end/tests/disappearing_server.cc
   - test/core/end2end/tests/empty_batch.cc
   - test/core/end2end/tests/filter_causes_close.cc
   - test/core/end2end/tests/filter_context.cc
   - test/core/end2end/tests/filter_init_fails.cc
   - test/core/end2end/tests/filter_latency.cc
   - test/core/end2end/tests/filter_status_code.cc
   - test/core/end2end/tests/filtered_metadata.cc
   - test/core/end2end/tests/graceful_server_shutdown.cc
   - test/core/end2end/tests/grpc_authz.cc
   - test/core/end2end/tests/high_initial_seqno.cc
   - test/core/end2end/tests/hpack_size.cc
   - test/core/end2end/tests/invoke_large_request.cc
   - test/core/end2end/tests/keepalive_timeout.cc
   - test/core/end2end/tests/large_metadata.cc
   - test/core/end2end/tests/max_concurrent_streams.cc
   - test/core/end2end/tests/max_connection_age.cc
   - test/core/end2end/tests/max_connection_idle.cc
   - test/core/end2end/tests/max_message_length.cc
   - test/core/end2end/tests/negative_deadline.cc
   - test/core/end2end/tests/no_error_on_hotpath.cc
   - test/core/end2end/tests/no_logging.cc
   - test/core/end2end/tests/no_op.cc
   - test/core/end2end/tests/payload.cc
   - test/core/end2end/tests/ping.cc
   - test/core/end2end/tests/ping_pong_streaming.cc
   - test/core/end2end/tests/proxy_auth.cc
   - test/core/end2end/tests/registered_call.cc
   - test/core/end2end/tests/request_with_flags.cc
   - test/core/end2end/tests/request_with_payload.cc
   - test/core/end2end/tests/resource_quota_server.cc
   - test/core/end2end/tests/retry.cc
   - test/core/end2end/tests/retry_cancel_after_first_attempt_starts.cc
   - test/core/end2end/tests/retry_cancel_during_delay.cc
   - test/core/end2end/tests/retry_cancel_with_multiple_send_batches.cc
   - test/core/end2end/tests/retry_cancellation.cc
   - test/core/end2end/tests/retry_disabled.cc
   - test/core/end2end/tests/retry_exceeds_buffer_size_in_delay.cc
   - test/core/end2end/tests/retry_exceeds_buffer_size_in_initial_batch.cc
   - test/core/end2end/tests/retry_exceeds_buffer_size_in_subsequent_batch.cc
   - test/core/end2end/tests/retry_lb_drop.cc
   - test/core/end2end/tests/retry_lb_fail.cc
   - test/core/end2end/tests/retry_non_retriable_status.cc
   - test/core/end2end/tests/retry_non_retriable_status_before_recv_trailing_metadata_started.cc
   - test/core/end2end/tests/retry_per_attempt_recv_timeout.cc
   - test/core/end2end/tests/retry_per_attempt_recv_timeout_on_last_attempt.cc
   - test/core/end2end/tests/retry_recv_initial_metadata.cc
   - test/core/end2end/tests/retry_recv_message.cc
   - test/core/end2end/tests/retry_recv_message_replay.cc
   - test/core/end2end/tests/retry_recv_trailing_metadata_error.cc
   - test/core/end2end/tests/retry_send_initial_metadata_refs.cc
   - test/core/end2end/tests/retry_send_op_fails.cc
   - test/core/end2end/tests/retry_send_recv_batch.cc
   - test/core/end2end/tests/retry_server_pushback_delay.cc
   - test/core/end2end/tests/retry_server_pushback_disabled.cc
   - test/core/end2end/tests/retry_streaming.cc
   - test/core/end2end/tests/retry_streaming_after_commit.cc
   - test/core/end2end/tests/retry_streaming_succeeds_before_replay_finished.cc
   - test/core/end2end/tests/retry_throttled.cc
   - test/core/end2end/tests/retry_too_many_attempts.cc
   - test/core/end2end/tests/retry_transparent_goaway.cc
   - test/core/end2end/tests/retry_transparent_max_concurrent_streams.cc
   - test/core/end2end/tests/retry_transparent_not_sent_on_wire.cc
   - test/core/end2end/tests/retry_unref_before_finish.cc
   - test/core/end2end/tests/retry_unref_before_recv.cc
   - test/core/end2end/tests/server_finishes_request.cc
   - test/core/end2end/tests/server_streaming.cc
   - test/core/end2end/tests/shutdown_finishes_calls.cc
   - test/core/end2end/tests/shutdown_finishes_tags.cc
   - test/core/end2end/tests/simple_delayed_request.cc
   - test/core/end2end/tests/simple_metadata.cc
   - test/core/end2end/tests/simple_request.cc
   - test/core/end2end/tests/streaming_error_response.cc
   - test/core/end2end/tests/trailing_metadata.cc
   - test/core/end2end/tests/write_buffering.cc
   - test/core/end2end/tests/write_buffering_at_end.cc
   - test/core/util/test_lb_policies.cc
   deps:
   - grpc_test_util
 - name: gpr
   build: all
   language: c
   public_headers:
   - include/grpc/impl/codegen/atm.h
   - include/grpc/impl/codegen/atm_gcc_atomic.h
   - include/grpc/impl/codegen/atm_gcc_sync.h
   - include/grpc/impl/codegen/atm_windows.h
   - include/grpc/impl/codegen/byte_buffer.h
   - include/grpc/impl/codegen/byte_buffer_reader.h
   - include/grpc/impl/codegen/compression_types.h
   - include/grpc/impl/codegen/connectivity_state.h
   - include/grpc/impl/codegen/fork.h
   - include/grpc/impl/codegen/gpr_slice.h
   - include/grpc/impl/codegen/gpr_types.h
   - include/grpc/impl/codegen/grpc_types.h
   - include/grpc/impl/codegen/log.h
   - include/grpc/impl/codegen/port_platform.h
   - include/grpc/impl/codegen/propagation_bits.h
   - include/grpc/impl/codegen/slice.h
   - include/grpc/impl/codegen/status.h
   - include/grpc/impl/codegen/sync.h
   - include/grpc/impl/codegen/sync_abseil.h
   - include/grpc/impl/codegen/sync_custom.h
   - include/grpc/impl/codegen/sync_generic.h
   - include/grpc/impl/codegen/sync_posix.h
   - include/grpc/impl/codegen/sync_windows.h
   - include/grpc/support/alloc.h
   - include/grpc/support/atm.h
   - include/grpc/support/atm_gcc_atomic.h
   - include/grpc/support/atm_gcc_sync.h
   - include/grpc/support/atm_windows.h
   - include/grpc/support/cpu.h
   - include/grpc/support/log.h
   - include/grpc/support/log_windows.h
   - include/grpc/support/port_platform.h
   - include/grpc/support/string_util.h
   - include/grpc/support/sync.h
   - include/grpc/support/sync_abseil.h
   - include/grpc/support/sync_custom.h
   - include/grpc/support/sync_generic.h
   - include/grpc/support/sync_posix.h
   - include/grpc/support/sync_windows.h
   - include/grpc/support/thd_id.h
   - include/grpc/support/time.h
   headers:
   - src/core/lib/gpr/alloc.h
   - src/core/lib/gpr/env.h
   - src/core/lib/gpr/murmur_hash.h
   - src/core/lib/gpr/spinlock.h
   - src/core/lib/gpr/string.h
   - src/core/lib/gpr/string_windows.h
   - src/core/lib/gpr/time_precise.h
   - src/core/lib/gpr/tls.h
   - src/core/lib/gpr/tmpfile.h
   - src/core/lib/gpr/useful.h
   - src/core/lib/gprpp/construct_destruct.h
   - src/core/lib/gprpp/debug_location.h
   - src/core/lib/gprpp/examine_stack.h
   - src/core/lib/gprpp/fork.h
   - src/core/lib/gprpp/global_config.h
   - src/core/lib/gprpp/global_config_custom.h
   - src/core/lib/gprpp/global_config_env.h
   - src/core/lib/gprpp/global_config_generic.h
   - src/core/lib/gprpp/host_port.h
   - src/core/lib/gprpp/manual_constructor.h
   - src/core/lib/gprpp/memory.h
   - src/core/lib/gprpp/mpscq.h
   - src/core/lib/gprpp/stat.h
   - src/core/lib/gprpp/sync.h
   - src/core/lib/gprpp/thd.h
   - src/core/lib/gprpp/time_util.h
   - src/core/lib/profiling/timers.h
   src:
   - src/core/lib/gpr/alloc.cc
   - src/core/lib/gpr/atm.cc
   - src/core/lib/gpr/cpu_iphone.cc
   - src/core/lib/gpr/cpu_linux.cc
   - src/core/lib/gpr/cpu_posix.cc
   - src/core/lib/gpr/cpu_windows.cc
   - src/core/lib/gpr/env_linux.cc
   - src/core/lib/gpr/env_posix.cc
   - src/core/lib/gpr/env_windows.cc
   - src/core/lib/gpr/log.cc
   - src/core/lib/gpr/log_android.cc
   - src/core/lib/gpr/log_linux.cc
   - src/core/lib/gpr/log_posix.cc
   - src/core/lib/gpr/log_windows.cc
   - src/core/lib/gpr/murmur_hash.cc
   - src/core/lib/gpr/string.cc
   - src/core/lib/gpr/string_posix.cc
   - src/core/lib/gpr/string_util_windows.cc
   - src/core/lib/gpr/string_windows.cc
   - src/core/lib/gpr/sync.cc
   - src/core/lib/gpr/sync_abseil.cc
   - src/core/lib/gpr/sync_posix.cc
   - src/core/lib/gpr/sync_windows.cc
   - src/core/lib/gpr/time.cc
   - src/core/lib/gpr/time_posix.cc
   - src/core/lib/gpr/time_precise.cc
   - src/core/lib/gpr/time_windows.cc
   - src/core/lib/gpr/tmpfile_msys.cc
   - src/core/lib/gpr/tmpfile_posix.cc
   - src/core/lib/gpr/tmpfile_windows.cc
   - src/core/lib/gpr/wrap_memcpy.cc
   - src/core/lib/gprpp/examine_stack.cc
   - src/core/lib/gprpp/fork.cc
   - src/core/lib/gprpp/global_config_env.cc
   - src/core/lib/gprpp/host_port.cc
   - src/core/lib/gprpp/mpscq.cc
   - src/core/lib/gprpp/stat_posix.cc
   - src/core/lib/gprpp/stat_windows.cc
   - src/core/lib/gprpp/thd_posix.cc
   - src/core/lib/gprpp/thd_windows.cc
   - src/core/lib/gprpp/time_util.cc
   - src/core/lib/profiling/basic_timers.cc
   - src/core/lib/profiling/stap_timers.cc
   deps:
   - absl/base:base
   - absl/base:core_headers
   - absl/memory:memory
   - absl/random:random
   - absl/status:status
   - absl/strings:cord
   - absl/strings:str_format
   - absl/strings:strings
   - absl/synchronization:synchronization
   - absl/time:time
   - absl/types:optional
 - name: grpc
   build: all
   language: c
   public_headers:
   - include/grpc/byte_buffer.h
   - include/grpc/byte_buffer_reader.h
   - include/grpc/census.h
   - include/grpc/compression.h
   - include/grpc/event_engine/endpoint_config.h
   - include/grpc/event_engine/event_engine.h
   - include/grpc/event_engine/internal/memory_allocator_impl.h
   - include/grpc/event_engine/memory_allocator.h
   - include/grpc/event_engine/memory_request.h
   - include/grpc/event_engine/port.h
   - include/grpc/event_engine/slice.h
   - include/grpc/event_engine/slice_buffer.h
   - include/grpc/fork.h
   - include/grpc/grpc.h
   - include/grpc/grpc_posix.h
   - include/grpc/grpc_security.h
   - include/grpc/grpc_security_constants.h
   - include/grpc/load_reporting.h
   - include/grpc/slice.h
   - include/grpc/slice_buffer.h
   - include/grpc/status.h
   - include/grpc/support/alloc.h
   - include/grpc/support/atm.h
   - include/grpc/support/atm_gcc_atomic.h
   - include/grpc/support/atm_gcc_sync.h
   - include/grpc/support/atm_windows.h
   - include/grpc/support/cpu.h
   - include/grpc/support/log.h
   - include/grpc/support/log_windows.h
   - include/grpc/support/port_platform.h
   - include/grpc/support/string_util.h
   - include/grpc/support/sync.h
   - include/grpc/support/sync_abseil.h
   - include/grpc/support/sync_custom.h
   - include/grpc/support/sync_generic.h
   - include/grpc/support/sync_posix.h
   - include/grpc/support/sync_windows.h
   - include/grpc/support/thd_id.h
   - include/grpc/support/time.h
   - include/grpc/support/workaround_list.h
   headers:
   - src/core/ext/filters/channel_idle/channel_idle_filter.h
   - src/core/ext/filters/channel_idle/idle_filter_state.h
   - src/core/ext/filters/client_channel/backend_metric.h
   - src/core/ext/filters/client_channel/backup_poller.h
   - src/core/ext/filters/client_channel/client_channel.h
   - src/core/ext/filters/client_channel/client_channel_channelz.h
   - src/core/ext/filters/client_channel/client_channel_factory.h
   - src/core/ext/filters/client_channel/config_selector.h
   - src/core/ext/filters/client_channel/connector.h
   - src/core/ext/filters/client_channel/dynamic_filters.h
   - src/core/ext/filters/client_channel/global_subchannel_pool.h
   - src/core/ext/filters/client_channel/health/health_check_client.h
   - src/core/ext/filters/client_channel/http_proxy.h
   - src/core/ext/filters/client_channel/lb_policy.h
   - src/core/ext/filters/client_channel/lb_policy/address_filtering.h
   - src/core/ext/filters/client_channel/lb_policy/backend_metric_data.h
   - src/core/ext/filters/client_channel/lb_policy/child_policy_handler.h
   - src/core/ext/filters/client_channel/lb_policy/grpclb/client_load_reporting_filter.h
   - src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.h
   - src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_balancer_addresses.h
   - src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_client_stats.h
   - src/core/ext/filters/client_channel/lb_policy/grpclb/load_balancer_api.h
   - src/core/ext/filters/client_channel/lb_policy/oob_backend_metric.h
   - src/core/ext/filters/client_channel/lb_policy/outlier_detection/outlier_detection.h
   - src/core/ext/filters/client_channel/lb_policy/ring_hash/ring_hash.h
   - src/core/ext/filters/client_channel/lb_policy/subchannel_list.h
   - src/core/ext/filters/client_channel/lb_policy/xds/xds.h
   - src/core/ext/filters/client_channel/lb_policy/xds/xds_channel_args.h
   - src/core/ext/filters/client_channel/lb_policy_factory.h
   - src/core/ext/filters/client_channel/lb_policy_registry.h
   - src/core/ext/filters/client_channel/local_subchannel_pool.h
   - src/core/ext/filters/client_channel/proxy_mapper.h
   - src/core/ext/filters/client_channel/proxy_mapper_registry.h
   - src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver.h
   - src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.h
   - src/core/ext/filters/client_channel/resolver/dns/dns_resolver_selection.h
   - src/core/ext/filters/client_channel/resolver/fake/fake_resolver.h
   - src/core/ext/filters/client_channel/resolver/polling_resolver.h
   - src/core/ext/filters/client_channel/resolver/xds/xds_resolver.h
   - src/core/ext/filters/client_channel/resolver_result_parsing.h
   - src/core/ext/filters/client_channel/retry_filter.h
   - src/core/ext/filters/client_channel/retry_service_config.h
   - src/core/ext/filters/client_channel/retry_throttle.h
   - src/core/ext/filters/client_channel/subchannel.h
   - src/core/ext/filters/client_channel/subchannel_interface.h
   - src/core/ext/filters/client_channel/subchannel_interface_internal.h
   - src/core/ext/filters/client_channel/subchannel_pool_interface.h
   - src/core/ext/filters/client_channel/subchannel_stream_client.h
   - src/core/ext/filters/deadline/deadline_filter.h
   - src/core/ext/filters/fault_injection/fault_injection_filter.h
   - src/core/ext/filters/fault_injection/service_config_parser.h
   - src/core/ext/filters/http/client/http_client_filter.h
   - src/core/ext/filters/http/client_authority_filter.h
   - src/core/ext/filters/http/message_compress/message_compress_filter.h
   - src/core/ext/filters/http/message_compress/message_decompress_filter.h
   - src/core/ext/filters/http/server/http_server_filter.h
   - src/core/ext/filters/message_size/message_size_filter.h
   - src/core/ext/filters/rbac/rbac_filter.h
   - src/core/ext/filters/rbac/rbac_service_config_parser.h
   - src/core/ext/filters/server_config_selector/server_config_selector.h
   - src/core/ext/filters/server_config_selector/server_config_selector_filter.h
   - src/core/ext/transport/chttp2/alpn/alpn.h
   - src/core/ext/transport/chttp2/client/chttp2_connector.h
   - src/core/ext/transport/chttp2/server/chttp2_server.h
   - src/core/ext/transport/chttp2/transport/bin_decoder.h
   - src/core/ext/transport/chttp2/transport/bin_encoder.h
   - src/core/ext/transport/chttp2/transport/chttp2_transport.h
   - src/core/ext/transport/chttp2/transport/context_list.h
   - src/core/ext/transport/chttp2/transport/flow_control.h
   - src/core/ext/transport/chttp2/transport/frame.h
   - src/core/ext/transport/chttp2/transport/frame_data.h
   - src/core/ext/transport/chttp2/transport/frame_goaway.h
   - src/core/ext/transport/chttp2/transport/frame_ping.h
   - src/core/ext/transport/chttp2/transport/frame_rst_stream.h
   - src/core/ext/transport/chttp2/transport/frame_settings.h
   - src/core/ext/transport/chttp2/transport/frame_window_update.h
   - src/core/ext/transport/chttp2/transport/hpack_constants.h
   - src/core/ext/transport/chttp2/transport/hpack_encoder.h
   - src/core/ext/transport/chttp2/transport/hpack_encoder_table.h
   - src/core/ext/transport/chttp2/transport/hpack_parser.h
   - src/core/ext/transport/chttp2/transport/hpack_parser_table.h
   - src/core/ext/transport/chttp2/transport/http2_settings.h
   - src/core/ext/transport/chttp2/transport/huffsyms.h
   - src/core/ext/transport/chttp2/transport/internal.h
   - src/core/ext/transport/chttp2/transport/stream_map.h
   - src/core/ext/transport/chttp2/transport/varint.h
   - src/core/ext/transport/inproc/inproc_transport.h
   - src/core/ext/upb-generated/envoy/admin/v3/certs.upb.h
   - src/core/ext/upb-generated/envoy/admin/v3/clusters.upb.h
   - src/core/ext/upb-generated/envoy/admin/v3/config_dump.upb.h
   - src/core/ext/upb-generated/envoy/admin/v3/init_dump.upb.h
   - src/core/ext/upb-generated/envoy/admin/v3/listeners.upb.h
   - src/core/ext/upb-generated/envoy/admin/v3/memory.upb.h
   - src/core/ext/upb-generated/envoy/admin/v3/metrics.upb.h
   - src/core/ext/upb-generated/envoy/admin/v3/mutex_stats.upb.h
   - src/core/ext/upb-generated/envoy/admin/v3/server_info.upb.h
   - src/core/ext/upb-generated/envoy/admin/v3/tap.upb.h
   - src/core/ext/upb-generated/envoy/annotations/deprecation.upb.h
   - src/core/ext/upb-generated/envoy/annotations/resource.upb.h
   - src/core/ext/upb-generated/envoy/config/accesslog/v3/accesslog.upb.h
   - src/core/ext/upb-generated/envoy/config/bootstrap/v3/bootstrap.upb.h
   - src/core/ext/upb-generated/envoy/config/cluster/v3/circuit_breaker.upb.h
   - src/core/ext/upb-generated/envoy/config/cluster/v3/cluster.upb.h
   - src/core/ext/upb-generated/envoy/config/cluster/v3/filter.upb.h
   - src/core/ext/upb-generated/envoy/config/cluster/v3/outlier_detection.upb.h
   - src/core/ext/upb-generated/envoy/config/common/matcher/v3/matcher.upb.h
   - src/core/ext/upb-generated/envoy/config/core/v3/address.upb.h
   - src/core/ext/upb-generated/envoy/config/core/v3/backoff.upb.h
   - src/core/ext/upb-generated/envoy/config/core/v3/base.upb.h
   - src/core/ext/upb-generated/envoy/config/core/v3/config_source.upb.h
   - src/core/ext/upb-generated/envoy/config/core/v3/event_service_config.upb.h
   - src/core/ext/upb-generated/envoy/config/core/v3/extension.upb.h
   - src/core/ext/upb-generated/envoy/config/core/v3/grpc_method_list.upb.h
   - src/core/ext/upb-generated/envoy/config/core/v3/grpc_service.upb.h
   - src/core/ext/upb-generated/envoy/config/core/v3/health_check.upb.h
   - src/core/ext/upb-generated/envoy/config/core/v3/http_uri.upb.h
   - src/core/ext/upb-generated/envoy/config/core/v3/protocol.upb.h
   - src/core/ext/upb-generated/envoy/config/core/v3/proxy_protocol.upb.h
   - src/core/ext/upb-generated/envoy/config/core/v3/resolver.upb.h
   - src/core/ext/upb-generated/envoy/config/core/v3/socket_option.upb.h
   - src/core/ext/upb-generated/envoy/config/core/v3/substitution_format_string.upb.h
   - src/core/ext/upb-generated/envoy/config/core/v3/udp_socket_config.upb.h
   - src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint.upb.h
   - src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint_components.upb.h
   - src/core/ext/upb-generated/envoy/config/endpoint/v3/load_report.upb.h
   - src/core/ext/upb-generated/envoy/config/listener/v3/api_listener.upb.h
   - src/core/ext/upb-generated/envoy/config/listener/v3/listener.upb.h
   - src/core/ext/upb-generated/envoy/config/listener/v3/listener_components.upb.h
   - src/core/ext/upb-generated/envoy/config/listener/v3/quic_config.upb.h
   - src/core/ext/upb-generated/envoy/config/listener/v3/udp_listener_config.upb.h
   - src/core/ext/upb-generated/envoy/config/metrics/v3/metrics_service.upb.h
   - src/core/ext/upb-generated/envoy/config/metrics/v3/stats.upb.h
   - src/core/ext/upb-generated/envoy/config/overload/v3/overload.upb.h
   - src/core/ext/upb-generated/envoy/config/rbac/v3/rbac.upb.h
   - src/core/ext/upb-generated/envoy/config/route/v3/route.upb.h
   - src/core/ext/upb-generated/envoy/config/route/v3/route_components.upb.h
   - src/core/ext/upb-generated/envoy/config/route/v3/scoped_route.upb.h
   - src/core/ext/upb-generated/envoy/config/tap/v3/common.upb.h
   - src/core/ext/upb-generated/envoy/config/trace/v3/datadog.upb.h
   - src/core/ext/upb-generated/envoy/config/trace/v3/dynamic_ot.upb.h
   - src/core/ext/upb-generated/envoy/config/trace/v3/http_tracer.upb.h
   - src/core/ext/upb-generated/envoy/config/trace/v3/lightstep.upb.h
   - src/core/ext/upb-generated/envoy/config/trace/v3/opencensus.upb.h
   - src/core/ext/upb-generated/envoy/config/trace/v3/service.upb.h
   - src/core/ext/upb-generated/envoy/config/trace/v3/skywalking.upb.h
   - src/core/ext/upb-generated/envoy/config/trace/v3/trace.upb.h
   - src/core/ext/upb-generated/envoy/config/trace/v3/xray.upb.h
   - src/core/ext/upb-generated/envoy/config/trace/v3/zipkin.upb.h
   - src/core/ext/upb-generated/envoy/extensions/clusters/aggregate/v3/cluster.upb.h
   - src/core/ext/upb-generated/envoy/extensions/filters/common/fault/v3/fault.upb.h
   - src/core/ext/upb-generated/envoy/extensions/filters/http/fault/v3/fault.upb.h
   - src/core/ext/upb-generated/envoy/extensions/filters/http/rbac/v3/rbac.upb.h
   - src/core/ext/upb-generated/envoy/extensions/filters/http/router/v3/router.upb.h
   - src/core/ext/upb-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upb.h
   - src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/ring_hash/v3/ring_hash.upb.h
   - src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/wrr_locality/v3/wrr_locality.upb.h
   - src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/cert.upb.h
   - src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/common.upb.h
   - src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/secret.upb.h
   - src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls.upb.h
   - src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upb.h
   - src/core/ext/upb-generated/envoy/service/discovery/v3/ads.upb.h
   - src/core/ext/upb-generated/envoy/service/discovery/v3/discovery.upb.h
   - src/core/ext/upb-generated/envoy/service/load_stats/v3/lrs.upb.h
   - src/core/ext/upb-generated/envoy/service/status/v3/csds.upb.h
   - src/core/ext/upb-generated/envoy/type/http/v3/cookie.upb.h
   - src/core/ext/upb-generated/envoy/type/http/v3/path_transformation.upb.h
   - src/core/ext/upb-generated/envoy/type/matcher/v3/http_inputs.upb.h
   - src/core/ext/upb-generated/envoy/type/matcher/v3/metadata.upb.h
   - src/core/ext/upb-generated/envoy/type/matcher/v3/node.upb.h
   - src/core/ext/upb-generated/envoy/type/matcher/v3/number.upb.h
   - src/core/ext/upb-generated/envoy/type/matcher/v3/path.upb.h
   - src/core/ext/upb-generated/envoy/type/matcher/v3/regex.upb.h
   - src/core/ext/upb-generated/envoy/type/matcher/v3/string.upb.h
   - src/core/ext/upb-generated/envoy/type/matcher/v3/struct.upb.h
   - src/core/ext/upb-generated/envoy/type/matcher/v3/value.upb.h
   - src/core/ext/upb-generated/envoy/type/metadata/v3/metadata.upb.h
   - src/core/ext/upb-generated/envoy/type/tracing/v3/custom_tag.upb.h
   - src/core/ext/upb-generated/envoy/type/v3/hash_policy.upb.h
   - src/core/ext/upb-generated/envoy/type/v3/http.upb.h
   - src/core/ext/upb-generated/envoy/type/v3/http_status.upb.h
   - src/core/ext/upb-generated/envoy/type/v3/percent.upb.h
   - src/core/ext/upb-generated/envoy/type/v3/range.upb.h
   - src/core/ext/upb-generated/envoy/type/v3/ratelimit_unit.upb.h
   - src/core/ext/upb-generated/envoy/type/v3/semantic_version.upb.h
   - src/core/ext/upb-generated/envoy/type/v3/token_bucket.upb.h
   - src/core/ext/upb-generated/google/api/annotations.upb.h
   - src/core/ext/upb-generated/google/api/expr/v1alpha1/checked.upb.h
   - src/core/ext/upb-generated/google/api/expr/v1alpha1/syntax.upb.h
   - src/core/ext/upb-generated/google/api/http.upb.h
   - src/core/ext/upb-generated/google/api/httpbody.upb.h
   - src/core/ext/upb-generated/google/protobuf/any.upb.h
   - src/core/ext/upb-generated/google/protobuf/descriptor.upb.h
   - src/core/ext/upb-generated/google/protobuf/duration.upb.h
   - src/core/ext/upb-generated/google/protobuf/empty.upb.h
   - src/core/ext/upb-generated/google/protobuf/struct.upb.h
   - src/core/ext/upb-generated/google/protobuf/timestamp.upb.h
   - src/core/ext/upb-generated/google/protobuf/wrappers.upb.h
   - src/core/ext/upb-generated/google/rpc/status.upb.h
   - src/core/ext/upb-generated/opencensus/proto/trace/v1/trace_config.upb.h
   - src/core/ext/upb-generated/src/proto/grpc/gcp/altscontext.upb.h
   - src/core/ext/upb-generated/src/proto/grpc/gcp/handshaker.upb.h
   - src/core/ext/upb-generated/src/proto/grpc/gcp/transport_security_common.upb.h
   - src/core/ext/upb-generated/src/proto/grpc/health/v1/health.upb.h
   - src/core/ext/upb-generated/src/proto/grpc/lb/v1/load_balancer.upb.h
   - src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls.upb.h
   - src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls_config.upb.h
   - src/core/ext/upb-generated/udpa/annotations/migrate.upb.h
   - src/core/ext/upb-generated/udpa/annotations/security.upb.h
   - src/core/ext/upb-generated/udpa/annotations/sensitive.upb.h
   - src/core/ext/upb-generated/udpa/annotations/status.upb.h
   - src/core/ext/upb-generated/udpa/annotations/versioning.upb.h
   - src/core/ext/upb-generated/validate/validate.upb.h
   - src/core/ext/upb-generated/xds/annotations/v3/migrate.upb.h
   - src/core/ext/upb-generated/xds/annotations/v3/security.upb.h
   - src/core/ext/upb-generated/xds/annotations/v3/sensitive.upb.h
   - src/core/ext/upb-generated/xds/annotations/v3/status.upb.h
   - src/core/ext/upb-generated/xds/annotations/v3/versioning.upb.h
   - src/core/ext/upb-generated/xds/core/v3/authority.upb.h
   - src/core/ext/upb-generated/xds/core/v3/collection_entry.upb.h
   - src/core/ext/upb-generated/xds/core/v3/context_params.upb.h
   - src/core/ext/upb-generated/xds/core/v3/extension.upb.h
   - src/core/ext/upb-generated/xds/core/v3/resource.upb.h
   - src/core/ext/upb-generated/xds/core/v3/resource_locator.upb.h
   - src/core/ext/upb-generated/xds/core/v3/resource_name.upb.h
   - src/core/ext/upb-generated/xds/data/orca/v3/orca_load_report.upb.h
   - src/core/ext/upb-generated/xds/service/orca/v3/orca.upb.h
   - src/core/ext/upb-generated/xds/type/matcher/v3/matcher.upb.h
   - src/core/ext/upb-generated/xds/type/matcher/v3/regex.upb.h
   - src/core/ext/upb-generated/xds/type/matcher/v3/string.upb.h
   - src/core/ext/upb-generated/xds/type/v3/typed_struct.upb.h
   - src/core/ext/upbdefs-generated/envoy/admin/v3/certs.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/admin/v3/clusters.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/admin/v3/config_dump.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/admin/v3/init_dump.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/admin/v3/listeners.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/admin/v3/memory.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/admin/v3/metrics.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/admin/v3/mutex_stats.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/admin/v3/server_info.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/admin/v3/tap.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/annotations/deprecation.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/annotations/resource.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/accesslog/v3/accesslog.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/bootstrap/v3/bootstrap.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/cluster/v3/circuit_breaker.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/cluster/v3/cluster.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/cluster/v3/filter.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/cluster/v3/outlier_detection.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/common/matcher/v3/matcher.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/address.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/backoff.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/base.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/config_source.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/event_service_config.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/extension.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_method_list.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_service.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/health_check.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/http_uri.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/protocol.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/proxy_protocol.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/resolver.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/socket_option.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/substitution_format_string.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/udp_socket_config.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint_components.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/load_report.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/listener/v3/api_listener.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener_components.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/listener/v3/quic_config.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/listener/v3/udp_listener_config.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/metrics/v3/metrics_service.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/metrics/v3/stats.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/overload/v3/overload.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/rbac/v3/rbac.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/route/v3/route.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/route/v3/route_components.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/route/v3/scoped_route.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/tap/v3/common.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/trace/v3/datadog.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/trace/v3/dynamic_ot.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/trace/v3/http_tracer.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/trace/v3/lightstep.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/trace/v3/opencensus.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/trace/v3/service.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/trace/v3/skywalking.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/trace/v3/trace.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/trace/v3/xray.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/config/trace/v3/zipkin.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/extensions/clusters/aggregate/v3/cluster.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/extensions/filters/common/fault/v3/fault.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/extensions/filters/http/fault/v3/fault.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/extensions/filters/http/rbac/v3/rbac.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/extensions/filters/http/router/v3/router.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/cert.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/common.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/secret.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/service/discovery/v3/ads.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/service/discovery/v3/discovery.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/service/load_stats/v3/lrs.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/service/status/v3/csds.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/type/http/v3/cookie.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/type/http/v3/path_transformation.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/type/matcher/v3/http_inputs.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/type/matcher/v3/metadata.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/type/matcher/v3/node.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/type/matcher/v3/number.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/type/matcher/v3/path.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/type/matcher/v3/regex.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/type/matcher/v3/string.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/type/matcher/v3/struct.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/type/matcher/v3/value.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/type/metadata/v3/metadata.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/type/tracing/v3/custom_tag.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/type/v3/hash_policy.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/type/v3/http.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/type/v3/http_status.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/type/v3/percent.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/type/v3/range.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/type/v3/ratelimit_unit.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/type/v3/semantic_version.upbdefs.h
   - src/core/ext/upbdefs-generated/envoy/type/v3/token_bucket.upbdefs.h
   - src/core/ext/upbdefs-generated/google/api/annotations.upbdefs.h
   - src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/checked.upbdefs.h
   - src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/syntax.upbdefs.h
   - src/core/ext/upbdefs-generated/google/api/http.upbdefs.h
   - src/core/ext/upbdefs-generated/google/api/httpbody.upbdefs.h
   - src/core/ext/upbdefs-generated/google/protobuf/any.upbdefs.h
   - src/core/ext/upbdefs-generated/google/protobuf/descriptor.upbdefs.h
   - src/core/ext/upbdefs-generated/google/protobuf/duration.upbdefs.h
   - src/core/ext/upbdefs-generated/google/protobuf/empty.upbdefs.h
   - src/core/ext/upbdefs-generated/google/protobuf/struct.upbdefs.h
   - src/core/ext/upbdefs-generated/google/protobuf/timestamp.upbdefs.h
   - src/core/ext/upbdefs-generated/google/protobuf/wrappers.upbdefs.h
   - src/core/ext/upbdefs-generated/google/rpc/status.upbdefs.h
   - src/core/ext/upbdefs-generated/opencensus/proto/trace/v1/trace_config.upbdefs.h
   - src/core/ext/upbdefs-generated/src/proto/grpc/lookup/v1/rls_config.upbdefs.h
   - src/core/ext/upbdefs-generated/udpa/annotations/migrate.upbdefs.h
   - src/core/ext/upbdefs-generated/udpa/annotations/security.upbdefs.h
   - src/core/ext/upbdefs-generated/udpa/annotations/sensitive.upbdefs.h
   - src/core/ext/upbdefs-generated/udpa/annotations/status.upbdefs.h
   - src/core/ext/upbdefs-generated/udpa/annotations/versioning.upbdefs.h
   - src/core/ext/upbdefs-generated/validate/validate.upbdefs.h
   - src/core/ext/upbdefs-generated/xds/annotations/v3/migrate.upbdefs.h
   - src/core/ext/upbdefs-generated/xds/annotations/v3/security.upbdefs.h
   - src/core/ext/upbdefs-generated/xds/annotations/v3/sensitive.upbdefs.h
   - src/core/ext/upbdefs-generated/xds/annotations/v3/status.upbdefs.h
   - src/core/ext/upbdefs-generated/xds/annotations/v3/versioning.upbdefs.h
   - src/core/ext/upbdefs-generated/xds/core/v3/authority.upbdefs.h
   - src/core/ext/upbdefs-generated/xds/core/v3/collection_entry.upbdefs.h
   - src/core/ext/upbdefs-generated/xds/core/v3/context_params.upbdefs.h
   - src/core/ext/upbdefs-generated/xds/core/v3/extension.upbdefs.h
   - src/core/ext/upbdefs-generated/xds/core/v3/resource.upbdefs.h
   - src/core/ext/upbdefs-generated/xds/core/v3/resource_locator.upbdefs.h
   - src/core/ext/upbdefs-generated/xds/core/v3/resource_name.upbdefs.h
   - src/core/ext/upbdefs-generated/xds/type/matcher/v3/matcher.upbdefs.h
   - src/core/ext/upbdefs-generated/xds/type/matcher/v3/regex.upbdefs.h
   - src/core/ext/upbdefs-generated/xds/type/matcher/v3/string.upbdefs.h
   - src/core/ext/upbdefs-generated/xds/type/v3/typed_struct.upbdefs.h
   - src/core/ext/xds/certificate_provider_factory.h
   - src/core/ext/xds/certificate_provider_registry.h
   - src/core/ext/xds/certificate_provider_store.h
   - src/core/ext/xds/file_watcher_certificate_provider_factory.h
   - src/core/ext/xds/upb_utils.h
   - src/core/ext/xds/xds_api.h
   - src/core/ext/xds/xds_bootstrap.h
   - src/core/ext/xds/xds_certificate_provider.h
   - src/core/ext/xds/xds_channel_args.h
   - src/core/ext/xds/xds_channel_stack_modifier.h
   - src/core/ext/xds/xds_client.h
   - src/core/ext/xds/xds_client_stats.h
   - src/core/ext/xds/xds_cluster.h
   - src/core/ext/xds/xds_cluster_specifier_plugin.h
   - src/core/ext/xds/xds_common_types.h
   - src/core/ext/xds/xds_endpoint.h
   - src/core/ext/xds/xds_http_fault_filter.h
   - src/core/ext/xds/xds_http_filters.h
   - src/core/ext/xds/xds_http_rbac_filter.h
   - src/core/ext/xds/xds_lb_policy_registry.h
   - src/core/ext/xds/xds_listener.h
   - src/core/ext/xds/xds_resource_type.h
   - src/core/ext/xds/xds_resource_type_impl.h
   - src/core/ext/xds/xds_route_config.h
   - src/core/ext/xds/xds_routing.h
   - src/core/lib/address_utils/parse_address.h
   - src/core/lib/address_utils/sockaddr_utils.h
   - src/core/lib/avl/avl.h
   - src/core/lib/backoff/backoff.h
   - src/core/lib/channel/call_finalization.h
   - src/core/lib/channel/call_tracer.h
   - src/core/lib/channel/channel_args.h
   - src/core/lib/channel/channel_args_preconditioning.h
   - src/core/lib/channel/channel_fwd.h
   - src/core/lib/channel/channel_stack.h
   - src/core/lib/channel/channel_stack_builder.h
   - src/core/lib/channel/channel_stack_builder_impl.h
   - src/core/lib/channel/channel_trace.h
   - src/core/lib/channel/channelz.h
   - src/core/lib/channel/channelz_registry.h
   - src/core/lib/channel/connected_channel.h
   - src/core/lib/channel/context.h
   - src/core/lib/channel/promise_based_filter.h
   - src/core/lib/channel/status_util.h
   - src/core/lib/compression/compression_internal.h
   - src/core/lib/compression/message_compress.h
   - src/core/lib/config/core_configuration.h
   - src/core/lib/debug/stats.h
   - src/core/lib/debug/stats_data.h
   - src/core/lib/debug/trace.h
   - src/core/lib/event_engine/channel_args_endpoint_config.h
   - src/core/lib/event_engine/event_engine_factory.h
   - src/core/lib/event_engine/handle_containers.h
   - src/core/lib/event_engine/iomgr_engine.h
   - src/core/lib/event_engine/trace.h
   - src/core/lib/gprpp/atomic_utils.h
   - src/core/lib/gprpp/bitset.h
   - src/core/lib/gprpp/chunked_vector.h
   - src/core/lib/gprpp/cpp_impl_of.h
   - src/core/lib/gprpp/dual_ref_counted.h
   - src/core/lib/gprpp/match.h
   - src/core/lib/gprpp/orphanable.h
   - src/core/lib/gprpp/overload.h
   - src/core/lib/gprpp/ref_counted.h
   - src/core/lib/gprpp/ref_counted_ptr.h
   - src/core/lib/gprpp/single_set_ptr.h
   - src/core/lib/gprpp/status_helper.h
   - src/core/lib/gprpp/table.h
   - src/core/lib/gprpp/time.h
   - src/core/lib/gprpp/unique_type_name.h
   - src/core/lib/http/format_request.h
   - src/core/lib/http/httpcli.h
   - src/core/lib/http/httpcli_ssl_credentials.h
   - src/core/lib/http/parser.h
   - src/core/lib/iomgr/block_annotate.h
   - src/core/lib/iomgr/buffer_list.h
   - src/core/lib/iomgr/call_combiner.h
   - src/core/lib/iomgr/cfstream_handle.h
   - src/core/lib/iomgr/closure.h
   - src/core/lib/iomgr/combiner.h
   - src/core/lib/iomgr/dynamic_annotations.h
   - src/core/lib/iomgr/endpoint.h
   - src/core/lib/iomgr/endpoint_cfstream.h
   - src/core/lib/iomgr/endpoint_pair.h
   - src/core/lib/iomgr/error.h
   - src/core/lib/iomgr/error_cfstream.h
   - src/core/lib/iomgr/error_internal.h
   - src/core/lib/iomgr/ev_apple.h
   - src/core/lib/iomgr/ev_epoll1_linux.h
   - src/core/lib/iomgr/ev_poll_posix.h
   - src/core/lib/iomgr/ev_posix.h
   - src/core/lib/iomgr/exec_ctx.h
   - src/core/lib/iomgr/executor.h
   - src/core/lib/iomgr/executor/mpmcqueue.h
   - src/core/lib/iomgr/executor/threadpool.h
   - src/core/lib/iomgr/gethostname.h
   - src/core/lib/iomgr/grpc_if_nametoindex.h
   - src/core/lib/iomgr/internal_errqueue.h
   - src/core/lib/iomgr/iocp_windows.h
   - src/core/lib/iomgr/iomgr.h
   - src/core/lib/iomgr/iomgr_fwd.h
   - src/core/lib/iomgr/iomgr_internal.h
   - src/core/lib/iomgr/load_file.h
   - src/core/lib/iomgr/lockfree_event.h
   - src/core/lib/iomgr/nameser.h
   - src/core/lib/iomgr/polling_entity.h
   - src/core/lib/iomgr/pollset.h
   - src/core/lib/iomgr/pollset_set.h
   - src/core/lib/iomgr/pollset_set_windows.h
   - src/core/lib/iomgr/pollset_windows.h
   - src/core/lib/iomgr/port.h
   - src/core/lib/iomgr/python_util.h
   - src/core/lib/iomgr/resolve_address.h
   - src/core/lib/iomgr/resolve_address_impl.h
   - src/core/lib/iomgr/resolve_address_posix.h
   - src/core/lib/iomgr/resolve_address_windows.h
   - src/core/lib/iomgr/resolved_address.h
   - src/core/lib/iomgr/sockaddr.h
   - src/core/lib/iomgr/sockaddr_posix.h
   - src/core/lib/iomgr/sockaddr_windows.h
   - src/core/lib/iomgr/socket_factory_posix.h
   - src/core/lib/iomgr/socket_mutator.h
   - src/core/lib/iomgr/socket_utils.h
   - src/core/lib/iomgr/socket_utils_posix.h
   - src/core/lib/iomgr/socket_windows.h
   - src/core/lib/iomgr/tcp_client.h
   - src/core/lib/iomgr/tcp_client_posix.h
   - src/core/lib/iomgr/tcp_posix.h
   - src/core/lib/iomgr/tcp_server.h
   - src/core/lib/iomgr/tcp_server_utils_posix.h
   - src/core/lib/iomgr/tcp_windows.h
   - src/core/lib/iomgr/time_averaged_stats.h
   - src/core/lib/iomgr/timer.h
   - src/core/lib/iomgr/timer_generic.h
   - src/core/lib/iomgr/timer_heap.h
   - src/core/lib/iomgr/timer_manager.h
   - src/core/lib/iomgr/unix_sockets_posix.h
   - src/core/lib/iomgr/wakeup_fd_pipe.h
   - src/core/lib/iomgr/wakeup_fd_posix.h
   - src/core/lib/iomgr/work_serializer.h
   - src/core/lib/json/json.h
   - src/core/lib/json/json_util.h
   - src/core/lib/matchers/matchers.h
   - src/core/lib/promise/activity.h
   - src/core/lib/promise/arena_promise.h
   - src/core/lib/promise/call_push_pull.h
   - src/core/lib/promise/context.h
   - src/core/lib/promise/detail/basic_seq.h
   - src/core/lib/promise/detail/promise_factory.h
   - src/core/lib/promise/detail/promise_like.h
   - src/core/lib/promise/detail/status.h
   - src/core/lib/promise/detail/switch.h
   - src/core/lib/promise/exec_ctx_wakeup_scheduler.h
   - src/core/lib/promise/intra_activity_waiter.h
   - src/core/lib/promise/latch.h
   - src/core/lib/promise/loop.h
   - src/core/lib/promise/map.h
   - src/core/lib/promise/poll.h
   - src/core/lib/promise/promise.h
   - src/core/lib/promise/race.h
   - src/core/lib/promise/seq.h
   - src/core/lib/promise/sleep.h
   - src/core/lib/promise/try_seq.h
   - src/core/lib/resolver/resolver.h
   - src/core/lib/resolver/resolver_factory.h
   - src/core/lib/resolver/resolver_registry.h
   - src/core/lib/resolver/server_address.h
   - src/core/lib/resource_quota/api.h
   - src/core/lib/resource_quota/arena.h
   - src/core/lib/resource_quota/memory_quota.h
   - src/core/lib/resource_quota/resource_quota.h
   - src/core/lib/resource_quota/thread_quota.h
   - src/core/lib/resource_quota/trace.h
   - src/core/lib/security/authorization/authorization_engine.h
   - src/core/lib/security/authorization/authorization_policy_provider.h
   - src/core/lib/security/authorization/evaluate_args.h
   - src/core/lib/security/authorization/grpc_authorization_engine.h
   - src/core/lib/security/authorization/grpc_server_authz_filter.h
   - src/core/lib/security/authorization/matchers.h
   - src/core/lib/security/authorization/rbac_policy.h
   - src/core/lib/security/context/security_context.h
   - src/core/lib/security/credentials/alts/alts_credentials.h
   - src/core/lib/security/credentials/alts/check_gcp_environment.h
   - src/core/lib/security/credentials/alts/grpc_alts_credentials_options.h
   - src/core/lib/security/credentials/call_creds_util.h
   - src/core/lib/security/credentials/channel_creds_registry.h
   - src/core/lib/security/credentials/composite/composite_credentials.h
   - src/core/lib/security/credentials/credentials.h
   - src/core/lib/security/credentials/external/aws_external_account_credentials.h
   - src/core/lib/security/credentials/external/aws_request_signer.h
   - src/core/lib/security/credentials/external/external_account_credentials.h
   - src/core/lib/security/credentials/external/file_external_account_credentials.h
   - src/core/lib/security/credentials/external/url_external_account_credentials.h
   - src/core/lib/security/credentials/fake/fake_credentials.h
   - src/core/lib/security/credentials/google_default/google_default_credentials.h
   - src/core/lib/security/credentials/iam/iam_credentials.h
   - src/core/lib/security/credentials/insecure/insecure_credentials.h
   - src/core/lib/security/credentials/jwt/json_token.h
   - src/core/lib/security/credentials/jwt/jwt_credentials.h
   - src/core/lib/security/credentials/jwt/jwt_verifier.h
   - src/core/lib/security/credentials/local/local_credentials.h
   - src/core/lib/security/credentials/oauth2/oauth2_credentials.h
   - src/core/lib/security/credentials/plugin/plugin_credentials.h
   - src/core/lib/security/credentials/ssl/ssl_credentials.h
   - src/core/lib/security/credentials/tls/grpc_tls_certificate_distributor.h
   - src/core/lib/security/credentials/tls/grpc_tls_certificate_provider.h
   - src/core/lib/security/credentials/tls/grpc_tls_certificate_verifier.h
   - src/core/lib/security/credentials/tls/grpc_tls_credentials_options.h
   - src/core/lib/security/credentials/tls/tls_credentials.h
   - src/core/lib/security/credentials/tls/tls_utils.h
   - src/core/lib/security/credentials/xds/xds_credentials.h
   - src/core/lib/security/security_connector/alts/alts_security_connector.h
   - src/core/lib/security/security_connector/fake/fake_security_connector.h
   - src/core/lib/security/security_connector/insecure/insecure_security_connector.h
   - src/core/lib/security/security_connector/load_system_roots.h
   - src/core/lib/security/security_connector/load_system_roots_linux.h
   - src/core/lib/security/security_connector/local/local_security_connector.h
   - src/core/lib/security/security_connector/security_connector.h
   - src/core/lib/security/security_connector/ssl/ssl_security_connector.h
   - src/core/lib/security/security_connector/ssl_utils.h
   - src/core/lib/security/security_connector/ssl_utils_config.h
   - src/core/lib/security/security_connector/tls/tls_security_connector.h
   - src/core/lib/security/transport/auth_filters.h
   - src/core/lib/security/transport/secure_endpoint.h
   - src/core/lib/security/transport/security_handshaker.h
   - src/core/lib/security/transport/tsi_error.h
   - src/core/lib/security/util/json_util.h
   - src/core/lib/service_config/service_config.h
   - src/core/lib/service_config/service_config_call_data.h
   - src/core/lib/service_config/service_config_impl.h
   - src/core/lib/service_config/service_config_parser.h
   - src/core/lib/slice/b64.h
   - src/core/lib/slice/percent_encoding.h
   - src/core/lib/slice/slice.h
   - src/core/lib/slice/slice_buffer.h
   - src/core/lib/slice/slice_internal.h
   - src/core/lib/slice/slice_refcount.h
   - src/core/lib/slice/slice_refcount_base.h
   - src/core/lib/slice/slice_split.h
   - src/core/lib/slice/slice_string_helpers.h
   - src/core/lib/surface/api_trace.h
   - src/core/lib/surface/builtins.h
   - src/core/lib/surface/call.h
   - src/core/lib/surface/call_test_only.h
   - src/core/lib/surface/channel.h
   - src/core/lib/surface/channel_init.h
   - src/core/lib/surface/channel_stack_type.h
   - src/core/lib/surface/completion_queue.h
   - src/core/lib/surface/completion_queue_factory.h
   - src/core/lib/surface/event_string.h
   - src/core/lib/surface/init.h
   - src/core/lib/surface/lame_client.h
   - src/core/lib/surface/server.h
   - src/core/lib/surface/validate_metadata.h
   - src/core/lib/transport/bdp_estimator.h
+  - src/core/lib/transport/byte_stream.h
   - src/core/lib/transport/connectivity_state.h
   - src/core/lib/transport/error_utils.h
   - src/core/lib/transport/handshaker.h
   - src/core/lib/transport/handshaker_factory.h
   - src/core/lib/transport/handshaker_registry.h
   - src/core/lib/transport/http2_errors.h
   - src/core/lib/transport/http_connect_handshaker.h
   - src/core/lib/transport/metadata_batch.h
   - src/core/lib/transport/parsed_metadata.h
   - src/core/lib/transport/pid_controller.h
   - src/core/lib/transport/status_conversion.h
   - src/core/lib/transport/tcp_connect_handshaker.h
   - src/core/lib/transport/timeout_encoding.h
   - src/core/lib/transport/transport.h
   - src/core/lib/transport/transport_fwd.h
   - src/core/lib/transport/transport_impl.h
   - src/core/lib/uri/uri_parser.h
   - src/core/tsi/alts/crypt/gsec.h
   - src/core/tsi/alts/frame_protector/alts_counter.h
   - src/core/tsi/alts/frame_protector/alts_crypter.h
   - src/core/tsi/alts/frame_protector/alts_frame_protector.h
   - src/core/tsi/alts/frame_protector/alts_record_protocol_crypter_common.h
   - src/core/tsi/alts/frame_protector/frame_handler.h
   - src/core/tsi/alts/handshaker/alts_handshaker_client.h
   - src/core/tsi/alts/handshaker/alts_shared_resource.h
   - src/core/tsi/alts/handshaker/alts_tsi_handshaker.h
   - src/core/tsi/alts/handshaker/alts_tsi_handshaker_private.h
   - src/core/tsi/alts/handshaker/alts_tsi_utils.h
   - src/core/tsi/alts/handshaker/transport_security_common_api.h
   - src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_integrity_only_record_protocol.h
   - src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_privacy_integrity_record_protocol.h
   - src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol.h
   - src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol_common.h
   - src/core/tsi/alts/zero_copy_frame_protector/alts_iovec_record_protocol.h
   - src/core/tsi/alts/zero_copy_frame_protector/alts_zero_copy_grpc_protector.h
   - src/core/tsi/fake_transport_security.h
   - src/core/tsi/local_transport_security.h
   - src/core/tsi/ssl/key_logging/ssl_key_logging.h
   - src/core/tsi/ssl/session_cache/ssl_session.h
   - src/core/tsi/ssl/session_cache/ssl_session_cache.h
   - src/core/tsi/ssl_transport_security.h
   - src/core/tsi/ssl_types.h
   - src/core/tsi/transport_security.h
   - src/core/tsi/transport_security_grpc.h
   - src/core/tsi/transport_security_interface.h
   - third_party/xxhash/xxhash.h
   src:
   - src/core/ext/filters/census/grpc_context.cc
   - src/core/ext/filters/channel_idle/channel_idle_filter.cc
   - src/core/ext/filters/channel_idle/idle_filter_state.cc
   - src/core/ext/filters/client_channel/backend_metric.cc
   - src/core/ext/filters/client_channel/backup_poller.cc
   - src/core/ext/filters/client_channel/channel_connectivity.cc
   - src/core/ext/filters/client_channel/client_channel.cc
   - src/core/ext/filters/client_channel/client_channel_channelz.cc
   - src/core/ext/filters/client_channel/client_channel_factory.cc
   - src/core/ext/filters/client_channel/client_channel_plugin.cc
   - src/core/ext/filters/client_channel/config_selector.cc
   - src/core/ext/filters/client_channel/dynamic_filters.cc
   - src/core/ext/filters/client_channel/global_subchannel_pool.cc
   - src/core/ext/filters/client_channel/health/health_check_client.cc
   - src/core/ext/filters/client_channel/http_proxy.cc
   - src/core/ext/filters/client_channel/lb_policy.cc
   - src/core/ext/filters/client_channel/lb_policy/address_filtering.cc
   - src/core/ext/filters/client_channel/lb_policy/child_policy_handler.cc
   - src/core/ext/filters/client_channel/lb_policy/grpclb/client_load_reporting_filter.cc
   - src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc
   - src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_balancer_addresses.cc
   - src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_client_stats.cc
   - src/core/ext/filters/client_channel/lb_policy/grpclb/load_balancer_api.cc
   - src/core/ext/filters/client_channel/lb_policy/oob_backend_metric.cc
   - src/core/ext/filters/client_channel/lb_policy/outlier_detection/outlier_detection.cc
   - src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc
   - src/core/ext/filters/client_channel/lb_policy/priority/priority.cc
   - src/core/ext/filters/client_channel/lb_policy/ring_hash/ring_hash.cc
   - src/core/ext/filters/client_channel/lb_policy/rls/rls.cc
   - src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc
   - src/core/ext/filters/client_channel/lb_policy/weighted_target/weighted_target.cc
   - src/core/ext/filters/client_channel/lb_policy/xds/cds.cc
   - src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_impl.cc
   - src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_manager.cc
   - src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_resolver.cc
   - src/core/ext/filters/client_channel/lb_policy_registry.cc
   - src/core/ext/filters/client_channel/local_subchannel_pool.cc
   - src/core/ext/filters/client_channel/proxy_mapper_registry.cc
   - src/core/ext/filters/client_channel/resolver/binder/binder_resolver.cc
   - src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc
   - src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_posix.cc
   - src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_windows.cc
   - src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.cc
   - src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_posix.cc
   - src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_windows.cc
   - src/core/ext/filters/client_channel/resolver/dns/dns_resolver_selection.cc
   - src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc
   - src/core/ext/filters/client_channel/resolver/fake/fake_resolver.cc
   - src/core/ext/filters/client_channel/resolver/google_c2p/google_c2p_resolver.cc
   - src/core/ext/filters/client_channel/resolver/polling_resolver.cc
   - src/core/ext/filters/client_channel/resolver/sockaddr/sockaddr_resolver.cc
   - src/core/ext/filters/client_channel/resolver/xds/xds_resolver.cc
   - src/core/ext/filters/client_channel/resolver_result_parsing.cc
   - src/core/ext/filters/client_channel/retry_filter.cc
   - src/core/ext/filters/client_channel/retry_service_config.cc
   - src/core/ext/filters/client_channel/retry_throttle.cc
   - src/core/ext/filters/client_channel/service_config_channel_arg_filter.cc
   - src/core/ext/filters/client_channel/subchannel.cc
   - src/core/ext/filters/client_channel/subchannel_pool_interface.cc
   - src/core/ext/filters/client_channel/subchannel_stream_client.cc
   - src/core/ext/filters/deadline/deadline_filter.cc
   - src/core/ext/filters/fault_injection/fault_injection_filter.cc
   - src/core/ext/filters/fault_injection/service_config_parser.cc
   - src/core/ext/filters/http/client/http_client_filter.cc
   - src/core/ext/filters/http/client_authority_filter.cc
   - src/core/ext/filters/http/http_filters_plugin.cc
   - src/core/ext/filters/http/message_compress/message_compress_filter.cc
   - src/core/ext/filters/http/message_compress/message_decompress_filter.cc
   - src/core/ext/filters/http/server/http_server_filter.cc
   - src/core/ext/filters/message_size/message_size_filter.cc
   - src/core/ext/filters/rbac/rbac_filter.cc
   - src/core/ext/filters/rbac/rbac_service_config_parser.cc
   - src/core/ext/filters/server_config_selector/server_config_selector.cc
   - src/core/ext/filters/server_config_selector/server_config_selector_filter.cc
   - src/core/ext/transport/chttp2/alpn/alpn.cc
   - src/core/ext/transport/chttp2/client/chttp2_connector.cc
   - src/core/ext/transport/chttp2/server/chttp2_server.cc
   - src/core/ext/transport/chttp2/transport/bin_decoder.cc
   - src/core/ext/transport/chttp2/transport/bin_encoder.cc
   - src/core/ext/transport/chttp2/transport/chttp2_transport.cc
   - src/core/ext/transport/chttp2/transport/context_list.cc
   - src/core/ext/transport/chttp2/transport/flow_control.cc
   - src/core/ext/transport/chttp2/transport/frame_data.cc
   - src/core/ext/transport/chttp2/transport/frame_goaway.cc
   - src/core/ext/transport/chttp2/transport/frame_ping.cc
   - src/core/ext/transport/chttp2/transport/frame_rst_stream.cc
   - src/core/ext/transport/chttp2/transport/frame_settings.cc
   - src/core/ext/transport/chttp2/transport/frame_window_update.cc
   - src/core/ext/transport/chttp2/transport/hpack_encoder.cc
   - src/core/ext/transport/chttp2/transport/hpack_encoder_table.cc
   - src/core/ext/transport/chttp2/transport/hpack_parser.cc
   - src/core/ext/transport/chttp2/transport/hpack_parser_table.cc
   - src/core/ext/transport/chttp2/transport/http2_settings.cc
   - src/core/ext/transport/chttp2/transport/huffsyms.cc
   - src/core/ext/transport/chttp2/transport/parsing.cc
   - src/core/ext/transport/chttp2/transport/stream_lists.cc
   - src/core/ext/transport/chttp2/transport/stream_map.cc
   - src/core/ext/transport/chttp2/transport/varint.cc
   - src/core/ext/transport/chttp2/transport/writing.cc
   - src/core/ext/transport/inproc/inproc_plugin.cc
   - src/core/ext/transport/inproc/inproc_transport.cc
   - src/core/ext/upb-generated/envoy/admin/v3/certs.upb.c
   - src/core/ext/upb-generated/envoy/admin/v3/clusters.upb.c
   - src/core/ext/upb-generated/envoy/admin/v3/config_dump.upb.c
   - src/core/ext/upb-generated/envoy/admin/v3/init_dump.upb.c
   - src/core/ext/upb-generated/envoy/admin/v3/listeners.upb.c
   - src/core/ext/upb-generated/envoy/admin/v3/memory.upb.c
   - src/core/ext/upb-generated/envoy/admin/v3/metrics.upb.c
   - src/core/ext/upb-generated/envoy/admin/v3/mutex_stats.upb.c
   - src/core/ext/upb-generated/envoy/admin/v3/server_info.upb.c
   - src/core/ext/upb-generated/envoy/admin/v3/tap.upb.c
   - src/core/ext/upb-generated/envoy/annotations/deprecation.upb.c
   - src/core/ext/upb-generated/envoy/annotations/resource.upb.c
   - src/core/ext/upb-generated/envoy/config/accesslog/v3/accesslog.upb.c
   - src/core/ext/upb-generated/envoy/config/bootstrap/v3/bootstrap.upb.c
   - src/core/ext/upb-generated/envoy/config/cluster/v3/circuit_breaker.upb.c
   - src/core/ext/upb-generated/envoy/config/cluster/v3/cluster.upb.c
   - src/core/ext/upb-generated/envoy/config/cluster/v3/filter.upb.c
   - src/core/ext/upb-generated/envoy/config/cluster/v3/outlier_detection.upb.c
   - src/core/ext/upb-generated/envoy/config/common/matcher/v3/matcher.upb.c
   - src/core/ext/upb-generated/envoy/config/core/v3/address.upb.c
   - src/core/ext/upb-generated/envoy/config/core/v3/backoff.upb.c
   - src/core/ext/upb-generated/envoy/config/core/v3/base.upb.c
   - src/core/ext/upb-generated/envoy/config/core/v3/config_source.upb.c
   - src/core/ext/upb-generated/envoy/config/core/v3/event_service_config.upb.c
   - src/core/ext/upb-generated/envoy/config/core/v3/extension.upb.c
   - src/core/ext/upb-generated/envoy/config/core/v3/grpc_method_list.upb.c
   - src/core/ext/upb-generated/envoy/config/core/v3/grpc_service.upb.c
   - src/core/ext/upb-generated/envoy/config/core/v3/health_check.upb.c
   - src/core/ext/upb-generated/envoy/config/core/v3/http_uri.upb.c
   - src/core/ext/upb-generated/envoy/config/core/v3/protocol.upb.c
   - src/core/ext/upb-generated/envoy/config/core/v3/proxy_protocol.upb.c
   - src/core/ext/upb-generated/envoy/config/core/v3/resolver.upb.c
   - src/core/ext/upb-generated/envoy/config/core/v3/socket_option.upb.c
   - src/core/ext/upb-generated/envoy/config/core/v3/substitution_format_string.upb.c
   - src/core/ext/upb-generated/envoy/config/core/v3/udp_socket_config.upb.c
   - src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint.upb.c
   - src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint_components.upb.c
   - src/core/ext/upb-generated/envoy/config/endpoint/v3/load_report.upb.c
   - src/core/ext/upb-generated/envoy/config/listener/v3/api_listener.upb.c
   - src/core/ext/upb-generated/envoy/config/listener/v3/listener.upb.c
   - src/core/ext/upb-generated/envoy/config/listener/v3/listener_components.upb.c
   - src/core/ext/upb-generated/envoy/config/listener/v3/quic_config.upb.c
   - src/core/ext/upb-generated/envoy/config/listener/v3/udp_listener_config.upb.c
   - src/core/ext/upb-generated/envoy/config/metrics/v3/metrics_service.upb.c
   - src/core/ext/upb-generated/envoy/config/metrics/v3/stats.upb.c
   - src/core/ext/upb-generated/envoy/config/overload/v3/overload.upb.c
   - src/core/ext/upb-generated/envoy/config/rbac/v3/rbac.upb.c
   - src/core/ext/upb-generated/envoy/config/route/v3/route.upb.c
   - src/core/ext/upb-generated/envoy/config/route/v3/route_components.upb.c
   - src/core/ext/upb-generated/envoy/config/route/v3/scoped_route.upb.c
   - src/core/ext/upb-generated/envoy/config/tap/v3/common.upb.c
   - src/core/ext/upb-generated/envoy/config/trace/v3/datadog.upb.c
   - src/core/ext/upb-generated/envoy/config/trace/v3/dynamic_ot.upb.c
   - src/core/ext/upb-generated/envoy/config/trace/v3/http_tracer.upb.c
   - src/core/ext/upb-generated/envoy/config/trace/v3/lightstep.upb.c
   - src/core/ext/upb-generated/envoy/config/trace/v3/opencensus.upb.c
   - src/core/ext/upb-generated/envoy/config/trace/v3/service.upb.c
   - src/core/ext/upb-generated/envoy/config/trace/v3/skywalking.upb.c
   - src/core/ext/upb-generated/envoy/config/trace/v3/trace.upb.c
   - src/core/ext/upb-generated/envoy/config/trace/v3/xray.upb.c
   - src/core/ext/upb-generated/envoy/config/trace/v3/zipkin.upb.c
   - src/core/ext/upb-generated/envoy/extensions/clusters/aggregate/v3/cluster.upb.c
   - src/core/ext/upb-generated/envoy/extensions/filters/common/fault/v3/fault.upb.c
   - src/core/ext/upb-generated/envoy/extensions/filters/http/fault/v3/fault.upb.c
   - src/core/ext/upb-generated/envoy/extensions/filters/http/rbac/v3/rbac.upb.c
   - src/core/ext/upb-generated/envoy/extensions/filters/http/router/v3/router.upb.c
   - src/core/ext/upb-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upb.c
   - src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/ring_hash/v3/ring_hash.upb.c
   - src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/wrr_locality/v3/wrr_locality.upb.c
   - src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/cert.upb.c
   - src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/common.upb.c
   - src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/secret.upb.c
   - src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls.upb.c
   - src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upb.c
   - src/core/ext/upb-generated/envoy/service/discovery/v3/ads.upb.c
   - src/core/ext/upb-generated/envoy/service/discovery/v3/discovery.upb.c
   - src/core/ext/upb-generated/envoy/service/load_stats/v3/lrs.upb.c
   - src/core/ext/upb-generated/envoy/service/status/v3/csds.upb.c
   - src/core/ext/upb-generated/envoy/type/http/v3/cookie.upb.c
   - src/core/ext/upb-generated/envoy/type/http/v3/path_transformation.upb.c
   - src/core/ext/upb-generated/envoy/type/matcher/v3/http_inputs.upb.c
   - src/core/ext/upb-generated/envoy/type/matcher/v3/metadata.upb.c
   - src/core/ext/upb-generated/envoy/type/matcher/v3/node.upb.c
   - src/core/ext/upb-generated/envoy/type/matcher/v3/number.upb.c
   - src/core/ext/upb-generated/envoy/type/matcher/v3/path.upb.c
   - src/core/ext/upb-generated/envoy/type/matcher/v3/regex.upb.c
   - src/core/ext/upb-generated/envoy/type/matcher/v3/string.upb.c
   - src/core/ext/upb-generated/envoy/type/matcher/v3/struct.upb.c
   - src/core/ext/upb-generated/envoy/type/matcher/v3/value.upb.c
   - src/core/ext/upb-generated/envoy/type/metadata/v3/metadata.upb.c
   - src/core/ext/upb-generated/envoy/type/tracing/v3/custom_tag.upb.c
   - src/core/ext/upb-generated/envoy/type/v3/hash_policy.upb.c
   - src/core/ext/upb-generated/envoy/type/v3/http.upb.c
   - src/core/ext/upb-generated/envoy/type/v3/http_status.upb.c
   - src/core/ext/upb-generated/envoy/type/v3/percent.upb.c
   - src/core/ext/upb-generated/envoy/type/v3/range.upb.c
   - src/core/ext/upb-generated/envoy/type/v3/ratelimit_unit.upb.c
   - src/core/ext/upb-generated/envoy/type/v3/semantic_version.upb.c
   - src/core/ext/upb-generated/envoy/type/v3/token_bucket.upb.c
   - src/core/ext/upb-generated/google/api/annotations.upb.c
   - src/core/ext/upb-generated/google/api/expr/v1alpha1/checked.upb.c
   - src/core/ext/upb-generated/google/api/expr/v1alpha1/syntax.upb.c
   - src/core/ext/upb-generated/google/api/http.upb.c
   - src/core/ext/upb-generated/google/api/httpbody.upb.c
   - src/core/ext/upb-generated/google/protobuf/any.upb.c
   - src/core/ext/upb-generated/google/protobuf/descriptor.upb.c
   - src/core/ext/upb-generated/google/protobuf/duration.upb.c
   - src/core/ext/upb-generated/google/protobuf/empty.upb.c
   - src/core/ext/upb-generated/google/protobuf/struct.upb.c
   - src/core/ext/upb-generated/google/protobuf/timestamp.upb.c
   - src/core/ext/upb-generated/google/protobuf/wrappers.upb.c
   - src/core/ext/upb-generated/google/rpc/status.upb.c
   - src/core/ext/upb-generated/opencensus/proto/trace/v1/trace_config.upb.c
   - src/core/ext/upb-generated/src/proto/grpc/gcp/altscontext.upb.c
   - src/core/ext/upb-generated/src/proto/grpc/gcp/handshaker.upb.c
   - src/core/ext/upb-generated/src/proto/grpc/gcp/transport_security_common.upb.c
   - src/core/ext/upb-generated/src/proto/grpc/health/v1/health.upb.c
   - src/core/ext/upb-generated/src/proto/grpc/lb/v1/load_balancer.upb.c
   - src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls.upb.c
   - src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls_config.upb.c
   - src/core/ext/upb-generated/udpa/annotations/migrate.upb.c
   - src/core/ext/upb-generated/udpa/annotations/security.upb.c
   - src/core/ext/upb-generated/udpa/annotations/sensitive.upb.c
   - src/core/ext/upb-generated/udpa/annotations/status.upb.c
   - src/core/ext/upb-generated/udpa/annotations/versioning.upb.c
   - src/core/ext/upb-generated/validate/validate.upb.c
   - src/core/ext/upb-generated/xds/annotations/v3/migrate.upb.c
   - src/core/ext/upb-generated/xds/annotations/v3/security.upb.c
   - src/core/ext/upb-generated/xds/annotations/v3/sensitive.upb.c
   - src/core/ext/upb-generated/xds/annotations/v3/status.upb.c
   - src/core/ext/upb-generated/xds/annotations/v3/versioning.upb.c
   - src/core/ext/upb-generated/xds/core/v3/authority.upb.c
   - src/core/ext/upb-generated/xds/core/v3/collection_entry.upb.c
   - src/core/ext/upb-generated/xds/core/v3/context_params.upb.c
   - src/core/ext/upb-generated/xds/core/v3/extension.upb.c
   - src/core/ext/upb-generated/xds/core/v3/resource.upb.c
   - src/core/ext/upb-generated/xds/core/v3/resource_locator.upb.c
   - src/core/ext/upb-generated/xds/core/v3/resource_name.upb.c
   - src/core/ext/upb-generated/xds/data/orca/v3/orca_load_report.upb.c
   - src/core/ext/upb-generated/xds/service/orca/v3/orca.upb.c
   - src/core/ext/upb-generated/xds/type/matcher/v3/matcher.upb.c
   - src/core/ext/upb-generated/xds/type/matcher/v3/regex.upb.c
   - src/core/ext/upb-generated/xds/type/matcher/v3/string.upb.c
   - src/core/ext/upb-generated/xds/type/v3/typed_struct.upb.c
   - src/core/ext/upbdefs-generated/envoy/admin/v3/certs.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/admin/v3/clusters.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/admin/v3/config_dump.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/admin/v3/init_dump.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/admin/v3/listeners.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/admin/v3/memory.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/admin/v3/metrics.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/admin/v3/mutex_stats.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/admin/v3/server_info.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/admin/v3/tap.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/annotations/deprecation.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/annotations/resource.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/accesslog/v3/accesslog.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/bootstrap/v3/bootstrap.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/cluster/v3/circuit_breaker.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/cluster/v3/cluster.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/cluster/v3/filter.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/cluster/v3/outlier_detection.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/common/matcher/v3/matcher.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/address.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/backoff.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/base.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/config_source.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/event_service_config.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/extension.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_method_list.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_service.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/health_check.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/http_uri.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/protocol.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/proxy_protocol.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/resolver.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/socket_option.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/substitution_format_string.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/core/v3/udp_socket_config.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint_components.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/load_report.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/listener/v3/api_listener.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener_components.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/listener/v3/quic_config.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/listener/v3/udp_listener_config.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/metrics/v3/metrics_service.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/metrics/v3/stats.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/overload/v3/overload.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/rbac/v3/rbac.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/route/v3/route.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/route/v3/route_components.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/route/v3/scoped_route.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/tap/v3/common.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/trace/v3/datadog.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/trace/v3/dynamic_ot.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/trace/v3/http_tracer.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/trace/v3/lightstep.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/trace/v3/opencensus.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/trace/v3/service.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/trace/v3/skywalking.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/trace/v3/trace.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/trace/v3/xray.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/config/trace/v3/zipkin.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/extensions/clusters/aggregate/v3/cluster.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/extensions/filters/common/fault/v3/fault.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/extensions/filters/http/fault/v3/fault.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/extensions/filters/http/rbac/v3/rbac.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/extensions/filters/http/router/v3/router.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/cert.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/common.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/secret.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/service/discovery/v3/ads.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/service/discovery/v3/discovery.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/service/load_stats/v3/lrs.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/service/status/v3/csds.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/type/http/v3/cookie.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/type/http/v3/path_transformation.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/type/matcher/v3/http_inputs.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/type/matcher/v3/metadata.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/type/matcher/v3/node.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/type/matcher/v3/number.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/type/matcher/v3/path.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/type/matcher/v3/regex.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/type/matcher/v3/string.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/type/matcher/v3/struct.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/type/matcher/v3/value.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/type/metadata/v3/metadata.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/type/tracing/v3/custom_tag.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/type/v3/hash_policy.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/type/v3/http.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/type/v3/http_status.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/type/v3/percent.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/type/v3/range.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/type/v3/ratelimit_unit.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/type/v3/semantic_version.upbdefs.c
   - src/core/ext/upbdefs-generated/envoy/type/v3/token_bucket.upbdefs.c
   - src/core/ext/upbdefs-generated/google/api/annotations.upbdefs.c
   - src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/checked.upbdefs.c
   - src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/syntax.upbdefs.c
   - src/core/ext/upbdefs-generated/google/api/http.upbdefs.c
   - src/core/ext/upbdefs-generated/google/api/httpbody.upbdefs.c
   - src/core/ext/upbdefs-generated/google/protobuf/any.upbdefs.c
   - src/core/ext/upbdefs-generated/google/protobuf/descriptor.upbdefs.c
   - src/core/ext/upbdefs-generated/google/protobuf/duration.upbdefs.c
   - src/core/ext/upbdefs-generated/google/protobuf/empty.upbdefs.c
   - src/core/ext/upbdefs-generated/google/protobuf/struct.upbdefs.c
   - src/core/ext/upbdefs-generated/google/protobuf/timestamp.upbdefs.c
   - src/core/ext/upbdefs-generated/google/protobuf/wrappers.upbdefs.c
   - src/core/ext/upbdefs-generated/google/rpc/status.upbdefs.c
   - src/core/ext/upbdefs-generated/opencensus/proto/trace/v1/trace_config.upbdefs.c
   - src/core/ext/upbdefs-generated/src/proto/grpc/lookup/v1/rls_config.upbdefs.c
   - src/core/ext/upbdefs-generated/udpa/annotations/migrate.upbdefs.c
   - src/core/ext/upbdefs-generated/udpa/annotations/security.upbdefs.c
   - src/core/ext/upbdefs-generated/udpa/annotations/sensitive.upbdefs.c
   - src/core/ext/upbdefs-generated/udpa/annotations/status.upbdefs.c
   - src/core/ext/upbdefs-generated/udpa/annotations/versioning.upbdefs.c
   - src/core/ext/upbdefs-generated/validate/validate.upbdefs.c
   - src/core/ext/upbdefs-generated/xds/annotations/v3/migrate.upbdefs.c
   - src/core/ext/upbdefs-generated/xds/annotations/v3/security.upbdefs.c
   - src/core/ext/upbdefs-generated/xds/annotations/v3/sensitive.upbdefs.c
   - src/core/ext/upbdefs-generated/xds/annotations/v3/status.upbdefs.c
   - src/core/ext/upbdefs-generated/xds/annotations/v3/versioning.upbdefs.c
   - src/core/ext/upbdefs-generated/xds/core/v3/authority.upbdefs.c
   - src/core/ext/upbdefs-generated/xds/core/v3/collection_entry.upbdefs.c
   - src/core/ext/upbdefs-generated/xds/core/v3/context_params.upbdefs.c
   - src/core/ext/upbdefs-generated/xds/core/v3/extension.upbdefs.c
   - src/core/ext/upbdefs-generated/xds/core/v3/resource.upbdefs.c
   - src/core/ext/upbdefs-generated/xds/core/v3/resource_locator.upbdefs.c
   - src/core/ext/upbdefs-generated/xds/core/v3/resource_name.upbdefs.c
   - src/core/ext/upbdefs-generated/xds/type/matcher/v3/matcher.upbdefs.c
   - src/core/ext/upbdefs-generated/xds/type/matcher/v3/regex.upbdefs.c
   - src/core/ext/upbdefs-generated/xds/type/matcher/v3/string.upbdefs.c
   - src/core/ext/upbdefs-generated/xds/type/v3/typed_struct.upbdefs.c
   - src/core/ext/xds/certificate_provider_registry.cc
   - src/core/ext/xds/certificate_provider_store.cc
   - src/core/ext/xds/file_watcher_certificate_provider_factory.cc
   - src/core/ext/xds/xds_api.cc
   - src/core/ext/xds/xds_bootstrap.cc
   - src/core/ext/xds/xds_certificate_provider.cc
   - src/core/ext/xds/xds_channel_stack_modifier.cc
   - src/core/ext/xds/xds_client.cc
   - src/core/ext/xds/xds_client_stats.cc
   - src/core/ext/xds/xds_cluster.cc
   - src/core/ext/xds/xds_cluster_specifier_plugin.cc
   - src/core/ext/xds/xds_common_types.cc
   - src/core/ext/xds/xds_endpoint.cc
   - src/core/ext/xds/xds_http_fault_filter.cc
   - src/core/ext/xds/xds_http_filters.cc
   - src/core/ext/xds/xds_http_rbac_filter.cc
   - src/core/ext/xds/xds_lb_policy_registry.cc
   - src/core/ext/xds/xds_listener.cc
   - src/core/ext/xds/xds_resource_type.cc
   - src/core/ext/xds/xds_route_config.cc
   - src/core/ext/xds/xds_routing.cc
   - src/core/ext/xds/xds_server_config_fetcher.cc
   - src/core/lib/address_utils/parse_address.cc
   - src/core/lib/address_utils/sockaddr_utils.cc
   - src/core/lib/backoff/backoff.cc
   - src/core/lib/channel/channel_args.cc
   - src/core/lib/channel/channel_args_preconditioning.cc
   - src/core/lib/channel/channel_stack.cc
   - src/core/lib/channel/channel_stack_builder.cc
   - src/core/lib/channel/channel_stack_builder_impl.cc
   - src/core/lib/channel/channel_trace.cc
   - src/core/lib/channel/channelz.cc
   - src/core/lib/channel/channelz_registry.cc
   - src/core/lib/channel/connected_channel.cc
   - src/core/lib/channel/promise_based_filter.cc
   - src/core/lib/channel/status_util.cc
   - src/core/lib/compression/compression.cc
   - src/core/lib/compression/compression_internal.cc
   - src/core/lib/compression/message_compress.cc
   - src/core/lib/config/core_configuration.cc
   - src/core/lib/debug/stats.cc
   - src/core/lib/debug/stats_data.cc
   - src/core/lib/debug/trace.cc
   - src/core/lib/event_engine/channel_args_endpoint_config.cc
   - src/core/lib/event_engine/default_event_engine_factory.cc
   - src/core/lib/event_engine/event_engine.cc
   - src/core/lib/event_engine/iomgr_engine.cc
   - src/core/lib/event_engine/memory_allocator.cc
   - src/core/lib/event_engine/resolved_address.cc
   - src/core/lib/event_engine/slice.cc
   - src/core/lib/event_engine/slice_buffer.cc
   - src/core/lib/event_engine/trace.cc
   - src/core/lib/gprpp/status_helper.cc
   - src/core/lib/gprpp/time.cc
   - src/core/lib/http/format_request.cc
   - src/core/lib/http/httpcli.cc
   - src/core/lib/http/httpcli_security_connector.cc
   - src/core/lib/http/parser.cc
   - src/core/lib/iomgr/buffer_list.cc
   - src/core/lib/iomgr/call_combiner.cc
   - src/core/lib/iomgr/cfstream_handle.cc
   - src/core/lib/iomgr/combiner.cc
   - src/core/lib/iomgr/dualstack_socket_posix.cc
   - src/core/lib/iomgr/endpoint.cc
   - src/core/lib/iomgr/endpoint_cfstream.cc
   - src/core/lib/iomgr/endpoint_pair_posix.cc
   - src/core/lib/iomgr/endpoint_pair_windows.cc
   - src/core/lib/iomgr/error.cc
   - src/core/lib/iomgr/error_cfstream.cc
   - src/core/lib/iomgr/ev_apple.cc
   - src/core/lib/iomgr/ev_epoll1_linux.cc
   - src/core/lib/iomgr/ev_poll_posix.cc
   - src/core/lib/iomgr/ev_posix.cc
   - src/core/lib/iomgr/ev_windows.cc
   - src/core/lib/iomgr/exec_ctx.cc
   - src/core/lib/iomgr/executor.cc
   - src/core/lib/iomgr/executor/mpmcqueue.cc
   - src/core/lib/iomgr/executor/threadpool.cc
   - src/core/lib/iomgr/fork_posix.cc
   - src/core/lib/iomgr/fork_windows.cc
   - src/core/lib/iomgr/gethostname_fallback.cc
   - src/core/lib/iomgr/gethostname_host_name_max.cc
   - src/core/lib/iomgr/gethostname_sysconf.cc
   - src/core/lib/iomgr/grpc_if_nametoindex_posix.cc
   - src/core/lib/iomgr/grpc_if_nametoindex_unsupported.cc
   - src/core/lib/iomgr/internal_errqueue.cc
   - src/core/lib/iomgr/iocp_windows.cc
   - src/core/lib/iomgr/iomgr.cc
   - src/core/lib/iomgr/iomgr_internal.cc
   - src/core/lib/iomgr/iomgr_posix.cc
   - src/core/lib/iomgr/iomgr_posix_cfstream.cc
   - src/core/lib/iomgr/iomgr_windows.cc
   - src/core/lib/iomgr/load_file.cc
   - src/core/lib/iomgr/lockfree_event.cc
   - src/core/lib/iomgr/polling_entity.cc
   - src/core/lib/iomgr/pollset.cc
   - src/core/lib/iomgr/pollset_set.cc
   - src/core/lib/iomgr/pollset_set_windows.cc
   - src/core/lib/iomgr/pollset_windows.cc
   - src/core/lib/iomgr/resolve_address.cc
   - src/core/lib/iomgr/resolve_address_posix.cc
   - src/core/lib/iomgr/resolve_address_windows.cc
   - src/core/lib/iomgr/sockaddr_utils_posix.cc
   - src/core/lib/iomgr/socket_factory_posix.cc
   - src/core/lib/iomgr/socket_mutator.cc
   - src/core/lib/iomgr/socket_utils_common_posix.cc
   - src/core/lib/iomgr/socket_utils_linux.cc
   - src/core/lib/iomgr/socket_utils_posix.cc
   - src/core/lib/iomgr/socket_utils_windows.cc
   - src/core/lib/iomgr/socket_windows.cc
   - src/core/lib/iomgr/tcp_client.cc
   - src/core/lib/iomgr/tcp_client_cfstream.cc
   - src/core/lib/iomgr/tcp_client_posix.cc
   - src/core/lib/iomgr/tcp_client_windows.cc
   - src/core/lib/iomgr/tcp_posix.cc
   - src/core/lib/iomgr/tcp_server.cc
   - src/core/lib/iomgr/tcp_server_posix.cc
   - src/core/lib/iomgr/tcp_server_utils_posix_common.cc
   - src/core/lib/iomgr/tcp_server_utils_posix_ifaddrs.cc
   - src/core/lib/iomgr/tcp_server_utils_posix_noifaddrs.cc
   - src/core/lib/iomgr/tcp_server_windows.cc
   - src/core/lib/iomgr/tcp_windows.cc
   - src/core/lib/iomgr/time_averaged_stats.cc
   - src/core/lib/iomgr/timer.cc
   - src/core/lib/iomgr/timer_generic.cc
   - src/core/lib/iomgr/timer_heap.cc
   - src/core/lib/iomgr/timer_manager.cc
   - src/core/lib/iomgr/unix_sockets_posix.cc
   - src/core/lib/iomgr/unix_sockets_posix_noop.cc
   - src/core/lib/iomgr/wakeup_fd_eventfd.cc
   - src/core/lib/iomgr/wakeup_fd_nospecial.cc
   - src/core/lib/iomgr/wakeup_fd_pipe.cc
   - src/core/lib/iomgr/wakeup_fd_posix.cc
   - src/core/lib/iomgr/work_serializer.cc
   - src/core/lib/json/json_reader.cc
   - src/core/lib/json/json_util.cc
   - src/core/lib/json/json_writer.cc
   - src/core/lib/matchers/matchers.cc
   - src/core/lib/promise/activity.cc
   - src/core/lib/promise/sleep.cc
   - src/core/lib/resolver/resolver.cc
   - src/core/lib/resolver/resolver_registry.cc
   - src/core/lib/resolver/server_address.cc
   - src/core/lib/resource_quota/api.cc
   - src/core/lib/resource_quota/arena.cc
   - src/core/lib/resource_quota/memory_quota.cc
   - src/core/lib/resource_quota/resource_quota.cc
   - src/core/lib/resource_quota/thread_quota.cc
   - src/core/lib/resource_quota/trace.cc
   - src/core/lib/security/authorization/authorization_policy_provider_vtable.cc
   - src/core/lib/security/authorization/evaluate_args.cc
   - src/core/lib/security/authorization/grpc_authorization_engine.cc
   - src/core/lib/security/authorization/grpc_server_authz_filter.cc
   - src/core/lib/security/authorization/matchers.cc
   - src/core/lib/security/authorization/rbac_policy.cc
   - src/core/lib/security/context/security_context.cc
   - src/core/lib/security/credentials/alts/alts_credentials.cc
   - src/core/lib/security/credentials/alts/check_gcp_environment.cc
   - src/core/lib/security/credentials/alts/check_gcp_environment_linux.cc
   - src/core/lib/security/credentials/alts/check_gcp_environment_no_op.cc
   - src/core/lib/security/credentials/alts/check_gcp_environment_windows.cc
   - src/core/lib/security/credentials/alts/grpc_alts_credentials_client_options.cc
   - src/core/lib/security/credentials/alts/grpc_alts_credentials_options.cc
   - src/core/lib/security/credentials/alts/grpc_alts_credentials_server_options.cc
   - src/core/lib/security/credentials/call_creds_util.cc
   - src/core/lib/security/credentials/channel_creds_registry_init.cc
   - src/core/lib/security/credentials/composite/composite_credentials.cc
   - src/core/lib/security/credentials/credentials.cc
   - src/core/lib/security/credentials/external/aws_external_account_credentials.cc
   - src/core/lib/security/credentials/external/aws_request_signer.cc
   - src/core/lib/security/credentials/external/external_account_credentials.cc
   - src/core/lib/security/credentials/external/file_external_account_credentials.cc
   - src/core/lib/security/credentials/external/url_external_account_credentials.cc
   - src/core/lib/security/credentials/fake/fake_credentials.cc
   - src/core/lib/security/credentials/google_default/credentials_generic.cc
   - src/core/lib/security/credentials/google_default/google_default_credentials.cc
   - src/core/lib/security/credentials/iam/iam_credentials.cc
   - src/core/lib/security/credentials/insecure/insecure_credentials.cc
   - src/core/lib/security/credentials/jwt/json_token.cc
   - src/core/lib/security/credentials/jwt/jwt_credentials.cc
   - src/core/lib/security/credentials/jwt/jwt_verifier.cc
   - src/core/lib/security/credentials/local/local_credentials.cc
   - src/core/lib/security/credentials/oauth2/oauth2_credentials.cc
   - src/core/lib/security/credentials/plugin/plugin_credentials.cc
   - src/core/lib/security/credentials/ssl/ssl_credentials.cc
   - src/core/lib/security/credentials/tls/grpc_tls_certificate_distributor.cc
   - src/core/lib/security/credentials/tls/grpc_tls_certificate_provider.cc
   - src/core/lib/security/credentials/tls/grpc_tls_certificate_verifier.cc
   - src/core/lib/security/credentials/tls/grpc_tls_credentials_options.cc
   - src/core/lib/security/credentials/tls/tls_credentials.cc
   - src/core/lib/security/credentials/tls/tls_utils.cc
   - src/core/lib/security/credentials/xds/xds_credentials.cc
   - src/core/lib/security/security_connector/alts/alts_security_connector.cc
   - src/core/lib/security/security_connector/fake/fake_security_connector.cc
   - src/core/lib/security/security_connector/insecure/insecure_security_connector.cc
   - src/core/lib/security/security_connector/load_system_roots_fallback.cc
   - src/core/lib/security/security_connector/load_system_roots_linux.cc
   - src/core/lib/security/security_connector/local/local_security_connector.cc
   - src/core/lib/security/security_connector/security_connector.cc
   - src/core/lib/security/security_connector/ssl/ssl_security_connector.cc
   - src/core/lib/security/security_connector/ssl_utils.cc
   - src/core/lib/security/security_connector/ssl_utils_config.cc
   - src/core/lib/security/security_connector/tls/tls_security_connector.cc
   - src/core/lib/security/transport/client_auth_filter.cc
   - src/core/lib/security/transport/secure_endpoint.cc
   - src/core/lib/security/transport/security_handshaker.cc
   - src/core/lib/security/transport/server_auth_filter.cc
   - src/core/lib/security/transport/tsi_error.cc
   - src/core/lib/security/util/json_util.cc
   - src/core/lib/service_config/service_config_impl.cc
   - src/core/lib/service_config/service_config_parser.cc
   - src/core/lib/slice/b64.cc
   - src/core/lib/slice/percent_encoding.cc
   - src/core/lib/slice/slice.cc
   - src/core/lib/slice/slice_api.cc
   - src/core/lib/slice/slice_buffer.cc
   - src/core/lib/slice/slice_buffer_api.cc
   - src/core/lib/slice/slice_refcount.cc
   - src/core/lib/slice/slice_split.cc
   - src/core/lib/slice/slice_string_helpers.cc
   - src/core/lib/surface/api_trace.cc
   - src/core/lib/surface/builtins.cc
   - src/core/lib/surface/byte_buffer.cc
   - src/core/lib/surface/byte_buffer_reader.cc
   - src/core/lib/surface/call.cc
   - src/core/lib/surface/call_details.cc
   - src/core/lib/surface/call_log_batch.cc
   - src/core/lib/surface/channel.cc
   - src/core/lib/surface/channel_init.cc
   - src/core/lib/surface/channel_ping.cc
   - src/core/lib/surface/channel_stack_type.cc
   - src/core/lib/surface/completion_queue.cc
   - src/core/lib/surface/completion_queue_factory.cc
   - src/core/lib/surface/event_string.cc
   - src/core/lib/surface/init.cc
   - src/core/lib/surface/lame_client.cc
   - src/core/lib/surface/metadata_array.cc
   - src/core/lib/surface/server.cc
   - src/core/lib/surface/validate_metadata.cc
   - src/core/lib/surface/version.cc
   - src/core/lib/transport/bdp_estimator.cc
+  - src/core/lib/transport/byte_stream.cc
   - src/core/lib/transport/connectivity_state.cc
   - src/core/lib/transport/error_utils.cc
   - src/core/lib/transport/handshaker.cc
   - src/core/lib/transport/handshaker_registry.cc
   - src/core/lib/transport/http_connect_handshaker.cc
   - src/core/lib/transport/metadata_batch.cc
   - src/core/lib/transport/parsed_metadata.cc
   - src/core/lib/transport/pid_controller.cc
   - src/core/lib/transport/status_conversion.cc
   - src/core/lib/transport/tcp_connect_handshaker.cc
   - src/core/lib/transport/timeout_encoding.cc
   - src/core/lib/transport/transport.cc
   - src/core/lib/transport/transport_op_string.cc
   - src/core/lib/uri/uri_parser.cc
   - src/core/plugin_registry/grpc_plugin_registry.cc
   - src/core/plugin_registry/grpc_plugin_registry_extra.cc
   - src/core/tsi/alts/crypt/aes_gcm.cc
   - src/core/tsi/alts/crypt/gsec.cc
   - src/core/tsi/alts/frame_protector/alts_counter.cc
   - src/core/tsi/alts/frame_protector/alts_crypter.cc
   - src/core/tsi/alts/frame_protector/alts_frame_protector.cc
   - src/core/tsi/alts/frame_protector/alts_record_protocol_crypter_common.cc
   - src/core/tsi/alts/frame_protector/alts_seal_privacy_integrity_crypter.cc
   - src/core/tsi/alts/frame_protector/alts_unseal_privacy_integrity_crypter.cc
   - src/core/tsi/alts/frame_protector/frame_handler.cc
   - src/core/tsi/alts/handshaker/alts_handshaker_client.cc
   - src/core/tsi/alts/handshaker/alts_shared_resource.cc
   - src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc
   - src/core/tsi/alts/handshaker/alts_tsi_utils.cc
   - src/core/tsi/alts/handshaker/transport_security_common_api.cc
   - src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_integrity_only_record_protocol.cc
   - src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_privacy_integrity_record_protocol.cc
   - src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol_common.cc
   - src/core/tsi/alts/zero_copy_frame_protector/alts_iovec_record_protocol.cc
   - src/core/tsi/alts/zero_copy_frame_protector/alts_zero_copy_grpc_protector.cc
   - src/core/tsi/fake_transport_security.cc
   - src/core/tsi/local_transport_security.cc
   - src/core/tsi/ssl/key_logging/ssl_key_logging.cc
   - src/core/tsi/ssl/session_cache/ssl_session_boringssl.cc
   - src/core/tsi/ssl/session_cache/ssl_session_cache.cc
   - src/core/tsi/ssl/session_cache/ssl_session_openssl.cc
   - src/core/tsi/ssl_transport_security.cc
   - src/core/tsi/transport_security.cc
   - src/core/tsi/transport_security_grpc.cc
   deps:
   - absl/cleanup:cleanup
   - absl/container:flat_hash_map
   - absl/container:flat_hash_set
   - absl/container:inlined_vector
   - absl/functional:bind_front
   - absl/hash:hash
   - absl/meta:type_traits
   - absl/status:statusor
   - absl/types:span
   - absl/types:variant
   - absl/utility:utility
   - gpr
   - libssl
   - address_sorting
   - upb
   baselib: true
   generate_plugin_registry: true
 - name: grpc_test_util
   build: private
   language: c
   public_headers: []
   headers:
   - test/core/event_engine/test_init.h
   - test/core/util/build.h
   - test/core/util/cmdline.h
   - test/core/util/evaluate_args_test_util.h
   - test/core/util/fuzzer_util.h
   - test/core/util/grpc_profiler.h
   - test/core/util/histogram.h
   - test/core/util/mock_authorization_endpoint.h
   - test/core/util/mock_endpoint.h
   - test/core/util/parse_hexstring.h
   - test/core/util/passthru_endpoint.h
   - test/core/util/port.h
   - test/core/util/port_server_client.h
   - test/core/util/reconnect_server.h
   - test/core/util/resolve_localhost_ip46.h
   - test/core/util/slice_splitter.h
   - test/core/util/stack_tracer.h
   - test/core/util/subprocess.h
   - test/core/util/test_config.h
   - test/core/util/test_tcp_server.h
   - test/core/util/tls_utils.h
   - test/core/util/tracer_util.h
   src:
   - test/core/event_engine/test_init.cc
   - test/core/util/build.cc
   - test/core/util/cmdline.cc
   - test/core/util/fuzzer_util.cc
   - test/core/util/grpc_profiler.cc
   - test/core/util/histogram.cc
   - test/core/util/mock_endpoint.cc
   - test/core/util/parse_hexstring.cc
   - test/core/util/passthru_endpoint.cc
   - test/core/util/port.cc
   - test/core/util/port_isolated_runtime_environment.cc
   - test/core/util/port_server_client.cc
   - test/core/util/reconnect_server.cc
   - test/core/util/resolve_localhost_ip46.cc
   - test/core/util/slice_splitter.cc
   - test/core/util/stack_tracer.cc
   - test/core/util/subprocess_posix.cc
   - test/core/util/subprocess_windows.cc
   - test/core/util/test_config.cc
   - test/core/util/test_tcp_server.cc
   - test/core/util/tls_utils.cc
   - test/core/util/tracer_util.cc
   deps:
   - absl/debugging:failure_signal_handler
   - absl/debugging:stacktrace
   - absl/debugging:symbolize
   - grpc
 - name: grpc_test_util_unsecure
   build: private
   language: c
   public_headers: []
   headers:
   - test/core/event_engine/test_init.h
   - test/core/util/build.h
   - test/core/util/cmdline.h
   - test/core/util/evaluate_args_test_util.h
   - test/core/util/fuzzer_util.h
   - test/core/util/grpc_profiler.h
   - test/core/util/histogram.h
   - test/core/util/mock_authorization_endpoint.h
   - test/core/util/mock_endpoint.h
   - test/core/util/parse_hexstring.h
   - test/core/util/passthru_endpoint.h
   - test/core/util/port.h
   - test/core/util/port_server_client.h
   - test/core/util/reconnect_server.h
   - test/core/util/resolve_localhost_ip46.h
   - test/core/util/slice_splitter.h
   - test/core/util/stack_tracer.h
   - test/core/util/subprocess.h
   - test/core/util/test_config.h
   - test/core/util/test_tcp_server.h
   - test/core/util/tracer_util.h
   src:
   - test/core/event_engine/test_init.cc
   - test/core/util/build.cc
   - test/core/util/cmdline.cc
   - test/core/util/fuzzer_util.cc
   - test/core/util/grpc_profiler.cc
   - test/core/util/histogram.cc
   - test/core/util/mock_endpoint.cc
   - test/core/util/parse_hexstring.cc
   - test/core/util/passthru_endpoint.cc
   - test/core/util/port.cc
   - test/core/util/port_isolated_runtime_environment.cc
   - test/core/util/port_server_client.cc
   - test/core/util/reconnect_server.cc
   - test/core/util/resolve_localhost_ip46.cc
   - test/core/util/slice_splitter.cc
   - test/core/util/stack_tracer.cc
   - test/core/util/subprocess_posix.cc
   - test/core/util/subprocess_windows.cc
   - test/core/util/test_config.cc
   - test/core/util/test_tcp_server.cc
   - test/core/util/tracer_util.cc
   deps:
   - absl/debugging:failure_signal_handler
   - absl/debugging:stacktrace
   - absl/debugging:symbolize
   - grpc_unsecure
 - name: grpc_unsecure
   build: all
   language: c
   public_headers:
   - include/grpc/byte_buffer.h
   - include/grpc/byte_buffer_reader.h
   - include/grpc/census.h
   - include/grpc/compression.h
   - include/grpc/event_engine/endpoint_config.h
   - include/grpc/event_engine/event_engine.h
   - include/grpc/event_engine/internal/memory_allocator_impl.h
   - include/grpc/event_engine/memory_allocator.h
   - include/grpc/event_engine/memory_request.h
   - include/grpc/event_engine/port.h
   - include/grpc/event_engine/slice.h
   - include/grpc/event_engine/slice_buffer.h
   - include/grpc/fork.h
   - include/grpc/grpc.h
   - include/grpc/grpc_posix.h
   - include/grpc/grpc_security.h
   - include/grpc/grpc_security_constants.h
   - include/grpc/load_reporting.h
   - include/grpc/slice.h
   - include/grpc/slice_buffer.h
   - include/grpc/status.h
   - include/grpc/support/alloc.h
   - include/grpc/support/atm.h
   - include/grpc/support/atm_gcc_atomic.h
   - include/grpc/support/atm_gcc_sync.h
   - include/grpc/support/atm_windows.h
   - include/grpc/support/cpu.h
   - include/grpc/support/log.h
   - include/grpc/support/log_windows.h
   - include/grpc/support/port_platform.h
   - include/grpc/support/string_util.h
   - include/grpc/support/sync.h
   - include/grpc/support/sync_abseil.h
   - include/grpc/support/sync_custom.h
   - include/grpc/support/sync_generic.h
   - include/grpc/support/sync_posix.h
   - include/grpc/support/sync_windows.h
   - include/grpc/support/thd_id.h
   - include/grpc/support/time.h
   - include/grpc/support/workaround_list.h
   headers:
   - src/core/ext/filters/channel_idle/channel_idle_filter.h
   - src/core/ext/filters/channel_idle/idle_filter_state.h
   - src/core/ext/filters/client_channel/backend_metric.h
   - src/core/ext/filters/client_channel/backup_poller.h
   - src/core/ext/filters/client_channel/client_channel.h
   - src/core/ext/filters/client_channel/client_channel_channelz.h
   - src/core/ext/filters/client_channel/client_channel_factory.h
   - src/core/ext/filters/client_channel/config_selector.h
   - src/core/ext/filters/client_channel/connector.h
   - src/core/ext/filters/client_channel/dynamic_filters.h
   - src/core/ext/filters/client_channel/global_subchannel_pool.h
   - src/core/ext/filters/client_channel/health/health_check_client.h
   - src/core/ext/filters/client_channel/http_proxy.h
   - src/core/ext/filters/client_channel/lb_policy.h
   - src/core/ext/filters/client_channel/lb_policy/address_filtering.h
   - src/core/ext/filters/client_channel/lb_policy/backend_metric_data.h
   - src/core/ext/filters/client_channel/lb_policy/child_policy_handler.h
   - src/core/ext/filters/client_channel/lb_policy/grpclb/client_load_reporting_filter.h
   - src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.h
   - src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_balancer_addresses.h
   - src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_client_stats.h
   - src/core/ext/filters/client_channel/lb_policy/grpclb/load_balancer_api.h
   - src/core/ext/filters/client_channel/lb_policy/oob_backend_metric.h
   - src/core/ext/filters/client_channel/lb_policy/outlier_detection/outlier_detection.h
   - src/core/ext/filters/client_channel/lb_policy/ring_hash/ring_hash.h
   - src/core/ext/filters/client_channel/lb_policy/subchannel_list.h
   - src/core/ext/filters/client_channel/lb_policy_factory.h
   - src/core/ext/filters/client_channel/lb_policy_registry.h
   - src/core/ext/filters/client_channel/local_subchannel_pool.h
   - src/core/ext/filters/client_channel/proxy_mapper.h
   - src/core/ext/filters/client_channel/proxy_mapper_registry.h
   - src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver.h
   - src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.h
   - src/core/ext/filters/client_channel/resolver/dns/dns_resolver_selection.h
   - src/core/ext/filters/client_channel/resolver/fake/fake_resolver.h
   - src/core/ext/filters/client_channel/resolver/polling_resolver.h
   - src/core/ext/filters/client_channel/resolver_result_parsing.h
   - src/core/ext/filters/client_channel/retry_filter.h
   - src/core/ext/filters/client_channel/retry_service_config.h
   - src/core/ext/filters/client_channel/retry_throttle.h
   - src/core/ext/filters/client_channel/subchannel.h
   - src/core/ext/filters/client_channel/subchannel_interface.h
   - src/core/ext/filters/client_channel/subchannel_interface_internal.h
   - src/core/ext/filters/client_channel/subchannel_pool_interface.h
   - src/core/ext/filters/client_channel/subchannel_stream_client.h
   - src/core/ext/filters/deadline/deadline_filter.h
   - src/core/ext/filters/fault_injection/fault_injection_filter.h
   - src/core/ext/filters/fault_injection/service_config_parser.h
   - src/core/ext/filters/http/client/http_client_filter.h
   - src/core/ext/filters/http/client_authority_filter.h
   - src/core/ext/filters/http/message_compress/message_compress_filter.h
   - src/core/ext/filters/http/message_compress/message_decompress_filter.h
   - src/core/ext/filters/http/server/http_server_filter.h
   - src/core/ext/filters/message_size/message_size_filter.h
   - src/core/ext/transport/chttp2/alpn/alpn.h
   - src/core/ext/transport/chttp2/client/chttp2_connector.h
   - src/core/ext/transport/chttp2/server/chttp2_server.h
   - src/core/ext/transport/chttp2/transport/bin_decoder.h
   - src/core/ext/transport/chttp2/transport/bin_encoder.h
   - src/core/ext/transport/chttp2/transport/chttp2_transport.h
   - src/core/ext/transport/chttp2/transport/context_list.h
   - src/core/ext/transport/chttp2/transport/flow_control.h
   - src/core/ext/transport/chttp2/transport/frame.h
   - src/core/ext/transport/chttp2/transport/frame_data.h
   - src/core/ext/transport/chttp2/transport/frame_goaway.h
   - src/core/ext/transport/chttp2/transport/frame_ping.h
   - src/core/ext/transport/chttp2/transport/frame_rst_stream.h
   - src/core/ext/transport/chttp2/transport/frame_settings.h
   - src/core/ext/transport/chttp2/transport/frame_window_update.h
   - src/core/ext/transport/chttp2/transport/hpack_constants.h
   - src/core/ext/transport/chttp2/transport/hpack_encoder.h
   - src/core/ext/transport/chttp2/transport/hpack_encoder_table.h
   - src/core/ext/transport/chttp2/transport/hpack_parser.h
   - src/core/ext/transport/chttp2/transport/hpack_parser_table.h
   - src/core/ext/transport/chttp2/transport/http2_settings.h
   - src/core/ext/transport/chttp2/transport/huffsyms.h
   - src/core/ext/transport/chttp2/transport/internal.h
   - src/core/ext/transport/chttp2/transport/stream_map.h
   - src/core/ext/transport/chttp2/transport/varint.h
   - src/core/ext/transport/inproc/inproc_transport.h
   - src/core/ext/upb-generated/google/api/annotations.upb.h
   - src/core/ext/upb-generated/google/api/http.upb.h
   - src/core/ext/upb-generated/google/protobuf/any.upb.h
   - src/core/ext/upb-generated/google/protobuf/descriptor.upb.h
   - src/core/ext/upb-generated/google/protobuf/duration.upb.h
   - src/core/ext/upb-generated/google/protobuf/empty.upb.h
   - src/core/ext/upb-generated/google/protobuf/struct.upb.h
   - src/core/ext/upb-generated/google/protobuf/timestamp.upb.h
   - src/core/ext/upb-generated/google/protobuf/wrappers.upb.h
   - src/core/ext/upb-generated/google/rpc/status.upb.h
   - src/core/ext/upb-generated/src/proto/grpc/health/v1/health.upb.h
   - src/core/ext/upb-generated/src/proto/grpc/lb/v1/load_balancer.upb.h
   - src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls.upb.h
   - src/core/ext/upb-generated/validate/validate.upb.h
   - src/core/ext/upb-generated/xds/data/orca/v3/orca_load_report.upb.h
   - src/core/ext/upb-generated/xds/service/orca/v3/orca.upb.h
   - src/core/lib/address_utils/parse_address.h
   - src/core/lib/address_utils/sockaddr_utils.h
   - src/core/lib/avl/avl.h
   - src/core/lib/backoff/backoff.h
   - src/core/lib/channel/call_finalization.h
   - src/core/lib/channel/call_tracer.h
   - src/core/lib/channel/channel_args.h
   - src/core/lib/channel/channel_args_preconditioning.h
   - src/core/lib/channel/channel_fwd.h
   - src/core/lib/channel/channel_stack.h
   - src/core/lib/channel/channel_stack_builder.h
   - src/core/lib/channel/channel_stack_builder_impl.h
   - src/core/lib/channel/channel_trace.h
   - src/core/lib/channel/channelz.h
   - src/core/lib/channel/channelz_registry.h
   - src/core/lib/channel/connected_channel.h
   - src/core/lib/channel/context.h
   - src/core/lib/channel/promise_based_filter.h
   - src/core/lib/channel/status_util.h
   - src/core/lib/compression/compression_internal.h
   - src/core/lib/compression/message_compress.h
   - src/core/lib/config/core_configuration.h
   - src/core/lib/debug/stats.h
   - src/core/lib/debug/stats_data.h
   - src/core/lib/debug/trace.h
   - src/core/lib/event_engine/channel_args_endpoint_config.h
   - src/core/lib/event_engine/event_engine_factory.h
   - src/core/lib/event_engine/handle_containers.h
   - src/core/lib/event_engine/iomgr_engine.h
   - src/core/lib/event_engine/trace.h
   - src/core/lib/gprpp/atomic_utils.h
   - src/core/lib/gprpp/bitset.h
   - src/core/lib/gprpp/chunked_vector.h
   - src/core/lib/gprpp/cpp_impl_of.h
   - src/core/lib/gprpp/dual_ref_counted.h
   - src/core/lib/gprpp/match.h
   - src/core/lib/gprpp/orphanable.h
   - src/core/lib/gprpp/overload.h
   - src/core/lib/gprpp/ref_counted.h
   - src/core/lib/gprpp/ref_counted_ptr.h
   - src/core/lib/gprpp/single_set_ptr.h
   - src/core/lib/gprpp/status_helper.h
   - src/core/lib/gprpp/table.h
   - src/core/lib/gprpp/time.h
   - src/core/lib/gprpp/unique_type_name.h
   - src/core/lib/http/format_request.h
   - src/core/lib/http/httpcli.h
   - src/core/lib/http/parser.h
   - src/core/lib/iomgr/block_annotate.h
   - src/core/lib/iomgr/buffer_list.h
   - src/core/lib/iomgr/call_combiner.h
   - src/core/lib/iomgr/cfstream_handle.h
   - src/core/lib/iomgr/closure.h
   - src/core/lib/iomgr/combiner.h
   - src/core/lib/iomgr/dynamic_annotations.h
   - src/core/lib/iomgr/endpoint.h
   - src/core/lib/iomgr/endpoint_cfstream.h
   - src/core/lib/iomgr/endpoint_pair.h
   - src/core/lib/iomgr/error.h
   - src/core/lib/iomgr/error_cfstream.h
   - src/core/lib/iomgr/error_internal.h
   - src/core/lib/iomgr/ev_apple.h
   - src/core/lib/iomgr/ev_epoll1_linux.h
   - src/core/lib/iomgr/ev_poll_posix.h
   - src/core/lib/iomgr/ev_posix.h
   - src/core/lib/iomgr/exec_ctx.h
   - src/core/lib/iomgr/executor.h
   - src/core/lib/iomgr/executor/mpmcqueue.h
   - src/core/lib/iomgr/executor/threadpool.h
   - src/core/lib/iomgr/gethostname.h
   - src/core/lib/iomgr/grpc_if_nametoindex.h
   - src/core/lib/iomgr/internal_errqueue.h
   - src/core/lib/iomgr/iocp_windows.h
   - src/core/lib/iomgr/iomgr.h
   - src/core/lib/iomgr/iomgr_fwd.h
   - src/core/lib/iomgr/iomgr_internal.h
   - src/core/lib/iomgr/load_file.h
   - src/core/lib/iomgr/lockfree_event.h
   - src/core/lib/iomgr/nameser.h
   - src/core/lib/iomgr/polling_entity.h
   - src/core/lib/iomgr/pollset.h
   - src/core/lib/iomgr/pollset_set.h
   - src/core/lib/iomgr/pollset_set_windows.h
   - src/core/lib/iomgr/pollset_windows.h
   - src/core/lib/iomgr/port.h
   - src/core/lib/iomgr/python_util.h
   - src/core/lib/iomgr/resolve_address.h
   - src/core/lib/iomgr/resolve_address_impl.h
   - src/core/lib/iomgr/resolve_address_posix.h
   - src/core/lib/iomgr/resolve_address_windows.h
   - src/core/lib/iomgr/resolved_address.h
   - src/core/lib/iomgr/sockaddr.h
   - src/core/lib/iomgr/sockaddr_posix.h
   - src/core/lib/iomgr/sockaddr_windows.h
   - src/core/lib/iomgr/socket_factory_posix.h
   - src/core/lib/iomgr/socket_mutator.h
   - src/core/lib/iomgr/socket_utils.h
   - src/core/lib/iomgr/socket_utils_posix.h
   - src/core/lib/iomgr/socket_windows.h
   - src/core/lib/iomgr/tcp_client.h
   - src/core/lib/iomgr/tcp_client_posix.h
   - src/core/lib/iomgr/tcp_posix.h
   - src/core/lib/iomgr/tcp_server.h
   - src/core/lib/iomgr/tcp_server_utils_posix.h
   - src/core/lib/iomgr/tcp_windows.h
   - src/core/lib/iomgr/time_averaged_stats.h
   - src/core/lib/iomgr/timer.h
   - src/core/lib/iomgr/timer_generic.h
   - src/core/lib/iomgr/timer_heap.h
   - src/core/lib/iomgr/timer_manager.h
   - src/core/lib/iomgr/unix_sockets_posix.h
   - src/core/lib/iomgr/wakeup_fd_pipe.h
   - src/core/lib/iomgr/wakeup_fd_posix.h
   - src/core/lib/iomgr/work_serializer.h
   - src/core/lib/json/json.h
   - src/core/lib/json/json_util.h
   - src/core/lib/promise/activity.h
   - src/core/lib/promise/arena_promise.h
   - src/core/lib/promise/call_push_pull.h
   - src/core/lib/promise/context.h
   - src/core/lib/promise/detail/basic_seq.h
   - src/core/lib/promise/detail/promise_factory.h
   - src/core/lib/promise/detail/promise_like.h
   - src/core/lib/promise/detail/status.h
   - src/core/lib/promise/detail/switch.h
   - src/core/lib/promise/exec_ctx_wakeup_scheduler.h
   - src/core/lib/promise/intra_activity_waiter.h
   - src/core/lib/promise/latch.h
   - src/core/lib/promise/loop.h
   - src/core/lib/promise/map.h
   - src/core/lib/promise/poll.h
   - src/core/lib/promise/promise.h
   - src/core/lib/promise/race.h
   - src/core/lib/promise/seq.h
   - src/core/lib/promise/sleep.h
   - src/core/lib/promise/try_seq.h
   - src/core/lib/resolver/resolver.h
   - src/core/lib/resolver/resolver_factory.h
   - src/core/lib/resolver/resolver_registry.h
   - src/core/lib/resolver/server_address.h
   - src/core/lib/resource_quota/api.h
   - src/core/lib/resource_quota/arena.h
   - src/core/lib/resource_quota/memory_quota.h
   - src/core/lib/resource_quota/resource_quota.h
   - src/core/lib/resource_quota/thread_quota.h
   - src/core/lib/resource_quota/trace.h
   - src/core/lib/security/authorization/authorization_engine.h
   - src/core/lib/security/authorization/authorization_policy_provider.h
   - src/core/lib/security/authorization/evaluate_args.h
   - src/core/lib/security/authorization/grpc_server_authz_filter.h
   - src/core/lib/security/context/security_context.h
   - src/core/lib/security/credentials/call_creds_util.h
   - src/core/lib/security/credentials/channel_creds_registry.h
   - src/core/lib/security/credentials/composite/composite_credentials.h
   - src/core/lib/security/credentials/credentials.h
   - src/core/lib/security/credentials/fake/fake_credentials.h
   - src/core/lib/security/credentials/insecure/insecure_credentials.h
   - src/core/lib/security/credentials/plugin/plugin_credentials.h
   - src/core/lib/security/credentials/tls/tls_utils.h
   - src/core/lib/security/security_connector/fake/fake_security_connector.h
   - src/core/lib/security/security_connector/insecure/insecure_security_connector.h
   - src/core/lib/security/security_connector/load_system_roots.h
   - src/core/lib/security/security_connector/load_system_roots_linux.h
   - src/core/lib/security/security_connector/security_connector.h
   - src/core/lib/security/transport/auth_filters.h
   - src/core/lib/security/transport/secure_endpoint.h
   - src/core/lib/security/transport/security_handshaker.h
   - src/core/lib/security/transport/tsi_error.h
   - src/core/lib/security/util/json_util.h
   - src/core/lib/service_config/service_config.h
   - src/core/lib/service_config/service_config_call_data.h
   - src/core/lib/service_config/service_config_impl.h
   - src/core/lib/service_config/service_config_parser.h
   - src/core/lib/slice/b64.h
   - src/core/lib/slice/percent_encoding.h
   - src/core/lib/slice/slice.h
   - src/core/lib/slice/slice_buffer.h
   - src/core/lib/slice/slice_internal.h
   - src/core/lib/slice/slice_refcount.h
   - src/core/lib/slice/slice_refcount_base.h
   - src/core/lib/slice/slice_split.h
   - src/core/lib/slice/slice_string_helpers.h
   - src/core/lib/surface/api_trace.h
   - src/core/lib/surface/builtins.h
   - src/core/lib/surface/call.h
   - src/core/lib/surface/call_test_only.h
   - src/core/lib/surface/channel.h
   - src/core/lib/surface/channel_init.h
   - src/core/lib/surface/channel_stack_type.h
   - src/core/lib/surface/completion_queue.h
   - src/core/lib/surface/completion_queue_factory.h
   - src/core/lib/surface/event_string.h
   - src/core/lib/surface/init.h
   - src/core/lib/surface/lame_client.h
   - src/core/lib/surface/server.h
   - src/core/lib/surface/validate_metadata.h
   - src/core/lib/transport/bdp_estimator.h
+  - src/core/lib/transport/byte_stream.h
   - src/core/lib/transport/connectivity_state.h
   - src/core/lib/transport/error_utils.h
   - src/core/lib/transport/handshaker.h
   - src/core/lib/transport/handshaker_factory.h
   - src/core/lib/transport/handshaker_registry.h
   - src/core/lib/transport/http2_errors.h
   - src/core/lib/transport/http_connect_handshaker.h
   - src/core/lib/transport/metadata_batch.h
   - src/core/lib/transport/parsed_metadata.h
   - src/core/lib/transport/pid_controller.h
   - src/core/lib/transport/status_conversion.h
   - src/core/lib/transport/tcp_connect_handshaker.h
   - src/core/lib/transport/timeout_encoding.h
   - src/core/lib/transport/transport.h
   - src/core/lib/transport/transport_fwd.h
   - src/core/lib/transport/transport_impl.h
   - src/core/lib/uri/uri_parser.h
   - src/core/tsi/fake_transport_security.h
   - src/core/tsi/local_transport_security.h
   - src/core/tsi/transport_security.h
   - src/core/tsi/transport_security_grpc.h
   - src/core/tsi/transport_security_interface.h
   - third_party/xxhash/xxhash.h
   src:
   - src/core/ext/filters/census/grpc_context.cc
   - src/core/ext/filters/channel_idle/channel_idle_filter.cc
   - src/core/ext/filters/channel_idle/idle_filter_state.cc
   - src/core/ext/filters/client_channel/backend_metric.cc
   - src/core/ext/filters/client_channel/backup_poller.cc
   - src/core/ext/filters/client_channel/channel_connectivity.cc
   - src/core/ext/filters/client_channel/client_channel.cc
   - src/core/ext/filters/client_channel/client_channel_channelz.cc
   - src/core/ext/filters/client_channel/client_channel_factory.cc
   - src/core/ext/filters/client_channel/client_channel_plugin.cc
   - src/core/ext/filters/client_channel/config_selector.cc
   - src/core/ext/filters/client_channel/dynamic_filters.cc
   - src/core/ext/filters/client_channel/global_subchannel_pool.cc
   - src/core/ext/filters/client_channel/health/health_check_client.cc
   - src/core/ext/filters/client_channel/http_proxy.cc
   - src/core/ext/filters/client_channel/lb_policy.cc
   - src/core/ext/filters/client_channel/lb_policy/address_filtering.cc
   - src/core/ext/filters/client_channel/lb_policy/child_policy_handler.cc
   - src/core/ext/filters/client_channel/lb_policy/grpclb/client_load_reporting_filter.cc
   - src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc
   - src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_balancer_addresses.cc
   - src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_client_stats.cc
   - src/core/ext/filters/client_channel/lb_policy/grpclb/load_balancer_api.cc
   - src/core/ext/filters/client_channel/lb_policy/oob_backend_metric.cc
   - src/core/ext/filters/client_channel/lb_policy/outlier_detection/outlier_detection.cc
   - src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc
   - src/core/ext/filters/client_channel/lb_policy/priority/priority.cc
   - src/core/ext/filters/client_channel/lb_policy/ring_hash/ring_hash.cc
   - src/core/ext/filters/client_channel/lb_policy/rls/rls.cc
   - src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc
   - src/core/ext/filters/client_channel/lb_policy/weighted_target/weighted_target.cc
   - src/core/ext/filters/client_channel/lb_policy_registry.cc
   - src/core/ext/filters/client_channel/local_subchannel_pool.cc
   - src/core/ext/filters/client_channel/proxy_mapper_registry.cc
   - src/core/ext/filters/client_channel/resolver/binder/binder_resolver.cc
   - src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc
   - src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_posix.cc
   - src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_windows.cc
   - src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.cc
   - src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_posix.cc
   - src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_windows.cc
   - src/core/ext/filters/client_channel/resolver/dns/dns_resolver_selection.cc
   - src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc
   - src/core/ext/filters/client_channel/resolver/fake/fake_resolver.cc
   - src/core/ext/filters/client_channel/resolver/polling_resolver.cc
   - src/core/ext/filters/client_channel/resolver/sockaddr/sockaddr_resolver.cc
   - src/core/ext/filters/client_channel/resolver_result_parsing.cc
   - src/core/ext/filters/client_channel/retry_filter.cc
   - src/core/ext/filters/client_channel/retry_service_config.cc
   - src/core/ext/filters/client_channel/retry_throttle.cc
   - src/core/ext/filters/client_channel/service_config_channel_arg_filter.cc
   - src/core/ext/filters/client_channel/subchannel.cc
   - src/core/ext/filters/client_channel/subchannel_pool_interface.cc
   - src/core/ext/filters/client_channel/subchannel_stream_client.cc
   - src/core/ext/filters/deadline/deadline_filter.cc
   - src/core/ext/filters/fault_injection/fault_injection_filter.cc
   - src/core/ext/filters/fault_injection/service_config_parser.cc
   - src/core/ext/filters/http/client/http_client_filter.cc
   - src/core/ext/filters/http/client_authority_filter.cc
   - src/core/ext/filters/http/http_filters_plugin.cc
   - src/core/ext/filters/http/message_compress/message_compress_filter.cc
   - src/core/ext/filters/http/message_compress/message_decompress_filter.cc
   - src/core/ext/filters/http/server/http_server_filter.cc
   - src/core/ext/filters/message_size/message_size_filter.cc
   - src/core/ext/transport/chttp2/alpn/alpn.cc
   - src/core/ext/transport/chttp2/client/chttp2_connector.cc
   - src/core/ext/transport/chttp2/server/chttp2_server.cc
   - src/core/ext/transport/chttp2/transport/bin_decoder.cc
   - src/core/ext/transport/chttp2/transport/bin_encoder.cc
   - src/core/ext/transport/chttp2/transport/chttp2_transport.cc
   - src/core/ext/transport/chttp2/transport/context_list.cc
   - src/core/ext/transport/chttp2/transport/flow_control.cc
   - src/core/ext/transport/chttp2/transport/frame_data.cc
   - src/core/ext/transport/chttp2/transport/frame_goaway.cc
   - src/core/ext/transport/chttp2/transport/frame_ping.cc
   - src/core/ext/transport/chttp2/transport/frame_rst_stream.cc
   - src/core/ext/transport/chttp2/transport/frame_settings.cc
   - src/core/ext/transport/chttp2/transport/frame_window_update.cc
   - src/core/ext/transport/chttp2/transport/hpack_encoder.cc
   - src/core/ext/transport/chttp2/transport/hpack_encoder_table.cc
   - src/core/ext/transport/chttp2/transport/hpack_parser.cc
   - src/core/ext/transport/chttp2/transport/hpack_parser_table.cc
   - src/core/ext/transport/chttp2/transport/http2_settings.cc
   - src/core/ext/transport/chttp2/transport/huffsyms.cc
   - src/core/ext/transport/chttp2/transport/parsing.cc
   - src/core/ext/transport/chttp2/transport/stream_lists.cc
   - src/core/ext/transport/chttp2/transport/stream_map.cc
   - src/core/ext/transport/chttp2/transport/varint.cc
   - src/core/ext/transport/chttp2/transport/writing.cc
   - src/core/ext/transport/inproc/inproc_plugin.cc
   - src/core/ext/transport/inproc/inproc_transport.cc
   - src/core/ext/upb-generated/google/api/annotations.upb.c
   - src/core/ext/upb-generated/google/api/http.upb.c
   - src/core/ext/upb-generated/google/protobuf/any.upb.c
   - src/core/ext/upb-generated/google/protobuf/descriptor.upb.c
   - src/core/ext/upb-generated/google/protobuf/duration.upb.c
   - src/core/ext/upb-generated/google/protobuf/empty.upb.c
   - src/core/ext/upb-generated/google/protobuf/struct.upb.c
   - src/core/ext/upb-generated/google/protobuf/timestamp.upb.c
   - src/core/ext/upb-generated/google/protobuf/wrappers.upb.c
   - src/core/ext/upb-generated/google/rpc/status.upb.c
   - src/core/ext/upb-generated/src/proto/grpc/health/v1/health.upb.c
   - src/core/ext/upb-generated/src/proto/grpc/lb/v1/load_balancer.upb.c
   - src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls.upb.c
   - src/core/ext/upb-generated/validate/validate.upb.c
   - src/core/ext/upb-generated/xds/data/orca/v3/orca_load_report.upb.c
   - src/core/ext/upb-generated/xds/service/orca/v3/orca.upb.c
   - src/core/lib/address_utils/parse_address.cc
   - src/core/lib/address_utils/sockaddr_utils.cc
   - src/core/lib/backoff/backoff.cc
   - src/core/lib/channel/channel_args.cc
   - src/core/lib/channel/channel_args_preconditioning.cc
   - src/core/lib/channel/channel_stack.cc
   - src/core/lib/channel/channel_stack_builder.cc
   - src/core/lib/channel/channel_stack_builder_impl.cc
   - src/core/lib/channel/channel_trace.cc
   - src/core/lib/channel/channelz.cc
   - src/core/lib/channel/channelz_registry.cc
   - src/core/lib/channel/connected_channel.cc
   - src/core/lib/channel/promise_based_filter.cc
   - src/core/lib/channel/status_util.cc
   - src/core/lib/compression/compression.cc
   - src/core/lib/compression/compression_internal.cc
   - src/core/lib/compression/message_compress.cc
   - src/core/lib/config/core_configuration.cc
   - src/core/lib/debug/stats.cc
   - src/core/lib/debug/stats_data.cc
   - src/core/lib/debug/trace.cc
   - src/core/lib/event_engine/channel_args_endpoint_config.cc
   - src/core/lib/event_engine/default_event_engine_factory.cc
   - src/core/lib/event_engine/event_engine.cc
   - src/core/lib/event_engine/iomgr_engine.cc
   - src/core/lib/event_engine/memory_allocator.cc
   - src/core/lib/event_engine/resolved_address.cc
   - src/core/lib/event_engine/slice.cc
   - src/core/lib/event_engine/slice_buffer.cc
   - src/core/lib/event_engine/trace.cc
   - src/core/lib/gprpp/status_helper.cc
   - src/core/lib/gprpp/time.cc
   - src/core/lib/http/format_request.cc
   - src/core/lib/http/httpcli.cc
   - src/core/lib/http/parser.cc
   - src/core/lib/iomgr/buffer_list.cc
   - src/core/lib/iomgr/call_combiner.cc
   - src/core/lib/iomgr/cfstream_handle.cc
   - src/core/lib/iomgr/combiner.cc
   - src/core/lib/iomgr/dualstack_socket_posix.cc
   - src/core/lib/iomgr/endpoint.cc
   - src/core/lib/iomgr/endpoint_cfstream.cc
   - src/core/lib/iomgr/endpoint_pair_posix.cc
   - src/core/lib/iomgr/endpoint_pair_windows.cc
   - src/core/lib/iomgr/error.cc
   - src/core/lib/iomgr/error_cfstream.cc
   - src/core/lib/iomgr/ev_apple.cc
   - src/core/lib/iomgr/ev_epoll1_linux.cc
   - src/core/lib/iomgr/ev_poll_posix.cc
   - src/core/lib/iomgr/ev_posix.cc
   - src/core/lib/iomgr/ev_windows.cc
   - src/core/lib/iomgr/exec_ctx.cc
   - src/core/lib/iomgr/executor.cc
   - src/core/lib/iomgr/executor/mpmcqueue.cc
   - src/core/lib/iomgr/executor/threadpool.cc
   - src/core/lib/iomgr/fork_posix.cc
   - src/core/lib/iomgr/fork_windows.cc
   - src/core/lib/iomgr/gethostname_fallback.cc
   - src/core/lib/iomgr/gethostname_host_name_max.cc
   - src/core/lib/iomgr/gethostname_sysconf.cc
   - src/core/lib/iomgr/grpc_if_nametoindex_posix.cc
   - src/core/lib/iomgr/grpc_if_nametoindex_unsupported.cc
   - src/core/lib/iomgr/internal_errqueue.cc
   - src/core/lib/iomgr/iocp_windows.cc
   - src/core/lib/iomgr/iomgr.cc
   - src/core/lib/iomgr/iomgr_internal.cc
   - src/core/lib/iomgr/iomgr_posix.cc
   - src/core/lib/iomgr/iomgr_posix_cfstream.cc
   - src/core/lib/iomgr/iomgr_windows.cc
   - src/core/lib/iomgr/load_file.cc
   - src/core/lib/iomgr/lockfree_event.cc
   - src/core/lib/iomgr/polling_entity.cc
   - src/core/lib/iomgr/pollset.cc
   - src/core/lib/iomgr/pollset_set.cc
   - src/core/lib/iomgr/pollset_set_windows.cc
   - src/core/lib/iomgr/pollset_windows.cc
   - src/core/lib/iomgr/resolve_address.cc
   - src/core/lib/iomgr/resolve_address_posix.cc
   - src/core/lib/iomgr/resolve_address_windows.cc
   - src/core/lib/iomgr/sockaddr_utils_posix.cc
   - src/core/lib/iomgr/socket_factory_posix.cc
   - src/core/lib/iomgr/socket_mutator.cc
   - src/core/lib/iomgr/socket_utils_common_posix.cc
   - src/core/lib/iomgr/socket_utils_linux.cc
   - src/core/lib/iomgr/socket_utils_posix.cc
   - src/core/lib/iomgr/socket_utils_windows.cc
   - src/core/lib/iomgr/socket_windows.cc
   - src/core/lib/iomgr/tcp_client.cc
   - src/core/lib/iomgr/tcp_client_cfstream.cc
   - src/core/lib/iomgr/tcp_client_posix.cc
   - src/core/lib/iomgr/tcp_client_windows.cc
   - src/core/lib/iomgr/tcp_posix.cc
   - src/core/lib/iomgr/tcp_server.cc
   - src/core/lib/iomgr/tcp_server_posix.cc
   - src/core/lib/iomgr/tcp_server_utils_posix_common.cc
   - src/core/lib/iomgr/tcp_server_utils_posix_ifaddrs.cc
   - src/core/lib/iomgr/tcp_server_utils_posix_noifaddrs.cc
   - src/core/lib/iomgr/tcp_server_windows.cc
   - src/core/lib/iomgr/tcp_windows.cc
   - src/core/lib/iomgr/time_averaged_stats.cc
   - src/core/lib/iomgr/timer.cc
   - src/core/lib/iomgr/timer_generic.cc
   - src/core/lib/iomgr/timer_heap.cc
   - src/core/lib/iomgr/timer_manager.cc
   - src/core/lib/iomgr/unix_sockets_posix.cc
   - src/core/lib/iomgr/unix_sockets_posix_noop.cc
   - src/core/lib/iomgr/wakeup_fd_eventfd.cc
   - src/core/lib/iomgr/wakeup_fd_nospecial.cc
   - src/core/lib/iomgr/wakeup_fd_pipe.cc
   - src/core/lib/iomgr/wakeup_fd_posix.cc
   - src/core/lib/iomgr/work_serializer.cc
   - src/core/lib/json/json_reader.cc
   - src/core/lib/json/json_util.cc
   - src/core/lib/json/json_writer.cc
   - src/core/lib/promise/activity.cc
   - src/core/lib/promise/sleep.cc
   - src/core/lib/resolver/resolver.cc
   - src/core/lib/resolver/resolver_registry.cc
   - src/core/lib/resolver/server_address.cc
   - src/core/lib/resource_quota/api.cc
   - src/core/lib/resource_quota/arena.cc
   - src/core/lib/resource_quota/memory_quota.cc
   - src/core/lib/resource_quota/resource_quota.cc
   - src/core/lib/resource_quota/thread_quota.cc
   - src/core/lib/resource_quota/trace.cc
   - src/core/lib/security/authorization/authorization_policy_provider_vtable.cc
   - src/core/lib/security/authorization/evaluate_args.cc
   - src/core/lib/security/authorization/grpc_server_authz_filter.cc
   - src/core/lib/security/context/security_context.cc
   - src/core/lib/security/credentials/call_creds_util.cc
   - src/core/lib/security/credentials/composite/composite_credentials.cc
   - src/core/lib/security/credentials/credentials.cc
   - src/core/lib/security/credentials/fake/fake_credentials.cc
   - src/core/lib/security/credentials/insecure/insecure_credentials.cc
   - src/core/lib/security/credentials/plugin/plugin_credentials.cc
   - src/core/lib/security/credentials/tls/tls_utils.cc
   - src/core/lib/security/security_connector/fake/fake_security_connector.cc
   - src/core/lib/security/security_connector/insecure/insecure_security_connector.cc
   - src/core/lib/security/security_connector/load_system_roots_fallback.cc
   - src/core/lib/security/security_connector/load_system_roots_linux.cc
   - src/core/lib/security/security_connector/security_connector.cc
   - src/core/lib/security/transport/client_auth_filter.cc
   - src/core/lib/security/transport/secure_endpoint.cc
   - src/core/lib/security/transport/security_handshaker.cc
   - src/core/lib/security/transport/server_auth_filter.cc
   - src/core/lib/security/transport/tsi_error.cc
   - src/core/lib/security/util/json_util.cc
   - src/core/lib/service_config/service_config_impl.cc
   - src/core/lib/service_config/service_config_parser.cc
   - src/core/lib/slice/b64.cc
   - src/core/lib/slice/percent_encoding.cc
   - src/core/lib/slice/slice.cc
   - src/core/lib/slice/slice_api.cc
   - src/core/lib/slice/slice_buffer.cc
   - src/core/lib/slice/slice_buffer_api.cc
   - src/core/lib/slice/slice_refcount.cc
   - src/core/lib/slice/slice_split.cc
   - src/core/lib/slice/slice_string_helpers.cc
   - src/core/lib/surface/api_trace.cc
   - src/core/lib/surface/builtins.cc
   - src/core/lib/surface/byte_buffer.cc
   - src/core/lib/surface/byte_buffer_reader.cc
   - src/core/lib/surface/call.cc
   - src/core/lib/surface/call_details.cc
   - src/core/lib/surface/call_log_batch.cc
   - src/core/lib/surface/channel.cc
   - src/core/lib/surface/channel_init.cc
   - src/core/lib/surface/channel_ping.cc
   - src/core/lib/surface/channel_stack_type.cc
   - src/core/lib/surface/completion_queue.cc
   - src/core/lib/surface/completion_queue_factory.cc
   - src/core/lib/surface/event_string.cc
   - src/core/lib/surface/init.cc
   - src/core/lib/surface/lame_client.cc
   - src/core/lib/surface/metadata_array.cc
   - src/core/lib/surface/server.cc
   - src/core/lib/surface/validate_metadata.cc
   - src/core/lib/surface/version.cc
   - src/core/lib/transport/bdp_estimator.cc
+  - src/core/lib/transport/byte_stream.cc
   - src/core/lib/transport/connectivity_state.cc
   - src/core/lib/transport/error_utils.cc
   - src/core/lib/transport/handshaker.cc
   - src/core/lib/transport/handshaker_registry.cc
   - src/core/lib/transport/http_connect_handshaker.cc
   - src/core/lib/transport/metadata_batch.cc
   - src/core/lib/transport/parsed_metadata.cc
   - src/core/lib/transport/pid_controller.cc
   - src/core/lib/transport/status_conversion.cc
   - src/core/lib/transport/tcp_connect_handshaker.cc
   - src/core/lib/transport/timeout_encoding.cc
   - src/core/lib/transport/transport.cc
   - src/core/lib/transport/transport_op_string.cc
   - src/core/lib/uri/uri_parser.cc
   - src/core/plugin_registry/grpc_plugin_registry.cc
   - src/core/plugin_registry/grpc_plugin_registry_noextra.cc
   - src/core/tsi/fake_transport_security.cc
   - src/core/tsi/local_transport_security.cc
   - src/core/tsi/transport_security.cc
   - src/core/tsi/transport_security_grpc.cc
   deps:
   - absl/cleanup:cleanup
   - absl/container:flat_hash_map
   - absl/container:flat_hash_set
   - absl/container:inlined_vector
   - absl/functional:bind_front
   - absl/hash:hash
   - absl/meta:type_traits
   - absl/status:statusor
   - absl/types:span
   - absl/types:variant
   - absl/utility:utility
   - gpr
   - address_sorting
   - upb
   baselib: true
   generate_plugin_registry: true
 - name: benchmark_helpers
   build: test
   language: c++
   public_headers: []
   headers:
   - test/cpp/microbenchmarks/fullstack_context_mutators.h
   - test/cpp/microbenchmarks/fullstack_fixtures.h
   - test/cpp/microbenchmarks/helpers.h
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/microbenchmarks/helpers.cc
   deps:
   - benchmark
   - grpc++_unsecure
   - grpc_test_util_unsecure
   - grpc++_test_config
   defaults: benchmark
 - name: grpc++
   build: all
   language: c++
   public_headers:
   - include/grpc++/alarm.h
   - include/grpc++/channel.h
   - include/grpc++/client_context.h
   - include/grpc++/completion_queue.h
   - include/grpc++/create_channel.h
   - include/grpc++/create_channel_posix.h
   - include/grpc++/ext/health_check_service_server_builder_option.h
   - include/grpc++/generic/async_generic_service.h
   - include/grpc++/generic/generic_stub.h
   - include/grpc++/grpc++.h
   - include/grpc++/health_check_service_interface.h
   - include/grpc++/impl/call.h
   - include/grpc++/impl/channel_argument_option.h
   - include/grpc++/impl/client_unary_call.h
   - include/grpc++/impl/codegen/async_stream.h
   - include/grpc++/impl/codegen/async_unary_call.h
   - include/grpc++/impl/codegen/byte_buffer.h
   - include/grpc++/impl/codegen/call.h
   - include/grpc++/impl/codegen/call_hook.h
   - include/grpc++/impl/codegen/channel_interface.h
   - include/grpc++/impl/codegen/client_context.h
   - include/grpc++/impl/codegen/client_unary_call.h
   - include/grpc++/impl/codegen/completion_queue.h
   - include/grpc++/impl/codegen/completion_queue_tag.h
   - include/grpc++/impl/codegen/config.h
   - include/grpc++/impl/codegen/config_protobuf.h
   - include/grpc++/impl/codegen/core_codegen.h
   - include/grpc++/impl/codegen/core_codegen_interface.h
   - include/grpc++/impl/codegen/create_auth_context.h
   - include/grpc++/impl/codegen/grpc_library.h
   - include/grpc++/impl/codegen/metadata_map.h
   - include/grpc++/impl/codegen/method_handler_impl.h
   - include/grpc++/impl/codegen/proto_utils.h
   - include/grpc++/impl/codegen/rpc_method.h
   - include/grpc++/impl/codegen/rpc_service_method.h
   - include/grpc++/impl/codegen/security/auth_context.h
   - include/grpc++/impl/codegen/serialization_traits.h
   - include/grpc++/impl/codegen/server_context.h
   - include/grpc++/impl/codegen/server_interface.h
   - include/grpc++/impl/codegen/service_type.h
   - include/grpc++/impl/codegen/slice.h
   - include/grpc++/impl/codegen/status.h
   - include/grpc++/impl/codegen/status_code_enum.h
   - include/grpc++/impl/codegen/string_ref.h
   - include/grpc++/impl/codegen/stub_options.h
   - include/grpc++/impl/codegen/sync_stream.h
   - include/grpc++/impl/codegen/time.h
   - include/grpc++/impl/grpc_library.h
   - include/grpc++/impl/method_handler_impl.h
   - include/grpc++/impl/rpc_method.h
   - include/grpc++/impl/rpc_service_method.h
   - include/grpc++/impl/serialization_traits.h
   - include/grpc++/impl/server_builder_option.h
   - include/grpc++/impl/server_builder_plugin.h
   - include/grpc++/impl/server_initializer.h
   - include/grpc++/impl/service_type.h
   - include/grpc++/resource_quota.h
   - include/grpc++/security/auth_context.h
   - include/grpc++/security/auth_metadata_processor.h
   - include/grpc++/security/credentials.h
   - include/grpc++/security/server_credentials.h
   - include/grpc++/server.h
   - include/grpc++/server_builder.h
   - include/grpc++/server_context.h
   - include/grpc++/server_posix.h
   - include/grpc++/support/async_stream.h
   - include/grpc++/support/async_unary_call.h
   - include/grpc++/support/byte_buffer.h
   - include/grpc++/support/channel_arguments.h
   - include/grpc++/support/config.h
   - include/grpc++/support/slice.h
   - include/grpc++/support/status.h
   - include/grpc++/support/status_code_enum.h
   - include/grpc++/support/string_ref.h
   - include/grpc++/support/stub_options.h
   - include/grpc++/support/sync_stream.h
   - include/grpc++/support/time.h
   - include/grpcpp/alarm.h
   - include/grpcpp/channel.h
   - include/grpcpp/client_context.h
   - include/grpcpp/completion_queue.h
   - include/grpcpp/create_channel.h
   - include/grpcpp/create_channel_binder.h
   - include/grpcpp/create_channel_posix.h
   - include/grpcpp/ext/call_metric_recorder.h
   - include/grpcpp/ext/health_check_service_server_builder_option.h
   - include/grpcpp/generic/async_generic_service.h
   - include/grpcpp/generic/generic_stub.h
   - include/grpcpp/grpcpp.h
   - include/grpcpp/health_check_service_interface.h
   - include/grpcpp/impl/call.h
   - include/grpcpp/impl/channel_argument_option.h
   - include/grpcpp/impl/client_unary_call.h
   - include/grpcpp/impl/codegen/async_generic_service.h
   - include/grpcpp/impl/codegen/async_stream.h
   - include/grpcpp/impl/codegen/async_unary_call.h
   - include/grpcpp/impl/codegen/byte_buffer.h
   - include/grpcpp/impl/codegen/call.h
   - include/grpcpp/impl/codegen/call_hook.h
   - include/grpcpp/impl/codegen/call_op_set.h
   - include/grpcpp/impl/codegen/call_op_set_interface.h
   - include/grpcpp/impl/codegen/callback_common.h
   - include/grpcpp/impl/codegen/channel_interface.h
   - include/grpcpp/impl/codegen/client_callback.h
   - include/grpcpp/impl/codegen/client_context.h
   - include/grpcpp/impl/codegen/client_interceptor.h
   - include/grpcpp/impl/codegen/client_unary_call.h
   - include/grpcpp/impl/codegen/completion_queue.h
   - include/grpcpp/impl/codegen/completion_queue_tag.h
   - include/grpcpp/impl/codegen/config.h
   - include/grpcpp/impl/codegen/config_protobuf.h
   - include/grpcpp/impl/codegen/core_codegen.h
   - include/grpcpp/impl/codegen/core_codegen_interface.h
   - include/grpcpp/impl/codegen/create_auth_context.h
   - include/grpcpp/impl/codegen/delegating_channel.h
   - include/grpcpp/impl/codegen/grpc_library.h
   - include/grpcpp/impl/codegen/intercepted_channel.h
   - include/grpcpp/impl/codegen/interceptor.h
   - include/grpcpp/impl/codegen/interceptor_common.h
   - include/grpcpp/impl/codegen/message_allocator.h
   - include/grpcpp/impl/codegen/metadata_map.h
   - include/grpcpp/impl/codegen/method_handler.h
   - include/grpcpp/impl/codegen/method_handler_impl.h
   - include/grpcpp/impl/codegen/proto_buffer_reader.h
   - include/grpcpp/impl/codegen/proto_buffer_writer.h
   - include/grpcpp/impl/codegen/proto_utils.h
   - include/grpcpp/impl/codegen/rpc_method.h
   - include/grpcpp/impl/codegen/rpc_service_method.h
   - include/grpcpp/impl/codegen/security/auth_context.h
   - include/grpcpp/impl/codegen/serialization_traits.h
   - include/grpcpp/impl/codegen/server_callback.h
   - include/grpcpp/impl/codegen/server_callback_handlers.h
   - include/grpcpp/impl/codegen/server_context.h
   - include/grpcpp/impl/codegen/server_interceptor.h
   - include/grpcpp/impl/codegen/server_interface.h
   - include/grpcpp/impl/codegen/service_type.h
   - include/grpcpp/impl/codegen/slice.h
   - include/grpcpp/impl/codegen/status.h
   - include/grpcpp/impl/codegen/status_code_enum.h
   - include/grpcpp/impl/codegen/string_ref.h
   - include/grpcpp/impl/codegen/stub_options.h
   - include/grpcpp/impl/codegen/sync.h
   - include/grpcpp/impl/codegen/sync_stream.h
   - include/grpcpp/impl/codegen/time.h
   - include/grpcpp/impl/grpc_library.h
   - include/grpcpp/impl/method_handler_impl.h
   - include/grpcpp/impl/rpc_method.h
   - include/grpcpp/impl/rpc_service_method.h
   - include/grpcpp/impl/serialization_traits.h
   - include/grpcpp/impl/server_builder_option.h
   - include/grpcpp/impl/server_builder_plugin.h
   - include/grpcpp/impl/server_initializer.h
   - include/grpcpp/impl/service_type.h
   - include/grpcpp/resource_quota.h
   - include/grpcpp/security/auth_context.h
   - include/grpcpp/security/auth_metadata_processor.h
   - include/grpcpp/security/authorization_policy_provider.h
   - include/grpcpp/security/binder_credentials.h
   - include/grpcpp/security/binder_security_policy.h
   - include/grpcpp/security/credentials.h
   - include/grpcpp/security/server_credentials.h
   - include/grpcpp/security/tls_certificate_provider.h
   - include/grpcpp/security/tls_certificate_verifier.h
   - include/grpcpp/security/tls_credentials_options.h
   - include/grpcpp/server.h
   - include/grpcpp/server_builder.h
   - include/grpcpp/server_context.h
   - include/grpcpp/server_posix.h
   - include/grpcpp/support/async_stream.h
   - include/grpcpp/support/async_unary_call.h
   - include/grpcpp/support/byte_buffer.h
   - include/grpcpp/support/channel_arguments.h
   - include/grpcpp/support/client_callback.h
   - include/grpcpp/support/client_interceptor.h
   - include/grpcpp/support/config.h
   - include/grpcpp/support/interceptor.h
   - include/grpcpp/support/message_allocator.h
   - include/grpcpp/support/method_handler.h
   - include/grpcpp/support/proto_buffer_reader.h
   - include/grpcpp/support/proto_buffer_writer.h
   - include/grpcpp/support/server_callback.h
   - include/grpcpp/support/server_interceptor.h
   - include/grpcpp/support/slice.h
   - include/grpcpp/support/status.h
   - include/grpcpp/support/status_code_enum.h
   - include/grpcpp/support/string_ref.h
   - include/grpcpp/support/stub_options.h
   - include/grpcpp/support/sync_stream.h
   - include/grpcpp/support/time.h
   - include/grpcpp/support/validate_service_config.h
   - include/grpcpp/xds_server_builder.h
   headers:
   - src/core/ext/transport/binder/client/binder_connector.h
   - src/core/ext/transport/binder/client/channel_create_impl.h
   - src/core/ext/transport/binder/client/connection_id_generator.h
   - src/core/ext/transport/binder/client/endpoint_binder_pool.h
   - src/core/ext/transport/binder/client/jni_utils.h
   - src/core/ext/transport/binder/client/security_policy_setting.h
   - src/core/ext/transport/binder/server/binder_server.h
   - src/core/ext/transport/binder/transport/binder_stream.h
   - src/core/ext/transport/binder/transport/binder_transport.h
   - src/core/ext/transport/binder/utils/binder_auto_utils.h
   - src/core/ext/transport/binder/utils/ndk_binder.h
   - src/core/ext/transport/binder/utils/transport_stream_receiver.h
   - src/core/ext/transport/binder/utils/transport_stream_receiver_impl.h
   - src/core/ext/transport/binder/wire_format/binder.h
   - src/core/ext/transport/binder/wire_format/binder_android.h
   - src/core/ext/transport/binder/wire_format/binder_constants.h
   - src/core/ext/transport/binder/wire_format/transaction.h
   - src/core/ext/transport/binder/wire_format/wire_reader.h
   - src/core/ext/transport/binder/wire_format/wire_reader_impl.h
   - src/core/ext/transport/binder/wire_format/wire_writer.h
   - src/cpp/client/create_channel_internal.h
   - src/cpp/client/secure_credentials.h
   - src/cpp/common/channel_filter.h
   - src/cpp/common/secure_auth_context.h
   - src/cpp/server/dynamic_thread_pool.h
   - src/cpp/server/external_connection_acceptor_impl.h
   - src/cpp/server/health/default_health_check_service.h
   - src/cpp/server/secure_server_credentials.h
   - src/cpp/server/thread_pool_interface.h
   - src/cpp/thread_manager/thread_manager.h
   src:
   - src/core/ext/transport/binder/client/binder_connector.cc
   - src/core/ext/transport/binder/client/channel_create.cc
   - src/core/ext/transport/binder/client/channel_create_impl.cc
   - src/core/ext/transport/binder/client/connection_id_generator.cc
   - src/core/ext/transport/binder/client/endpoint_binder_pool.cc
   - src/core/ext/transport/binder/client/jni_utils.cc
   - src/core/ext/transport/binder/client/security_policy_setting.cc
   - src/core/ext/transport/binder/security_policy/binder_security_policy.cc
   - src/core/ext/transport/binder/server/binder_server.cc
   - src/core/ext/transport/binder/server/binder_server_credentials.cc
   - src/core/ext/transport/binder/transport/binder_transport.cc
   - src/core/ext/transport/binder/utils/ndk_binder.cc
   - src/core/ext/transport/binder/utils/transport_stream_receiver_impl.cc
   - src/core/ext/transport/binder/wire_format/binder_android.cc
   - src/core/ext/transport/binder/wire_format/binder_constants.cc
   - src/core/ext/transport/binder/wire_format/transaction.cc
   - src/core/ext/transport/binder/wire_format/wire_reader_impl.cc
   - src/core/ext/transport/binder/wire_format/wire_writer.cc
   - src/cpp/client/channel_cc.cc
   - src/cpp/client/client_callback.cc
   - src/cpp/client/client_context.cc
   - src/cpp/client/client_interceptor.cc
   - src/cpp/client/create_channel.cc
   - src/cpp/client/create_channel_internal.cc
   - src/cpp/client/create_channel_posix.cc
   - src/cpp/client/credentials_cc.cc
   - src/cpp/client/insecure_credentials.cc
   - src/cpp/client/secure_credentials.cc
   - src/cpp/client/xds_credentials.cc
   - src/cpp/codegen/codegen_init.cc
   - src/cpp/common/alarm.cc
   - src/cpp/common/auth_property_iterator.cc
   - src/cpp/common/channel_arguments.cc
   - src/cpp/common/channel_filter.cc
   - src/cpp/common/completion_queue_cc.cc
   - src/cpp/common/core_codegen.cc
   - src/cpp/common/resource_quota_cc.cc
   - src/cpp/common/rpc_method.cc
   - src/cpp/common/secure_auth_context.cc
   - src/cpp/common/secure_channel_arguments.cc
   - src/cpp/common/secure_create_auth_context.cc
   - src/cpp/common/tls_certificate_provider.cc
   - src/cpp/common/tls_certificate_verifier.cc
   - src/cpp/common/tls_credentials_options.cc
   - src/cpp/common/validate_service_config.cc
   - src/cpp/common/version_cc.cc
   - src/cpp/server/async_generic_service.cc
   - src/cpp/server/channel_argument_option.cc
   - src/cpp/server/create_default_thread_pool.cc
   - src/cpp/server/dynamic_thread_pool.cc
   - src/cpp/server/external_connection_acceptor_impl.cc
   - src/cpp/server/health/default_health_check_service.cc
   - src/cpp/server/health/health_check_service.cc
   - src/cpp/server/health/health_check_service_server_builder_option.cc
   - src/cpp/server/insecure_server_credentials.cc
   - src/cpp/server/orca/call_metric_recorder.cc
   - src/cpp/server/secure_server_credentials.cc
   - src/cpp/server/server_builder.cc
   - src/cpp/server/server_callback.cc
   - src/cpp/server/server_cc.cc
   - src/cpp/server/server_context.cc
   - src/cpp/server/server_credentials.cc
   - src/cpp/server/server_posix.cc
   - src/cpp/server/xds_server_credentials.cc
   - src/cpp/thread_manager/thread_manager.cc
   - src/cpp/util/byte_buffer_cc.cc
   - src/cpp/util/status.cc
   - src/cpp/util/string_ref.cc
   - src/cpp/util/time_cc.cc
   deps:
   - grpc
   baselib: true
 - name: grpc++_alts
   build: all
   language: c++
   public_headers:
   - include/grpcpp/security/alts_context.h
   - include/grpcpp/security/alts_util.h
   headers: []
   src:
   - src/cpp/common/alts_context.cc
   - src/cpp/common/alts_util.cc
   deps:
   - grpc++
   baselib: true
 - name: grpc++_error_details
   build: all
   language: c++
   public_headers:
   - include/grpc++/support/error_details.h
   - include/grpcpp/support/error_details.h
   headers: []
   src:
   - src/cpp/util/error_details.cc
   deps:
   - grpc++
 - name: grpc++_reflection
   build: all
   language: c++
   public_headers:
   - include/grpc++/ext/proto_server_reflection_plugin.h
   - include/grpcpp/ext/proto_server_reflection_plugin.h
   headers:
   - src/cpp/ext/proto_server_reflection.h
   src:
   - src/proto/grpc/reflection/v1alpha/reflection.proto
   - src/cpp/ext/proto_server_reflection.cc
   - src/cpp/ext/proto_server_reflection_plugin.cc
   deps:
   - grpc++
 - name: grpc++_test
   build: private
   language: c++
   public_headers:
   - include/grpc++/test/mock_stream.h
   - include/grpc++/test/server_context_test_spouse.h
   - include/grpcpp/test/channel_test_peer.h
   - include/grpcpp/test/client_context_test_peer.h
   - include/grpcpp/test/default_reactor_test_peer.h
   - include/grpcpp/test/mock_stream.h
   - include/grpcpp/test/server_context_test_spouse.h
   headers: []
   src:
   - src/cpp/client/channel_test_peer.cc
   deps:
   - grpc++
 - name: grpc++_test_config
   build: private
   language: c++
   public_headers: []
   headers:
   - test/cpp/util/test_config.h
   src:
   - test/cpp/util/test_config_cc.cc
   deps:
   - absl/flags:parse
   - gpr
 - name: grpc++_test_util
   build: private
   language: c++
   public_headers: []
   headers:
   - test/core/end2end/data/ssl_test_data.h
   - test/cpp/util/byte_buffer_proto_helper.h
   - test/cpp/util/create_test_channel.h
   - test/cpp/util/string_ref_helper.h
   - test/cpp/util/subprocess.h
   - test/cpp/util/test_credentials_provider.h
   src:
   - test/core/end2end/data/client_certs.cc
   - test/core/end2end/data/server1_cert.cc
   - test/core/end2end/data/server1_key.cc
   - test/core/end2end/data/test_root_cert.cc
   - test/cpp/util/byte_buffer_proto_helper.cc
   - test/cpp/util/create_test_channel.cc
   - test/cpp/util/string_ref_helper.cc
   - test/cpp/util/subprocess.cc
   - test/cpp/util/test_credentials_provider.cc
   deps:
   - absl/flags:flag
   - grpc++
   - grpc_test_util
 - name: grpc++_unsecure
   build: all
   language: c++
   public_headers:
   - include/grpc++/alarm.h
   - include/grpc++/channel.h
   - include/grpc++/client_context.h
   - include/grpc++/completion_queue.h
   - include/grpc++/create_channel.h
   - include/grpc++/create_channel_posix.h
   - include/grpc++/ext/health_check_service_server_builder_option.h
   - include/grpc++/generic/async_generic_service.h
   - include/grpc++/generic/generic_stub.h
   - include/grpc++/grpc++.h
   - include/grpc++/health_check_service_interface.h
   - include/grpc++/impl/call.h
   - include/grpc++/impl/channel_argument_option.h
   - include/grpc++/impl/client_unary_call.h
   - include/grpc++/impl/codegen/async_stream.h
   - include/grpc++/impl/codegen/async_unary_call.h
   - include/grpc++/impl/codegen/byte_buffer.h
   - include/grpc++/impl/codegen/call.h
   - include/grpc++/impl/codegen/call_hook.h
   - include/grpc++/impl/codegen/channel_interface.h
   - include/grpc++/impl/codegen/client_context.h
   - include/grpc++/impl/codegen/client_unary_call.h
   - include/grpc++/impl/codegen/completion_queue.h
   - include/grpc++/impl/codegen/completion_queue_tag.h
   - include/grpc++/impl/codegen/config.h
   - include/grpc++/impl/codegen/config_protobuf.h
   - include/grpc++/impl/codegen/core_codegen.h
   - include/grpc++/impl/codegen/core_codegen_interface.h
   - include/grpc++/impl/codegen/create_auth_context.h
   - include/grpc++/impl/codegen/grpc_library.h
   - include/grpc++/impl/codegen/metadata_map.h
   - include/grpc++/impl/codegen/method_handler_impl.h
   - include/grpc++/impl/codegen/proto_utils.h
   - include/grpc++/impl/codegen/rpc_method.h
   - include/grpc++/impl/codegen/rpc_service_method.h
   - include/grpc++/impl/codegen/security/auth_context.h
   - include/grpc++/impl/codegen/serialization_traits.h
   - include/grpc++/impl/codegen/server_context.h
   - include/grpc++/impl/codegen/server_interface.h
   - include/grpc++/impl/codegen/service_type.h
   - include/grpc++/impl/codegen/slice.h
   - include/grpc++/impl/codegen/status.h
   - include/grpc++/impl/codegen/status_code_enum.h
   - include/grpc++/impl/codegen/string_ref.h
   - include/grpc++/impl/codegen/stub_options.h
   - include/grpc++/impl/codegen/sync_stream.h
   - include/grpc++/impl/codegen/time.h
   - include/grpc++/impl/grpc_library.h
   - include/grpc++/impl/method_handler_impl.h
   - include/grpc++/impl/rpc_method.h
   - include/grpc++/impl/rpc_service_method.h
   - include/grpc++/impl/serialization_traits.h
   - include/grpc++/impl/server_builder_option.h
   - include/grpc++/impl/server_builder_plugin.h
   - include/grpc++/impl/server_initializer.h
   - include/grpc++/impl/service_type.h
   - include/grpc++/resource_quota.h
   - include/grpc++/security/auth_context.h
   - include/grpc++/security/auth_metadata_processor.h
   - include/grpc++/security/credentials.h
   - include/grpc++/security/server_credentials.h
   - include/grpc++/server.h
   - include/grpc++/server_builder.h
   - include/grpc++/server_context.h
   - include/grpc++/server_posix.h
   - include/grpc++/support/async_stream.h
   - include/grpc++/support/async_unary_call.h
   - include/grpc++/support/byte_buffer.h
   - include/grpc++/support/channel_arguments.h
   - include/grpc++/support/config.h
   - include/grpc++/support/slice.h
   - include/grpc++/support/status.h
   - include/grpc++/support/status_code_enum.h
   - include/grpc++/support/string_ref.h
   - include/grpc++/support/stub_options.h
   - include/grpc++/support/sync_stream.h
   - include/grpc++/support/time.h
   - include/grpcpp/alarm.h
   - include/grpcpp/channel.h
   - include/grpcpp/client_context.h
   - include/grpcpp/completion_queue.h
   - include/grpcpp/create_channel.h
   - include/grpcpp/create_channel_posix.h
   - include/grpcpp/ext/call_metric_recorder.h
   - include/grpcpp/ext/health_check_service_server_builder_option.h
   - include/grpcpp/generic/async_generic_service.h
   - include/grpcpp/generic/generic_stub.h
   - include/grpcpp/grpcpp.h
   - include/grpcpp/health_check_service_interface.h
   - include/grpcpp/impl/call.h
   - include/grpcpp/impl/channel_argument_option.h
   - include/grpcpp/impl/client_unary_call.h
   - include/grpcpp/impl/codegen/async_generic_service.h
   - include/grpcpp/impl/codegen/async_stream.h
   - include/grpcpp/impl/codegen/async_unary_call.h
   - include/grpcpp/impl/codegen/byte_buffer.h
   - include/grpcpp/impl/codegen/call.h
   - include/grpcpp/impl/codegen/call_hook.h
   - include/grpcpp/impl/codegen/call_op_set.h
   - include/grpcpp/impl/codegen/call_op_set_interface.h
   - include/grpcpp/impl/codegen/callback_common.h
   - include/grpcpp/impl/codegen/channel_interface.h
   - include/grpcpp/impl/codegen/client_callback.h
   - include/grpcpp/impl/codegen/client_context.h
   - include/grpcpp/impl/codegen/client_interceptor.h
   - include/grpcpp/impl/codegen/client_unary_call.h
   - include/grpcpp/impl/codegen/completion_queue.h
   - include/grpcpp/impl/codegen/completion_queue_tag.h
   - include/grpcpp/impl/codegen/config.h
   - include/grpcpp/impl/codegen/config_protobuf.h
   - include/grpcpp/impl/codegen/core_codegen.h
   - include/grpcpp/impl/codegen/core_codegen_interface.h
   - include/grpcpp/impl/codegen/create_auth_context.h
   - include/grpcpp/impl/codegen/delegating_channel.h
   - include/grpcpp/impl/codegen/grpc_library.h
   - include/grpcpp/impl/codegen/intercepted_channel.h
   - include/grpcpp/impl/codegen/interceptor.h
   - include/grpcpp/impl/codegen/interceptor_common.h
   - include/grpcpp/impl/codegen/message_allocator.h
   - include/grpcpp/impl/codegen/metadata_map.h
   - include/grpcpp/impl/codegen/method_handler.h
   - include/grpcpp/impl/codegen/method_handler_impl.h
   - include/grpcpp/impl/codegen/proto_buffer_reader.h
   - include/grpcpp/impl/codegen/proto_buffer_writer.h
   - include/grpcpp/impl/codegen/proto_utils.h
   - include/grpcpp/impl/codegen/rpc_method.h
   - include/grpcpp/impl/codegen/rpc_service_method.h
   - include/grpcpp/impl/codegen/security/auth_context.h
   - include/grpcpp/impl/codegen/serialization_traits.h
   - include/grpcpp/impl/codegen/server_callback.h
   - include/grpcpp/impl/codegen/server_callback_handlers.h
   - include/grpcpp/impl/codegen/server_context.h
   - include/grpcpp/impl/codegen/server_interceptor.h
   - include/grpcpp/impl/codegen/server_interface.h
   - include/grpcpp/impl/codegen/service_type.h
   - include/grpcpp/impl/codegen/slice.h
   - include/grpcpp/impl/codegen/status.h
   - include/grpcpp/impl/codegen/status_code_enum.h
   - include/grpcpp/impl/codegen/string_ref.h
   - include/grpcpp/impl/codegen/stub_options.h
   - include/grpcpp/impl/codegen/sync.h
   - include/grpcpp/impl/codegen/sync_stream.h
   - include/grpcpp/impl/codegen/time.h
   - include/grpcpp/impl/grpc_library.h
   - include/grpcpp/impl/method_handler_impl.h
   - include/grpcpp/impl/rpc_method.h
   - include/grpcpp/impl/rpc_service_method.h
   - include/grpcpp/impl/serialization_traits.h
   - include/grpcpp/impl/server_builder_option.h
   - include/grpcpp/impl/server_builder_plugin.h
   - include/grpcpp/impl/server_initializer.h
   - include/grpcpp/impl/service_type.h
   - include/grpcpp/resource_quota.h
   - include/grpcpp/security/auth_context.h
   - include/grpcpp/security/auth_metadata_processor.h
   - include/grpcpp/security/authorization_policy_provider.h
   - include/grpcpp/security/credentials.h
   - include/grpcpp/security/server_credentials.h
   - include/grpcpp/security/tls_certificate_provider.h
   - include/grpcpp/security/tls_certificate_verifier.h
   - include/grpcpp/security/tls_credentials_options.h
   - include/grpcpp/server.h
   - include/grpcpp/server_builder.h
   - include/grpcpp/server_context.h
   - include/grpcpp/server_posix.h
   - include/grpcpp/support/async_stream.h
   - include/grpcpp/support/async_unary_call.h
   - include/grpcpp/support/byte_buffer.h
   - include/grpcpp/support/channel_arguments.h
   - include/grpcpp/support/client_callback.h
   - include/grpcpp/support/client_interceptor.h
   - include/grpcpp/support/config.h
   - include/grpcpp/support/interceptor.h
   - include/grpcpp/support/message_allocator.h
   - include/grpcpp/support/method_handler.h
   - include/grpcpp/support/proto_buffer_reader.h
   - include/grpcpp/support/proto_buffer_writer.h
   - include/grpcpp/support/server_callback.h
   - include/grpcpp/support/server_interceptor.h
   - include/grpcpp/support/slice.h
   - include/grpcpp/support/status.h
   - include/grpcpp/support/status_code_enum.h
   - include/grpcpp/support/string_ref.h
   - include/grpcpp/support/stub_options.h
   - include/grpcpp/support/sync_stream.h
   - include/grpcpp/support/time.h
   - include/grpcpp/support/validate_service_config.h
   headers:
   - src/cpp/client/create_channel_internal.h
   - src/cpp/common/channel_filter.h
   - src/cpp/server/dynamic_thread_pool.h
   - src/cpp/server/external_connection_acceptor_impl.h
   - src/cpp/server/health/default_health_check_service.h
   - src/cpp/server/thread_pool_interface.h
   - src/cpp/thread_manager/thread_manager.h
   src:
   - src/cpp/client/channel_cc.cc
   - src/cpp/client/client_callback.cc
   - src/cpp/client/client_context.cc
   - src/cpp/client/client_interceptor.cc
   - src/cpp/client/create_channel.cc
   - src/cpp/client/create_channel_internal.cc
   - src/cpp/client/create_channel_posix.cc
   - src/cpp/client/credentials_cc.cc
   - src/cpp/client/insecure_credentials.cc
   - src/cpp/codegen/codegen_init.cc
   - src/cpp/common/alarm.cc
   - src/cpp/common/channel_arguments.cc
   - src/cpp/common/channel_filter.cc
   - src/cpp/common/completion_queue_cc.cc
   - src/cpp/common/core_codegen.cc
   - src/cpp/common/insecure_create_auth_context.cc
   - src/cpp/common/resource_quota_cc.cc
   - src/cpp/common/rpc_method.cc
   - src/cpp/common/validate_service_config.cc
   - src/cpp/common/version_cc.cc
   - src/cpp/server/async_generic_service.cc
   - src/cpp/server/channel_argument_option.cc
   - src/cpp/server/create_default_thread_pool.cc
   - src/cpp/server/dynamic_thread_pool.cc
   - src/cpp/server/external_connection_acceptor_impl.cc
   - src/cpp/server/health/default_health_check_service.cc
   - src/cpp/server/health/health_check_service.cc
   - src/cpp/server/health/health_check_service_server_builder_option.cc
   - src/cpp/server/insecure_server_credentials.cc
   - src/cpp/server/orca/call_metric_recorder.cc
   - src/cpp/server/server_builder.cc
   - src/cpp/server/server_callback.cc
   - src/cpp/server/server_cc.cc
   - src/cpp/server/server_context.cc
   - src/cpp/server/server_credentials.cc
   - src/cpp/server/server_posix.cc
   - src/cpp/thread_manager/thread_manager.cc
   - src/cpp/util/byte_buffer_cc.cc
   - src/cpp/util/status.cc
   - src/cpp/util/string_ref.cc
   - src/cpp/util/time_cc.cc
   deps:
   - grpc_unsecure
   baselib: true
 - name: grpc_plugin_support
   build: protoc
   language: c++
   public_headers:
   - include/grpc++/impl/codegen/config_protobuf.h
   - include/grpcpp/impl/codegen/config_protobuf.h
   headers:
   - src/compiler/config.h
   - src/compiler/config_protobuf.h
   - src/compiler/cpp_generator.h
   - src/compiler/cpp_generator_helpers.h
   - src/compiler/cpp_plugin.h
   - src/compiler/csharp_generator.h
   - src/compiler/csharp_generator_helpers.h
   - src/compiler/generator_helpers.h
   - src/compiler/node_generator.h
   - src/compiler/node_generator_helpers.h
   - src/compiler/objective_c_generator.h
   - src/compiler/objective_c_generator_helpers.h
   - src/compiler/php_generator.h
   - src/compiler/php_generator_helpers.h
   - src/compiler/protobuf_plugin.h
   - src/compiler/python_generator.h
   - src/compiler/python_generator_helpers.h
   - src/compiler/python_private_generator.h
   - src/compiler/ruby_generator.h
   - src/compiler/ruby_generator_helpers-inl.h
   - src/compiler/ruby_generator_map-inl.h
   - src/compiler/ruby_generator_string-inl.h
   - src/compiler/schema_interface.h
   src:
   - src/compiler/cpp_generator.cc
   - src/compiler/csharp_generator.cc
   - src/compiler/node_generator.cc
   - src/compiler/objective_c_generator.cc
   - src/compiler/php_generator.cc
   - src/compiler/python_generator.cc
   - src/compiler/ruby_generator.cc
   deps: []
 - name: grpcpp_channelz
   build: all
   language: c++
   public_headers:
   - include/grpcpp/ext/channelz_service_plugin.h
   headers:
   - src/cpp/server/channelz/channelz_service.h
   src:
   - src/proto/grpc/channelz/channelz.proto
   - src/cpp/server/channelz/channelz_service.cc
   - src/cpp/server/channelz/channelz_service_plugin.cc
   deps:
   - grpc++
 targets:
 - name: alloc_test
   build: test
   language: c
   headers: []
   src:
   - test/core/gpr/alloc_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: alpn_test
   build: test
   language: c
   headers: []
   src:
   - test/core/transport/chttp2/alpn_test.cc
   deps:
   - grpc_test_util
 - name: alts_counter_test
   build: test
   language: c
   headers:
   - test/core/tsi/alts/crypt/gsec_test_util.h
   src:
   - test/core/tsi/alts/crypt/gsec_test_util.cc
   - test/core/tsi/alts/frame_protector/alts_counter_test.cc
   deps:
   - grpc_test_util
 - name: alts_crypt_test
   build: test
   language: c
   headers:
   - test/core/tsi/alts/crypt/gsec_test_util.h
   src:
   - test/core/tsi/alts/crypt/aes_gcm_test.cc
   - test/core/tsi/alts/crypt/gsec_test_util.cc
   deps:
   - grpc_test_util
 - name: alts_crypter_test
   build: test
   language: c
   headers:
   - test/core/tsi/alts/crypt/gsec_test_util.h
   src:
   - test/core/tsi/alts/crypt/gsec_test_util.cc
   - test/core/tsi/alts/frame_protector/alts_crypter_test.cc
   deps:
   - grpc_test_util
 - name: alts_frame_protector_test
   build: test
   language: c
   headers:
   - test/core/tsi/alts/crypt/gsec_test_util.h
   - test/core/tsi/transport_security_test_lib.h
   src:
   - test/core/tsi/alts/crypt/gsec_test_util.cc
   - test/core/tsi/alts/frame_protector/alts_frame_protector_test.cc
   - test/core/tsi/transport_security_test_lib.cc
   deps:
   - grpc_test_util
 - name: alts_grpc_record_protocol_test
   build: test
   language: c
   headers:
   - test/core/tsi/alts/crypt/gsec_test_util.h
   src:
   - test/core/tsi/alts/crypt/gsec_test_util.cc
   - test/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol_test.cc
   deps:
   - grpc_test_util
 - name: alts_handshaker_client_test
   build: test
   language: c
   headers:
   - test/core/tsi/alts/handshaker/alts_handshaker_service_api_test_lib.h
   src:
   - test/core/tsi/alts/handshaker/alts_handshaker_client_test.cc
   - test/core/tsi/alts/handshaker/alts_handshaker_service_api_test_lib.cc
   deps:
   - grpc_test_util
 - name: alts_iovec_record_protocol_test
   build: test
   language: c
   headers:
   - test/core/tsi/alts/crypt/gsec_test_util.h
   src:
   - test/core/tsi/alts/crypt/gsec_test_util.cc
   - test/core/tsi/alts/zero_copy_frame_protector/alts_iovec_record_protocol_test.cc
   deps:
   - grpc_test_util
 - name: alts_security_connector_test
   build: test
   language: c
   headers: []
   src:
   - test/core/security/alts_security_connector_test.cc
   deps:
   - grpc_test_util
 - name: alts_tsi_handshaker_test
   build: test
   language: c
   headers:
   - test/core/tsi/alts/handshaker/alts_handshaker_service_api_test_lib.h
   src:
   - test/core/tsi/alts/handshaker/alts_handshaker_service_api_test_lib.cc
   - test/core/tsi/alts/handshaker/alts_tsi_handshaker_test.cc
   deps:
   - grpc_test_util
 - name: alts_tsi_utils_test
   build: test
   language: c
   headers:
   - test/core/tsi/alts/handshaker/alts_handshaker_service_api_test_lib.h
   src:
   - test/core/tsi/alts/handshaker/alts_handshaker_service_api_test_lib.cc
   - test/core/tsi/alts/handshaker/alts_tsi_utils_test.cc
   deps:
   - grpc_test_util
 - name: alts_zero_copy_grpc_protector_test
   build: test
   language: c
   headers:
   - test/core/tsi/alts/crypt/gsec_test_util.h
   src:
   - test/core/tsi/alts/crypt/gsec_test_util.cc
   - test/core/tsi/alts/zero_copy_frame_protector/alts_zero_copy_grpc_protector_test.cc
   deps:
   - grpc_test_util
 - name: arena_test
   build: test
   language: c
   headers: []
   src:
   - test/core/gpr/arena_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: auth_context_test
   build: test
   language: c
   headers: []
   src:
   - test/core/security/auth_context_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: b64_test
   build: test
   language: c
   headers: []
   src:
   - test/core/slice/b64_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: bad_server_response_test
   build: test
   language: c
   headers:
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/end2end/bad_server_response_test.cc
   - test/core/end2end/cq_verifier.cc
   deps:
   - grpc_test_util
 - name: bad_ssl_alpn_test
   build: test
   language: c
   headers:
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/bad_ssl/bad_ssl_test.cc
   - test/core/end2end/cq_verifier.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: bad_ssl_cert_test
   build: test
   language: c
   headers:
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/bad_ssl/bad_ssl_test.cc
   - test/core/end2end/cq_verifier.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: bin_decoder_test
   build: test
   language: c
   headers: []
   src:
   - test/core/transport/chttp2/bin_decoder_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: bin_encoder_test
   build: test
   language: c
   headers: []
   src:
   - test/core/transport/chttp2/bin_encoder_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: buffer_list_test
   build: test
   language: c
   headers: []
   src:
   - test/core/iomgr/buffer_list_test.cc
   deps:
   - grpc_test_util
 - name: c_slice_buffer_test
   build: test
   language: c
   headers: []
   src:
   - test/core/slice/c_slice_buffer_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: channel_stack_test
   build: test
   language: c
   headers: []
   src:
   - test/core/channel/channel_stack_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: check_gcp_environment_linux_test
   build: test
   language: c
   headers: []
   src:
   - test/core/security/check_gcp_environment_linux_test.cc
   deps:
   - grpc_test_util
 - name: check_gcp_environment_windows_test
   build: test
   language: c
   headers: []
   src:
   - test/core/security/check_gcp_environment_windows_test.cc
   deps:
   - grpc_test_util
 - name: client_ssl_test
   build: test
   language: c
   headers: []
   src:
   - test/core/handshake/client_ssl.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: cmdline_test
   build: test
   language: c
   headers: []
   src:
   - test/core/util/cmdline_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: combiner_test
   build: test
   language: c
   headers: []
   src:
   - test/core/iomgr/combiner_test.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: completion_queue_threading_test
   build: test
   run: false
   language: c
   headers: []
   src:
   - test/core/surface/completion_queue_threading_test.cc
   deps:
   - grpc_test_util
 - name: compression_test
   build: test
   language: c
   headers:
   - test/core/compression/args_utils.h
   src:
   - test/core/compression/args_utils.cc
   - test/core/compression/compression_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: concurrent_connectivity_test
   build: test
   language: c
   headers: []
   src:
   - test/core/surface/concurrent_connectivity_test.cc
   deps:
   - grpc_test_util
 - name: connection_refused_test
   build: test
   language: c
   headers:
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/end2end/connection_refused_test.cc
   - test/core/end2end/cq_verifier.cc
   deps:
   - grpc_test_util
 - name: cpu_test
   build: test
   language: c
   headers: []
   src:
   - test/core/gpr/cpu_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: dns_resolver_cooldown_test
   build: test
   language: c
   headers: []
   src:
   - test/core/client_channel/resolvers/dns_resolver_cooldown_test.cc
   deps:
   - grpc_test_util
 - name: dns_resolver_test
   build: test
   language: c
   headers: []
   src:
   - test/core/client_channel/resolvers/dns_resolver_test.cc
   deps:
   - grpc_test_util
 - name: dualstack_socket_test
   build: test
   language: c
   headers:
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/end2end/cq_verifier.cc
   - test/core/end2end/dualstack_socket_test.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: endpoint_pair_test
   build: test
   language: c
   headers:
   - test/core/iomgr/endpoint_tests.h
   src:
   - test/core/iomgr/endpoint_pair_test.cc
   - test/core/iomgr/endpoint_tests.cc
   deps:
   - grpc_test_util
 - name: env_test
   build: test
   language: c
   headers: []
   src:
   - test/core/gpr/env_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: fake_resolver_test
   build: test
   language: c
   headers: []
   src:
   - test/core/client_channel/resolvers/fake_resolver_test.cc
   deps:
   - grpc_test_util
 - name: fake_transport_security_test
   build: test
   language: c
   headers:
   - test/core/tsi/transport_security_test_lib.h
   src:
   - test/core/tsi/fake_transport_security_test.cc
   - test/core/tsi/transport_security_test_lib.cc
   deps:
   - grpc_test_util
 - name: fd_conservation_posix_test
   build: test
   language: c
   headers: []
   src:
   - test/core/iomgr/fd_conservation_posix_test.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: fd_posix_test
   build: test
   language: c
   headers: []
   src:
   - test/core/iomgr/fd_posix_test.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: fling_stream_test
   build: test
   language: c
   headers:
   - test/core/end2end/data/ssl_test_data.h
   src:
   - test/core/end2end/data/client_certs.cc
   - test/core/end2end/data/server1_cert.cc
   - test/core/end2end/data/server1_key.cc
   - test/core/end2end/data/test_root_cert.cc
   - test/core/fling/fling_stream_test.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: fling_test
   build: test
   language: c
   headers:
   - test/core/end2end/data/ssl_test_data.h
   src:
   - test/core/end2end/data/client_certs.cc
   - test/core/end2end/data/server1_cert.cc
   - test/core/end2end/data/server1_key.cc
   - test/core/end2end/data/test_root_cert.cc
   - test/core/fling/fling_test.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: fork_test
   build: test
   language: c
   headers: []
   src:
   - test/core/gprpp/fork_test.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
   uses_polling: false
 - name: format_request_test
   build: test
   language: c
   headers:
   - test/core/end2end/data/ssl_test_data.h
   src:
   - test/core/end2end/data/client_certs.cc
   - test/core/end2end/data/server1_cert.cc
   - test/core/end2end/data/server1_key.cc
   - test/core/end2end/data/test_root_cert.cc
   - test/core/http/format_request_test.cc
   deps:
   - grpc_test_util
 - name: frame_handler_test
   build: test
   language: c
   headers:
   - test/core/tsi/alts/crypt/gsec_test_util.h
   src:
   - test/core/tsi/alts/crypt/gsec_test_util.cc
   - test/core/tsi/alts/frame_protector/frame_handler_test.cc
   deps:
   - grpc_test_util
 - name: goaway_server_test
   build: test
   language: c
   headers:
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/end2end/cq_verifier.cc
   - test/core/end2end/goaway_server_test.cc
   deps:
   - grpc_test_util
 - name: grpc_alts_credentials_options_test
   build: test
   language: c
   headers: []
   src:
   - test/core/security/grpc_alts_credentials_options_test.cc
   deps:
   - grpc_test_util
 - name: grpc_byte_buffer_reader_test
   build: test
   language: c
   headers: []
   src:
   - test/core/surface/byte_buffer_reader_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: grpc_completion_queue_test
   build: test
   language: c
   headers: []
   src:
   - test/core/surface/completion_queue_test.cc
   deps:
   - grpc_test_util
 - name: grpc_ipv6_loopback_available_test
   build: test
   language: c
   headers: []
   src:
   - test/core/iomgr/grpc_ipv6_loopback_available_test.cc
   deps:
   - grpc_test_util
 - name: handshake_server_with_readahead_handshaker_test
   build: test
   language: c
   headers:
   - test/core/handshake/server_ssl_common.h
   src:
   - test/core/handshake/readahead_handshaker_server_ssl.cc
   - test/core/handshake/server_ssl_common.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: histogram_test
   build: test
   language: c
   headers: []
   src:
   - test/core/util/histogram_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: host_port_test
   build: test
   language: c
   headers: []
   src:
   - test/core/gprpp/host_port_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: hpack_encoder_test
   build: test
   language: c
   headers: []
   src:
   - test/core/transport/chttp2/hpack_encoder_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: inproc_callback_test
   build: test
   language: c
   headers: []
   src:
   - test/core/end2end/inproc_callback_test.cc
   deps:
   - end2end_tests
   uses_polling: false
 - name: invalid_call_argument_test
   build: test
   language: c
   headers:
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/end2end/cq_verifier.cc
   - test/core/end2end/invalid_call_argument_test.cc
   deps:
   - grpc_test_util
 - name: json_token_test
   build: test
   language: c
   headers: []
   src:
   - test/core/security/json_token_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: jwt_verifier_test
   build: test
   language: c
   headers: []
   src:
   - test/core/security/jwt_verifier_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: lame_client_test
   build: test
   language: c
   headers:
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/end2end/cq_verifier.cc
   - test/core/surface/lame_client_test.cc
   deps:
   - grpc_test_util
 - name: load_file_test
   build: test
   language: c
   headers: []
   src:
   - test/core/iomgr/load_file_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
+- name: manual_constructor_test
+  build: test
+  language: c
+  headers: []
+  src:
+  - test/core/gprpp/manual_constructor_test.cc
+  deps:
+  - grpc_test_util
+  uses_polling: false
 - name: memory_quota_stress_test
   build: test
   language: c
   headers:
   - src/core/ext/upb-generated/google/protobuf/any.upb.h
   - src/core/ext/upb-generated/google/rpc/status.upb.h
   - src/core/lib/debug/trace.h
   - src/core/lib/gprpp/atomic_utils.h
   - src/core/lib/gprpp/bitset.h
   - src/core/lib/gprpp/orphanable.h
   - src/core/lib/gprpp/ref_counted.h
   - src/core/lib/gprpp/ref_counted_ptr.h
   - src/core/lib/gprpp/status_helper.h
   - src/core/lib/gprpp/time.h
   - src/core/lib/iomgr/closure.h
   - src/core/lib/iomgr/combiner.h
   - src/core/lib/iomgr/error.h
   - src/core/lib/iomgr/error_internal.h
   - src/core/lib/iomgr/exec_ctx.h
   - src/core/lib/iomgr/executor.h
   - src/core/lib/iomgr/iomgr_internal.h
   - src/core/lib/promise/activity.h
   - src/core/lib/promise/context.h
   - src/core/lib/promise/detail/basic_seq.h
   - src/core/lib/promise/detail/promise_factory.h
   - src/core/lib/promise/detail/promise_like.h
   - src/core/lib/promise/detail/status.h
   - src/core/lib/promise/detail/switch.h
   - src/core/lib/promise/exec_ctx_wakeup_scheduler.h
   - src/core/lib/promise/loop.h
   - src/core/lib/promise/map.h
   - src/core/lib/promise/poll.h
   - src/core/lib/promise/race.h
   - src/core/lib/promise/seq.h
   - src/core/lib/resource_quota/memory_quota.h
   - src/core/lib/resource_quota/trace.h
   - src/core/lib/slice/percent_encoding.h
   - src/core/lib/slice/slice.h
   - src/core/lib/slice/slice_internal.h
   - src/core/lib/slice/slice_refcount.h
   - src/core/lib/slice/slice_refcount_base.h
   - src/core/lib/slice/slice_string_helpers.h
   src:
   - src/core/ext/upb-generated/google/protobuf/any.upb.c
   - src/core/ext/upb-generated/google/rpc/status.upb.c
   - src/core/lib/debug/trace.cc
   - src/core/lib/event_engine/memory_allocator.cc
   - src/core/lib/gprpp/status_helper.cc
   - src/core/lib/gprpp/time.cc
   - src/core/lib/iomgr/combiner.cc
   - src/core/lib/iomgr/error.cc
   - src/core/lib/iomgr/exec_ctx.cc
   - src/core/lib/iomgr/executor.cc
   - src/core/lib/iomgr/iomgr_internal.cc
   - src/core/lib/promise/activity.cc
   - src/core/lib/resource_quota/memory_quota.cc
   - src/core/lib/resource_quota/trace.cc
   - src/core/lib/slice/percent_encoding.cc
   - src/core/lib/slice/slice.cc
   - src/core/lib/slice/slice_refcount.cc
   - src/core/lib/slice/slice_string_helpers.cc
   - test/core/resource_quota/memory_quota_stress_test.cc
   deps:
   - absl/meta:type_traits
   - absl/status:statusor
   - absl/types:variant
   - absl/utility:utility
   - gpr
   - upb
   platforms:
   - linux
   - posix
   uses_polling: false
 - name: message_compress_test
   build: test
   language: c
   headers: []
   src:
   - test/core/compression/message_compress_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: minimal_stack_is_minimal_test
   build: test
   language: c
   headers: []
   src:
   - test/core/channel/minimal_stack_is_minimal_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: mpmcqueue_test
   build: test
   language: c
   headers: []
   src:
   - test/core/iomgr/mpmcqueue_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: mpscq_test
   build: test
   language: c
   headers: []
   src:
   - test/core/gprpp/mpscq_test.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
   uses_polling: false
 - name: multiple_server_queues_test
   build: test
   language: c
   headers:
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/end2end/cq_verifier.cc
   - test/core/end2end/multiple_server_queues_test.cc
   deps:
   - grpc_test_util
 - name: murmur_hash_test
   build: test
   language: c
   headers: []
   src:
   - test/core/gpr/murmur_hash_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: no_server_test
   build: test
   language: c
   headers:
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/end2end/cq_verifier.cc
   - test/core/end2end/no_server_test.cc
   deps:
   - grpc_test_util
 - name: num_external_connectivity_watchers_test
   build: test
   language: c
   headers: []
   src:
   - test/core/surface/num_external_connectivity_watchers_test.cc
   deps:
   - grpc_test_util
 - name: parse_address_test
   build: test
   language: c
   headers: []
   src:
   - test/core/address_utils/parse_address_test.cc
   deps:
   - grpc_test_util
 - name: parse_address_with_named_scope_id_test
   build: test
   language: c
   headers: []
   src:
   - test/core/address_utils/parse_address_with_named_scope_id_test.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
   uses_polling: false
 - name: parser_test
   build: test
   language: c
   headers:
   - test/core/end2end/data/ssl_test_data.h
   src:
   - test/core/end2end/data/client_certs.cc
   - test/core/end2end/data/server1_cert.cc
   - test/core/end2end/data/server1_key.cc
   - test/core/end2end/data/test_root_cert.cc
   - test/core/http/parser_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: percent_encoding_test
   build: test
   language: c
   headers: []
   src:
   - test/core/slice/percent_encoding_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: public_headers_must_be_c89
   build: test
   language: c
   headers:
   - src/core/lib/security/authorization/grpc_authorization_policy_provider.h
   - src/core/lib/security/authorization/rbac_translator.h
   src:
   - src/core/lib/security/authorization/grpc_authorization_policy_provider.cc
   - src/core/lib/security/authorization/rbac_translator.cc
   - test/core/surface/public_headers_must_be_c89.c
   deps:
   - grpc_test_util
 - name: resolve_address_using_ares_resolver_posix_test
   build: test
   language: c
   headers: []
   src:
   - test/core/iomgr/resolve_address_posix_test.cc
   deps:
   - grpc_test_util
   args:
   - --resolver=ares
   platforms:
   - linux
   - posix
   - mac
 - name: resolve_address_using_native_resolver_posix_test
   build: test
   language: c
   headers: []
   src:
   - test/core/iomgr/resolve_address_posix_test.cc
   deps:
   - grpc_test_util
   args:
   - --resolver=native
   platforms:
   - linux
   - posix
   - mac
 - name: secure_channel_create_test
   build: test
   language: c
   headers: []
   src:
   - test/core/surface/secure_channel_create_test.cc
   deps:
   - grpc_test_util
 - name: secure_endpoint_test
   build: test
   language: c
   headers:
   - test/core/iomgr/endpoint_tests.h
   src:
   - test/core/iomgr/endpoint_tests.cc
   - test/core/security/secure_endpoint_test.cc
   deps:
   - grpc_test_util
 - name: security_connector_test
   build: test
   language: c
   headers: []
   src:
   - test/core/security/security_connector_test.cc
   deps:
   - grpc_test_util
 - name: sequential_connectivity_test
   build: test
   run: false
   language: c
   headers: []
   src:
   - test/core/surface/sequential_connectivity_test.cc
   deps:
   - grpc_test_util
 - name: server_ssl_test
   build: test
   language: c
   headers:
   - test/core/handshake/server_ssl_common.h
   src:
   - test/core/handshake/server_ssl.cc
   - test/core/handshake/server_ssl_common.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: server_test
   build: test
   language: c
   headers: []
   src:
   - test/core/surface/server_test.cc
   deps:
   - grpc_test_util
 - name: slice_split_test
   build: test
   language: c
   headers: []
   src:
   - test/core/slice/slice_split_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: slice_string_helpers_test
   build: test
   language: c
   headers:
   - src/core/lib/slice/slice.h
   - src/core/lib/slice/slice_internal.h
   - src/core/lib/slice/slice_refcount.h
   - src/core/lib/slice/slice_refcount_base.h
   - src/core/lib/slice/slice_string_helpers.h
   src:
   - src/core/lib/slice/slice.cc
   - src/core/lib/slice/slice_refcount.cc
   - src/core/lib/slice/slice_string_helpers.cc
   - test/core/slice/slice_string_helpers_test.cc
   deps:
   - gpr
   uses_polling: false
 - name: sockaddr_resolver_test
   build: test
   language: c
   headers: []
   src:
   - test/core/client_channel/resolvers/sockaddr_resolver_test.cc
   deps:
   - grpc_test_util
 - name: socket_utils_test
   build: test
   language: c
   headers: []
   src:
   - test/core/iomgr/socket_utils_test.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: spinlock_test
   build: test
   language: c
   headers: []
   src:
   - test/core/gpr/spinlock_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: ssl_credentials_test
   build: test
   language: c
   headers: []
   src:
   - test/core/security/ssl_credentials_test.cc
   deps:
   - grpc_test_util
 - name: ssl_transport_security_test
   build: test
   language: c
   headers:
   - test/core/tsi/transport_security_test_lib.h
   src:
   - test/core/tsi/ssl_transport_security_test.cc
   - test/core/tsi/transport_security_test_lib.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: status_conversion_test
   build: test
   language: c
   headers: []
   src:
   - test/core/transport/status_conversion_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: stream_map_test
   build: test
   language: c
   headers: []
   src:
   - test/core/transport/chttp2/stream_map_test.cc
   deps:
   - grpc_test_util
 - name: string_test
   build: test
   language: c
   headers: []
   src:
   - test/core/gpr/string_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: sync_test
   build: test
   language: c
   headers: []
   src:
   - test/core/gpr/sync_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: tcp_client_posix_test
   build: test
   language: c
   headers: []
   src:
   - test/core/iomgr/tcp_client_posix_test.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: tcp_posix_test
   build: test
   language: c
   headers:
   - test/core/iomgr/endpoint_tests.h
   src:
   - test/core/iomgr/endpoint_tests.cc
   - test/core/iomgr/tcp_posix_test.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
 - name: tcp_server_posix_test
   build: test
   language: c
   headers: []
   src:
   - test/core/iomgr/tcp_server_posix_test.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: test_core_gpr_time_test
   build: test
   language: c
   headers: []
   src:
   - test/core/gpr/time_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: thd_test
   build: test
   language: c
   headers: []
   src:
   - test/core/gprpp/thd_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: threadpool_test
   build: test
   language: c
   headers: []
   src:
   - test/core/iomgr/threadpool_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: time_averaged_stats_test
   build: test
   language: c
   headers: []
   src:
   - test/core/iomgr/time_averaged_stats_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: timer_heap_test
   build: test
   language: c
   headers: []
   src:
   - test/core/iomgr/timer_heap_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: timer_list_test
   build: test
   language: c
   headers: []
   src:
   - test/core/iomgr/timer_list_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: transport_security_common_api_test
   build: test
   language: c
   headers: []
   src:
   - test/core/tsi/alts/handshaker/transport_security_common_api_test.cc
   deps:
   - grpc_test_util
 - name: transport_security_test
   build: test
   language: c
   headers: []
   src:
   - test/core/tsi/transport_security_test.cc
   deps:
   - grpc_test_util
 - name: varint_test
   build: test
   language: c
   headers: []
   src:
   - test/core/transport/chttp2/varint_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: activity_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/gpr/alloc.h
   - src/core/lib/gpr/env.h
   - src/core/lib/gpr/murmur_hash.h
   - src/core/lib/gpr/spinlock.h
   - src/core/lib/gpr/string.h
   - src/core/lib/gpr/string_windows.h
   - src/core/lib/gpr/time_precise.h
   - src/core/lib/gpr/tls.h
   - src/core/lib/gpr/tmpfile.h
   - src/core/lib/gpr/useful.h
   - src/core/lib/gprpp/atomic_utils.h
   - src/core/lib/gprpp/bitset.h
   - src/core/lib/gprpp/construct_destruct.h
   - src/core/lib/gprpp/debug_location.h
   - src/core/lib/gprpp/examine_stack.h
   - src/core/lib/gprpp/fork.h
   - src/core/lib/gprpp/global_config.h
   - src/core/lib/gprpp/global_config_custom.h
   - src/core/lib/gprpp/global_config_env.h
   - src/core/lib/gprpp/global_config_generic.h
   - src/core/lib/gprpp/host_port.h
   - src/core/lib/gprpp/manual_constructor.h
   - src/core/lib/gprpp/memory.h
   - src/core/lib/gprpp/mpscq.h
   - src/core/lib/gprpp/orphanable.h
   - src/core/lib/gprpp/ref_counted.h
   - src/core/lib/gprpp/ref_counted_ptr.h
   - src/core/lib/gprpp/stat.h
   - src/core/lib/gprpp/sync.h
   - src/core/lib/gprpp/thd.h
   - src/core/lib/gprpp/time_util.h
   - src/core/lib/profiling/timers.h
   - src/core/lib/promise/activity.h
   - src/core/lib/promise/context.h
   - src/core/lib/promise/detail/basic_join.h
   - src/core/lib/promise/detail/basic_seq.h
   - src/core/lib/promise/detail/promise_factory.h
   - src/core/lib/promise/detail/promise_like.h
   - src/core/lib/promise/detail/status.h
   - src/core/lib/promise/detail/switch.h
   - src/core/lib/promise/join.h
   - src/core/lib/promise/poll.h
   - src/core/lib/promise/promise.h
   - src/core/lib/promise/seq.h
   - src/core/lib/promise/wait_set.h
   - test/core/promise/test_wakeup_schedulers.h
   src:
   - src/core/lib/gpr/alloc.cc
   - src/core/lib/gpr/atm.cc
   - src/core/lib/gpr/cpu_iphone.cc
   - src/core/lib/gpr/cpu_linux.cc
   - src/core/lib/gpr/cpu_posix.cc
   - src/core/lib/gpr/cpu_windows.cc
   - src/core/lib/gpr/env_linux.cc
   - src/core/lib/gpr/env_posix.cc
   - src/core/lib/gpr/env_windows.cc
   - src/core/lib/gpr/log.cc
   - src/core/lib/gpr/log_android.cc
   - src/core/lib/gpr/log_linux.cc
   - src/core/lib/gpr/log_posix.cc
   - src/core/lib/gpr/log_windows.cc
   - src/core/lib/gpr/murmur_hash.cc
   - src/core/lib/gpr/string.cc
   - src/core/lib/gpr/string_posix.cc
   - src/core/lib/gpr/string_util_windows.cc
   - src/core/lib/gpr/string_windows.cc
   - src/core/lib/gpr/sync.cc
   - src/core/lib/gpr/sync_abseil.cc
   - src/core/lib/gpr/sync_posix.cc
   - src/core/lib/gpr/sync_windows.cc
   - src/core/lib/gpr/time.cc
   - src/core/lib/gpr/time_posix.cc
   - src/core/lib/gpr/time_precise.cc
   - src/core/lib/gpr/time_windows.cc
   - src/core/lib/gpr/tmpfile_msys.cc
   - src/core/lib/gpr/tmpfile_posix.cc
   - src/core/lib/gpr/tmpfile_windows.cc
   - src/core/lib/gpr/wrap_memcpy.cc
   - src/core/lib/gprpp/examine_stack.cc
   - src/core/lib/gprpp/fork.cc
   - src/core/lib/gprpp/global_config_env.cc
   - src/core/lib/gprpp/host_port.cc
   - src/core/lib/gprpp/mpscq.cc
   - src/core/lib/gprpp/stat_posix.cc
   - src/core/lib/gprpp/stat_windows.cc
   - src/core/lib/gprpp/thd_posix.cc
   - src/core/lib/gprpp/thd_windows.cc
   - src/core/lib/gprpp/time_util.cc
   - src/core/lib/profiling/basic_timers.cc
   - src/core/lib/profiling/stap_timers.cc
   - src/core/lib/promise/activity.cc
   - test/core/promise/activity_test.cc
   deps:
   - absl/base:base
   - absl/base:core_headers
   - absl/container:flat_hash_set
   - absl/hash:hash
   - absl/memory:memory
   - absl/meta:type_traits
   - absl/random:random
   - absl/status:status
   - absl/status:statusor
   - absl/strings:cord
   - absl/strings:str_format
   - absl/strings:strings
   - absl/synchronization:synchronization
   - absl/time:time
   - absl/types:optional
   - absl/types:variant
   - absl/utility:utility
   uses_polling: false
 - name: address_sorting_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/cpp/naming/address_sorting_test.cc
   deps:
   - grpc++_test_config
   - grpc++_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: address_sorting_test_unsecure
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/util/byte_buffer_proto_helper.h
   - test/cpp/util/string_ref_helper.h
   - test/cpp/util/subprocess.h
   src:
   - test/cpp/naming/address_sorting_test.cc
   - test/cpp/util/byte_buffer_proto_helper.cc
   - test/cpp/util/string_ref_helper.cc
   - test/cpp/util/subprocess.cc
   deps:
   - grpc++_unsecure
   - grpc_test_util_unsecure
   - grpc++_test_config
   platforms:
   - linux
   - posix
   - mac
 - name: admin_services_end2end_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/cpp/server/csds/csds.h
   src:
   - src/proto/grpc/testing/xds/v3/base.proto
   - src/proto/grpc/testing/xds/v3/config_dump.proto
   - src/proto/grpc/testing/xds/v3/csds.proto
   - src/proto/grpc/testing/xds/v3/percent.proto
   - src/cpp/server/admin/admin_services.cc
   - src/cpp/server/csds/csds.cc
   - test/cpp/end2end/admin_services_end2end_test.cc
   deps:
   - grpc++_reflection
   - grpcpp_channelz
   - grpc++_test_util
 - name: alarm_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/cpp/common/alarm_test.cc
   deps:
   - grpc++_unsecure
   - grpc_test_util_unsecure
   platforms:
   - linux
   - posix
   - mac
 - name: alts_concurrent_connectivity_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/end2end/cq_verifier.h
   - test/core/tsi/alts/fake_handshaker/fake_handshaker_server.h
   - test/core/util/fake_udp_and_tcp_server.h
   src:
   - test/core/tsi/alts/fake_handshaker/handshaker.proto
   - test/core/tsi/alts/fake_handshaker/transport_security_common.proto
   - test/core/end2end/cq_verifier.cc
   - test/core/tsi/alts/fake_handshaker/fake_handshaker_server.cc
   - test/core/tsi/alts/handshaker/alts_concurrent_connectivity_test.cc
   - test/core/util/fake_udp_and_tcp_server.cc
   deps:
   - grpc++
   - grpc_test_util
   platforms:
   - linux
   - posix
 - name: alts_util_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/cpp/common/alts_util_test.cc
   deps:
   - grpc++_alts
   - grpc++_test_util
 - name: arena_promise_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/ext/upb-generated/google/protobuf/any.upb.h
   - src/core/ext/upb-generated/google/rpc/status.upb.h
   - src/core/lib/debug/trace.h
   - src/core/lib/gprpp/atomic_utils.h
   - src/core/lib/gprpp/bitset.h
   - src/core/lib/gprpp/cpp_impl_of.h
   - src/core/lib/gprpp/orphanable.h
   - src/core/lib/gprpp/ref_counted.h
   - src/core/lib/gprpp/ref_counted_ptr.h
   - src/core/lib/gprpp/status_helper.h
   - src/core/lib/gprpp/time.h
   - src/core/lib/iomgr/closure.h
   - src/core/lib/iomgr/combiner.h
   - src/core/lib/iomgr/error.h
   - src/core/lib/iomgr/error_internal.h
   - src/core/lib/iomgr/exec_ctx.h
   - src/core/lib/iomgr/executor.h
   - src/core/lib/iomgr/iomgr_internal.h
   - src/core/lib/promise/activity.h
   - src/core/lib/promise/arena_promise.h
   - src/core/lib/promise/context.h
   - src/core/lib/promise/detail/basic_seq.h
   - src/core/lib/promise/detail/promise_factory.h
   - src/core/lib/promise/detail/promise_like.h
   - src/core/lib/promise/detail/status.h
   - src/core/lib/promise/detail/switch.h
   - src/core/lib/promise/exec_ctx_wakeup_scheduler.h
   - src/core/lib/promise/loop.h
   - src/core/lib/promise/map.h
   - src/core/lib/promise/poll.h
   - src/core/lib/promise/race.h
   - src/core/lib/promise/seq.h
   - src/core/lib/resource_quota/arena.h
   - src/core/lib/resource_quota/memory_quota.h
   - src/core/lib/resource_quota/resource_quota.h
   - src/core/lib/resource_quota/thread_quota.h
   - src/core/lib/resource_quota/trace.h
   - src/core/lib/slice/percent_encoding.h
   - src/core/lib/slice/slice.h
   - src/core/lib/slice/slice_internal.h
   - src/core/lib/slice/slice_refcount.h
   - src/core/lib/slice/slice_refcount_base.h
   - src/core/lib/slice/slice_string_helpers.h
   - test/core/promise/test_context.h
   src:
   - src/core/ext/upb-generated/google/protobuf/any.upb.c
   - src/core/ext/upb-generated/google/rpc/status.upb.c
   - src/core/lib/debug/trace.cc
   - src/core/lib/event_engine/memory_allocator.cc
   - src/core/lib/gprpp/status_helper.cc
   - src/core/lib/gprpp/time.cc
   - src/core/lib/iomgr/combiner.cc
   - src/core/lib/iomgr/error.cc
   - src/core/lib/iomgr/exec_ctx.cc
   - src/core/lib/iomgr/executor.cc
   - src/core/lib/iomgr/iomgr_internal.cc
   - src/core/lib/promise/activity.cc
   - src/core/lib/resource_quota/arena.cc
   - src/core/lib/resource_quota/memory_quota.cc
   - src/core/lib/resource_quota/resource_quota.cc
   - src/core/lib/resource_quota/thread_quota.cc
   - src/core/lib/resource_quota/trace.cc
   - src/core/lib/slice/percent_encoding.cc
   - src/core/lib/slice/slice.cc
   - src/core/lib/slice/slice_refcount.cc
   - src/core/lib/slice/slice_string_helpers.cc
   - test/core/promise/arena_promise_test.cc
   deps:
   - absl/meta:type_traits
   - absl/status:statusor
   - absl/types:variant
   - absl/utility:utility
   - gpr
   - upb
   uses_polling: false
 - name: async_end2end_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - src/proto/grpc/health/v1/health.proto
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/async_end2end_test.cc
   deps:
   - grpc++_test_util
 - name: auth_property_iterator_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/cpp/common/auth_property_iterator_test.cc
   deps:
   - grpc++_test_util
   uses_polling: false
 - name: authorization_matchers_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/security/authorization_matchers_test.cc
   deps:
   - grpc_test_util
 - name: authorization_policy_provider_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/security/authorization/grpc_authorization_policy_provider.h
   - src/core/lib/security/authorization/rbac_translator.h
   src:
   - src/core/lib/security/authorization/grpc_authorization_policy_provider.cc
   - src/core/lib/security/authorization/rbac_translator.cc
   - src/cpp/server/authorization_policy_provider.cc
   - test/cpp/server/authorization_policy_provider_test.cc
   deps:
   - grpc++
   - grpc_test_util
 - name: avl_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/avl/avl.h
   src:
   - test/core/avl/avl_test.cc
   deps:
   - absl/container:inlined_vector
   uses_polling: false
 - name: aws_request_signer_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/security/aws_request_signer_test.cc
   deps:
   - grpc_test_util
 - name: backoff_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/backoff/backoff_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: bad_streaming_id_bad_client_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/bad_client/bad_client.h
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/bad_client/bad_client.cc
   - test/core/bad_client/tests/bad_streaming_id.cc
   - test/core/end2end/cq_verifier.cc
   deps:
   - grpc_test_util
 - name: badreq_bad_client_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/bad_client/bad_client.h
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/bad_client/bad_client.cc
   - test/core/bad_client/tests/badreq.cc
   - test/core/end2end/cq_verifier.cc
   deps:
   - grpc_test_util
 - name: bdp_estimator_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/transport/bdp_estimator_test.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
   uses_polling: false
 - name: binder_resolver_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/client_channel/resolvers/binder_resolver_test.cc
   deps:
   - grpc_test_util
 - name: binder_server_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/transport/binder/end2end/fake_binder.h
   - test/cpp/end2end/test_service_impl.h
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/core/transport/binder/end2end/binder_server_test.cc
   - test/core/transport/binder/end2end/fake_binder.cc
   - test/cpp/end2end/test_service_impl.cc
   deps:
   - grpc++_test_util
 - name: binder_transport_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/ext/transport/binder/client/binder_connector.h
   - src/core/ext/transport/binder/client/channel_create_impl.h
   - src/core/ext/transport/binder/client/connection_id_generator.h
   - src/core/ext/transport/binder/client/endpoint_binder_pool.h
   - src/core/ext/transport/binder/client/jni_utils.h
   - src/core/ext/transport/binder/client/security_policy_setting.h
   - src/core/ext/transport/binder/server/binder_server.h
   - src/core/ext/transport/binder/transport/binder_stream.h
   - src/core/ext/transport/binder/transport/binder_transport.h
   - src/core/ext/transport/binder/utils/binder_auto_utils.h
   - src/core/ext/transport/binder/utils/ndk_binder.h
   - src/core/ext/transport/binder/utils/transport_stream_receiver.h
   - src/core/ext/transport/binder/utils/transport_stream_receiver_impl.h
   - src/core/ext/transport/binder/wire_format/binder.h
   - src/core/ext/transport/binder/wire_format/binder_android.h
   - src/core/ext/transport/binder/wire_format/binder_constants.h
   - src/core/ext/transport/binder/wire_format/transaction.h
   - src/core/ext/transport/binder/wire_format/wire_reader.h
   - src/core/ext/transport/binder/wire_format/wire_reader_impl.h
   - src/core/ext/transport/binder/wire_format/wire_writer.h
   - src/cpp/client/create_channel_internal.h
   - src/cpp/common/channel_filter.h
   - src/cpp/server/dynamic_thread_pool.h
   - src/cpp/server/external_connection_acceptor_impl.h
   - src/cpp/server/health/default_health_check_service.h
   - src/cpp/server/thread_pool_interface.h
   - src/cpp/thread_manager/thread_manager.h
   - test/core/transport/binder/mock_objects.h
   src:
   - src/core/ext/transport/binder/client/binder_connector.cc
   - src/core/ext/transport/binder/client/channel_create.cc
   - src/core/ext/transport/binder/client/channel_create_impl.cc
   - src/core/ext/transport/binder/client/connection_id_generator.cc
   - src/core/ext/transport/binder/client/endpoint_binder_pool.cc
   - src/core/ext/transport/binder/client/jni_utils.cc
   - src/core/ext/transport/binder/client/security_policy_setting.cc
   - src/core/ext/transport/binder/security_policy/binder_security_policy.cc
   - src/core/ext/transport/binder/server/binder_server.cc
   - src/core/ext/transport/binder/server/binder_server_credentials.cc
   - src/core/ext/transport/binder/transport/binder_transport.cc
   - src/core/ext/transport/binder/utils/ndk_binder.cc
   - src/core/ext/transport/binder/utils/transport_stream_receiver_impl.cc
   - src/core/ext/transport/binder/wire_format/binder_android.cc
   - src/core/ext/transport/binder/wire_format/binder_constants.cc
   - src/core/ext/transport/binder/wire_format/transaction.cc
   - src/core/ext/transport/binder/wire_format/wire_reader_impl.cc
   - src/core/ext/transport/binder/wire_format/wire_writer.cc
   - src/cpp/client/channel_cc.cc
   - src/cpp/client/client_callback.cc
   - src/cpp/client/client_context.cc
   - src/cpp/client/client_interceptor.cc
   - src/cpp/client/create_channel.cc
   - src/cpp/client/create_channel_internal.cc
   - src/cpp/client/create_channel_posix.cc
   - src/cpp/client/credentials_cc.cc
   - src/cpp/codegen/codegen_init.cc
   - src/cpp/common/alarm.cc
   - src/cpp/common/channel_arguments.cc
   - src/cpp/common/channel_filter.cc
   - src/cpp/common/completion_queue_cc.cc
   - src/cpp/common/core_codegen.cc
   - src/cpp/common/resource_quota_cc.cc
   - src/cpp/common/rpc_method.cc
   - src/cpp/common/validate_service_config.cc
   - src/cpp/common/version_cc.cc
   - src/cpp/server/async_generic_service.cc
   - src/cpp/server/channel_argument_option.cc
   - src/cpp/server/create_default_thread_pool.cc
   - src/cpp/server/dynamic_thread_pool.cc
   - src/cpp/server/external_connection_acceptor_impl.cc
   - src/cpp/server/health/default_health_check_service.cc
   - src/cpp/server/health/health_check_service.cc
   - src/cpp/server/health/health_check_service_server_builder_option.cc
   - src/cpp/server/orca/call_metric_recorder.cc
   - src/cpp/server/server_builder.cc
   - src/cpp/server/server_callback.cc
   - src/cpp/server/server_cc.cc
   - src/cpp/server/server_context.cc
   - src/cpp/server/server_credentials.cc
   - src/cpp/server/server_posix.cc
   - src/cpp/thread_manager/thread_manager.cc
   - src/cpp/util/byte_buffer_cc.cc
   - src/cpp/util/status.cc
   - src/cpp/util/string_ref.cc
   - src/cpp/util/time_cc.cc
   - test/core/transport/binder/binder_transport_test.cc
   - test/core/transport/binder/mock_objects.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: bitset_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/gpr/useful.h
   - src/core/lib/gprpp/bitset.h
   src:
   - test/core/gprpp/bitset_test.cc
   deps: []
   uses_polling: false
 - name: byte_buffer_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/cpp/util/byte_buffer_test.cc
   deps:
   - grpc++_test_util
   uses_polling: false
+- name: byte_stream_test
+  gtest: true
+  build: test
+  language: c++
+  headers: []
+  src:
+  - test/core/transport/byte_stream_test.cc
+  deps:
+  - grpc_test_util
+  uses_polling: false
 - name: call_finalization_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/promise/test_context.h
   src:
   - test/core/channel/call_finalization_test.cc
   deps:
   - grpc_test_util
 - name: call_push_pull_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/gpr/useful.h
   - src/core/lib/gprpp/bitset.h
   - src/core/lib/gprpp/construct_destruct.h
   - src/core/lib/promise/call_push_pull.h
   - src/core/lib/promise/detail/promise_like.h
   - src/core/lib/promise/detail/status.h
   - src/core/lib/promise/poll.h
   src:
   - test/core/promise/call_push_pull_test.cc
   deps:
   - absl/meta:type_traits
   - absl/status:status
   - absl/status:statusor
   - absl/types:variant
   uses_polling: false
 - name: cancel_ares_query_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/end2end/cq_verifier.h
   - test/core/util/fake_udp_and_tcp_server.h
   src:
   - test/core/end2end/cq_verifier.cc
   - test/core/util/fake_udp_and_tcp_server.cc
   - test/cpp/naming/cancel_ares_query_test.cc
   deps:
   - grpc++_test_config
   - grpc++_test_util
 - name: cel_authorization_engine_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/security/authorization/cel_authorization_engine.h
   - src/core/lib/security/authorization/mock_cel/activation.h
   - src/core/lib/security/authorization/mock_cel/cel_expr_builder_factory.h
   - src/core/lib/security/authorization/mock_cel/cel_expression.h
   - src/core/lib/security/authorization/mock_cel/cel_value.h
   - src/core/lib/security/authorization/mock_cel/evaluator_core.h
   - src/core/lib/security/authorization/mock_cel/flat_expr_builder.h
   src:
   - src/core/lib/security/authorization/cel_authorization_engine.cc
   - test/core/security/cel_authorization_engine_test.cc
   deps:
   - grpc_test_util
 - name: certificate_provider_registry_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/client_channel/certificate_provider_registry_test.cc
   deps:
   - grpc_test_util
 - name: certificate_provider_store_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/xds/certificate_provider_store_test.cc
   deps:
   - grpc_test_util
 - name: cfstream_test
   gtest: true
   build: test
   run: false
   language: c++
   headers:
   - test/cpp/end2end/test_service_impl.h
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/cfstream_test.cc
   - test/cpp/end2end/test_service_impl.cc
   deps:
   - grpc++_test_util
 - name: channel_args_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/channel/channel_args_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: channel_arguments_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/cpp/common/channel_arguments_test.cc
   deps:
   - grpc++
   - grpc_test_util
   uses_polling: false
 - name: channel_creds_registry_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/security/channel_creds_registry_test.cc
   deps:
   - grpc_test_util
 - name: channel_filter_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/cpp/common/channel_filter_test.cc
   deps:
   - grpc++
   - grpc_test_util
   uses_polling: false
 - name: channel_stack_builder_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/channel/channel_stack_builder_test.cc
   deps:
   - grpc_test_util
 - name: channel_trace_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/util/channel_trace_proto_helper.h
   src:
   - src/proto/grpc/channelz/channelz.proto
   - test/core/channel/channel_trace_test.cc
   - test/cpp/util/channel_trace_proto_helper.cc
   deps:
   - grpc++
   - grpc_test_util
 - name: channelz_registry_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/channel/channelz_registry_test.cc
   deps:
   - grpc++
   - grpc_test_util
   uses_polling: false
 - name: channelz_service_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/end2end/test_service_impl.h
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/channelz_service_test.cc
   - test/cpp/end2end/test_service_impl.cc
   deps:
   - grpcpp_channelz
   - grpc++_test_util
 - name: channelz_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/util/channel_trace_proto_helper.h
   src:
   - src/proto/grpc/channelz/channelz.proto
   - test/core/channel/channelz_test.cc
   - test/cpp/util/channel_trace_proto_helper.cc
   deps:
   - grpc++
   - grpc_test_util
 - name: chunked_vector_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/ext/upb-generated/google/protobuf/any.upb.h
   - src/core/ext/upb-generated/google/rpc/status.upb.h
   - src/core/lib/debug/trace.h
   - src/core/lib/gprpp/atomic_utils.h
   - src/core/lib/gprpp/bitset.h
   - src/core/lib/gprpp/chunked_vector.h
   - src/core/lib/gprpp/cpp_impl_of.h
   - src/core/lib/gprpp/orphanable.h
   - src/core/lib/gprpp/ref_counted.h
   - src/core/lib/gprpp/ref_counted_ptr.h
   - src/core/lib/gprpp/status_helper.h
   - src/core/lib/gprpp/time.h
   - src/core/lib/iomgr/closure.h
   - src/core/lib/iomgr/combiner.h
   - src/core/lib/iomgr/error.h
   - src/core/lib/iomgr/error_internal.h
   - src/core/lib/iomgr/exec_ctx.h
   - src/core/lib/iomgr/executor.h
   - src/core/lib/iomgr/iomgr_internal.h
   - src/core/lib/promise/activity.h
   - src/core/lib/promise/context.h
   - src/core/lib/promise/detail/basic_seq.h
   - src/core/lib/promise/detail/promise_factory.h
   - src/core/lib/promise/detail/promise_like.h
   - src/core/lib/promise/detail/status.h
   - src/core/lib/promise/detail/switch.h
   - src/core/lib/promise/exec_ctx_wakeup_scheduler.h
   - src/core/lib/promise/loop.h
   - src/core/lib/promise/map.h
   - src/core/lib/promise/poll.h
   - src/core/lib/promise/race.h
   - src/core/lib/promise/seq.h
   - src/core/lib/resource_quota/arena.h
   - src/core/lib/resource_quota/memory_quota.h
   - src/core/lib/resource_quota/resource_quota.h
   - src/core/lib/resource_quota/thread_quota.h
   - src/core/lib/resource_quota/trace.h
   - src/core/lib/slice/percent_encoding.h
   - src/core/lib/slice/slice.h
   - src/core/lib/slice/slice_internal.h
   - src/core/lib/slice/slice_refcount.h
   - src/core/lib/slice/slice_refcount_base.h
   - src/core/lib/slice/slice_string_helpers.h
   src:
   - src/core/ext/upb-generated/google/protobuf/any.upb.c
   - src/core/ext/upb-generated/google/rpc/status.upb.c
   - src/core/lib/debug/trace.cc
   - src/core/lib/event_engine/memory_allocator.cc
   - src/core/lib/gprpp/status_helper.cc
   - src/core/lib/gprpp/time.cc
   - src/core/lib/iomgr/combiner.cc
   - src/core/lib/iomgr/error.cc
   - src/core/lib/iomgr/exec_ctx.cc
   - src/core/lib/iomgr/executor.cc
   - src/core/lib/iomgr/iomgr_internal.cc
   - src/core/lib/promise/activity.cc
   - src/core/lib/resource_quota/arena.cc
   - src/core/lib/resource_quota/memory_quota.cc
   - src/core/lib/resource_quota/resource_quota.cc
   - src/core/lib/resource_quota/thread_quota.cc
   - src/core/lib/resource_quota/trace.cc
   - src/core/lib/slice/percent_encoding.cc
   - src/core/lib/slice/slice.cc
   - src/core/lib/slice/slice_refcount.cc
   - src/core/lib/slice/slice_string_helpers.cc
   - test/core/gprpp/chunked_vector_test.cc
   deps:
   - absl/meta:type_traits
   - absl/status:statusor
   - absl/types:variant
   - absl/utility:utility
   - gpr
   - upb
   uses_polling: false
 - name: cli_call_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/util/cli_call.h
   - test/cpp/util/cli_credentials.h
   - test/cpp/util/config_grpc_cli.h
   - test/cpp/util/grpc_tool.h
   - test/cpp/util/proto_file_parser.h
   - test/cpp/util/proto_reflection_descriptor_database.h
   - test/cpp/util/service_describer.h
   src:
   - src/proto/grpc/reflection/v1alpha/reflection.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/util/cli_call.cc
   - test/cpp/util/cli_call_test.cc
   - test/cpp/util/cli_credentials.cc
   - test/cpp/util/grpc_tool.cc
   - test/cpp/util/proto_file_parser.cc
   - test/cpp/util/proto_reflection_descriptor_database.cc
   - test/cpp/util/service_describer.cc
   deps:
   - grpc++_test_util
 - name: client_authority_filter_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/promise/test_context.h
   src:
   - test/core/filters/client_authority_filter_test.cc
   deps:
   - grpc
   uses_polling: false
 - name: client_callback_end2end_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/end2end/interceptors_util.h
   - test/cpp/end2end/test_service_impl.h
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/client_callback_end2end_test.cc
   - test/cpp/end2end/interceptors_util.cc
   - test/cpp/end2end/test_service_impl.cc
   deps:
   - grpc++_test_util
 - name: client_channel_stress_test
   gtest: true
   build: test
   run: false
   language: c++
   headers:
   - test/cpp/end2end/test_service_impl.h
   src:
   - src/proto/grpc/lb/v1/load_balancer.proto
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/client/client_channel_stress_test.cc
   - test/cpp/end2end/test_service_impl.cc
   deps:
   - grpc++_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: client_context_test_peer_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/cpp/test/client_context_test_peer_test.cc
   deps:
   - grpc++_test
   - grpc++_test_util
 - name: client_interceptors_end2end_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/end2end/interceptors_util.h
   - test/cpp/end2end/test_service_impl.h
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/client_interceptors_end2end_test.cc
   - test/cpp/end2end/interceptors_util.cc
   - test/cpp/end2end/test_service_impl.cc
   deps:
   - grpc++_test_util
 - name: client_lb_end2end_test
   gtest: true
   build: test
   run: false
   language: c++
   headers:
   - src/cpp/server/orca/orca_interceptor.h
   - test/core/util/test_lb_policies.h
   - test/cpp/end2end/connection_delay_injector.h
   - test/cpp/end2end/test_service_impl.h
   src:
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - src/cpp/server/orca/orca_interceptor.cc
   - src/cpp/server/orca/orca_service.cc
   - test/core/util/test_lb_policies.cc
   - test/cpp/end2end/client_lb_end2end_test.cc
   - test/cpp/end2end/connection_delay_injector.cc
   - test/cpp/end2end/test_service_impl.cc
   deps:
   - grpc++_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: codegen_test_full
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/cpp/codegen/codegen_test_full.cc
   deps:
   - grpc++
   - grpc_test_util
   uses_polling: false
 - name: codegen_test_minimal
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/cpp/codegen/codegen_test_minimal.cc
   deps:
   - grpc++
   - grpc_test_util
   uses_polling: false
 - name: connection_prefix_bad_client_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/bad_client/bad_client.h
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/bad_client/bad_client.cc
   - test/core/bad_client/tests/connection_prefix.cc
   - test/core/end2end/cq_verifier.cc
   deps:
   - grpc_test_util
 - name: connectivity_state_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/transport/connectivity_state_test.cc
   deps:
   - grpc_test_util
 - name: context_allocator_end2end_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/end2end/test_service_impl.h
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/context_allocator_end2end_test.cc
   - test/cpp/end2end/test_service_impl.cc
   deps:
   - grpc++_test_util
 - name: context_list_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/transport/chttp2/context_list_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: context_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/gpr/tls.h
   - src/core/lib/promise/context.h
   src:
   - test/core/promise/context_test.cc
   deps: []
   uses_polling: false
 - name: core_configuration_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/config/core_configuration_test.cc
   deps:
   - grpc
   uses_polling: false
 - name: cpp_impl_of_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/gprpp/cpp_impl_of.h
   src:
   - test/core/gprpp/cpp_impl_of_test.cc
   deps: []
   uses_polling: false
 - name: crl_ssl_transport_security_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/tsi/transport_security_test_lib.h
   src:
   - test/core/tsi/crl_ssl_transport_security_test.cc
   - test/core/tsi/transport_security_test_lib.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: delegating_channel_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/end2end/test_service_impl.h
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/delegating_channel_test.cc
   - test/cpp/end2end/test_service_impl.cc
   deps:
   - grpc++_test_util
 - name: destroy_grpclb_channel_with_active_connect_stress_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/cpp/client/destroy_grpclb_channel_with_active_connect_stress_test.cc
   deps:
   - grpc++_test_util
 - name: dual_ref_counted_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/gprpp/dual_ref_counted_test.cc
   deps:
   - grpc_test_util
 - name: duplicate_header_bad_client_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/bad_client/bad_client.h
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/bad_client/bad_client.cc
   - test/core/bad_client/tests/duplicate_header.cc
   - test/core/end2end/cq_verifier.cc
   deps:
   - grpc_test_util
 - name: end2end_binder_transport_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/transport/binder/end2end/fake_binder.h
   - test/core/transport/binder/end2end/testing_channel_create.h
   - test/cpp/end2end/test_service_impl.h
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/core/transport/binder/end2end/end2end_binder_transport_test.cc
   - test/core/transport/binder/end2end/fake_binder.cc
   - test/core/transport/binder/end2end/testing_channel_create.cc
   - test/cpp/end2end/test_service_impl.cc
   deps:
   - grpc++_test_util
 - name: end2end_test
   gtest: true
   build: test
   run: false
   language: c++
   headers:
   - test/cpp/end2end/interceptors_util.h
   - test/cpp/end2end/test_service_impl.h
   src:
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/end2end_test.cc
   - test/cpp/end2end/interceptors_util.cc
   - test/cpp/end2end/test_service_impl.cc
   deps:
   - grpc++_test
   - grpc++_test_util
 - name: endpoint_binder_pool_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/ext/transport/binder/client/binder_connector.h
   - src/core/ext/transport/binder/client/channel_create_impl.h
   - src/core/ext/transport/binder/client/connection_id_generator.h
   - src/core/ext/transport/binder/client/endpoint_binder_pool.h
   - src/core/ext/transport/binder/client/jni_utils.h
   - src/core/ext/transport/binder/client/security_policy_setting.h
   - src/core/ext/transport/binder/server/binder_server.h
   - src/core/ext/transport/binder/transport/binder_stream.h
   - src/core/ext/transport/binder/transport/binder_transport.h
   - src/core/ext/transport/binder/utils/binder_auto_utils.h
   - src/core/ext/transport/binder/utils/ndk_binder.h
   - src/core/ext/transport/binder/utils/transport_stream_receiver.h
   - src/core/ext/transport/binder/utils/transport_stream_receiver_impl.h
   - src/core/ext/transport/binder/wire_format/binder.h
   - src/core/ext/transport/binder/wire_format/binder_android.h
   - src/core/ext/transport/binder/wire_format/binder_constants.h
   - src/core/ext/transport/binder/wire_format/transaction.h
   - src/core/ext/transport/binder/wire_format/wire_reader.h
   - src/core/ext/transport/binder/wire_format/wire_reader_impl.h
   - src/core/ext/transport/binder/wire_format/wire_writer.h
   - src/cpp/client/create_channel_internal.h
   - src/cpp/common/channel_filter.h
   - src/cpp/server/dynamic_thread_pool.h
   - src/cpp/server/external_connection_acceptor_impl.h
   - src/cpp/server/health/default_health_check_service.h
   - src/cpp/server/thread_pool_interface.h
   - src/cpp/thread_manager/thread_manager.h
   - test/core/transport/binder/mock_objects.h
   src:
   - src/core/ext/transport/binder/client/binder_connector.cc
   - src/core/ext/transport/binder/client/channel_create.cc
   - src/core/ext/transport/binder/client/channel_create_impl.cc
   - src/core/ext/transport/binder/client/connection_id_generator.cc
   - src/core/ext/transport/binder/client/endpoint_binder_pool.cc
   - src/core/ext/transport/binder/client/jni_utils.cc
   - src/core/ext/transport/binder/client/security_policy_setting.cc
   - src/core/ext/transport/binder/security_policy/binder_security_policy.cc
   - src/core/ext/transport/binder/server/binder_server.cc
   - src/core/ext/transport/binder/server/binder_server_credentials.cc
   - src/core/ext/transport/binder/transport/binder_transport.cc
   - src/core/ext/transport/binder/utils/ndk_binder.cc
   - src/core/ext/transport/binder/utils/transport_stream_receiver_impl.cc
   - src/core/ext/transport/binder/wire_format/binder_android.cc
   - src/core/ext/transport/binder/wire_format/binder_constants.cc
   - src/core/ext/transport/binder/wire_format/transaction.cc
   - src/core/ext/transport/binder/wire_format/wire_reader_impl.cc
   - src/core/ext/transport/binder/wire_format/wire_writer.cc
   - src/cpp/client/channel_cc.cc
   - src/cpp/client/client_callback.cc
   - src/cpp/client/client_context.cc
   - src/cpp/client/client_interceptor.cc
   - src/cpp/client/create_channel.cc
   - src/cpp/client/create_channel_internal.cc
   - src/cpp/client/create_channel_posix.cc
   - src/cpp/client/credentials_cc.cc
   - src/cpp/codegen/codegen_init.cc
   - src/cpp/common/alarm.cc
   - src/cpp/common/channel_arguments.cc
   - src/cpp/common/channel_filter.cc
   - src/cpp/common/completion_queue_cc.cc
   - src/cpp/common/core_codegen.cc
   - src/cpp/common/resource_quota_cc.cc
   - src/cpp/common/rpc_method.cc
   - src/cpp/common/validate_service_config.cc
   - src/cpp/common/version_cc.cc
   - src/cpp/server/async_generic_service.cc
   - src/cpp/server/channel_argument_option.cc
   - src/cpp/server/create_default_thread_pool.cc
   - src/cpp/server/dynamic_thread_pool.cc
   - src/cpp/server/external_connection_acceptor_impl.cc
   - src/cpp/server/health/default_health_check_service.cc
   - src/cpp/server/health/health_check_service.cc
   - src/cpp/server/health/health_check_service_server_builder_option.cc
   - src/cpp/server/orca/call_metric_recorder.cc
   - src/cpp/server/server_builder.cc
   - src/cpp/server/server_callback.cc
   - src/cpp/server/server_cc.cc
   - src/cpp/server/server_context.cc
   - src/cpp/server/server_credentials.cc
   - src/cpp/server/server_posix.cc
   - src/cpp/thread_manager/thread_manager.cc
   - src/cpp/util/byte_buffer_cc.cc
   - src/cpp/util/status.cc
   - src/cpp/util/string_ref.cc
   - src/cpp/util/time_cc.cc
   - test/core/transport/binder/endpoint_binder_pool_test.cc
   - test/core/transport/binder/mock_objects.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: endpoint_config_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/event_engine/endpoint_config_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: error_details_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - src/proto/grpc/status/status.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/util/error_details_test.cc
   deps:
   - grpc++_error_details
   - grpc_test_util
 - name: error_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/iomgr/endpoint_tests.h
   src:
   - test/core/iomgr/endpoint_tests.cc
   - test/core/iomgr/error_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: error_utils_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/transport/error_utils_test.cc
   deps:
   - grpc_test_util
 - name: evaluate_args_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/security/evaluate_args_test.cc
   deps:
   - grpc_test_util
 - name: examine_stack_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/gprpp/examine_stack_test.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
   uses_polling: false
 - name: exception_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/exception_test.cc
   deps:
   - grpc++_test_util
 - name: exec_ctx_wakeup_scheduler_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/ext/upb-generated/google/protobuf/any.upb.h
   - src/core/ext/upb-generated/google/rpc/status.upb.h
   - src/core/lib/debug/trace.h
   - src/core/lib/gprpp/atomic_utils.h
   - src/core/lib/gprpp/bitset.h
   - src/core/lib/gprpp/orphanable.h
   - src/core/lib/gprpp/ref_counted.h
   - src/core/lib/gprpp/ref_counted_ptr.h
   - src/core/lib/gprpp/status_helper.h
   - src/core/lib/gprpp/time.h
   - src/core/lib/iomgr/closure.h
   - src/core/lib/iomgr/combiner.h
   - src/core/lib/iomgr/error.h
   - src/core/lib/iomgr/error_internal.h
   - src/core/lib/iomgr/exec_ctx.h
   - src/core/lib/iomgr/executor.h
   - src/core/lib/iomgr/iomgr_internal.h
   - src/core/lib/promise/activity.h
   - src/core/lib/promise/context.h
   - src/core/lib/promise/detail/promise_factory.h
   - src/core/lib/promise/detail/promise_like.h
   - src/core/lib/promise/detail/status.h
   - src/core/lib/promise/exec_ctx_wakeup_scheduler.h
   - src/core/lib/promise/poll.h
   - src/core/lib/slice/percent_encoding.h
   - src/core/lib/slice/slice.h
   - src/core/lib/slice/slice_internal.h
   - src/core/lib/slice/slice_refcount.h
   - src/core/lib/slice/slice_refcount_base.h
   - src/core/lib/slice/slice_string_helpers.h
   src:
   - src/core/ext/upb-generated/google/protobuf/any.upb.c
   - src/core/ext/upb-generated/google/rpc/status.upb.c
   - src/core/lib/debug/trace.cc
   - src/core/lib/gprpp/status_helper.cc
   - src/core/lib/gprpp/time.cc
   - src/core/lib/iomgr/combiner.cc
   - src/core/lib/iomgr/error.cc
   - src/core/lib/iomgr/exec_ctx.cc
   - src/core/lib/iomgr/executor.cc
   - src/core/lib/iomgr/iomgr_internal.cc
   - src/core/lib/promise/activity.cc
   - src/core/lib/slice/percent_encoding.cc
   - src/core/lib/slice/slice.cc
   - src/core/lib/slice/slice_refcount.cc
   - src/core/lib/slice/slice_string_helpers.cc
   - test/core/promise/exec_ctx_wakeup_scheduler_test.cc
   deps:
   - absl/meta:type_traits
   - absl/status:statusor
   - absl/types:variant
   - absl/utility:utility
   - gpr
   - upb
   uses_polling: false
 - name: fake_binder_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/ext/transport/binder/client/binder_connector.h
   - src/core/ext/transport/binder/client/channel_create_impl.h
   - src/core/ext/transport/binder/client/connection_id_generator.h
   - src/core/ext/transport/binder/client/endpoint_binder_pool.h
   - src/core/ext/transport/binder/client/jni_utils.h
   - src/core/ext/transport/binder/client/security_policy_setting.h
   - src/core/ext/transport/binder/server/binder_server.h
   - src/core/ext/transport/binder/transport/binder_stream.h
   - src/core/ext/transport/binder/transport/binder_transport.h
   - src/core/ext/transport/binder/utils/binder_auto_utils.h
   - src/core/ext/transport/binder/utils/ndk_binder.h
   - src/core/ext/transport/binder/utils/transport_stream_receiver.h
   - src/core/ext/transport/binder/utils/transport_stream_receiver_impl.h
   - src/core/ext/transport/binder/wire_format/binder.h
   - src/core/ext/transport/binder/wire_format/binder_android.h
   - src/core/ext/transport/binder/wire_format/binder_constants.h
   - src/core/ext/transport/binder/wire_format/transaction.h
   - src/core/ext/transport/binder/wire_format/wire_reader.h
   - src/core/ext/transport/binder/wire_format/wire_reader_impl.h
   - src/core/ext/transport/binder/wire_format/wire_writer.h
   - src/cpp/client/create_channel_internal.h
   - src/cpp/common/channel_filter.h
   - src/cpp/server/dynamic_thread_pool.h
   - src/cpp/server/external_connection_acceptor_impl.h
   - src/cpp/server/health/default_health_check_service.h
   - src/cpp/server/thread_pool_interface.h
   - src/cpp/thread_manager/thread_manager.h
   - test/core/transport/binder/end2end/fake_binder.h
   src:
   - src/core/ext/transport/binder/client/binder_connector.cc
   - src/core/ext/transport/binder/client/channel_create.cc
   - src/core/ext/transport/binder/client/channel_create_impl.cc
   - src/core/ext/transport/binder/client/connection_id_generator.cc
   - src/core/ext/transport/binder/client/endpoint_binder_pool.cc
   - src/core/ext/transport/binder/client/jni_utils.cc
   - src/core/ext/transport/binder/client/security_policy_setting.cc
   - src/core/ext/transport/binder/security_policy/binder_security_policy.cc
   - src/core/ext/transport/binder/server/binder_server.cc
   - src/core/ext/transport/binder/server/binder_server_credentials.cc
   - src/core/ext/transport/binder/transport/binder_transport.cc
   - src/core/ext/transport/binder/utils/ndk_binder.cc
   - src/core/ext/transport/binder/utils/transport_stream_receiver_impl.cc
   - src/core/ext/transport/binder/wire_format/binder_android.cc
   - src/core/ext/transport/binder/wire_format/binder_constants.cc
   - src/core/ext/transport/binder/wire_format/transaction.cc
   - src/core/ext/transport/binder/wire_format/wire_reader_impl.cc
   - src/core/ext/transport/binder/wire_format/wire_writer.cc
   - src/cpp/client/channel_cc.cc
   - src/cpp/client/client_callback.cc
   - src/cpp/client/client_context.cc
   - src/cpp/client/client_interceptor.cc
   - src/cpp/client/create_channel.cc
   - src/cpp/client/create_channel_internal.cc
   - src/cpp/client/create_channel_posix.cc
   - src/cpp/client/credentials_cc.cc
   - src/cpp/codegen/codegen_init.cc
   - src/cpp/common/alarm.cc
   - src/cpp/common/channel_arguments.cc
   - src/cpp/common/channel_filter.cc
   - src/cpp/common/completion_queue_cc.cc
   - src/cpp/common/core_codegen.cc
   - src/cpp/common/resource_quota_cc.cc
   - src/cpp/common/rpc_method.cc
   - src/cpp/common/validate_service_config.cc
   - src/cpp/common/version_cc.cc
   - src/cpp/server/async_generic_service.cc
   - src/cpp/server/channel_argument_option.cc
   - src/cpp/server/create_default_thread_pool.cc
   - src/cpp/server/dynamic_thread_pool.cc
   - src/cpp/server/external_connection_acceptor_impl.cc
   - src/cpp/server/health/default_health_check_service.cc
   - src/cpp/server/health/health_check_service.cc
   - src/cpp/server/health/health_check_service_server_builder_option.cc
   - src/cpp/server/orca/call_metric_recorder.cc
   - src/cpp/server/server_builder.cc
   - src/cpp/server/server_callback.cc
   - src/cpp/server/server_cc.cc
   - src/cpp/server/server_context.cc
   - src/cpp/server/server_credentials.cc
   - src/cpp/server/server_posix.cc
   - src/cpp/thread_manager/thread_manager.cc
   - src/cpp/util/byte_buffer_cc.cc
   - src/cpp/util/status.cc
   - src/cpp/util/string_ref.cc
   - src/cpp/util/time_cc.cc
   - test/core/transport/binder/end2end/fake_binder.cc
   - test/core/transport/binder/end2end/fake_binder_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: file_watcher_certificate_provider_factory_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/xds/file_watcher_certificate_provider_factory_test.cc
   deps:
   - grpc_test_util
 - name: filter_end2end_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/filter_end2end_test.cc
   deps:
   - grpc++_test_util
 - name: flaky_network_test
   gtest: true
   build: test
   run: false
   language: c++
   headers:
   - test/cpp/end2end/test_service_impl.h
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/flaky_network_test.cc
   - test/cpp/end2end/test_service_impl.cc
   deps:
   - grpc++_test_util
-- name: flow_control_end2end_test
+- name: flow_control_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/end2end/cq_verifier.cc
-  - test/core/transport/chttp2/flow_control_end2end_test.cc
-  deps:
-  - grpc_test_util
-- name: flow_control_test
-  gtest: true
-  build: test
-  language: c++
-  headers:
-  - src/core/ext/transport/chttp2/transport/flow_control.h
-  - src/core/ext/upb-generated/google/protobuf/any.upb.h
-  - src/core/ext/upb-generated/google/rpc/status.upb.h
-  - src/core/lib/debug/trace.h
-  - src/core/lib/gprpp/atomic_utils.h
-  - src/core/lib/gprpp/bitset.h
-  - src/core/lib/gprpp/cpp_impl_of.h
-  - src/core/lib/gprpp/orphanable.h
-  - src/core/lib/gprpp/ref_counted.h
-  - src/core/lib/gprpp/ref_counted_ptr.h
-  - src/core/lib/gprpp/status_helper.h
-  - src/core/lib/gprpp/time.h
-  - src/core/lib/iomgr/closure.h
-  - src/core/lib/iomgr/combiner.h
-  - src/core/lib/iomgr/error.h
-  - src/core/lib/iomgr/error_internal.h
-  - src/core/lib/iomgr/exec_ctx.h
-  - src/core/lib/iomgr/executor.h
-  - src/core/lib/iomgr/iomgr_internal.h
-  - src/core/lib/promise/activity.h
-  - src/core/lib/promise/context.h
-  - src/core/lib/promise/detail/basic_seq.h
-  - src/core/lib/promise/detail/promise_factory.h
-  - src/core/lib/promise/detail/promise_like.h
-  - src/core/lib/promise/detail/status.h
-  - src/core/lib/promise/detail/switch.h
-  - src/core/lib/promise/exec_ctx_wakeup_scheduler.h
-  - src/core/lib/promise/loop.h
-  - src/core/lib/promise/map.h
-  - src/core/lib/promise/poll.h
-  - src/core/lib/promise/race.h
-  - src/core/lib/promise/seq.h
-  - src/core/lib/resource_quota/memory_quota.h
-  - src/core/lib/resource_quota/resource_quota.h
-  - src/core/lib/resource_quota/thread_quota.h
-  - src/core/lib/resource_quota/trace.h
-  - src/core/lib/slice/percent_encoding.h
-  - src/core/lib/slice/slice.h
-  - src/core/lib/slice/slice_internal.h
-  - src/core/lib/slice/slice_refcount.h
-  - src/core/lib/slice/slice_refcount_base.h
-  - src/core/lib/slice/slice_string_helpers.h
-  - src/core/lib/transport/bdp_estimator.h
-  - src/core/lib/transport/pid_controller.h
-  src:
-  - src/core/ext/transport/chttp2/transport/flow_control.cc
-  - src/core/ext/upb-generated/google/protobuf/any.upb.c
-  - src/core/ext/upb-generated/google/rpc/status.upb.c
-  - src/core/lib/debug/trace.cc
-  - src/core/lib/event_engine/memory_allocator.cc
-  - src/core/lib/gprpp/status_helper.cc
-  - src/core/lib/gprpp/time.cc
-  - src/core/lib/iomgr/combiner.cc
-  - src/core/lib/iomgr/error.cc
-  - src/core/lib/iomgr/exec_ctx.cc
-  - src/core/lib/iomgr/executor.cc
-  - src/core/lib/iomgr/iomgr_internal.cc
-  - src/core/lib/promise/activity.cc
-  - src/core/lib/resource_quota/memory_quota.cc
-  - src/core/lib/resource_quota/resource_quota.cc
-  - src/core/lib/resource_quota/thread_quota.cc
-  - src/core/lib/resource_quota/trace.cc
-  - src/core/lib/slice/percent_encoding.cc
-  - src/core/lib/slice/slice.cc
-  - src/core/lib/slice/slice_refcount.cc
-  - src/core/lib/slice/slice_string_helpers.cc
-  - src/core/lib/transport/bdp_estimator.cc
-  - src/core/lib/transport/pid_controller.cc
   - test/core/transport/chttp2/flow_control_test.cc
   deps:
-  - absl/meta:type_traits
-  - absl/status:statusor
-  - absl/types:variant
-  - absl/utility:utility
-  - gpr
-  - upb
+  - grpc_test_util
 - name: for_each_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/ext/upb-generated/google/protobuf/any.upb.h
   - src/core/ext/upb-generated/google/rpc/status.upb.h
   - src/core/lib/debug/trace.h
   - src/core/lib/gprpp/atomic_utils.h
   - src/core/lib/gprpp/bitset.h
   - src/core/lib/gprpp/cpp_impl_of.h
   - src/core/lib/gprpp/orphanable.h
   - src/core/lib/gprpp/ref_counted.h
   - src/core/lib/gprpp/ref_counted_ptr.h
   - src/core/lib/gprpp/status_helper.h
   - src/core/lib/gprpp/time.h
   - src/core/lib/iomgr/closure.h
   - src/core/lib/iomgr/combiner.h
   - src/core/lib/iomgr/error.h
   - src/core/lib/iomgr/error_internal.h
   - src/core/lib/iomgr/exec_ctx.h
   - src/core/lib/iomgr/executor.h
   - src/core/lib/iomgr/iomgr_internal.h
   - src/core/lib/promise/activity.h
   - src/core/lib/promise/context.h
   - src/core/lib/promise/detail/basic_join.h
   - src/core/lib/promise/detail/basic_seq.h
   - src/core/lib/promise/detail/promise_factory.h
   - src/core/lib/promise/detail/promise_like.h
   - src/core/lib/promise/detail/status.h
   - src/core/lib/promise/detail/switch.h
   - src/core/lib/promise/exec_ctx_wakeup_scheduler.h
   - src/core/lib/promise/for_each.h
   - src/core/lib/promise/intra_activity_waiter.h
   - src/core/lib/promise/join.h
   - src/core/lib/promise/loop.h
   - src/core/lib/promise/map.h
   - src/core/lib/promise/observable.h
   - src/core/lib/promise/pipe.h
   - src/core/lib/promise/poll.h
   - src/core/lib/promise/race.h
   - src/core/lib/promise/seq.h
   - src/core/lib/promise/wait_set.h
   - src/core/lib/resource_quota/arena.h
   - src/core/lib/resource_quota/memory_quota.h
   - src/core/lib/resource_quota/resource_quota.h
   - src/core/lib/resource_quota/thread_quota.h
   - src/core/lib/resource_quota/trace.h
   - src/core/lib/slice/percent_encoding.h
   - src/core/lib/slice/slice.h
   - src/core/lib/slice/slice_internal.h
   - src/core/lib/slice/slice_refcount.h
   - src/core/lib/slice/slice_refcount_base.h
   - src/core/lib/slice/slice_string_helpers.h
   - test/core/promise/test_wakeup_schedulers.h
   src:
   - src/core/ext/upb-generated/google/protobuf/any.upb.c
   - src/core/ext/upb-generated/google/rpc/status.upb.c
   - src/core/lib/debug/trace.cc
   - src/core/lib/event_engine/memory_allocator.cc
   - src/core/lib/gprpp/status_helper.cc
   - src/core/lib/gprpp/time.cc
   - src/core/lib/iomgr/combiner.cc
   - src/core/lib/iomgr/error.cc
   - src/core/lib/iomgr/exec_ctx.cc
   - src/core/lib/iomgr/executor.cc
   - src/core/lib/iomgr/iomgr_internal.cc
   - src/core/lib/promise/activity.cc
   - src/core/lib/resource_quota/arena.cc
   - src/core/lib/resource_quota/memory_quota.cc
   - src/core/lib/resource_quota/resource_quota.cc
   - src/core/lib/resource_quota/thread_quota.cc
   - src/core/lib/resource_quota/trace.cc
   - src/core/lib/slice/percent_encoding.cc
   - src/core/lib/slice/slice.cc
   - src/core/lib/slice/slice_refcount.cc
   - src/core/lib/slice/slice_string_helpers.cc
   - test/core/promise/for_each_test.cc
   deps:
   - absl/container:flat_hash_set
   - absl/hash:hash
   - absl/meta:type_traits
   - absl/status:statusor
   - absl/types:variant
   - absl/utility:utility
   - gpr
   - upb
   uses_polling: false
 - name: generic_end2end_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/generic_end2end_test.cc
   deps:
   - grpc++_test_util
 - name: global_config_env_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/gprpp/global_config_env_test.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
   uses_polling: false
 - name: global_config_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/gprpp/global_config_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: google_c2p_resolver_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/util/fake_udp_and_tcp_server.h
   src:
   - test/core/client_channel/resolvers/google_c2p_resolver_test.cc
   - test/core/util/fake_udp_and_tcp_server.cc
   deps:
   - grpc++_test_util
 - name: google_mesh_ca_certificate_provider_factory_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/ext/xds/google_mesh_ca_certificate_provider_factory.h
   src:
   - src/core/ext/xds/google_mesh_ca_certificate_provider_factory.cc
   - test/core/xds/google_mesh_ca_certificate_provider_factory_test.cc
   deps:
   - grpc_test_util
 - name: graceful_shutdown_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/end2end/cq_verifier.cc
   - test/core/transport/chttp2/graceful_shutdown_test.cc
   deps:
   - grpc_test_util
 - name: grpc_authorization_engine_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/security/grpc_authorization_engine_test.cc
   deps:
   - grpc_test_util
 - name: grpc_authorization_policy_provider_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/security/authorization/grpc_authorization_policy_provider.h
   - src/core/lib/security/authorization/rbac_translator.h
   src:
   - src/core/lib/security/authorization/grpc_authorization_policy_provider.cc
   - src/core/lib/security/authorization/rbac_translator.cc
   - test/core/security/grpc_authorization_policy_provider_test.cc
   deps:
   - grpc_test_util
 - name: grpc_authz_end2end_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/security/authorization/grpc_authorization_policy_provider.h
   - src/core/lib/security/authorization/rbac_translator.h
   - test/cpp/end2end/test_service_impl.h
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - src/core/lib/security/authorization/grpc_authorization_policy_provider.cc
   - src/core/lib/security/authorization/rbac_translator.cc
   - src/cpp/server/authorization_policy_provider.cc
   - test/cpp/end2end/grpc_authz_end2end_test.cc
   - test/cpp/end2end/test_service_impl.cc
   deps:
   - grpc++_test_util
 - name: grpc_cli
   build: test
   run: false
   language: c++
   headers:
   - test/cpp/util/cli_call.h
   - test/cpp/util/cli_credentials.h
   - test/cpp/util/config_grpc_cli.h
   - test/cpp/util/grpc_tool.h
   - test/cpp/util/proto_file_parser.h
   - test/cpp/util/proto_reflection_descriptor_database.h
   - test/cpp/util/service_describer.h
   src:
   - src/proto/grpc/reflection/v1alpha/reflection.proto
   - test/cpp/util/cli_call.cc
   - test/cpp/util/cli_credentials.cc
   - test/cpp/util/grpc_cli.cc
   - test/cpp/util/grpc_tool.cc
   - test/cpp/util/proto_file_parser.cc
   - test/cpp/util/proto_reflection_descriptor_database.cc
   - test/cpp/util/service_describer.cc
   deps:
   - absl/flags:flag
   - grpc++
   - grpc++_test_config
 - name: grpc_cpp_plugin
   build: protoc
   language: c++
   headers: []
   src:
   - src/compiler/cpp_plugin.cc
   deps:
   - grpc_plugin_support
 - name: grpc_csharp_plugin
   build: protoc
   language: c++
   headers: []
   src:
   - src/compiler/csharp_plugin.cc
   deps:
   - grpc_plugin_support
 - name: grpc_node_plugin
   build: protoc
   language: c++
   headers: []
   src:
   - src/compiler/node_plugin.cc
   deps:
   - grpc_plugin_support
 - name: grpc_objective_c_plugin
   build: protoc
   language: c++
   headers: []
   src:
   - src/compiler/objective_c_plugin.cc
   deps:
   - grpc_plugin_support
 - name: grpc_php_plugin
   build: protoc
   language: c++
   headers: []
   src:
   - src/compiler/php_plugin.cc
   deps:
   - grpc_plugin_support
 - name: grpc_python_plugin
   build: protoc
   language: c++
   headers: []
   src:
   - src/compiler/python_plugin.cc
   deps:
   - grpc_plugin_support
 - name: grpc_ruby_plugin
   build: protoc
   language: c++
   headers: []
   src:
   - src/compiler/ruby_plugin.cc
   deps:
   - grpc_plugin_support
 - name: grpc_tls_certificate_distributor_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/security/grpc_tls_certificate_distributor_test.cc
   deps:
   - grpc_test_util
 - name: grpc_tls_certificate_provider_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/security/grpc_tls_certificate_provider_test.cc
   deps:
   - grpc_test_util
 - name: grpc_tls_certificate_verifier_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/security/grpc_tls_certificate_verifier_test.cc
   deps:
   - grpc_test_util
 - name: grpc_tls_credentials_options_comparator_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/security/grpc_tls_credentials_options_comparator_test.cc
   deps:
   - grpc_test_util
 - name: grpc_tls_credentials_options_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/security/grpc_tls_credentials_options_test.cc
   deps:
   - grpc_test_util
 - name: grpc_tool_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/util/cli_call.h
   - test/cpp/util/cli_credentials.h
   - test/cpp/util/config_grpc_cli.h
   - test/cpp/util/grpc_tool.h
   - test/cpp/util/proto_file_parser.h
   - test/cpp/util/proto_reflection_descriptor_database.h
   - test/cpp/util/service_describer.h
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/util/cli_call.cc
   - test/cpp/util/cli_credentials.cc
   - test/cpp/util/grpc_tool.cc
   - test/cpp/util/grpc_tool_test.cc
   - test/cpp/util/proto_file_parser.cc
   - test/cpp/util/proto_reflection_descriptor_database.cc
   - test/cpp/util/service_describer.cc
   deps:
   - grpc++_reflection
   - grpc++_test_config
   - grpc++_test_util
   platforms:
   - linux
   - posix
 - name: grpclb_api_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - src/proto/grpc/lb/v1/load_balancer.proto
   - test/cpp/grpclb/grpclb_api_test.cc
   deps:
   - grpc++_test_util
 - name: grpclb_end2end_test
   gtest: true
   build: test
   run: false
   language: c++
   headers:
   - test/cpp/end2end/counted_service.h
   - test/cpp/end2end/test_service_impl.h
   src:
   - src/proto/grpc/lb/v1/load_balancer.proto
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/grpclb_end2end_test.cc
   - test/cpp/end2end/test_service_impl.cc
   deps:
   - grpc++_test_config
   - grpc++_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: h2_ssl_session_reuse_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/end2end/h2_ssl_session_reuse_test.cc
   deps:
   - end2end_tests
 - name: head_of_line_blocking_bad_client_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/bad_client/bad_client.h
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/bad_client/bad_client.cc
   - test/core/bad_client/tests/head_of_line_blocking.cc
   - test/core/end2end/cq_verifier.cc
   deps:
   - grpc_test_util
 - name: headers_bad_client_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/bad_client/bad_client.h
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/bad_client/bad_client.cc
   - test/core/bad_client/tests/headers.cc
   - test/core/end2end/cq_verifier.cc
   deps:
   - grpc_test_util
 - name: health_service_end2end_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/end2end/test_health_check_service_impl.h
   - test/cpp/end2end/test_service_impl.h
   src:
   - src/proto/grpc/health/v1/health.proto
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/health_service_end2end_test.cc
   - test/cpp/end2end/test_health_check_service_impl.cc
   - test/cpp/end2end/test_service_impl.cc
   deps:
   - grpc++_test_util
 - name: hpack_parser_table_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/transport/chttp2/hpack_parser_table_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: hpack_parser_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/transport/chttp2/hpack_parser_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: http2_client
   build: test
   run: false
   language: c++
   headers: []
   src:
   - src/proto/grpc/testing/empty.proto
   - src/proto/grpc/testing/messages.proto
   - src/proto/grpc/testing/test.proto
   - test/cpp/interop/http2_client.cc
   deps:
   - grpc++_test_config
   - grpc++_test_util
 - name: http_proxy_mapper_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/client_channel/http_proxy_mapper_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: httpcli_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/http/httpcli_test_util.h
   - test/core/util/fake_udp_and_tcp_server.h
   src:
   - test/core/http/httpcli_test.cc
   - test/core/http/httpcli_test_util.cc
   - test/core/util/fake_udp_and_tcp_server.cc
   deps:
   - grpc++_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: httpscli_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/http/httpcli_test_util.h
   - test/core/util/fake_udp_and_tcp_server.h
   src:
   - test/core/http/httpcli_test_util.cc
   - test/core/http/httpscli_test.cc
   - test/core/util/fake_udp_and_tcp_server.cc
   deps:
   - grpc++_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: hybrid_end2end_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/end2end/test_service_impl.h
   src:
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/hybrid_end2end_test.cc
   - test/cpp/end2end/test_service_impl.cc
   deps:
   - grpc++_test_util
 - name: idle_filter_state_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/ext/filters/channel_idle/idle_filter_state.h
   src:
   - src/core/ext/filters/channel_idle/idle_filter_state.cc
   - test/core/client_idle/idle_filter_state_test.cc
   deps: []
   uses_polling: false
 - name: if_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/promise/detail/promise_factory.h
   - src/core/lib/promise/detail/promise_like.h
   - src/core/lib/promise/if.h
   - src/core/lib/promise/poll.h
   src:
   - test/core/promise/if_test.cc
   deps:
   - absl/meta:type_traits
   - absl/status:statusor
   - absl/types:variant
   uses_polling: false
 - name: init_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/surface/init_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: initial_settings_frame_bad_client_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/bad_client/bad_client.h
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/bad_client/bad_client.cc
   - test/core/bad_client/tests/initial_settings_frame.cc
   - test/core/end2end/cq_verifier.cc
   deps:
   - grpc_test_util
 - name: insecure_security_connector_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/security/insecure_security_connector_test.cc
   deps:
   - grpc_test_util
 - name: interop_client
   build: test
   run: false
   language: c++
   headers:
   - test/core/security/oauth2_utils.h
   - test/cpp/interop/client_helper.h
   - test/cpp/interop/interop_client.h
   src:
   - src/proto/grpc/testing/empty.proto
   - src/proto/grpc/testing/messages.proto
   - src/proto/grpc/testing/test.proto
   - test/core/security/oauth2_utils.cc
   - test/cpp/interop/client.cc
   - test/cpp/interop/client_helper.cc
   - test/cpp/interop/interop_client.cc
   deps:
   - grpc++_test_config
   - grpc++_test_util
 - name: interop_server
   build: test
   run: false
   language: c++
   headers:
   - test/cpp/interop/server_helper.h
   src:
   - src/proto/grpc/testing/empty.proto
   - src/proto/grpc/testing/messages.proto
   - src/proto/grpc/testing/test.proto
   - test/cpp/interop/interop_server.cc
   - test/cpp/interop/interop_server_bootstrap.cc
   - test/cpp/interop/server_helper.cc
   deps:
   - grpc++_test_config
   - grpc++_test_util
 - name: iomgr_event_engine_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/event_engine/test_suite/event_engine_test.h
   src:
   - test/core/event_engine/test_suite/event_engine_test.cc
   - test/core/event_engine/test_suite/iomgr_event_engine_test.cc
   - test/core/event_engine/test_suite/timer_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: join_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/gpr/useful.h
   - src/core/lib/gprpp/bitset.h
   - src/core/lib/gprpp/construct_destruct.h
   - src/core/lib/promise/detail/basic_join.h
   - src/core/lib/promise/detail/promise_like.h
   - src/core/lib/promise/join.h
   - src/core/lib/promise/poll.h
   src:
   - test/core/promise/join_test.cc
   deps:
   - absl/meta:type_traits
   - absl/types:variant
   - absl/utility:utility
   uses_polling: false
 - name: json_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/json/json_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: large_metadata_bad_client_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/bad_client/bad_client.h
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/bad_client/bad_client.cc
   - test/core/bad_client/tests/large_metadata.cc
   - test/core/end2end/cq_verifier.cc
   deps:
   - grpc_test_util
 - name: latch_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/gpr/alloc.h
   - src/core/lib/gpr/env.h
   - src/core/lib/gpr/murmur_hash.h
   - src/core/lib/gpr/spinlock.h
   - src/core/lib/gpr/string.h
   - src/core/lib/gpr/string_windows.h
   - src/core/lib/gpr/time_precise.h
   - src/core/lib/gpr/tls.h
   - src/core/lib/gpr/tmpfile.h
   - src/core/lib/gpr/useful.h
   - src/core/lib/gprpp/atomic_utils.h
   - src/core/lib/gprpp/bitset.h
   - src/core/lib/gprpp/construct_destruct.h
   - src/core/lib/gprpp/debug_location.h
   - src/core/lib/gprpp/examine_stack.h
   - src/core/lib/gprpp/fork.h
   - src/core/lib/gprpp/global_config.h
   - src/core/lib/gprpp/global_config_custom.h
   - src/core/lib/gprpp/global_config_env.h
   - src/core/lib/gprpp/global_config_generic.h
   - src/core/lib/gprpp/host_port.h
   - src/core/lib/gprpp/manual_constructor.h
   - src/core/lib/gprpp/memory.h
   - src/core/lib/gprpp/mpscq.h
   - src/core/lib/gprpp/orphanable.h
   - src/core/lib/gprpp/ref_counted.h
   - src/core/lib/gprpp/ref_counted_ptr.h
   - src/core/lib/gprpp/stat.h
   - src/core/lib/gprpp/sync.h
   - src/core/lib/gprpp/thd.h
   - src/core/lib/gprpp/time_util.h
   - src/core/lib/profiling/timers.h
   - src/core/lib/promise/activity.h
   - src/core/lib/promise/context.h
   - src/core/lib/promise/detail/basic_join.h
   - src/core/lib/promise/detail/basic_seq.h
   - src/core/lib/promise/detail/promise_factory.h
   - src/core/lib/promise/detail/promise_like.h
   - src/core/lib/promise/detail/status.h
   - src/core/lib/promise/detail/switch.h
   - src/core/lib/promise/intra_activity_waiter.h
   - src/core/lib/promise/join.h
   - src/core/lib/promise/latch.h
   - src/core/lib/promise/poll.h
   - src/core/lib/promise/seq.h
   - test/core/promise/test_wakeup_schedulers.h
   src:
   - src/core/lib/gpr/alloc.cc
   - src/core/lib/gpr/atm.cc
   - src/core/lib/gpr/cpu_iphone.cc
   - src/core/lib/gpr/cpu_linux.cc
   - src/core/lib/gpr/cpu_posix.cc
   - src/core/lib/gpr/cpu_windows.cc
   - src/core/lib/gpr/env_linux.cc
   - src/core/lib/gpr/env_posix.cc
   - src/core/lib/gpr/env_windows.cc
   - src/core/lib/gpr/log.cc
   - src/core/lib/gpr/log_android.cc
   - src/core/lib/gpr/log_linux.cc
   - src/core/lib/gpr/log_posix.cc
   - src/core/lib/gpr/log_windows.cc
   - src/core/lib/gpr/murmur_hash.cc
   - src/core/lib/gpr/string.cc
   - src/core/lib/gpr/string_posix.cc
   - src/core/lib/gpr/string_util_windows.cc
   - src/core/lib/gpr/string_windows.cc
   - src/core/lib/gpr/sync.cc
   - src/core/lib/gpr/sync_abseil.cc
   - src/core/lib/gpr/sync_posix.cc
   - src/core/lib/gpr/sync_windows.cc
   - src/core/lib/gpr/time.cc
   - src/core/lib/gpr/time_posix.cc
   - src/core/lib/gpr/time_precise.cc
   - src/core/lib/gpr/time_windows.cc
   - src/core/lib/gpr/tmpfile_msys.cc
   - src/core/lib/gpr/tmpfile_posix.cc
   - src/core/lib/gpr/tmpfile_windows.cc
   - src/core/lib/gpr/wrap_memcpy.cc
   - src/core/lib/gprpp/examine_stack.cc
   - src/core/lib/gprpp/fork.cc
   - src/core/lib/gprpp/global_config_env.cc
   - src/core/lib/gprpp/host_port.cc
   - src/core/lib/gprpp/mpscq.cc
   - src/core/lib/gprpp/stat_posix.cc
   - src/core/lib/gprpp/stat_windows.cc
   - src/core/lib/gprpp/thd_posix.cc
   - src/core/lib/gprpp/thd_windows.cc
   - src/core/lib/gprpp/time_util.cc
   - src/core/lib/profiling/basic_timers.cc
   - src/core/lib/profiling/stap_timers.cc
   - src/core/lib/promise/activity.cc
   - test/core/promise/latch_test.cc
   deps:
   - absl/base:base
   - absl/base:core_headers
   - absl/memory:memory
   - absl/meta:type_traits
   - absl/random:random
   - absl/status:status
   - absl/status:statusor
   - absl/strings:cord
   - absl/strings:str_format
   - absl/strings:strings
   - absl/synchronization:synchronization
   - absl/time:time
   - absl/types:optional
   - absl/types:variant
   - absl/utility:utility
   uses_polling: false
 - name: lb_get_cpu_stats_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/cpp/server/load_reporter/get_cpu_stats.h
   src:
   - src/cpp/server/load_reporter/get_cpu_stats_linux.cc
   - src/cpp/server/load_reporter/get_cpu_stats_macos.cc
   - src/cpp/server/load_reporter/get_cpu_stats_unsupported.cc
   - src/cpp/server/load_reporter/get_cpu_stats_windows.cc
   - test/cpp/server/load_reporter/get_cpu_stats_test.cc
   deps:
   - grpc++
   - grpc_test_util
 - name: lb_load_data_store_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/cpp/server/load_reporter/constants.h
   - src/cpp/server/load_reporter/load_data_store.h
   src:
   - src/cpp/server/load_reporter/load_data_store.cc
   - test/cpp/server/load_reporter/load_data_store_test.cc
   deps:
   - grpc++
   - grpc_test_util
 - name: linux_system_roots_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/security/linux_system_roots_test.cc
   deps:
   - grpc_test_util
 - name: log_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/gpr/log_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: loop_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/gprpp/construct_destruct.h
   - src/core/lib/promise/detail/basic_seq.h
   - src/core/lib/promise/detail/promise_factory.h
   - src/core/lib/promise/detail/promise_like.h
   - src/core/lib/promise/detail/switch.h
   - src/core/lib/promise/loop.h
   - src/core/lib/promise/poll.h
   - src/core/lib/promise/seq.h
   src:
   - test/core/promise/loop_test.cc
   deps:
   - absl/meta:type_traits
   - absl/status:status
   - absl/status:statusor
   - absl/types:variant
   - absl/utility:utility
   uses_polling: false
 - name: match_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/gprpp/match.h
   - src/core/lib/gprpp/overload.h
   src:
   - test/core/gprpp/match_test.cc
   deps:
   - absl/types:variant
   uses_polling: false
 - name: matchers_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/security/matchers_test.cc
   deps:
   - grpc_test_util
 - name: memory_quota_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/ext/upb-generated/google/protobuf/any.upb.h
   - src/core/ext/upb-generated/google/rpc/status.upb.h
   - src/core/lib/debug/trace.h
   - src/core/lib/gprpp/atomic_utils.h
   - src/core/lib/gprpp/bitset.h
   - src/core/lib/gprpp/orphanable.h
   - src/core/lib/gprpp/ref_counted.h
   - src/core/lib/gprpp/ref_counted_ptr.h
   - src/core/lib/gprpp/status_helper.h
   - src/core/lib/gprpp/time.h
   - src/core/lib/iomgr/closure.h
   - src/core/lib/iomgr/combiner.h
   - src/core/lib/iomgr/error.h
   - src/core/lib/iomgr/error_internal.h
   - src/core/lib/iomgr/exec_ctx.h
   - src/core/lib/iomgr/executor.h
   - src/core/lib/iomgr/iomgr_internal.h
   - src/core/lib/promise/activity.h
   - src/core/lib/promise/context.h
   - src/core/lib/promise/detail/basic_seq.h
   - src/core/lib/promise/detail/promise_factory.h
   - src/core/lib/promise/detail/promise_like.h
   - src/core/lib/promise/detail/status.h
   - src/core/lib/promise/detail/switch.h
   - src/core/lib/promise/exec_ctx_wakeup_scheduler.h
   - src/core/lib/promise/loop.h
   - src/core/lib/promise/map.h
   - src/core/lib/promise/poll.h
   - src/core/lib/promise/race.h
   - src/core/lib/promise/seq.h
   - src/core/lib/resource_quota/memory_quota.h
   - src/core/lib/resource_quota/trace.h
   - src/core/lib/slice/percent_encoding.h
   - src/core/lib/slice/slice.h
   - src/core/lib/slice/slice_internal.h
   - src/core/lib/slice/slice_refcount.h
   - src/core/lib/slice/slice_refcount_base.h
   - src/core/lib/slice/slice_string_helpers.h
   - test/core/resource_quota/call_checker.h
   src:
   - src/core/ext/upb-generated/google/protobuf/any.upb.c
   - src/core/ext/upb-generated/google/rpc/status.upb.c
   - src/core/lib/debug/trace.cc
   - src/core/lib/event_engine/memory_allocator.cc
   - src/core/lib/gprpp/status_helper.cc
   - src/core/lib/gprpp/time.cc
   - src/core/lib/iomgr/combiner.cc
   - src/core/lib/iomgr/error.cc
   - src/core/lib/iomgr/exec_ctx.cc
   - src/core/lib/iomgr/executor.cc
   - src/core/lib/iomgr/iomgr_internal.cc
   - src/core/lib/promise/activity.cc
   - src/core/lib/resource_quota/memory_quota.cc
   - src/core/lib/resource_quota/trace.cc
   - src/core/lib/slice/percent_encoding.cc
   - src/core/lib/slice/slice.cc
   - src/core/lib/slice/slice_refcount.cc
   - src/core/lib/slice/slice_string_helpers.cc
   - test/core/resource_quota/memory_quota_test.cc
   deps:
   - absl/meta:type_traits
   - absl/status:statusor
   - absl/types:variant
   - absl/utility:utility
   - gpr
   - upb
   uses_polling: false
 - name: message_allocator_end2end_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/end2end/test_service_impl.h
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/message_allocator_end2end_test.cc
   - test/cpp/end2end/test_service_impl.cc
   deps:
   - grpc++_test_util
 - name: metadata_map_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/transport/metadata_map_test.cc
   deps:
   - grpc_test_util
 - name: miscompile_with_no_unique_address_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/compiler_bugs/miscompile_with_no_unique_address_test.cc
   deps: []
   uses_polling: false
 - name: mock_stream_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/test/mock_stream_test.cc
   deps:
   - grpc++_test
   - grpc++_test_util
 - name: mock_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/mock_test.cc
   deps:
   - grpc++_test
   - grpc++_test_util
 - name: nonblocking_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/nonblocking_test.cc
   deps:
   - grpc++_test_util
 - name: observable_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/gpr/alloc.h
   - src/core/lib/gpr/env.h
   - src/core/lib/gpr/murmur_hash.h
   - src/core/lib/gpr/spinlock.h
   - src/core/lib/gpr/string.h
   - src/core/lib/gpr/string_windows.h
   - src/core/lib/gpr/time_precise.h
   - src/core/lib/gpr/tls.h
   - src/core/lib/gpr/tmpfile.h
   - src/core/lib/gpr/useful.h
   - src/core/lib/gprpp/atomic_utils.h
   - src/core/lib/gprpp/construct_destruct.h
   - src/core/lib/gprpp/debug_location.h
   - src/core/lib/gprpp/examine_stack.h
   - src/core/lib/gprpp/fork.h
   - src/core/lib/gprpp/global_config.h
   - src/core/lib/gprpp/global_config_custom.h
   - src/core/lib/gprpp/global_config_env.h
   - src/core/lib/gprpp/global_config_generic.h
   - src/core/lib/gprpp/host_port.h
   - src/core/lib/gprpp/manual_constructor.h
   - src/core/lib/gprpp/memory.h
   - src/core/lib/gprpp/mpscq.h
   - src/core/lib/gprpp/orphanable.h
   - src/core/lib/gprpp/ref_counted.h
   - src/core/lib/gprpp/ref_counted_ptr.h
   - src/core/lib/gprpp/stat.h
   - src/core/lib/gprpp/sync.h
   - src/core/lib/gprpp/thd.h
   - src/core/lib/gprpp/time_util.h
   - src/core/lib/profiling/timers.h
   - src/core/lib/promise/activity.h
   - src/core/lib/promise/context.h
   - src/core/lib/promise/detail/basic_seq.h
   - src/core/lib/promise/detail/promise_factory.h
   - src/core/lib/promise/detail/promise_like.h
   - src/core/lib/promise/detail/status.h
   - src/core/lib/promise/detail/switch.h
   - src/core/lib/promise/observable.h
   - src/core/lib/promise/poll.h
   - src/core/lib/promise/promise.h
   - src/core/lib/promise/seq.h
   - src/core/lib/promise/wait_set.h
   - test/core/promise/test_wakeup_schedulers.h
   src:
   - src/core/lib/gpr/alloc.cc
   - src/core/lib/gpr/atm.cc
   - src/core/lib/gpr/cpu_iphone.cc
   - src/core/lib/gpr/cpu_linux.cc
   - src/core/lib/gpr/cpu_posix.cc
   - src/core/lib/gpr/cpu_windows.cc
   - src/core/lib/gpr/env_linux.cc
   - src/core/lib/gpr/env_posix.cc
   - src/core/lib/gpr/env_windows.cc
   - src/core/lib/gpr/log.cc
   - src/core/lib/gpr/log_android.cc
   - src/core/lib/gpr/log_linux.cc
   - src/core/lib/gpr/log_posix.cc
   - src/core/lib/gpr/log_windows.cc
   - src/core/lib/gpr/murmur_hash.cc
   - src/core/lib/gpr/string.cc
   - src/core/lib/gpr/string_posix.cc
   - src/core/lib/gpr/string_util_windows.cc
   - src/core/lib/gpr/string_windows.cc
   - src/core/lib/gpr/sync.cc
   - src/core/lib/gpr/sync_abseil.cc
   - src/core/lib/gpr/sync_posix.cc
   - src/core/lib/gpr/sync_windows.cc
   - src/core/lib/gpr/time.cc
   - src/core/lib/gpr/time_posix.cc
   - src/core/lib/gpr/time_precise.cc
   - src/core/lib/gpr/time_windows.cc
   - src/core/lib/gpr/tmpfile_msys.cc
   - src/core/lib/gpr/tmpfile_posix.cc
   - src/core/lib/gpr/tmpfile_windows.cc
   - src/core/lib/gpr/wrap_memcpy.cc
   - src/core/lib/gprpp/examine_stack.cc
   - src/core/lib/gprpp/fork.cc
   - src/core/lib/gprpp/global_config_env.cc
   - src/core/lib/gprpp/host_port.cc
   - src/core/lib/gprpp/mpscq.cc
   - src/core/lib/gprpp/stat_posix.cc
   - src/core/lib/gprpp/stat_windows.cc
   - src/core/lib/gprpp/thd_posix.cc
   - src/core/lib/gprpp/thd_windows.cc
   - src/core/lib/gprpp/time_util.cc
   - src/core/lib/profiling/basic_timers.cc
   - src/core/lib/profiling/stap_timers.cc
   - src/core/lib/promise/activity.cc
   - test/core/promise/observable_test.cc
   deps:
   - absl/base:base
   - absl/base:core_headers
   - absl/container:flat_hash_set
   - absl/hash:hash
   - absl/memory:memory
   - absl/meta:type_traits
   - absl/random:random
   - absl/status:status
   - absl/status:statusor
   - absl/strings:cord
   - absl/strings:str_format
   - absl/strings:strings
   - absl/synchronization:synchronization
   - absl/time:time
   - absl/types:optional
   - absl/types:variant
   - absl/utility:utility
   uses_polling: false
 - name: orca_service_end2end_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - src/proto/grpc/testing/xds/v3/orca_service.proto
   - src/cpp/server/orca/orca_service.cc
   - test/cpp/end2end/orca_service_end2end_test.cc
   deps:
   - grpc++_test_util
 - name: orphanable_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/gprpp/orphanable_test.cc
   deps:
   - grpc_test_util
 - name: out_of_bounds_bad_client_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/bad_client/bad_client.h
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/bad_client/bad_client.cc
   - test/core/bad_client/tests/out_of_bounds.cc
   - test/core/end2end/cq_verifier.cc
   deps:
   - grpc_test_util
 - name: overload_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/gprpp/overload.h
   src:
   - test/core/gprpp/overload_test.cc
   deps: []
   uses_polling: false
 - name: parsed_metadata_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/transport/parsed_metadata_test.cc
   deps:
   - grpc_test_util
 - name: pid_controller_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/transport/pid_controller_test.cc
   deps:
   - grpc_test_util
 - name: pipe_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/ext/upb-generated/google/protobuf/any.upb.h
   - src/core/ext/upb-generated/google/rpc/status.upb.h
   - src/core/lib/debug/trace.h
   - src/core/lib/gprpp/atomic_utils.h
   - src/core/lib/gprpp/bitset.h
   - src/core/lib/gprpp/cpp_impl_of.h
   - src/core/lib/gprpp/orphanable.h
   - src/core/lib/gprpp/ref_counted.h
   - src/core/lib/gprpp/ref_counted_ptr.h
   - src/core/lib/gprpp/status_helper.h
   - src/core/lib/gprpp/time.h
   - src/core/lib/iomgr/closure.h
   - src/core/lib/iomgr/combiner.h
   - src/core/lib/iomgr/error.h
   - src/core/lib/iomgr/error_internal.h
   - src/core/lib/iomgr/exec_ctx.h
   - src/core/lib/iomgr/executor.h
   - src/core/lib/iomgr/iomgr_internal.h
   - src/core/lib/promise/activity.h
   - src/core/lib/promise/context.h
   - src/core/lib/promise/detail/basic_join.h
   - src/core/lib/promise/detail/basic_seq.h
   - src/core/lib/promise/detail/promise_factory.h
   - src/core/lib/promise/detail/promise_like.h
   - src/core/lib/promise/detail/status.h
   - src/core/lib/promise/detail/switch.h
   - src/core/lib/promise/exec_ctx_wakeup_scheduler.h
   - src/core/lib/promise/intra_activity_waiter.h
   - src/core/lib/promise/join.h
   - src/core/lib/promise/loop.h
   - src/core/lib/promise/map.h
   - src/core/lib/promise/pipe.h
   - src/core/lib/promise/poll.h
   - src/core/lib/promise/promise.h
   - src/core/lib/promise/race.h
   - src/core/lib/promise/seq.h
   - src/core/lib/resource_quota/arena.h
   - src/core/lib/resource_quota/memory_quota.h
   - src/core/lib/resource_quota/resource_quota.h
   - src/core/lib/resource_quota/thread_quota.h
   - src/core/lib/resource_quota/trace.h
   - src/core/lib/slice/percent_encoding.h
   - src/core/lib/slice/slice.h
   - src/core/lib/slice/slice_internal.h
   - src/core/lib/slice/slice_refcount.h
   - src/core/lib/slice/slice_refcount_base.h
   - src/core/lib/slice/slice_string_helpers.h
   - test/core/promise/test_wakeup_schedulers.h
   src:
   - src/core/ext/upb-generated/google/protobuf/any.upb.c
   - src/core/ext/upb-generated/google/rpc/status.upb.c
   - src/core/lib/debug/trace.cc
   - src/core/lib/event_engine/memory_allocator.cc
   - src/core/lib/gprpp/status_helper.cc
   - src/core/lib/gprpp/time.cc
   - src/core/lib/iomgr/combiner.cc
   - src/core/lib/iomgr/error.cc
   - src/core/lib/iomgr/exec_ctx.cc
   - src/core/lib/iomgr/executor.cc
   - src/core/lib/iomgr/iomgr_internal.cc
   - src/core/lib/promise/activity.cc
   - src/core/lib/resource_quota/arena.cc
   - src/core/lib/resource_quota/memory_quota.cc
   - src/core/lib/resource_quota/resource_quota.cc
   - src/core/lib/resource_quota/thread_quota.cc
   - src/core/lib/resource_quota/trace.cc
   - src/core/lib/slice/percent_encoding.cc
   - src/core/lib/slice/slice.cc
   - src/core/lib/slice/slice_refcount.cc
   - src/core/lib/slice/slice_string_helpers.cc
   - test/core/promise/pipe_test.cc
   deps:
   - absl/meta:type_traits
   - absl/status:statusor
   - absl/types:variant
   - absl/utility:utility
   - gpr
   - upb
   uses_polling: false
 - name: poll_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/promise/poll.h
   src:
   - test/core/promise/poll_test.cc
   deps:
   - absl/types:variant
   uses_polling: false
 - name: port_sharing_end2end_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/end2end/test_service_impl.h
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/port_sharing_end2end_test.cc
   - test/cpp/end2end/test_service_impl.cc
   deps:
   - grpc++_test_util
 - name: promise_factory_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/promise/detail/promise_factory.h
   - src/core/lib/promise/detail/promise_like.h
   - src/core/lib/promise/poll.h
   - src/core/lib/promise/promise.h
   src:
   - test/core/promise/promise_factory_test.cc
   deps:
   - absl/functional:bind_front
   - absl/meta:type_traits
   - absl/status:status
   - absl/types:optional
   - absl/types:variant
   uses_polling: false
 - name: promise_map_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/promise/detail/promise_like.h
   - src/core/lib/promise/map.h
   - src/core/lib/promise/poll.h
   - src/core/lib/promise/promise.h
   src:
   - test/core/promise/map_test.cc
   deps:
   - absl/meta:type_traits
   - absl/status:status
   - absl/types:optional
   - absl/types:variant
   uses_polling: false
 - name: promise_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/promise/detail/promise_like.h
   - src/core/lib/promise/poll.h
   - src/core/lib/promise/promise.h
   src:
   - test/core/promise/promise_test.cc
   deps:
   - absl/meta:type_traits
   - absl/status:status
   - absl/types:optional
   - absl/types:variant
   uses_polling: false
 - name: proto_server_reflection_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/end2end/test_service_impl.h
   - test/cpp/util/proto_reflection_descriptor_database.h
   src:
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/proto_server_reflection_test.cc
   - test/cpp/end2end/test_service_impl.cc
   - test/cpp/util/proto_reflection_descriptor_database.cc
   deps:
   - grpc++_reflection
   - grpc++_test_util
 - name: proto_utils_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/cpp/codegen/proto_utils_test.cc
   deps:
   - grpc++
   - grpc_test_util
   uses_polling: false
 - name: qps_json_driver
   build: test
   run: false
   language: c++
   headers:
   - src/cpp/util/core_stats.h
   - test/cpp/qps/benchmark_config.h
   - test/cpp/qps/client.h
   - test/cpp/qps/driver.h
   - test/cpp/qps/histogram.h
   - test/cpp/qps/interarrival.h
   - test/cpp/qps/parse_json.h
   - test/cpp/qps/qps_server_builder.h
   - test/cpp/qps/qps_worker.h
   - test/cpp/qps/report.h
   - test/cpp/qps/server.h
   - test/cpp/qps/stats.h
   - test/cpp/qps/usage_timer.h
   src:
   - src/proto/grpc/core/stats.proto
   - src/proto/grpc/testing/benchmark_service.proto
   - src/proto/grpc/testing/control.proto
   - src/proto/grpc/testing/messages.proto
   - src/proto/grpc/testing/payloads.proto
   - src/proto/grpc/testing/report_qps_scenario_service.proto
   - src/proto/grpc/testing/stats.proto
   - src/proto/grpc/testing/worker_service.proto
   - src/cpp/util/core_stats.cc
   - test/cpp/qps/benchmark_config.cc
   - test/cpp/qps/client_async.cc
   - test/cpp/qps/client_callback.cc
   - test/cpp/qps/client_sync.cc
   - test/cpp/qps/driver.cc
   - test/cpp/qps/parse_json.cc
   - test/cpp/qps/qps_json_driver.cc
   - test/cpp/qps/qps_server_builder.cc
   - test/cpp/qps/qps_worker.cc
   - test/cpp/qps/report.cc
   - test/cpp/qps/server_async.cc
   - test/cpp/qps/server_callback.cc
   - test/cpp/qps/server_sync.cc
   - test/cpp/qps/usage_timer.cc
   deps:
   - grpc++_test_config
   - grpc++_test_util
 - name: qps_worker
   build: test
   run: false
   language: c++
   headers:
   - src/cpp/util/core_stats.h
   - test/cpp/qps/client.h
   - test/cpp/qps/histogram.h
   - test/cpp/qps/interarrival.h
   - test/cpp/qps/qps_server_builder.h
   - test/cpp/qps/qps_worker.h
   - test/cpp/qps/server.h
   - test/cpp/qps/stats.h
   - test/cpp/qps/usage_timer.h
   src:
   - src/proto/grpc/core/stats.proto
   - src/proto/grpc/testing/benchmark_service.proto
   - src/proto/grpc/testing/control.proto
   - src/proto/grpc/testing/messages.proto
   - src/proto/grpc/testing/payloads.proto
   - src/proto/grpc/testing/stats.proto
   - src/proto/grpc/testing/worker_service.proto
   - src/cpp/util/core_stats.cc
   - test/cpp/qps/client_async.cc
   - test/cpp/qps/client_callback.cc
   - test/cpp/qps/client_sync.cc
   - test/cpp/qps/qps_server_builder.cc
   - test/cpp/qps/qps_worker.cc
   - test/cpp/qps/server_async.cc
   - test/cpp/qps/server_callback.cc
   - test/cpp/qps/server_sync.cc
   - test/cpp/qps/usage_timer.cc
   - test/cpp/qps/worker.cc
   deps:
   - grpc++_test_config
   - grpc++_test_util
 - name: race_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/promise/poll.h
   - src/core/lib/promise/race.h
   src:
   - test/core/promise/race_test.cc
   deps:
   - absl/types:variant
   uses_polling: false
 - name: raw_end2end_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/end2end/test_service_impl.h
   src:
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/raw_end2end_test.cc
   - test/cpp/end2end/test_service_impl.cc
   deps:
   - grpc++_test_util
 - name: rbac_service_config_parser_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/ext/filters/rbac/rbac_service_config_parser_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: rbac_translator_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/security/authorization/grpc_authorization_policy_provider.h
   - src/core/lib/security/authorization/rbac_translator.h
   src:
   - src/core/lib/security/authorization/grpc_authorization_policy_provider.cc
   - src/core/lib/security/authorization/rbac_translator.cc
   - test/core/security/rbac_translator_test.cc
   deps:
   - grpc_test_util
 - name: ref_counted_ptr_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/gprpp/ref_counted_ptr_test.cc
   deps:
   - grpc_test_util
 - name: ref_counted_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/gprpp/ref_counted_test.cc
   deps:
   - grpc_test_util
 - name: remove_stream_from_stalled_lists_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/transport/chttp2/remove_stream_from_stalled_lists_test.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: resolve_address_using_ares_resolver_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/util/fake_udp_and_tcp_server.h
   src:
   - test/core/iomgr/resolve_address_test.cc
   - test/core/util/fake_udp_and_tcp_server.cc
   deps:
   - grpc_test_util
   - grpc++_test_config
 - name: resolve_address_using_native_resolver_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/util/fake_udp_and_tcp_server.h
   src:
   - test/core/iomgr/resolve_address_test.cc
   - test/core/util/fake_udp_and_tcp_server.cc
   deps:
   - grpc_test_util
   - grpc++_test_config
 - name: resource_quota_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/ext/upb-generated/google/protobuf/any.upb.h
   - src/core/ext/upb-generated/google/rpc/status.upb.h
   - src/core/lib/debug/trace.h
   - src/core/lib/gprpp/atomic_utils.h
   - src/core/lib/gprpp/bitset.h
   - src/core/lib/gprpp/cpp_impl_of.h
   - src/core/lib/gprpp/orphanable.h
   - src/core/lib/gprpp/ref_counted.h
   - src/core/lib/gprpp/ref_counted_ptr.h
   - src/core/lib/gprpp/status_helper.h
   - src/core/lib/gprpp/time.h
   - src/core/lib/iomgr/closure.h
   - src/core/lib/iomgr/combiner.h
   - src/core/lib/iomgr/error.h
   - src/core/lib/iomgr/error_internal.h
   - src/core/lib/iomgr/exec_ctx.h
   - src/core/lib/iomgr/executor.h
   - src/core/lib/iomgr/iomgr_internal.h
   - src/core/lib/promise/activity.h
   - src/core/lib/promise/context.h
   - src/core/lib/promise/detail/basic_seq.h
   - src/core/lib/promise/detail/promise_factory.h
   - src/core/lib/promise/detail/promise_like.h
   - src/core/lib/promise/detail/status.h
   - src/core/lib/promise/detail/switch.h
   - src/core/lib/promise/exec_ctx_wakeup_scheduler.h
   - src/core/lib/promise/loop.h
   - src/core/lib/promise/map.h
   - src/core/lib/promise/poll.h
   - src/core/lib/promise/race.h
   - src/core/lib/promise/seq.h
   - src/core/lib/resource_quota/memory_quota.h
   - src/core/lib/resource_quota/resource_quota.h
   - src/core/lib/resource_quota/thread_quota.h
   - src/core/lib/resource_quota/trace.h
   - src/core/lib/slice/percent_encoding.h
   - src/core/lib/slice/slice.h
   - src/core/lib/slice/slice_internal.h
   - src/core/lib/slice/slice_refcount.h
   - src/core/lib/slice/slice_refcount_base.h
   - src/core/lib/slice/slice_string_helpers.h
   src:
   - src/core/ext/upb-generated/google/protobuf/any.upb.c
   - src/core/ext/upb-generated/google/rpc/status.upb.c
   - src/core/lib/debug/trace.cc
   - src/core/lib/event_engine/memory_allocator.cc
   - src/core/lib/gprpp/status_helper.cc
   - src/core/lib/gprpp/time.cc
   - src/core/lib/iomgr/combiner.cc
   - src/core/lib/iomgr/error.cc
   - src/core/lib/iomgr/exec_ctx.cc
   - src/core/lib/iomgr/executor.cc
   - src/core/lib/iomgr/iomgr_internal.cc
   - src/core/lib/promise/activity.cc
   - src/core/lib/resource_quota/memory_quota.cc
   - src/core/lib/resource_quota/resource_quota.cc
   - src/core/lib/resource_quota/thread_quota.cc
   - src/core/lib/resource_quota/trace.cc
   - src/core/lib/slice/percent_encoding.cc
   - src/core/lib/slice/slice.cc
   - src/core/lib/slice/slice_refcount.cc
   - src/core/lib/slice/slice_string_helpers.cc
   - test/core/resource_quota/resource_quota_test.cc
   deps:
   - absl/meta:type_traits
   - absl/status:statusor
   - absl/types:variant
   - absl/utility:utility
   - gpr
   - upb
   uses_polling: false
 - name: retry_throttle_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/client_channel/retry_throttle_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: rls_end2end_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/util/test_lb_policies.h
   - test/cpp/end2end/counted_service.h
   - test/cpp/end2end/rls_server.h
   - test/cpp/end2end/test_service_impl.h
   src:
   - src/proto/grpc/lookup/v1/rls.proto
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/core/util/test_lb_policies.cc
   - test/cpp/end2end/rls_end2end_test.cc
   - test/cpp/end2end/rls_server.cc
   - test/cpp/end2end/test_service_impl.cc
   deps:
   - grpc++_test_config
   - grpc++_test_util
 - name: rls_lb_config_parser_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/client_channel/rls_lb_config_parser_test.cc
   deps:
   - grpc_test_util
 - name: secure_auth_context_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/cpp/common/secure_auth_context_test.cc
   deps:
   - grpc++_test_util
 - name: seq_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/gprpp/construct_destruct.h
   - src/core/lib/promise/detail/basic_seq.h
   - src/core/lib/promise/detail/promise_factory.h
   - src/core/lib/promise/detail/promise_like.h
   - src/core/lib/promise/detail/switch.h
   - src/core/lib/promise/poll.h
   - src/core/lib/promise/seq.h
   src:
   - test/core/promise/seq_test.cc
   deps:
   - absl/meta:type_traits
   - absl/types:variant
   - absl/utility:utility
   uses_polling: false
 - name: server_builder_plugin_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/end2end/test_service_impl.h
   src:
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/server_builder_plugin_test.cc
   - test/cpp/end2end/test_service_impl.cc
   deps:
   - grpc++_test_util
 - name: server_builder_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/server/server_builder_test.cc
   deps:
   - grpc++_unsecure
   - grpc_test_util_unsecure
   platforms:
   - linux
   - posix
   - mac
 - name: server_builder_with_socket_mutator_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/server/server_builder_with_socket_mutator_test.cc
   deps:
   - grpc++_unsecure
   - grpc_test_util_unsecure
   platforms:
   - linux
   - posix
   - mac
 - name: server_chttp2_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/surface/server_chttp2_test.cc
   deps:
   - grpc_test_util
 - name: server_config_selector_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/server_config_selector/server_config_selector_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: server_context_test_spouse_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/cpp/test/server_context_test_spouse_test.cc
   deps:
   - grpc++_test
   - grpc++_test_util
 - name: server_early_return_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/server_early_return_test.cc
   deps:
   - grpc++_test_util
 - name: server_interceptors_end2end_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/end2end/interceptors_util.h
   - test/cpp/end2end/test_service_impl.h
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/interceptors_util.cc
   - test/cpp/end2end/server_interceptors_end2end_test.cc
   - test/cpp/end2end/test_service_impl.cc
   deps:
   - grpc++_test_util
 - name: server_registered_method_bad_client_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/bad_client/bad_client.h
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/bad_client/bad_client.cc
   - test/core/bad_client/tests/server_registered_method.cc
   - test/core/end2end/cq_verifier.cc
   deps:
   - grpc_test_util
 - name: server_request_call_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/server/server_request_call_test.cc
   deps:
   - grpc++_unsecure
   - grpc_test_util_unsecure
   platforms:
   - linux
   - posix
   - mac
 - name: service_config_end2end_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/end2end/test_service_impl.h
   src:
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/service_config_end2end_test.cc
   - test/cpp/end2end/test_service_impl.cc
   deps:
   - grpc++_test_util
 - name: service_config_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/client_channel/service_config_test.cc
   deps:
   - grpc_test_util
 - name: settings_timeout_test
   gtest: true
   build: test
   run: false
   language: c++
   headers: []
   src:
   - test/core/transport/chttp2/settings_timeout_test.cc
   deps:
   - grpc_test_util
 - name: shutdown_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/shutdown_test.cc
   deps:
   - grpc++_test_util
 - name: simple_request_bad_client_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/bad_client/bad_client.h
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/bad_client/bad_client.cc
   - test/core/bad_client/tests/simple_request.cc
   - test/core/end2end/cq_verifier.cc
   deps:
   - grpc_test_util
 - name: single_set_ptr_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/gpr/alloc.h
   - src/core/lib/gpr/env.h
   - src/core/lib/gpr/murmur_hash.h
   - src/core/lib/gpr/spinlock.h
   - src/core/lib/gpr/string.h
   - src/core/lib/gpr/string_windows.h
   - src/core/lib/gpr/time_precise.h
   - src/core/lib/gpr/tls.h
   - src/core/lib/gpr/tmpfile.h
   - src/core/lib/gpr/useful.h
   - src/core/lib/gprpp/construct_destruct.h
   - src/core/lib/gprpp/debug_location.h
   - src/core/lib/gprpp/examine_stack.h
   - src/core/lib/gprpp/fork.h
   - src/core/lib/gprpp/global_config.h
   - src/core/lib/gprpp/global_config_custom.h
   - src/core/lib/gprpp/global_config_env.h
   - src/core/lib/gprpp/global_config_generic.h
   - src/core/lib/gprpp/host_port.h
   - src/core/lib/gprpp/manual_constructor.h
   - src/core/lib/gprpp/memory.h
   - src/core/lib/gprpp/mpscq.h
   - src/core/lib/gprpp/single_set_ptr.h
   - src/core/lib/gprpp/stat.h
   - src/core/lib/gprpp/sync.h
   - src/core/lib/gprpp/thd.h
   - src/core/lib/gprpp/time_util.h
   - src/core/lib/profiling/timers.h
   src:
   - src/core/lib/gpr/alloc.cc
   - src/core/lib/gpr/atm.cc
   - src/core/lib/gpr/cpu_iphone.cc
   - src/core/lib/gpr/cpu_linux.cc
   - src/core/lib/gpr/cpu_posix.cc
   - src/core/lib/gpr/cpu_windows.cc
   - src/core/lib/gpr/env_linux.cc
   - src/core/lib/gpr/env_posix.cc
   - src/core/lib/gpr/env_windows.cc
   - src/core/lib/gpr/log.cc
   - src/core/lib/gpr/log_android.cc
   - src/core/lib/gpr/log_linux.cc
   - src/core/lib/gpr/log_posix.cc
   - src/core/lib/gpr/log_windows.cc
   - src/core/lib/gpr/murmur_hash.cc
   - src/core/lib/gpr/string.cc
   - src/core/lib/gpr/string_posix.cc
   - src/core/lib/gpr/string_util_windows.cc
   - src/core/lib/gpr/string_windows.cc
   - src/core/lib/gpr/sync.cc
   - src/core/lib/gpr/sync_abseil.cc
   - src/core/lib/gpr/sync_posix.cc
   - src/core/lib/gpr/sync_windows.cc
   - src/core/lib/gpr/time.cc
   - src/core/lib/gpr/time_posix.cc
   - src/core/lib/gpr/time_precise.cc
   - src/core/lib/gpr/time_windows.cc
   - src/core/lib/gpr/tmpfile_msys.cc
   - src/core/lib/gpr/tmpfile_posix.cc
   - src/core/lib/gpr/tmpfile_windows.cc
   - src/core/lib/gpr/wrap_memcpy.cc
   - src/core/lib/gprpp/examine_stack.cc
   - src/core/lib/gprpp/fork.cc
   - src/core/lib/gprpp/global_config_env.cc
   - src/core/lib/gprpp/host_port.cc
   - src/core/lib/gprpp/mpscq.cc
   - src/core/lib/gprpp/stat_posix.cc
   - src/core/lib/gprpp/stat_windows.cc
   - src/core/lib/gprpp/thd_posix.cc
   - src/core/lib/gprpp/thd_windows.cc
   - src/core/lib/gprpp/time_util.cc
   - src/core/lib/profiling/basic_timers.cc
   - src/core/lib/profiling/stap_timers.cc
   - test/core/gprpp/single_set_ptr_test.cc
   deps:
   - absl/base:base
   - absl/base:core_headers
   - absl/memory:memory
   - absl/random:random
   - absl/status:status
   - absl/strings:cord
   - absl/strings:str_format
   - absl/strings:strings
   - absl/synchronization:synchronization
   - absl/time:time
   - absl/types:optional
   uses_polling: false
 - name: sleep_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/promise/test_wakeup_schedulers.h
   src:
   - test/core/promise/sleep_test.cc
   deps:
   - grpc
   uses_polling: false
 - name: smoke_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/event_engine/smoke_test.cc
   deps:
   - grpc_test_util
 - name: sockaddr_utils_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/address_utils/sockaddr_utils_test.cc
   deps:
   - grpc_test_util
 - name: stack_tracer_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/util/stack_tracer_test.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
   uses_polling: false
 - name: stat_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/gprpp/stat_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: stats_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/debug/stats_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: status_helper_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/gprpp/status_helper_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: status_util_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/channel/status_util_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: stranded_event_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/end2end/cq_verifier.cc
   - test/core/iomgr/stranded_event_test.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: streaming_throughput_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/streaming_throughput_test.cc
   deps:
   - grpc++_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: streams_not_seen_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/end2end/cq_verifier.cc
   - test/core/transport/chttp2/streams_not_seen_test.cc
   deps:
   - grpc_test_util
 - name: string_ref_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/cpp/util/string_ref_test.cc
   deps:
   - grpc++
   - grpc_test_util
   uses_polling: false
 - name: table_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/gpr/useful.h
   - src/core/lib/gprpp/bitset.h
   - src/core/lib/gprpp/table.h
   src:
   - test/core/gprpp/table_test.cc
   deps:
   - absl/meta:type_traits
   - absl/types:optional
   - absl/utility:utility
   uses_polling: false
 - name: test_core_event_engine_slice_buffer_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/event_engine/slice_buffer_test.cc
   deps:
   - grpc_test_util
 - name: test_core_gprpp_time_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/gpr/alloc.h
   - src/core/lib/gpr/env.h
   - src/core/lib/gpr/murmur_hash.h
   - src/core/lib/gpr/spinlock.h
   - src/core/lib/gpr/string.h
   - src/core/lib/gpr/string_windows.h
   - src/core/lib/gpr/time_precise.h
   - src/core/lib/gpr/tls.h
   - src/core/lib/gpr/tmpfile.h
   - src/core/lib/gpr/useful.h
   - src/core/lib/gprpp/construct_destruct.h
   - src/core/lib/gprpp/debug_location.h
   - src/core/lib/gprpp/examine_stack.h
   - src/core/lib/gprpp/fork.h
   - src/core/lib/gprpp/global_config.h
   - src/core/lib/gprpp/global_config_custom.h
   - src/core/lib/gprpp/global_config_env.h
   - src/core/lib/gprpp/global_config_generic.h
   - src/core/lib/gprpp/host_port.h
   - src/core/lib/gprpp/manual_constructor.h
   - src/core/lib/gprpp/memory.h
   - src/core/lib/gprpp/mpscq.h
   - src/core/lib/gprpp/stat.h
   - src/core/lib/gprpp/sync.h
   - src/core/lib/gprpp/thd.h
   - src/core/lib/gprpp/time.h
   - src/core/lib/gprpp/time_util.h
   - src/core/lib/profiling/timers.h
   src:
   - src/core/lib/gpr/alloc.cc
   - src/core/lib/gpr/atm.cc
   - src/core/lib/gpr/cpu_iphone.cc
   - src/core/lib/gpr/cpu_linux.cc
   - src/core/lib/gpr/cpu_posix.cc
   - src/core/lib/gpr/cpu_windows.cc
   - src/core/lib/gpr/env_linux.cc
   - src/core/lib/gpr/env_posix.cc
   - src/core/lib/gpr/env_windows.cc
   - src/core/lib/gpr/log.cc
   - src/core/lib/gpr/log_android.cc
   - src/core/lib/gpr/log_linux.cc
   - src/core/lib/gpr/log_posix.cc
   - src/core/lib/gpr/log_windows.cc
   - src/core/lib/gpr/murmur_hash.cc
   - src/core/lib/gpr/string.cc
   - src/core/lib/gpr/string_posix.cc
   - src/core/lib/gpr/string_util_windows.cc
   - src/core/lib/gpr/string_windows.cc
   - src/core/lib/gpr/sync.cc
   - src/core/lib/gpr/sync_abseil.cc
   - src/core/lib/gpr/sync_posix.cc
   - src/core/lib/gpr/sync_windows.cc
   - src/core/lib/gpr/time.cc
   - src/core/lib/gpr/time_posix.cc
   - src/core/lib/gpr/time_precise.cc
   - src/core/lib/gpr/time_windows.cc
   - src/core/lib/gpr/tmpfile_msys.cc
   - src/core/lib/gpr/tmpfile_posix.cc
   - src/core/lib/gpr/tmpfile_windows.cc
   - src/core/lib/gpr/wrap_memcpy.cc
   - src/core/lib/gprpp/examine_stack.cc
   - src/core/lib/gprpp/fork.cc
   - src/core/lib/gprpp/global_config_env.cc
   - src/core/lib/gprpp/host_port.cc
   - src/core/lib/gprpp/mpscq.cc
   - src/core/lib/gprpp/stat_posix.cc
   - src/core/lib/gprpp/stat_windows.cc
   - src/core/lib/gprpp/thd_posix.cc
   - src/core/lib/gprpp/thd_windows.cc
   - src/core/lib/gprpp/time.cc
   - src/core/lib/gprpp/time_util.cc
   - src/core/lib/profiling/basic_timers.cc
   - src/core/lib/profiling/stap_timers.cc
   - test/core/gprpp/time_test.cc
   deps:
   - absl/base:base
   - absl/base:core_headers
   - absl/memory:memory
   - absl/random:random
   - absl/status:status
   - absl/strings:cord
   - absl/strings:str_format
   - absl/strings:strings
   - absl/synchronization:synchronization
   - absl/time:time
   - absl/types:optional
   uses_polling: false
 - name: test_core_security_credentials_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/security/credentials_test.cc
   deps:
   - grpc_test_util
 - name: test_core_slice_slice_buffer_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/slice/slice_buffer_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: test_core_slice_slice_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/util/build.h
   src:
   - test/core/slice/slice_test.cc
   - test/core/util/build.cc
   deps:
   - grpc
   uses_polling: false
 - name: test_cpp_client_credentials_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/util/tls_test_utils.h
   src:
   - test/cpp/client/credentials_test.cc
   - test/cpp/util/tls_test_utils.cc
   deps:
   - grpc++
   - grpc_test_util
 - name: test_cpp_server_credentials_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/util/tls_test_utils.h
   src:
   - test/cpp/server/credentials_test.cc
   - test/cpp/util/tls_test_utils.cc
   deps:
   - grpc++
   - grpc_test_util
 - name: test_cpp_util_slice_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/cpp/util/slice_test.cc
   deps:
   - grpc++_test_util
   uses_polling: false
 - name: test_cpp_util_time_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/cpp/util/time_test.cc
   deps:
   - grpc++_test_util
   uses_polling: false
 - name: thread_manager_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/cpp/thread_manager/thread_manager_test.cc
   deps:
   - grpc++_test_config
   - grpc++_test_util
 - name: thread_quota_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/gpr/alloc.h
   - src/core/lib/gpr/env.h
   - src/core/lib/gpr/murmur_hash.h
   - src/core/lib/gpr/spinlock.h
   - src/core/lib/gpr/string.h
   - src/core/lib/gpr/string_windows.h
   - src/core/lib/gpr/time_precise.h
   - src/core/lib/gpr/tls.h
   - src/core/lib/gpr/tmpfile.h
   - src/core/lib/gpr/useful.h
   - src/core/lib/gprpp/atomic_utils.h
   - src/core/lib/gprpp/construct_destruct.h
   - src/core/lib/gprpp/debug_location.h
   - src/core/lib/gprpp/examine_stack.h
   - src/core/lib/gprpp/fork.h
   - src/core/lib/gprpp/global_config.h
   - src/core/lib/gprpp/global_config_custom.h
   - src/core/lib/gprpp/global_config_env.h
   - src/core/lib/gprpp/global_config_generic.h
   - src/core/lib/gprpp/host_port.h
   - src/core/lib/gprpp/manual_constructor.h
   - src/core/lib/gprpp/memory.h
   - src/core/lib/gprpp/mpscq.h
   - src/core/lib/gprpp/ref_counted.h
   - src/core/lib/gprpp/ref_counted_ptr.h
   - src/core/lib/gprpp/stat.h
   - src/core/lib/gprpp/sync.h
   - src/core/lib/gprpp/thd.h
   - src/core/lib/gprpp/time_util.h
   - src/core/lib/profiling/timers.h
   - src/core/lib/resource_quota/thread_quota.h
   src:
   - src/core/lib/gpr/alloc.cc
   - src/core/lib/gpr/atm.cc
   - src/core/lib/gpr/cpu_iphone.cc
   - src/core/lib/gpr/cpu_linux.cc
   - src/core/lib/gpr/cpu_posix.cc
   - src/core/lib/gpr/cpu_windows.cc
   - src/core/lib/gpr/env_linux.cc
   - src/core/lib/gpr/env_posix.cc
   - src/core/lib/gpr/env_windows.cc
   - src/core/lib/gpr/log.cc
   - src/core/lib/gpr/log_android.cc
   - src/core/lib/gpr/log_linux.cc
   - src/core/lib/gpr/log_posix.cc
   - src/core/lib/gpr/log_windows.cc
   - src/core/lib/gpr/murmur_hash.cc
   - src/core/lib/gpr/string.cc
   - src/core/lib/gpr/string_posix.cc
   - src/core/lib/gpr/string_util_windows.cc
   - src/core/lib/gpr/string_windows.cc
   - src/core/lib/gpr/sync.cc
   - src/core/lib/gpr/sync_abseil.cc
   - src/core/lib/gpr/sync_posix.cc
   - src/core/lib/gpr/sync_windows.cc
   - src/core/lib/gpr/time.cc
   - src/core/lib/gpr/time_posix.cc
   - src/core/lib/gpr/time_precise.cc
   - src/core/lib/gpr/time_windows.cc
   - src/core/lib/gpr/tmpfile_msys.cc
   - src/core/lib/gpr/tmpfile_posix.cc
   - src/core/lib/gpr/tmpfile_windows.cc
   - src/core/lib/gpr/wrap_memcpy.cc
   - src/core/lib/gprpp/examine_stack.cc
   - src/core/lib/gprpp/fork.cc
   - src/core/lib/gprpp/global_config_env.cc
   - src/core/lib/gprpp/host_port.cc
   - src/core/lib/gprpp/mpscq.cc
   - src/core/lib/gprpp/stat_posix.cc
   - src/core/lib/gprpp/stat_windows.cc
   - src/core/lib/gprpp/thd_posix.cc
   - src/core/lib/gprpp/thd_windows.cc
   - src/core/lib/gprpp/time_util.cc
   - src/core/lib/profiling/basic_timers.cc
   - src/core/lib/profiling/stap_timers.cc
   - src/core/lib/resource_quota/thread_quota.cc
   - test/core/resource_quota/thread_quota_test.cc
   deps:
   - absl/base:base
   - absl/base:core_headers
   - absl/memory:memory
   - absl/random:random
   - absl/status:status
   - absl/strings:cord
   - absl/strings:str_format
   - absl/strings:strings
   - absl/synchronization:synchronization
   - absl/time:time
   - absl/types:optional
   uses_polling: false
 - name: thread_stress_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/thread_stress_test.cc
   deps:
   - grpc++_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: time_jump_test
   gtest: true
   build: test
   run: false
   language: c++
   headers: []
   src:
   - test/cpp/common/time_jump_test.cc
   deps:
   - grpc++
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: time_util_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/gprpp/time_util_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: timeout_encoding_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/transport/timeout_encoding_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: timer_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/cpp/common/timer_test.cc
   deps:
   - grpc++
   - grpc_test_util
 - name: tls_certificate_verifier_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/util/tls_test_utils.h
   src:
   - test/cpp/security/tls_certificate_verifier_test.cc
   - test/cpp/util/tls_test_utils.cc
   deps:
   - grpc++
   - grpc_test_util
 - name: tls_key_export_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/tls_key_export_test.cc
   deps:
   - grpc++_test_util
 - name: tls_security_connector_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/security/tls_security_connector_test.cc
   deps:
   - grpc_test_util
 - name: tls_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/gpr/tls_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: too_many_pings_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/end2end/cq_verifier.cc
   - test/core/transport/chttp2/too_many_pings_test.cc
   deps:
   - grpc++_test_config
   - grpc++_test_util
 - name: transport_stream_receiver_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/ext/transport/binder/client/binder_connector.h
   - src/core/ext/transport/binder/client/channel_create_impl.h
   - src/core/ext/transport/binder/client/connection_id_generator.h
   - src/core/ext/transport/binder/client/endpoint_binder_pool.h
   - src/core/ext/transport/binder/client/jni_utils.h
   - src/core/ext/transport/binder/client/security_policy_setting.h
   - src/core/ext/transport/binder/server/binder_server.h
   - src/core/ext/transport/binder/transport/binder_stream.h
   - src/core/ext/transport/binder/transport/binder_transport.h
   - src/core/ext/transport/binder/utils/binder_auto_utils.h
   - src/core/ext/transport/binder/utils/ndk_binder.h
   - src/core/ext/transport/binder/utils/transport_stream_receiver.h
   - src/core/ext/transport/binder/utils/transport_stream_receiver_impl.h
   - src/core/ext/transport/binder/wire_format/binder.h
   - src/core/ext/transport/binder/wire_format/binder_android.h
   - src/core/ext/transport/binder/wire_format/binder_constants.h
   - src/core/ext/transport/binder/wire_format/transaction.h
   - src/core/ext/transport/binder/wire_format/wire_reader.h
   - src/core/ext/transport/binder/wire_format/wire_reader_impl.h
   - src/core/ext/transport/binder/wire_format/wire_writer.h
   - src/cpp/client/create_channel_internal.h
   - src/cpp/common/channel_filter.h
   - src/cpp/server/dynamic_thread_pool.h
   - src/cpp/server/external_connection_acceptor_impl.h
   - src/cpp/server/health/default_health_check_service.h
   - src/cpp/server/thread_pool_interface.h
   - src/cpp/thread_manager/thread_manager.h
   src:
   - src/core/ext/transport/binder/client/binder_connector.cc
   - src/core/ext/transport/binder/client/channel_create.cc
   - src/core/ext/transport/binder/client/channel_create_impl.cc
   - src/core/ext/transport/binder/client/connection_id_generator.cc
   - src/core/ext/transport/binder/client/endpoint_binder_pool.cc
   - src/core/ext/transport/binder/client/jni_utils.cc
   - src/core/ext/transport/binder/client/security_policy_setting.cc
   - src/core/ext/transport/binder/security_policy/binder_security_policy.cc
   - src/core/ext/transport/binder/server/binder_server.cc
   - src/core/ext/transport/binder/server/binder_server_credentials.cc
   - src/core/ext/transport/binder/transport/binder_transport.cc
   - src/core/ext/transport/binder/utils/ndk_binder.cc
   - src/core/ext/transport/binder/utils/transport_stream_receiver_impl.cc
   - src/core/ext/transport/binder/wire_format/binder_android.cc
   - src/core/ext/transport/binder/wire_format/binder_constants.cc
   - src/core/ext/transport/binder/wire_format/transaction.cc
   - src/core/ext/transport/binder/wire_format/wire_reader_impl.cc
   - src/core/ext/transport/binder/wire_format/wire_writer.cc
   - src/cpp/client/channel_cc.cc
   - src/cpp/client/client_callback.cc
   - src/cpp/client/client_context.cc
   - src/cpp/client/client_interceptor.cc
   - src/cpp/client/create_channel.cc
   - src/cpp/client/create_channel_internal.cc
   - src/cpp/client/create_channel_posix.cc
   - src/cpp/client/credentials_cc.cc
   - src/cpp/codegen/codegen_init.cc
   - src/cpp/common/alarm.cc
   - src/cpp/common/channel_arguments.cc
   - src/cpp/common/channel_filter.cc
   - src/cpp/common/completion_queue_cc.cc
   - src/cpp/common/core_codegen.cc
   - src/cpp/common/resource_quota_cc.cc
   - src/cpp/common/rpc_method.cc
   - src/cpp/common/validate_service_config.cc
   - src/cpp/common/version_cc.cc
   - src/cpp/server/async_generic_service.cc
   - src/cpp/server/channel_argument_option.cc
   - src/cpp/server/create_default_thread_pool.cc
   - src/cpp/server/dynamic_thread_pool.cc
   - src/cpp/server/external_connection_acceptor_impl.cc
   - src/cpp/server/health/default_health_check_service.cc
   - src/cpp/server/health/health_check_service.cc
   - src/cpp/server/health/health_check_service_server_builder_option.cc
   - src/cpp/server/orca/call_metric_recorder.cc
   - src/cpp/server/server_builder.cc
   - src/cpp/server/server_callback.cc
   - src/cpp/server/server_cc.cc
   - src/cpp/server/server_context.cc
   - src/cpp/server/server_credentials.cc
   - src/cpp/server/server_posix.cc
   - src/cpp/thread_manager/thread_manager.cc
   - src/cpp/util/byte_buffer_cc.cc
   - src/cpp/util/status.cc
   - src/cpp/util/string_ref.cc
   - src/cpp/util/time_cc.cc
   - test/core/transport/binder/transport_stream_receiver_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: try_join_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/gpr/useful.h
   - src/core/lib/gprpp/bitset.h
   - src/core/lib/gprpp/construct_destruct.h
   - src/core/lib/promise/detail/basic_join.h
   - src/core/lib/promise/detail/promise_like.h
   - src/core/lib/promise/detail/status.h
   - src/core/lib/promise/poll.h
   - src/core/lib/promise/try_join.h
   src:
   - test/core/promise/try_join_test.cc
   deps:
   - absl/meta:type_traits
   - absl/status:status
   - absl/status:statusor
   - absl/types:variant
   - absl/utility:utility
   uses_polling: false
 - name: try_seq_metadata_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/promise/try_seq_metadata_test.cc
   deps:
   - grpc
   uses_polling: false
 - name: try_seq_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/gprpp/construct_destruct.h
   - src/core/lib/promise/detail/basic_seq.h
   - src/core/lib/promise/detail/promise_factory.h
   - src/core/lib/promise/detail/promise_like.h
   - src/core/lib/promise/detail/status.h
   - src/core/lib/promise/detail/switch.h
   - src/core/lib/promise/poll.h
   - src/core/lib/promise/try_seq.h
   src:
   - test/core/promise/try_seq_test.cc
   deps:
   - absl/meta:type_traits
   - absl/status:status
   - absl/status:statusor
   - absl/types:variant
   - absl/utility:utility
   uses_polling: false
 - name: unique_type_name_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/gpr/useful.h
   - src/core/lib/gprpp/unique_type_name.h
   src:
   - test/core/gprpp/unique_type_name_test.cc
   deps:
   - absl/strings:str_format
   - absl/strings:strings
   uses_polling: false
 - name: unknown_frame_bad_client_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/bad_client/bad_client.h
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/bad_client/bad_client.cc
   - test/core/bad_client/tests/unknown_frame.cc
   - test/core/end2end/cq_verifier.cc
   deps:
   - grpc_test_util
 - name: uri_parser_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/uri/uri_parser_test.cc
   deps:
   - grpc_test_util
 - name: useful_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/lib/gpr/useful.h
   src:
   - test/core/gpr/useful_test.cc
   deps: []
   uses_polling: false
 - name: window_overflow_bad_client_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/bad_client/bad_client.h
   - test/core/end2end/cq_verifier.h
   src:
   - test/core/bad_client/bad_client.cc
   - test/core/bad_client/tests/window_overflow.cc
   - test/core/end2end/cq_verifier.cc
   deps:
   - grpc_test_util
 - name: wire_reader_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/ext/transport/binder/client/binder_connector.h
   - src/core/ext/transport/binder/client/channel_create_impl.h
   - src/core/ext/transport/binder/client/connection_id_generator.h
   - src/core/ext/transport/binder/client/endpoint_binder_pool.h
   - src/core/ext/transport/binder/client/jni_utils.h
   - src/core/ext/transport/binder/client/security_policy_setting.h
   - src/core/ext/transport/binder/server/binder_server.h
   - src/core/ext/transport/binder/transport/binder_stream.h
   - src/core/ext/transport/binder/transport/binder_transport.h
   - src/core/ext/transport/binder/utils/binder_auto_utils.h
   - src/core/ext/transport/binder/utils/ndk_binder.h
   - src/core/ext/transport/binder/utils/transport_stream_receiver.h
   - src/core/ext/transport/binder/utils/transport_stream_receiver_impl.h
   - src/core/ext/transport/binder/wire_format/binder.h
   - src/core/ext/transport/binder/wire_format/binder_android.h
   - src/core/ext/transport/binder/wire_format/binder_constants.h
   - src/core/ext/transport/binder/wire_format/transaction.h
   - src/core/ext/transport/binder/wire_format/wire_reader.h
   - src/core/ext/transport/binder/wire_format/wire_reader_impl.h
   - src/core/ext/transport/binder/wire_format/wire_writer.h
   - src/cpp/client/create_channel_internal.h
   - src/cpp/common/channel_filter.h
   - src/cpp/server/dynamic_thread_pool.h
   - src/cpp/server/external_connection_acceptor_impl.h
   - src/cpp/server/health/default_health_check_service.h
   - src/cpp/server/thread_pool_interface.h
   - src/cpp/thread_manager/thread_manager.h
   - test/core/transport/binder/mock_objects.h
   src:
   - src/core/ext/transport/binder/client/binder_connector.cc
   - src/core/ext/transport/binder/client/channel_create.cc
   - src/core/ext/transport/binder/client/channel_create_impl.cc
   - src/core/ext/transport/binder/client/connection_id_generator.cc
   - src/core/ext/transport/binder/client/endpoint_binder_pool.cc
   - src/core/ext/transport/binder/client/jni_utils.cc
   - src/core/ext/transport/binder/client/security_policy_setting.cc
   - src/core/ext/transport/binder/security_policy/binder_security_policy.cc
   - src/core/ext/transport/binder/server/binder_server.cc
   - src/core/ext/transport/binder/server/binder_server_credentials.cc
   - src/core/ext/transport/binder/transport/binder_transport.cc
   - src/core/ext/transport/binder/utils/ndk_binder.cc
   - src/core/ext/transport/binder/utils/transport_stream_receiver_impl.cc
   - src/core/ext/transport/binder/wire_format/binder_android.cc
   - src/core/ext/transport/binder/wire_format/binder_constants.cc
   - src/core/ext/transport/binder/wire_format/transaction.cc
   - src/core/ext/transport/binder/wire_format/wire_reader_impl.cc
   - src/core/ext/transport/binder/wire_format/wire_writer.cc
   - src/cpp/client/channel_cc.cc
   - src/cpp/client/client_callback.cc
   - src/cpp/client/client_context.cc
   - src/cpp/client/client_interceptor.cc
   - src/cpp/client/create_channel.cc
   - src/cpp/client/create_channel_internal.cc
   - src/cpp/client/create_channel_posix.cc
   - src/cpp/client/credentials_cc.cc
   - src/cpp/codegen/codegen_init.cc
   - src/cpp/common/alarm.cc
   - src/cpp/common/channel_arguments.cc
   - src/cpp/common/channel_filter.cc
   - src/cpp/common/completion_queue_cc.cc
   - src/cpp/common/core_codegen.cc
   - src/cpp/common/resource_quota_cc.cc
   - src/cpp/common/rpc_method.cc
   - src/cpp/common/validate_service_config.cc
   - src/cpp/common/version_cc.cc
   - src/cpp/server/async_generic_service.cc
   - src/cpp/server/channel_argument_option.cc
   - src/cpp/server/create_default_thread_pool.cc
   - src/cpp/server/dynamic_thread_pool.cc
   - src/cpp/server/external_connection_acceptor_impl.cc
   - src/cpp/server/health/default_health_check_service.cc
   - src/cpp/server/health/health_check_service.cc
   - src/cpp/server/health/health_check_service_server_builder_option.cc
   - src/cpp/server/orca/call_metric_recorder.cc
   - src/cpp/server/server_builder.cc
   - src/cpp/server/server_callback.cc
   - src/cpp/server/server_cc.cc
   - src/cpp/server/server_context.cc
   - src/cpp/server/server_credentials.cc
   - src/cpp/server/server_posix.cc
   - src/cpp/thread_manager/thread_manager.cc
   - src/cpp/util/byte_buffer_cc.cc
   - src/cpp/util/status.cc
   - src/cpp/util/string_ref.cc
   - src/cpp/util/time_cc.cc
   - test/core/transport/binder/mock_objects.cc
   - test/core/transport/binder/wire_reader_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: wire_writer_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/core/ext/transport/binder/client/binder_connector.h
   - src/core/ext/transport/binder/client/channel_create_impl.h
   - src/core/ext/transport/binder/client/connection_id_generator.h
   - src/core/ext/transport/binder/client/endpoint_binder_pool.h
   - src/core/ext/transport/binder/client/jni_utils.h
   - src/core/ext/transport/binder/client/security_policy_setting.h
   - src/core/ext/transport/binder/server/binder_server.h
   - src/core/ext/transport/binder/transport/binder_stream.h
   - src/core/ext/transport/binder/transport/binder_transport.h
   - src/core/ext/transport/binder/utils/binder_auto_utils.h
   - src/core/ext/transport/binder/utils/ndk_binder.h
   - src/core/ext/transport/binder/utils/transport_stream_receiver.h
   - src/core/ext/transport/binder/utils/transport_stream_receiver_impl.h
   - src/core/ext/transport/binder/wire_format/binder.h
   - src/core/ext/transport/binder/wire_format/binder_android.h
   - src/core/ext/transport/binder/wire_format/binder_constants.h
   - src/core/ext/transport/binder/wire_format/transaction.h
   - src/core/ext/transport/binder/wire_format/wire_reader.h
   - src/core/ext/transport/binder/wire_format/wire_reader_impl.h
   - src/core/ext/transport/binder/wire_format/wire_writer.h
   - src/cpp/client/create_channel_internal.h
   - src/cpp/common/channel_filter.h
   - src/cpp/server/dynamic_thread_pool.h
   - src/cpp/server/external_connection_acceptor_impl.h
   - src/cpp/server/health/default_health_check_service.h
   - src/cpp/server/thread_pool_interface.h
   - src/cpp/thread_manager/thread_manager.h
   - test/core/transport/binder/mock_objects.h
   src:
   - src/core/ext/transport/binder/client/binder_connector.cc
   - src/core/ext/transport/binder/client/channel_create.cc
   - src/core/ext/transport/binder/client/channel_create_impl.cc
   - src/core/ext/transport/binder/client/connection_id_generator.cc
   - src/core/ext/transport/binder/client/endpoint_binder_pool.cc
   - src/core/ext/transport/binder/client/jni_utils.cc
   - src/core/ext/transport/binder/client/security_policy_setting.cc
   - src/core/ext/transport/binder/security_policy/binder_security_policy.cc
   - src/core/ext/transport/binder/server/binder_server.cc
   - src/core/ext/transport/binder/server/binder_server_credentials.cc
   - src/core/ext/transport/binder/transport/binder_transport.cc
   - src/core/ext/transport/binder/utils/ndk_binder.cc
   - src/core/ext/transport/binder/utils/transport_stream_receiver_impl.cc
   - src/core/ext/transport/binder/wire_format/binder_android.cc
   - src/core/ext/transport/binder/wire_format/binder_constants.cc
   - src/core/ext/transport/binder/wire_format/transaction.cc
   - src/core/ext/transport/binder/wire_format/wire_reader_impl.cc
   - src/core/ext/transport/binder/wire_format/wire_writer.cc
   - src/cpp/client/channel_cc.cc
   - src/cpp/client/client_callback.cc
   - src/cpp/client/client_context.cc
   - src/cpp/client/client_interceptor.cc
   - src/cpp/client/create_channel.cc
   - src/cpp/client/create_channel_internal.cc
   - src/cpp/client/create_channel_posix.cc
   - src/cpp/client/credentials_cc.cc
   - src/cpp/codegen/codegen_init.cc
   - src/cpp/common/alarm.cc
   - src/cpp/common/channel_arguments.cc
   - src/cpp/common/channel_filter.cc
   - src/cpp/common/completion_queue_cc.cc
   - src/cpp/common/core_codegen.cc
   - src/cpp/common/resource_quota_cc.cc
   - src/cpp/common/rpc_method.cc
   - src/cpp/common/validate_service_config.cc
   - src/cpp/common/version_cc.cc
   - src/cpp/server/async_generic_service.cc
   - src/cpp/server/channel_argument_option.cc
   - src/cpp/server/create_default_thread_pool.cc
   - src/cpp/server/dynamic_thread_pool.cc
   - src/cpp/server/external_connection_acceptor_impl.cc
   - src/cpp/server/health/default_health_check_service.cc
   - src/cpp/server/health/health_check_service.cc
   - src/cpp/server/health/health_check_service_server_builder_option.cc
   - src/cpp/server/orca/call_metric_recorder.cc
   - src/cpp/server/server_builder.cc
   - src/cpp/server/server_callback.cc
   - src/cpp/server/server_cc.cc
   - src/cpp/server/server_context.cc
   - src/cpp/server/server_credentials.cc
   - src/cpp/server/server_posix.cc
   - src/cpp/thread_manager/thread_manager.cc
   - src/cpp/util/byte_buffer_cc.cc
   - src/cpp/util/status.cc
   - src/cpp/util/string_ref.cc
   - src/cpp/util/time_cc.cc
   - test/core/transport/binder/mock_objects.cc
   - test/core/transport/binder/wire_writer_test.cc
   deps:
   - grpc_test_util
   uses_polling: false
 - name: work_serializer_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/iomgr/work_serializer_test.cc
   deps:
   - grpc_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: writes_per_rpc_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/core/event_engine/test_init.h
   - test/core/util/build.h
   - test/core/util/cmdline.h
   - test/core/util/evaluate_args_test_util.h
   - test/core/util/fuzzer_util.h
   - test/core/util/grpc_profiler.h
   - test/core/util/histogram.h
   - test/core/util/mock_authorization_endpoint.h
   - test/core/util/mock_endpoint.h
   - test/core/util/parse_hexstring.h
   - test/core/util/passthru_endpoint.h
   - test/core/util/port.h
   - test/core/util/port_server_client.h
   - test/core/util/reconnect_server.h
   - test/core/util/resolve_localhost_ip46.h
   - test/core/util/slice_splitter.h
   - test/core/util/stack_tracer.h
   - test/core/util/subprocess.h
   - test/core/util/test_config.h
   - test/core/util/test_tcp_server.h
   - test/core/util/tracer_util.h
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/core/event_engine/test_init.cc
   - test/core/util/build.cc
   - test/core/util/cmdline.cc
   - test/core/util/fuzzer_util.cc
   - test/core/util/grpc_profiler.cc
   - test/core/util/histogram.cc
   - test/core/util/mock_endpoint.cc
   - test/core/util/parse_hexstring.cc
   - test/core/util/passthru_endpoint.cc
   - test/core/util/port.cc
   - test/core/util/port_isolated_runtime_environment.cc
   - test/core/util/port_server_client.cc
   - test/core/util/reconnect_server.cc
   - test/core/util/resolve_localhost_ip46.cc
   - test/core/util/slice_splitter.cc
   - test/core/util/stack_tracer.cc
   - test/core/util/subprocess_posix.cc
   - test/core/util/subprocess_windows.cc
   - test/core/util/test_config.cc
   - test/core/util/test_tcp_server.cc
   - test/core/util/tracer_util.cc
   - test/cpp/performance/writes_per_rpc_test.cc
   deps:
   - absl/debugging:failure_signal_handler
   - absl/debugging:stacktrace
   - absl/debugging:symbolize
   - grpc++
   platforms:
   - linux
   - posix
   - mac
 - name: xds_bootstrap_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/xds/xds_bootstrap_test.cc
   deps:
   - grpc_test_util
 - name: xds_certificate_provider_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/xds/xds_certificate_provider_test.cc
   deps:
   - grpc_test_util
 - name: xds_cluster_end2end_test
   gtest: true
   build: test
   run: false
   language: c++
   headers:
   - test/cpp/end2end/counted_service.h
   - test/cpp/end2end/test_service_impl.h
   - test/cpp/end2end/xds/xds_end2end_test_lib.h
   - test/cpp/end2end/xds/xds_server.h
   - test/cpp/util/tls_test_utils.h
   src:
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/ads_for_test.proto
   - src/proto/grpc/testing/xds/eds_for_test.proto
   - src/proto/grpc/testing/xds/lrs_for_test.proto
   - src/proto/grpc/testing/xds/v3/address.proto
   - src/proto/grpc/testing/xds/v3/ads.proto
   - src/proto/grpc/testing/xds/v3/base.proto
   - src/proto/grpc/testing/xds/v3/cluster.proto
   - src/proto/grpc/testing/xds/v3/config_source.proto
   - src/proto/grpc/testing/xds/v3/discovery.proto
   - src/proto/grpc/testing/xds/v3/endpoint.proto
   - src/proto/grpc/testing/xds/v3/expr.proto
   - src/proto/grpc/testing/xds/v3/extension.proto
   - src/proto/grpc/testing/xds/v3/http_connection_manager.proto
   - src/proto/grpc/testing/xds/v3/http_filter_rbac.proto
   - src/proto/grpc/testing/xds/v3/listener.proto
   - src/proto/grpc/testing/xds/v3/load_report.proto
   - src/proto/grpc/testing/xds/v3/lrs.proto
   - src/proto/grpc/testing/xds/v3/metadata.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - src/proto/grpc/testing/xds/v3/outlier_detection.proto
   - src/proto/grpc/testing/xds/v3/path.proto
   - src/proto/grpc/testing/xds/v3/percent.proto
   - src/proto/grpc/testing/xds/v3/protocol.proto
   - src/proto/grpc/testing/xds/v3/range.proto
   - src/proto/grpc/testing/xds/v3/rbac.proto
   - src/proto/grpc/testing/xds/v3/regex.proto
   - src/proto/grpc/testing/xds/v3/route.proto
   - src/proto/grpc/testing/xds/v3/router.proto
   - src/proto/grpc/testing/xds/v3/string.proto
   - test/cpp/end2end/test_service_impl.cc
   - test/cpp/end2end/xds/xds_cluster_end2end_test.cc
   - test/cpp/end2end/xds/xds_end2end_test_lib.cc
   - test/cpp/end2end/xds/xds_server.cc
   - test/cpp/util/tls_test_utils.cc
   deps:
   - grpc++_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: xds_cluster_type_end2end_test
   gtest: true
   build: test
   run: false
   language: c++
   headers:
   - test/cpp/end2end/connection_delay_injector.h
   - test/cpp/end2end/counted_service.h
   - test/cpp/end2end/test_service_impl.h
   - test/cpp/end2end/xds/xds_end2end_test_lib.h
   - test/cpp/end2end/xds/xds_server.h
   - test/cpp/util/tls_test_utils.h
   src:
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/ads_for_test.proto
   - src/proto/grpc/testing/xds/eds_for_test.proto
   - src/proto/grpc/testing/xds/lrs_for_test.proto
   - src/proto/grpc/testing/xds/v3/address.proto
   - src/proto/grpc/testing/xds/v3/ads.proto
   - src/proto/grpc/testing/xds/v3/aggregate_cluster.proto
   - src/proto/grpc/testing/xds/v3/base.proto
   - src/proto/grpc/testing/xds/v3/cluster.proto
   - src/proto/grpc/testing/xds/v3/config_source.proto
   - src/proto/grpc/testing/xds/v3/discovery.proto
   - src/proto/grpc/testing/xds/v3/endpoint.proto
   - src/proto/grpc/testing/xds/v3/expr.proto
   - src/proto/grpc/testing/xds/v3/extension.proto
   - src/proto/grpc/testing/xds/v3/http_connection_manager.proto
   - src/proto/grpc/testing/xds/v3/http_filter_rbac.proto
   - src/proto/grpc/testing/xds/v3/listener.proto
   - src/proto/grpc/testing/xds/v3/load_report.proto
   - src/proto/grpc/testing/xds/v3/lrs.proto
   - src/proto/grpc/testing/xds/v3/metadata.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - src/proto/grpc/testing/xds/v3/outlier_detection.proto
   - src/proto/grpc/testing/xds/v3/path.proto
   - src/proto/grpc/testing/xds/v3/percent.proto
   - src/proto/grpc/testing/xds/v3/protocol.proto
   - src/proto/grpc/testing/xds/v3/range.proto
   - src/proto/grpc/testing/xds/v3/rbac.proto
   - src/proto/grpc/testing/xds/v3/regex.proto
   - src/proto/grpc/testing/xds/v3/route.proto
   - src/proto/grpc/testing/xds/v3/router.proto
   - src/proto/grpc/testing/xds/v3/string.proto
   - test/cpp/end2end/connection_delay_injector.cc
   - test/cpp/end2end/test_service_impl.cc
   - test/cpp/end2end/xds/xds_cluster_type_end2end_test.cc
   - test/cpp/end2end/xds/xds_end2end_test_lib.cc
   - test/cpp/end2end/xds/xds_server.cc
   - test/cpp/util/tls_test_utils.cc
   deps:
   - grpc++_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: xds_core_end2end_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/end2end/counted_service.h
   - test/cpp/end2end/test_service_impl.h
   - test/cpp/end2end/xds/xds_end2end_test_lib.h
   - test/cpp/end2end/xds/xds_server.h
   - test/cpp/util/tls_test_utils.h
   src:
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/ads_for_test.proto
   - src/proto/grpc/testing/xds/eds_for_test.proto
   - src/proto/grpc/testing/xds/lrs_for_test.proto
   - src/proto/grpc/testing/xds/v3/address.proto
   - src/proto/grpc/testing/xds/v3/ads.proto
   - src/proto/grpc/testing/xds/v3/base.proto
   - src/proto/grpc/testing/xds/v3/cluster.proto
   - src/proto/grpc/testing/xds/v3/config_source.proto
   - src/proto/grpc/testing/xds/v3/discovery.proto
   - src/proto/grpc/testing/xds/v3/endpoint.proto
   - src/proto/grpc/testing/xds/v3/expr.proto
   - src/proto/grpc/testing/xds/v3/extension.proto
   - src/proto/grpc/testing/xds/v3/http_connection_manager.proto
   - src/proto/grpc/testing/xds/v3/http_filter_rbac.proto
   - src/proto/grpc/testing/xds/v3/listener.proto
   - src/proto/grpc/testing/xds/v3/load_report.proto
   - src/proto/grpc/testing/xds/v3/lrs.proto
   - src/proto/grpc/testing/xds/v3/metadata.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - src/proto/grpc/testing/xds/v3/outlier_detection.proto
   - src/proto/grpc/testing/xds/v3/path.proto
   - src/proto/grpc/testing/xds/v3/percent.proto
   - src/proto/grpc/testing/xds/v3/protocol.proto
   - src/proto/grpc/testing/xds/v3/range.proto
   - src/proto/grpc/testing/xds/v3/rbac.proto
   - src/proto/grpc/testing/xds/v3/regex.proto
   - src/proto/grpc/testing/xds/v3/route.proto
   - src/proto/grpc/testing/xds/v3/router.proto
   - src/proto/grpc/testing/xds/v3/string.proto
   - test/cpp/end2end/test_service_impl.cc
   - test/cpp/end2end/xds/xds_core_end2end_test.cc
   - test/cpp/end2end/xds/xds_end2end_test_lib.cc
   - test/cpp/end2end/xds/xds_server.cc
   - test/cpp/util/tls_test_utils.cc
   deps:
   - grpc++_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: xds_credentials_end2end_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/end2end/test_service_impl.h
   src:
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - test/cpp/end2end/test_service_impl.cc
   - test/cpp/end2end/xds/xds_credentials_end2end_test.cc
   deps:
   - grpc++_test_util
 - name: xds_credentials_test
   gtest: true
   build: test
   language: c++
   headers: []
   src:
   - test/core/security/xds_credentials_test.cc
   deps:
   - grpc_test_util
 - name: xds_csds_end2end_test
   gtest: true
   build: test
   language: c++
   headers:
   - src/cpp/server/csds/csds.h
   - test/cpp/end2end/counted_service.h
   - test/cpp/end2end/test_service_impl.h
   - test/cpp/end2end/xds/xds_end2end_test_lib.h
   - test/cpp/end2end/xds/xds_server.h
   - test/cpp/util/tls_test_utils.h
   src:
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/ads_for_test.proto
   - src/proto/grpc/testing/xds/eds_for_test.proto
   - src/proto/grpc/testing/xds/lrs_for_test.proto
   - src/proto/grpc/testing/xds/v3/address.proto
   - src/proto/grpc/testing/xds/v3/ads.proto
   - src/proto/grpc/testing/xds/v3/base.proto
   - src/proto/grpc/testing/xds/v3/cluster.proto
   - src/proto/grpc/testing/xds/v3/config_dump.proto
   - src/proto/grpc/testing/xds/v3/config_source.proto
   - src/proto/grpc/testing/xds/v3/csds.proto
   - src/proto/grpc/testing/xds/v3/discovery.proto
   - src/proto/grpc/testing/xds/v3/endpoint.proto
   - src/proto/grpc/testing/xds/v3/expr.proto
   - src/proto/grpc/testing/xds/v3/extension.proto
   - src/proto/grpc/testing/xds/v3/http_connection_manager.proto
   - src/proto/grpc/testing/xds/v3/http_filter_rbac.proto
   - src/proto/grpc/testing/xds/v3/listener.proto
   - src/proto/grpc/testing/xds/v3/load_report.proto
   - src/proto/grpc/testing/xds/v3/lrs.proto
   - src/proto/grpc/testing/xds/v3/metadata.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - src/proto/grpc/testing/xds/v3/outlier_detection.proto
   - src/proto/grpc/testing/xds/v3/path.proto
   - src/proto/grpc/testing/xds/v3/percent.proto
   - src/proto/grpc/testing/xds/v3/protocol.proto
   - src/proto/grpc/testing/xds/v3/range.proto
   - src/proto/grpc/testing/xds/v3/rbac.proto
   - src/proto/grpc/testing/xds/v3/regex.proto
   - src/proto/grpc/testing/xds/v3/route.proto
   - src/proto/grpc/testing/xds/v3/router.proto
   - src/proto/grpc/testing/xds/v3/string.proto
   - src/cpp/server/csds/csds.cc
   - test/cpp/end2end/test_service_impl.cc
   - test/cpp/end2end/xds/xds_csds_end2end_test.cc
   - test/cpp/end2end/xds/xds_end2end_test_lib.cc
   - test/cpp/end2end/xds/xds_server.cc
   - test/cpp/util/tls_test_utils.cc
   deps:
   - grpc++_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: xds_end2end_test
   gtest: true
   build: test
   run: false
   language: c++
   headers:
   - test/cpp/end2end/counted_service.h
   - test/cpp/end2end/test_service_impl.h
   - test/cpp/end2end/xds/no_op_http_filter.h
   - test/cpp/end2end/xds/xds_end2end_test_lib.h
   - test/cpp/end2end/xds/xds_server.h
   - test/cpp/util/tls_test_utils.h
   src:
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/ads_for_test.proto
   - src/proto/grpc/testing/xds/cds_for_test.proto
   - src/proto/grpc/testing/xds/eds_for_test.proto
   - src/proto/grpc/testing/xds/lds_rds_for_test.proto
   - src/proto/grpc/testing/xds/lrs_for_test.proto
   - src/proto/grpc/testing/xds/v3/address.proto
   - src/proto/grpc/testing/xds/v3/ads.proto
   - src/proto/grpc/testing/xds/v3/aggregate_cluster.proto
   - src/proto/grpc/testing/xds/v3/base.proto
   - src/proto/grpc/testing/xds/v3/cluster.proto
   - src/proto/grpc/testing/xds/v3/config_source.proto
   - src/proto/grpc/testing/xds/v3/discovery.proto
   - src/proto/grpc/testing/xds/v3/endpoint.proto
   - src/proto/grpc/testing/xds/v3/expr.proto
   - src/proto/grpc/testing/xds/v3/extension.proto
   - src/proto/grpc/testing/xds/v3/fault.proto
   - src/proto/grpc/testing/xds/v3/fault_common.proto
   - src/proto/grpc/testing/xds/v3/http_connection_manager.proto
   - src/proto/grpc/testing/xds/v3/http_filter_rbac.proto
   - src/proto/grpc/testing/xds/v3/listener.proto
   - src/proto/grpc/testing/xds/v3/load_report.proto
   - src/proto/grpc/testing/xds/v3/lrs.proto
   - src/proto/grpc/testing/xds/v3/metadata.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - src/proto/grpc/testing/xds/v3/outlier_detection.proto
   - src/proto/grpc/testing/xds/v3/path.proto
   - src/proto/grpc/testing/xds/v3/percent.proto
   - src/proto/grpc/testing/xds/v3/protocol.proto
   - src/proto/grpc/testing/xds/v3/range.proto
   - src/proto/grpc/testing/xds/v3/rbac.proto
   - src/proto/grpc/testing/xds/v3/regex.proto
   - src/proto/grpc/testing/xds/v3/route.proto
   - src/proto/grpc/testing/xds/v3/router.proto
   - src/proto/grpc/testing/xds/v3/string.proto
   - src/proto/grpc/testing/xds/v3/tls.proto
   - test/cpp/end2end/test_service_impl.cc
   - test/cpp/end2end/xds/xds_end2end_test.cc
   - test/cpp/end2end/xds/xds_end2end_test_lib.cc
   - test/cpp/end2end/xds/xds_server.cc
   - test/cpp/util/tls_test_utils.cc
   deps:
   - grpc++_test_config
   - grpc++_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: xds_fault_injection_end2end_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/end2end/counted_service.h
   - test/cpp/end2end/test_service_impl.h
   - test/cpp/end2end/xds/xds_end2end_test_lib.h
   - test/cpp/end2end/xds/xds_server.h
   - test/cpp/util/tls_test_utils.h
   src:
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/ads_for_test.proto
   - src/proto/grpc/testing/xds/eds_for_test.proto
   - src/proto/grpc/testing/xds/lrs_for_test.proto
   - src/proto/grpc/testing/xds/v3/address.proto
   - src/proto/grpc/testing/xds/v3/ads.proto
   - src/proto/grpc/testing/xds/v3/base.proto
   - src/proto/grpc/testing/xds/v3/cluster.proto
   - src/proto/grpc/testing/xds/v3/config_source.proto
   - src/proto/grpc/testing/xds/v3/discovery.proto
   - src/proto/grpc/testing/xds/v3/endpoint.proto
   - src/proto/grpc/testing/xds/v3/expr.proto
   - src/proto/grpc/testing/xds/v3/extension.proto
   - src/proto/grpc/testing/xds/v3/fault.proto
   - src/proto/grpc/testing/xds/v3/fault_common.proto
   - src/proto/grpc/testing/xds/v3/http_connection_manager.proto
   - src/proto/grpc/testing/xds/v3/http_filter_rbac.proto
   - src/proto/grpc/testing/xds/v3/listener.proto
   - src/proto/grpc/testing/xds/v3/load_report.proto
   - src/proto/grpc/testing/xds/v3/lrs.proto
   - src/proto/grpc/testing/xds/v3/metadata.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - src/proto/grpc/testing/xds/v3/outlier_detection.proto
   - src/proto/grpc/testing/xds/v3/path.proto
   - src/proto/grpc/testing/xds/v3/percent.proto
   - src/proto/grpc/testing/xds/v3/protocol.proto
   - src/proto/grpc/testing/xds/v3/range.proto
   - src/proto/grpc/testing/xds/v3/rbac.proto
   - src/proto/grpc/testing/xds/v3/regex.proto
   - src/proto/grpc/testing/xds/v3/route.proto
   - src/proto/grpc/testing/xds/v3/router.proto
   - src/proto/grpc/testing/xds/v3/string.proto
   - test/cpp/end2end/test_service_impl.cc
   - test/cpp/end2end/xds/xds_end2end_test_lib.cc
   - test/cpp/end2end/xds/xds_fault_injection_end2end_test.cc
   - test/cpp/end2end/xds/xds_server.cc
   - test/cpp/util/tls_test_utils.cc
   deps:
   - grpc++_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: xds_interop_client
   build: test
   run: false
   language: c++
   headers:
   - src/cpp/server/csds/csds.h
   src:
   - src/proto/grpc/testing/empty.proto
   - src/proto/grpc/testing/messages.proto
   - src/proto/grpc/testing/test.proto
   - src/proto/grpc/testing/xds/v3/base.proto
   - src/proto/grpc/testing/xds/v3/config_dump.proto
   - src/proto/grpc/testing/xds/v3/csds.proto
   - src/proto/grpc/testing/xds/v3/percent.proto
   - src/cpp/server/admin/admin_services.cc
   - src/cpp/server/csds/csds.cc
   - test/cpp/interop/xds_interop_client.cc
   deps:
   - absl/flags:flag
   - grpc++_reflection
   - grpcpp_channelz
   - grpc_test_util
   - grpc++_test_config
 - name: xds_interop_server
   build: test
   run: false
   language: c++
   headers:
   - src/cpp/server/csds/csds.h
   - test/cpp/end2end/test_health_check_service_impl.h
   src:
   - src/proto/grpc/health/v1/health.proto
   - src/proto/grpc/testing/empty.proto
   - src/proto/grpc/testing/messages.proto
   - src/proto/grpc/testing/test.proto
   - src/proto/grpc/testing/xds/v3/base.proto
   - src/proto/grpc/testing/xds/v3/config_dump.proto
   - src/proto/grpc/testing/xds/v3/csds.proto
   - src/proto/grpc/testing/xds/v3/percent.proto
   - src/cpp/server/admin/admin_services.cc
   - src/cpp/server/csds/csds.cc
   - test/cpp/end2end/test_health_check_service_impl.cc
   - test/cpp/interop/xds_interop_server.cc
   deps:
   - absl/flags:flag
   - grpc++_reflection
   - grpcpp_channelz
   - grpc_test_util
   - grpc++_test_config
 - name: xds_lb_policy_registry_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/util/cli_call.h
   - test/cpp/util/cli_credentials.h
   - test/cpp/util/config_grpc_cli.h
   - test/cpp/util/proto_file_parser.h
   - test/cpp/util/proto_reflection_descriptor_database.h
   - test/cpp/util/service_describer.h
   src:
   - src/proto/grpc/reflection/v1alpha/reflection.proto
   - src/proto/grpc/testing/xds/v3/address.proto
   - src/proto/grpc/testing/xds/v3/base.proto
   - src/proto/grpc/testing/xds/v3/cluster.proto
   - src/proto/grpc/testing/xds/v3/config_source.proto
   - src/proto/grpc/testing/xds/v3/endpoint.proto
   - src/proto/grpc/testing/xds/v3/extension.proto
   - src/proto/grpc/testing/xds/v3/outlier_detection.proto
   - src/proto/grpc/testing/xds/v3/percent.proto
   - src/proto/grpc/testing/xds/v3/ring_hash.proto
   - src/proto/grpc/testing/xds/v3/round_robin.proto
   - src/proto/grpc/testing/xds/v3/typed_struct.proto
   - src/proto/grpc/testing/xds/v3/udpa_typed_struct.proto
   - src/proto/grpc/testing/xds/v3/wrr_locality.proto
   - test/core/xds/xds_lb_policy_registry_test.cc
   - test/cpp/util/cli_call.cc
   - test/cpp/util/cli_credentials.cc
   - test/cpp/util/proto_file_parser.cc
   - test/cpp/util/proto_reflection_descriptor_database.cc
   - test/cpp/util/service_describer.cc
   deps:
   - absl/flags:flag
   - grpc++
   - grpc_test_util
   uses_polling: false
 - name: xds_outlier_detection_end2end_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/end2end/counted_service.h
   - test/cpp/end2end/test_service_impl.h
   - test/cpp/end2end/xds/no_op_http_filter.h
   - test/cpp/end2end/xds/xds_end2end_test_lib.h
   - test/cpp/end2end/xds/xds_server.h
   - test/cpp/util/tls_test_utils.h
   src:
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/ads_for_test.proto
   - src/proto/grpc/testing/xds/eds_for_test.proto
   - src/proto/grpc/testing/xds/lrs_for_test.proto
   - src/proto/grpc/testing/xds/v3/address.proto
   - src/proto/grpc/testing/xds/v3/ads.proto
   - src/proto/grpc/testing/xds/v3/base.proto
   - src/proto/grpc/testing/xds/v3/cluster.proto
   - src/proto/grpc/testing/xds/v3/config_source.proto
   - src/proto/grpc/testing/xds/v3/discovery.proto
   - src/proto/grpc/testing/xds/v3/endpoint.proto
   - src/proto/grpc/testing/xds/v3/expr.proto
   - src/proto/grpc/testing/xds/v3/extension.proto
   - src/proto/grpc/testing/xds/v3/fault.proto
   - src/proto/grpc/testing/xds/v3/fault_common.proto
   - src/proto/grpc/testing/xds/v3/http_connection_manager.proto
   - src/proto/grpc/testing/xds/v3/http_filter_rbac.proto
   - src/proto/grpc/testing/xds/v3/listener.proto
   - src/proto/grpc/testing/xds/v3/load_report.proto
   - src/proto/grpc/testing/xds/v3/lrs.proto
   - src/proto/grpc/testing/xds/v3/metadata.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - src/proto/grpc/testing/xds/v3/outlier_detection.proto
   - src/proto/grpc/testing/xds/v3/path.proto
   - src/proto/grpc/testing/xds/v3/percent.proto
   - src/proto/grpc/testing/xds/v3/protocol.proto
   - src/proto/grpc/testing/xds/v3/range.proto
   - src/proto/grpc/testing/xds/v3/rbac.proto
   - src/proto/grpc/testing/xds/v3/regex.proto
   - src/proto/grpc/testing/xds/v3/route.proto
   - src/proto/grpc/testing/xds/v3/router.proto
   - src/proto/grpc/testing/xds/v3/string.proto
   - test/cpp/end2end/test_service_impl.cc
   - test/cpp/end2end/xds/xds_end2end_test_lib.cc
   - test/cpp/end2end/xds/xds_outlier_detection_end2end_test.cc
   - test/cpp/end2end/xds/xds_server.cc
   - test/cpp/util/tls_test_utils.cc
   deps:
   - grpc++_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: xds_ring_hash_end2end_test
   gtest: true
   build: test
   run: false
   language: c++
   headers:
   - test/cpp/end2end/connection_delay_injector.h
   - test/cpp/end2end/counted_service.h
   - test/cpp/end2end/test_service_impl.h
   - test/cpp/end2end/xds/xds_end2end_test_lib.h
   - test/cpp/end2end/xds/xds_server.h
   - test/cpp/util/tls_test_utils.h
   src:
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/ads_for_test.proto
   - src/proto/grpc/testing/xds/eds_for_test.proto
   - src/proto/grpc/testing/xds/lrs_for_test.proto
   - src/proto/grpc/testing/xds/v3/address.proto
   - src/proto/grpc/testing/xds/v3/ads.proto
   - src/proto/grpc/testing/xds/v3/aggregate_cluster.proto
   - src/proto/grpc/testing/xds/v3/base.proto
   - src/proto/grpc/testing/xds/v3/cluster.proto
   - src/proto/grpc/testing/xds/v3/config_source.proto
   - src/proto/grpc/testing/xds/v3/discovery.proto
   - src/proto/grpc/testing/xds/v3/endpoint.proto
   - src/proto/grpc/testing/xds/v3/expr.proto
   - src/proto/grpc/testing/xds/v3/extension.proto
   - src/proto/grpc/testing/xds/v3/http_connection_manager.proto
   - src/proto/grpc/testing/xds/v3/http_filter_rbac.proto
   - src/proto/grpc/testing/xds/v3/listener.proto
   - src/proto/grpc/testing/xds/v3/load_report.proto
   - src/proto/grpc/testing/xds/v3/lrs.proto
   - src/proto/grpc/testing/xds/v3/metadata.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - src/proto/grpc/testing/xds/v3/outlier_detection.proto
   - src/proto/grpc/testing/xds/v3/path.proto
   - src/proto/grpc/testing/xds/v3/percent.proto
   - src/proto/grpc/testing/xds/v3/protocol.proto
   - src/proto/grpc/testing/xds/v3/range.proto
   - src/proto/grpc/testing/xds/v3/rbac.proto
   - src/proto/grpc/testing/xds/v3/regex.proto
   - src/proto/grpc/testing/xds/v3/route.proto
   - src/proto/grpc/testing/xds/v3/router.proto
   - src/proto/grpc/testing/xds/v3/string.proto
   - test/cpp/end2end/connection_delay_injector.cc
   - test/cpp/end2end/test_service_impl.cc
   - test/cpp/end2end/xds/xds_end2end_test_lib.cc
   - test/cpp/end2end/xds/xds_ring_hash_end2end_test.cc
   - test/cpp/end2end/xds/xds_server.cc
   - test/cpp/util/tls_test_utils.cc
   deps:
   - grpc++_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: xds_rls_end2end_test
   gtest: true
   build: test
   language: c++
   headers:
   - test/cpp/end2end/counted_service.h
   - test/cpp/end2end/rls_server.h
   - test/cpp/end2end/test_service_impl.h
   - test/cpp/end2end/xds/xds_end2end_test_lib.h
   - test/cpp/end2end/xds/xds_server.h
   - test/cpp/util/tls_test_utils.h
   src:
   - src/proto/grpc/lookup/v1/rls.proto
   - src/proto/grpc/lookup/v1/rls_config.proto
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/ads_for_test.proto
   - src/proto/grpc/testing/xds/eds_for_test.proto
   - src/proto/grpc/testing/xds/lrs_for_test.proto
   - src/proto/grpc/testing/xds/v3/address.proto
   - src/proto/grpc/testing/xds/v3/ads.proto
   - src/proto/grpc/testing/xds/v3/base.proto
   - src/proto/grpc/testing/xds/v3/cluster.proto
   - src/proto/grpc/testing/xds/v3/config_source.proto
   - src/proto/grpc/testing/xds/v3/discovery.proto
   - src/proto/grpc/testing/xds/v3/endpoint.proto
   - src/proto/grpc/testing/xds/v3/expr.proto
   - src/proto/grpc/testing/xds/v3/extension.proto
   - src/proto/grpc/testing/xds/v3/http_connection_manager.proto
   - src/proto/grpc/testing/xds/v3/http_filter_rbac.proto
   - src/proto/grpc/testing/xds/v3/listener.proto
   - src/proto/grpc/testing/xds/v3/load_report.proto
   - src/proto/grpc/testing/xds/v3/lrs.proto
   - src/proto/grpc/testing/xds/v3/metadata.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - src/proto/grpc/testing/xds/v3/outlier_detection.proto
   - src/proto/grpc/testing/xds/v3/path.proto
   - src/proto/grpc/testing/xds/v3/percent.proto
   - src/proto/grpc/testing/xds/v3/protocol.proto
   - src/proto/grpc/testing/xds/v3/range.proto
   - src/proto/grpc/testing/xds/v3/rbac.proto
   - src/proto/grpc/testing/xds/v3/regex.proto
   - src/proto/grpc/testing/xds/v3/route.proto
   - src/proto/grpc/testing/xds/v3/router.proto
   - src/proto/grpc/testing/xds/v3/string.proto
   - test/cpp/end2end/rls_server.cc
   - test/cpp/end2end/test_service_impl.cc
   - test/cpp/end2end/xds/xds_end2end_test_lib.cc
   - test/cpp/end2end/xds/xds_rls_end2end_test.cc
   - test/cpp/end2end/xds/xds_server.cc
   - test/cpp/util/tls_test_utils.cc
   deps:
   - grpc++_test_util
   platforms:
   - linux
   - posix
   - mac
 - name: xds_routing_end2end_test
   gtest: true
   build: test
   run: false
   language: c++
   headers:
   - test/cpp/end2end/counted_service.h
   - test/cpp/end2end/test_service_impl.h
   - test/cpp/end2end/xds/no_op_http_filter.h
   - test/cpp/end2end/xds/xds_end2end_test_lib.h
   - test/cpp/end2end/xds/xds_server.h
   - test/cpp/util/tls_test_utils.h
   src:
   - src/proto/grpc/testing/duplicate/echo_duplicate.proto
   - src/proto/grpc/testing/echo.proto
   - src/proto/grpc/testing/echo_messages.proto
   - src/proto/grpc/testing/simple_messages.proto
   - src/proto/grpc/testing/xds/ads_for_test.proto
   - src/proto/grpc/testing/xds/eds_for_test.proto
   - src/proto/grpc/testing/xds/lrs_for_test.proto
   - src/proto/grpc/testing/xds/v3/address.proto
   - src/proto/grpc/testing/xds/v3/ads.proto
   - src/proto/grpc/testing/xds/v3/base.proto
   - src/proto/grpc/testing/xds/v3/cluster.proto
   - src/proto/grpc/testing/xds/v3/config_source.proto
   - src/proto/grpc/testing/xds/v3/discovery.proto
   - src/proto/grpc/testing/xds/v3/endpoint.proto
   - src/proto/grpc/testing/xds/v3/expr.proto
   - src/proto/grpc/testing/xds/v3/extension.proto
   - src/proto/grpc/testing/xds/v3/fault.proto
   - src/proto/grpc/testing/xds/v3/fault_common.proto
   - src/proto/grpc/testing/xds/v3/http_connection_manager.proto
   - src/proto/grpc/testing/xds/v3/http_filter_rbac.proto
   - src/proto/grpc/testing/xds/v3/listener.proto
   - src/proto/grpc/testing/xds/v3/load_report.proto
   - src/proto/grpc/testing/xds/v3/lrs.proto
   - src/proto/grpc/testing/xds/v3/metadata.proto
   - src/proto/grpc/testing/xds/v3/orca_load_report.proto
   - src/proto/grpc/testing/xds/v3/outlier_detection.proto
   - src/proto/grpc/testing/xds/v3/path.proto
   - src/proto/grpc/testing/xds/v3/percent.proto
   - src/proto/grpc/testing/xds/v3/protocol.proto
   - src/proto/grpc/testing/xds/v3/range.proto
   - src/proto/grpc/testing/xds/v3/rbac.proto
   - src/proto/grpc/testing/xds/v3/regex.proto
   - src/proto/grpc/testing/xds/v3/route.proto
   - src/proto/grpc/testing/xds/v3/router.proto
   - src/proto/grpc/testing/xds/v3/string.proto
   - test/cpp/end2end/test_service_impl.cc
   - test/cpp/end2end/xds/xds_end2end_test_lib.cc
   - test/cpp/end2end/xds/xds_routing_end2end_test.cc
   - test/cpp/end2end/xds/xds_server.cc
   - test/cpp/util/tls_test_utils.cc
   deps:
   - grpc++_test_util
   platforms:
   - linux
   - posix
   - mac
diff --git a/config.m4 b/config.m4
index e669c0ae2b..5d3ecbc0bd 100644
--- a/config.m4
+++ b/config.m4
@@ -4,1418 +4,1419 @@ PHP_ARG_ENABLE(grpc, whether to enable grpc support,
 if test "$PHP_GRPC" != "no"; then
   dnl Write more examples of tests here...
 
   dnl # --with-grpc -> add include path
   PHP_ADD_INCLUDE(PHP_EXT_SRCDIR()/include)
   PHP_ADD_INCLUDE(PHP_EXT_SRCDIR()/src/core/ext/upb-generated)
   PHP_ADD_INCLUDE(PHP_EXT_SRCDIR()/src/core/ext/upbdefs-generated)
   PHP_ADD_INCLUDE(PHP_EXT_SRCDIR()/src/php/ext/grpc)
   PHP_ADD_INCLUDE(PHP_EXT_SRCDIR()/third_party/abseil-cpp)
   PHP_ADD_INCLUDE(PHP_EXT_SRCDIR()/third_party/address_sorting/include)
   PHP_ADD_INCLUDE(PHP_EXT_SRCDIR()/third_party/boringssl-with-bazel/src/include)
   PHP_ADD_INCLUDE(PHP_EXT_SRCDIR()/third_party/re2)
   PHP_ADD_INCLUDE(PHP_EXT_SRCDIR()/third_party/upb)
   PHP_ADD_INCLUDE(PHP_EXT_SRCDIR()/third_party/xxhash)
 
   LIBS="-lpthread $LIBS"
 
   CFLAGS="-std=c11 -g -O2"
   CXXFLAGS="-std=c++14 -fno-exceptions -fno-rtti -g -O2"
   GRPC_SHARED_LIBADD="-lpthread $GRPC_SHARED_LIBADD"
   PHP_REQUIRE_CXX()
   PHP_ADD_LIBRARY(pthread)
   PHP_ADD_LIBRARY(dl,,GRPC_SHARED_LIBADD)
   PHP_ADD_LIBRARY(dl)
 
   case $host in
     *darwin*)
       PHP_ADD_LIBRARY(c++,1,GRPC_SHARED_LIBADD)
       ;;
     *)
       PHP_ADD_LIBRARY(stdc++,1,GRPC_SHARED_LIBADD)
       PHP_ADD_LIBRARY(rt,,GRPC_SHARED_LIBADD)
       PHP_ADD_LIBRARY(rt)
       ;;
   esac
 
   PHP_SUBST(GRPC_SHARED_LIBADD)
 
   PHP_NEW_EXTENSION(grpc,
     src/core/ext/filters/census/grpc_context.cc \
     src/core/ext/filters/channel_idle/channel_idle_filter.cc \
     src/core/ext/filters/channel_idle/idle_filter_state.cc \
     src/core/ext/filters/client_channel/backend_metric.cc \
     src/core/ext/filters/client_channel/backup_poller.cc \
     src/core/ext/filters/client_channel/channel_connectivity.cc \
     src/core/ext/filters/client_channel/client_channel.cc \
     src/core/ext/filters/client_channel/client_channel_channelz.cc \
     src/core/ext/filters/client_channel/client_channel_factory.cc \
     src/core/ext/filters/client_channel/client_channel_plugin.cc \
     src/core/ext/filters/client_channel/config_selector.cc \
     src/core/ext/filters/client_channel/dynamic_filters.cc \
     src/core/ext/filters/client_channel/global_subchannel_pool.cc \
     src/core/ext/filters/client_channel/health/health_check_client.cc \
     src/core/ext/filters/client_channel/http_proxy.cc \
     src/core/ext/filters/client_channel/lb_policy.cc \
     src/core/ext/filters/client_channel/lb_policy/address_filtering.cc \
     src/core/ext/filters/client_channel/lb_policy/child_policy_handler.cc \
     src/core/ext/filters/client_channel/lb_policy/grpclb/client_load_reporting_filter.cc \
     src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc \
     src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_balancer_addresses.cc \
     src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_client_stats.cc \
     src/core/ext/filters/client_channel/lb_policy/grpclb/load_balancer_api.cc \
     src/core/ext/filters/client_channel/lb_policy/oob_backend_metric.cc \
     src/core/ext/filters/client_channel/lb_policy/outlier_detection/outlier_detection.cc \
     src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc \
     src/core/ext/filters/client_channel/lb_policy/priority/priority.cc \
     src/core/ext/filters/client_channel/lb_policy/ring_hash/ring_hash.cc \
     src/core/ext/filters/client_channel/lb_policy/rls/rls.cc \
     src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc \
     src/core/ext/filters/client_channel/lb_policy/weighted_target/weighted_target.cc \
     src/core/ext/filters/client_channel/lb_policy/xds/cds.cc \
     src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_impl.cc \
     src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_manager.cc \
     src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_resolver.cc \
     src/core/ext/filters/client_channel/lb_policy_registry.cc \
     src/core/ext/filters/client_channel/local_subchannel_pool.cc \
     src/core/ext/filters/client_channel/proxy_mapper_registry.cc \
     src/core/ext/filters/client_channel/resolver/binder/binder_resolver.cc \
     src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc \
     src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_posix.cc \
     src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_windows.cc \
     src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.cc \
     src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_posix.cc \
     src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_windows.cc \
     src/core/ext/filters/client_channel/resolver/dns/dns_resolver_selection.cc \
     src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc \
     src/core/ext/filters/client_channel/resolver/fake/fake_resolver.cc \
     src/core/ext/filters/client_channel/resolver/google_c2p/google_c2p_resolver.cc \
     src/core/ext/filters/client_channel/resolver/polling_resolver.cc \
     src/core/ext/filters/client_channel/resolver/sockaddr/sockaddr_resolver.cc \
     src/core/ext/filters/client_channel/resolver/xds/xds_resolver.cc \
     src/core/ext/filters/client_channel/resolver_result_parsing.cc \
     src/core/ext/filters/client_channel/retry_filter.cc \
     src/core/ext/filters/client_channel/retry_service_config.cc \
     src/core/ext/filters/client_channel/retry_throttle.cc \
     src/core/ext/filters/client_channel/service_config_channel_arg_filter.cc \
     src/core/ext/filters/client_channel/subchannel.cc \
     src/core/ext/filters/client_channel/subchannel_pool_interface.cc \
     src/core/ext/filters/client_channel/subchannel_stream_client.cc \
     src/core/ext/filters/deadline/deadline_filter.cc \
     src/core/ext/filters/fault_injection/fault_injection_filter.cc \
     src/core/ext/filters/fault_injection/service_config_parser.cc \
     src/core/ext/filters/http/client/http_client_filter.cc \
     src/core/ext/filters/http/client_authority_filter.cc \
     src/core/ext/filters/http/http_filters_plugin.cc \
     src/core/ext/filters/http/message_compress/message_compress_filter.cc \
     src/core/ext/filters/http/message_compress/message_decompress_filter.cc \
     src/core/ext/filters/http/server/http_server_filter.cc \
     src/core/ext/filters/message_size/message_size_filter.cc \
     src/core/ext/filters/rbac/rbac_filter.cc \
     src/core/ext/filters/rbac/rbac_service_config_parser.cc \
     src/core/ext/filters/server_config_selector/server_config_selector.cc \
     src/core/ext/filters/server_config_selector/server_config_selector_filter.cc \
     src/core/ext/transport/chttp2/alpn/alpn.cc \
     src/core/ext/transport/chttp2/client/chttp2_connector.cc \
     src/core/ext/transport/chttp2/server/chttp2_server.cc \
     src/core/ext/transport/chttp2/transport/bin_decoder.cc \
     src/core/ext/transport/chttp2/transport/bin_encoder.cc \
     src/core/ext/transport/chttp2/transport/chttp2_transport.cc \
     src/core/ext/transport/chttp2/transport/context_list.cc \
     src/core/ext/transport/chttp2/transport/flow_control.cc \
     src/core/ext/transport/chttp2/transport/frame_data.cc \
     src/core/ext/transport/chttp2/transport/frame_goaway.cc \
     src/core/ext/transport/chttp2/transport/frame_ping.cc \
     src/core/ext/transport/chttp2/transport/frame_rst_stream.cc \
     src/core/ext/transport/chttp2/transport/frame_settings.cc \
     src/core/ext/transport/chttp2/transport/frame_window_update.cc \
     src/core/ext/transport/chttp2/transport/hpack_encoder.cc \
     src/core/ext/transport/chttp2/transport/hpack_encoder_table.cc \
     src/core/ext/transport/chttp2/transport/hpack_parser.cc \
     src/core/ext/transport/chttp2/transport/hpack_parser_table.cc \
     src/core/ext/transport/chttp2/transport/http2_settings.cc \
     src/core/ext/transport/chttp2/transport/huffsyms.cc \
     src/core/ext/transport/chttp2/transport/parsing.cc \
     src/core/ext/transport/chttp2/transport/stream_lists.cc \
     src/core/ext/transport/chttp2/transport/stream_map.cc \
     src/core/ext/transport/chttp2/transport/varint.cc \
     src/core/ext/transport/chttp2/transport/writing.cc \
     src/core/ext/transport/inproc/inproc_plugin.cc \
     src/core/ext/transport/inproc/inproc_transport.cc \
     src/core/ext/upb-generated/envoy/admin/v3/certs.upb.c \
     src/core/ext/upb-generated/envoy/admin/v3/clusters.upb.c \
     src/core/ext/upb-generated/envoy/admin/v3/config_dump.upb.c \
     src/core/ext/upb-generated/envoy/admin/v3/init_dump.upb.c \
     src/core/ext/upb-generated/envoy/admin/v3/listeners.upb.c \
     src/core/ext/upb-generated/envoy/admin/v3/memory.upb.c \
     src/core/ext/upb-generated/envoy/admin/v3/metrics.upb.c \
     src/core/ext/upb-generated/envoy/admin/v3/mutex_stats.upb.c \
     src/core/ext/upb-generated/envoy/admin/v3/server_info.upb.c \
     src/core/ext/upb-generated/envoy/admin/v3/tap.upb.c \
     src/core/ext/upb-generated/envoy/annotations/deprecation.upb.c \
     src/core/ext/upb-generated/envoy/annotations/resource.upb.c \
     src/core/ext/upb-generated/envoy/config/accesslog/v3/accesslog.upb.c \
     src/core/ext/upb-generated/envoy/config/bootstrap/v3/bootstrap.upb.c \
     src/core/ext/upb-generated/envoy/config/cluster/v3/circuit_breaker.upb.c \
     src/core/ext/upb-generated/envoy/config/cluster/v3/cluster.upb.c \
     src/core/ext/upb-generated/envoy/config/cluster/v3/filter.upb.c \
     src/core/ext/upb-generated/envoy/config/cluster/v3/outlier_detection.upb.c \
     src/core/ext/upb-generated/envoy/config/common/matcher/v3/matcher.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/address.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/backoff.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/base.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/config_source.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/event_service_config.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/extension.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/grpc_method_list.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/grpc_service.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/health_check.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/http_uri.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/protocol.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/proxy_protocol.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/resolver.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/socket_option.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/substitution_format_string.upb.c \
     src/core/ext/upb-generated/envoy/config/core/v3/udp_socket_config.upb.c \
     src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint.upb.c \
     src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint_components.upb.c \
     src/core/ext/upb-generated/envoy/config/endpoint/v3/load_report.upb.c \
     src/core/ext/upb-generated/envoy/config/listener/v3/api_listener.upb.c \
     src/core/ext/upb-generated/envoy/config/listener/v3/listener.upb.c \
     src/core/ext/upb-generated/envoy/config/listener/v3/listener_components.upb.c \
     src/core/ext/upb-generated/envoy/config/listener/v3/quic_config.upb.c \
     src/core/ext/upb-generated/envoy/config/listener/v3/udp_listener_config.upb.c \
     src/core/ext/upb-generated/envoy/config/metrics/v3/metrics_service.upb.c \
     src/core/ext/upb-generated/envoy/config/metrics/v3/stats.upb.c \
     src/core/ext/upb-generated/envoy/config/overload/v3/overload.upb.c \
     src/core/ext/upb-generated/envoy/config/rbac/v3/rbac.upb.c \
     src/core/ext/upb-generated/envoy/config/route/v3/route.upb.c \
     src/core/ext/upb-generated/envoy/config/route/v3/route_components.upb.c \
     src/core/ext/upb-generated/envoy/config/route/v3/scoped_route.upb.c \
     src/core/ext/upb-generated/envoy/config/tap/v3/common.upb.c \
     src/core/ext/upb-generated/envoy/config/trace/v3/datadog.upb.c \
     src/core/ext/upb-generated/envoy/config/trace/v3/dynamic_ot.upb.c \
     src/core/ext/upb-generated/envoy/config/trace/v3/http_tracer.upb.c \
     src/core/ext/upb-generated/envoy/config/trace/v3/lightstep.upb.c \
     src/core/ext/upb-generated/envoy/config/trace/v3/opencensus.upb.c \
     src/core/ext/upb-generated/envoy/config/trace/v3/service.upb.c \
     src/core/ext/upb-generated/envoy/config/trace/v3/skywalking.upb.c \
     src/core/ext/upb-generated/envoy/config/trace/v3/trace.upb.c \
     src/core/ext/upb-generated/envoy/config/trace/v3/xray.upb.c \
     src/core/ext/upb-generated/envoy/config/trace/v3/zipkin.upb.c \
     src/core/ext/upb-generated/envoy/extensions/clusters/aggregate/v3/cluster.upb.c \
     src/core/ext/upb-generated/envoy/extensions/filters/common/fault/v3/fault.upb.c \
     src/core/ext/upb-generated/envoy/extensions/filters/http/fault/v3/fault.upb.c \
     src/core/ext/upb-generated/envoy/extensions/filters/http/rbac/v3/rbac.upb.c \
     src/core/ext/upb-generated/envoy/extensions/filters/http/router/v3/router.upb.c \
     src/core/ext/upb-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upb.c \
     src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/ring_hash/v3/ring_hash.upb.c \
     src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/wrr_locality/v3/wrr_locality.upb.c \
     src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/cert.upb.c \
     src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/common.upb.c \
     src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/secret.upb.c \
     src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls.upb.c \
     src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upb.c \
     src/core/ext/upb-generated/envoy/service/discovery/v3/ads.upb.c \
     src/core/ext/upb-generated/envoy/service/discovery/v3/discovery.upb.c \
     src/core/ext/upb-generated/envoy/service/load_stats/v3/lrs.upb.c \
     src/core/ext/upb-generated/envoy/service/status/v3/csds.upb.c \
     src/core/ext/upb-generated/envoy/type/http/v3/cookie.upb.c \
     src/core/ext/upb-generated/envoy/type/http/v3/path_transformation.upb.c \
     src/core/ext/upb-generated/envoy/type/matcher/v3/http_inputs.upb.c \
     src/core/ext/upb-generated/envoy/type/matcher/v3/metadata.upb.c \
     src/core/ext/upb-generated/envoy/type/matcher/v3/node.upb.c \
     src/core/ext/upb-generated/envoy/type/matcher/v3/number.upb.c \
     src/core/ext/upb-generated/envoy/type/matcher/v3/path.upb.c \
     src/core/ext/upb-generated/envoy/type/matcher/v3/regex.upb.c \
     src/core/ext/upb-generated/envoy/type/matcher/v3/string.upb.c \
     src/core/ext/upb-generated/envoy/type/matcher/v3/struct.upb.c \
     src/core/ext/upb-generated/envoy/type/matcher/v3/value.upb.c \
     src/core/ext/upb-generated/envoy/type/metadata/v3/metadata.upb.c \
     src/core/ext/upb-generated/envoy/type/tracing/v3/custom_tag.upb.c \
     src/core/ext/upb-generated/envoy/type/v3/hash_policy.upb.c \
     src/core/ext/upb-generated/envoy/type/v3/http.upb.c \
     src/core/ext/upb-generated/envoy/type/v3/http_status.upb.c \
     src/core/ext/upb-generated/envoy/type/v3/percent.upb.c \
     src/core/ext/upb-generated/envoy/type/v3/range.upb.c \
     src/core/ext/upb-generated/envoy/type/v3/ratelimit_unit.upb.c \
     src/core/ext/upb-generated/envoy/type/v3/semantic_version.upb.c \
     src/core/ext/upb-generated/envoy/type/v3/token_bucket.upb.c \
     src/core/ext/upb-generated/google/api/annotations.upb.c \
     src/core/ext/upb-generated/google/api/expr/v1alpha1/checked.upb.c \
     src/core/ext/upb-generated/google/api/expr/v1alpha1/syntax.upb.c \
     src/core/ext/upb-generated/google/api/http.upb.c \
     src/core/ext/upb-generated/google/api/httpbody.upb.c \
     src/core/ext/upb-generated/google/protobuf/any.upb.c \
     src/core/ext/upb-generated/google/protobuf/descriptor.upb.c \
     src/core/ext/upb-generated/google/protobuf/duration.upb.c \
     src/core/ext/upb-generated/google/protobuf/empty.upb.c \
     src/core/ext/upb-generated/google/protobuf/struct.upb.c \
     src/core/ext/upb-generated/google/protobuf/timestamp.upb.c \
     src/core/ext/upb-generated/google/protobuf/wrappers.upb.c \
     src/core/ext/upb-generated/google/rpc/status.upb.c \
     src/core/ext/upb-generated/opencensus/proto/trace/v1/trace_config.upb.c \
     src/core/ext/upb-generated/src/proto/grpc/gcp/altscontext.upb.c \
     src/core/ext/upb-generated/src/proto/grpc/gcp/handshaker.upb.c \
     src/core/ext/upb-generated/src/proto/grpc/gcp/transport_security_common.upb.c \
     src/core/ext/upb-generated/src/proto/grpc/health/v1/health.upb.c \
     src/core/ext/upb-generated/src/proto/grpc/lb/v1/load_balancer.upb.c \
     src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls.upb.c \
     src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls_config.upb.c \
     src/core/ext/upb-generated/udpa/annotations/migrate.upb.c \
     src/core/ext/upb-generated/udpa/annotations/security.upb.c \
     src/core/ext/upb-generated/udpa/annotations/sensitive.upb.c \
     src/core/ext/upb-generated/udpa/annotations/status.upb.c \
     src/core/ext/upb-generated/udpa/annotations/versioning.upb.c \
     src/core/ext/upb-generated/validate/validate.upb.c \
     src/core/ext/upb-generated/xds/annotations/v3/migrate.upb.c \
     src/core/ext/upb-generated/xds/annotations/v3/security.upb.c \
     src/core/ext/upb-generated/xds/annotations/v3/sensitive.upb.c \
     src/core/ext/upb-generated/xds/annotations/v3/status.upb.c \
     src/core/ext/upb-generated/xds/annotations/v3/versioning.upb.c \
     src/core/ext/upb-generated/xds/core/v3/authority.upb.c \
     src/core/ext/upb-generated/xds/core/v3/collection_entry.upb.c \
     src/core/ext/upb-generated/xds/core/v3/context_params.upb.c \
     src/core/ext/upb-generated/xds/core/v3/extension.upb.c \
     src/core/ext/upb-generated/xds/core/v3/resource.upb.c \
     src/core/ext/upb-generated/xds/core/v3/resource_locator.upb.c \
     src/core/ext/upb-generated/xds/core/v3/resource_name.upb.c \
     src/core/ext/upb-generated/xds/data/orca/v3/orca_load_report.upb.c \
     src/core/ext/upb-generated/xds/service/orca/v3/orca.upb.c \
     src/core/ext/upb-generated/xds/type/matcher/v3/matcher.upb.c \
     src/core/ext/upb-generated/xds/type/matcher/v3/regex.upb.c \
     src/core/ext/upb-generated/xds/type/matcher/v3/string.upb.c \
     src/core/ext/upb-generated/xds/type/v3/typed_struct.upb.c \
     src/core/ext/upbdefs-generated/envoy/admin/v3/certs.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/admin/v3/clusters.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/admin/v3/config_dump.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/admin/v3/init_dump.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/admin/v3/listeners.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/admin/v3/memory.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/admin/v3/metrics.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/admin/v3/mutex_stats.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/admin/v3/server_info.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/admin/v3/tap.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/annotations/deprecation.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/annotations/resource.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/accesslog/v3/accesslog.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/bootstrap/v3/bootstrap.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/cluster/v3/circuit_breaker.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/cluster/v3/cluster.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/cluster/v3/filter.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/cluster/v3/outlier_detection.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/common/matcher/v3/matcher.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/address.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/backoff.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/base.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/config_source.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/event_service_config.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/extension.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_method_list.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_service.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/health_check.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/http_uri.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/protocol.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/proxy_protocol.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/resolver.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/socket_option.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/substitution_format_string.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/core/v3/udp_socket_config.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint_components.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/load_report.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/listener/v3/api_listener.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener_components.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/listener/v3/quic_config.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/listener/v3/udp_listener_config.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/metrics/v3/metrics_service.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/metrics/v3/stats.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/overload/v3/overload.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/rbac/v3/rbac.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/route/v3/route.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/route/v3/route_components.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/route/v3/scoped_route.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/tap/v3/common.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/trace/v3/datadog.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/trace/v3/dynamic_ot.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/trace/v3/http_tracer.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/trace/v3/lightstep.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/trace/v3/opencensus.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/trace/v3/service.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/trace/v3/skywalking.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/trace/v3/trace.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/trace/v3/xray.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/config/trace/v3/zipkin.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/extensions/clusters/aggregate/v3/cluster.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/extensions/filters/common/fault/v3/fault.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/extensions/filters/http/fault/v3/fault.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/extensions/filters/http/rbac/v3/rbac.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/extensions/filters/http/router/v3/router.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/cert.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/common.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/secret.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/service/discovery/v3/ads.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/service/discovery/v3/discovery.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/service/load_stats/v3/lrs.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/service/status/v3/csds.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/http/v3/cookie.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/http/v3/path_transformation.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/matcher/v3/http_inputs.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/matcher/v3/metadata.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/matcher/v3/node.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/matcher/v3/number.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/matcher/v3/path.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/matcher/v3/regex.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/matcher/v3/string.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/matcher/v3/struct.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/matcher/v3/value.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/metadata/v3/metadata.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/tracing/v3/custom_tag.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/v3/hash_policy.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/v3/http.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/v3/http_status.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/v3/percent.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/v3/range.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/v3/ratelimit_unit.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/v3/semantic_version.upbdefs.c \
     src/core/ext/upbdefs-generated/envoy/type/v3/token_bucket.upbdefs.c \
     src/core/ext/upbdefs-generated/google/api/annotations.upbdefs.c \
     src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/checked.upbdefs.c \
     src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/syntax.upbdefs.c \
     src/core/ext/upbdefs-generated/google/api/http.upbdefs.c \
     src/core/ext/upbdefs-generated/google/api/httpbody.upbdefs.c \
     src/core/ext/upbdefs-generated/google/protobuf/any.upbdefs.c \
     src/core/ext/upbdefs-generated/google/protobuf/descriptor.upbdefs.c \
     src/core/ext/upbdefs-generated/google/protobuf/duration.upbdefs.c \
     src/core/ext/upbdefs-generated/google/protobuf/empty.upbdefs.c \
     src/core/ext/upbdefs-generated/google/protobuf/struct.upbdefs.c \
     src/core/ext/upbdefs-generated/google/protobuf/timestamp.upbdefs.c \
     src/core/ext/upbdefs-generated/google/protobuf/wrappers.upbdefs.c \
     src/core/ext/upbdefs-generated/google/rpc/status.upbdefs.c \
     src/core/ext/upbdefs-generated/opencensus/proto/trace/v1/trace_config.upbdefs.c \
     src/core/ext/upbdefs-generated/src/proto/grpc/lookup/v1/rls_config.upbdefs.c \
     src/core/ext/upbdefs-generated/udpa/annotations/migrate.upbdefs.c \
     src/core/ext/upbdefs-generated/udpa/annotations/security.upbdefs.c \
     src/core/ext/upbdefs-generated/udpa/annotations/sensitive.upbdefs.c \
     src/core/ext/upbdefs-generated/udpa/annotations/status.upbdefs.c \
     src/core/ext/upbdefs-generated/udpa/annotations/versioning.upbdefs.c \
     src/core/ext/upbdefs-generated/validate/validate.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/annotations/v3/migrate.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/annotations/v3/security.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/annotations/v3/sensitive.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/annotations/v3/status.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/annotations/v3/versioning.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/core/v3/authority.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/core/v3/collection_entry.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/core/v3/context_params.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/core/v3/extension.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/core/v3/resource.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/core/v3/resource_locator.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/core/v3/resource_name.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/type/matcher/v3/matcher.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/type/matcher/v3/regex.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/type/matcher/v3/string.upbdefs.c \
     src/core/ext/upbdefs-generated/xds/type/v3/typed_struct.upbdefs.c \
     src/core/ext/xds/certificate_provider_registry.cc \
     src/core/ext/xds/certificate_provider_store.cc \
     src/core/ext/xds/file_watcher_certificate_provider_factory.cc \
     src/core/ext/xds/xds_api.cc \
     src/core/ext/xds/xds_bootstrap.cc \
     src/core/ext/xds/xds_certificate_provider.cc \
     src/core/ext/xds/xds_channel_stack_modifier.cc \
     src/core/ext/xds/xds_client.cc \
     src/core/ext/xds/xds_client_stats.cc \
     src/core/ext/xds/xds_cluster.cc \
     src/core/ext/xds/xds_cluster_specifier_plugin.cc \
     src/core/ext/xds/xds_common_types.cc \
     src/core/ext/xds/xds_endpoint.cc \
     src/core/ext/xds/xds_http_fault_filter.cc \
     src/core/ext/xds/xds_http_filters.cc \
     src/core/ext/xds/xds_http_rbac_filter.cc \
     src/core/ext/xds/xds_lb_policy_registry.cc \
     src/core/ext/xds/xds_listener.cc \
     src/core/ext/xds/xds_resource_type.cc \
     src/core/ext/xds/xds_route_config.cc \
     src/core/ext/xds/xds_routing.cc \
     src/core/ext/xds/xds_server_config_fetcher.cc \
     src/core/lib/address_utils/parse_address.cc \
     src/core/lib/address_utils/sockaddr_utils.cc \
     src/core/lib/backoff/backoff.cc \
     src/core/lib/channel/channel_args.cc \
     src/core/lib/channel/channel_args_preconditioning.cc \
     src/core/lib/channel/channel_stack.cc \
     src/core/lib/channel/channel_stack_builder.cc \
     src/core/lib/channel/channel_stack_builder_impl.cc \
     src/core/lib/channel/channel_trace.cc \
     src/core/lib/channel/channelz.cc \
     src/core/lib/channel/channelz_registry.cc \
     src/core/lib/channel/connected_channel.cc \
     src/core/lib/channel/promise_based_filter.cc \
     src/core/lib/channel/status_util.cc \
     src/core/lib/compression/compression.cc \
     src/core/lib/compression/compression_internal.cc \
     src/core/lib/compression/message_compress.cc \
     src/core/lib/config/core_configuration.cc \
     src/core/lib/debug/stats.cc \
     src/core/lib/debug/stats_data.cc \
     src/core/lib/debug/trace.cc \
     src/core/lib/event_engine/channel_args_endpoint_config.cc \
     src/core/lib/event_engine/default_event_engine_factory.cc \
     src/core/lib/event_engine/event_engine.cc \
     src/core/lib/event_engine/iomgr_engine.cc \
     src/core/lib/event_engine/memory_allocator.cc \
     src/core/lib/event_engine/resolved_address.cc \
     src/core/lib/event_engine/slice.cc \
     src/core/lib/event_engine/slice_buffer.cc \
     src/core/lib/event_engine/trace.cc \
     src/core/lib/gpr/alloc.cc \
     src/core/lib/gpr/atm.cc \
     src/core/lib/gpr/cpu_iphone.cc \
     src/core/lib/gpr/cpu_linux.cc \
     src/core/lib/gpr/cpu_posix.cc \
     src/core/lib/gpr/cpu_windows.cc \
     src/core/lib/gpr/env_linux.cc \
     src/core/lib/gpr/env_posix.cc \
     src/core/lib/gpr/env_windows.cc \
     src/core/lib/gpr/log.cc \
     src/core/lib/gpr/log_android.cc \
     src/core/lib/gpr/log_linux.cc \
     src/core/lib/gpr/log_posix.cc \
     src/core/lib/gpr/log_windows.cc \
     src/core/lib/gpr/murmur_hash.cc \
     src/core/lib/gpr/string.cc \
     src/core/lib/gpr/string_posix.cc \
     src/core/lib/gpr/string_util_windows.cc \
     src/core/lib/gpr/string_windows.cc \
     src/core/lib/gpr/sync.cc \
     src/core/lib/gpr/sync_abseil.cc \
     src/core/lib/gpr/sync_posix.cc \
     src/core/lib/gpr/sync_windows.cc \
     src/core/lib/gpr/time.cc \
     src/core/lib/gpr/time_posix.cc \
     src/core/lib/gpr/time_precise.cc \
     src/core/lib/gpr/time_windows.cc \
     src/core/lib/gpr/tmpfile_msys.cc \
     src/core/lib/gpr/tmpfile_posix.cc \
     src/core/lib/gpr/tmpfile_windows.cc \
     src/core/lib/gpr/wrap_memcpy.cc \
     src/core/lib/gprpp/examine_stack.cc \
     src/core/lib/gprpp/fork.cc \
     src/core/lib/gprpp/global_config_env.cc \
     src/core/lib/gprpp/host_port.cc \
     src/core/lib/gprpp/mpscq.cc \
     src/core/lib/gprpp/stat_posix.cc \
     src/core/lib/gprpp/stat_windows.cc \
     src/core/lib/gprpp/status_helper.cc \
     src/core/lib/gprpp/thd_posix.cc \
     src/core/lib/gprpp/thd_windows.cc \
     src/core/lib/gprpp/time.cc \
     src/core/lib/gprpp/time_util.cc \
     src/core/lib/http/format_request.cc \
     src/core/lib/http/httpcli.cc \
     src/core/lib/http/httpcli_security_connector.cc \
     src/core/lib/http/parser.cc \
     src/core/lib/iomgr/buffer_list.cc \
     src/core/lib/iomgr/call_combiner.cc \
     src/core/lib/iomgr/cfstream_handle.cc \
     src/core/lib/iomgr/combiner.cc \
     src/core/lib/iomgr/dualstack_socket_posix.cc \
     src/core/lib/iomgr/endpoint.cc \
     src/core/lib/iomgr/endpoint_cfstream.cc \
     src/core/lib/iomgr/endpoint_pair_posix.cc \
     src/core/lib/iomgr/endpoint_pair_windows.cc \
     src/core/lib/iomgr/error.cc \
     src/core/lib/iomgr/error_cfstream.cc \
     src/core/lib/iomgr/ev_apple.cc \
     src/core/lib/iomgr/ev_epoll1_linux.cc \
     src/core/lib/iomgr/ev_poll_posix.cc \
     src/core/lib/iomgr/ev_posix.cc \
     src/core/lib/iomgr/ev_windows.cc \
     src/core/lib/iomgr/exec_ctx.cc \
     src/core/lib/iomgr/executor.cc \
     src/core/lib/iomgr/executor/mpmcqueue.cc \
     src/core/lib/iomgr/executor/threadpool.cc \
     src/core/lib/iomgr/fork_posix.cc \
     src/core/lib/iomgr/fork_windows.cc \
     src/core/lib/iomgr/gethostname_fallback.cc \
     src/core/lib/iomgr/gethostname_host_name_max.cc \
     src/core/lib/iomgr/gethostname_sysconf.cc \
     src/core/lib/iomgr/grpc_if_nametoindex_posix.cc \
     src/core/lib/iomgr/grpc_if_nametoindex_unsupported.cc \
     src/core/lib/iomgr/internal_errqueue.cc \
     src/core/lib/iomgr/iocp_windows.cc \
     src/core/lib/iomgr/iomgr.cc \
     src/core/lib/iomgr/iomgr_internal.cc \
     src/core/lib/iomgr/iomgr_posix.cc \
     src/core/lib/iomgr/iomgr_posix_cfstream.cc \
     src/core/lib/iomgr/iomgr_windows.cc \
     src/core/lib/iomgr/load_file.cc \
     src/core/lib/iomgr/lockfree_event.cc \
     src/core/lib/iomgr/polling_entity.cc \
     src/core/lib/iomgr/pollset.cc \
     src/core/lib/iomgr/pollset_set.cc \
     src/core/lib/iomgr/pollset_set_windows.cc \
     src/core/lib/iomgr/pollset_windows.cc \
     src/core/lib/iomgr/resolve_address.cc \
     src/core/lib/iomgr/resolve_address_posix.cc \
     src/core/lib/iomgr/resolve_address_windows.cc \
     src/core/lib/iomgr/sockaddr_utils_posix.cc \
     src/core/lib/iomgr/socket_factory_posix.cc \
     src/core/lib/iomgr/socket_mutator.cc \
     src/core/lib/iomgr/socket_utils_common_posix.cc \
     src/core/lib/iomgr/socket_utils_linux.cc \
     src/core/lib/iomgr/socket_utils_posix.cc \
     src/core/lib/iomgr/socket_utils_windows.cc \
     src/core/lib/iomgr/socket_windows.cc \
     src/core/lib/iomgr/tcp_client.cc \
     src/core/lib/iomgr/tcp_client_cfstream.cc \
     src/core/lib/iomgr/tcp_client_posix.cc \
     src/core/lib/iomgr/tcp_client_windows.cc \
     src/core/lib/iomgr/tcp_posix.cc \
     src/core/lib/iomgr/tcp_server.cc \
     src/core/lib/iomgr/tcp_server_posix.cc \
     src/core/lib/iomgr/tcp_server_utils_posix_common.cc \
     src/core/lib/iomgr/tcp_server_utils_posix_ifaddrs.cc \
     src/core/lib/iomgr/tcp_server_utils_posix_noifaddrs.cc \
     src/core/lib/iomgr/tcp_server_windows.cc \
     src/core/lib/iomgr/tcp_windows.cc \
     src/core/lib/iomgr/time_averaged_stats.cc \
     src/core/lib/iomgr/timer.cc \
     src/core/lib/iomgr/timer_generic.cc \
     src/core/lib/iomgr/timer_heap.cc \
     src/core/lib/iomgr/timer_manager.cc \
     src/core/lib/iomgr/unix_sockets_posix.cc \
     src/core/lib/iomgr/unix_sockets_posix_noop.cc \
     src/core/lib/iomgr/wakeup_fd_eventfd.cc \
     src/core/lib/iomgr/wakeup_fd_nospecial.cc \
     src/core/lib/iomgr/wakeup_fd_pipe.cc \
     src/core/lib/iomgr/wakeup_fd_posix.cc \
     src/core/lib/iomgr/work_serializer.cc \
     src/core/lib/json/json_reader.cc \
     src/core/lib/json/json_util.cc \
     src/core/lib/json/json_writer.cc \
     src/core/lib/matchers/matchers.cc \
     src/core/lib/profiling/basic_timers.cc \
     src/core/lib/profiling/stap_timers.cc \
     src/core/lib/promise/activity.cc \
     src/core/lib/promise/sleep.cc \
     src/core/lib/resolver/resolver.cc \
     src/core/lib/resolver/resolver_registry.cc \
     src/core/lib/resolver/server_address.cc \
     src/core/lib/resource_quota/api.cc \
     src/core/lib/resource_quota/arena.cc \
     src/core/lib/resource_quota/memory_quota.cc \
     src/core/lib/resource_quota/resource_quota.cc \
     src/core/lib/resource_quota/thread_quota.cc \
     src/core/lib/resource_quota/trace.cc \
     src/core/lib/security/authorization/authorization_policy_provider_vtable.cc \
     src/core/lib/security/authorization/evaluate_args.cc \
     src/core/lib/security/authorization/grpc_authorization_engine.cc \
     src/core/lib/security/authorization/grpc_server_authz_filter.cc \
     src/core/lib/security/authorization/matchers.cc \
     src/core/lib/security/authorization/rbac_policy.cc \
     src/core/lib/security/context/security_context.cc \
     src/core/lib/security/credentials/alts/alts_credentials.cc \
     src/core/lib/security/credentials/alts/check_gcp_environment.cc \
     src/core/lib/security/credentials/alts/check_gcp_environment_linux.cc \
     src/core/lib/security/credentials/alts/check_gcp_environment_no_op.cc \
     src/core/lib/security/credentials/alts/check_gcp_environment_windows.cc \
     src/core/lib/security/credentials/alts/grpc_alts_credentials_client_options.cc \
     src/core/lib/security/credentials/alts/grpc_alts_credentials_options.cc \
     src/core/lib/security/credentials/alts/grpc_alts_credentials_server_options.cc \
     src/core/lib/security/credentials/call_creds_util.cc \
     src/core/lib/security/credentials/channel_creds_registry_init.cc \
     src/core/lib/security/credentials/composite/composite_credentials.cc \
     src/core/lib/security/credentials/credentials.cc \
     src/core/lib/security/credentials/external/aws_external_account_credentials.cc \
     src/core/lib/security/credentials/external/aws_request_signer.cc \
     src/core/lib/security/credentials/external/external_account_credentials.cc \
     src/core/lib/security/credentials/external/file_external_account_credentials.cc \
     src/core/lib/security/credentials/external/url_external_account_credentials.cc \
     src/core/lib/security/credentials/fake/fake_credentials.cc \
     src/core/lib/security/credentials/google_default/credentials_generic.cc \
     src/core/lib/security/credentials/google_default/google_default_credentials.cc \
     src/core/lib/security/credentials/iam/iam_credentials.cc \
     src/core/lib/security/credentials/insecure/insecure_credentials.cc \
     src/core/lib/security/credentials/jwt/json_token.cc \
     src/core/lib/security/credentials/jwt/jwt_credentials.cc \
     src/core/lib/security/credentials/jwt/jwt_verifier.cc \
     src/core/lib/security/credentials/local/local_credentials.cc \
     src/core/lib/security/credentials/oauth2/oauth2_credentials.cc \
     src/core/lib/security/credentials/plugin/plugin_credentials.cc \
     src/core/lib/security/credentials/ssl/ssl_credentials.cc \
     src/core/lib/security/credentials/tls/grpc_tls_certificate_distributor.cc \
     src/core/lib/security/credentials/tls/grpc_tls_certificate_provider.cc \
     src/core/lib/security/credentials/tls/grpc_tls_certificate_verifier.cc \
     src/core/lib/security/credentials/tls/grpc_tls_credentials_options.cc \
     src/core/lib/security/credentials/tls/tls_credentials.cc \
     src/core/lib/security/credentials/tls/tls_utils.cc \
     src/core/lib/security/credentials/xds/xds_credentials.cc \
     src/core/lib/security/security_connector/alts/alts_security_connector.cc \
     src/core/lib/security/security_connector/fake/fake_security_connector.cc \
     src/core/lib/security/security_connector/insecure/insecure_security_connector.cc \
     src/core/lib/security/security_connector/load_system_roots_fallback.cc \
     src/core/lib/security/security_connector/load_system_roots_linux.cc \
     src/core/lib/security/security_connector/local/local_security_connector.cc \
     src/core/lib/security/security_connector/security_connector.cc \
     src/core/lib/security/security_connector/ssl/ssl_security_connector.cc \
     src/core/lib/security/security_connector/ssl_utils.cc \
     src/core/lib/security/security_connector/ssl_utils_config.cc \
     src/core/lib/security/security_connector/tls/tls_security_connector.cc \
     src/core/lib/security/transport/client_auth_filter.cc \
     src/core/lib/security/transport/secure_endpoint.cc \
     src/core/lib/security/transport/security_handshaker.cc \
     src/core/lib/security/transport/server_auth_filter.cc \
     src/core/lib/security/transport/tsi_error.cc \
     src/core/lib/security/util/json_util.cc \
     src/core/lib/service_config/service_config_impl.cc \
     src/core/lib/service_config/service_config_parser.cc \
     src/core/lib/slice/b64.cc \
     src/core/lib/slice/percent_encoding.cc \
     src/core/lib/slice/slice.cc \
     src/core/lib/slice/slice_api.cc \
     src/core/lib/slice/slice_buffer.cc \
     src/core/lib/slice/slice_buffer_api.cc \
     src/core/lib/slice/slice_refcount.cc \
     src/core/lib/slice/slice_split.cc \
     src/core/lib/slice/slice_string_helpers.cc \
     src/core/lib/surface/api_trace.cc \
     src/core/lib/surface/builtins.cc \
     src/core/lib/surface/byte_buffer.cc \
     src/core/lib/surface/byte_buffer_reader.cc \
     src/core/lib/surface/call.cc \
     src/core/lib/surface/call_details.cc \
     src/core/lib/surface/call_log_batch.cc \
     src/core/lib/surface/channel.cc \
     src/core/lib/surface/channel_init.cc \
     src/core/lib/surface/channel_ping.cc \
     src/core/lib/surface/channel_stack_type.cc \
     src/core/lib/surface/completion_queue.cc \
     src/core/lib/surface/completion_queue_factory.cc \
     src/core/lib/surface/event_string.cc \
     src/core/lib/surface/init.cc \
     src/core/lib/surface/lame_client.cc \
     src/core/lib/surface/metadata_array.cc \
     src/core/lib/surface/server.cc \
     src/core/lib/surface/validate_metadata.cc \
     src/core/lib/surface/version.cc \
     src/core/lib/transport/bdp_estimator.cc \
+    src/core/lib/transport/byte_stream.cc \
     src/core/lib/transport/connectivity_state.cc \
     src/core/lib/transport/error_utils.cc \
     src/core/lib/transport/handshaker.cc \
     src/core/lib/transport/handshaker_registry.cc \
     src/core/lib/transport/http_connect_handshaker.cc \
     src/core/lib/transport/metadata_batch.cc \
     src/core/lib/transport/parsed_metadata.cc \
     src/core/lib/transport/pid_controller.cc \
     src/core/lib/transport/status_conversion.cc \
     src/core/lib/transport/tcp_connect_handshaker.cc \
     src/core/lib/transport/timeout_encoding.cc \
     src/core/lib/transport/transport.cc \
     src/core/lib/transport/transport_op_string.cc \
     src/core/lib/uri/uri_parser.cc \
     src/core/plugin_registry/grpc_plugin_registry.cc \
     src/core/plugin_registry/grpc_plugin_registry_extra.cc \
     src/core/tsi/alts/crypt/aes_gcm.cc \
     src/core/tsi/alts/crypt/gsec.cc \
     src/core/tsi/alts/frame_protector/alts_counter.cc \
     src/core/tsi/alts/frame_protector/alts_crypter.cc \
     src/core/tsi/alts/frame_protector/alts_frame_protector.cc \
     src/core/tsi/alts/frame_protector/alts_record_protocol_crypter_common.cc \
     src/core/tsi/alts/frame_protector/alts_seal_privacy_integrity_crypter.cc \
     src/core/tsi/alts/frame_protector/alts_unseal_privacy_integrity_crypter.cc \
     src/core/tsi/alts/frame_protector/frame_handler.cc \
     src/core/tsi/alts/handshaker/alts_handshaker_client.cc \
     src/core/tsi/alts/handshaker/alts_shared_resource.cc \
     src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc \
     src/core/tsi/alts/handshaker/alts_tsi_utils.cc \
     src/core/tsi/alts/handshaker/transport_security_common_api.cc \
     src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_integrity_only_record_protocol.cc \
     src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_privacy_integrity_record_protocol.cc \
     src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol_common.cc \
     src/core/tsi/alts/zero_copy_frame_protector/alts_iovec_record_protocol.cc \
     src/core/tsi/alts/zero_copy_frame_protector/alts_zero_copy_grpc_protector.cc \
     src/core/tsi/fake_transport_security.cc \
     src/core/tsi/local_transport_security.cc \
     src/core/tsi/ssl/key_logging/ssl_key_logging.cc \
     src/core/tsi/ssl/session_cache/ssl_session_boringssl.cc \
     src/core/tsi/ssl/session_cache/ssl_session_cache.cc \
     src/core/tsi/ssl/session_cache/ssl_session_openssl.cc \
     src/core/tsi/ssl_transport_security.cc \
     src/core/tsi/transport_security.cc \
     src/core/tsi/transport_security_grpc.cc \
     src/php/ext/grpc/byte_buffer.c \
     src/php/ext/grpc/call.c \
     src/php/ext/grpc/call_credentials.c \
     src/php/ext/grpc/channel.c \
     src/php/ext/grpc/channel_credentials.c \
     src/php/ext/grpc/completion_queue.c \
     src/php/ext/grpc/php_grpc.c \
     src/php/ext/grpc/server.c \
     src/php/ext/grpc/server_credentials.c \
     src/php/ext/grpc/timeval.c \
     third_party/abseil-cpp/absl/base/internal/cycleclock.cc \
     third_party/abseil-cpp/absl/base/internal/low_level_alloc.cc \
     third_party/abseil-cpp/absl/base/internal/raw_logging.cc \
     third_party/abseil-cpp/absl/base/internal/spinlock.cc \
     third_party/abseil-cpp/absl/base/internal/spinlock_wait.cc \
     third_party/abseil-cpp/absl/base/internal/sysinfo.cc \
     third_party/abseil-cpp/absl/base/internal/thread_identity.cc \
     third_party/abseil-cpp/absl/base/internal/throw_delegate.cc \
     third_party/abseil-cpp/absl/base/internal/unscaledcycleclock.cc \
     third_party/abseil-cpp/absl/base/log_severity.cc \
     third_party/abseil-cpp/absl/container/internal/hashtablez_sampler.cc \
     third_party/abseil-cpp/absl/container/internal/hashtablez_sampler_force_weak_definition.cc \
     third_party/abseil-cpp/absl/container/internal/raw_hash_set.cc \
     third_party/abseil-cpp/absl/debugging/internal/address_is_readable.cc \
     third_party/abseil-cpp/absl/debugging/internal/demangle.cc \
     third_party/abseil-cpp/absl/debugging/internal/elf_mem_image.cc \
     third_party/abseil-cpp/absl/debugging/internal/vdso_support.cc \
     third_party/abseil-cpp/absl/debugging/stacktrace.cc \
     third_party/abseil-cpp/absl/debugging/symbolize.cc \
     third_party/abseil-cpp/absl/hash/internal/city.cc \
     third_party/abseil-cpp/absl/hash/internal/hash.cc \
     third_party/abseil-cpp/absl/hash/internal/low_level_hash.cc \
     third_party/abseil-cpp/absl/numeric/int128.cc \
     third_party/abseil-cpp/absl/profiling/internal/exponential_biased.cc \
     third_party/abseil-cpp/absl/random/discrete_distribution.cc \
     third_party/abseil-cpp/absl/random/gaussian_distribution.cc \
     third_party/abseil-cpp/absl/random/internal/pool_urbg.cc \
     third_party/abseil-cpp/absl/random/internal/randen.cc \
     third_party/abseil-cpp/absl/random/internal/randen_detect.cc \
     third_party/abseil-cpp/absl/random/internal/randen_hwaes.cc \
     third_party/abseil-cpp/absl/random/internal/randen_round_keys.cc \
     third_party/abseil-cpp/absl/random/internal/randen_slow.cc \
     third_party/abseil-cpp/absl/random/internal/seed_material.cc \
     third_party/abseil-cpp/absl/random/seed_gen_exception.cc \
     third_party/abseil-cpp/absl/random/seed_sequences.cc \
     third_party/abseil-cpp/absl/status/status.cc \
     third_party/abseil-cpp/absl/status/status_payload_printer.cc \
     third_party/abseil-cpp/absl/status/statusor.cc \
     third_party/abseil-cpp/absl/strings/ascii.cc \
     third_party/abseil-cpp/absl/strings/charconv.cc \
     third_party/abseil-cpp/absl/strings/cord.cc \
     third_party/abseil-cpp/absl/strings/escaping.cc \
     third_party/abseil-cpp/absl/strings/internal/charconv_bigint.cc \
     third_party/abseil-cpp/absl/strings/internal/charconv_parse.cc \
     third_party/abseil-cpp/absl/strings/internal/cord_internal.cc \
     third_party/abseil-cpp/absl/strings/internal/cord_rep_btree.cc \
     third_party/abseil-cpp/absl/strings/internal/cord_rep_btree_navigator.cc \
     third_party/abseil-cpp/absl/strings/internal/cord_rep_btree_reader.cc \
     third_party/abseil-cpp/absl/strings/internal/cord_rep_consume.cc \
     third_party/abseil-cpp/absl/strings/internal/cord_rep_ring.cc \
     third_party/abseil-cpp/absl/strings/internal/cordz_functions.cc \
     third_party/abseil-cpp/absl/strings/internal/cordz_handle.cc \
     third_party/abseil-cpp/absl/strings/internal/cordz_info.cc \
     third_party/abseil-cpp/absl/strings/internal/escaping.cc \
     third_party/abseil-cpp/absl/strings/internal/memutil.cc \
     third_party/abseil-cpp/absl/strings/internal/ostringstream.cc \
     third_party/abseil-cpp/absl/strings/internal/str_format/arg.cc \
     third_party/abseil-cpp/absl/strings/internal/str_format/bind.cc \
     third_party/abseil-cpp/absl/strings/internal/str_format/extension.cc \
     third_party/abseil-cpp/absl/strings/internal/str_format/float_conversion.cc \
     third_party/abseil-cpp/absl/strings/internal/str_format/output.cc \
     third_party/abseil-cpp/absl/strings/internal/str_format/parser.cc \
     third_party/abseil-cpp/absl/strings/internal/utf8.cc \
     third_party/abseil-cpp/absl/strings/match.cc \
     third_party/abseil-cpp/absl/strings/numbers.cc \
     third_party/abseil-cpp/absl/strings/str_cat.cc \
     third_party/abseil-cpp/absl/strings/str_replace.cc \
     third_party/abseil-cpp/absl/strings/str_split.cc \
     third_party/abseil-cpp/absl/strings/string_view.cc \
     third_party/abseil-cpp/absl/strings/substitute.cc \
     third_party/abseil-cpp/absl/synchronization/barrier.cc \
     third_party/abseil-cpp/absl/synchronization/blocking_counter.cc \
     third_party/abseil-cpp/absl/synchronization/internal/create_thread_identity.cc \
     third_party/abseil-cpp/absl/synchronization/internal/graphcycles.cc \
     third_party/abseil-cpp/absl/synchronization/internal/per_thread_sem.cc \
     third_party/abseil-cpp/absl/synchronization/internal/waiter.cc \
     third_party/abseil-cpp/absl/synchronization/mutex.cc \
     third_party/abseil-cpp/absl/synchronization/notification.cc \
     third_party/abseil-cpp/absl/time/civil_time.cc \
     third_party/abseil-cpp/absl/time/clock.cc \
     third_party/abseil-cpp/absl/time/duration.cc \
     third_party/abseil-cpp/absl/time/format.cc \
     third_party/abseil-cpp/absl/time/internal/cctz/src/civil_time_detail.cc \
     third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_fixed.cc \
     third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_format.cc \
     third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_if.cc \
     third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_impl.cc \
     third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_info.cc \
     third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_libc.cc \
     third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_lookup.cc \
     third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_posix.cc \
     third_party/abseil-cpp/absl/time/internal/cctz/src/zone_info_source.cc \
     third_party/abseil-cpp/absl/time/time.cc \
     third_party/abseil-cpp/absl/types/bad_optional_access.cc \
     third_party/abseil-cpp/absl/types/bad_variant_access.cc \
     third_party/address_sorting/address_sorting.c \
     third_party/address_sorting/address_sorting_posix.c \
     third_party/address_sorting/address_sorting_windows.c \
     third_party/boringssl-with-bazel/err_data.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/a_bitstr.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/a_bool.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/a_d2i_fp.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/a_dup.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/a_enum.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/a_gentm.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/a_i2d_fp.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/a_int.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/a_mbstr.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/a_object.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/a_octet.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/a_print.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/a_strex.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/a_strnid.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/a_time.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/a_type.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/a_utctm.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/a_utf8.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/asn1_lib.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/asn1_par.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/asn_pack.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/f_int.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/f_string.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/tasn_dec.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/tasn_enc.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/tasn_fre.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/tasn_new.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/tasn_typ.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/tasn_utl.c \
     third_party/boringssl-with-bazel/src/crypto/asn1/time_support.c \
     third_party/boringssl-with-bazel/src/crypto/base64/base64.c \
     third_party/boringssl-with-bazel/src/crypto/bio/bio.c \
     third_party/boringssl-with-bazel/src/crypto/bio/bio_mem.c \
     third_party/boringssl-with-bazel/src/crypto/bio/connect.c \
     third_party/boringssl-with-bazel/src/crypto/bio/fd.c \
     third_party/boringssl-with-bazel/src/crypto/bio/file.c \
     third_party/boringssl-with-bazel/src/crypto/bio/hexdump.c \
     third_party/boringssl-with-bazel/src/crypto/bio/pair.c \
     third_party/boringssl-with-bazel/src/crypto/bio/printf.c \
     third_party/boringssl-with-bazel/src/crypto/bio/socket.c \
     third_party/boringssl-with-bazel/src/crypto/bio/socket_helper.c \
     third_party/boringssl-with-bazel/src/crypto/blake2/blake2.c \
     third_party/boringssl-with-bazel/src/crypto/bn_extra/bn_asn1.c \
     third_party/boringssl-with-bazel/src/crypto/bn_extra/convert.c \
     third_party/boringssl-with-bazel/src/crypto/buf/buf.c \
     third_party/boringssl-with-bazel/src/crypto/bytestring/asn1_compat.c \
     third_party/boringssl-with-bazel/src/crypto/bytestring/ber.c \
     third_party/boringssl-with-bazel/src/crypto/bytestring/cbb.c \
     third_party/boringssl-with-bazel/src/crypto/bytestring/cbs.c \
     third_party/boringssl-with-bazel/src/crypto/bytestring/unicode.c \
     third_party/boringssl-with-bazel/src/crypto/chacha/chacha.c \
     third_party/boringssl-with-bazel/src/crypto/cipher_extra/cipher_extra.c \
     third_party/boringssl-with-bazel/src/crypto/cipher_extra/derive_key.c \
     third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_aesccm.c \
     third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_aesctrhmac.c \
     third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_aesgcmsiv.c \
     third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_chacha20poly1305.c \
     third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_null.c \
     third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_rc2.c \
     third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_rc4.c \
     third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_tls.c \
     third_party/boringssl-with-bazel/src/crypto/cipher_extra/tls_cbc.c \
     third_party/boringssl-with-bazel/src/crypto/cmac/cmac.c \
     third_party/boringssl-with-bazel/src/crypto/conf/conf.c \
     third_party/boringssl-with-bazel/src/crypto/cpu-aarch64-fuchsia.c \
     third_party/boringssl-with-bazel/src/crypto/cpu-aarch64-linux.c \
     third_party/boringssl-with-bazel/src/crypto/cpu-aarch64-win.c \
     third_party/boringssl-with-bazel/src/crypto/cpu-arm-linux.c \
     third_party/boringssl-with-bazel/src/crypto/cpu-arm.c \
     third_party/boringssl-with-bazel/src/crypto/cpu-intel.c \
     third_party/boringssl-with-bazel/src/crypto/cpu-ppc64le.c \
     third_party/boringssl-with-bazel/src/crypto/crypto.c \
     third_party/boringssl-with-bazel/src/crypto/curve25519/curve25519.c \
     third_party/boringssl-with-bazel/src/crypto/curve25519/spake25519.c \
     third_party/boringssl-with-bazel/src/crypto/dh_extra/dh_asn1.c \
     third_party/boringssl-with-bazel/src/crypto/dh_extra/params.c \
     third_party/boringssl-with-bazel/src/crypto/digest_extra/digest_extra.c \
     third_party/boringssl-with-bazel/src/crypto/dsa/dsa.c \
     third_party/boringssl-with-bazel/src/crypto/dsa/dsa_asn1.c \
     third_party/boringssl-with-bazel/src/crypto/ec_extra/ec_asn1.c \
     third_party/boringssl-with-bazel/src/crypto/ec_extra/ec_derive.c \
     third_party/boringssl-with-bazel/src/crypto/ec_extra/hash_to_curve.c \
     third_party/boringssl-with-bazel/src/crypto/ecdh_extra/ecdh_extra.c \
     third_party/boringssl-with-bazel/src/crypto/ecdsa_extra/ecdsa_asn1.c \
     third_party/boringssl-with-bazel/src/crypto/engine/engine.c \
     third_party/boringssl-with-bazel/src/crypto/err/err.c \
     third_party/boringssl-with-bazel/src/crypto/evp/digestsign.c \
     third_party/boringssl-with-bazel/src/crypto/evp/evp.c \
     third_party/boringssl-with-bazel/src/crypto/evp/evp_asn1.c \
     third_party/boringssl-with-bazel/src/crypto/evp/evp_ctx.c \
     third_party/boringssl-with-bazel/src/crypto/evp/p_dsa_asn1.c \
     third_party/boringssl-with-bazel/src/crypto/evp/p_ec.c \
     third_party/boringssl-with-bazel/src/crypto/evp/p_ec_asn1.c \
     third_party/boringssl-with-bazel/src/crypto/evp/p_ed25519.c \
     third_party/boringssl-with-bazel/src/crypto/evp/p_ed25519_asn1.c \
     third_party/boringssl-with-bazel/src/crypto/evp/p_rsa.c \
     third_party/boringssl-with-bazel/src/crypto/evp/p_rsa_asn1.c \
     third_party/boringssl-with-bazel/src/crypto/evp/p_x25519.c \
     third_party/boringssl-with-bazel/src/crypto/evp/p_x25519_asn1.c \
     third_party/boringssl-with-bazel/src/crypto/evp/pbkdf.c \
     third_party/boringssl-with-bazel/src/crypto/evp/print.c \
     third_party/boringssl-with-bazel/src/crypto/evp/scrypt.c \
     third_party/boringssl-with-bazel/src/crypto/evp/sign.c \
     third_party/boringssl-with-bazel/src/crypto/ex_data.c \
     third_party/boringssl-with-bazel/src/crypto/fipsmodule/bcm.c \
     third_party/boringssl-with-bazel/src/crypto/fipsmodule/fips_shared_support.c \
     third_party/boringssl-with-bazel/src/crypto/hkdf/hkdf.c \
     third_party/boringssl-with-bazel/src/crypto/hpke/hpke.c \
     third_party/boringssl-with-bazel/src/crypto/hrss/hrss.c \
     third_party/boringssl-with-bazel/src/crypto/lhash/lhash.c \
     third_party/boringssl-with-bazel/src/crypto/mem.c \
     third_party/boringssl-with-bazel/src/crypto/obj/obj.c \
     third_party/boringssl-with-bazel/src/crypto/obj/obj_xref.c \
     third_party/boringssl-with-bazel/src/crypto/pem/pem_all.c \
     third_party/boringssl-with-bazel/src/crypto/pem/pem_info.c \
     third_party/boringssl-with-bazel/src/crypto/pem/pem_lib.c \
     third_party/boringssl-with-bazel/src/crypto/pem/pem_oth.c \
     third_party/boringssl-with-bazel/src/crypto/pem/pem_pk8.c \
     third_party/boringssl-with-bazel/src/crypto/pem/pem_pkey.c \
     third_party/boringssl-with-bazel/src/crypto/pem/pem_x509.c \
     third_party/boringssl-with-bazel/src/crypto/pem/pem_xaux.c \
     third_party/boringssl-with-bazel/src/crypto/pkcs7/pkcs7.c \
     third_party/boringssl-with-bazel/src/crypto/pkcs7/pkcs7_x509.c \
     third_party/boringssl-with-bazel/src/crypto/pkcs8/p5_pbev2.c \
     third_party/boringssl-with-bazel/src/crypto/pkcs8/pkcs8.c \
     third_party/boringssl-with-bazel/src/crypto/pkcs8/pkcs8_x509.c \
     third_party/boringssl-with-bazel/src/crypto/poly1305/poly1305.c \
     third_party/boringssl-with-bazel/src/crypto/poly1305/poly1305_arm.c \
     third_party/boringssl-with-bazel/src/crypto/poly1305/poly1305_vec.c \
     third_party/boringssl-with-bazel/src/crypto/pool/pool.c \
     third_party/boringssl-with-bazel/src/crypto/rand_extra/deterministic.c \
     third_party/boringssl-with-bazel/src/crypto/rand_extra/forkunsafe.c \
     third_party/boringssl-with-bazel/src/crypto/rand_extra/fuchsia.c \
     third_party/boringssl-with-bazel/src/crypto/rand_extra/passive.c \
     third_party/boringssl-with-bazel/src/crypto/rand_extra/rand_extra.c \
     third_party/boringssl-with-bazel/src/crypto/rand_extra/windows.c \
     third_party/boringssl-with-bazel/src/crypto/rc4/rc4.c \
     third_party/boringssl-with-bazel/src/crypto/refcount_c11.c \
     third_party/boringssl-with-bazel/src/crypto/refcount_lock.c \
     third_party/boringssl-with-bazel/src/crypto/rsa_extra/rsa_asn1.c \
     third_party/boringssl-with-bazel/src/crypto/rsa_extra/rsa_print.c \
     third_party/boringssl-with-bazel/src/crypto/siphash/siphash.c \
     third_party/boringssl-with-bazel/src/crypto/stack/stack.c \
     third_party/boringssl-with-bazel/src/crypto/thread.c \
     third_party/boringssl-with-bazel/src/crypto/thread_none.c \
     third_party/boringssl-with-bazel/src/crypto/thread_pthread.c \
     third_party/boringssl-with-bazel/src/crypto/thread_win.c \
     third_party/boringssl-with-bazel/src/crypto/trust_token/pmbtoken.c \
     third_party/boringssl-with-bazel/src/crypto/trust_token/trust_token.c \
     third_party/boringssl-with-bazel/src/crypto/trust_token/voprf.c \
     third_party/boringssl-with-bazel/src/crypto/x509/a_digest.c \
     third_party/boringssl-with-bazel/src/crypto/x509/a_sign.c \
     third_party/boringssl-with-bazel/src/crypto/x509/a_verify.c \
     third_party/boringssl-with-bazel/src/crypto/x509/algorithm.c \
     third_party/boringssl-with-bazel/src/crypto/x509/asn1_gen.c \
     third_party/boringssl-with-bazel/src/crypto/x509/by_dir.c \
     third_party/boringssl-with-bazel/src/crypto/x509/by_file.c \
     third_party/boringssl-with-bazel/src/crypto/x509/i2d_pr.c \
     third_party/boringssl-with-bazel/src/crypto/x509/name_print.c \
     third_party/boringssl-with-bazel/src/crypto/x509/rsa_pss.c \
     third_party/boringssl-with-bazel/src/crypto/x509/t_crl.c \
     third_party/boringssl-with-bazel/src/crypto/x509/t_req.c \
     third_party/boringssl-with-bazel/src/crypto/x509/t_x509.c \
     third_party/boringssl-with-bazel/src/crypto/x509/t_x509a.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x509.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x509_att.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x509_cmp.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x509_d2.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x509_def.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x509_ext.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x509_lu.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x509_obj.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x509_req.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x509_set.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x509_trs.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x509_txt.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x509_v3.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x509_vfy.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x509_vpm.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x509cset.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x509name.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x509rset.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x509spki.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x_algor.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x_all.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x_attrib.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x_crl.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x_exten.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x_info.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x_name.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x_pkey.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x_pubkey.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x_req.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x_sig.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x_spki.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x_val.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x_x509.c \
     third_party/boringssl-with-bazel/src/crypto/x509/x_x509a.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_cache.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_data.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_lib.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_map.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_node.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_tree.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_akey.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_akeya.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_alt.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_bcons.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_bitst.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_conf.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_cpols.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_crld.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_enum.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_extku.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_genn.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_ia5.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_info.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_int.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_lib.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_ncons.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_ocsp.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_pci.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_pcia.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_pcons.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_pmaps.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_prn.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_purp.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_skey.c \
     third_party/boringssl-with-bazel/src/crypto/x509v3/v3_utl.c \
     third_party/boringssl-with-bazel/src/ssl/bio_ssl.cc \
     third_party/boringssl-with-bazel/src/ssl/d1_both.cc \
     third_party/boringssl-with-bazel/src/ssl/d1_lib.cc \
     third_party/boringssl-with-bazel/src/ssl/d1_pkt.cc \
     third_party/boringssl-with-bazel/src/ssl/d1_srtp.cc \
     third_party/boringssl-with-bazel/src/ssl/dtls_method.cc \
     third_party/boringssl-with-bazel/src/ssl/dtls_record.cc \
     third_party/boringssl-with-bazel/src/ssl/encrypted_client_hello.cc \
     third_party/boringssl-with-bazel/src/ssl/extensions.cc \
     third_party/boringssl-with-bazel/src/ssl/handoff.cc \
     third_party/boringssl-with-bazel/src/ssl/handshake.cc \
     third_party/boringssl-with-bazel/src/ssl/handshake_client.cc \
     third_party/boringssl-with-bazel/src/ssl/handshake_server.cc \
     third_party/boringssl-with-bazel/src/ssl/s3_both.cc \
     third_party/boringssl-with-bazel/src/ssl/s3_lib.cc \
     third_party/boringssl-with-bazel/src/ssl/s3_pkt.cc \
     third_party/boringssl-with-bazel/src/ssl/ssl_aead_ctx.cc \
     third_party/boringssl-with-bazel/src/ssl/ssl_asn1.cc \
     third_party/boringssl-with-bazel/src/ssl/ssl_buffer.cc \
     third_party/boringssl-with-bazel/src/ssl/ssl_cert.cc \
     third_party/boringssl-with-bazel/src/ssl/ssl_cipher.cc \
     third_party/boringssl-with-bazel/src/ssl/ssl_file.cc \
     third_party/boringssl-with-bazel/src/ssl/ssl_key_share.cc \
     third_party/boringssl-with-bazel/src/ssl/ssl_lib.cc \
     third_party/boringssl-with-bazel/src/ssl/ssl_privkey.cc \
     third_party/boringssl-with-bazel/src/ssl/ssl_session.cc \
     third_party/boringssl-with-bazel/src/ssl/ssl_stat.cc \
     third_party/boringssl-with-bazel/src/ssl/ssl_transcript.cc \
     third_party/boringssl-with-bazel/src/ssl/ssl_versions.cc \
     third_party/boringssl-with-bazel/src/ssl/ssl_x509.cc \
     third_party/boringssl-with-bazel/src/ssl/t1_enc.cc \
     third_party/boringssl-with-bazel/src/ssl/tls13_both.cc \
     third_party/boringssl-with-bazel/src/ssl/tls13_client.cc \
     third_party/boringssl-with-bazel/src/ssl/tls13_enc.cc \
     third_party/boringssl-with-bazel/src/ssl/tls13_server.cc \
     third_party/boringssl-with-bazel/src/ssl/tls_method.cc \
     third_party/boringssl-with-bazel/src/ssl/tls_record.cc \
     third_party/re2/re2/bitstate.cc \
     third_party/re2/re2/compile.cc \
     third_party/re2/re2/dfa.cc \
     third_party/re2/re2/filtered_re2.cc \
     third_party/re2/re2/mimics_pcre.cc \
     third_party/re2/re2/nfa.cc \
     third_party/re2/re2/onepass.cc \
     third_party/re2/re2/parse.cc \
     third_party/re2/re2/perl_groups.cc \
     third_party/re2/re2/prefilter.cc \
     third_party/re2/re2/prefilter_tree.cc \
     third_party/re2/re2/prog.cc \
     third_party/re2/re2/re2.cc \
     third_party/re2/re2/regexp.cc \
     third_party/re2/re2/set.cc \
     third_party/re2/re2/simplify.cc \
     third_party/re2/re2/stringpiece.cc \
     third_party/re2/re2/tostring.cc \
     third_party/re2/re2/unicode_casefold.cc \
     third_party/re2/re2/unicode_groups.cc \
     third_party/re2/util/pcre.cc \
     third_party/re2/util/rune.cc \
     third_party/re2/util/strutil.cc \
     third_party/upb/third_party/utf8_range/naive.c \
     third_party/upb/third_party/utf8_range/range2-neon.c \
     third_party/upb/third_party/utf8_range/range2-sse.c \
     third_party/upb/upb/decode.c \
     third_party/upb/upb/decode_fast.c \
     third_party/upb/upb/def.c \
     third_party/upb/upb/encode.c \
     third_party/upb/upb/json_encode.c \
     third_party/upb/upb/msg.c \
     third_party/upb/upb/reflection.c \
     third_party/upb/upb/table.c \
     third_party/upb/upb/text_encode.c \
     third_party/upb/upb/upb.c \
     , $ext_shared, , -fvisibility=hidden \
     -DOPENSSL_NO_ASM -D_GNU_SOURCE -DWIN32_LEAN_AND_MEAN \
     -D_HAS_EXCEPTIONS=0 -DNOMINMAX -DGRPC_ARES=0 \
     -DGRPC_POSIX_FORK_ALLOW_PTHREAD_ATFORK=1 \
     -DGRPC_XDS_USER_AGENT_NAME_SUFFIX='"\"PHP\""' \
     -DGRPC_XDS_USER_AGENT_VERSION_SUFFIX='"\"1.48.0dev\""')
 
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/census)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/channel_idle)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/client_channel)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/client_channel/health)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/client_channel/lb_policy)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/client_channel/lb_policy/grpclb)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/client_channel/lb_policy/outlier_detection)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/client_channel/lb_policy/pick_first)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/client_channel/lb_policy/priority)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/client_channel/lb_policy/ring_hash)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/client_channel/lb_policy/rls)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/client_channel/lb_policy/round_robin)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/client_channel/lb_policy/weighted_target)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/client_channel/lb_policy/xds)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/client_channel/resolver)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/client_channel/resolver/binder)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/client_channel/resolver/dns)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/client_channel/resolver/dns/c_ares)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/client_channel/resolver/dns/native)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/client_channel/resolver/fake)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/client_channel/resolver/google_c2p)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/client_channel/resolver/sockaddr)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/client_channel/resolver/xds)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/deadline)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/fault_injection)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/http)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/http/client)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/http/message_compress)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/http/server)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/message_size)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/rbac)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/filters/server_config_selector)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/transport/chttp2/alpn)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/transport/chttp2/client)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/transport/chttp2/server)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/transport/chttp2/transport)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/transport/inproc)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/admin/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/annotations)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/config/accesslog/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/config/bootstrap/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/config/cluster/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/config/common/matcher/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/config/core/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/config/endpoint/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/config/listener/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/config/metrics/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/config/overload/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/config/rbac/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/config/route/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/config/tap/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/config/trace/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/extensions/clusters/aggregate/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/extensions/filters/common/fault/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/extensions/filters/http/fault/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/extensions/filters/http/rbac/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/extensions/filters/http/router/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/extensions/filters/network/http_connection_manager/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/ring_hash/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/wrr_locality/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/service/discovery/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/service/load_stats/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/service/status/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/type/http/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/type/matcher/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/type/metadata/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/type/tracing/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/envoy/type/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/google/api)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/google/api/expr/v1alpha1)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/google/protobuf)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/google/rpc)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/opencensus/proto/trace/v1)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/src/proto/grpc/gcp)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/src/proto/grpc/health/v1)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/src/proto/grpc/lb/v1)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/src/proto/grpc/lookup/v1)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/udpa/annotations)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/validate)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/xds/annotations/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/xds/core/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/xds/data/orca/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/xds/service/orca/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/xds/type/matcher/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upb-generated/xds/type/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/admin/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/annotations)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/config/accesslog/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/config/bootstrap/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/config/cluster/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/config/common/matcher/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/config/core/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/config/endpoint/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/config/listener/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/config/metrics/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/config/overload/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/config/rbac/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/config/route/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/config/tap/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/config/trace/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/extensions/clusters/aggregate/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/extensions/filters/common/fault/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/extensions/filters/http/fault/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/extensions/filters/http/rbac/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/extensions/filters/http/router/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/extensions/filters/network/http_connection_manager/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/service/discovery/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/service/load_stats/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/service/status/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/type/http/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/type/matcher/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/type/metadata/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/type/tracing/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/envoy/type/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/google/api)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/google/api/expr/v1alpha1)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/google/protobuf)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/google/rpc)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/opencensus/proto/trace/v1)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/src/proto/grpc/lookup/v1)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/udpa/annotations)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/validate)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/xds/annotations/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/xds/core/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/xds/type/matcher/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/upbdefs-generated/xds/type/v3)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/ext/xds)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/address_utils)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/backoff)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/channel)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/compression)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/config)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/debug)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/event_engine)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/gpr)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/gprpp)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/http)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/iomgr)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/iomgr/executor)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/json)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/matchers)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/profiling)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/promise)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/resolver)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/resource_quota)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/authorization)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/context)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/credentials)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/credentials/alts)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/credentials/composite)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/credentials/external)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/credentials/fake)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/credentials/google_default)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/credentials/iam)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/credentials/insecure)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/credentials/jwt)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/credentials/local)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/credentials/oauth2)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/credentials/plugin)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/credentials/ssl)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/credentials/tls)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/credentials/xds)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/security_connector)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/security_connector/alts)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/security_connector/fake)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/security_connector/insecure)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/security_connector/local)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/security_connector/ssl)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/security_connector/tls)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/transport)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/security/util)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/service_config)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/slice)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/surface)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/transport)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/lib/uri)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/plugin_registry)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/tsi)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/tsi/alts/crypt)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/tsi/alts/frame_protector)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/tsi/alts/handshaker)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/tsi/alts/zero_copy_frame_protector)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/tsi/ssl/key_logging)
   PHP_ADD_BUILD_DIR($ext_builddir/src/core/tsi/ssl/session_cache)
   PHP_ADD_BUILD_DIR($ext_builddir/src/php/ext/grpc)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/abseil-cpp/absl/base)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/abseil-cpp/absl/base/internal)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/abseil-cpp/absl/container/internal)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/abseil-cpp/absl/debugging)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/abseil-cpp/absl/debugging/internal)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/abseil-cpp/absl/hash/internal)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/abseil-cpp/absl/numeric)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/abseil-cpp/absl/profiling/internal)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/abseil-cpp/absl/random)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/abseil-cpp/absl/random/internal)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/abseil-cpp/absl/status)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/abseil-cpp/absl/strings)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/abseil-cpp/absl/strings/internal)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/abseil-cpp/absl/strings/internal/str_format)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/abseil-cpp/absl/synchronization)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/abseil-cpp/absl/synchronization/internal)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/abseil-cpp/absl/time)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/abseil-cpp/absl/time/internal/cctz/src)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/abseil-cpp/absl/types)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/address_sorting)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/asn1)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/base64)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/bio)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/blake2)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/bn_extra)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/buf)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/bytestring)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/chacha)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/cipher_extra)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/cmac)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/conf)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/curve25519)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/dh_extra)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/digest_extra)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/dsa)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/ec_extra)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/ecdh_extra)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/ecdsa_extra)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/engine)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/err)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/evp)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/fipsmodule)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/hkdf)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/hpke)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/hrss)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/lhash)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/obj)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/pem)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/pkcs7)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/pkcs8)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/poly1305)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/pool)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/rand_extra)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/rc4)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/rsa_extra)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/siphash)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/stack)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/trust_token)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/x509)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/crypto/x509v3)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/boringssl-with-bazel/src/ssl)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/re2/re2)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/re2/util)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/upb/third_party/utf8_range)
   PHP_ADD_BUILD_DIR($ext_builddir/third_party/upb/upb)
diff --git a/config.w32 b/config.w32
index fbb1edafdc..a06bb24de9 100644
--- a/config.w32
+++ b/config.w32
@@ -6,1564 +6,1565 @@ ARG_WITH("grpc", "grpc support", "no");
 if (PHP_GRPC != "no") {
 
   EXTENSION("grpc",
     "src\\core\\ext\\filters\\census\\grpc_context.cc " +
     "src\\core\\ext\\filters\\channel_idle\\channel_idle_filter.cc " +
     "src\\core\\ext\\filters\\channel_idle\\idle_filter_state.cc " +
     "src\\core\\ext\\filters\\client_channel\\backend_metric.cc " +
     "src\\core\\ext\\filters\\client_channel\\backup_poller.cc " +
     "src\\core\\ext\\filters\\client_channel\\channel_connectivity.cc " +
     "src\\core\\ext\\filters\\client_channel\\client_channel.cc " +
     "src\\core\\ext\\filters\\client_channel\\client_channel_channelz.cc " +
     "src\\core\\ext\\filters\\client_channel\\client_channel_factory.cc " +
     "src\\core\\ext\\filters\\client_channel\\client_channel_plugin.cc " +
     "src\\core\\ext\\filters\\client_channel\\config_selector.cc " +
     "src\\core\\ext\\filters\\client_channel\\dynamic_filters.cc " +
     "src\\core\\ext\\filters\\client_channel\\global_subchannel_pool.cc " +
     "src\\core\\ext\\filters\\client_channel\\health\\health_check_client.cc " +
     "src\\core\\ext\\filters\\client_channel\\http_proxy.cc " +
     "src\\core\\ext\\filters\\client_channel\\lb_policy.cc " +
     "src\\core\\ext\\filters\\client_channel\\lb_policy\\address_filtering.cc " +
     "src\\core\\ext\\filters\\client_channel\\lb_policy\\child_policy_handler.cc " +
     "src\\core\\ext\\filters\\client_channel\\lb_policy\\grpclb\\client_load_reporting_filter.cc " +
     "src\\core\\ext\\filters\\client_channel\\lb_policy\\grpclb\\grpclb.cc " +
     "src\\core\\ext\\filters\\client_channel\\lb_policy\\grpclb\\grpclb_balancer_addresses.cc " +
     "src\\core\\ext\\filters\\client_channel\\lb_policy\\grpclb\\grpclb_client_stats.cc " +
     "src\\core\\ext\\filters\\client_channel\\lb_policy\\grpclb\\load_balancer_api.cc " +
     "src\\core\\ext\\filters\\client_channel\\lb_policy\\oob_backend_metric.cc " +
     "src\\core\\ext\\filters\\client_channel\\lb_policy\\outlier_detection\\outlier_detection.cc " +
     "src\\core\\ext\\filters\\client_channel\\lb_policy\\pick_first\\pick_first.cc " +
     "src\\core\\ext\\filters\\client_channel\\lb_policy\\priority\\priority.cc " +
     "src\\core\\ext\\filters\\client_channel\\lb_policy\\ring_hash\\ring_hash.cc " +
     "src\\core\\ext\\filters\\client_channel\\lb_policy\\rls\\rls.cc " +
     "src\\core\\ext\\filters\\client_channel\\lb_policy\\round_robin\\round_robin.cc " +
     "src\\core\\ext\\filters\\client_channel\\lb_policy\\weighted_target\\weighted_target.cc " +
     "src\\core\\ext\\filters\\client_channel\\lb_policy\\xds\\cds.cc " +
     "src\\core\\ext\\filters\\client_channel\\lb_policy\\xds\\xds_cluster_impl.cc " +
     "src\\core\\ext\\filters\\client_channel\\lb_policy\\xds\\xds_cluster_manager.cc " +
     "src\\core\\ext\\filters\\client_channel\\lb_policy\\xds\\xds_cluster_resolver.cc " +
     "src\\core\\ext\\filters\\client_channel\\lb_policy_registry.cc " +
     "src\\core\\ext\\filters\\client_channel\\local_subchannel_pool.cc " +
     "src\\core\\ext\\filters\\client_channel\\proxy_mapper_registry.cc " +
     "src\\core\\ext\\filters\\client_channel\\resolver\\binder\\binder_resolver.cc " +
     "src\\core\\ext\\filters\\client_channel\\resolver\\dns\\c_ares\\dns_resolver_ares.cc " +
     "src\\core\\ext\\filters\\client_channel\\resolver\\dns\\c_ares\\grpc_ares_ev_driver_posix.cc " +
     "src\\core\\ext\\filters\\client_channel\\resolver\\dns\\c_ares\\grpc_ares_ev_driver_windows.cc " +
     "src\\core\\ext\\filters\\client_channel\\resolver\\dns\\c_ares\\grpc_ares_wrapper.cc " +
     "src\\core\\ext\\filters\\client_channel\\resolver\\dns\\c_ares\\grpc_ares_wrapper_posix.cc " +
     "src\\core\\ext\\filters\\client_channel\\resolver\\dns\\c_ares\\grpc_ares_wrapper_windows.cc " +
     "src\\core\\ext\\filters\\client_channel\\resolver\\dns\\dns_resolver_selection.cc " +
     "src\\core\\ext\\filters\\client_channel\\resolver\\dns\\native\\dns_resolver.cc " +
     "src\\core\\ext\\filters\\client_channel\\resolver\\fake\\fake_resolver.cc " +
     "src\\core\\ext\\filters\\client_channel\\resolver\\google_c2p\\google_c2p_resolver.cc " +
     "src\\core\\ext\\filters\\client_channel\\resolver\\polling_resolver.cc " +
     "src\\core\\ext\\filters\\client_channel\\resolver\\sockaddr\\sockaddr_resolver.cc " +
     "src\\core\\ext\\filters\\client_channel\\resolver\\xds\\xds_resolver.cc " +
     "src\\core\\ext\\filters\\client_channel\\resolver_result_parsing.cc " +
     "src\\core\\ext\\filters\\client_channel\\retry_filter.cc " +
     "src\\core\\ext\\filters\\client_channel\\retry_service_config.cc " +
     "src\\core\\ext\\filters\\client_channel\\retry_throttle.cc " +
     "src\\core\\ext\\filters\\client_channel\\service_config_channel_arg_filter.cc " +
     "src\\core\\ext\\filters\\client_channel\\subchannel.cc " +
     "src\\core\\ext\\filters\\client_channel\\subchannel_pool_interface.cc " +
     "src\\core\\ext\\filters\\client_channel\\subchannel_stream_client.cc " +
     "src\\core\\ext\\filters\\deadline\\deadline_filter.cc " +
     "src\\core\\ext\\filters\\fault_injection\\fault_injection_filter.cc " +
     "src\\core\\ext\\filters\\fault_injection\\service_config_parser.cc " +
     "src\\core\\ext\\filters\\http\\client\\http_client_filter.cc " +
     "src\\core\\ext\\filters\\http\\client_authority_filter.cc " +
     "src\\core\\ext\\filters\\http\\http_filters_plugin.cc " +
     "src\\core\\ext\\filters\\http\\message_compress\\message_compress_filter.cc " +
     "src\\core\\ext\\filters\\http\\message_compress\\message_decompress_filter.cc " +
     "src\\core\\ext\\filters\\http\\server\\http_server_filter.cc " +
     "src\\core\\ext\\filters\\message_size\\message_size_filter.cc " +
     "src\\core\\ext\\filters\\rbac\\rbac_filter.cc " +
     "src\\core\\ext\\filters\\rbac\\rbac_service_config_parser.cc " +
     "src\\core\\ext\\filters\\server_config_selector\\server_config_selector.cc " +
     "src\\core\\ext\\filters\\server_config_selector\\server_config_selector_filter.cc " +
     "src\\core\\ext\\transport\\chttp2\\alpn\\alpn.cc " +
     "src\\core\\ext\\transport\\chttp2\\client\\chttp2_connector.cc " +
     "src\\core\\ext\\transport\\chttp2\\server\\chttp2_server.cc " +
     "src\\core\\ext\\transport\\chttp2\\transport\\bin_decoder.cc " +
     "src\\core\\ext\\transport\\chttp2\\transport\\bin_encoder.cc " +
     "src\\core\\ext\\transport\\chttp2\\transport\\chttp2_transport.cc " +
     "src\\core\\ext\\transport\\chttp2\\transport\\context_list.cc " +
     "src\\core\\ext\\transport\\chttp2\\transport\\flow_control.cc " +
     "src\\core\\ext\\transport\\chttp2\\transport\\frame_data.cc " +
     "src\\core\\ext\\transport\\chttp2\\transport\\frame_goaway.cc " +
     "src\\core\\ext\\transport\\chttp2\\transport\\frame_ping.cc " +
     "src\\core\\ext\\transport\\chttp2\\transport\\frame_rst_stream.cc " +
     "src\\core\\ext\\transport\\chttp2\\transport\\frame_settings.cc " +
     "src\\core\\ext\\transport\\chttp2\\transport\\frame_window_update.cc " +
     "src\\core\\ext\\transport\\chttp2\\transport\\hpack_encoder.cc " +
     "src\\core\\ext\\transport\\chttp2\\transport\\hpack_encoder_table.cc " +
     "src\\core\\ext\\transport\\chttp2\\transport\\hpack_parser.cc " +
     "src\\core\\ext\\transport\\chttp2\\transport\\hpack_parser_table.cc " +
     "src\\core\\ext\\transport\\chttp2\\transport\\http2_settings.cc " +
     "src\\core\\ext\\transport\\chttp2\\transport\\huffsyms.cc " +
     "src\\core\\ext\\transport\\chttp2\\transport\\parsing.cc " +
     "src\\core\\ext\\transport\\chttp2\\transport\\stream_lists.cc " +
     "src\\core\\ext\\transport\\chttp2\\transport\\stream_map.cc " +
     "src\\core\\ext\\transport\\chttp2\\transport\\varint.cc " +
     "src\\core\\ext\\transport\\chttp2\\transport\\writing.cc " +
     "src\\core\\ext\\transport\\inproc\\inproc_plugin.cc " +
     "src\\core\\ext\\transport\\inproc\\inproc_transport.cc " +
     "src\\core\\ext\\upb-generated\\envoy\\admin\\v3\\certs.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\admin\\v3\\clusters.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\admin\\v3\\config_dump.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\admin\\v3\\init_dump.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\admin\\v3\\listeners.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\admin\\v3\\memory.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\admin\\v3\\metrics.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\admin\\v3\\mutex_stats.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\admin\\v3\\server_info.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\admin\\v3\\tap.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\annotations\\deprecation.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\annotations\\resource.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\accesslog\\v3\\accesslog.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\bootstrap\\v3\\bootstrap.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\cluster\\v3\\circuit_breaker.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\cluster\\v3\\cluster.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\cluster\\v3\\filter.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\cluster\\v3\\outlier_detection.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\common\\matcher\\v3\\matcher.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\core\\v3\\address.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\core\\v3\\backoff.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\core\\v3\\base.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\core\\v3\\config_source.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\core\\v3\\event_service_config.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\core\\v3\\extension.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\core\\v3\\grpc_method_list.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\core\\v3\\grpc_service.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\core\\v3\\health_check.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\core\\v3\\http_uri.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\core\\v3\\protocol.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\core\\v3\\proxy_protocol.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\core\\v3\\resolver.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\core\\v3\\socket_option.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\core\\v3\\substitution_format_string.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\core\\v3\\udp_socket_config.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\endpoint\\v3\\endpoint.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\endpoint\\v3\\endpoint_components.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\endpoint\\v3\\load_report.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\listener\\v3\\api_listener.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\listener\\v3\\listener.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\listener\\v3\\listener_components.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\listener\\v3\\quic_config.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\listener\\v3\\udp_listener_config.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\metrics\\v3\\metrics_service.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\metrics\\v3\\stats.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\overload\\v3\\overload.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\rbac\\v3\\rbac.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\route\\v3\\route.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\route\\v3\\route_components.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\route\\v3\\scoped_route.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\tap\\v3\\common.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\trace\\v3\\datadog.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\trace\\v3\\dynamic_ot.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\trace\\v3\\http_tracer.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\trace\\v3\\lightstep.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\trace\\v3\\opencensus.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\trace\\v3\\service.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\trace\\v3\\skywalking.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\trace\\v3\\trace.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\trace\\v3\\xray.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\config\\trace\\v3\\zipkin.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\extensions\\clusters\\aggregate\\v3\\cluster.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\extensions\\filters\\common\\fault\\v3\\fault.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\extensions\\filters\\http\\fault\\v3\\fault.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\extensions\\filters\\http\\rbac\\v3\\rbac.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\extensions\\filters\\http\\router\\v3\\router.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\extensions\\filters\\network\\http_connection_manager\\v3\\http_connection_manager.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\extensions\\load_balancing_policies\\ring_hash\\v3\\ring_hash.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\extensions\\load_balancing_policies\\wrr_locality\\v3\\wrr_locality.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\extensions\\transport_sockets\\tls\\v3\\cert.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\extensions\\transport_sockets\\tls\\v3\\common.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\extensions\\transport_sockets\\tls\\v3\\secret.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\extensions\\transport_sockets\\tls\\v3\\tls.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\extensions\\transport_sockets\\tls\\v3\\tls_spiffe_validator_config.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\service\\discovery\\v3\\ads.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\service\\discovery\\v3\\discovery.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\service\\load_stats\\v3\\lrs.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\service\\status\\v3\\csds.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\type\\http\\v3\\cookie.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\type\\http\\v3\\path_transformation.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\type\\matcher\\v3\\http_inputs.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\type\\matcher\\v3\\metadata.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\type\\matcher\\v3\\node.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\type\\matcher\\v3\\number.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\type\\matcher\\v3\\path.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\type\\matcher\\v3\\regex.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\type\\matcher\\v3\\string.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\type\\matcher\\v3\\struct.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\type\\matcher\\v3\\value.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\type\\metadata\\v3\\metadata.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\type\\tracing\\v3\\custom_tag.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\type\\v3\\hash_policy.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\type\\v3\\http.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\type\\v3\\http_status.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\type\\v3\\percent.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\type\\v3\\range.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\type\\v3\\ratelimit_unit.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\type\\v3\\semantic_version.upb.c " +
     "src\\core\\ext\\upb-generated\\envoy\\type\\v3\\token_bucket.upb.c " +
     "src\\core\\ext\\upb-generated\\google\\api\\annotations.upb.c " +
     "src\\core\\ext\\upb-generated\\google\\api\\expr\\v1alpha1\\checked.upb.c " +
     "src\\core\\ext\\upb-generated\\google\\api\\expr\\v1alpha1\\syntax.upb.c " +
     "src\\core\\ext\\upb-generated\\google\\api\\http.upb.c " +
     "src\\core\\ext\\upb-generated\\google\\api\\httpbody.upb.c " +
     "src\\core\\ext\\upb-generated\\google\\protobuf\\any.upb.c " +
     "src\\core\\ext\\upb-generated\\google\\protobuf\\descriptor.upb.c " +
     "src\\core\\ext\\upb-generated\\google\\protobuf\\duration.upb.c " +
     "src\\core\\ext\\upb-generated\\google\\protobuf\\empty.upb.c " +
     "src\\core\\ext\\upb-generated\\google\\protobuf\\struct.upb.c " +
     "src\\core\\ext\\upb-generated\\google\\protobuf\\timestamp.upb.c " +
     "src\\core\\ext\\upb-generated\\google\\protobuf\\wrappers.upb.c " +
     "src\\core\\ext\\upb-generated\\google\\rpc\\status.upb.c " +
     "src\\core\\ext\\upb-generated\\opencensus\\proto\\trace\\v1\\trace_config.upb.c " +
     "src\\core\\ext\\upb-generated\\src\\proto\\grpc\\gcp\\altscontext.upb.c " +
     "src\\core\\ext\\upb-generated\\src\\proto\\grpc\\gcp\\handshaker.upb.c " +
     "src\\core\\ext\\upb-generated\\src\\proto\\grpc\\gcp\\transport_security_common.upb.c " +
     "src\\core\\ext\\upb-generated\\src\\proto\\grpc\\health\\v1\\health.upb.c " +
     "src\\core\\ext\\upb-generated\\src\\proto\\grpc\\lb\\v1\\load_balancer.upb.c " +
     "src\\core\\ext\\upb-generated\\src\\proto\\grpc\\lookup\\v1\\rls.upb.c " +
     "src\\core\\ext\\upb-generated\\src\\proto\\grpc\\lookup\\v1\\rls_config.upb.c " +
     "src\\core\\ext\\upb-generated\\udpa\\annotations\\migrate.upb.c " +
     "src\\core\\ext\\upb-generated\\udpa\\annotations\\security.upb.c " +
     "src\\core\\ext\\upb-generated\\udpa\\annotations\\sensitive.upb.c " +
     "src\\core\\ext\\upb-generated\\udpa\\annotations\\status.upb.c " +
     "src\\core\\ext\\upb-generated\\udpa\\annotations\\versioning.upb.c " +
     "src\\core\\ext\\upb-generated\\validate\\validate.upb.c " +
     "src\\core\\ext\\upb-generated\\xds\\annotations\\v3\\migrate.upb.c " +
     "src\\core\\ext\\upb-generated\\xds\\annotations\\v3\\security.upb.c " +
     "src\\core\\ext\\upb-generated\\xds\\annotations\\v3\\sensitive.upb.c " +
     "src\\core\\ext\\upb-generated\\xds\\annotations\\v3\\status.upb.c " +
     "src\\core\\ext\\upb-generated\\xds\\annotations\\v3\\versioning.upb.c " +
     "src\\core\\ext\\upb-generated\\xds\\core\\v3\\authority.upb.c " +
     "src\\core\\ext\\upb-generated\\xds\\core\\v3\\collection_entry.upb.c " +
     "src\\core\\ext\\upb-generated\\xds\\core\\v3\\context_params.upb.c " +
     "src\\core\\ext\\upb-generated\\xds\\core\\v3\\extension.upb.c " +
     "src\\core\\ext\\upb-generated\\xds\\core\\v3\\resource.upb.c " +
     "src\\core\\ext\\upb-generated\\xds\\core\\v3\\resource_locator.upb.c " +
     "src\\core\\ext\\upb-generated\\xds\\core\\v3\\resource_name.upb.c " +
     "src\\core\\ext\\upb-generated\\xds\\data\\orca\\v3\\orca_load_report.upb.c " +
     "src\\core\\ext\\upb-generated\\xds\\service\\orca\\v3\\orca.upb.c " +
     "src\\core\\ext\\upb-generated\\xds\\type\\matcher\\v3\\matcher.upb.c " +
     "src\\core\\ext\\upb-generated\\xds\\type\\matcher\\v3\\regex.upb.c " +
     "src\\core\\ext\\upb-generated\\xds\\type\\matcher\\v3\\string.upb.c " +
     "src\\core\\ext\\upb-generated\\xds\\type\\v3\\typed_struct.upb.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\admin\\v3\\certs.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\admin\\v3\\clusters.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\admin\\v3\\config_dump.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\admin\\v3\\init_dump.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\admin\\v3\\listeners.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\admin\\v3\\memory.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\admin\\v3\\metrics.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\admin\\v3\\mutex_stats.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\admin\\v3\\server_info.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\admin\\v3\\tap.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\annotations\\deprecation.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\annotations\\resource.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\accesslog\\v3\\accesslog.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\bootstrap\\v3\\bootstrap.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\cluster\\v3\\circuit_breaker.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\cluster\\v3\\cluster.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\cluster\\v3\\filter.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\cluster\\v3\\outlier_detection.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\common\\matcher\\v3\\matcher.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\core\\v3\\address.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\core\\v3\\backoff.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\core\\v3\\base.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\core\\v3\\config_source.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\core\\v3\\event_service_config.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\core\\v3\\extension.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\core\\v3\\grpc_method_list.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\core\\v3\\grpc_service.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\core\\v3\\health_check.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\core\\v3\\http_uri.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\core\\v3\\protocol.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\core\\v3\\proxy_protocol.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\core\\v3\\resolver.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\core\\v3\\socket_option.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\core\\v3\\substitution_format_string.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\core\\v3\\udp_socket_config.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\endpoint\\v3\\endpoint.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\endpoint\\v3\\endpoint_components.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\endpoint\\v3\\load_report.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\listener\\v3\\api_listener.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\listener\\v3\\listener.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\listener\\v3\\listener_components.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\listener\\v3\\quic_config.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\listener\\v3\\udp_listener_config.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\metrics\\v3\\metrics_service.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\metrics\\v3\\stats.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\overload\\v3\\overload.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\rbac\\v3\\rbac.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\route\\v3\\route.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\route\\v3\\route_components.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\route\\v3\\scoped_route.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\tap\\v3\\common.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\trace\\v3\\datadog.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\trace\\v3\\dynamic_ot.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\trace\\v3\\http_tracer.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\trace\\v3\\lightstep.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\trace\\v3\\opencensus.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\trace\\v3\\service.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\trace\\v3\\skywalking.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\trace\\v3\\trace.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\trace\\v3\\xray.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\config\\trace\\v3\\zipkin.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\clusters\\aggregate\\v3\\cluster.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\filters\\common\\fault\\v3\\fault.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\filters\\http\\fault\\v3\\fault.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\filters\\http\\rbac\\v3\\rbac.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\filters\\http\\router\\v3\\router.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\filters\\network\\http_connection_manager\\v3\\http_connection_manager.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\transport_sockets\\tls\\v3\\cert.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\transport_sockets\\tls\\v3\\common.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\transport_sockets\\tls\\v3\\secret.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\transport_sockets\\tls\\v3\\tls.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\transport_sockets\\tls\\v3\\tls_spiffe_validator_config.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\service\\discovery\\v3\\ads.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\service\\discovery\\v3\\discovery.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\service\\load_stats\\v3\\lrs.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\service\\status\\v3\\csds.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\type\\http\\v3\\cookie.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\type\\http\\v3\\path_transformation.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\type\\matcher\\v3\\http_inputs.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\type\\matcher\\v3\\metadata.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\type\\matcher\\v3\\node.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\type\\matcher\\v3\\number.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\type\\matcher\\v3\\path.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\type\\matcher\\v3\\regex.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\type\\matcher\\v3\\string.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\type\\matcher\\v3\\struct.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\type\\matcher\\v3\\value.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\type\\metadata\\v3\\metadata.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\type\\tracing\\v3\\custom_tag.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\type\\v3\\hash_policy.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\type\\v3\\http.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\type\\v3\\http_status.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\type\\v3\\percent.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\type\\v3\\range.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\type\\v3\\ratelimit_unit.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\type\\v3\\semantic_version.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\envoy\\type\\v3\\token_bucket.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\google\\api\\annotations.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\google\\api\\expr\\v1alpha1\\checked.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\google\\api\\expr\\v1alpha1\\syntax.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\google\\api\\http.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\google\\api\\httpbody.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\google\\protobuf\\any.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\google\\protobuf\\descriptor.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\google\\protobuf\\duration.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\google\\protobuf\\empty.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\google\\protobuf\\struct.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\google\\protobuf\\timestamp.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\google\\protobuf\\wrappers.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\google\\rpc\\status.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\opencensus\\proto\\trace\\v1\\trace_config.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\src\\proto\\grpc\\lookup\\v1\\rls_config.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\udpa\\annotations\\migrate.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\udpa\\annotations\\security.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\udpa\\annotations\\sensitive.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\udpa\\annotations\\status.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\udpa\\annotations\\versioning.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\validate\\validate.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\xds\\annotations\\v3\\migrate.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\xds\\annotations\\v3\\security.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\xds\\annotations\\v3\\sensitive.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\xds\\annotations\\v3\\status.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\xds\\annotations\\v3\\versioning.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\xds\\core\\v3\\authority.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\xds\\core\\v3\\collection_entry.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\xds\\core\\v3\\context_params.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\xds\\core\\v3\\extension.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\xds\\core\\v3\\resource.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\xds\\core\\v3\\resource_locator.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\xds\\core\\v3\\resource_name.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\xds\\type\\matcher\\v3\\matcher.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\xds\\type\\matcher\\v3\\regex.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\xds\\type\\matcher\\v3\\string.upbdefs.c " +
     "src\\core\\ext\\upbdefs-generated\\xds\\type\\v3\\typed_struct.upbdefs.c " +
     "src\\core\\ext\\xds\\certificate_provider_registry.cc " +
     "src\\core\\ext\\xds\\certificate_provider_store.cc " +
     "src\\core\\ext\\xds\\file_watcher_certificate_provider_factory.cc " +
     "src\\core\\ext\\xds\\xds_api.cc " +
     "src\\core\\ext\\xds\\xds_bootstrap.cc " +
     "src\\core\\ext\\xds\\xds_certificate_provider.cc " +
     "src\\core\\ext\\xds\\xds_channel_stack_modifier.cc " +
     "src\\core\\ext\\xds\\xds_client.cc " +
     "src\\core\\ext\\xds\\xds_client_stats.cc " +
     "src\\core\\ext\\xds\\xds_cluster.cc " +
     "src\\core\\ext\\xds\\xds_cluster_specifier_plugin.cc " +
     "src\\core\\ext\\xds\\xds_common_types.cc " +
     "src\\core\\ext\\xds\\xds_endpoint.cc " +
     "src\\core\\ext\\xds\\xds_http_fault_filter.cc " +
     "src\\core\\ext\\xds\\xds_http_filters.cc " +
     "src\\core\\ext\\xds\\xds_http_rbac_filter.cc " +
     "src\\core\\ext\\xds\\xds_lb_policy_registry.cc " +
     "src\\core\\ext\\xds\\xds_listener.cc " +
     "src\\core\\ext\\xds\\xds_resource_type.cc " +
     "src\\core\\ext\\xds\\xds_route_config.cc " +
     "src\\core\\ext\\xds\\xds_routing.cc " +
     "src\\core\\ext\\xds\\xds_server_config_fetcher.cc " +
     "src\\core\\lib\\address_utils\\parse_address.cc " +
     "src\\core\\lib\\address_utils\\sockaddr_utils.cc " +
     "src\\core\\lib\\backoff\\backoff.cc " +
     "src\\core\\lib\\channel\\channel_args.cc " +
     "src\\core\\lib\\channel\\channel_args_preconditioning.cc " +
     "src\\core\\lib\\channel\\channel_stack.cc " +
     "src\\core\\lib\\channel\\channel_stack_builder.cc " +
     "src\\core\\lib\\channel\\channel_stack_builder_impl.cc " +
     "src\\core\\lib\\channel\\channel_trace.cc " +
     "src\\core\\lib\\channel\\channelz.cc " +
     "src\\core\\lib\\channel\\channelz_registry.cc " +
     "src\\core\\lib\\channel\\connected_channel.cc " +
     "src\\core\\lib\\channel\\promise_based_filter.cc " +
     "src\\core\\lib\\channel\\status_util.cc " +
     "src\\core\\lib\\compression\\compression.cc " +
     "src\\core\\lib\\compression\\compression_internal.cc " +
     "src\\core\\lib\\compression\\message_compress.cc " +
     "src\\core\\lib\\config\\core_configuration.cc " +
     "src\\core\\lib\\debug\\stats.cc " +
     "src\\core\\lib\\debug\\stats_data.cc " +
     "src\\core\\lib\\debug\\trace.cc " +
     "src\\core\\lib\\event_engine\\channel_args_endpoint_config.cc " +
     "src\\core\\lib\\event_engine\\default_event_engine_factory.cc " +
     "src\\core\\lib\\event_engine\\event_engine.cc " +
     "src\\core\\lib\\event_engine\\iomgr_engine.cc " +
     "src\\core\\lib\\event_engine\\memory_allocator.cc " +
     "src\\core\\lib\\event_engine\\resolved_address.cc " +
     "src\\core\\lib\\event_engine\\slice.cc " +
     "src\\core\\lib\\event_engine\\slice_buffer.cc " +
     "src\\core\\lib\\event_engine\\trace.cc " +
     "src\\core\\lib\\gpr\\alloc.cc " +
     "src\\core\\lib\\gpr\\atm.cc " +
     "src\\core\\lib\\gpr\\cpu_iphone.cc " +
     "src\\core\\lib\\gpr\\cpu_linux.cc " +
     "src\\core\\lib\\gpr\\cpu_posix.cc " +
     "src\\core\\lib\\gpr\\cpu_windows.cc " +
     "src\\core\\lib\\gpr\\env_linux.cc " +
     "src\\core\\lib\\gpr\\env_posix.cc " +
     "src\\core\\lib\\gpr\\env_windows.cc " +
     "src\\core\\lib\\gpr\\log.cc " +
     "src\\core\\lib\\gpr\\log_android.cc " +
     "src\\core\\lib\\gpr\\log_linux.cc " +
     "src\\core\\lib\\gpr\\log_posix.cc " +
     "src\\core\\lib\\gpr\\log_windows.cc " +
     "src\\core\\lib\\gpr\\murmur_hash.cc " +
     "src\\core\\lib\\gpr\\string.cc " +
     "src\\core\\lib\\gpr\\string_posix.cc " +
     "src\\core\\lib\\gpr\\string_util_windows.cc " +
     "src\\core\\lib\\gpr\\string_windows.cc " +
     "src\\core\\lib\\gpr\\sync.cc " +
     "src\\core\\lib\\gpr\\sync_abseil.cc " +
     "src\\core\\lib\\gpr\\sync_posix.cc " +
     "src\\core\\lib\\gpr\\sync_windows.cc " +
     "src\\core\\lib\\gpr\\time.cc " +
     "src\\core\\lib\\gpr\\time_posix.cc " +
     "src\\core\\lib\\gpr\\time_precise.cc " +
     "src\\core\\lib\\gpr\\time_windows.cc " +
     "src\\core\\lib\\gpr\\tmpfile_msys.cc " +
     "src\\core\\lib\\gpr\\tmpfile_posix.cc " +
     "src\\core\\lib\\gpr\\tmpfile_windows.cc " +
     "src\\core\\lib\\gpr\\wrap_memcpy.cc " +
     "src\\core\\lib\\gprpp\\examine_stack.cc " +
     "src\\core\\lib\\gprpp\\fork.cc " +
     "src\\core\\lib\\gprpp\\global_config_env.cc " +
     "src\\core\\lib\\gprpp\\host_port.cc " +
     "src\\core\\lib\\gprpp\\mpscq.cc " +
     "src\\core\\lib\\gprpp\\stat_posix.cc " +
     "src\\core\\lib\\gprpp\\stat_windows.cc " +
     "src\\core\\lib\\gprpp\\status_helper.cc " +
     "src\\core\\lib\\gprpp\\thd_posix.cc " +
     "src\\core\\lib\\gprpp\\thd_windows.cc " +
     "src\\core\\lib\\gprpp\\time.cc " +
     "src\\core\\lib\\gprpp\\time_util.cc " +
     "src\\core\\lib\\http\\format_request.cc " +
     "src\\core\\lib\\http\\httpcli.cc " +
     "src\\core\\lib\\http\\httpcli_security_connector.cc " +
     "src\\core\\lib\\http\\parser.cc " +
     "src\\core\\lib\\iomgr\\buffer_list.cc " +
     "src\\core\\lib\\iomgr\\call_combiner.cc " +
     "src\\core\\lib\\iomgr\\cfstream_handle.cc " +
     "src\\core\\lib\\iomgr\\combiner.cc " +
     "src\\core\\lib\\iomgr\\dualstack_socket_posix.cc " +
     "src\\core\\lib\\iomgr\\endpoint.cc " +
     "src\\core\\lib\\iomgr\\endpoint_cfstream.cc " +
     "src\\core\\lib\\iomgr\\endpoint_pair_posix.cc " +
     "src\\core\\lib\\iomgr\\endpoint_pair_windows.cc " +
     "src\\core\\lib\\iomgr\\error.cc " +
     "src\\core\\lib\\iomgr\\error_cfstream.cc " +
     "src\\core\\lib\\iomgr\\ev_apple.cc " +
     "src\\core\\lib\\iomgr\\ev_epoll1_linux.cc " +
     "src\\core\\lib\\iomgr\\ev_poll_posix.cc " +
     "src\\core\\lib\\iomgr\\ev_posix.cc " +
     "src\\core\\lib\\iomgr\\ev_windows.cc " +
     "src\\core\\lib\\iomgr\\exec_ctx.cc " +
     "src\\core\\lib\\iomgr\\executor.cc " +
     "src\\core\\lib\\iomgr\\executor\\mpmcqueue.cc " +
     "src\\core\\lib\\iomgr\\executor\\threadpool.cc " +
     "src\\core\\lib\\iomgr\\fork_posix.cc " +
     "src\\core\\lib\\iomgr\\fork_windows.cc " +
     "src\\core\\lib\\iomgr\\gethostname_fallback.cc " +
     "src\\core\\lib\\iomgr\\gethostname_host_name_max.cc " +
     "src\\core\\lib\\iomgr\\gethostname_sysconf.cc " +
     "src\\core\\lib\\iomgr\\grpc_if_nametoindex_posix.cc " +
     "src\\core\\lib\\iomgr\\grpc_if_nametoindex_unsupported.cc " +
     "src\\core\\lib\\iomgr\\internal_errqueue.cc " +
     "src\\core\\lib\\iomgr\\iocp_windows.cc " +
     "src\\core\\lib\\iomgr\\iomgr.cc " +
     "src\\core\\lib\\iomgr\\iomgr_internal.cc " +
     "src\\core\\lib\\iomgr\\iomgr_posix.cc " +
     "src\\core\\lib\\iomgr\\iomgr_posix_cfstream.cc " +
     "src\\core\\lib\\iomgr\\iomgr_windows.cc " +
     "src\\core\\lib\\iomgr\\load_file.cc " +
     "src\\core\\lib\\iomgr\\lockfree_event.cc " +
     "src\\core\\lib\\iomgr\\polling_entity.cc " +
     "src\\core\\lib\\iomgr\\pollset.cc " +
     "src\\core\\lib\\iomgr\\pollset_set.cc " +
     "src\\core\\lib\\iomgr\\pollset_set_windows.cc " +
     "src\\core\\lib\\iomgr\\pollset_windows.cc " +
     "src\\core\\lib\\iomgr\\resolve_address.cc " +
     "src\\core\\lib\\iomgr\\resolve_address_posix.cc " +
     "src\\core\\lib\\iomgr\\resolve_address_windows.cc " +
     "src\\core\\lib\\iomgr\\sockaddr_utils_posix.cc " +
     "src\\core\\lib\\iomgr\\socket_factory_posix.cc " +
     "src\\core\\lib\\iomgr\\socket_mutator.cc " +
     "src\\core\\lib\\iomgr\\socket_utils_common_posix.cc " +
     "src\\core\\lib\\iomgr\\socket_utils_linux.cc " +
     "src\\core\\lib\\iomgr\\socket_utils_posix.cc " +
     "src\\core\\lib\\iomgr\\socket_utils_windows.cc " +
     "src\\core\\lib\\iomgr\\socket_windows.cc " +
     "src\\core\\lib\\iomgr\\tcp_client.cc " +
     "src\\core\\lib\\iomgr\\tcp_client_cfstream.cc " +
     "src\\core\\lib\\iomgr\\tcp_client_posix.cc " +
     "src\\core\\lib\\iomgr\\tcp_client_windows.cc " +
     "src\\core\\lib\\iomgr\\tcp_posix.cc " +
     "src\\core\\lib\\iomgr\\tcp_server.cc " +
     "src\\core\\lib\\iomgr\\tcp_server_posix.cc " +
     "src\\core\\lib\\iomgr\\tcp_server_utils_posix_common.cc " +
     "src\\core\\lib\\iomgr\\tcp_server_utils_posix_ifaddrs.cc " +
     "src\\core\\lib\\iomgr\\tcp_server_utils_posix_noifaddrs.cc " +
     "src\\core\\lib\\iomgr\\tcp_server_windows.cc " +
     "src\\core\\lib\\iomgr\\tcp_windows.cc " +
     "src\\core\\lib\\iomgr\\time_averaged_stats.cc " +
     "src\\core\\lib\\iomgr\\timer.cc " +
     "src\\core\\lib\\iomgr\\timer_generic.cc " +
     "src\\core\\lib\\iomgr\\timer_heap.cc " +
     "src\\core\\lib\\iomgr\\timer_manager.cc " +
     "src\\core\\lib\\iomgr\\unix_sockets_posix.cc " +
     "src\\core\\lib\\iomgr\\unix_sockets_posix_noop.cc " +
     "src\\core\\lib\\iomgr\\wakeup_fd_eventfd.cc " +
     "src\\core\\lib\\iomgr\\wakeup_fd_nospecial.cc " +
     "src\\core\\lib\\iomgr\\wakeup_fd_pipe.cc " +
     "src\\core\\lib\\iomgr\\wakeup_fd_posix.cc " +
     "src\\core\\lib\\iomgr\\work_serializer.cc " +
     "src\\core\\lib\\json\\json_reader.cc " +
     "src\\core\\lib\\json\\json_util.cc " +
     "src\\core\\lib\\json\\json_writer.cc " +
     "src\\core\\lib\\matchers\\matchers.cc " +
     "src\\core\\lib\\profiling\\basic_timers.cc " +
     "src\\core\\lib\\profiling\\stap_timers.cc " +
     "src\\core\\lib\\promise\\activity.cc " +
     "src\\core\\lib\\promise\\sleep.cc " +
     "src\\core\\lib\\resolver\\resolver.cc " +
     "src\\core\\lib\\resolver\\resolver_registry.cc " +
     "src\\core\\lib\\resolver\\server_address.cc " +
     "src\\core\\lib\\resource_quota\\api.cc " +
     "src\\core\\lib\\resource_quota\\arena.cc " +
     "src\\core\\lib\\resource_quota\\memory_quota.cc " +
     "src\\core\\lib\\resource_quota\\resource_quota.cc " +
     "src\\core\\lib\\resource_quota\\thread_quota.cc " +
     "src\\core\\lib\\resource_quota\\trace.cc " +
     "src\\core\\lib\\security\\authorization\\authorization_policy_provider_vtable.cc " +
     "src\\core\\lib\\security\\authorization\\evaluate_args.cc " +
     "src\\core\\lib\\security\\authorization\\grpc_authorization_engine.cc " +
     "src\\core\\lib\\security\\authorization\\grpc_server_authz_filter.cc " +
     "src\\core\\lib\\security\\authorization\\matchers.cc " +
     "src\\core\\lib\\security\\authorization\\rbac_policy.cc " +
     "src\\core\\lib\\security\\context\\security_context.cc " +
     "src\\core\\lib\\security\\credentials\\alts\\alts_credentials.cc " +
     "src\\core\\lib\\security\\credentials\\alts\\check_gcp_environment.cc " +
     "src\\core\\lib\\security\\credentials\\alts\\check_gcp_environment_linux.cc " +
     "src\\core\\lib\\security\\credentials\\alts\\check_gcp_environment_no_op.cc " +
     "src\\core\\lib\\security\\credentials\\alts\\check_gcp_environment_windows.cc " +
     "src\\core\\lib\\security\\credentials\\alts\\grpc_alts_credentials_client_options.cc " +
     "src\\core\\lib\\security\\credentials\\alts\\grpc_alts_credentials_options.cc " +
     "src\\core\\lib\\security\\credentials\\alts\\grpc_alts_credentials_server_options.cc " +
     "src\\core\\lib\\security\\credentials\\call_creds_util.cc " +
     "src\\core\\lib\\security\\credentials\\channel_creds_registry_init.cc " +
     "src\\core\\lib\\security\\credentials\\composite\\composite_credentials.cc " +
     "src\\core\\lib\\security\\credentials\\credentials.cc " +
     "src\\core\\lib\\security\\credentials\\external\\aws_external_account_credentials.cc " +
     "src\\core\\lib\\security\\credentials\\external\\aws_request_signer.cc " +
     "src\\core\\lib\\security\\credentials\\external\\external_account_credentials.cc " +
     "src\\core\\lib\\security\\credentials\\external\\file_external_account_credentials.cc " +
     "src\\core\\lib\\security\\credentials\\external\\url_external_account_credentials.cc " +
     "src\\core\\lib\\security\\credentials\\fake\\fake_credentials.cc " +
     "src\\core\\lib\\security\\credentials\\google_default\\credentials_generic.cc " +
     "src\\core\\lib\\security\\credentials\\google_default\\google_default_credentials.cc " +
     "src\\core\\lib\\security\\credentials\\iam\\iam_credentials.cc " +
     "src\\core\\lib\\security\\credentials\\insecure\\insecure_credentials.cc " +
     "src\\core\\lib\\security\\credentials\\jwt\\json_token.cc " +
     "src\\core\\lib\\security\\credentials\\jwt\\jwt_credentials.cc " +
     "src\\core\\lib\\security\\credentials\\jwt\\jwt_verifier.cc " +
     "src\\core\\lib\\security\\credentials\\local\\local_credentials.cc " +
     "src\\core\\lib\\security\\credentials\\oauth2\\oauth2_credentials.cc " +
     "src\\core\\lib\\security\\credentials\\plugin\\plugin_credentials.cc " +
     "src\\core\\lib\\security\\credentials\\ssl\\ssl_credentials.cc " +
     "src\\core\\lib\\security\\credentials\\tls\\grpc_tls_certificate_distributor.cc " +
     "src\\core\\lib\\security\\credentials\\tls\\grpc_tls_certificate_provider.cc " +
     "src\\core\\lib\\security\\credentials\\tls\\grpc_tls_certificate_verifier.cc " +
     "src\\core\\lib\\security\\credentials\\tls\\grpc_tls_credentials_options.cc " +
     "src\\core\\lib\\security\\credentials\\tls\\tls_credentials.cc " +
     "src\\core\\lib\\security\\credentials\\tls\\tls_utils.cc " +
     "src\\core\\lib\\security\\credentials\\xds\\xds_credentials.cc " +
     "src\\core\\lib\\security\\security_connector\\alts\\alts_security_connector.cc " +
     "src\\core\\lib\\security\\security_connector\\fake\\fake_security_connector.cc " +
     "src\\core\\lib\\security\\security_connector\\insecure\\insecure_security_connector.cc " +
     "src\\core\\lib\\security\\security_connector\\load_system_roots_fallback.cc " +
     "src\\core\\lib\\security\\security_connector\\load_system_roots_linux.cc " +
     "src\\core\\lib\\security\\security_connector\\local\\local_security_connector.cc " +
     "src\\core\\lib\\security\\security_connector\\security_connector.cc " +
     "src\\core\\lib\\security\\security_connector\\ssl\\ssl_security_connector.cc " +
     "src\\core\\lib\\security\\security_connector\\ssl_utils.cc " +
     "src\\core\\lib\\security\\security_connector\\ssl_utils_config.cc " +
     "src\\core\\lib\\security\\security_connector\\tls\\tls_security_connector.cc " +
     "src\\core\\lib\\security\\transport\\client_auth_filter.cc " +
     "src\\core\\lib\\security\\transport\\secure_endpoint.cc " +
     "src\\core\\lib\\security\\transport\\security_handshaker.cc " +
     "src\\core\\lib\\security\\transport\\server_auth_filter.cc " +
     "src\\core\\lib\\security\\transport\\tsi_error.cc " +
     "src\\core\\lib\\security\\util\\json_util.cc " +
     "src\\core\\lib\\service_config\\service_config_impl.cc " +
     "src\\core\\lib\\service_config\\service_config_parser.cc " +
     "src\\core\\lib\\slice\\b64.cc " +
     "src\\core\\lib\\slice\\percent_encoding.cc " +
     "src\\core\\lib\\slice\\slice.cc " +
     "src\\core\\lib\\slice\\slice_api.cc " +
     "src\\core\\lib\\slice\\slice_buffer.cc " +
     "src\\core\\lib\\slice\\slice_buffer_api.cc " +
     "src\\core\\lib\\slice\\slice_refcount.cc " +
     "src\\core\\lib\\slice\\slice_split.cc " +
     "src\\core\\lib\\slice\\slice_string_helpers.cc " +
     "src\\core\\lib\\surface\\api_trace.cc " +
     "src\\core\\lib\\surface\\builtins.cc " +
     "src\\core\\lib\\surface\\byte_buffer.cc " +
     "src\\core\\lib\\surface\\byte_buffer_reader.cc " +
     "src\\core\\lib\\surface\\call.cc " +
     "src\\core\\lib\\surface\\call_details.cc " +
     "src\\core\\lib\\surface\\call_log_batch.cc " +
     "src\\core\\lib\\surface\\channel.cc " +
     "src\\core\\lib\\surface\\channel_init.cc " +
     "src\\core\\lib\\surface\\channel_ping.cc " +
     "src\\core\\lib\\surface\\channel_stack_type.cc " +
     "src\\core\\lib\\surface\\completion_queue.cc " +
     "src\\core\\lib\\surface\\completion_queue_factory.cc " +
     "src\\core\\lib\\surface\\event_string.cc " +
     "src\\core\\lib\\surface\\init.cc " +
     "src\\core\\lib\\surface\\lame_client.cc " +
     "src\\core\\lib\\surface\\metadata_array.cc " +
     "src\\core\\lib\\surface\\server.cc " +
     "src\\core\\lib\\surface\\validate_metadata.cc " +
     "src\\core\\lib\\surface\\version.cc " +
     "src\\core\\lib\\transport\\bdp_estimator.cc " +
+    "src\\core\\lib\\transport\\byte_stream.cc " +
     "src\\core\\lib\\transport\\connectivity_state.cc " +
     "src\\core\\lib\\transport\\error_utils.cc " +
     "src\\core\\lib\\transport\\handshaker.cc " +
     "src\\core\\lib\\transport\\handshaker_registry.cc " +
     "src\\core\\lib\\transport\\http_connect_handshaker.cc " +
     "src\\core\\lib\\transport\\metadata_batch.cc " +
     "src\\core\\lib\\transport\\parsed_metadata.cc " +
     "src\\core\\lib\\transport\\pid_controller.cc " +
     "src\\core\\lib\\transport\\status_conversion.cc " +
     "src\\core\\lib\\transport\\tcp_connect_handshaker.cc " +
     "src\\core\\lib\\transport\\timeout_encoding.cc " +
     "src\\core\\lib\\transport\\transport.cc " +
     "src\\core\\lib\\transport\\transport_op_string.cc " +
     "src\\core\\lib\\uri\\uri_parser.cc " +
     "src\\core\\plugin_registry\\grpc_plugin_registry.cc " +
     "src\\core\\plugin_registry\\grpc_plugin_registry_extra.cc " +
     "src\\core\\tsi\\alts\\crypt\\aes_gcm.cc " +
     "src\\core\\tsi\\alts\\crypt\\gsec.cc " +
     "src\\core\\tsi\\alts\\frame_protector\\alts_counter.cc " +
     "src\\core\\tsi\\alts\\frame_protector\\alts_crypter.cc " +
     "src\\core\\tsi\\alts\\frame_protector\\alts_frame_protector.cc " +
     "src\\core\\tsi\\alts\\frame_protector\\alts_record_protocol_crypter_common.cc " +
     "src\\core\\tsi\\alts\\frame_protector\\alts_seal_privacy_integrity_crypter.cc " +
     "src\\core\\tsi\\alts\\frame_protector\\alts_unseal_privacy_integrity_crypter.cc " +
     "src\\core\\tsi\\alts\\frame_protector\\frame_handler.cc " +
     "src\\core\\tsi\\alts\\handshaker\\alts_handshaker_client.cc " +
     "src\\core\\tsi\\alts\\handshaker\\alts_shared_resource.cc " +
     "src\\core\\tsi\\alts\\handshaker\\alts_tsi_handshaker.cc " +
     "src\\core\\tsi\\alts\\handshaker\\alts_tsi_utils.cc " +
     "src\\core\\tsi\\alts\\handshaker\\transport_security_common_api.cc " +
     "src\\core\\tsi\\alts\\zero_copy_frame_protector\\alts_grpc_integrity_only_record_protocol.cc " +
     "src\\core\\tsi\\alts\\zero_copy_frame_protector\\alts_grpc_privacy_integrity_record_protocol.cc " +
     "src\\core\\tsi\\alts\\zero_copy_frame_protector\\alts_grpc_record_protocol_common.cc " +
     "src\\core\\tsi\\alts\\zero_copy_frame_protector\\alts_iovec_record_protocol.cc " +
     "src\\core\\tsi\\alts\\zero_copy_frame_protector\\alts_zero_copy_grpc_protector.cc " +
     "src\\core\\tsi\\fake_transport_security.cc " +
     "src\\core\\tsi\\local_transport_security.cc " +
     "src\\core\\tsi\\ssl\\key_logging\\ssl_key_logging.cc " +
     "src\\core\\tsi\\ssl\\session_cache\\ssl_session_boringssl.cc " +
     "src\\core\\tsi\\ssl\\session_cache\\ssl_session_cache.cc " +
     "src\\core\\tsi\\ssl\\session_cache\\ssl_session_openssl.cc " +
     "src\\core\\tsi\\ssl_transport_security.cc " +
     "src\\core\\tsi\\transport_security.cc " +
     "src\\core\\tsi\\transport_security_grpc.cc " +
     "src\\php\\ext\\grpc\\byte_buffer.c " +
     "src\\php\\ext\\grpc\\call.c " +
     "src\\php\\ext\\grpc\\call_credentials.c " +
     "src\\php\\ext\\grpc\\channel.c " +
     "src\\php\\ext\\grpc\\channel_credentials.c " +
     "src\\php\\ext\\grpc\\completion_queue.c " +
     "src\\php\\ext\\grpc\\php_grpc.c " +
     "src\\php\\ext\\grpc\\server.c " +
     "src\\php\\ext\\grpc\\server_credentials.c " +
     "src\\php\\ext\\grpc\\timeval.c " +
     "third_party\\abseil-cpp\\absl\\base\\internal\\cycleclock.cc " +
     "third_party\\abseil-cpp\\absl\\base\\internal\\low_level_alloc.cc " +
     "third_party\\abseil-cpp\\absl\\base\\internal\\raw_logging.cc " +
     "third_party\\abseil-cpp\\absl\\base\\internal\\spinlock.cc " +
     "third_party\\abseil-cpp\\absl\\base\\internal\\spinlock_wait.cc " +
     "third_party\\abseil-cpp\\absl\\base\\internal\\sysinfo.cc " +
     "third_party\\abseil-cpp\\absl\\base\\internal\\thread_identity.cc " +
     "third_party\\abseil-cpp\\absl\\base\\internal\\throw_delegate.cc " +
     "third_party\\abseil-cpp\\absl\\base\\internal\\unscaledcycleclock.cc " +
     "third_party\\abseil-cpp\\absl\\base\\log_severity.cc " +
     "third_party\\abseil-cpp\\absl\\container\\internal\\hashtablez_sampler.cc " +
     "third_party\\abseil-cpp\\absl\\container\\internal\\hashtablez_sampler_force_weak_definition.cc " +
     "third_party\\abseil-cpp\\absl\\container\\internal\\raw_hash_set.cc " +
     "third_party\\abseil-cpp\\absl\\debugging\\internal\\address_is_readable.cc " +
     "third_party\\abseil-cpp\\absl\\debugging\\internal\\demangle.cc " +
     "third_party\\abseil-cpp\\absl\\debugging\\internal\\elf_mem_image.cc " +
     "third_party\\abseil-cpp\\absl\\debugging\\internal\\vdso_support.cc " +
     "third_party\\abseil-cpp\\absl\\debugging\\stacktrace.cc " +
     "third_party\\abseil-cpp\\absl\\debugging\\symbolize.cc " +
     "third_party\\abseil-cpp\\absl\\hash\\internal\\city.cc " +
     "third_party\\abseil-cpp\\absl\\hash\\internal\\hash.cc " +
     "third_party\\abseil-cpp\\absl\\hash\\internal\\low_level_hash.cc " +
     "third_party\\abseil-cpp\\absl\\numeric\\int128.cc " +
     "third_party\\abseil-cpp\\absl\\profiling\\internal\\exponential_biased.cc " +
     "third_party\\abseil-cpp\\absl\\random\\discrete_distribution.cc " +
     "third_party\\abseil-cpp\\absl\\random\\gaussian_distribution.cc " +
     "third_party\\abseil-cpp\\absl\\random\\internal\\pool_urbg.cc " +
     "third_party\\abseil-cpp\\absl\\random\\internal\\randen.cc " +
     "third_party\\abseil-cpp\\absl\\random\\internal\\randen_detect.cc " +
     "third_party\\abseil-cpp\\absl\\random\\internal\\randen_hwaes.cc " +
     "third_party\\abseil-cpp\\absl\\random\\internal\\randen_round_keys.cc " +
     "third_party\\abseil-cpp\\absl\\random\\internal\\randen_slow.cc " +
     "third_party\\abseil-cpp\\absl\\random\\internal\\seed_material.cc " +
     "third_party\\abseil-cpp\\absl\\random\\seed_gen_exception.cc " +
     "third_party\\abseil-cpp\\absl\\random\\seed_sequences.cc " +
     "third_party\\abseil-cpp\\absl\\status\\status.cc " +
     "third_party\\abseil-cpp\\absl\\status\\status_payload_printer.cc " +
     "third_party\\abseil-cpp\\absl\\status\\statusor.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\ascii.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\charconv.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\cord.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\escaping.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\internal\\charconv_bigint.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\internal\\charconv_parse.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\internal\\cord_internal.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\internal\\cord_rep_btree.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\internal\\cord_rep_btree_navigator.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\internal\\cord_rep_btree_reader.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\internal\\cord_rep_consume.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\internal\\cord_rep_ring.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\internal\\cordz_functions.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\internal\\cordz_handle.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\internal\\cordz_info.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\internal\\escaping.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\internal\\memutil.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\internal\\ostringstream.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\internal\\str_format\\arg.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\internal\\str_format\\bind.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\internal\\str_format\\extension.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\internal\\str_format\\float_conversion.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\internal\\str_format\\output.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\internal\\str_format\\parser.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\internal\\utf8.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\match.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\numbers.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\str_cat.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\str_replace.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\str_split.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\string_view.cc " +
     "third_party\\abseil-cpp\\absl\\strings\\substitute.cc " +
     "third_party\\abseil-cpp\\absl\\synchronization\\barrier.cc " +
     "third_party\\abseil-cpp\\absl\\synchronization\\blocking_counter.cc " +
     "third_party\\abseil-cpp\\absl\\synchronization\\internal\\create_thread_identity.cc " +
     "third_party\\abseil-cpp\\absl\\synchronization\\internal\\graphcycles.cc " +
     "third_party\\abseil-cpp\\absl\\synchronization\\internal\\per_thread_sem.cc " +
     "third_party\\abseil-cpp\\absl\\synchronization\\internal\\waiter.cc " +
     "third_party\\abseil-cpp\\absl\\synchronization\\mutex.cc " +
     "third_party\\abseil-cpp\\absl\\synchronization\\notification.cc " +
     "third_party\\abseil-cpp\\absl\\time\\civil_time.cc " +
     "third_party\\abseil-cpp\\absl\\time\\clock.cc " +
     "third_party\\abseil-cpp\\absl\\time\\duration.cc " +
     "third_party\\abseil-cpp\\absl\\time\\format.cc " +
     "third_party\\abseil-cpp\\absl\\time\\internal\\cctz\\src\\civil_time_detail.cc " +
     "third_party\\abseil-cpp\\absl\\time\\internal\\cctz\\src\\time_zone_fixed.cc " +
     "third_party\\abseil-cpp\\absl\\time\\internal\\cctz\\src\\time_zone_format.cc " +
     "third_party\\abseil-cpp\\absl\\time\\internal\\cctz\\src\\time_zone_if.cc " +
     "third_party\\abseil-cpp\\absl\\time\\internal\\cctz\\src\\time_zone_impl.cc " +
     "third_party\\abseil-cpp\\absl\\time\\internal\\cctz\\src\\time_zone_info.cc " +
     "third_party\\abseil-cpp\\absl\\time\\internal\\cctz\\src\\time_zone_libc.cc " +
     "third_party\\abseil-cpp\\absl\\time\\internal\\cctz\\src\\time_zone_lookup.cc " +
     "third_party\\abseil-cpp\\absl\\time\\internal\\cctz\\src\\time_zone_posix.cc " +
     "third_party\\abseil-cpp\\absl\\time\\internal\\cctz\\src\\zone_info_source.cc " +
     "third_party\\abseil-cpp\\absl\\time\\time.cc " +
     "third_party\\abseil-cpp\\absl\\types\\bad_optional_access.cc " +
     "third_party\\abseil-cpp\\absl\\types\\bad_variant_access.cc " +
     "third_party\\address_sorting\\address_sorting.c " +
     "third_party\\address_sorting\\address_sorting_posix.c " +
     "third_party\\address_sorting\\address_sorting_windows.c " +
     "third_party\\boringssl-with-bazel\\err_data.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\a_bitstr.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\a_bool.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\a_d2i_fp.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\a_dup.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\a_enum.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\a_gentm.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\a_i2d_fp.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\a_int.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\a_mbstr.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\a_object.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\a_octet.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\a_print.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\a_strex.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\a_strnid.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\a_time.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\a_type.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\a_utctm.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\a_utf8.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\asn1_lib.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\asn1_par.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\asn_pack.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\f_int.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\f_string.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\tasn_dec.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\tasn_enc.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\tasn_fre.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\tasn_new.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\tasn_typ.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\tasn_utl.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\asn1\\time_support.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\base64\\base64.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\bio\\bio.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\bio\\bio_mem.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\bio\\connect.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\bio\\fd.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\bio\\file.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\bio\\hexdump.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\bio\\pair.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\bio\\printf.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\bio\\socket.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\bio\\socket_helper.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\blake2\\blake2.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\bn_extra\\bn_asn1.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\bn_extra\\convert.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\buf\\buf.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\bytestring\\asn1_compat.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\bytestring\\ber.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\bytestring\\cbb.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\bytestring\\cbs.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\bytestring\\unicode.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\chacha\\chacha.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\cipher_extra\\cipher_extra.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\cipher_extra\\derive_key.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\cipher_extra\\e_aesccm.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\cipher_extra\\e_aesctrhmac.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\cipher_extra\\e_aesgcmsiv.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\cipher_extra\\e_chacha20poly1305.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\cipher_extra\\e_null.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\cipher_extra\\e_rc2.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\cipher_extra\\e_rc4.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\cipher_extra\\e_tls.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\cipher_extra\\tls_cbc.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\cmac\\cmac.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\conf\\conf.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\cpu-aarch64-fuchsia.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\cpu-aarch64-linux.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\cpu-aarch64-win.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\cpu-arm-linux.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\cpu-arm.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\cpu-intel.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\cpu-ppc64le.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\crypto.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\curve25519\\curve25519.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\curve25519\\spake25519.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\dh_extra\\dh_asn1.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\dh_extra\\params.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\digest_extra\\digest_extra.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\dsa\\dsa.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\dsa\\dsa_asn1.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\ec_extra\\ec_asn1.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\ec_extra\\ec_derive.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\ec_extra\\hash_to_curve.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\ecdh_extra\\ecdh_extra.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\ecdsa_extra\\ecdsa_asn1.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\engine\\engine.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\err\\err.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\evp\\digestsign.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\evp\\evp.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\evp\\evp_asn1.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\evp\\evp_ctx.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\evp\\p_dsa_asn1.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\evp\\p_ec.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\evp\\p_ec_asn1.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\evp\\p_ed25519.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\evp\\p_ed25519_asn1.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\evp\\p_rsa.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\evp\\p_rsa_asn1.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\evp\\p_x25519.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\evp\\p_x25519_asn1.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\evp\\pbkdf.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\evp\\print.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\evp\\scrypt.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\evp\\sign.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\ex_data.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\fipsmodule\\bcm.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\fipsmodule\\fips_shared_support.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\hkdf\\hkdf.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\hpke\\hpke.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\hrss\\hrss.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\lhash\\lhash.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\mem.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\obj\\obj.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\obj\\obj_xref.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\pem\\pem_all.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\pem\\pem_info.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\pem\\pem_lib.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\pem\\pem_oth.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\pem\\pem_pk8.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\pem\\pem_pkey.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\pem\\pem_x509.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\pem\\pem_xaux.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\pkcs7\\pkcs7.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\pkcs7\\pkcs7_x509.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\pkcs8\\p5_pbev2.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\pkcs8\\pkcs8.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\pkcs8\\pkcs8_x509.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\poly1305\\poly1305.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\poly1305\\poly1305_arm.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\poly1305\\poly1305_vec.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\pool\\pool.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\rand_extra\\deterministic.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\rand_extra\\forkunsafe.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\rand_extra\\fuchsia.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\rand_extra\\passive.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\rand_extra\\rand_extra.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\rand_extra\\windows.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\rc4\\rc4.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\refcount_c11.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\refcount_lock.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\rsa_extra\\rsa_asn1.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\rsa_extra\\rsa_print.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\siphash\\siphash.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\stack\\stack.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\thread.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\thread_none.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\thread_pthread.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\thread_win.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\trust_token\\pmbtoken.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\trust_token\\trust_token.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\trust_token\\voprf.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\a_digest.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\a_sign.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\a_verify.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\algorithm.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\asn1_gen.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\by_dir.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\by_file.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\i2d_pr.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\name_print.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\rsa_pss.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\t_crl.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\t_req.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\t_x509.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\t_x509a.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x509.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x509_att.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x509_cmp.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x509_d2.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x509_def.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x509_ext.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x509_lu.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x509_obj.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x509_req.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x509_set.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x509_trs.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x509_txt.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x509_v3.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x509_vfy.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x509_vpm.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x509cset.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x509name.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x509rset.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x509spki.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x_algor.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x_all.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x_attrib.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x_crl.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x_exten.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x_info.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x_name.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x_pkey.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x_pubkey.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x_req.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x_sig.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x_spki.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x_val.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x_x509.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509\\x_x509a.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\pcy_cache.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\pcy_data.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\pcy_lib.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\pcy_map.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\pcy_node.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\pcy_tree.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_akey.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_akeya.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_alt.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_bcons.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_bitst.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_conf.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_cpols.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_crld.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_enum.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_extku.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_genn.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_ia5.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_info.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_int.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_lib.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_ncons.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_ocsp.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_pci.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_pcia.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_pcons.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_pmaps.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_prn.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_purp.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_skey.c " +
     "third_party\\boringssl-with-bazel\\src\\crypto\\x509v3\\v3_utl.c " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\bio_ssl.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\d1_both.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\d1_lib.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\d1_pkt.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\d1_srtp.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\dtls_method.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\dtls_record.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\encrypted_client_hello.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\extensions.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\handoff.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\handshake.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\handshake_client.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\handshake_server.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\s3_both.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\s3_lib.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\s3_pkt.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\ssl_aead_ctx.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\ssl_asn1.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\ssl_buffer.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\ssl_cert.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\ssl_cipher.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\ssl_file.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\ssl_key_share.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\ssl_lib.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\ssl_privkey.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\ssl_session.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\ssl_stat.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\ssl_transcript.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\ssl_versions.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\ssl_x509.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\t1_enc.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\tls13_both.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\tls13_client.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\tls13_enc.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\tls13_server.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\tls_method.cc " +
     "third_party\\boringssl-with-bazel\\src\\ssl\\tls_record.cc " +
     "third_party\\re2\\re2\\bitstate.cc " +
     "third_party\\re2\\re2\\compile.cc " +
     "third_party\\re2\\re2\\dfa.cc " +
     "third_party\\re2\\re2\\filtered_re2.cc " +
     "third_party\\re2\\re2\\mimics_pcre.cc " +
     "third_party\\re2\\re2\\nfa.cc " +
     "third_party\\re2\\re2\\onepass.cc " +
     "third_party\\re2\\re2\\parse.cc " +
     "third_party\\re2\\re2\\perl_groups.cc " +
     "third_party\\re2\\re2\\prefilter.cc " +
     "third_party\\re2\\re2\\prefilter_tree.cc " +
     "third_party\\re2\\re2\\prog.cc " +
     "third_party\\re2\\re2\\re2.cc " +
     "third_party\\re2\\re2\\regexp.cc " +
     "third_party\\re2\\re2\\set.cc " +
     "third_party\\re2\\re2\\simplify.cc " +
     "third_party\\re2\\re2\\stringpiece.cc " +
     "third_party\\re2\\re2\\tostring.cc " +
     "third_party\\re2\\re2\\unicode_casefold.cc " +
     "third_party\\re2\\re2\\unicode_groups.cc " +
     "third_party\\re2\\util\\pcre.cc " +
     "third_party\\re2\\util\\rune.cc " +
     "third_party\\re2\\util\\strutil.cc " +
     "third_party\\upb\\third_party\\utf8_range\\naive.c " +
     "third_party\\upb\\third_party\\utf8_range\\range2-neon.c " +
     "third_party\\upb\\third_party\\utf8_range\\range2-sse.c " +
     "third_party\\upb\\upb\\decode.c " +
     "third_party\\upb\\upb\\decode_fast.c " +
     "third_party\\upb\\upb\\def.c " +
     "third_party\\upb\\upb\\encode.c " +
     "third_party\\upb\\upb\\json_encode.c " +
     "third_party\\upb\\upb\\msg.c " +
     "third_party\\upb\\upb\\reflection.c " +
     "third_party\\upb\\upb\\table.c " +
     "third_party\\upb\\upb\\text_encode.c " +
     "third_party\\upb\\upb\\upb.c " +
     "third_party\\zlib\\adler32.c " +
     "third_party\\zlib\\compress.c " +
     "third_party\\zlib\\crc32.c " +
     "third_party\\zlib\\deflate.c " +
     "third_party\\zlib\\gzclose.c " +
     "third_party\\zlib\\gzlib.c " +
     "third_party\\zlib\\gzread.c " +
     "third_party\\zlib\\gzwrite.c " +
     "third_party\\zlib\\infback.c " +
     "third_party\\zlib\\inffast.c " +
     "third_party\\zlib\\inflate.c " +
     "third_party\\zlib\\inftrees.c " +
     "third_party\\zlib\\trees.c " +
     "third_party\\zlib\\uncompr.c " +
     "third_party\\zlib\\zutil.c " +
     ""
     , null,
     "/DOPENSSL_NO_ASM /D_GNU_SOURCE /DWIN32_LEAN_AND_MEAN "+
     "/D_HAS_EXCEPTIONS=0 /DNOMINMAX /DGRPC_ARES=0 /D_WIN32_WINNT=0x600 "+
     "/I"+configure_module_dirname+" "+
     "/I"+configure_module_dirname+"\\include "+
     "/I"+configure_module_dirname+"\\src\\core\\ext\\upb-generated "+
     "/I"+configure_module_dirname+"\\src\\core\\ext\\upbdefs-generated "+
     "/I"+configure_module_dirname+"\\src\\php\\ext\\grpc "+
     "/I"+configure_module_dirname+"\\third_party\\abseil-cpp "+
     "/I"+configure_module_dirname+"\\third_party\\address_sorting\\include "+
     "/I"+configure_module_dirname+"\\third_party\\boringssl-with-bazel\\src\\include "+
     "/I"+configure_module_dirname+"\\third_party\\re2 "+
     "/I"+configure_module_dirname+"\\third_party\\upb "+
     "/I"+configure_module_dirname+"\\third_party\\xxhash "+
     "/I"+configure_module_dirname+"\\third_party\\zlib ");
 
   base_dir = get_define('BUILD_DIR');
   FSO.CreateFolder(base_dir+"\\ext");
   FSO.CreateFolder(base_dir+"\\ext\\grpc");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\census");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\channel_idle");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\client_channel");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\client_channel\\health");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\client_channel\\lb_policy");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\client_channel\\lb_policy\\grpclb");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\client_channel\\lb_policy\\outlier_detection");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\client_channel\\lb_policy\\pick_first");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\client_channel\\lb_policy\\priority");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\client_channel\\lb_policy\\ring_hash");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\client_channel\\lb_policy\\rls");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\client_channel\\lb_policy\\round_robin");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\client_channel\\lb_policy\\weighted_target");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\client_channel\\lb_policy\\xds");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\client_channel\\resolver");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\client_channel\\resolver\\binder");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\client_channel\\resolver\\dns");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\client_channel\\resolver\\dns\\c_ares");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\client_channel\\resolver\\dns\\native");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\client_channel\\resolver\\fake");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\client_channel\\resolver\\google_c2p");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\client_channel\\resolver\\sockaddr");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\client_channel\\resolver\\xds");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\deadline");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\fault_injection");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\http");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\http\\client");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\http\\message_compress");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\http\\server");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\message_size");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\rbac");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\filters\\server_config_selector");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\transport");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\transport\\chttp2");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\transport\\chttp2\\alpn");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\transport\\chttp2\\client");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\transport\\chttp2\\server");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\transport\\chttp2\\transport");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\transport\\inproc");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\admin");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\admin\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\annotations");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\accesslog");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\accesslog\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\bootstrap");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\bootstrap\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\cluster");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\cluster\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\common");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\common\\matcher");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\common\\matcher\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\core");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\core\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\endpoint");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\endpoint\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\listener");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\listener\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\metrics");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\metrics\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\overload");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\overload\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\rbac");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\rbac\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\route");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\route\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\tap");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\tap\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\trace");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\config\\trace\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\clusters");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\clusters\\aggregate");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\clusters\\aggregate\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\filters");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\filters\\common");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\filters\\common\\fault");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\filters\\common\\fault\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\filters\\http");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\filters\\http\\fault");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\filters\\http\\fault\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\filters\\http\\rbac");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\filters\\http\\rbac\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\filters\\http\\router");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\filters\\http\\router\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\filters\\network");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\filters\\network\\http_connection_manager");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\filters\\network\\http_connection_manager\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\load_balancing_policies");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\load_balancing_policies\\ring_hash");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\load_balancing_policies\\ring_hash\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\load_balancing_policies\\wrr_locality");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\load_balancing_policies\\wrr_locality\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\transport_sockets");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\transport_sockets\\tls");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\extensions\\transport_sockets\\tls\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\service");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\service\\discovery");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\service\\discovery\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\service\\load_stats");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\service\\load_stats\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\service\\status");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\service\\status\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\type");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\type\\http");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\type\\http\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\type\\matcher");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\type\\matcher\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\type\\metadata");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\type\\metadata\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\type\\tracing");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\type\\tracing\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\envoy\\type\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\google");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\google\\api");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\google\\api\\expr");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\google\\api\\expr\\v1alpha1");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\google\\protobuf");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\google\\rpc");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\opencensus");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\opencensus\\proto");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\opencensus\\proto\\trace");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\opencensus\\proto\\trace\\v1");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\src");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\src\\proto");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\src\\proto\\grpc");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\src\\proto\\grpc\\gcp");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\src\\proto\\grpc\\health");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\src\\proto\\grpc\\health\\v1");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\src\\proto\\grpc\\lb");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\src\\proto\\grpc\\lb\\v1");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\src\\proto\\grpc\\lookup");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\src\\proto\\grpc\\lookup\\v1");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\udpa");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\udpa\\annotations");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\validate");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\xds");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\xds\\annotations");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\xds\\annotations\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\xds\\core");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\xds\\core\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\xds\\data");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\xds\\data\\orca");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\xds\\data\\orca\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\xds\\service");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\xds\\service\\orca");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\xds\\service\\orca\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\xds\\type");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\xds\\type\\matcher");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\xds\\type\\matcher\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upb-generated\\xds\\type\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\admin");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\admin\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\annotations");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\accesslog");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\accesslog\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\bootstrap");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\bootstrap\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\cluster");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\cluster\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\common");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\common\\matcher");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\common\\matcher\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\core");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\core\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\endpoint");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\endpoint\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\listener");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\listener\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\metrics");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\metrics\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\overload");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\overload\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\rbac");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\rbac\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\route");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\route\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\tap");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\tap\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\trace");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\config\\trace\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\extensions");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\clusters");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\clusters\\aggregate");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\clusters\\aggregate\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\filters");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\filters\\common");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\filters\\common\\fault");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\filters\\common\\fault\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\filters\\http");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\filters\\http\\fault");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\filters\\http\\fault\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\filters\\http\\rbac");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\filters\\http\\rbac\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\filters\\http\\router");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\filters\\http\\router\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\filters\\network");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\filters\\network\\http_connection_manager");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\filters\\network\\http_connection_manager\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\transport_sockets");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\transport_sockets\\tls");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\extensions\\transport_sockets\\tls\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\service");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\service\\discovery");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\service\\discovery\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\service\\load_stats");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\service\\load_stats\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\service\\status");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\service\\status\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\type");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\type\\http");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\type\\http\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\type\\matcher");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\type\\matcher\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\type\\metadata");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\type\\metadata\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\type\\tracing");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\type\\tracing\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\envoy\\type\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\google");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\google\\api");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\google\\api\\expr");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\google\\api\\expr\\v1alpha1");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\google\\protobuf");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\google\\rpc");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\opencensus");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\opencensus\\proto");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\opencensus\\proto\\trace");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\opencensus\\proto\\trace\\v1");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\src");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\src\\proto");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\src\\proto\\grpc");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\src\\proto\\grpc\\lookup");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\src\\proto\\grpc\\lookup\\v1");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\udpa");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\udpa\\annotations");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\validate");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\xds");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\xds\\annotations");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\xds\\annotations\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\xds\\core");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\xds\\core\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\xds\\type");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\xds\\type\\matcher");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\xds\\type\\matcher\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\upbdefs-generated\\xds\\type\\v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\ext\\xds");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\address_utils");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\backoff");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\channel");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\compression");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\config");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\debug");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\event_engine");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\gpr");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\gprpp");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\http");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\iomgr");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\iomgr\\executor");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\json");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\matchers");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\profiling");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\promise");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\resolver");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\resource_quota");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\authorization");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\context");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\credentials");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\credentials\\alts");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\credentials\\composite");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\credentials\\external");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\credentials\\fake");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\credentials\\google_default");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\credentials\\iam");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\credentials\\insecure");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\credentials\\jwt");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\credentials\\local");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\credentials\\oauth2");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\credentials\\plugin");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\credentials\\ssl");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\credentials\\tls");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\credentials\\xds");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\security_connector");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\security_connector\\alts");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\security_connector\\fake");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\security_connector\\insecure");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\security_connector\\local");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\security_connector\\ssl");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\security_connector\\tls");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\transport");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\security\\util");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\service_config");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\slice");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\surface");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\transport");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\lib\\uri");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\plugin_registry");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\tsi");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\tsi\\alts");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\tsi\\alts\\crypt");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\tsi\\alts\\frame_protector");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\tsi\\alts\\handshaker");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\tsi\\alts\\zero_copy_frame_protector");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\tsi\\ssl");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\tsi\\ssl\\key_logging");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\core\\tsi\\ssl\\session_cache");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\php");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\php\\ext");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\src\\php\\ext\\grpc");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl\\base");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl\\base\\internal");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl\\container");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl\\container\\internal");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl\\debugging");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl\\debugging\\internal");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl\\hash");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl\\hash\\internal");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl\\numeric");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl\\profiling");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl\\profiling\\internal");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl\\random");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl\\random\\internal");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl\\status");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl\\strings");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl\\strings\\internal");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl\\strings\\internal\\str_format");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl\\synchronization");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl\\synchronization\\internal");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl\\time");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl\\time\\internal");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl\\time\\internal\\cctz");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl\\time\\internal\\cctz\\src");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\abseil-cpp\\absl\\types");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\address_sorting");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\asn1");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\base64");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\bio");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\blake2");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\bn_extra");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\buf");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\bytestring");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\chacha");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\cipher_extra");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\cmac");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\conf");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\curve25519");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\dh_extra");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\digest_extra");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\dsa");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\ec_extra");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\ecdh_extra");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\ecdsa_extra");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\engine");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\err");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\evp");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\fipsmodule");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\hkdf");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\hpke");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\hrss");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\lhash");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\obj");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\pem");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\pkcs7");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\pkcs8");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\poly1305");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\pool");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\rand_extra");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\rc4");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\rsa_extra");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\siphash");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\stack");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\trust_token");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\x509");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\crypto\\x509v3");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\boringssl-with-bazel\\src\\ssl");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\re2");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\re2\\re2");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\re2\\util");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\upb");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\upb\\third_party");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\upb\\third_party\\utf8_range");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\upb\\upb");
   FSO.CreateFolder(base_dir+"\\ext\\grpc\\third_party\\zlib");
   _build_dirs = new Array();
   for (i = 0; i < build_dirs.length; i++) {
     if (build_dirs[i].indexOf('grpc') == -1) {
       _build_dirs[_build_dirs.length] = build_dirs[i];
     }
   }
   build_dirs = _build_dirs;
 }
diff --git a/doc/environment_variables.md b/doc/environment_variables.md
index 59442f08d3..4f6201acf2 100644
--- a/doc/environment_variables.md
+++ b/doc/environment_variables.md
@@ -5,168 +5,173 @@ gRPC C core based implementations (those contained in this repository) expose
 some configuration as environment variables that can be set.
 
 * grpc_proxy, https_proxy, http_proxy
   The URI of the proxy to use for HTTP CONNECT support. These variables are
   checked in order, and the first one that has a value is used.
 
 * no_grpc_proxy, no_proxy
   A comma separated list of hostnames to connect to without using a proxy even
   if a proxy is set. These variables are checked in order, and the first one
   that has a value is used.
 
 * GRPC_ABORT_ON_LEAKS
   A debugging aid to cause a call to abort() when gRPC objects are leaked past
   grpc_shutdown(). Set to 1 to cause the abort, if unset or 0 it does not
   abort the process.
 
 * GOOGLE_APPLICATION_CREDENTIALS
   The path to find the credentials to use when Google credentials are created
 
 * GRPC_SSL_CIPHER_SUITES
   A colon separated list of cipher suites to use with OpenSSL
   Defaults to:
     ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384
 
 * GRPC_DEFAULT_SSL_ROOTS_FILE_PATH
   PEM file to load SSL roots from
 
 * GRPC_POLL_STRATEGY [posix-style environments only]
   Declares which polling engines to try when starting gRPC.
   This is a comma-separated list of engines, which are tried in priority order
   first -> last.
   Available polling engines include:
   - epoll (linux-only) - a polling engine based around the epoll family of
     system calls
   - poll - a portable polling engine based around poll(), intended to be a
     fallback engine when nothing better exists
   - legacy - the (deprecated) original polling engine for gRPC
 
 * GRPC_TRACE
   A comma separated list of tracers that provide additional insight into how
   gRPC C core is processing requests via debug logs. Available tracers include:
   - api - traces api calls to the C core
   - bdp_estimator - traces behavior of bdp estimation logic
   - call_error - traces the possible errors contributing to final call status
   - cares_resolver - traces operations of the c-ares based DNS resolver
   - cares_address_sorting - traces operations of the c-ares based DNS
     resolver's resolved address sorter
   - cds_lb - traces cds LB policy
   - channel - traces operations on the C core channel stack
   - channel_stack - traces the set of filters in a channel stack upon
     construction
   - client_channel - traces client channel control plane activity, including
     resolver and load balancing policy interaction
   - client_channel_call - traces client channel call activity related to name
     resolution
   - client_channel_lb_call - traces client channel call activity related
     to load balancing picking
   - compression - traces compression operations
   - connectivity_state - traces connectivity state changes to channels
   - cronet - traces state in the cronet transport engine
   - dns_resolver - traces state in the native DNS resolver
   - executor - traces grpc's internal thread pool ('the executor')
   - glb - traces the grpclb load balancer
   - handshaker - traces handshaking state
   - health_check_client - traces health checking client code
   - http - traces state in the http2 transport engine
   - http2_stream_state - traces all http2 stream state mutations.
   - http1 - traces HTTP/1.x operations performed by gRPC
   - inproc - traces the in-process transport
   - http_keepalive - traces gRPC keepalive pings
   - flowctl - traces http2 flow control
   - op_failure - traces error information when failure is pushed onto a
     completion queue
   - pick_first - traces the pick first load balancing policy
   - plugin_credentials - traces plugin credentials
   - pollable_refcount - traces reference counting of 'pollable' objects (only
     in DEBUG)
   - priority_lb - traces priority LB policy
   - resource_quota - trace resource quota objects internals
   - ring_hash_lb - traces the ring hash load balancing policy
   - rls_lb - traces the RLS load balancing policy
   - round_robin - traces the round_robin load balancing policy
   - queue_pluck
   - grpc_authz_api - traces gRPC authorization
   - server_channel - lightweight trace of significant server channel events
   - secure_endpoint - traces bytes flowing through encrypted channels
   - subchannel - traces the connectivity state of subchannel
   - subchannel_pool - traces subchannel pool
   - timer - timers (alarms) in the grpc internals
   - timer_check - more detailed trace of timer logic in grpc internals
   - transport_security - traces metadata about secure channel establishment
   - tcp - traces bytes in and out of a channel
   - tsi - traces tsi transport security
   - weighted_target_lb - traces weighted_target LB policy
   - xds_client - traces xds client
   - xds_cluster_manager_lb - traces cluster manager LB policy
   - xds_cluster_impl_lb - traces cluster impl LB policy
   - xds_cluster_resolver_lb - traces xds cluster resolver LB policy
   - xds_resolver - traces xds resolver
 
   The following tracers will only run in binaries built in DEBUG mode. This is
   accomplished by invoking `CONFIG=dbg make <target>`
   - metadata - tracks creation and mutation of metadata
   - combiner - traces combiner lock state
   - call_combiner - traces call combiner state
   - closure - tracks closure creation, scheduling, and completion
   - fd_trace - traces fd create(), shutdown() and close() calls for channel fds.
   - pending_tags - traces still-in-progress tags on completion queues
   - polling - traces the selected polling engine
   - polling_api - traces the api calls to polling engine
   - subchannel_refcount
   - queue_refcount
   - error_refcount
   - stream_refcount
   - workqueue_refcount
   - fd_refcount
   - cq_refcount
   - auth_context_refcount
   - security_connector_refcount
   - resolver_refcount
   - lb_policy_refcount
   - chttp2_refcount
 
   'all' can additionally be used to turn all traces on.
   Individual traces can be disabled by prefixing them with '-'.
 
   'refcount' will turn on all of the tracers for refcount debugging.
 
   if 'list_tracers' is present, then all of the available tracers will be
   printed when the program starts up.
 
   Example:
   export GRPC_TRACE=all,-pending_tags
 
 * GRPC_VERBOSITY
   Default gRPC logging verbosity - one of:
   - DEBUG - log all gRPC messages
   - INFO - log INFO and ERROR message
   - ERROR - log only errors (default)
   - NONE - won't log any
 
 * GRPC_STACKTRACE_MINLOGLEVEL
   Minimum loglevel to print the stack-trace - one of DEBUG, INFO, ERROR, and NONE.
   NONE is a default value.
 
 * GRPC_TRACE_FUZZER
   if set, the fuzzers will output trace (it is usually suppressed).
 
 * GRPC_DNS_RESOLVER
   Declares which DNS resolver to use. The default is ares if gRPC is built with
   c-ares support. Otherwise, the value of this environment variable is ignored.
   Available DNS resolver include:
   - ares (default on most platforms except iOS, Android or Node)- a DNS
     resolver based around the c-ares library
   - native - a DNS resolver based around getaddrinfo(), creates a new thread to
     perform name resolution
 
 * GRPC_CLIENT_CHANNEL_BACKUP_POLL_INTERVAL_MS
   Default: 5000
   Declares the interval between two backup polls on client channels. These polls
   are run in the timer thread so that gRPC can process connection failures while
   there is no active polling thread. They help reconnect disconnected client
   channels (mostly due to idleness), so that the next RPC on this channel won't
   fail. Set to 0 to turn off the backup polls.
 
+* GRPC_EXPERIMENTAL_DISABLE_FLOW_CONTROL
+  if set, flow control will be effectively disabled. Max out all values and
+  assume the remote peer does the same. Thus we can ignore any flow control
+  bookkeeping, error checking, and decision making
+
 * grpc_cfstream
   set to 1 to turn on CFStream experiment. With this experiment gRPC uses CFStream API to make TCP
   connections. The option is only available on iOS platform and when macro GRPC_CFSTREAM is defined.
diff --git a/gRPC-C++.podspec b/gRPC-C++.podspec
index b9517dd4c7..6c0d7cfd4e 100644
--- a/gRPC-C++.podspec
+++ b/gRPC-C++.podspec
@@ -22,1842 +22,1844 @@
 Pod::Spec.new do |s|
   s.name     = 'gRPC-C++'
   # TODO (mxyan): use version that match gRPC version when pod is stabilized
   version = '1.48.0-dev'
   s.version  = version
   s.summary  = 'gRPC C++ library'
   s.homepage = 'https://grpc.io'
   s.license  = 'Apache License, Version 2.0'
   s.authors  = { 'The gRPC contributors' => 'grpc-packages@google.com' }
 
   s.source = {
     :git => 'https://github.com/grpc/grpc.git',
     :tag => "v#{version}",
   }
 
   s.ios.deployment_target = '9.0'
   s.osx.deployment_target = '10.10'
   s.tvos.deployment_target = '10.0'
 
   s.requires_arc = false
 
   name = 'grpcpp'
   # Use `grpcpp` as framework name so that `#include <grpcpp/xxx.h>` works when built as
   # framework.
   s.module_name = name
 
   # Add include prefix `grpcpp` so that `#include <grpcpp/xxx.h>` works when built as static
   # library.
   s.header_dir = name
 
   s.pod_target_xcconfig = {
     'HEADER_SEARCH_PATHS' => '"$(inherited)" "$(PODS_TARGET_SRCROOT)/include"',
     'USER_HEADER_SEARCH_PATHS' => '"$(PODS_TARGET_SRCROOT)"'\
         ' "$(PODS_TARGET_SRCROOT)/src/core/ext/upb-generated"'\
         ' "$(PODS_TARGET_SRCROOT)/src/core/ext/upbdefs-generated"'\
         ' "$(PODS_TARGET_SRCROOT)/third_party/**"',
     'GCC_PREPROCESSOR_DEFINITIONS' => '"$(inherited)" "COCOAPODS=1"',
     'CLANG_WARN_STRICT_PROTOTYPES' => 'NO',
     'CLANG_WARN_DOCUMENTATION_COMMENTS' => 'NO',
 
     # If we don't set these two settings, `include/grpc/support/time.h` and
     # `src/core/lib/support/string.h` shadow the system `<time.h>` and `<string.h>`, breaking the
     # build.
     'USE_HEADERMAP' => 'NO',
     'ALWAYS_SEARCH_USER_PATHS' => 'NO',
   }
 
   s.libraries = 'c++'
   s.compiler_flags = '-Wno-comma -Wno-unreachable-code -Wno-shorten-64-to-32'
 
   s.default_subspecs = 'Interface', 'Implementation'
 
   # Certificates, to be able to establish TLS connections:
   s.resource_bundles = { 'gRPCCertificates-Cpp' => ['etc/roots.pem'] }
 
   s.header_mappings_dir = 'include/grpcpp'
 
   s.subspec 'Interface' do |ss|
     ss.header_mappings_dir = 'include/grpcpp'
 
     ss.source_files = 'include/grpcpp/alarm.h',
                       'include/grpcpp/channel.h',
                       'include/grpcpp/client_context.h',
                       'include/grpcpp/completion_queue.h',
                       'include/grpcpp/create_channel.h',
                       'include/grpcpp/create_channel_binder.h',
                       'include/grpcpp/create_channel_posix.h',
                       'include/grpcpp/ext/call_metric_recorder.h',
                       'include/grpcpp/ext/health_check_service_server_builder_option.h',
                       'include/grpcpp/generic/async_generic_service.h',
                       'include/grpcpp/generic/generic_stub.h',
                       'include/grpcpp/grpcpp.h',
                       'include/grpcpp/health_check_service_interface.h',
                       'include/grpcpp/impl/call.h',
                       'include/grpcpp/impl/channel_argument_option.h',
                       'include/grpcpp/impl/client_unary_call.h',
                       'include/grpcpp/impl/codegen/async_generic_service.h',
                       'include/grpcpp/impl/codegen/async_stream.h',
                       'include/grpcpp/impl/codegen/async_unary_call.h',
                       'include/grpcpp/impl/codegen/byte_buffer.h',
                       'include/grpcpp/impl/codegen/call.h',
                       'include/grpcpp/impl/codegen/call_hook.h',
                       'include/grpcpp/impl/codegen/call_op_set.h',
                       'include/grpcpp/impl/codegen/call_op_set_interface.h',
                       'include/grpcpp/impl/codegen/callback_common.h',
                       'include/grpcpp/impl/codegen/channel_interface.h',
                       'include/grpcpp/impl/codegen/client_callback.h',
                       'include/grpcpp/impl/codegen/client_context.h',
                       'include/grpcpp/impl/codegen/client_interceptor.h',
                       'include/grpcpp/impl/codegen/client_unary_call.h',
                       'include/grpcpp/impl/codegen/completion_queue.h',
                       'include/grpcpp/impl/codegen/completion_queue_tag.h',
                       'include/grpcpp/impl/codegen/config.h',
                       'include/grpcpp/impl/codegen/core_codegen.h',
                       'include/grpcpp/impl/codegen/core_codegen_interface.h',
                       'include/grpcpp/impl/codegen/create_auth_context.h',
                       'include/grpcpp/impl/codegen/delegating_channel.h',
                       'include/grpcpp/impl/codegen/grpc_library.h',
                       'include/grpcpp/impl/codegen/intercepted_channel.h',
                       'include/grpcpp/impl/codegen/interceptor.h',
                       'include/grpcpp/impl/codegen/interceptor_common.h',
                       'include/grpcpp/impl/codegen/message_allocator.h',
                       'include/grpcpp/impl/codegen/metadata_map.h',
                       'include/grpcpp/impl/codegen/method_handler.h',
                       'include/grpcpp/impl/codegen/method_handler_impl.h',
                       'include/grpcpp/impl/codegen/rpc_method.h',
                       'include/grpcpp/impl/codegen/rpc_service_method.h',
                       'include/grpcpp/impl/codegen/security/auth_context.h',
                       'include/grpcpp/impl/codegen/serialization_traits.h',
                       'include/grpcpp/impl/codegen/server_callback.h',
                       'include/grpcpp/impl/codegen/server_callback_handlers.h',
                       'include/grpcpp/impl/codegen/server_context.h',
                       'include/grpcpp/impl/codegen/server_interceptor.h',
                       'include/grpcpp/impl/codegen/server_interface.h',
                       'include/grpcpp/impl/codegen/service_type.h',
                       'include/grpcpp/impl/codegen/slice.h',
                       'include/grpcpp/impl/codegen/status.h',
                       'include/grpcpp/impl/codegen/status_code_enum.h',
                       'include/grpcpp/impl/codegen/string_ref.h',
                       'include/grpcpp/impl/codegen/stub_options.h',
                       'include/grpcpp/impl/codegen/sync.h',
                       'include/grpcpp/impl/codegen/sync_stream.h',
                       'include/grpcpp/impl/codegen/time.h',
                       'include/grpcpp/impl/grpc_library.h',
                       'include/grpcpp/impl/method_handler_impl.h',
                       'include/grpcpp/impl/rpc_method.h',
                       'include/grpcpp/impl/rpc_service_method.h',
                       'include/grpcpp/impl/serialization_traits.h',
                       'include/grpcpp/impl/server_builder_option.h',
                       'include/grpcpp/impl/server_builder_plugin.h',
                       'include/grpcpp/impl/server_initializer.h',
                       'include/grpcpp/impl/service_type.h',
                       'include/grpcpp/resource_quota.h',
                       'include/grpcpp/security/auth_context.h',
                       'include/grpcpp/security/auth_metadata_processor.h',
                       'include/grpcpp/security/authorization_policy_provider.h',
                       'include/grpcpp/security/binder_credentials.h',
                       'include/grpcpp/security/binder_security_policy.h',
                       'include/grpcpp/security/credentials.h',
                       'include/grpcpp/security/server_credentials.h',
                       'include/grpcpp/security/tls_certificate_provider.h',
                       'include/grpcpp/security/tls_certificate_verifier.h',
                       'include/grpcpp/security/tls_credentials_options.h',
                       'include/grpcpp/server.h',
                       'include/grpcpp/server_builder.h',
                       'include/grpcpp/server_context.h',
                       'include/grpcpp/server_posix.h',
                       'include/grpcpp/support/async_stream.h',
                       'include/grpcpp/support/async_unary_call.h',
                       'include/grpcpp/support/byte_buffer.h',
                       'include/grpcpp/support/channel_arguments.h',
                       'include/grpcpp/support/client_callback.h',
                       'include/grpcpp/support/client_interceptor.h',
                       'include/grpcpp/support/config.h',
                       'include/grpcpp/support/interceptor.h',
                       'include/grpcpp/support/message_allocator.h',
                       'include/grpcpp/support/method_handler.h',
                       'include/grpcpp/support/proto_buffer_reader.h',
                       'include/grpcpp/support/proto_buffer_writer.h',
                       'include/grpcpp/support/server_callback.h',
                       'include/grpcpp/support/server_interceptor.h',
                       'include/grpcpp/support/slice.h',
                       'include/grpcpp/support/status.h',
                       'include/grpcpp/support/status_code_enum.h',
                       'include/grpcpp/support/string_ref.h',
                       'include/grpcpp/support/stub_options.h',
                       'include/grpcpp/support/sync_stream.h',
                       'include/grpcpp/support/time.h',
                       'include/grpcpp/support/validate_service_config.h',
                       'include/grpcpp/xds_server_builder.h'
   end
 
   s.subspec 'Implementation' do |ss|
     ss.header_mappings_dir = '.'
     ss.dependency "#{s.name}/Interface", version
     ss.dependency 'gRPC-Core', version
     abseil_version = '1.20211102.0'
     ss.dependency 'abseil/base/base', abseil_version
     ss.dependency 'abseil/base/core_headers', abseil_version
     ss.dependency 'abseil/cleanup/cleanup', abseil_version
     ss.dependency 'abseil/container/flat_hash_map', abseil_version
     ss.dependency 'abseil/container/flat_hash_set', abseil_version
     ss.dependency 'abseil/container/inlined_vector', abseil_version
     ss.dependency 'abseil/functional/bind_front', abseil_version
     ss.dependency 'abseil/hash/hash', abseil_version
     ss.dependency 'abseil/memory/memory', abseil_version
     ss.dependency 'abseil/meta/type_traits', abseil_version
     ss.dependency 'abseil/random/random', abseil_version
     ss.dependency 'abseil/status/status', abseil_version
     ss.dependency 'abseil/status/statusor', abseil_version
     ss.dependency 'abseil/strings/cord', abseil_version
     ss.dependency 'abseil/strings/str_format', abseil_version
     ss.dependency 'abseil/strings/strings', abseil_version
     ss.dependency 'abseil/synchronization/synchronization', abseil_version
     ss.dependency 'abseil/time/time', abseil_version
     ss.dependency 'abseil/types/optional', abseil_version
     ss.dependency 'abseil/types/span', abseil_version
     ss.dependency 'abseil/types/variant', abseil_version
     ss.dependency 'abseil/utility/utility', abseil_version
 
     ss.source_files = 'src/core/ext/filters/channel_idle/channel_idle_filter.h',
                       'src/core/ext/filters/channel_idle/idle_filter_state.h',
                       'src/core/ext/filters/client_channel/backend_metric.h',
                       'src/core/ext/filters/client_channel/backup_poller.h',
                       'src/core/ext/filters/client_channel/client_channel.h',
                       'src/core/ext/filters/client_channel/client_channel_channelz.h',
                       'src/core/ext/filters/client_channel/client_channel_factory.h',
                       'src/core/ext/filters/client_channel/config_selector.h',
                       'src/core/ext/filters/client_channel/connector.h',
                       'src/core/ext/filters/client_channel/dynamic_filters.h',
                       'src/core/ext/filters/client_channel/global_subchannel_pool.h',
                       'src/core/ext/filters/client_channel/health/health_check_client.h',
                       'src/core/ext/filters/client_channel/http_proxy.h',
                       'src/core/ext/filters/client_channel/lb_policy.h',
                       'src/core/ext/filters/client_channel/lb_policy/address_filtering.h',
                       'src/core/ext/filters/client_channel/lb_policy/backend_metric_data.h',
                       'src/core/ext/filters/client_channel/lb_policy/child_policy_handler.h',
                       'src/core/ext/filters/client_channel/lb_policy/grpclb/client_load_reporting_filter.h',
                       'src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.h',
                       'src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_balancer_addresses.h',
                       'src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_client_stats.h',
                       'src/core/ext/filters/client_channel/lb_policy/grpclb/load_balancer_api.h',
                       'src/core/ext/filters/client_channel/lb_policy/oob_backend_metric.h',
                       'src/core/ext/filters/client_channel/lb_policy/outlier_detection/outlier_detection.h',
                       'src/core/ext/filters/client_channel/lb_policy/ring_hash/ring_hash.h',
                       'src/core/ext/filters/client_channel/lb_policy/subchannel_list.h',
                       'src/core/ext/filters/client_channel/lb_policy/xds/xds.h',
                       'src/core/ext/filters/client_channel/lb_policy/xds/xds_channel_args.h',
                       'src/core/ext/filters/client_channel/lb_policy_factory.h',
                       'src/core/ext/filters/client_channel/lb_policy_registry.h',
                       'src/core/ext/filters/client_channel/local_subchannel_pool.h',
                       'src/core/ext/filters/client_channel/proxy_mapper.h',
                       'src/core/ext/filters/client_channel/proxy_mapper_registry.h',
                       'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver.h',
                       'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.h',
                       'src/core/ext/filters/client_channel/resolver/dns/dns_resolver_selection.h',
                       'src/core/ext/filters/client_channel/resolver/fake/fake_resolver.h',
                       'src/core/ext/filters/client_channel/resolver/polling_resolver.h',
                       'src/core/ext/filters/client_channel/resolver/xds/xds_resolver.h',
                       'src/core/ext/filters/client_channel/resolver_result_parsing.h',
                       'src/core/ext/filters/client_channel/retry_filter.h',
                       'src/core/ext/filters/client_channel/retry_service_config.h',
                       'src/core/ext/filters/client_channel/retry_throttle.h',
                       'src/core/ext/filters/client_channel/subchannel.h',
                       'src/core/ext/filters/client_channel/subchannel_interface.h',
                       'src/core/ext/filters/client_channel/subchannel_interface_internal.h',
                       'src/core/ext/filters/client_channel/subchannel_pool_interface.h',
                       'src/core/ext/filters/client_channel/subchannel_stream_client.h',
                       'src/core/ext/filters/deadline/deadline_filter.h',
                       'src/core/ext/filters/fault_injection/fault_injection_filter.h',
                       'src/core/ext/filters/fault_injection/service_config_parser.h',
                       'src/core/ext/filters/http/client/http_client_filter.h',
                       'src/core/ext/filters/http/client_authority_filter.h',
                       'src/core/ext/filters/http/message_compress/message_compress_filter.h',
                       'src/core/ext/filters/http/message_compress/message_decompress_filter.h',
                       'src/core/ext/filters/http/server/http_server_filter.h',
                       'src/core/ext/filters/message_size/message_size_filter.h',
                       'src/core/ext/filters/rbac/rbac_filter.h',
                       'src/core/ext/filters/rbac/rbac_service_config_parser.h',
                       'src/core/ext/filters/server_config_selector/server_config_selector.h',
                       'src/core/ext/filters/server_config_selector/server_config_selector_filter.h',
                       'src/core/ext/transport/binder/client/binder_connector.cc',
                       'src/core/ext/transport/binder/client/binder_connector.h',
                       'src/core/ext/transport/binder/client/channel_create.cc',
                       'src/core/ext/transport/binder/client/channel_create_impl.cc',
                       'src/core/ext/transport/binder/client/channel_create_impl.h',
                       'src/core/ext/transport/binder/client/connection_id_generator.cc',
                       'src/core/ext/transport/binder/client/connection_id_generator.h',
                       'src/core/ext/transport/binder/client/endpoint_binder_pool.cc',
                       'src/core/ext/transport/binder/client/endpoint_binder_pool.h',
                       'src/core/ext/transport/binder/client/jni_utils.cc',
                       'src/core/ext/transport/binder/client/jni_utils.h',
                       'src/core/ext/transport/binder/client/security_policy_setting.cc',
                       'src/core/ext/transport/binder/client/security_policy_setting.h',
                       'src/core/ext/transport/binder/security_policy/binder_security_policy.cc',
                       'src/core/ext/transport/binder/server/binder_server.cc',
                       'src/core/ext/transport/binder/server/binder_server.h',
                       'src/core/ext/transport/binder/server/binder_server_credentials.cc',
                       'src/core/ext/transport/binder/transport/binder_stream.h',
                       'src/core/ext/transport/binder/transport/binder_transport.cc',
                       'src/core/ext/transport/binder/transport/binder_transport.h',
                       'src/core/ext/transport/binder/utils/binder_auto_utils.h',
                       'src/core/ext/transport/binder/utils/ndk_binder.cc',
                       'src/core/ext/transport/binder/utils/ndk_binder.h',
                       'src/core/ext/transport/binder/utils/transport_stream_receiver.h',
                       'src/core/ext/transport/binder/utils/transport_stream_receiver_impl.cc',
                       'src/core/ext/transport/binder/utils/transport_stream_receiver_impl.h',
                       'src/core/ext/transport/binder/wire_format/binder.h',
                       'src/core/ext/transport/binder/wire_format/binder_android.cc',
                       'src/core/ext/transport/binder/wire_format/binder_android.h',
                       'src/core/ext/transport/binder/wire_format/binder_constants.cc',
                       'src/core/ext/transport/binder/wire_format/binder_constants.h',
                       'src/core/ext/transport/binder/wire_format/transaction.cc',
                       'src/core/ext/transport/binder/wire_format/transaction.h',
                       'src/core/ext/transport/binder/wire_format/wire_reader.h',
                       'src/core/ext/transport/binder/wire_format/wire_reader_impl.cc',
                       'src/core/ext/transport/binder/wire_format/wire_reader_impl.h',
                       'src/core/ext/transport/binder/wire_format/wire_writer.cc',
                       'src/core/ext/transport/binder/wire_format/wire_writer.h',
                       'src/core/ext/transport/chttp2/alpn/alpn.h',
                       'src/core/ext/transport/chttp2/client/chttp2_connector.h',
                       'src/core/ext/transport/chttp2/server/chttp2_server.h',
                       'src/core/ext/transport/chttp2/transport/bin_decoder.h',
                       'src/core/ext/transport/chttp2/transport/bin_encoder.h',
                       'src/core/ext/transport/chttp2/transport/chttp2_transport.h',
                       'src/core/ext/transport/chttp2/transport/context_list.h',
                       'src/core/ext/transport/chttp2/transport/flow_control.h',
                       'src/core/ext/transport/chttp2/transport/frame.h',
                       'src/core/ext/transport/chttp2/transport/frame_data.h',
                       'src/core/ext/transport/chttp2/transport/frame_goaway.h',
                       'src/core/ext/transport/chttp2/transport/frame_ping.h',
                       'src/core/ext/transport/chttp2/transport/frame_rst_stream.h',
                       'src/core/ext/transport/chttp2/transport/frame_settings.h',
                       'src/core/ext/transport/chttp2/transport/frame_window_update.h',
                       'src/core/ext/transport/chttp2/transport/hpack_constants.h',
                       'src/core/ext/transport/chttp2/transport/hpack_encoder.h',
                       'src/core/ext/transport/chttp2/transport/hpack_encoder_table.h',
                       'src/core/ext/transport/chttp2/transport/hpack_parser.h',
                       'src/core/ext/transport/chttp2/transport/hpack_parser_table.h',
                       'src/core/ext/transport/chttp2/transport/http2_settings.h',
                       'src/core/ext/transport/chttp2/transport/huffsyms.h',
                       'src/core/ext/transport/chttp2/transport/internal.h',
                       'src/core/ext/transport/chttp2/transport/stream_map.h',
                       'src/core/ext/transport/chttp2/transport/varint.h',
                       'src/core/ext/transport/inproc/inproc_transport.h',
                       'src/core/ext/upb-generated/envoy/admin/v3/certs.upb.h',
                       'src/core/ext/upb-generated/envoy/admin/v3/clusters.upb.h',
                       'src/core/ext/upb-generated/envoy/admin/v3/config_dump.upb.h',
                       'src/core/ext/upb-generated/envoy/admin/v3/init_dump.upb.h',
                       'src/core/ext/upb-generated/envoy/admin/v3/listeners.upb.h',
                       'src/core/ext/upb-generated/envoy/admin/v3/memory.upb.h',
                       'src/core/ext/upb-generated/envoy/admin/v3/metrics.upb.h',
                       'src/core/ext/upb-generated/envoy/admin/v3/mutex_stats.upb.h',
                       'src/core/ext/upb-generated/envoy/admin/v3/server_info.upb.h',
                       'src/core/ext/upb-generated/envoy/admin/v3/tap.upb.h',
                       'src/core/ext/upb-generated/envoy/annotations/deprecation.upb.h',
                       'src/core/ext/upb-generated/envoy/annotations/resource.upb.h',
                       'src/core/ext/upb-generated/envoy/config/accesslog/v3/accesslog.upb.h',
                       'src/core/ext/upb-generated/envoy/config/bootstrap/v3/bootstrap.upb.h',
                       'src/core/ext/upb-generated/envoy/config/cluster/v3/circuit_breaker.upb.h',
                       'src/core/ext/upb-generated/envoy/config/cluster/v3/cluster.upb.h',
                       'src/core/ext/upb-generated/envoy/config/cluster/v3/filter.upb.h',
                       'src/core/ext/upb-generated/envoy/config/cluster/v3/outlier_detection.upb.h',
                       'src/core/ext/upb-generated/envoy/config/common/matcher/v3/matcher.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/address.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/backoff.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/base.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/config_source.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/event_service_config.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/extension.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/grpc_method_list.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/grpc_service.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/health_check.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/http_uri.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/protocol.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/proxy_protocol.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/resolver.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/socket_option.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/substitution_format_string.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/udp_socket_config.upb.h',
                       'src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint.upb.h',
                       'src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint_components.upb.h',
                       'src/core/ext/upb-generated/envoy/config/endpoint/v3/load_report.upb.h',
                       'src/core/ext/upb-generated/envoy/config/listener/v3/api_listener.upb.h',
                       'src/core/ext/upb-generated/envoy/config/listener/v3/listener.upb.h',
                       'src/core/ext/upb-generated/envoy/config/listener/v3/listener_components.upb.h',
                       'src/core/ext/upb-generated/envoy/config/listener/v3/quic_config.upb.h',
                       'src/core/ext/upb-generated/envoy/config/listener/v3/udp_listener_config.upb.h',
                       'src/core/ext/upb-generated/envoy/config/metrics/v3/metrics_service.upb.h',
                       'src/core/ext/upb-generated/envoy/config/metrics/v3/stats.upb.h',
                       'src/core/ext/upb-generated/envoy/config/overload/v3/overload.upb.h',
                       'src/core/ext/upb-generated/envoy/config/rbac/v3/rbac.upb.h',
                       'src/core/ext/upb-generated/envoy/config/route/v3/route.upb.h',
                       'src/core/ext/upb-generated/envoy/config/route/v3/route_components.upb.h',
                       'src/core/ext/upb-generated/envoy/config/route/v3/scoped_route.upb.h',
                       'src/core/ext/upb-generated/envoy/config/tap/v3/common.upb.h',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/datadog.upb.h',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/dynamic_ot.upb.h',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/http_tracer.upb.h',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/lightstep.upb.h',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/opencensus.upb.h',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/service.upb.h',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/skywalking.upb.h',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/trace.upb.h',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/xray.upb.h',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/zipkin.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/clusters/aggregate/v3/cluster.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/filters/common/fault/v3/fault.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/filters/http/fault/v3/fault.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/filters/http/rbac/v3/rbac.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/filters/http/router/v3/router.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/ring_hash/v3/ring_hash.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/wrr_locality/v3/wrr_locality.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/cert.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/common.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/secret.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upb.h',
                       'src/core/ext/upb-generated/envoy/service/discovery/v3/ads.upb.h',
                       'src/core/ext/upb-generated/envoy/service/discovery/v3/discovery.upb.h',
                       'src/core/ext/upb-generated/envoy/service/load_stats/v3/lrs.upb.h',
                       'src/core/ext/upb-generated/envoy/service/status/v3/csds.upb.h',
                       'src/core/ext/upb-generated/envoy/type/http/v3/cookie.upb.h',
                       'src/core/ext/upb-generated/envoy/type/http/v3/path_transformation.upb.h',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/http_inputs.upb.h',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/metadata.upb.h',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/node.upb.h',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/number.upb.h',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/path.upb.h',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/regex.upb.h',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/string.upb.h',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/struct.upb.h',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/value.upb.h',
                       'src/core/ext/upb-generated/envoy/type/metadata/v3/metadata.upb.h',
                       'src/core/ext/upb-generated/envoy/type/tracing/v3/custom_tag.upb.h',
                       'src/core/ext/upb-generated/envoy/type/v3/hash_policy.upb.h',
                       'src/core/ext/upb-generated/envoy/type/v3/http.upb.h',
                       'src/core/ext/upb-generated/envoy/type/v3/http_status.upb.h',
                       'src/core/ext/upb-generated/envoy/type/v3/percent.upb.h',
                       'src/core/ext/upb-generated/envoy/type/v3/range.upb.h',
                       'src/core/ext/upb-generated/envoy/type/v3/ratelimit_unit.upb.h',
                       'src/core/ext/upb-generated/envoy/type/v3/semantic_version.upb.h',
                       'src/core/ext/upb-generated/envoy/type/v3/token_bucket.upb.h',
                       'src/core/ext/upb-generated/google/api/annotations.upb.h',
                       'src/core/ext/upb-generated/google/api/expr/v1alpha1/checked.upb.h',
                       'src/core/ext/upb-generated/google/api/expr/v1alpha1/syntax.upb.h',
                       'src/core/ext/upb-generated/google/api/http.upb.h',
                       'src/core/ext/upb-generated/google/api/httpbody.upb.h',
                       'src/core/ext/upb-generated/google/protobuf/any.upb.h',
                       'src/core/ext/upb-generated/google/protobuf/descriptor.upb.h',
                       'src/core/ext/upb-generated/google/protobuf/duration.upb.h',
                       'src/core/ext/upb-generated/google/protobuf/empty.upb.h',
                       'src/core/ext/upb-generated/google/protobuf/struct.upb.h',
                       'src/core/ext/upb-generated/google/protobuf/timestamp.upb.h',
                       'src/core/ext/upb-generated/google/protobuf/wrappers.upb.h',
                       'src/core/ext/upb-generated/google/rpc/status.upb.h',
                       'src/core/ext/upb-generated/opencensus/proto/trace/v1/trace_config.upb.h',
                       'src/core/ext/upb-generated/src/proto/grpc/gcp/altscontext.upb.h',
                       'src/core/ext/upb-generated/src/proto/grpc/gcp/handshaker.upb.h',
                       'src/core/ext/upb-generated/src/proto/grpc/gcp/transport_security_common.upb.h',
                       'src/core/ext/upb-generated/src/proto/grpc/health/v1/health.upb.h',
                       'src/core/ext/upb-generated/src/proto/grpc/lb/v1/load_balancer.upb.h',
                       'src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls.upb.h',
                       'src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls_config.upb.h',
                       'src/core/ext/upb-generated/udpa/annotations/migrate.upb.h',
                       'src/core/ext/upb-generated/udpa/annotations/security.upb.h',
                       'src/core/ext/upb-generated/udpa/annotations/sensitive.upb.h',
                       'src/core/ext/upb-generated/udpa/annotations/status.upb.h',
                       'src/core/ext/upb-generated/udpa/annotations/versioning.upb.h',
                       'src/core/ext/upb-generated/validate/validate.upb.h',
                       'src/core/ext/upb-generated/xds/annotations/v3/migrate.upb.h',
                       'src/core/ext/upb-generated/xds/annotations/v3/security.upb.h',
                       'src/core/ext/upb-generated/xds/annotations/v3/sensitive.upb.h',
                       'src/core/ext/upb-generated/xds/annotations/v3/status.upb.h',
                       'src/core/ext/upb-generated/xds/annotations/v3/versioning.upb.h',
                       'src/core/ext/upb-generated/xds/core/v3/authority.upb.h',
                       'src/core/ext/upb-generated/xds/core/v3/collection_entry.upb.h',
                       'src/core/ext/upb-generated/xds/core/v3/context_params.upb.h',
                       'src/core/ext/upb-generated/xds/core/v3/extension.upb.h',
                       'src/core/ext/upb-generated/xds/core/v3/resource.upb.h',
                       'src/core/ext/upb-generated/xds/core/v3/resource_locator.upb.h',
                       'src/core/ext/upb-generated/xds/core/v3/resource_name.upb.h',
                       'src/core/ext/upb-generated/xds/data/orca/v3/orca_load_report.upb.h',
                       'src/core/ext/upb-generated/xds/service/orca/v3/orca.upb.h',
                       'src/core/ext/upb-generated/xds/type/matcher/v3/matcher.upb.h',
                       'src/core/ext/upb-generated/xds/type/matcher/v3/regex.upb.h',
                       'src/core/ext/upb-generated/xds/type/matcher/v3/string.upb.h',
                       'src/core/ext/upb-generated/xds/type/v3/typed_struct.upb.h',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/certs.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/clusters.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/config_dump.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/init_dump.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/listeners.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/memory.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/metrics.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/mutex_stats.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/server_info.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/tap.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/annotations/deprecation.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/annotations/resource.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/accesslog/v3/accesslog.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/bootstrap/v3/bootstrap.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/circuit_breaker.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/cluster.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/filter.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/outlier_detection.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/common/matcher/v3/matcher.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/address.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/backoff.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/base.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/config_source.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/event_service_config.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/extension.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_method_list.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_service.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/health_check.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/http_uri.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/protocol.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/proxy_protocol.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/resolver.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/socket_option.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/substitution_format_string.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/udp_socket_config.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint_components.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/load_report.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/listener/v3/api_listener.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener_components.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/listener/v3/quic_config.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/listener/v3/udp_listener_config.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/metrics/v3/metrics_service.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/metrics/v3/stats.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/overload/v3/overload.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/rbac/v3/rbac.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/route/v3/route.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/route/v3/route_components.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/route/v3/scoped_route.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/tap/v3/common.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/datadog.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/dynamic_ot.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/http_tracer.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/lightstep.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/opencensus.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/service.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/skywalking.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/trace.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/xray.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/zipkin.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/extensions/clusters/aggregate/v3/cluster.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/extensions/filters/common/fault/v3/fault.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/extensions/filters/http/fault/v3/fault.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/extensions/filters/http/rbac/v3/rbac.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/extensions/filters/http/router/v3/router.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/cert.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/common.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/secret.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/service/discovery/v3/ads.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/service/discovery/v3/discovery.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/service/load_stats/v3/lrs.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/service/status/v3/csds.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/http/v3/cookie.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/http/v3/path_transformation.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/http_inputs.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/metadata.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/node.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/number.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/path.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/regex.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/string.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/struct.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/value.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/metadata/v3/metadata.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/tracing/v3/custom_tag.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/v3/hash_policy.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/v3/http.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/v3/http_status.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/v3/percent.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/v3/range.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/v3/ratelimit_unit.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/v3/semantic_version.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/v3/token_bucket.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/api/annotations.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/checked.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/syntax.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/api/http.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/api/httpbody.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/protobuf/any.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/protobuf/descriptor.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/protobuf/duration.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/protobuf/empty.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/protobuf/struct.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/protobuf/timestamp.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/protobuf/wrappers.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/rpc/status.upbdefs.h',
                       'src/core/ext/upbdefs-generated/opencensus/proto/trace/v1/trace_config.upbdefs.h',
                       'src/core/ext/upbdefs-generated/src/proto/grpc/lookup/v1/rls_config.upbdefs.h',
                       'src/core/ext/upbdefs-generated/udpa/annotations/migrate.upbdefs.h',
                       'src/core/ext/upbdefs-generated/udpa/annotations/security.upbdefs.h',
                       'src/core/ext/upbdefs-generated/udpa/annotations/sensitive.upbdefs.h',
                       'src/core/ext/upbdefs-generated/udpa/annotations/status.upbdefs.h',
                       'src/core/ext/upbdefs-generated/udpa/annotations/versioning.upbdefs.h',
                       'src/core/ext/upbdefs-generated/validate/validate.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/annotations/v3/migrate.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/annotations/v3/security.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/annotations/v3/sensitive.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/annotations/v3/status.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/annotations/v3/versioning.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/core/v3/authority.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/core/v3/collection_entry.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/core/v3/context_params.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/core/v3/extension.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/core/v3/resource.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/core/v3/resource_locator.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/core/v3/resource_name.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/type/matcher/v3/matcher.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/type/matcher/v3/regex.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/type/matcher/v3/string.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/type/v3/typed_struct.upbdefs.h',
                       'src/core/ext/xds/certificate_provider_factory.h',
                       'src/core/ext/xds/certificate_provider_registry.h',
                       'src/core/ext/xds/certificate_provider_store.h',
                       'src/core/ext/xds/file_watcher_certificate_provider_factory.h',
                       'src/core/ext/xds/upb_utils.h',
                       'src/core/ext/xds/xds_api.h',
                       'src/core/ext/xds/xds_bootstrap.h',
                       'src/core/ext/xds/xds_certificate_provider.h',
                       'src/core/ext/xds/xds_channel_args.h',
                       'src/core/ext/xds/xds_channel_stack_modifier.h',
                       'src/core/ext/xds/xds_client.h',
                       'src/core/ext/xds/xds_client_stats.h',
                       'src/core/ext/xds/xds_cluster.h',
                       'src/core/ext/xds/xds_cluster_specifier_plugin.h',
                       'src/core/ext/xds/xds_common_types.h',
                       'src/core/ext/xds/xds_endpoint.h',
                       'src/core/ext/xds/xds_http_fault_filter.h',
                       'src/core/ext/xds/xds_http_filters.h',
                       'src/core/ext/xds/xds_http_rbac_filter.h',
                       'src/core/ext/xds/xds_lb_policy_registry.h',
                       'src/core/ext/xds/xds_listener.h',
                       'src/core/ext/xds/xds_resource_type.h',
                       'src/core/ext/xds/xds_resource_type_impl.h',
                       'src/core/ext/xds/xds_route_config.h',
                       'src/core/ext/xds/xds_routing.h',
                       'src/core/lib/address_utils/parse_address.h',
                       'src/core/lib/address_utils/sockaddr_utils.h',
                       'src/core/lib/avl/avl.h',
                       'src/core/lib/backoff/backoff.h',
                       'src/core/lib/channel/call_finalization.h',
                       'src/core/lib/channel/call_tracer.h',
                       'src/core/lib/channel/channel_args.h',
                       'src/core/lib/channel/channel_args_preconditioning.h',
                       'src/core/lib/channel/channel_fwd.h',
                       'src/core/lib/channel/channel_stack.h',
                       'src/core/lib/channel/channel_stack_builder.h',
                       'src/core/lib/channel/channel_stack_builder_impl.h',
                       'src/core/lib/channel/channel_trace.h',
                       'src/core/lib/channel/channelz.h',
                       'src/core/lib/channel/channelz_registry.h',
                       'src/core/lib/channel/connected_channel.h',
                       'src/core/lib/channel/context.h',
                       'src/core/lib/channel/promise_based_filter.h',
                       'src/core/lib/channel/status_util.h',
                       'src/core/lib/compression/compression_internal.h',
                       'src/core/lib/compression/message_compress.h',
                       'src/core/lib/config/core_configuration.h',
                       'src/core/lib/debug/stats.h',
                       'src/core/lib/debug/stats_data.h',
                       'src/core/lib/debug/trace.h',
                       'src/core/lib/event_engine/channel_args_endpoint_config.h',
                       'src/core/lib/event_engine/event_engine_factory.h',
                       'src/core/lib/event_engine/handle_containers.h',
                       'src/core/lib/event_engine/iomgr_engine.h',
                       'src/core/lib/event_engine/trace.h',
                       'src/core/lib/gpr/alloc.h',
                       'src/core/lib/gpr/env.h',
                       'src/core/lib/gpr/murmur_hash.h',
                       'src/core/lib/gpr/spinlock.h',
                       'src/core/lib/gpr/string.h',
                       'src/core/lib/gpr/string_windows.h',
                       'src/core/lib/gpr/time_precise.h',
                       'src/core/lib/gpr/tls.h',
                       'src/core/lib/gpr/tmpfile.h',
                       'src/core/lib/gpr/useful.h',
                       'src/core/lib/gprpp/atomic_utils.h',
                       'src/core/lib/gprpp/bitset.h',
                       'src/core/lib/gprpp/chunked_vector.h',
                       'src/core/lib/gprpp/construct_destruct.h',
                       'src/core/lib/gprpp/cpp_impl_of.h',
                       'src/core/lib/gprpp/debug_location.h',
                       'src/core/lib/gprpp/dual_ref_counted.h',
                       'src/core/lib/gprpp/examine_stack.h',
                       'src/core/lib/gprpp/fork.h',
                       'src/core/lib/gprpp/global_config.h',
                       'src/core/lib/gprpp/global_config_custom.h',
                       'src/core/lib/gprpp/global_config_env.h',
                       'src/core/lib/gprpp/global_config_generic.h',
                       'src/core/lib/gprpp/host_port.h',
                       'src/core/lib/gprpp/manual_constructor.h',
                       'src/core/lib/gprpp/match.h',
                       'src/core/lib/gprpp/memory.h',
                       'src/core/lib/gprpp/mpscq.h',
                       'src/core/lib/gprpp/orphanable.h',
                       'src/core/lib/gprpp/overload.h',
                       'src/core/lib/gprpp/ref_counted.h',
                       'src/core/lib/gprpp/ref_counted_ptr.h',
                       'src/core/lib/gprpp/single_set_ptr.h',
                       'src/core/lib/gprpp/stat.h',
                       'src/core/lib/gprpp/status_helper.h',
                       'src/core/lib/gprpp/sync.h',
                       'src/core/lib/gprpp/table.h',
                       'src/core/lib/gprpp/thd.h',
                       'src/core/lib/gprpp/time.h',
                       'src/core/lib/gprpp/time_util.h',
                       'src/core/lib/gprpp/unique_type_name.h',
                       'src/core/lib/http/format_request.h',
                       'src/core/lib/http/httpcli.h',
                       'src/core/lib/http/httpcli_ssl_credentials.h',
                       'src/core/lib/http/parser.h',
                       'src/core/lib/iomgr/block_annotate.h',
                       'src/core/lib/iomgr/buffer_list.h',
                       'src/core/lib/iomgr/call_combiner.h',
                       'src/core/lib/iomgr/cfstream_handle.h',
                       'src/core/lib/iomgr/closure.h',
                       'src/core/lib/iomgr/combiner.h',
                       'src/core/lib/iomgr/dynamic_annotations.h',
                       'src/core/lib/iomgr/endpoint.h',
                       'src/core/lib/iomgr/endpoint_cfstream.h',
                       'src/core/lib/iomgr/endpoint_pair.h',
                       'src/core/lib/iomgr/error.h',
                       'src/core/lib/iomgr/error_cfstream.h',
                       'src/core/lib/iomgr/error_internal.h',
                       'src/core/lib/iomgr/ev_apple.h',
                       'src/core/lib/iomgr/ev_epoll1_linux.h',
                       'src/core/lib/iomgr/ev_poll_posix.h',
                       'src/core/lib/iomgr/ev_posix.h',
                       'src/core/lib/iomgr/exec_ctx.h',
                       'src/core/lib/iomgr/executor.h',
                       'src/core/lib/iomgr/executor/mpmcqueue.h',
                       'src/core/lib/iomgr/executor/threadpool.h',
                       'src/core/lib/iomgr/gethostname.h',
                       'src/core/lib/iomgr/grpc_if_nametoindex.h',
                       'src/core/lib/iomgr/internal_errqueue.h',
                       'src/core/lib/iomgr/iocp_windows.h',
                       'src/core/lib/iomgr/iomgr.h',
                       'src/core/lib/iomgr/iomgr_fwd.h',
                       'src/core/lib/iomgr/iomgr_internal.h',
                       'src/core/lib/iomgr/load_file.h',
                       'src/core/lib/iomgr/lockfree_event.h',
                       'src/core/lib/iomgr/nameser.h',
                       'src/core/lib/iomgr/polling_entity.h',
                       'src/core/lib/iomgr/pollset.h',
                       'src/core/lib/iomgr/pollset_set.h',
                       'src/core/lib/iomgr/pollset_set_windows.h',
                       'src/core/lib/iomgr/pollset_windows.h',
                       'src/core/lib/iomgr/port.h',
                       'src/core/lib/iomgr/python_util.h',
                       'src/core/lib/iomgr/resolve_address.h',
                       'src/core/lib/iomgr/resolve_address_impl.h',
                       'src/core/lib/iomgr/resolve_address_posix.h',
                       'src/core/lib/iomgr/resolve_address_windows.h',
                       'src/core/lib/iomgr/resolved_address.h',
                       'src/core/lib/iomgr/sockaddr.h',
                       'src/core/lib/iomgr/sockaddr_posix.h',
                       'src/core/lib/iomgr/sockaddr_windows.h',
                       'src/core/lib/iomgr/socket_factory_posix.h',
                       'src/core/lib/iomgr/socket_mutator.h',
                       'src/core/lib/iomgr/socket_utils.h',
                       'src/core/lib/iomgr/socket_utils_posix.h',
                       'src/core/lib/iomgr/socket_windows.h',
                       'src/core/lib/iomgr/tcp_client.h',
                       'src/core/lib/iomgr/tcp_client_posix.h',
                       'src/core/lib/iomgr/tcp_posix.h',
                       'src/core/lib/iomgr/tcp_server.h',
                       'src/core/lib/iomgr/tcp_server_utils_posix.h',
                       'src/core/lib/iomgr/tcp_windows.h',
                       'src/core/lib/iomgr/time_averaged_stats.h',
                       'src/core/lib/iomgr/timer.h',
                       'src/core/lib/iomgr/timer_generic.h',
                       'src/core/lib/iomgr/timer_heap.h',
                       'src/core/lib/iomgr/timer_manager.h',
                       'src/core/lib/iomgr/unix_sockets_posix.h',
                       'src/core/lib/iomgr/wakeup_fd_pipe.h',
                       'src/core/lib/iomgr/wakeup_fd_posix.h',
                       'src/core/lib/iomgr/work_serializer.h',
                       'src/core/lib/json/json.h',
                       'src/core/lib/json/json_util.h',
                       'src/core/lib/matchers/matchers.h',
                       'src/core/lib/profiling/timers.h',
                       'src/core/lib/promise/activity.h',
                       'src/core/lib/promise/arena_promise.h',
                       'src/core/lib/promise/call_push_pull.h',
                       'src/core/lib/promise/context.h',
                       'src/core/lib/promise/detail/basic_seq.h',
                       'src/core/lib/promise/detail/promise_factory.h',
                       'src/core/lib/promise/detail/promise_like.h',
                       'src/core/lib/promise/detail/status.h',
                       'src/core/lib/promise/detail/switch.h',
                       'src/core/lib/promise/exec_ctx_wakeup_scheduler.h',
                       'src/core/lib/promise/intra_activity_waiter.h',
                       'src/core/lib/promise/latch.h',
                       'src/core/lib/promise/loop.h',
                       'src/core/lib/promise/map.h',
                       'src/core/lib/promise/poll.h',
                       'src/core/lib/promise/promise.h',
                       'src/core/lib/promise/race.h',
                       'src/core/lib/promise/seq.h',
                       'src/core/lib/promise/sleep.h',
                       'src/core/lib/promise/try_seq.h',
                       'src/core/lib/resolver/resolver.h',
                       'src/core/lib/resolver/resolver_factory.h',
                       'src/core/lib/resolver/resolver_registry.h',
                       'src/core/lib/resolver/server_address.h',
                       'src/core/lib/resource_quota/api.h',
                       'src/core/lib/resource_quota/arena.h',
                       'src/core/lib/resource_quota/memory_quota.h',
                       'src/core/lib/resource_quota/resource_quota.h',
                       'src/core/lib/resource_quota/thread_quota.h',
                       'src/core/lib/resource_quota/trace.h',
                       'src/core/lib/security/authorization/authorization_engine.h',
                       'src/core/lib/security/authorization/authorization_policy_provider.h',
                       'src/core/lib/security/authorization/evaluate_args.h',
                       'src/core/lib/security/authorization/grpc_authorization_engine.h',
                       'src/core/lib/security/authorization/grpc_server_authz_filter.h',
                       'src/core/lib/security/authorization/matchers.h',
                       'src/core/lib/security/authorization/rbac_policy.h',
                       'src/core/lib/security/context/security_context.h',
                       'src/core/lib/security/credentials/alts/alts_credentials.h',
                       'src/core/lib/security/credentials/alts/check_gcp_environment.h',
                       'src/core/lib/security/credentials/alts/grpc_alts_credentials_options.h',
                       'src/core/lib/security/credentials/call_creds_util.h',
                       'src/core/lib/security/credentials/channel_creds_registry.h',
                       'src/core/lib/security/credentials/composite/composite_credentials.h',
                       'src/core/lib/security/credentials/credentials.h',
                       'src/core/lib/security/credentials/external/aws_external_account_credentials.h',
                       'src/core/lib/security/credentials/external/aws_request_signer.h',
                       'src/core/lib/security/credentials/external/external_account_credentials.h',
                       'src/core/lib/security/credentials/external/file_external_account_credentials.h',
                       'src/core/lib/security/credentials/external/url_external_account_credentials.h',
                       'src/core/lib/security/credentials/fake/fake_credentials.h',
                       'src/core/lib/security/credentials/google_default/google_default_credentials.h',
                       'src/core/lib/security/credentials/iam/iam_credentials.h',
                       'src/core/lib/security/credentials/insecure/insecure_credentials.h',
                       'src/core/lib/security/credentials/jwt/json_token.h',
                       'src/core/lib/security/credentials/jwt/jwt_credentials.h',
                       'src/core/lib/security/credentials/jwt/jwt_verifier.h',
                       'src/core/lib/security/credentials/local/local_credentials.h',
                       'src/core/lib/security/credentials/oauth2/oauth2_credentials.h',
                       'src/core/lib/security/credentials/plugin/plugin_credentials.h',
                       'src/core/lib/security/credentials/ssl/ssl_credentials.h',
                       'src/core/lib/security/credentials/tls/grpc_tls_certificate_distributor.h',
                       'src/core/lib/security/credentials/tls/grpc_tls_certificate_provider.h',
                       'src/core/lib/security/credentials/tls/grpc_tls_certificate_verifier.h',
                       'src/core/lib/security/credentials/tls/grpc_tls_credentials_options.h',
                       'src/core/lib/security/credentials/tls/tls_credentials.h',
                       'src/core/lib/security/credentials/tls/tls_utils.h',
                       'src/core/lib/security/credentials/xds/xds_credentials.h',
                       'src/core/lib/security/security_connector/alts/alts_security_connector.h',
                       'src/core/lib/security/security_connector/fake/fake_security_connector.h',
                       'src/core/lib/security/security_connector/insecure/insecure_security_connector.h',
                       'src/core/lib/security/security_connector/load_system_roots.h',
                       'src/core/lib/security/security_connector/load_system_roots_linux.h',
                       'src/core/lib/security/security_connector/local/local_security_connector.h',
                       'src/core/lib/security/security_connector/security_connector.h',
                       'src/core/lib/security/security_connector/ssl/ssl_security_connector.h',
                       'src/core/lib/security/security_connector/ssl_utils.h',
                       'src/core/lib/security/security_connector/ssl_utils_config.h',
                       'src/core/lib/security/security_connector/tls/tls_security_connector.h',
                       'src/core/lib/security/transport/auth_filters.h',
                       'src/core/lib/security/transport/secure_endpoint.h',
                       'src/core/lib/security/transport/security_handshaker.h',
                       'src/core/lib/security/transport/tsi_error.h',
                       'src/core/lib/security/util/json_util.h',
                       'src/core/lib/service_config/service_config.h',
                       'src/core/lib/service_config/service_config_call_data.h',
                       'src/core/lib/service_config/service_config_impl.h',
                       'src/core/lib/service_config/service_config_parser.h',
                       'src/core/lib/slice/b64.h',
                       'src/core/lib/slice/percent_encoding.h',
                       'src/core/lib/slice/slice.h',
                       'src/core/lib/slice/slice_buffer.h',
                       'src/core/lib/slice/slice_internal.h',
                       'src/core/lib/slice/slice_refcount.h',
                       'src/core/lib/slice/slice_refcount_base.h',
                       'src/core/lib/slice/slice_split.h',
                       'src/core/lib/slice/slice_string_helpers.h',
                       'src/core/lib/surface/api_trace.h',
                       'src/core/lib/surface/builtins.h',
                       'src/core/lib/surface/call.h',
                       'src/core/lib/surface/call_test_only.h',
                       'src/core/lib/surface/channel.h',
                       'src/core/lib/surface/channel_init.h',
                       'src/core/lib/surface/channel_stack_type.h',
                       'src/core/lib/surface/completion_queue.h',
                       'src/core/lib/surface/completion_queue_factory.h',
                       'src/core/lib/surface/event_string.h',
                       'src/core/lib/surface/init.h',
                       'src/core/lib/surface/lame_client.h',
                       'src/core/lib/surface/server.h',
                       'src/core/lib/surface/validate_metadata.h',
                       'src/core/lib/transport/bdp_estimator.h',
+                      'src/core/lib/transport/byte_stream.h',
                       'src/core/lib/transport/connectivity_state.h',
                       'src/core/lib/transport/error_utils.h',
                       'src/core/lib/transport/handshaker.h',
                       'src/core/lib/transport/handshaker_factory.h',
                       'src/core/lib/transport/handshaker_registry.h',
                       'src/core/lib/transport/http2_errors.h',
                       'src/core/lib/transport/http_connect_handshaker.h',
                       'src/core/lib/transport/metadata_batch.h',
                       'src/core/lib/transport/parsed_metadata.h',
                       'src/core/lib/transport/pid_controller.h',
                       'src/core/lib/transport/status_conversion.h',
                       'src/core/lib/transport/tcp_connect_handshaker.h',
                       'src/core/lib/transport/timeout_encoding.h',
                       'src/core/lib/transport/transport.h',
                       'src/core/lib/transport/transport_fwd.h',
                       'src/core/lib/transport/transport_impl.h',
                       'src/core/lib/uri/uri_parser.h',
                       'src/core/tsi/alts/crypt/gsec.h',
                       'src/core/tsi/alts/frame_protector/alts_counter.h',
                       'src/core/tsi/alts/frame_protector/alts_crypter.h',
                       'src/core/tsi/alts/frame_protector/alts_frame_protector.h',
                       'src/core/tsi/alts/frame_protector/alts_record_protocol_crypter_common.h',
                       'src/core/tsi/alts/frame_protector/frame_handler.h',
                       'src/core/tsi/alts/handshaker/alts_handshaker_client.h',
                       'src/core/tsi/alts/handshaker/alts_shared_resource.h',
                       'src/core/tsi/alts/handshaker/alts_tsi_handshaker.h',
                       'src/core/tsi/alts/handshaker/alts_tsi_handshaker_private.h',
                       'src/core/tsi/alts/handshaker/alts_tsi_utils.h',
                       'src/core/tsi/alts/handshaker/transport_security_common_api.h',
                       'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_integrity_only_record_protocol.h',
                       'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_privacy_integrity_record_protocol.h',
                       'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol.h',
                       'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol_common.h',
                       'src/core/tsi/alts/zero_copy_frame_protector/alts_iovec_record_protocol.h',
                       'src/core/tsi/alts/zero_copy_frame_protector/alts_zero_copy_grpc_protector.h',
                       'src/core/tsi/fake_transport_security.h',
                       'src/core/tsi/local_transport_security.h',
                       'src/core/tsi/ssl/key_logging/ssl_key_logging.h',
                       'src/core/tsi/ssl/session_cache/ssl_session.h',
                       'src/core/tsi/ssl/session_cache/ssl_session_cache.h',
                       'src/core/tsi/ssl_transport_security.h',
                       'src/core/tsi/ssl_types.h',
                       'src/core/tsi/transport_security.h',
                       'src/core/tsi/transport_security_grpc.h',
                       'src/core/tsi/transport_security_interface.h',
                       'src/cpp/client/channel_cc.cc',
                       'src/cpp/client/client_callback.cc',
                       'src/cpp/client/client_context.cc',
                       'src/cpp/client/client_interceptor.cc',
                       'src/cpp/client/create_channel.cc',
                       'src/cpp/client/create_channel_internal.cc',
                       'src/cpp/client/create_channel_internal.h',
                       'src/cpp/client/create_channel_posix.cc',
                       'src/cpp/client/credentials_cc.cc',
                       'src/cpp/client/insecure_credentials.cc',
                       'src/cpp/client/secure_credentials.cc',
                       'src/cpp/client/secure_credentials.h',
                       'src/cpp/client/xds_credentials.cc',
                       'src/cpp/codegen/codegen_init.cc',
                       'src/cpp/common/alarm.cc',
                       'src/cpp/common/auth_property_iterator.cc',
                       'src/cpp/common/channel_arguments.cc',
                       'src/cpp/common/channel_filter.cc',
                       'src/cpp/common/channel_filter.h',
                       'src/cpp/common/completion_queue_cc.cc',
                       'src/cpp/common/core_codegen.cc',
                       'src/cpp/common/resource_quota_cc.cc',
                       'src/cpp/common/rpc_method.cc',
                       'src/cpp/common/secure_auth_context.cc',
                       'src/cpp/common/secure_auth_context.h',
                       'src/cpp/common/secure_channel_arguments.cc',
                       'src/cpp/common/secure_create_auth_context.cc',
                       'src/cpp/common/tls_certificate_provider.cc',
                       'src/cpp/common/tls_certificate_verifier.cc',
                       'src/cpp/common/tls_credentials_options.cc',
                       'src/cpp/common/validate_service_config.cc',
                       'src/cpp/common/version_cc.cc',
                       'src/cpp/server/async_generic_service.cc',
                       'src/cpp/server/channel_argument_option.cc',
                       'src/cpp/server/create_default_thread_pool.cc',
                       'src/cpp/server/dynamic_thread_pool.cc',
                       'src/cpp/server/dynamic_thread_pool.h',
                       'src/cpp/server/external_connection_acceptor_impl.cc',
                       'src/cpp/server/external_connection_acceptor_impl.h',
                       'src/cpp/server/health/default_health_check_service.cc',
                       'src/cpp/server/health/default_health_check_service.h',
                       'src/cpp/server/health/health_check_service.cc',
                       'src/cpp/server/health/health_check_service_server_builder_option.cc',
                       'src/cpp/server/insecure_server_credentials.cc',
                       'src/cpp/server/orca/call_metric_recorder.cc',
                       'src/cpp/server/secure_server_credentials.cc',
                       'src/cpp/server/secure_server_credentials.h',
                       'src/cpp/server/server_builder.cc',
                       'src/cpp/server/server_callback.cc',
                       'src/cpp/server/server_cc.cc',
                       'src/cpp/server/server_context.cc',
                       'src/cpp/server/server_credentials.cc',
                       'src/cpp/server/server_posix.cc',
                       'src/cpp/server/thread_pool_interface.h',
                       'src/cpp/server/xds_server_credentials.cc',
                       'src/cpp/thread_manager/thread_manager.cc',
                       'src/cpp/thread_manager/thread_manager.h',
                       'src/cpp/util/byte_buffer_cc.cc',
                       'src/cpp/util/status.cc',
                       'src/cpp/util/string_ref.cc',
                       'src/cpp/util/time_cc.cc',
                       'third_party/re2/re2/bitmap256.h',
                       'third_party/re2/re2/filtered_re2.h',
                       'third_party/re2/re2/pod_array.h',
                       'third_party/re2/re2/prefilter.h',
                       'third_party/re2/re2/prefilter_tree.h',
                       'third_party/re2/re2/prog.h',
                       'third_party/re2/re2/re2.h',
                       'third_party/re2/re2/regexp.h',
                       'third_party/re2/re2/set.h',
                       'third_party/re2/re2/sparse_array.h',
                       'third_party/re2/re2/sparse_set.h',
                       'third_party/re2/re2/stringpiece.h',
                       'third_party/re2/re2/unicode_casefold.h',
                       'third_party/re2/re2/unicode_groups.h',
                       'third_party/re2/re2/walker-inl.h',
                       'third_party/re2/util/benchmark.h',
                       'third_party/re2/util/flags.h',
                       'third_party/re2/util/logging.h',
                       'third_party/re2/util/malloc_counter.h',
                       'third_party/re2/util/mix.h',
                       'third_party/re2/util/mutex.h',
                       'third_party/re2/util/pcre.h',
                       'third_party/re2/util/strutil.h',
                       'third_party/re2/util/test.h',
                       'third_party/re2/util/utf.h',
                       'third_party/re2/util/util.h',
                       'third_party/upb/third_party/utf8_range/utf8_range.h',
                       'third_party/upb/upb/decode.h',
                       'third_party/upb/upb/decode_fast.h',
                       'third_party/upb/upb/decode_internal.h',
                       'third_party/upb/upb/def.h',
                       'third_party/upb/upb/def.hpp',
                       'third_party/upb/upb/encode.h',
                       'third_party/upb/upb/json_encode.h',
                       'third_party/upb/upb/msg.h',
                       'third_party/upb/upb/msg_internal.h',
                       'third_party/upb/upb/port_def.inc',
                       'third_party/upb/upb/port_undef.inc',
                       'third_party/upb/upb/reflection.h',
                       'third_party/upb/upb/reflection.hpp',
                       'third_party/upb/upb/table_internal.h',
                       'third_party/upb/upb/text_encode.h',
                       'third_party/upb/upb/upb.h',
                       'third_party/upb/upb/upb.hpp',
                       'third_party/upb/upb/upb_internal.h',
                       'third_party/xxhash/xxhash.h'
 
     ss.private_header_files = 'src/core/ext/filters/channel_idle/channel_idle_filter.h',
                               'src/core/ext/filters/channel_idle/idle_filter_state.h',
                               'src/core/ext/filters/client_channel/backend_metric.h',
                               'src/core/ext/filters/client_channel/backup_poller.h',
                               'src/core/ext/filters/client_channel/client_channel.h',
                               'src/core/ext/filters/client_channel/client_channel_channelz.h',
                               'src/core/ext/filters/client_channel/client_channel_factory.h',
                               'src/core/ext/filters/client_channel/config_selector.h',
                               'src/core/ext/filters/client_channel/connector.h',
                               'src/core/ext/filters/client_channel/dynamic_filters.h',
                               'src/core/ext/filters/client_channel/global_subchannel_pool.h',
                               'src/core/ext/filters/client_channel/health/health_check_client.h',
                               'src/core/ext/filters/client_channel/http_proxy.h',
                               'src/core/ext/filters/client_channel/lb_policy.h',
                               'src/core/ext/filters/client_channel/lb_policy/address_filtering.h',
                               'src/core/ext/filters/client_channel/lb_policy/backend_metric_data.h',
                               'src/core/ext/filters/client_channel/lb_policy/child_policy_handler.h',
                               'src/core/ext/filters/client_channel/lb_policy/grpclb/client_load_reporting_filter.h',
                               'src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.h',
                               'src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_balancer_addresses.h',
                               'src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_client_stats.h',
                               'src/core/ext/filters/client_channel/lb_policy/grpclb/load_balancer_api.h',
                               'src/core/ext/filters/client_channel/lb_policy/oob_backend_metric.h',
                               'src/core/ext/filters/client_channel/lb_policy/outlier_detection/outlier_detection.h',
                               'src/core/ext/filters/client_channel/lb_policy/ring_hash/ring_hash.h',
                               'src/core/ext/filters/client_channel/lb_policy/subchannel_list.h',
                               'src/core/ext/filters/client_channel/lb_policy/xds/xds.h',
                               'src/core/ext/filters/client_channel/lb_policy/xds/xds_channel_args.h',
                               'src/core/ext/filters/client_channel/lb_policy_factory.h',
                               'src/core/ext/filters/client_channel/lb_policy_registry.h',
                               'src/core/ext/filters/client_channel/local_subchannel_pool.h',
                               'src/core/ext/filters/client_channel/proxy_mapper.h',
                               'src/core/ext/filters/client_channel/proxy_mapper_registry.h',
                               'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver.h',
                               'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.h',
                               'src/core/ext/filters/client_channel/resolver/dns/dns_resolver_selection.h',
                               'src/core/ext/filters/client_channel/resolver/fake/fake_resolver.h',
                               'src/core/ext/filters/client_channel/resolver/polling_resolver.h',
                               'src/core/ext/filters/client_channel/resolver/xds/xds_resolver.h',
                               'src/core/ext/filters/client_channel/resolver_result_parsing.h',
                               'src/core/ext/filters/client_channel/retry_filter.h',
                               'src/core/ext/filters/client_channel/retry_service_config.h',
                               'src/core/ext/filters/client_channel/retry_throttle.h',
                               'src/core/ext/filters/client_channel/subchannel.h',
                               'src/core/ext/filters/client_channel/subchannel_interface.h',
                               'src/core/ext/filters/client_channel/subchannel_interface_internal.h',
                               'src/core/ext/filters/client_channel/subchannel_pool_interface.h',
                               'src/core/ext/filters/client_channel/subchannel_stream_client.h',
                               'src/core/ext/filters/deadline/deadline_filter.h',
                               'src/core/ext/filters/fault_injection/fault_injection_filter.h',
                               'src/core/ext/filters/fault_injection/service_config_parser.h',
                               'src/core/ext/filters/http/client/http_client_filter.h',
                               'src/core/ext/filters/http/client_authority_filter.h',
                               'src/core/ext/filters/http/message_compress/message_compress_filter.h',
                               'src/core/ext/filters/http/message_compress/message_decompress_filter.h',
                               'src/core/ext/filters/http/server/http_server_filter.h',
                               'src/core/ext/filters/message_size/message_size_filter.h',
                               'src/core/ext/filters/rbac/rbac_filter.h',
                               'src/core/ext/filters/rbac/rbac_service_config_parser.h',
                               'src/core/ext/filters/server_config_selector/server_config_selector.h',
                               'src/core/ext/filters/server_config_selector/server_config_selector_filter.h',
                               'src/core/ext/transport/binder/client/binder_connector.h',
                               'src/core/ext/transport/binder/client/channel_create_impl.h',
                               'src/core/ext/transport/binder/client/connection_id_generator.h',
                               'src/core/ext/transport/binder/client/endpoint_binder_pool.h',
                               'src/core/ext/transport/binder/client/jni_utils.h',
                               'src/core/ext/transport/binder/client/security_policy_setting.h',
                               'src/core/ext/transport/binder/server/binder_server.h',
                               'src/core/ext/transport/binder/transport/binder_stream.h',
                               'src/core/ext/transport/binder/transport/binder_transport.h',
                               'src/core/ext/transport/binder/utils/binder_auto_utils.h',
                               'src/core/ext/transport/binder/utils/ndk_binder.h',
                               'src/core/ext/transport/binder/utils/transport_stream_receiver.h',
                               'src/core/ext/transport/binder/utils/transport_stream_receiver_impl.h',
                               'src/core/ext/transport/binder/wire_format/binder.h',
                               'src/core/ext/transport/binder/wire_format/binder_android.h',
                               'src/core/ext/transport/binder/wire_format/binder_constants.h',
                               'src/core/ext/transport/binder/wire_format/transaction.h',
                               'src/core/ext/transport/binder/wire_format/wire_reader.h',
                               'src/core/ext/transport/binder/wire_format/wire_reader_impl.h',
                               'src/core/ext/transport/binder/wire_format/wire_writer.h',
                               'src/core/ext/transport/chttp2/alpn/alpn.h',
                               'src/core/ext/transport/chttp2/client/chttp2_connector.h',
                               'src/core/ext/transport/chttp2/server/chttp2_server.h',
                               'src/core/ext/transport/chttp2/transport/bin_decoder.h',
                               'src/core/ext/transport/chttp2/transport/bin_encoder.h',
                               'src/core/ext/transport/chttp2/transport/chttp2_transport.h',
                               'src/core/ext/transport/chttp2/transport/context_list.h',
                               'src/core/ext/transport/chttp2/transport/flow_control.h',
                               'src/core/ext/transport/chttp2/transport/frame.h',
                               'src/core/ext/transport/chttp2/transport/frame_data.h',
                               'src/core/ext/transport/chttp2/transport/frame_goaway.h',
                               'src/core/ext/transport/chttp2/transport/frame_ping.h',
                               'src/core/ext/transport/chttp2/transport/frame_rst_stream.h',
                               'src/core/ext/transport/chttp2/transport/frame_settings.h',
                               'src/core/ext/transport/chttp2/transport/frame_window_update.h',
                               'src/core/ext/transport/chttp2/transport/hpack_constants.h',
                               'src/core/ext/transport/chttp2/transport/hpack_encoder.h',
                               'src/core/ext/transport/chttp2/transport/hpack_encoder_table.h',
                               'src/core/ext/transport/chttp2/transport/hpack_parser.h',
                               'src/core/ext/transport/chttp2/transport/hpack_parser_table.h',
                               'src/core/ext/transport/chttp2/transport/http2_settings.h',
                               'src/core/ext/transport/chttp2/transport/huffsyms.h',
                               'src/core/ext/transport/chttp2/transport/internal.h',
                               'src/core/ext/transport/chttp2/transport/stream_map.h',
                               'src/core/ext/transport/chttp2/transport/varint.h',
                               'src/core/ext/transport/inproc/inproc_transport.h',
                               'src/core/ext/upb-generated/envoy/admin/v3/certs.upb.h',
                               'src/core/ext/upb-generated/envoy/admin/v3/clusters.upb.h',
                               'src/core/ext/upb-generated/envoy/admin/v3/config_dump.upb.h',
                               'src/core/ext/upb-generated/envoy/admin/v3/init_dump.upb.h',
                               'src/core/ext/upb-generated/envoy/admin/v3/listeners.upb.h',
                               'src/core/ext/upb-generated/envoy/admin/v3/memory.upb.h',
                               'src/core/ext/upb-generated/envoy/admin/v3/metrics.upb.h',
                               'src/core/ext/upb-generated/envoy/admin/v3/mutex_stats.upb.h',
                               'src/core/ext/upb-generated/envoy/admin/v3/server_info.upb.h',
                               'src/core/ext/upb-generated/envoy/admin/v3/tap.upb.h',
                               'src/core/ext/upb-generated/envoy/annotations/deprecation.upb.h',
                               'src/core/ext/upb-generated/envoy/annotations/resource.upb.h',
                               'src/core/ext/upb-generated/envoy/config/accesslog/v3/accesslog.upb.h',
                               'src/core/ext/upb-generated/envoy/config/bootstrap/v3/bootstrap.upb.h',
                               'src/core/ext/upb-generated/envoy/config/cluster/v3/circuit_breaker.upb.h',
                               'src/core/ext/upb-generated/envoy/config/cluster/v3/cluster.upb.h',
                               'src/core/ext/upb-generated/envoy/config/cluster/v3/filter.upb.h',
                               'src/core/ext/upb-generated/envoy/config/cluster/v3/outlier_detection.upb.h',
                               'src/core/ext/upb-generated/envoy/config/common/matcher/v3/matcher.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/address.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/backoff.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/base.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/config_source.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/event_service_config.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/extension.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/grpc_method_list.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/grpc_service.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/health_check.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/http_uri.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/protocol.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/proxy_protocol.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/resolver.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/socket_option.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/substitution_format_string.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/udp_socket_config.upb.h',
                               'src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint.upb.h',
                               'src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint_components.upb.h',
                               'src/core/ext/upb-generated/envoy/config/endpoint/v3/load_report.upb.h',
                               'src/core/ext/upb-generated/envoy/config/listener/v3/api_listener.upb.h',
                               'src/core/ext/upb-generated/envoy/config/listener/v3/listener.upb.h',
                               'src/core/ext/upb-generated/envoy/config/listener/v3/listener_components.upb.h',
                               'src/core/ext/upb-generated/envoy/config/listener/v3/quic_config.upb.h',
                               'src/core/ext/upb-generated/envoy/config/listener/v3/udp_listener_config.upb.h',
                               'src/core/ext/upb-generated/envoy/config/metrics/v3/metrics_service.upb.h',
                               'src/core/ext/upb-generated/envoy/config/metrics/v3/stats.upb.h',
                               'src/core/ext/upb-generated/envoy/config/overload/v3/overload.upb.h',
                               'src/core/ext/upb-generated/envoy/config/rbac/v3/rbac.upb.h',
                               'src/core/ext/upb-generated/envoy/config/route/v3/route.upb.h',
                               'src/core/ext/upb-generated/envoy/config/route/v3/route_components.upb.h',
                               'src/core/ext/upb-generated/envoy/config/route/v3/scoped_route.upb.h',
                               'src/core/ext/upb-generated/envoy/config/tap/v3/common.upb.h',
                               'src/core/ext/upb-generated/envoy/config/trace/v3/datadog.upb.h',
                               'src/core/ext/upb-generated/envoy/config/trace/v3/dynamic_ot.upb.h',
                               'src/core/ext/upb-generated/envoy/config/trace/v3/http_tracer.upb.h',
                               'src/core/ext/upb-generated/envoy/config/trace/v3/lightstep.upb.h',
                               'src/core/ext/upb-generated/envoy/config/trace/v3/opencensus.upb.h',
                               'src/core/ext/upb-generated/envoy/config/trace/v3/service.upb.h',
                               'src/core/ext/upb-generated/envoy/config/trace/v3/skywalking.upb.h',
                               'src/core/ext/upb-generated/envoy/config/trace/v3/trace.upb.h',
                               'src/core/ext/upb-generated/envoy/config/trace/v3/xray.upb.h',
                               'src/core/ext/upb-generated/envoy/config/trace/v3/zipkin.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/clusters/aggregate/v3/cluster.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/filters/common/fault/v3/fault.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/filters/http/fault/v3/fault.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/filters/http/rbac/v3/rbac.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/filters/http/router/v3/router.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/ring_hash/v3/ring_hash.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/wrr_locality/v3/wrr_locality.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/cert.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/common.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/secret.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upb.h',
                               'src/core/ext/upb-generated/envoy/service/discovery/v3/ads.upb.h',
                               'src/core/ext/upb-generated/envoy/service/discovery/v3/discovery.upb.h',
                               'src/core/ext/upb-generated/envoy/service/load_stats/v3/lrs.upb.h',
                               'src/core/ext/upb-generated/envoy/service/status/v3/csds.upb.h',
                               'src/core/ext/upb-generated/envoy/type/http/v3/cookie.upb.h',
                               'src/core/ext/upb-generated/envoy/type/http/v3/path_transformation.upb.h',
                               'src/core/ext/upb-generated/envoy/type/matcher/v3/http_inputs.upb.h',
                               'src/core/ext/upb-generated/envoy/type/matcher/v3/metadata.upb.h',
                               'src/core/ext/upb-generated/envoy/type/matcher/v3/node.upb.h',
                               'src/core/ext/upb-generated/envoy/type/matcher/v3/number.upb.h',
                               'src/core/ext/upb-generated/envoy/type/matcher/v3/path.upb.h',
                               'src/core/ext/upb-generated/envoy/type/matcher/v3/regex.upb.h',
                               'src/core/ext/upb-generated/envoy/type/matcher/v3/string.upb.h',
                               'src/core/ext/upb-generated/envoy/type/matcher/v3/struct.upb.h',
                               'src/core/ext/upb-generated/envoy/type/matcher/v3/value.upb.h',
                               'src/core/ext/upb-generated/envoy/type/metadata/v3/metadata.upb.h',
                               'src/core/ext/upb-generated/envoy/type/tracing/v3/custom_tag.upb.h',
                               'src/core/ext/upb-generated/envoy/type/v3/hash_policy.upb.h',
                               'src/core/ext/upb-generated/envoy/type/v3/http.upb.h',
                               'src/core/ext/upb-generated/envoy/type/v3/http_status.upb.h',
                               'src/core/ext/upb-generated/envoy/type/v3/percent.upb.h',
                               'src/core/ext/upb-generated/envoy/type/v3/range.upb.h',
                               'src/core/ext/upb-generated/envoy/type/v3/ratelimit_unit.upb.h',
                               'src/core/ext/upb-generated/envoy/type/v3/semantic_version.upb.h',
                               'src/core/ext/upb-generated/envoy/type/v3/token_bucket.upb.h',
                               'src/core/ext/upb-generated/google/api/annotations.upb.h',
                               'src/core/ext/upb-generated/google/api/expr/v1alpha1/checked.upb.h',
                               'src/core/ext/upb-generated/google/api/expr/v1alpha1/syntax.upb.h',
                               'src/core/ext/upb-generated/google/api/http.upb.h',
                               'src/core/ext/upb-generated/google/api/httpbody.upb.h',
                               'src/core/ext/upb-generated/google/protobuf/any.upb.h',
                               'src/core/ext/upb-generated/google/protobuf/descriptor.upb.h',
                               'src/core/ext/upb-generated/google/protobuf/duration.upb.h',
                               'src/core/ext/upb-generated/google/protobuf/empty.upb.h',
                               'src/core/ext/upb-generated/google/protobuf/struct.upb.h',
                               'src/core/ext/upb-generated/google/protobuf/timestamp.upb.h',
                               'src/core/ext/upb-generated/google/protobuf/wrappers.upb.h',
                               'src/core/ext/upb-generated/google/rpc/status.upb.h',
                               'src/core/ext/upb-generated/opencensus/proto/trace/v1/trace_config.upb.h',
                               'src/core/ext/upb-generated/src/proto/grpc/gcp/altscontext.upb.h',
                               'src/core/ext/upb-generated/src/proto/grpc/gcp/handshaker.upb.h',
                               'src/core/ext/upb-generated/src/proto/grpc/gcp/transport_security_common.upb.h',
                               'src/core/ext/upb-generated/src/proto/grpc/health/v1/health.upb.h',
                               'src/core/ext/upb-generated/src/proto/grpc/lb/v1/load_balancer.upb.h',
                               'src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls.upb.h',
                               'src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls_config.upb.h',
                               'src/core/ext/upb-generated/udpa/annotations/migrate.upb.h',
                               'src/core/ext/upb-generated/udpa/annotations/security.upb.h',
                               'src/core/ext/upb-generated/udpa/annotations/sensitive.upb.h',
                               'src/core/ext/upb-generated/udpa/annotations/status.upb.h',
                               'src/core/ext/upb-generated/udpa/annotations/versioning.upb.h',
                               'src/core/ext/upb-generated/validate/validate.upb.h',
                               'src/core/ext/upb-generated/xds/annotations/v3/migrate.upb.h',
                               'src/core/ext/upb-generated/xds/annotations/v3/security.upb.h',
                               'src/core/ext/upb-generated/xds/annotations/v3/sensitive.upb.h',
                               'src/core/ext/upb-generated/xds/annotations/v3/status.upb.h',
                               'src/core/ext/upb-generated/xds/annotations/v3/versioning.upb.h',
                               'src/core/ext/upb-generated/xds/core/v3/authority.upb.h',
                               'src/core/ext/upb-generated/xds/core/v3/collection_entry.upb.h',
                               'src/core/ext/upb-generated/xds/core/v3/context_params.upb.h',
                               'src/core/ext/upb-generated/xds/core/v3/extension.upb.h',
                               'src/core/ext/upb-generated/xds/core/v3/resource.upb.h',
                               'src/core/ext/upb-generated/xds/core/v3/resource_locator.upb.h',
                               'src/core/ext/upb-generated/xds/core/v3/resource_name.upb.h',
                               'src/core/ext/upb-generated/xds/data/orca/v3/orca_load_report.upb.h',
                               'src/core/ext/upb-generated/xds/service/orca/v3/orca.upb.h',
                               'src/core/ext/upb-generated/xds/type/matcher/v3/matcher.upb.h',
                               'src/core/ext/upb-generated/xds/type/matcher/v3/regex.upb.h',
                               'src/core/ext/upb-generated/xds/type/matcher/v3/string.upb.h',
                               'src/core/ext/upb-generated/xds/type/v3/typed_struct.upb.h',
                               'src/core/ext/upbdefs-generated/envoy/admin/v3/certs.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/admin/v3/clusters.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/admin/v3/config_dump.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/admin/v3/init_dump.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/admin/v3/listeners.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/admin/v3/memory.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/admin/v3/metrics.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/admin/v3/mutex_stats.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/admin/v3/server_info.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/admin/v3/tap.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/annotations/deprecation.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/annotations/resource.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/accesslog/v3/accesslog.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/bootstrap/v3/bootstrap.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/circuit_breaker.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/cluster.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/filter.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/outlier_detection.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/common/matcher/v3/matcher.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/address.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/backoff.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/base.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/config_source.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/event_service_config.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/extension.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_method_list.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_service.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/health_check.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/http_uri.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/protocol.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/proxy_protocol.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/resolver.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/socket_option.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/substitution_format_string.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/udp_socket_config.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint_components.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/load_report.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/listener/v3/api_listener.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener_components.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/listener/v3/quic_config.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/listener/v3/udp_listener_config.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/metrics/v3/metrics_service.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/metrics/v3/stats.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/overload/v3/overload.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/rbac/v3/rbac.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/route/v3/route.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/route/v3/route_components.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/route/v3/scoped_route.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/tap/v3/common.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/trace/v3/datadog.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/trace/v3/dynamic_ot.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/trace/v3/http_tracer.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/trace/v3/lightstep.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/trace/v3/opencensus.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/trace/v3/service.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/trace/v3/skywalking.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/trace/v3/trace.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/trace/v3/xray.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/trace/v3/zipkin.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/extensions/clusters/aggregate/v3/cluster.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/extensions/filters/common/fault/v3/fault.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/extensions/filters/http/fault/v3/fault.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/extensions/filters/http/rbac/v3/rbac.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/extensions/filters/http/router/v3/router.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/cert.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/common.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/secret.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/service/discovery/v3/ads.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/service/discovery/v3/discovery.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/service/load_stats/v3/lrs.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/service/status/v3/csds.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/http/v3/cookie.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/http/v3/path_transformation.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/http_inputs.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/metadata.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/node.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/number.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/path.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/regex.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/string.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/struct.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/value.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/metadata/v3/metadata.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/tracing/v3/custom_tag.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/v3/hash_policy.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/v3/http.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/v3/http_status.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/v3/percent.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/v3/range.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/v3/ratelimit_unit.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/v3/semantic_version.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/v3/token_bucket.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/api/annotations.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/checked.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/syntax.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/api/http.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/api/httpbody.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/protobuf/any.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/protobuf/descriptor.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/protobuf/duration.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/protobuf/empty.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/protobuf/struct.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/protobuf/timestamp.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/protobuf/wrappers.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/rpc/status.upbdefs.h',
                               'src/core/ext/upbdefs-generated/opencensus/proto/trace/v1/trace_config.upbdefs.h',
                               'src/core/ext/upbdefs-generated/src/proto/grpc/lookup/v1/rls_config.upbdefs.h',
                               'src/core/ext/upbdefs-generated/udpa/annotations/migrate.upbdefs.h',
                               'src/core/ext/upbdefs-generated/udpa/annotations/security.upbdefs.h',
                               'src/core/ext/upbdefs-generated/udpa/annotations/sensitive.upbdefs.h',
                               'src/core/ext/upbdefs-generated/udpa/annotations/status.upbdefs.h',
                               'src/core/ext/upbdefs-generated/udpa/annotations/versioning.upbdefs.h',
                               'src/core/ext/upbdefs-generated/validate/validate.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/annotations/v3/migrate.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/annotations/v3/security.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/annotations/v3/sensitive.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/annotations/v3/status.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/annotations/v3/versioning.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/core/v3/authority.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/core/v3/collection_entry.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/core/v3/context_params.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/core/v3/extension.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/core/v3/resource.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/core/v3/resource_locator.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/core/v3/resource_name.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/type/matcher/v3/matcher.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/type/matcher/v3/regex.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/type/matcher/v3/string.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/type/v3/typed_struct.upbdefs.h',
                               'src/core/ext/xds/certificate_provider_factory.h',
                               'src/core/ext/xds/certificate_provider_registry.h',
                               'src/core/ext/xds/certificate_provider_store.h',
                               'src/core/ext/xds/file_watcher_certificate_provider_factory.h',
                               'src/core/ext/xds/upb_utils.h',
                               'src/core/ext/xds/xds_api.h',
                               'src/core/ext/xds/xds_bootstrap.h',
                               'src/core/ext/xds/xds_certificate_provider.h',
                               'src/core/ext/xds/xds_channel_args.h',
                               'src/core/ext/xds/xds_channel_stack_modifier.h',
                               'src/core/ext/xds/xds_client.h',
                               'src/core/ext/xds/xds_client_stats.h',
                               'src/core/ext/xds/xds_cluster.h',
                               'src/core/ext/xds/xds_cluster_specifier_plugin.h',
                               'src/core/ext/xds/xds_common_types.h',
                               'src/core/ext/xds/xds_endpoint.h',
                               'src/core/ext/xds/xds_http_fault_filter.h',
                               'src/core/ext/xds/xds_http_filters.h',
                               'src/core/ext/xds/xds_http_rbac_filter.h',
                               'src/core/ext/xds/xds_lb_policy_registry.h',
                               'src/core/ext/xds/xds_listener.h',
                               'src/core/ext/xds/xds_resource_type.h',
                               'src/core/ext/xds/xds_resource_type_impl.h',
                               'src/core/ext/xds/xds_route_config.h',
                               'src/core/ext/xds/xds_routing.h',
                               'src/core/lib/address_utils/parse_address.h',
                               'src/core/lib/address_utils/sockaddr_utils.h',
                               'src/core/lib/avl/avl.h',
                               'src/core/lib/backoff/backoff.h',
                               'src/core/lib/channel/call_finalization.h',
                               'src/core/lib/channel/call_tracer.h',
                               'src/core/lib/channel/channel_args.h',
                               'src/core/lib/channel/channel_args_preconditioning.h',
                               'src/core/lib/channel/channel_fwd.h',
                               'src/core/lib/channel/channel_stack.h',
                               'src/core/lib/channel/channel_stack_builder.h',
                               'src/core/lib/channel/channel_stack_builder_impl.h',
                               'src/core/lib/channel/channel_trace.h',
                               'src/core/lib/channel/channelz.h',
                               'src/core/lib/channel/channelz_registry.h',
                               'src/core/lib/channel/connected_channel.h',
                               'src/core/lib/channel/context.h',
                               'src/core/lib/channel/promise_based_filter.h',
                               'src/core/lib/channel/status_util.h',
                               'src/core/lib/compression/compression_internal.h',
                               'src/core/lib/compression/message_compress.h',
                               'src/core/lib/config/core_configuration.h',
                               'src/core/lib/debug/stats.h',
                               'src/core/lib/debug/stats_data.h',
                               'src/core/lib/debug/trace.h',
                               'src/core/lib/event_engine/channel_args_endpoint_config.h',
                               'src/core/lib/event_engine/event_engine_factory.h',
                               'src/core/lib/event_engine/handle_containers.h',
                               'src/core/lib/event_engine/iomgr_engine.h',
                               'src/core/lib/event_engine/trace.h',
                               'src/core/lib/gpr/alloc.h',
                               'src/core/lib/gpr/env.h',
                               'src/core/lib/gpr/murmur_hash.h',
                               'src/core/lib/gpr/spinlock.h',
                               'src/core/lib/gpr/string.h',
                               'src/core/lib/gpr/string_windows.h',
                               'src/core/lib/gpr/time_precise.h',
                               'src/core/lib/gpr/tls.h',
                               'src/core/lib/gpr/tmpfile.h',
                               'src/core/lib/gpr/useful.h',
                               'src/core/lib/gprpp/atomic_utils.h',
                               'src/core/lib/gprpp/bitset.h',
                               'src/core/lib/gprpp/chunked_vector.h',
                               'src/core/lib/gprpp/construct_destruct.h',
                               'src/core/lib/gprpp/cpp_impl_of.h',
                               'src/core/lib/gprpp/debug_location.h',
                               'src/core/lib/gprpp/dual_ref_counted.h',
                               'src/core/lib/gprpp/examine_stack.h',
                               'src/core/lib/gprpp/fork.h',
                               'src/core/lib/gprpp/global_config.h',
                               'src/core/lib/gprpp/global_config_custom.h',
                               'src/core/lib/gprpp/global_config_env.h',
                               'src/core/lib/gprpp/global_config_generic.h',
                               'src/core/lib/gprpp/host_port.h',
                               'src/core/lib/gprpp/manual_constructor.h',
                               'src/core/lib/gprpp/match.h',
                               'src/core/lib/gprpp/memory.h',
                               'src/core/lib/gprpp/mpscq.h',
                               'src/core/lib/gprpp/orphanable.h',
                               'src/core/lib/gprpp/overload.h',
                               'src/core/lib/gprpp/ref_counted.h',
                               'src/core/lib/gprpp/ref_counted_ptr.h',
                               'src/core/lib/gprpp/single_set_ptr.h',
                               'src/core/lib/gprpp/stat.h',
                               'src/core/lib/gprpp/status_helper.h',
                               'src/core/lib/gprpp/sync.h',
                               'src/core/lib/gprpp/table.h',
                               'src/core/lib/gprpp/thd.h',
                               'src/core/lib/gprpp/time.h',
                               'src/core/lib/gprpp/time_util.h',
                               'src/core/lib/gprpp/unique_type_name.h',
                               'src/core/lib/http/format_request.h',
                               'src/core/lib/http/httpcli.h',
                               'src/core/lib/http/httpcli_ssl_credentials.h',
                               'src/core/lib/http/parser.h',
                               'src/core/lib/iomgr/block_annotate.h',
                               'src/core/lib/iomgr/buffer_list.h',
                               'src/core/lib/iomgr/call_combiner.h',
                               'src/core/lib/iomgr/cfstream_handle.h',
                               'src/core/lib/iomgr/closure.h',
                               'src/core/lib/iomgr/combiner.h',
                               'src/core/lib/iomgr/dynamic_annotations.h',
                               'src/core/lib/iomgr/endpoint.h',
                               'src/core/lib/iomgr/endpoint_cfstream.h',
                               'src/core/lib/iomgr/endpoint_pair.h',
                               'src/core/lib/iomgr/error.h',
                               'src/core/lib/iomgr/error_cfstream.h',
                               'src/core/lib/iomgr/error_internal.h',
                               'src/core/lib/iomgr/ev_apple.h',
                               'src/core/lib/iomgr/ev_epoll1_linux.h',
                               'src/core/lib/iomgr/ev_poll_posix.h',
                               'src/core/lib/iomgr/ev_posix.h',
                               'src/core/lib/iomgr/exec_ctx.h',
                               'src/core/lib/iomgr/executor.h',
                               'src/core/lib/iomgr/executor/mpmcqueue.h',
                               'src/core/lib/iomgr/executor/threadpool.h',
                               'src/core/lib/iomgr/gethostname.h',
                               'src/core/lib/iomgr/grpc_if_nametoindex.h',
                               'src/core/lib/iomgr/internal_errqueue.h',
                               'src/core/lib/iomgr/iocp_windows.h',
                               'src/core/lib/iomgr/iomgr.h',
                               'src/core/lib/iomgr/iomgr_fwd.h',
                               'src/core/lib/iomgr/iomgr_internal.h',
                               'src/core/lib/iomgr/load_file.h',
                               'src/core/lib/iomgr/lockfree_event.h',
                               'src/core/lib/iomgr/nameser.h',
                               'src/core/lib/iomgr/polling_entity.h',
                               'src/core/lib/iomgr/pollset.h',
                               'src/core/lib/iomgr/pollset_set.h',
                               'src/core/lib/iomgr/pollset_set_windows.h',
                               'src/core/lib/iomgr/pollset_windows.h',
                               'src/core/lib/iomgr/port.h',
                               'src/core/lib/iomgr/python_util.h',
                               'src/core/lib/iomgr/resolve_address.h',
                               'src/core/lib/iomgr/resolve_address_impl.h',
                               'src/core/lib/iomgr/resolve_address_posix.h',
                               'src/core/lib/iomgr/resolve_address_windows.h',
                               'src/core/lib/iomgr/resolved_address.h',
                               'src/core/lib/iomgr/sockaddr.h',
                               'src/core/lib/iomgr/sockaddr_posix.h',
                               'src/core/lib/iomgr/sockaddr_windows.h',
                               'src/core/lib/iomgr/socket_factory_posix.h',
                               'src/core/lib/iomgr/socket_mutator.h',
                               'src/core/lib/iomgr/socket_utils.h',
                               'src/core/lib/iomgr/socket_utils_posix.h',
                               'src/core/lib/iomgr/socket_windows.h',
                               'src/core/lib/iomgr/tcp_client.h',
                               'src/core/lib/iomgr/tcp_client_posix.h',
                               'src/core/lib/iomgr/tcp_posix.h',
                               'src/core/lib/iomgr/tcp_server.h',
                               'src/core/lib/iomgr/tcp_server_utils_posix.h',
                               'src/core/lib/iomgr/tcp_windows.h',
                               'src/core/lib/iomgr/time_averaged_stats.h',
                               'src/core/lib/iomgr/timer.h',
                               'src/core/lib/iomgr/timer_generic.h',
                               'src/core/lib/iomgr/timer_heap.h',
                               'src/core/lib/iomgr/timer_manager.h',
                               'src/core/lib/iomgr/unix_sockets_posix.h',
                               'src/core/lib/iomgr/wakeup_fd_pipe.h',
                               'src/core/lib/iomgr/wakeup_fd_posix.h',
                               'src/core/lib/iomgr/work_serializer.h',
                               'src/core/lib/json/json.h',
                               'src/core/lib/json/json_util.h',
                               'src/core/lib/matchers/matchers.h',
                               'src/core/lib/profiling/timers.h',
                               'src/core/lib/promise/activity.h',
                               'src/core/lib/promise/arena_promise.h',
                               'src/core/lib/promise/call_push_pull.h',
                               'src/core/lib/promise/context.h',
                               'src/core/lib/promise/detail/basic_seq.h',
                               'src/core/lib/promise/detail/promise_factory.h',
                               'src/core/lib/promise/detail/promise_like.h',
                               'src/core/lib/promise/detail/status.h',
                               'src/core/lib/promise/detail/switch.h',
                               'src/core/lib/promise/exec_ctx_wakeup_scheduler.h',
                               'src/core/lib/promise/intra_activity_waiter.h',
                               'src/core/lib/promise/latch.h',
                               'src/core/lib/promise/loop.h',
                               'src/core/lib/promise/map.h',
                               'src/core/lib/promise/poll.h',
                               'src/core/lib/promise/promise.h',
                               'src/core/lib/promise/race.h',
                               'src/core/lib/promise/seq.h',
                               'src/core/lib/promise/sleep.h',
                               'src/core/lib/promise/try_seq.h',
                               'src/core/lib/resolver/resolver.h',
                               'src/core/lib/resolver/resolver_factory.h',
                               'src/core/lib/resolver/resolver_registry.h',
                               'src/core/lib/resolver/server_address.h',
                               'src/core/lib/resource_quota/api.h',
                               'src/core/lib/resource_quota/arena.h',
                               'src/core/lib/resource_quota/memory_quota.h',
                               'src/core/lib/resource_quota/resource_quota.h',
                               'src/core/lib/resource_quota/thread_quota.h',
                               'src/core/lib/resource_quota/trace.h',
                               'src/core/lib/security/authorization/authorization_engine.h',
                               'src/core/lib/security/authorization/authorization_policy_provider.h',
                               'src/core/lib/security/authorization/evaluate_args.h',
                               'src/core/lib/security/authorization/grpc_authorization_engine.h',
                               'src/core/lib/security/authorization/grpc_server_authz_filter.h',
                               'src/core/lib/security/authorization/matchers.h',
                               'src/core/lib/security/authorization/rbac_policy.h',
                               'src/core/lib/security/context/security_context.h',
                               'src/core/lib/security/credentials/alts/alts_credentials.h',
                               'src/core/lib/security/credentials/alts/check_gcp_environment.h',
                               'src/core/lib/security/credentials/alts/grpc_alts_credentials_options.h',
                               'src/core/lib/security/credentials/call_creds_util.h',
                               'src/core/lib/security/credentials/channel_creds_registry.h',
                               'src/core/lib/security/credentials/composite/composite_credentials.h',
                               'src/core/lib/security/credentials/credentials.h',
                               'src/core/lib/security/credentials/external/aws_external_account_credentials.h',
                               'src/core/lib/security/credentials/external/aws_request_signer.h',
                               'src/core/lib/security/credentials/external/external_account_credentials.h',
                               'src/core/lib/security/credentials/external/file_external_account_credentials.h',
                               'src/core/lib/security/credentials/external/url_external_account_credentials.h',
                               'src/core/lib/security/credentials/fake/fake_credentials.h',
                               'src/core/lib/security/credentials/google_default/google_default_credentials.h',
                               'src/core/lib/security/credentials/iam/iam_credentials.h',
                               'src/core/lib/security/credentials/insecure/insecure_credentials.h',
                               'src/core/lib/security/credentials/jwt/json_token.h',
                               'src/core/lib/security/credentials/jwt/jwt_credentials.h',
                               'src/core/lib/security/credentials/jwt/jwt_verifier.h',
                               'src/core/lib/security/credentials/local/local_credentials.h',
                               'src/core/lib/security/credentials/oauth2/oauth2_credentials.h',
                               'src/core/lib/security/credentials/plugin/plugin_credentials.h',
                               'src/core/lib/security/credentials/ssl/ssl_credentials.h',
                               'src/core/lib/security/credentials/tls/grpc_tls_certificate_distributor.h',
                               'src/core/lib/security/credentials/tls/grpc_tls_certificate_provider.h',
                               'src/core/lib/security/credentials/tls/grpc_tls_certificate_verifier.h',
                               'src/core/lib/security/credentials/tls/grpc_tls_credentials_options.h',
                               'src/core/lib/security/credentials/tls/tls_credentials.h',
                               'src/core/lib/security/credentials/tls/tls_utils.h',
                               'src/core/lib/security/credentials/xds/xds_credentials.h',
                               'src/core/lib/security/security_connector/alts/alts_security_connector.h',
                               'src/core/lib/security/security_connector/fake/fake_security_connector.h',
                               'src/core/lib/security/security_connector/insecure/insecure_security_connector.h',
                               'src/core/lib/security/security_connector/load_system_roots.h',
                               'src/core/lib/security/security_connector/load_system_roots_linux.h',
                               'src/core/lib/security/security_connector/local/local_security_connector.h',
                               'src/core/lib/security/security_connector/security_connector.h',
                               'src/core/lib/security/security_connector/ssl/ssl_security_connector.h',
                               'src/core/lib/security/security_connector/ssl_utils.h',
                               'src/core/lib/security/security_connector/ssl_utils_config.h',
                               'src/core/lib/security/security_connector/tls/tls_security_connector.h',
                               'src/core/lib/security/transport/auth_filters.h',
                               'src/core/lib/security/transport/secure_endpoint.h',
                               'src/core/lib/security/transport/security_handshaker.h',
                               'src/core/lib/security/transport/tsi_error.h',
                               'src/core/lib/security/util/json_util.h',
                               'src/core/lib/service_config/service_config.h',
                               'src/core/lib/service_config/service_config_call_data.h',
                               'src/core/lib/service_config/service_config_impl.h',
                               'src/core/lib/service_config/service_config_parser.h',
                               'src/core/lib/slice/b64.h',
                               'src/core/lib/slice/percent_encoding.h',
                               'src/core/lib/slice/slice.h',
                               'src/core/lib/slice/slice_buffer.h',
                               'src/core/lib/slice/slice_internal.h',
                               'src/core/lib/slice/slice_refcount.h',
                               'src/core/lib/slice/slice_refcount_base.h',
                               'src/core/lib/slice/slice_split.h',
                               'src/core/lib/slice/slice_string_helpers.h',
                               'src/core/lib/surface/api_trace.h',
                               'src/core/lib/surface/builtins.h',
                               'src/core/lib/surface/call.h',
                               'src/core/lib/surface/call_test_only.h',
                               'src/core/lib/surface/channel.h',
                               'src/core/lib/surface/channel_init.h',
                               'src/core/lib/surface/channel_stack_type.h',
                               'src/core/lib/surface/completion_queue.h',
                               'src/core/lib/surface/completion_queue_factory.h',
                               'src/core/lib/surface/event_string.h',
                               'src/core/lib/surface/init.h',
                               'src/core/lib/surface/lame_client.h',
                               'src/core/lib/surface/server.h',
                               'src/core/lib/surface/validate_metadata.h',
                               'src/core/lib/transport/bdp_estimator.h',
+                              'src/core/lib/transport/byte_stream.h',
                               'src/core/lib/transport/connectivity_state.h',
                               'src/core/lib/transport/error_utils.h',
                               'src/core/lib/transport/handshaker.h',
                               'src/core/lib/transport/handshaker_factory.h',
                               'src/core/lib/transport/handshaker_registry.h',
                               'src/core/lib/transport/http2_errors.h',
                               'src/core/lib/transport/http_connect_handshaker.h',
                               'src/core/lib/transport/metadata_batch.h',
                               'src/core/lib/transport/parsed_metadata.h',
                               'src/core/lib/transport/pid_controller.h',
                               'src/core/lib/transport/status_conversion.h',
                               'src/core/lib/transport/tcp_connect_handshaker.h',
                               'src/core/lib/transport/timeout_encoding.h',
                               'src/core/lib/transport/transport.h',
                               'src/core/lib/transport/transport_fwd.h',
                               'src/core/lib/transport/transport_impl.h',
                               'src/core/lib/uri/uri_parser.h',
                               'src/core/tsi/alts/crypt/gsec.h',
                               'src/core/tsi/alts/frame_protector/alts_counter.h',
                               'src/core/tsi/alts/frame_protector/alts_crypter.h',
                               'src/core/tsi/alts/frame_protector/alts_frame_protector.h',
                               'src/core/tsi/alts/frame_protector/alts_record_protocol_crypter_common.h',
                               'src/core/tsi/alts/frame_protector/frame_handler.h',
                               'src/core/tsi/alts/handshaker/alts_handshaker_client.h',
                               'src/core/tsi/alts/handshaker/alts_shared_resource.h',
                               'src/core/tsi/alts/handshaker/alts_tsi_handshaker.h',
                               'src/core/tsi/alts/handshaker/alts_tsi_handshaker_private.h',
                               'src/core/tsi/alts/handshaker/alts_tsi_utils.h',
                               'src/core/tsi/alts/handshaker/transport_security_common_api.h',
                               'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_integrity_only_record_protocol.h',
                               'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_privacy_integrity_record_protocol.h',
                               'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol.h',
                               'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol_common.h',
                               'src/core/tsi/alts/zero_copy_frame_protector/alts_iovec_record_protocol.h',
                               'src/core/tsi/alts/zero_copy_frame_protector/alts_zero_copy_grpc_protector.h',
                               'src/core/tsi/fake_transport_security.h',
                               'src/core/tsi/local_transport_security.h',
                               'src/core/tsi/ssl/key_logging/ssl_key_logging.h',
                               'src/core/tsi/ssl/session_cache/ssl_session.h',
                               'src/core/tsi/ssl/session_cache/ssl_session_cache.h',
                               'src/core/tsi/ssl_transport_security.h',
                               'src/core/tsi/ssl_types.h',
                               'src/core/tsi/transport_security.h',
                               'src/core/tsi/transport_security_grpc.h',
                               'src/core/tsi/transport_security_interface.h',
                               'src/cpp/client/create_channel_internal.h',
                               'src/cpp/client/secure_credentials.h',
                               'src/cpp/common/channel_filter.h',
                               'src/cpp/common/secure_auth_context.h',
                               'src/cpp/server/dynamic_thread_pool.h',
                               'src/cpp/server/external_connection_acceptor_impl.h',
                               'src/cpp/server/health/default_health_check_service.h',
                               'src/cpp/server/secure_server_credentials.h',
                               'src/cpp/server/thread_pool_interface.h',
                               'src/cpp/thread_manager/thread_manager.h',
                               'third_party/re2/re2/bitmap256.h',
                               'third_party/re2/re2/filtered_re2.h',
                               'third_party/re2/re2/pod_array.h',
                               'third_party/re2/re2/prefilter.h',
                               'third_party/re2/re2/prefilter_tree.h',
                               'third_party/re2/re2/prog.h',
                               'third_party/re2/re2/re2.h',
                               'third_party/re2/re2/regexp.h',
                               'third_party/re2/re2/set.h',
                               'third_party/re2/re2/sparse_array.h',
                               'third_party/re2/re2/sparse_set.h',
                               'third_party/re2/re2/stringpiece.h',
                               'third_party/re2/re2/unicode_casefold.h',
                               'third_party/re2/re2/unicode_groups.h',
                               'third_party/re2/re2/walker-inl.h',
                               'third_party/re2/util/benchmark.h',
                               'third_party/re2/util/flags.h',
                               'third_party/re2/util/logging.h',
                               'third_party/re2/util/malloc_counter.h',
                               'third_party/re2/util/mix.h',
                               'third_party/re2/util/mutex.h',
                               'third_party/re2/util/pcre.h',
                               'third_party/re2/util/strutil.h',
                               'third_party/re2/util/test.h',
                               'third_party/re2/util/utf.h',
                               'third_party/re2/util/util.h',
                               'third_party/upb/third_party/utf8_range/utf8_range.h',
                               'third_party/upb/upb/decode.h',
                               'third_party/upb/upb/decode_fast.h',
                               'third_party/upb/upb/decode_internal.h',
                               'third_party/upb/upb/def.h',
                               'third_party/upb/upb/def.hpp',
                               'third_party/upb/upb/encode.h',
                               'third_party/upb/upb/json_encode.h',
                               'third_party/upb/upb/msg.h',
                               'third_party/upb/upb/msg_internal.h',
                               'third_party/upb/upb/port_def.inc',
                               'third_party/upb/upb/port_undef.inc',
                               'third_party/upb/upb/reflection.h',
                               'third_party/upb/upb/reflection.hpp',
                               'third_party/upb/upb/table_internal.h',
                               'third_party/upb/upb/text_encode.h',
                               'third_party/upb/upb/upb.h',
                               'third_party/upb/upb/upb.hpp',
                               'third_party/upb/upb/upb_internal.h',
                               'third_party/xxhash/xxhash.h'
   end
 
   s.subspec 'Protobuf' do |ss|
     ss.header_mappings_dir = 'include/grpcpp'
     ss.dependency "#{s.name}/Interface", version
 
     ss.source_files = 'include/grpcpp/impl/codegen/config_protobuf.h',
                       'include/grpcpp/impl/codegen/proto_buffer_reader.h',
                       'include/grpcpp/impl/codegen/proto_buffer_writer.h',
                       'include/grpcpp/impl/codegen/proto_utils.h'
   end
 
   s.subspec 'Cronet-Interface' do |ss|
     ss.header_mappings_dir = 'include/grpcpp'
     ss.public_header_files = "include/grpcpp/security/cronet_credentials.h",
                              "include/grpcpp/security/cronet_credentials_impl.h"
     ss.source_files = "include/grpcpp/security/cronet_credentials.h",
                       "include/grpcpp/security/cronet_credentials_impl.h"
   end
 
   s.subspec 'Cronet-Implementation' do |ss|
     ss.header_mappings_dir = '.'
     ss.dependency "#{s.name}/Cronet-Interface", version
     ss.dependency "#{s.name}/Implementation", version
 
     ss.dependency 'gRPC-Core/Cronet-Implementation', version
 
     ss.source_files = "src/cpp/client/cronet_credentials.cc"
   end
 
   # patch include of openssl to openssl_grpc
   s.prepare_command = <<-END_OF_COMMAND
     set -e
     find src/core -type f \\( -path '*.h' -or -path '*.cc' \\) -print0 | xargs -0 -L1 sed -E -i'.grpc_back' 's;#include <openssl/(.*)>;#if COCOAPODS==1\\\n  #include <openssl_grpc/\\1>\\\n#else\\\n  #include <openssl/\\1>\\\n#endif;g'
     find src/core/ -type f -name '*.grpc_back' -print0 | xargs -0 rm
   END_OF_COMMAND
diff --git a/gRPC-Core.podspec b/gRPC-Core.podspec
index 8dd7c2b479..6afb2a748d 100644
--- a/gRPC-Core.podspec
+++ b/gRPC-Core.podspec
@@ -22,2604 +22,2607 @@
 Pod::Spec.new do |s|
   s.name     = 'gRPC-Core'
   version = '1.48.0-dev'
   s.version  = version
   s.summary  = 'Core cross-platform gRPC library, written in C'
   s.homepage = 'https://grpc.io'
   s.license  = 'Apache License, Version 2.0'
   s.authors  = { 'The gRPC contributors' => 'grpc-packages@google.com' }
 
   s.source = {
     :git => 'https://github.com/grpc/grpc.git',
     :tag => "v#{version}",
     :submodules => true,
   }
 
   # gRPC podspecs depend on fix for https://github.com/CocoaPods/CocoaPods/issues/6024,
   # which was released in Cocoapods v1.2.0.
   s.cocoapods_version = '>= 1.2.0'
 
   s.ios.deployment_target = '9.0'
   s.osx.deployment_target = '10.10'
   s.tvos.deployment_target = '10.0'
   s.watchos.deployment_target = '4.0'
 
   s.requires_arc = false
 
   name = 'grpc'
   abseil_version = '1.20211102.0'
 
   # When creating a dynamic framework, name it grpc.framework instead of gRPC-Core.framework.
   # This lets users write their includes like `#include <grpc/grpc.h>` as opposed to `#include
   # <gRPC-Core/grpc.h>`.
   s.module_name = name
 
   # When creating a dynamic framework, copy the headers under `include/grpc/` into the root of
   # the `Headers/` directory of the framework (i.e., not under `Headers/include/grpc`).
   #
   # TODO(jcanizales): Debug why this doesn't work on macOS.
   s.header_mappings_dir = 'include/grpc'
 
   # The above has an undesired effect when creating a static library: It forces users to write
   # includes like `#include <gRPC-Core/grpc.h>`. `s.header_dir` adds a path prefix to that, and
   # because Cocoapods lets omit the pod name when including headers of static libraries, the
   # following lets users write `#include <grpc/grpc.h>`.
   s.header_dir = name
 
   # The module map created automatically by Cocoapods doesn't work for C libraries like gRPC-Core.
   s.module_map = 'include/grpc/module.modulemap'
 
   # To compile the library, we need the user headers search path (quoted includes) to point to the
   # root of the repo, third_party/** and two upb generated directories, and the system headers
   # search path (angled includes) to point to `include/`.
   s.pod_target_xcconfig = {
     'HEADER_SEARCH_PATHS' => '"$(inherited)" "$(PODS_TARGET_SRCROOT)/include"',
     'USER_HEADER_SEARCH_PATHS' => '"$(PODS_TARGET_SRCROOT)"'\
         ' "$(PODS_TARGET_SRCROOT)/src/core/ext/upb-generated"'\
         ' "$(PODS_TARGET_SRCROOT)/src/core/ext/upbdefs-generated"'\
         ' "$(PODS_TARGET_SRCROOT)/third_party/**"',
     # If we don't set these two settings, `include/grpc/support/time.h` and
     # `src/core/lib/gpr/string.h` shadow the system `<time.h>` and `<string.h>`, breaking the
     # build.
     'USE_HEADERMAP' => 'NO',
     'ALWAYS_SEARCH_USER_PATHS' => 'NO',
     'GCC_PREPROCESSOR_DEFINITIONS' => '"$(inherited)" "COCOAPODS=1"',
     'CLANG_WARN_STRICT_PROTOTYPES' => 'NO',
   }
 
   s.default_subspecs = 'Interface', 'Implementation'
   s.compiler_flags = '-DGRPC_ARES=0 -Wno-comma'
   s.libraries = 'c++'
 
   # Like many other C libraries, gRPC-Core has its public headers under `include/<libname>/` and its
   # sources and private headers in other directories outside `include/`. Cocoapods' linter doesn't
   # allow any header to be listed outside the `header_mappings_dir` (even though doing so works in
   # practice). Because we need our `header_mappings_dir` to be `include/grpc/` for the reason
   # mentioned above, we work around the linter limitation by dividing the pod into two subspecs, one
   # for public headers and the other for implementation. Each gets its own `header_mappings_dir`,
   # making the linter happy.
   #
   # The list of source files is generated by a template: `templates/gRPC-Core.podspec.template`. It
   # can be regenerated from the template by running `tools/buildgen/generate_projects.sh`.
   s.subspec 'Interface' do |ss|
     ss.header_mappings_dir = 'include/grpc'
 
     ss.source_files = 'include/grpc/byte_buffer.h',
                       'include/grpc/byte_buffer_reader.h',
                       'include/grpc/census.h',
                       'include/grpc/compression.h',
                       'include/grpc/event_engine/endpoint_config.h',
                       'include/grpc/event_engine/event_engine.h',
                       'include/grpc/event_engine/internal/memory_allocator_impl.h',
                       'include/grpc/event_engine/memory_allocator.h',
                       'include/grpc/event_engine/memory_request.h',
                       'include/grpc/event_engine/port.h',
                       'include/grpc/event_engine/slice.h',
                       'include/grpc/event_engine/slice_buffer.h',
                       'include/grpc/fork.h',
                       'include/grpc/grpc.h',
                       'include/grpc/grpc_posix.h',
                       'include/grpc/grpc_security.h',
                       'include/grpc/grpc_security_constants.h',
                       'include/grpc/impl/codegen/atm.h',
                       'include/grpc/impl/codegen/atm_gcc_atomic.h',
                       'include/grpc/impl/codegen/atm_gcc_sync.h',
                       'include/grpc/impl/codegen/atm_windows.h',
                       'include/grpc/impl/codegen/byte_buffer.h',
                       'include/grpc/impl/codegen/byte_buffer_reader.h',
                       'include/grpc/impl/codegen/compression_types.h',
                       'include/grpc/impl/codegen/connectivity_state.h',
                       'include/grpc/impl/codegen/fork.h',
                       'include/grpc/impl/codegen/gpr_slice.h',
                       'include/grpc/impl/codegen/gpr_types.h',
                       'include/grpc/impl/codegen/grpc_types.h',
                       'include/grpc/impl/codegen/log.h',
                       'include/grpc/impl/codegen/port_platform.h',
                       'include/grpc/impl/codegen/propagation_bits.h',
                       'include/grpc/impl/codegen/slice.h',
                       'include/grpc/impl/codegen/status.h',
                       'include/grpc/impl/codegen/sync.h',
                       'include/grpc/impl/codegen/sync_abseil.h',
                       'include/grpc/impl/codegen/sync_custom.h',
                       'include/grpc/impl/codegen/sync_generic.h',
                       'include/grpc/impl/codegen/sync_posix.h',
                       'include/grpc/impl/codegen/sync_windows.h',
                       'include/grpc/load_reporting.h',
                       'include/grpc/slice.h',
                       'include/grpc/slice_buffer.h',
                       'include/grpc/status.h',
                       'include/grpc/support/alloc.h',
                       'include/grpc/support/atm.h',
                       'include/grpc/support/atm_gcc_atomic.h',
                       'include/grpc/support/atm_gcc_sync.h',
                       'include/grpc/support/atm_windows.h',
                       'include/grpc/support/cpu.h',
                       'include/grpc/support/log.h',
                       'include/grpc/support/log_windows.h',
                       'include/grpc/support/port_platform.h',
                       'include/grpc/support/string_util.h',
                       'include/grpc/support/sync.h',
                       'include/grpc/support/sync_abseil.h',
                       'include/grpc/support/sync_custom.h',
                       'include/grpc/support/sync_generic.h',
                       'include/grpc/support/sync_posix.h',
                       'include/grpc/support/sync_windows.h',
                       'include/grpc/support/thd_id.h',
                       'include/grpc/support/time.h',
                       'include/grpc/support/workaround_list.h'
   end
   s.subspec 'Implementation' do |ss|
     ss.header_mappings_dir = '.'
     ss.libraries = 'z'
     ss.dependency "#{s.name}/Interface", version
     ss.dependency 'BoringSSL-GRPC', '0.0.24'
     ss.dependency 'Libuv-gRPC', '0.0.10'
     ss.dependency 'abseil/base/base', abseil_version
     ss.dependency 'abseil/base/core_headers', abseil_version
     ss.dependency 'abseil/cleanup/cleanup', abseil_version
     ss.dependency 'abseil/container/flat_hash_map', abseil_version
     ss.dependency 'abseil/container/flat_hash_set', abseil_version
     ss.dependency 'abseil/container/inlined_vector', abseil_version
     ss.dependency 'abseil/functional/bind_front', abseil_version
     ss.dependency 'abseil/hash/hash', abseil_version
     ss.dependency 'abseil/memory/memory', abseil_version
     ss.dependency 'abseil/meta/type_traits', abseil_version
     ss.dependency 'abseil/random/random', abseil_version
     ss.dependency 'abseil/status/status', abseil_version
     ss.dependency 'abseil/status/statusor', abseil_version
     ss.dependency 'abseil/strings/cord', abseil_version
     ss.dependency 'abseil/strings/str_format', abseil_version
     ss.dependency 'abseil/strings/strings', abseil_version
     ss.dependency 'abseil/synchronization/synchronization', abseil_version
     ss.dependency 'abseil/time/time', abseil_version
     ss.dependency 'abseil/types/optional', abseil_version
     ss.dependency 'abseil/types/span', abseil_version
     ss.dependency 'abseil/types/variant', abseil_version
     ss.dependency 'abseil/utility/utility', abseil_version
     ss.compiler_flags = '-DBORINGSSL_PREFIX=GRPC -Wno-unreachable-code -Wno-shorten-64-to-32'
 
     ss.source_files = 'src/core/ext/filters/census/grpc_context.cc',
                       'src/core/ext/filters/channel_idle/channel_idle_filter.cc',
                       'src/core/ext/filters/channel_idle/channel_idle_filter.h',
                       'src/core/ext/filters/channel_idle/idle_filter_state.cc',
                       'src/core/ext/filters/channel_idle/idle_filter_state.h',
                       'src/core/ext/filters/client_channel/backend_metric.cc',
                       'src/core/ext/filters/client_channel/backend_metric.h',
                       'src/core/ext/filters/client_channel/backup_poller.cc',
                       'src/core/ext/filters/client_channel/backup_poller.h',
                       'src/core/ext/filters/client_channel/channel_connectivity.cc',
                       'src/core/ext/filters/client_channel/client_channel.cc',
                       'src/core/ext/filters/client_channel/client_channel.h',
                       'src/core/ext/filters/client_channel/client_channel_channelz.cc',
                       'src/core/ext/filters/client_channel/client_channel_channelz.h',
                       'src/core/ext/filters/client_channel/client_channel_factory.cc',
                       'src/core/ext/filters/client_channel/client_channel_factory.h',
                       'src/core/ext/filters/client_channel/client_channel_plugin.cc',
                       'src/core/ext/filters/client_channel/config_selector.cc',
                       'src/core/ext/filters/client_channel/config_selector.h',
                       'src/core/ext/filters/client_channel/connector.h',
                       'src/core/ext/filters/client_channel/dynamic_filters.cc',
                       'src/core/ext/filters/client_channel/dynamic_filters.h',
                       'src/core/ext/filters/client_channel/global_subchannel_pool.cc',
                       'src/core/ext/filters/client_channel/global_subchannel_pool.h',
                       'src/core/ext/filters/client_channel/health/health_check_client.cc',
                       'src/core/ext/filters/client_channel/health/health_check_client.h',
                       'src/core/ext/filters/client_channel/http_proxy.cc',
                       'src/core/ext/filters/client_channel/http_proxy.h',
                       'src/core/ext/filters/client_channel/lb_policy.cc',
                       'src/core/ext/filters/client_channel/lb_policy.h',
                       'src/core/ext/filters/client_channel/lb_policy/address_filtering.cc',
                       'src/core/ext/filters/client_channel/lb_policy/address_filtering.h',
                       'src/core/ext/filters/client_channel/lb_policy/backend_metric_data.h',
                       'src/core/ext/filters/client_channel/lb_policy/child_policy_handler.cc',
                       'src/core/ext/filters/client_channel/lb_policy/child_policy_handler.h',
                       'src/core/ext/filters/client_channel/lb_policy/grpclb/client_load_reporting_filter.cc',
                       'src/core/ext/filters/client_channel/lb_policy/grpclb/client_load_reporting_filter.h',
                       'src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc',
                       'src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.h',
                       'src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_balancer_addresses.cc',
                       'src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_balancer_addresses.h',
                       'src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_client_stats.cc',
                       'src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_client_stats.h',
                       'src/core/ext/filters/client_channel/lb_policy/grpclb/load_balancer_api.cc',
                       'src/core/ext/filters/client_channel/lb_policy/grpclb/load_balancer_api.h',
                       'src/core/ext/filters/client_channel/lb_policy/oob_backend_metric.cc',
                       'src/core/ext/filters/client_channel/lb_policy/oob_backend_metric.h',
                       'src/core/ext/filters/client_channel/lb_policy/outlier_detection/outlier_detection.cc',
                       'src/core/ext/filters/client_channel/lb_policy/outlier_detection/outlier_detection.h',
                       'src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc',
                       'src/core/ext/filters/client_channel/lb_policy/priority/priority.cc',
                       'src/core/ext/filters/client_channel/lb_policy/ring_hash/ring_hash.cc',
                       'src/core/ext/filters/client_channel/lb_policy/ring_hash/ring_hash.h',
                       'src/core/ext/filters/client_channel/lb_policy/rls/rls.cc',
                       'src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc',
                       'src/core/ext/filters/client_channel/lb_policy/subchannel_list.h',
                       'src/core/ext/filters/client_channel/lb_policy/weighted_target/weighted_target.cc',
                       'src/core/ext/filters/client_channel/lb_policy/xds/cds.cc',
                       'src/core/ext/filters/client_channel/lb_policy/xds/xds.h',
                       'src/core/ext/filters/client_channel/lb_policy/xds/xds_channel_args.h',
                       'src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_impl.cc',
                       'src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_manager.cc',
                       'src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_resolver.cc',
                       'src/core/ext/filters/client_channel/lb_policy_factory.h',
                       'src/core/ext/filters/client_channel/lb_policy_registry.cc',
                       'src/core/ext/filters/client_channel/lb_policy_registry.h',
                       'src/core/ext/filters/client_channel/local_subchannel_pool.cc',
                       'src/core/ext/filters/client_channel/local_subchannel_pool.h',
                       'src/core/ext/filters/client_channel/proxy_mapper.h',
                       'src/core/ext/filters/client_channel/proxy_mapper_registry.cc',
                       'src/core/ext/filters/client_channel/proxy_mapper_registry.h',
                       'src/core/ext/filters/client_channel/resolver/binder/binder_resolver.cc',
                       'src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc',
                       'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver.h',
                       'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_posix.cc',
                       'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_windows.cc',
                       'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.cc',
                       'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.h',
                       'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_posix.cc',
                       'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_windows.cc',
                       'src/core/ext/filters/client_channel/resolver/dns/dns_resolver_selection.cc',
                       'src/core/ext/filters/client_channel/resolver/dns/dns_resolver_selection.h',
                       'src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc',
                       'src/core/ext/filters/client_channel/resolver/fake/fake_resolver.cc',
                       'src/core/ext/filters/client_channel/resolver/fake/fake_resolver.h',
                       'src/core/ext/filters/client_channel/resolver/google_c2p/google_c2p_resolver.cc',
                       'src/core/ext/filters/client_channel/resolver/polling_resolver.cc',
                       'src/core/ext/filters/client_channel/resolver/polling_resolver.h',
                       'src/core/ext/filters/client_channel/resolver/sockaddr/sockaddr_resolver.cc',
                       'src/core/ext/filters/client_channel/resolver/xds/xds_resolver.cc',
                       'src/core/ext/filters/client_channel/resolver/xds/xds_resolver.h',
                       'src/core/ext/filters/client_channel/resolver_result_parsing.cc',
                       'src/core/ext/filters/client_channel/resolver_result_parsing.h',
                       'src/core/ext/filters/client_channel/retry_filter.cc',
                       'src/core/ext/filters/client_channel/retry_filter.h',
                       'src/core/ext/filters/client_channel/retry_service_config.cc',
                       'src/core/ext/filters/client_channel/retry_service_config.h',
                       'src/core/ext/filters/client_channel/retry_throttle.cc',
                       'src/core/ext/filters/client_channel/retry_throttle.h',
                       'src/core/ext/filters/client_channel/service_config_channel_arg_filter.cc',
                       'src/core/ext/filters/client_channel/subchannel.cc',
                       'src/core/ext/filters/client_channel/subchannel.h',
                       'src/core/ext/filters/client_channel/subchannel_interface.h',
                       'src/core/ext/filters/client_channel/subchannel_interface_internal.h',
                       'src/core/ext/filters/client_channel/subchannel_pool_interface.cc',
                       'src/core/ext/filters/client_channel/subchannel_pool_interface.h',
                       'src/core/ext/filters/client_channel/subchannel_stream_client.cc',
                       'src/core/ext/filters/client_channel/subchannel_stream_client.h',
                       'src/core/ext/filters/deadline/deadline_filter.cc',
                       'src/core/ext/filters/deadline/deadline_filter.h',
                       'src/core/ext/filters/fault_injection/fault_injection_filter.cc',
                       'src/core/ext/filters/fault_injection/fault_injection_filter.h',
                       'src/core/ext/filters/fault_injection/service_config_parser.cc',
                       'src/core/ext/filters/fault_injection/service_config_parser.h',
                       'src/core/ext/filters/http/client/http_client_filter.cc',
                       'src/core/ext/filters/http/client/http_client_filter.h',
                       'src/core/ext/filters/http/client_authority_filter.cc',
                       'src/core/ext/filters/http/client_authority_filter.h',
                       'src/core/ext/filters/http/http_filters_plugin.cc',
                       'src/core/ext/filters/http/message_compress/message_compress_filter.cc',
                       'src/core/ext/filters/http/message_compress/message_compress_filter.h',
                       'src/core/ext/filters/http/message_compress/message_decompress_filter.cc',
                       'src/core/ext/filters/http/message_compress/message_decompress_filter.h',
                       'src/core/ext/filters/http/server/http_server_filter.cc',
                       'src/core/ext/filters/http/server/http_server_filter.h',
                       'src/core/ext/filters/message_size/message_size_filter.cc',
                       'src/core/ext/filters/message_size/message_size_filter.h',
                       'src/core/ext/filters/rbac/rbac_filter.cc',
                       'src/core/ext/filters/rbac/rbac_filter.h',
                       'src/core/ext/filters/rbac/rbac_service_config_parser.cc',
                       'src/core/ext/filters/rbac/rbac_service_config_parser.h',
                       'src/core/ext/filters/server_config_selector/server_config_selector.cc',
                       'src/core/ext/filters/server_config_selector/server_config_selector.h',
                       'src/core/ext/filters/server_config_selector/server_config_selector_filter.cc',
                       'src/core/ext/filters/server_config_selector/server_config_selector_filter.h',
                       'src/core/ext/transport/chttp2/alpn/alpn.cc',
                       'src/core/ext/transport/chttp2/alpn/alpn.h',
                       'src/core/ext/transport/chttp2/client/chttp2_connector.cc',
                       'src/core/ext/transport/chttp2/client/chttp2_connector.h',
                       'src/core/ext/transport/chttp2/server/chttp2_server.cc',
                       'src/core/ext/transport/chttp2/server/chttp2_server.h',
                       'src/core/ext/transport/chttp2/transport/bin_decoder.cc',
                       'src/core/ext/transport/chttp2/transport/bin_decoder.h',
                       'src/core/ext/transport/chttp2/transport/bin_encoder.cc',
                       'src/core/ext/transport/chttp2/transport/bin_encoder.h',
                       'src/core/ext/transport/chttp2/transport/chttp2_transport.cc',
                       'src/core/ext/transport/chttp2/transport/chttp2_transport.h',
                       'src/core/ext/transport/chttp2/transport/context_list.cc',
                       'src/core/ext/transport/chttp2/transport/context_list.h',
                       'src/core/ext/transport/chttp2/transport/flow_control.cc',
                       'src/core/ext/transport/chttp2/transport/flow_control.h',
                       'src/core/ext/transport/chttp2/transport/frame.h',
                       'src/core/ext/transport/chttp2/transport/frame_data.cc',
                       'src/core/ext/transport/chttp2/transport/frame_data.h',
                       'src/core/ext/transport/chttp2/transport/frame_goaway.cc',
                       'src/core/ext/transport/chttp2/transport/frame_goaway.h',
                       'src/core/ext/transport/chttp2/transport/frame_ping.cc',
                       'src/core/ext/transport/chttp2/transport/frame_ping.h',
                       'src/core/ext/transport/chttp2/transport/frame_rst_stream.cc',
                       'src/core/ext/transport/chttp2/transport/frame_rst_stream.h',
                       'src/core/ext/transport/chttp2/transport/frame_settings.cc',
                       'src/core/ext/transport/chttp2/transport/frame_settings.h',
                       'src/core/ext/transport/chttp2/transport/frame_window_update.cc',
                       'src/core/ext/transport/chttp2/transport/frame_window_update.h',
                       'src/core/ext/transport/chttp2/transport/hpack_constants.h',
                       'src/core/ext/transport/chttp2/transport/hpack_encoder.cc',
                       'src/core/ext/transport/chttp2/transport/hpack_encoder.h',
                       'src/core/ext/transport/chttp2/transport/hpack_encoder_table.cc',
                       'src/core/ext/transport/chttp2/transport/hpack_encoder_table.h',
                       'src/core/ext/transport/chttp2/transport/hpack_parser.cc',
                       'src/core/ext/transport/chttp2/transport/hpack_parser.h',
                       'src/core/ext/transport/chttp2/transport/hpack_parser_table.cc',
                       'src/core/ext/transport/chttp2/transport/hpack_parser_table.h',
                       'src/core/ext/transport/chttp2/transport/http2_settings.cc',
                       'src/core/ext/transport/chttp2/transport/http2_settings.h',
                       'src/core/ext/transport/chttp2/transport/huffsyms.cc',
                       'src/core/ext/transport/chttp2/transport/huffsyms.h',
                       'src/core/ext/transport/chttp2/transport/internal.h',
                       'src/core/ext/transport/chttp2/transport/parsing.cc',
                       'src/core/ext/transport/chttp2/transport/stream_lists.cc',
                       'src/core/ext/transport/chttp2/transport/stream_map.cc',
                       'src/core/ext/transport/chttp2/transport/stream_map.h',
                       'src/core/ext/transport/chttp2/transport/varint.cc',
                       'src/core/ext/transport/chttp2/transport/varint.h',
                       'src/core/ext/transport/chttp2/transport/writing.cc',
                       'src/core/ext/transport/inproc/inproc_plugin.cc',
                       'src/core/ext/transport/inproc/inproc_transport.cc',
                       'src/core/ext/transport/inproc/inproc_transport.h',
                       'src/core/ext/upb-generated/envoy/admin/v3/certs.upb.c',
                       'src/core/ext/upb-generated/envoy/admin/v3/certs.upb.h',
                       'src/core/ext/upb-generated/envoy/admin/v3/clusters.upb.c',
                       'src/core/ext/upb-generated/envoy/admin/v3/clusters.upb.h',
                       'src/core/ext/upb-generated/envoy/admin/v3/config_dump.upb.c',
                       'src/core/ext/upb-generated/envoy/admin/v3/config_dump.upb.h',
                       'src/core/ext/upb-generated/envoy/admin/v3/init_dump.upb.c',
                       'src/core/ext/upb-generated/envoy/admin/v3/init_dump.upb.h',
                       'src/core/ext/upb-generated/envoy/admin/v3/listeners.upb.c',
                       'src/core/ext/upb-generated/envoy/admin/v3/listeners.upb.h',
                       'src/core/ext/upb-generated/envoy/admin/v3/memory.upb.c',
                       'src/core/ext/upb-generated/envoy/admin/v3/memory.upb.h',
                       'src/core/ext/upb-generated/envoy/admin/v3/metrics.upb.c',
                       'src/core/ext/upb-generated/envoy/admin/v3/metrics.upb.h',
                       'src/core/ext/upb-generated/envoy/admin/v3/mutex_stats.upb.c',
                       'src/core/ext/upb-generated/envoy/admin/v3/mutex_stats.upb.h',
                       'src/core/ext/upb-generated/envoy/admin/v3/server_info.upb.c',
                       'src/core/ext/upb-generated/envoy/admin/v3/server_info.upb.h',
                       'src/core/ext/upb-generated/envoy/admin/v3/tap.upb.c',
                       'src/core/ext/upb-generated/envoy/admin/v3/tap.upb.h',
                       'src/core/ext/upb-generated/envoy/annotations/deprecation.upb.c',
                       'src/core/ext/upb-generated/envoy/annotations/deprecation.upb.h',
                       'src/core/ext/upb-generated/envoy/annotations/resource.upb.c',
                       'src/core/ext/upb-generated/envoy/annotations/resource.upb.h',
                       'src/core/ext/upb-generated/envoy/config/accesslog/v3/accesslog.upb.c',
                       'src/core/ext/upb-generated/envoy/config/accesslog/v3/accesslog.upb.h',
                       'src/core/ext/upb-generated/envoy/config/bootstrap/v3/bootstrap.upb.c',
                       'src/core/ext/upb-generated/envoy/config/bootstrap/v3/bootstrap.upb.h',
                       'src/core/ext/upb-generated/envoy/config/cluster/v3/circuit_breaker.upb.c',
                       'src/core/ext/upb-generated/envoy/config/cluster/v3/circuit_breaker.upb.h',
                       'src/core/ext/upb-generated/envoy/config/cluster/v3/cluster.upb.c',
                       'src/core/ext/upb-generated/envoy/config/cluster/v3/cluster.upb.h',
                       'src/core/ext/upb-generated/envoy/config/cluster/v3/filter.upb.c',
                       'src/core/ext/upb-generated/envoy/config/cluster/v3/filter.upb.h',
                       'src/core/ext/upb-generated/envoy/config/cluster/v3/outlier_detection.upb.c',
                       'src/core/ext/upb-generated/envoy/config/cluster/v3/outlier_detection.upb.h',
                       'src/core/ext/upb-generated/envoy/config/common/matcher/v3/matcher.upb.c',
                       'src/core/ext/upb-generated/envoy/config/common/matcher/v3/matcher.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/address.upb.c',
                       'src/core/ext/upb-generated/envoy/config/core/v3/address.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/backoff.upb.c',
                       'src/core/ext/upb-generated/envoy/config/core/v3/backoff.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/base.upb.c',
                       'src/core/ext/upb-generated/envoy/config/core/v3/base.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/config_source.upb.c',
                       'src/core/ext/upb-generated/envoy/config/core/v3/config_source.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/event_service_config.upb.c',
                       'src/core/ext/upb-generated/envoy/config/core/v3/event_service_config.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/extension.upb.c',
                       'src/core/ext/upb-generated/envoy/config/core/v3/extension.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/grpc_method_list.upb.c',
                       'src/core/ext/upb-generated/envoy/config/core/v3/grpc_method_list.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/grpc_service.upb.c',
                       'src/core/ext/upb-generated/envoy/config/core/v3/grpc_service.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/health_check.upb.c',
                       'src/core/ext/upb-generated/envoy/config/core/v3/health_check.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/http_uri.upb.c',
                       'src/core/ext/upb-generated/envoy/config/core/v3/http_uri.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/protocol.upb.c',
                       'src/core/ext/upb-generated/envoy/config/core/v3/protocol.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/proxy_protocol.upb.c',
                       'src/core/ext/upb-generated/envoy/config/core/v3/proxy_protocol.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/resolver.upb.c',
                       'src/core/ext/upb-generated/envoy/config/core/v3/resolver.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/socket_option.upb.c',
                       'src/core/ext/upb-generated/envoy/config/core/v3/socket_option.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/substitution_format_string.upb.c',
                       'src/core/ext/upb-generated/envoy/config/core/v3/substitution_format_string.upb.h',
                       'src/core/ext/upb-generated/envoy/config/core/v3/udp_socket_config.upb.c',
                       'src/core/ext/upb-generated/envoy/config/core/v3/udp_socket_config.upb.h',
                       'src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint.upb.c',
                       'src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint.upb.h',
                       'src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint_components.upb.c',
                       'src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint_components.upb.h',
                       'src/core/ext/upb-generated/envoy/config/endpoint/v3/load_report.upb.c',
                       'src/core/ext/upb-generated/envoy/config/endpoint/v3/load_report.upb.h',
                       'src/core/ext/upb-generated/envoy/config/listener/v3/api_listener.upb.c',
                       'src/core/ext/upb-generated/envoy/config/listener/v3/api_listener.upb.h',
                       'src/core/ext/upb-generated/envoy/config/listener/v3/listener.upb.c',
                       'src/core/ext/upb-generated/envoy/config/listener/v3/listener.upb.h',
                       'src/core/ext/upb-generated/envoy/config/listener/v3/listener_components.upb.c',
                       'src/core/ext/upb-generated/envoy/config/listener/v3/listener_components.upb.h',
                       'src/core/ext/upb-generated/envoy/config/listener/v3/quic_config.upb.c',
                       'src/core/ext/upb-generated/envoy/config/listener/v3/quic_config.upb.h',
                       'src/core/ext/upb-generated/envoy/config/listener/v3/udp_listener_config.upb.c',
                       'src/core/ext/upb-generated/envoy/config/listener/v3/udp_listener_config.upb.h',
                       'src/core/ext/upb-generated/envoy/config/metrics/v3/metrics_service.upb.c',
                       'src/core/ext/upb-generated/envoy/config/metrics/v3/metrics_service.upb.h',
                       'src/core/ext/upb-generated/envoy/config/metrics/v3/stats.upb.c',
                       'src/core/ext/upb-generated/envoy/config/metrics/v3/stats.upb.h',
                       'src/core/ext/upb-generated/envoy/config/overload/v3/overload.upb.c',
                       'src/core/ext/upb-generated/envoy/config/overload/v3/overload.upb.h',
                       'src/core/ext/upb-generated/envoy/config/rbac/v3/rbac.upb.c',
                       'src/core/ext/upb-generated/envoy/config/rbac/v3/rbac.upb.h',
                       'src/core/ext/upb-generated/envoy/config/route/v3/route.upb.c',
                       'src/core/ext/upb-generated/envoy/config/route/v3/route.upb.h',
                       'src/core/ext/upb-generated/envoy/config/route/v3/route_components.upb.c',
                       'src/core/ext/upb-generated/envoy/config/route/v3/route_components.upb.h',
                       'src/core/ext/upb-generated/envoy/config/route/v3/scoped_route.upb.c',
                       'src/core/ext/upb-generated/envoy/config/route/v3/scoped_route.upb.h',
                       'src/core/ext/upb-generated/envoy/config/tap/v3/common.upb.c',
                       'src/core/ext/upb-generated/envoy/config/tap/v3/common.upb.h',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/datadog.upb.c',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/datadog.upb.h',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/dynamic_ot.upb.c',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/dynamic_ot.upb.h',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/http_tracer.upb.c',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/http_tracer.upb.h',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/lightstep.upb.c',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/lightstep.upb.h',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/opencensus.upb.c',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/opencensus.upb.h',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/service.upb.c',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/service.upb.h',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/skywalking.upb.c',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/skywalking.upb.h',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/trace.upb.c',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/trace.upb.h',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/xray.upb.c',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/xray.upb.h',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/zipkin.upb.c',
                       'src/core/ext/upb-generated/envoy/config/trace/v3/zipkin.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/clusters/aggregate/v3/cluster.upb.c',
                       'src/core/ext/upb-generated/envoy/extensions/clusters/aggregate/v3/cluster.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/filters/common/fault/v3/fault.upb.c',
                       'src/core/ext/upb-generated/envoy/extensions/filters/common/fault/v3/fault.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/filters/http/fault/v3/fault.upb.c',
                       'src/core/ext/upb-generated/envoy/extensions/filters/http/fault/v3/fault.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/filters/http/rbac/v3/rbac.upb.c',
                       'src/core/ext/upb-generated/envoy/extensions/filters/http/rbac/v3/rbac.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/filters/http/router/v3/router.upb.c',
                       'src/core/ext/upb-generated/envoy/extensions/filters/http/router/v3/router.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upb.c',
                       'src/core/ext/upb-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/ring_hash/v3/ring_hash.upb.c',
                       'src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/ring_hash/v3/ring_hash.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/wrr_locality/v3/wrr_locality.upb.c',
                       'src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/wrr_locality/v3/wrr_locality.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/cert.upb.c',
                       'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/cert.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/common.upb.c',
                       'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/common.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/secret.upb.c',
                       'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/secret.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls.upb.c',
                       'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls.upb.h',
                       'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upb.c',
                       'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upb.h',
                       'src/core/ext/upb-generated/envoy/service/discovery/v3/ads.upb.c',
                       'src/core/ext/upb-generated/envoy/service/discovery/v3/ads.upb.h',
                       'src/core/ext/upb-generated/envoy/service/discovery/v3/discovery.upb.c',
                       'src/core/ext/upb-generated/envoy/service/discovery/v3/discovery.upb.h',
                       'src/core/ext/upb-generated/envoy/service/load_stats/v3/lrs.upb.c',
                       'src/core/ext/upb-generated/envoy/service/load_stats/v3/lrs.upb.h',
                       'src/core/ext/upb-generated/envoy/service/status/v3/csds.upb.c',
                       'src/core/ext/upb-generated/envoy/service/status/v3/csds.upb.h',
                       'src/core/ext/upb-generated/envoy/type/http/v3/cookie.upb.c',
                       'src/core/ext/upb-generated/envoy/type/http/v3/cookie.upb.h',
                       'src/core/ext/upb-generated/envoy/type/http/v3/path_transformation.upb.c',
                       'src/core/ext/upb-generated/envoy/type/http/v3/path_transformation.upb.h',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/http_inputs.upb.c',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/http_inputs.upb.h',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/metadata.upb.c',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/metadata.upb.h',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/node.upb.c',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/node.upb.h',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/number.upb.c',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/number.upb.h',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/path.upb.c',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/path.upb.h',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/regex.upb.c',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/regex.upb.h',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/string.upb.c',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/string.upb.h',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/struct.upb.c',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/struct.upb.h',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/value.upb.c',
                       'src/core/ext/upb-generated/envoy/type/matcher/v3/value.upb.h',
                       'src/core/ext/upb-generated/envoy/type/metadata/v3/metadata.upb.c',
                       'src/core/ext/upb-generated/envoy/type/metadata/v3/metadata.upb.h',
                       'src/core/ext/upb-generated/envoy/type/tracing/v3/custom_tag.upb.c',
                       'src/core/ext/upb-generated/envoy/type/tracing/v3/custom_tag.upb.h',
                       'src/core/ext/upb-generated/envoy/type/v3/hash_policy.upb.c',
                       'src/core/ext/upb-generated/envoy/type/v3/hash_policy.upb.h',
                       'src/core/ext/upb-generated/envoy/type/v3/http.upb.c',
                       'src/core/ext/upb-generated/envoy/type/v3/http.upb.h',
                       'src/core/ext/upb-generated/envoy/type/v3/http_status.upb.c',
                       'src/core/ext/upb-generated/envoy/type/v3/http_status.upb.h',
                       'src/core/ext/upb-generated/envoy/type/v3/percent.upb.c',
                       'src/core/ext/upb-generated/envoy/type/v3/percent.upb.h',
                       'src/core/ext/upb-generated/envoy/type/v3/range.upb.c',
                       'src/core/ext/upb-generated/envoy/type/v3/range.upb.h',
                       'src/core/ext/upb-generated/envoy/type/v3/ratelimit_unit.upb.c',
                       'src/core/ext/upb-generated/envoy/type/v3/ratelimit_unit.upb.h',
                       'src/core/ext/upb-generated/envoy/type/v3/semantic_version.upb.c',
                       'src/core/ext/upb-generated/envoy/type/v3/semantic_version.upb.h',
                       'src/core/ext/upb-generated/envoy/type/v3/token_bucket.upb.c',
                       'src/core/ext/upb-generated/envoy/type/v3/token_bucket.upb.h',
                       'src/core/ext/upb-generated/google/api/annotations.upb.c',
                       'src/core/ext/upb-generated/google/api/annotations.upb.h',
                       'src/core/ext/upb-generated/google/api/expr/v1alpha1/checked.upb.c',
                       'src/core/ext/upb-generated/google/api/expr/v1alpha1/checked.upb.h',
                       'src/core/ext/upb-generated/google/api/expr/v1alpha1/syntax.upb.c',
                       'src/core/ext/upb-generated/google/api/expr/v1alpha1/syntax.upb.h',
                       'src/core/ext/upb-generated/google/api/http.upb.c',
                       'src/core/ext/upb-generated/google/api/http.upb.h',
                       'src/core/ext/upb-generated/google/api/httpbody.upb.c',
                       'src/core/ext/upb-generated/google/api/httpbody.upb.h',
                       'src/core/ext/upb-generated/google/protobuf/any.upb.c',
                       'src/core/ext/upb-generated/google/protobuf/any.upb.h',
                       'src/core/ext/upb-generated/google/protobuf/descriptor.upb.c',
                       'src/core/ext/upb-generated/google/protobuf/descriptor.upb.h',
                       'src/core/ext/upb-generated/google/protobuf/duration.upb.c',
                       'src/core/ext/upb-generated/google/protobuf/duration.upb.h',
                       'src/core/ext/upb-generated/google/protobuf/empty.upb.c',
                       'src/core/ext/upb-generated/google/protobuf/empty.upb.h',
                       'src/core/ext/upb-generated/google/protobuf/struct.upb.c',
                       'src/core/ext/upb-generated/google/protobuf/struct.upb.h',
                       'src/core/ext/upb-generated/google/protobuf/timestamp.upb.c',
                       'src/core/ext/upb-generated/google/protobuf/timestamp.upb.h',
                       'src/core/ext/upb-generated/google/protobuf/wrappers.upb.c',
                       'src/core/ext/upb-generated/google/protobuf/wrappers.upb.h',
                       'src/core/ext/upb-generated/google/rpc/status.upb.c',
                       'src/core/ext/upb-generated/google/rpc/status.upb.h',
                       'src/core/ext/upb-generated/opencensus/proto/trace/v1/trace_config.upb.c',
                       'src/core/ext/upb-generated/opencensus/proto/trace/v1/trace_config.upb.h',
                       'src/core/ext/upb-generated/src/proto/grpc/gcp/altscontext.upb.c',
                       'src/core/ext/upb-generated/src/proto/grpc/gcp/altscontext.upb.h',
                       'src/core/ext/upb-generated/src/proto/grpc/gcp/handshaker.upb.c',
                       'src/core/ext/upb-generated/src/proto/grpc/gcp/handshaker.upb.h',
                       'src/core/ext/upb-generated/src/proto/grpc/gcp/transport_security_common.upb.c',
                       'src/core/ext/upb-generated/src/proto/grpc/gcp/transport_security_common.upb.h',
                       'src/core/ext/upb-generated/src/proto/grpc/health/v1/health.upb.c',
                       'src/core/ext/upb-generated/src/proto/grpc/health/v1/health.upb.h',
                       'src/core/ext/upb-generated/src/proto/grpc/lb/v1/load_balancer.upb.c',
                       'src/core/ext/upb-generated/src/proto/grpc/lb/v1/load_balancer.upb.h',
                       'src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls.upb.c',
                       'src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls.upb.h',
                       'src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls_config.upb.c',
                       'src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls_config.upb.h',
                       'src/core/ext/upb-generated/udpa/annotations/migrate.upb.c',
                       'src/core/ext/upb-generated/udpa/annotations/migrate.upb.h',
                       'src/core/ext/upb-generated/udpa/annotations/security.upb.c',
                       'src/core/ext/upb-generated/udpa/annotations/security.upb.h',
                       'src/core/ext/upb-generated/udpa/annotations/sensitive.upb.c',
                       'src/core/ext/upb-generated/udpa/annotations/sensitive.upb.h',
                       'src/core/ext/upb-generated/udpa/annotations/status.upb.c',
                       'src/core/ext/upb-generated/udpa/annotations/status.upb.h',
                       'src/core/ext/upb-generated/udpa/annotations/versioning.upb.c',
                       'src/core/ext/upb-generated/udpa/annotations/versioning.upb.h',
                       'src/core/ext/upb-generated/validate/validate.upb.c',
                       'src/core/ext/upb-generated/validate/validate.upb.h',
                       'src/core/ext/upb-generated/xds/annotations/v3/migrate.upb.c',
                       'src/core/ext/upb-generated/xds/annotations/v3/migrate.upb.h',
                       'src/core/ext/upb-generated/xds/annotations/v3/security.upb.c',
                       'src/core/ext/upb-generated/xds/annotations/v3/security.upb.h',
                       'src/core/ext/upb-generated/xds/annotations/v3/sensitive.upb.c',
                       'src/core/ext/upb-generated/xds/annotations/v3/sensitive.upb.h',
                       'src/core/ext/upb-generated/xds/annotations/v3/status.upb.c',
                       'src/core/ext/upb-generated/xds/annotations/v3/status.upb.h',
                       'src/core/ext/upb-generated/xds/annotations/v3/versioning.upb.c',
                       'src/core/ext/upb-generated/xds/annotations/v3/versioning.upb.h',
                       'src/core/ext/upb-generated/xds/core/v3/authority.upb.c',
                       'src/core/ext/upb-generated/xds/core/v3/authority.upb.h',
                       'src/core/ext/upb-generated/xds/core/v3/collection_entry.upb.c',
                       'src/core/ext/upb-generated/xds/core/v3/collection_entry.upb.h',
                       'src/core/ext/upb-generated/xds/core/v3/context_params.upb.c',
                       'src/core/ext/upb-generated/xds/core/v3/context_params.upb.h',
                       'src/core/ext/upb-generated/xds/core/v3/extension.upb.c',
                       'src/core/ext/upb-generated/xds/core/v3/extension.upb.h',
                       'src/core/ext/upb-generated/xds/core/v3/resource.upb.c',
                       'src/core/ext/upb-generated/xds/core/v3/resource.upb.h',
                       'src/core/ext/upb-generated/xds/core/v3/resource_locator.upb.c',
                       'src/core/ext/upb-generated/xds/core/v3/resource_locator.upb.h',
                       'src/core/ext/upb-generated/xds/core/v3/resource_name.upb.c',
                       'src/core/ext/upb-generated/xds/core/v3/resource_name.upb.h',
                       'src/core/ext/upb-generated/xds/data/orca/v3/orca_load_report.upb.c',
                       'src/core/ext/upb-generated/xds/data/orca/v3/orca_load_report.upb.h',
                       'src/core/ext/upb-generated/xds/service/orca/v3/orca.upb.c',
                       'src/core/ext/upb-generated/xds/service/orca/v3/orca.upb.h',
                       'src/core/ext/upb-generated/xds/type/matcher/v3/matcher.upb.c',
                       'src/core/ext/upb-generated/xds/type/matcher/v3/matcher.upb.h',
                       'src/core/ext/upb-generated/xds/type/matcher/v3/regex.upb.c',
                       'src/core/ext/upb-generated/xds/type/matcher/v3/regex.upb.h',
                       'src/core/ext/upb-generated/xds/type/matcher/v3/string.upb.c',
                       'src/core/ext/upb-generated/xds/type/matcher/v3/string.upb.h',
                       'src/core/ext/upb-generated/xds/type/v3/typed_struct.upb.c',
                       'src/core/ext/upb-generated/xds/type/v3/typed_struct.upb.h',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/certs.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/certs.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/clusters.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/clusters.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/config_dump.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/config_dump.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/init_dump.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/init_dump.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/listeners.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/listeners.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/memory.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/memory.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/metrics.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/metrics.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/mutex_stats.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/mutex_stats.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/server_info.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/server_info.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/tap.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/admin/v3/tap.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/annotations/deprecation.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/annotations/deprecation.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/annotations/resource.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/annotations/resource.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/accesslog/v3/accesslog.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/accesslog/v3/accesslog.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/bootstrap/v3/bootstrap.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/bootstrap/v3/bootstrap.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/circuit_breaker.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/circuit_breaker.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/cluster.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/cluster.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/filter.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/filter.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/outlier_detection.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/outlier_detection.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/common/matcher/v3/matcher.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/common/matcher/v3/matcher.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/address.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/address.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/backoff.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/backoff.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/base.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/base.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/config_source.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/config_source.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/event_service_config.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/event_service_config.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/extension.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/extension.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_method_list.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_method_list.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_service.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_service.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/health_check.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/health_check.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/http_uri.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/http_uri.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/protocol.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/protocol.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/proxy_protocol.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/proxy_protocol.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/resolver.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/resolver.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/socket_option.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/socket_option.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/substitution_format_string.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/substitution_format_string.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/udp_socket_config.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/core/v3/udp_socket_config.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint_components.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint_components.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/load_report.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/load_report.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/listener/v3/api_listener.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/listener/v3/api_listener.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener_components.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener_components.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/listener/v3/quic_config.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/listener/v3/quic_config.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/listener/v3/udp_listener_config.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/listener/v3/udp_listener_config.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/metrics/v3/metrics_service.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/metrics/v3/metrics_service.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/metrics/v3/stats.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/metrics/v3/stats.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/overload/v3/overload.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/overload/v3/overload.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/rbac/v3/rbac.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/rbac/v3/rbac.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/route/v3/route.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/route/v3/route.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/route/v3/route_components.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/route/v3/route_components.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/route/v3/scoped_route.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/route/v3/scoped_route.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/tap/v3/common.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/tap/v3/common.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/datadog.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/datadog.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/dynamic_ot.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/dynamic_ot.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/http_tracer.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/http_tracer.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/lightstep.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/lightstep.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/opencensus.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/opencensus.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/service.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/service.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/skywalking.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/skywalking.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/trace.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/trace.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/xray.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/xray.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/zipkin.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/config/trace/v3/zipkin.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/extensions/clusters/aggregate/v3/cluster.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/extensions/clusters/aggregate/v3/cluster.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/extensions/filters/common/fault/v3/fault.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/extensions/filters/common/fault/v3/fault.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/extensions/filters/http/fault/v3/fault.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/extensions/filters/http/fault/v3/fault.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/extensions/filters/http/rbac/v3/rbac.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/extensions/filters/http/rbac/v3/rbac.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/extensions/filters/http/router/v3/router.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/extensions/filters/http/router/v3/router.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/cert.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/cert.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/common.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/common.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/secret.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/secret.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/service/discovery/v3/ads.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/service/discovery/v3/ads.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/service/discovery/v3/discovery.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/service/discovery/v3/discovery.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/service/load_stats/v3/lrs.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/service/load_stats/v3/lrs.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/service/status/v3/csds.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/service/status/v3/csds.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/http/v3/cookie.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/type/http/v3/cookie.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/http/v3/path_transformation.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/type/http/v3/path_transformation.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/http_inputs.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/http_inputs.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/metadata.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/metadata.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/node.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/node.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/number.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/number.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/path.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/path.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/regex.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/regex.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/string.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/string.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/struct.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/struct.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/value.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/value.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/metadata/v3/metadata.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/type/metadata/v3/metadata.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/tracing/v3/custom_tag.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/type/tracing/v3/custom_tag.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/v3/hash_policy.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/type/v3/hash_policy.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/v3/http.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/type/v3/http.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/v3/http_status.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/type/v3/http_status.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/v3/percent.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/type/v3/percent.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/v3/range.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/type/v3/range.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/v3/ratelimit_unit.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/type/v3/ratelimit_unit.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/v3/semantic_version.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/type/v3/semantic_version.upbdefs.h',
                       'src/core/ext/upbdefs-generated/envoy/type/v3/token_bucket.upbdefs.c',
                       'src/core/ext/upbdefs-generated/envoy/type/v3/token_bucket.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/api/annotations.upbdefs.c',
                       'src/core/ext/upbdefs-generated/google/api/annotations.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/checked.upbdefs.c',
                       'src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/checked.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/syntax.upbdefs.c',
                       'src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/syntax.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/api/http.upbdefs.c',
                       'src/core/ext/upbdefs-generated/google/api/http.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/api/httpbody.upbdefs.c',
                       'src/core/ext/upbdefs-generated/google/api/httpbody.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/protobuf/any.upbdefs.c',
                       'src/core/ext/upbdefs-generated/google/protobuf/any.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/protobuf/descriptor.upbdefs.c',
                       'src/core/ext/upbdefs-generated/google/protobuf/descriptor.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/protobuf/duration.upbdefs.c',
                       'src/core/ext/upbdefs-generated/google/protobuf/duration.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/protobuf/empty.upbdefs.c',
                       'src/core/ext/upbdefs-generated/google/protobuf/empty.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/protobuf/struct.upbdefs.c',
                       'src/core/ext/upbdefs-generated/google/protobuf/struct.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/protobuf/timestamp.upbdefs.c',
                       'src/core/ext/upbdefs-generated/google/protobuf/timestamp.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/protobuf/wrappers.upbdefs.c',
                       'src/core/ext/upbdefs-generated/google/protobuf/wrappers.upbdefs.h',
                       'src/core/ext/upbdefs-generated/google/rpc/status.upbdefs.c',
                       'src/core/ext/upbdefs-generated/google/rpc/status.upbdefs.h',
                       'src/core/ext/upbdefs-generated/opencensus/proto/trace/v1/trace_config.upbdefs.c',
                       'src/core/ext/upbdefs-generated/opencensus/proto/trace/v1/trace_config.upbdefs.h',
                       'src/core/ext/upbdefs-generated/src/proto/grpc/lookup/v1/rls_config.upbdefs.c',
                       'src/core/ext/upbdefs-generated/src/proto/grpc/lookup/v1/rls_config.upbdefs.h',
                       'src/core/ext/upbdefs-generated/udpa/annotations/migrate.upbdefs.c',
                       'src/core/ext/upbdefs-generated/udpa/annotations/migrate.upbdefs.h',
                       'src/core/ext/upbdefs-generated/udpa/annotations/security.upbdefs.c',
                       'src/core/ext/upbdefs-generated/udpa/annotations/security.upbdefs.h',
                       'src/core/ext/upbdefs-generated/udpa/annotations/sensitive.upbdefs.c',
                       'src/core/ext/upbdefs-generated/udpa/annotations/sensitive.upbdefs.h',
                       'src/core/ext/upbdefs-generated/udpa/annotations/status.upbdefs.c',
                       'src/core/ext/upbdefs-generated/udpa/annotations/status.upbdefs.h',
                       'src/core/ext/upbdefs-generated/udpa/annotations/versioning.upbdefs.c',
                       'src/core/ext/upbdefs-generated/udpa/annotations/versioning.upbdefs.h',
                       'src/core/ext/upbdefs-generated/validate/validate.upbdefs.c',
                       'src/core/ext/upbdefs-generated/validate/validate.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/annotations/v3/migrate.upbdefs.c',
                       'src/core/ext/upbdefs-generated/xds/annotations/v3/migrate.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/annotations/v3/security.upbdefs.c',
                       'src/core/ext/upbdefs-generated/xds/annotations/v3/security.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/annotations/v3/sensitive.upbdefs.c',
                       'src/core/ext/upbdefs-generated/xds/annotations/v3/sensitive.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/annotations/v3/status.upbdefs.c',
                       'src/core/ext/upbdefs-generated/xds/annotations/v3/status.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/annotations/v3/versioning.upbdefs.c',
                       'src/core/ext/upbdefs-generated/xds/annotations/v3/versioning.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/core/v3/authority.upbdefs.c',
                       'src/core/ext/upbdefs-generated/xds/core/v3/authority.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/core/v3/collection_entry.upbdefs.c',
                       'src/core/ext/upbdefs-generated/xds/core/v3/collection_entry.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/core/v3/context_params.upbdefs.c',
                       'src/core/ext/upbdefs-generated/xds/core/v3/context_params.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/core/v3/extension.upbdefs.c',
                       'src/core/ext/upbdefs-generated/xds/core/v3/extension.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/core/v3/resource.upbdefs.c',
                       'src/core/ext/upbdefs-generated/xds/core/v3/resource.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/core/v3/resource_locator.upbdefs.c',
                       'src/core/ext/upbdefs-generated/xds/core/v3/resource_locator.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/core/v3/resource_name.upbdefs.c',
                       'src/core/ext/upbdefs-generated/xds/core/v3/resource_name.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/type/matcher/v3/matcher.upbdefs.c',
                       'src/core/ext/upbdefs-generated/xds/type/matcher/v3/matcher.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/type/matcher/v3/regex.upbdefs.c',
                       'src/core/ext/upbdefs-generated/xds/type/matcher/v3/regex.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/type/matcher/v3/string.upbdefs.c',
                       'src/core/ext/upbdefs-generated/xds/type/matcher/v3/string.upbdefs.h',
                       'src/core/ext/upbdefs-generated/xds/type/v3/typed_struct.upbdefs.c',
                       'src/core/ext/upbdefs-generated/xds/type/v3/typed_struct.upbdefs.h',
                       'src/core/ext/xds/certificate_provider_factory.h',
                       'src/core/ext/xds/certificate_provider_registry.cc',
                       'src/core/ext/xds/certificate_provider_registry.h',
                       'src/core/ext/xds/certificate_provider_store.cc',
                       'src/core/ext/xds/certificate_provider_store.h',
                       'src/core/ext/xds/file_watcher_certificate_provider_factory.cc',
                       'src/core/ext/xds/file_watcher_certificate_provider_factory.h',
                       'src/core/ext/xds/upb_utils.h',
                       'src/core/ext/xds/xds_api.cc',
                       'src/core/ext/xds/xds_api.h',
                       'src/core/ext/xds/xds_bootstrap.cc',
                       'src/core/ext/xds/xds_bootstrap.h',
                       'src/core/ext/xds/xds_certificate_provider.cc',
                       'src/core/ext/xds/xds_certificate_provider.h',
                       'src/core/ext/xds/xds_channel_args.h',
                       'src/core/ext/xds/xds_channel_stack_modifier.cc',
                       'src/core/ext/xds/xds_channel_stack_modifier.h',
                       'src/core/ext/xds/xds_client.cc',
                       'src/core/ext/xds/xds_client.h',
                       'src/core/ext/xds/xds_client_stats.cc',
                       'src/core/ext/xds/xds_client_stats.h',
                       'src/core/ext/xds/xds_cluster.cc',
                       'src/core/ext/xds/xds_cluster.h',
                       'src/core/ext/xds/xds_cluster_specifier_plugin.cc',
                       'src/core/ext/xds/xds_cluster_specifier_plugin.h',
                       'src/core/ext/xds/xds_common_types.cc',
                       'src/core/ext/xds/xds_common_types.h',
                       'src/core/ext/xds/xds_endpoint.cc',
                       'src/core/ext/xds/xds_endpoint.h',
                       'src/core/ext/xds/xds_http_fault_filter.cc',
                       'src/core/ext/xds/xds_http_fault_filter.h',
                       'src/core/ext/xds/xds_http_filters.cc',
                       'src/core/ext/xds/xds_http_filters.h',
                       'src/core/ext/xds/xds_http_rbac_filter.cc',
                       'src/core/ext/xds/xds_http_rbac_filter.h',
                       'src/core/ext/xds/xds_lb_policy_registry.cc',
                       'src/core/ext/xds/xds_lb_policy_registry.h',
                       'src/core/ext/xds/xds_listener.cc',
                       'src/core/ext/xds/xds_listener.h',
                       'src/core/ext/xds/xds_resource_type.cc',
                       'src/core/ext/xds/xds_resource_type.h',
                       'src/core/ext/xds/xds_resource_type_impl.h',
                       'src/core/ext/xds/xds_route_config.cc',
                       'src/core/ext/xds/xds_route_config.h',
                       'src/core/ext/xds/xds_routing.cc',
                       'src/core/ext/xds/xds_routing.h',
                       'src/core/ext/xds/xds_server_config_fetcher.cc',
                       'src/core/lib/address_utils/parse_address.cc',
                       'src/core/lib/address_utils/parse_address.h',
                       'src/core/lib/address_utils/sockaddr_utils.cc',
                       'src/core/lib/address_utils/sockaddr_utils.h',
                       'src/core/lib/avl/avl.h',
                       'src/core/lib/backoff/backoff.cc',
                       'src/core/lib/backoff/backoff.h',
                       'src/core/lib/channel/call_finalization.h',
                       'src/core/lib/channel/call_tracer.h',
                       'src/core/lib/channel/channel_args.cc',
                       'src/core/lib/channel/channel_args.h',
                       'src/core/lib/channel/channel_args_preconditioning.cc',
                       'src/core/lib/channel/channel_args_preconditioning.h',
                       'src/core/lib/channel/channel_fwd.h',
                       'src/core/lib/channel/channel_stack.cc',
                       'src/core/lib/channel/channel_stack.h',
                       'src/core/lib/channel/channel_stack_builder.cc',
                       'src/core/lib/channel/channel_stack_builder.h',
                       'src/core/lib/channel/channel_stack_builder_impl.cc',
                       'src/core/lib/channel/channel_stack_builder_impl.h',
                       'src/core/lib/channel/channel_trace.cc',
                       'src/core/lib/channel/channel_trace.h',
                       'src/core/lib/channel/channelz.cc',
                       'src/core/lib/channel/channelz.h',
                       'src/core/lib/channel/channelz_registry.cc',
                       'src/core/lib/channel/channelz_registry.h',
                       'src/core/lib/channel/connected_channel.cc',
                       'src/core/lib/channel/connected_channel.h',
                       'src/core/lib/channel/context.h',
                       'src/core/lib/channel/promise_based_filter.cc',
                       'src/core/lib/channel/promise_based_filter.h',
                       'src/core/lib/channel/status_util.cc',
                       'src/core/lib/channel/status_util.h',
                       'src/core/lib/compression/compression.cc',
                       'src/core/lib/compression/compression_internal.cc',
                       'src/core/lib/compression/compression_internal.h',
                       'src/core/lib/compression/message_compress.cc',
                       'src/core/lib/compression/message_compress.h',
                       'src/core/lib/config/core_configuration.cc',
                       'src/core/lib/config/core_configuration.h',
                       'src/core/lib/debug/stats.cc',
                       'src/core/lib/debug/stats.h',
                       'src/core/lib/debug/stats_data.cc',
                       'src/core/lib/debug/stats_data.h',
                       'src/core/lib/debug/trace.cc',
                       'src/core/lib/debug/trace.h',
                       'src/core/lib/event_engine/channel_args_endpoint_config.cc',
                       'src/core/lib/event_engine/channel_args_endpoint_config.h',
                       'src/core/lib/event_engine/default_event_engine_factory.cc',
                       'src/core/lib/event_engine/event_engine.cc',
                       'src/core/lib/event_engine/event_engine_factory.h',
                       'src/core/lib/event_engine/handle_containers.h',
                       'src/core/lib/event_engine/iomgr_engine.cc',
                       'src/core/lib/event_engine/iomgr_engine.h',
                       'src/core/lib/event_engine/memory_allocator.cc',
                       'src/core/lib/event_engine/resolved_address.cc',
                       'src/core/lib/event_engine/slice.cc',
                       'src/core/lib/event_engine/slice_buffer.cc',
                       'src/core/lib/event_engine/trace.cc',
                       'src/core/lib/event_engine/trace.h',
                       'src/core/lib/gpr/alloc.cc',
                       'src/core/lib/gpr/alloc.h',
                       'src/core/lib/gpr/atm.cc',
                       'src/core/lib/gpr/cpu_iphone.cc',
                       'src/core/lib/gpr/cpu_linux.cc',
                       'src/core/lib/gpr/cpu_posix.cc',
                       'src/core/lib/gpr/cpu_windows.cc',
                       'src/core/lib/gpr/env.h',
                       'src/core/lib/gpr/env_linux.cc',
                       'src/core/lib/gpr/env_posix.cc',
                       'src/core/lib/gpr/env_windows.cc',
                       'src/core/lib/gpr/log.cc',
                       'src/core/lib/gpr/log_android.cc',
                       'src/core/lib/gpr/log_linux.cc',
                       'src/core/lib/gpr/log_posix.cc',
                       'src/core/lib/gpr/log_windows.cc',
                       'src/core/lib/gpr/murmur_hash.cc',
                       'src/core/lib/gpr/murmur_hash.h',
                       'src/core/lib/gpr/spinlock.h',
                       'src/core/lib/gpr/string.cc',
                       'src/core/lib/gpr/string.h',
                       'src/core/lib/gpr/string_posix.cc',
                       'src/core/lib/gpr/string_util_windows.cc',
                       'src/core/lib/gpr/string_windows.cc',
                       'src/core/lib/gpr/string_windows.h',
                       'src/core/lib/gpr/sync.cc',
                       'src/core/lib/gpr/sync_abseil.cc',
                       'src/core/lib/gpr/sync_posix.cc',
                       'src/core/lib/gpr/sync_windows.cc',
                       'src/core/lib/gpr/time.cc',
                       'src/core/lib/gpr/time_posix.cc',
                       'src/core/lib/gpr/time_precise.cc',
                       'src/core/lib/gpr/time_precise.h',
                       'src/core/lib/gpr/time_windows.cc',
                       'src/core/lib/gpr/tls.h',
                       'src/core/lib/gpr/tmpfile.h',
                       'src/core/lib/gpr/tmpfile_msys.cc',
                       'src/core/lib/gpr/tmpfile_posix.cc',
                       'src/core/lib/gpr/tmpfile_windows.cc',
                       'src/core/lib/gpr/useful.h',
                       'src/core/lib/gpr/wrap_memcpy.cc',
                       'src/core/lib/gprpp/atomic_utils.h',
                       'src/core/lib/gprpp/bitset.h',
                       'src/core/lib/gprpp/chunked_vector.h',
                       'src/core/lib/gprpp/construct_destruct.h',
                       'src/core/lib/gprpp/cpp_impl_of.h',
                       'src/core/lib/gprpp/debug_location.h',
                       'src/core/lib/gprpp/dual_ref_counted.h',
                       'src/core/lib/gprpp/examine_stack.cc',
                       'src/core/lib/gprpp/examine_stack.h',
                       'src/core/lib/gprpp/fork.cc',
                       'src/core/lib/gprpp/fork.h',
                       'src/core/lib/gprpp/global_config.h',
                       'src/core/lib/gprpp/global_config_custom.h',
                       'src/core/lib/gprpp/global_config_env.cc',
                       'src/core/lib/gprpp/global_config_env.h',
                       'src/core/lib/gprpp/global_config_generic.h',
                       'src/core/lib/gprpp/host_port.cc',
                       'src/core/lib/gprpp/host_port.h',
                       'src/core/lib/gprpp/manual_constructor.h',
                       'src/core/lib/gprpp/match.h',
                       'src/core/lib/gprpp/memory.h',
                       'src/core/lib/gprpp/mpscq.cc',
                       'src/core/lib/gprpp/mpscq.h',
                       'src/core/lib/gprpp/orphanable.h',
                       'src/core/lib/gprpp/overload.h',
                       'src/core/lib/gprpp/ref_counted.h',
                       'src/core/lib/gprpp/ref_counted_ptr.h',
                       'src/core/lib/gprpp/single_set_ptr.h',
                       'src/core/lib/gprpp/stat.h',
                       'src/core/lib/gprpp/stat_posix.cc',
                       'src/core/lib/gprpp/stat_windows.cc',
                       'src/core/lib/gprpp/status_helper.cc',
                       'src/core/lib/gprpp/status_helper.h',
                       'src/core/lib/gprpp/sync.h',
                       'src/core/lib/gprpp/table.h',
                       'src/core/lib/gprpp/thd.h',
                       'src/core/lib/gprpp/thd_posix.cc',
                       'src/core/lib/gprpp/thd_windows.cc',
                       'src/core/lib/gprpp/time.cc',
                       'src/core/lib/gprpp/time.h',
                       'src/core/lib/gprpp/time_util.cc',
                       'src/core/lib/gprpp/time_util.h',
                       'src/core/lib/gprpp/unique_type_name.h',
                       'src/core/lib/http/format_request.cc',
                       'src/core/lib/http/format_request.h',
                       'src/core/lib/http/httpcli.cc',
                       'src/core/lib/http/httpcli.h',
                       'src/core/lib/http/httpcli_security_connector.cc',
                       'src/core/lib/http/httpcli_ssl_credentials.h',
                       'src/core/lib/http/parser.cc',
                       'src/core/lib/http/parser.h',
                       'src/core/lib/iomgr/block_annotate.h',
                       'src/core/lib/iomgr/buffer_list.cc',
                       'src/core/lib/iomgr/buffer_list.h',
                       'src/core/lib/iomgr/call_combiner.cc',
                       'src/core/lib/iomgr/call_combiner.h',
                       'src/core/lib/iomgr/cfstream_handle.cc',
                       'src/core/lib/iomgr/cfstream_handle.h',
                       'src/core/lib/iomgr/closure.h',
                       'src/core/lib/iomgr/combiner.cc',
                       'src/core/lib/iomgr/combiner.h',
                       'src/core/lib/iomgr/dualstack_socket_posix.cc',
                       'src/core/lib/iomgr/dynamic_annotations.h',
                       'src/core/lib/iomgr/endpoint.cc',
                       'src/core/lib/iomgr/endpoint.h',
                       'src/core/lib/iomgr/endpoint_cfstream.cc',
                       'src/core/lib/iomgr/endpoint_cfstream.h',
                       'src/core/lib/iomgr/endpoint_pair.h',
                       'src/core/lib/iomgr/endpoint_pair_posix.cc',
                       'src/core/lib/iomgr/endpoint_pair_windows.cc',
                       'src/core/lib/iomgr/error.cc',
                       'src/core/lib/iomgr/error.h',
                       'src/core/lib/iomgr/error_cfstream.cc',
                       'src/core/lib/iomgr/error_cfstream.h',
                       'src/core/lib/iomgr/error_internal.h',
                       'src/core/lib/iomgr/ev_apple.cc',
                       'src/core/lib/iomgr/ev_apple.h',
                       'src/core/lib/iomgr/ev_epoll1_linux.cc',
                       'src/core/lib/iomgr/ev_epoll1_linux.h',
                       'src/core/lib/iomgr/ev_poll_posix.cc',
                       'src/core/lib/iomgr/ev_poll_posix.h',
                       'src/core/lib/iomgr/ev_posix.cc',
                       'src/core/lib/iomgr/ev_posix.h',
                       'src/core/lib/iomgr/ev_windows.cc',
                       'src/core/lib/iomgr/exec_ctx.cc',
                       'src/core/lib/iomgr/exec_ctx.h',
                       'src/core/lib/iomgr/executor.cc',
                       'src/core/lib/iomgr/executor.h',
                       'src/core/lib/iomgr/executor/mpmcqueue.cc',
                       'src/core/lib/iomgr/executor/mpmcqueue.h',
                       'src/core/lib/iomgr/executor/threadpool.cc',
                       'src/core/lib/iomgr/executor/threadpool.h',
                       'src/core/lib/iomgr/fork_posix.cc',
                       'src/core/lib/iomgr/fork_windows.cc',
                       'src/core/lib/iomgr/gethostname.h',
                       'src/core/lib/iomgr/gethostname_fallback.cc',
                       'src/core/lib/iomgr/gethostname_host_name_max.cc',
                       'src/core/lib/iomgr/gethostname_sysconf.cc',
                       'src/core/lib/iomgr/grpc_if_nametoindex.h',
                       'src/core/lib/iomgr/grpc_if_nametoindex_posix.cc',
                       'src/core/lib/iomgr/grpc_if_nametoindex_unsupported.cc',
                       'src/core/lib/iomgr/internal_errqueue.cc',
                       'src/core/lib/iomgr/internal_errqueue.h',
                       'src/core/lib/iomgr/iocp_windows.cc',
                       'src/core/lib/iomgr/iocp_windows.h',
                       'src/core/lib/iomgr/iomgr.cc',
                       'src/core/lib/iomgr/iomgr.h',
                       'src/core/lib/iomgr/iomgr_fwd.h',
                       'src/core/lib/iomgr/iomgr_internal.cc',
                       'src/core/lib/iomgr/iomgr_internal.h',
                       'src/core/lib/iomgr/iomgr_posix.cc',
                       'src/core/lib/iomgr/iomgr_posix_cfstream.cc',
                       'src/core/lib/iomgr/iomgr_windows.cc',
                       'src/core/lib/iomgr/load_file.cc',
                       'src/core/lib/iomgr/load_file.h',
                       'src/core/lib/iomgr/lockfree_event.cc',
                       'src/core/lib/iomgr/lockfree_event.h',
                       'src/core/lib/iomgr/nameser.h',
                       'src/core/lib/iomgr/polling_entity.cc',
                       'src/core/lib/iomgr/polling_entity.h',
                       'src/core/lib/iomgr/pollset.cc',
                       'src/core/lib/iomgr/pollset.h',
                       'src/core/lib/iomgr/pollset_set.cc',
                       'src/core/lib/iomgr/pollset_set.h',
                       'src/core/lib/iomgr/pollset_set_windows.cc',
                       'src/core/lib/iomgr/pollset_set_windows.h',
                       'src/core/lib/iomgr/pollset_windows.cc',
                       'src/core/lib/iomgr/pollset_windows.h',
                       'src/core/lib/iomgr/port.h',
                       'src/core/lib/iomgr/python_util.h',
                       'src/core/lib/iomgr/resolve_address.cc',
                       'src/core/lib/iomgr/resolve_address.h',
                       'src/core/lib/iomgr/resolve_address_impl.h',
                       'src/core/lib/iomgr/resolve_address_posix.cc',
                       'src/core/lib/iomgr/resolve_address_posix.h',
                       'src/core/lib/iomgr/resolve_address_windows.cc',
                       'src/core/lib/iomgr/resolve_address_windows.h',
                       'src/core/lib/iomgr/resolved_address.h',
                       'src/core/lib/iomgr/sockaddr.h',
                       'src/core/lib/iomgr/sockaddr_posix.h',
                       'src/core/lib/iomgr/sockaddr_utils_posix.cc',
                       'src/core/lib/iomgr/sockaddr_windows.h',
                       'src/core/lib/iomgr/socket_factory_posix.cc',
                       'src/core/lib/iomgr/socket_factory_posix.h',
                       'src/core/lib/iomgr/socket_mutator.cc',
                       'src/core/lib/iomgr/socket_mutator.h',
                       'src/core/lib/iomgr/socket_utils.h',
                       'src/core/lib/iomgr/socket_utils_common_posix.cc',
                       'src/core/lib/iomgr/socket_utils_linux.cc',
                       'src/core/lib/iomgr/socket_utils_posix.cc',
                       'src/core/lib/iomgr/socket_utils_posix.h',
                       'src/core/lib/iomgr/socket_utils_windows.cc',
                       'src/core/lib/iomgr/socket_windows.cc',
                       'src/core/lib/iomgr/socket_windows.h',
                       'src/core/lib/iomgr/tcp_client.cc',
                       'src/core/lib/iomgr/tcp_client.h',
                       'src/core/lib/iomgr/tcp_client_cfstream.cc',
                       'src/core/lib/iomgr/tcp_client_posix.cc',
                       'src/core/lib/iomgr/tcp_client_posix.h',
                       'src/core/lib/iomgr/tcp_client_windows.cc',
                       'src/core/lib/iomgr/tcp_posix.cc',
                       'src/core/lib/iomgr/tcp_posix.h',
                       'src/core/lib/iomgr/tcp_server.cc',
                       'src/core/lib/iomgr/tcp_server.h',
                       'src/core/lib/iomgr/tcp_server_posix.cc',
                       'src/core/lib/iomgr/tcp_server_utils_posix.h',
                       'src/core/lib/iomgr/tcp_server_utils_posix_common.cc',
                       'src/core/lib/iomgr/tcp_server_utils_posix_ifaddrs.cc',
                       'src/core/lib/iomgr/tcp_server_utils_posix_noifaddrs.cc',
                       'src/core/lib/iomgr/tcp_server_windows.cc',
                       'src/core/lib/iomgr/tcp_windows.cc',
                       'src/core/lib/iomgr/tcp_windows.h',
                       'src/core/lib/iomgr/time_averaged_stats.cc',
                       'src/core/lib/iomgr/time_averaged_stats.h',
                       'src/core/lib/iomgr/timer.cc',
                       'src/core/lib/iomgr/timer.h',
                       'src/core/lib/iomgr/timer_generic.cc',
                       'src/core/lib/iomgr/timer_generic.h',
                       'src/core/lib/iomgr/timer_heap.cc',
                       'src/core/lib/iomgr/timer_heap.h',
                       'src/core/lib/iomgr/timer_manager.cc',
                       'src/core/lib/iomgr/timer_manager.h',
                       'src/core/lib/iomgr/unix_sockets_posix.cc',
                       'src/core/lib/iomgr/unix_sockets_posix.h',
                       'src/core/lib/iomgr/unix_sockets_posix_noop.cc',
                       'src/core/lib/iomgr/wakeup_fd_eventfd.cc',
                       'src/core/lib/iomgr/wakeup_fd_nospecial.cc',
                       'src/core/lib/iomgr/wakeup_fd_pipe.cc',
                       'src/core/lib/iomgr/wakeup_fd_pipe.h',
                       'src/core/lib/iomgr/wakeup_fd_posix.cc',
                       'src/core/lib/iomgr/wakeup_fd_posix.h',
                       'src/core/lib/iomgr/work_serializer.cc',
                       'src/core/lib/iomgr/work_serializer.h',
                       'src/core/lib/json/json.h',
                       'src/core/lib/json/json_reader.cc',
                       'src/core/lib/json/json_util.cc',
                       'src/core/lib/json/json_util.h',
                       'src/core/lib/json/json_writer.cc',
                       'src/core/lib/matchers/matchers.cc',
                       'src/core/lib/matchers/matchers.h',
                       'src/core/lib/profiling/basic_timers.cc',
                       'src/core/lib/profiling/stap_timers.cc',
                       'src/core/lib/profiling/timers.h',
                       'src/core/lib/promise/activity.cc',
                       'src/core/lib/promise/activity.h',
                       'src/core/lib/promise/arena_promise.h',
                       'src/core/lib/promise/call_push_pull.h',
                       'src/core/lib/promise/context.h',
                       'src/core/lib/promise/detail/basic_seq.h',
                       'src/core/lib/promise/detail/promise_factory.h',
                       'src/core/lib/promise/detail/promise_like.h',
                       'src/core/lib/promise/detail/status.h',
                       'src/core/lib/promise/detail/switch.h',
                       'src/core/lib/promise/exec_ctx_wakeup_scheduler.h',
                       'src/core/lib/promise/intra_activity_waiter.h',
                       'src/core/lib/promise/latch.h',
                       'src/core/lib/promise/loop.h',
                       'src/core/lib/promise/map.h',
                       'src/core/lib/promise/poll.h',
                       'src/core/lib/promise/promise.h',
                       'src/core/lib/promise/race.h',
                       'src/core/lib/promise/seq.h',
                       'src/core/lib/promise/sleep.cc',
                       'src/core/lib/promise/sleep.h',
                       'src/core/lib/promise/try_seq.h',
                       'src/core/lib/resolver/resolver.cc',
                       'src/core/lib/resolver/resolver.h',
                       'src/core/lib/resolver/resolver_factory.h',
                       'src/core/lib/resolver/resolver_registry.cc',
                       'src/core/lib/resolver/resolver_registry.h',
                       'src/core/lib/resolver/server_address.cc',
                       'src/core/lib/resolver/server_address.h',
                       'src/core/lib/resource_quota/api.cc',
                       'src/core/lib/resource_quota/api.h',
                       'src/core/lib/resource_quota/arena.cc',
                       'src/core/lib/resource_quota/arena.h',
                       'src/core/lib/resource_quota/memory_quota.cc',
                       'src/core/lib/resource_quota/memory_quota.h',
                       'src/core/lib/resource_quota/resource_quota.cc',
                       'src/core/lib/resource_quota/resource_quota.h',
                       'src/core/lib/resource_quota/thread_quota.cc',
                       'src/core/lib/resource_quota/thread_quota.h',
                       'src/core/lib/resource_quota/trace.cc',
                       'src/core/lib/resource_quota/trace.h',
                       'src/core/lib/security/authorization/authorization_engine.h',
                       'src/core/lib/security/authorization/authorization_policy_provider.h',
                       'src/core/lib/security/authorization/authorization_policy_provider_vtable.cc',
                       'src/core/lib/security/authorization/evaluate_args.cc',
                       'src/core/lib/security/authorization/evaluate_args.h',
                       'src/core/lib/security/authorization/grpc_authorization_engine.cc',
                       'src/core/lib/security/authorization/grpc_authorization_engine.h',
                       'src/core/lib/security/authorization/grpc_server_authz_filter.cc',
                       'src/core/lib/security/authorization/grpc_server_authz_filter.h',
                       'src/core/lib/security/authorization/matchers.cc',
                       'src/core/lib/security/authorization/matchers.h',
                       'src/core/lib/security/authorization/rbac_policy.cc',
                       'src/core/lib/security/authorization/rbac_policy.h',
                       'src/core/lib/security/context/security_context.cc',
                       'src/core/lib/security/context/security_context.h',
                       'src/core/lib/security/credentials/alts/alts_credentials.cc',
                       'src/core/lib/security/credentials/alts/alts_credentials.h',
                       'src/core/lib/security/credentials/alts/check_gcp_environment.cc',
                       'src/core/lib/security/credentials/alts/check_gcp_environment.h',
                       'src/core/lib/security/credentials/alts/check_gcp_environment_linux.cc',
                       'src/core/lib/security/credentials/alts/check_gcp_environment_no_op.cc',
                       'src/core/lib/security/credentials/alts/check_gcp_environment_windows.cc',
                       'src/core/lib/security/credentials/alts/grpc_alts_credentials_client_options.cc',
                       'src/core/lib/security/credentials/alts/grpc_alts_credentials_options.cc',
                       'src/core/lib/security/credentials/alts/grpc_alts_credentials_options.h',
                       'src/core/lib/security/credentials/alts/grpc_alts_credentials_server_options.cc',
                       'src/core/lib/security/credentials/call_creds_util.cc',
                       'src/core/lib/security/credentials/call_creds_util.h',
                       'src/core/lib/security/credentials/channel_creds_registry.h',
                       'src/core/lib/security/credentials/channel_creds_registry_init.cc',
                       'src/core/lib/security/credentials/composite/composite_credentials.cc',
                       'src/core/lib/security/credentials/composite/composite_credentials.h',
                       'src/core/lib/security/credentials/credentials.cc',
                       'src/core/lib/security/credentials/credentials.h',
                       'src/core/lib/security/credentials/external/aws_external_account_credentials.cc',
                       'src/core/lib/security/credentials/external/aws_external_account_credentials.h',
                       'src/core/lib/security/credentials/external/aws_request_signer.cc',
                       'src/core/lib/security/credentials/external/aws_request_signer.h',
                       'src/core/lib/security/credentials/external/external_account_credentials.cc',
                       'src/core/lib/security/credentials/external/external_account_credentials.h',
                       'src/core/lib/security/credentials/external/file_external_account_credentials.cc',
                       'src/core/lib/security/credentials/external/file_external_account_credentials.h',
                       'src/core/lib/security/credentials/external/url_external_account_credentials.cc',
                       'src/core/lib/security/credentials/external/url_external_account_credentials.h',
                       'src/core/lib/security/credentials/fake/fake_credentials.cc',
                       'src/core/lib/security/credentials/fake/fake_credentials.h',
                       'src/core/lib/security/credentials/google_default/credentials_generic.cc',
                       'src/core/lib/security/credentials/google_default/google_default_credentials.cc',
                       'src/core/lib/security/credentials/google_default/google_default_credentials.h',
                       'src/core/lib/security/credentials/iam/iam_credentials.cc',
                       'src/core/lib/security/credentials/iam/iam_credentials.h',
                       'src/core/lib/security/credentials/insecure/insecure_credentials.cc',
                       'src/core/lib/security/credentials/insecure/insecure_credentials.h',
                       'src/core/lib/security/credentials/jwt/json_token.cc',
                       'src/core/lib/security/credentials/jwt/json_token.h',
                       'src/core/lib/security/credentials/jwt/jwt_credentials.cc',
                       'src/core/lib/security/credentials/jwt/jwt_credentials.h',
                       'src/core/lib/security/credentials/jwt/jwt_verifier.cc',
                       'src/core/lib/security/credentials/jwt/jwt_verifier.h',
                       'src/core/lib/security/credentials/local/local_credentials.cc',
                       'src/core/lib/security/credentials/local/local_credentials.h',
                       'src/core/lib/security/credentials/oauth2/oauth2_credentials.cc',
                       'src/core/lib/security/credentials/oauth2/oauth2_credentials.h',
                       'src/core/lib/security/credentials/plugin/plugin_credentials.cc',
                       'src/core/lib/security/credentials/plugin/plugin_credentials.h',
                       'src/core/lib/security/credentials/ssl/ssl_credentials.cc',
                       'src/core/lib/security/credentials/ssl/ssl_credentials.h',
                       'src/core/lib/security/credentials/tls/grpc_tls_certificate_distributor.cc',
                       'src/core/lib/security/credentials/tls/grpc_tls_certificate_distributor.h',
                       'src/core/lib/security/credentials/tls/grpc_tls_certificate_provider.cc',
                       'src/core/lib/security/credentials/tls/grpc_tls_certificate_provider.h',
                       'src/core/lib/security/credentials/tls/grpc_tls_certificate_verifier.cc',
                       'src/core/lib/security/credentials/tls/grpc_tls_certificate_verifier.h',
                       'src/core/lib/security/credentials/tls/grpc_tls_credentials_options.cc',
                       'src/core/lib/security/credentials/tls/grpc_tls_credentials_options.h',
                       'src/core/lib/security/credentials/tls/tls_credentials.cc',
                       'src/core/lib/security/credentials/tls/tls_credentials.h',
                       'src/core/lib/security/credentials/tls/tls_utils.cc',
                       'src/core/lib/security/credentials/tls/tls_utils.h',
                       'src/core/lib/security/credentials/xds/xds_credentials.cc',
                       'src/core/lib/security/credentials/xds/xds_credentials.h',
                       'src/core/lib/security/security_connector/alts/alts_security_connector.cc',
                       'src/core/lib/security/security_connector/alts/alts_security_connector.h',
                       'src/core/lib/security/security_connector/fake/fake_security_connector.cc',
                       'src/core/lib/security/security_connector/fake/fake_security_connector.h',
                       'src/core/lib/security/security_connector/insecure/insecure_security_connector.cc',
                       'src/core/lib/security/security_connector/insecure/insecure_security_connector.h',
                       'src/core/lib/security/security_connector/load_system_roots.h',
                       'src/core/lib/security/security_connector/load_system_roots_fallback.cc',
                       'src/core/lib/security/security_connector/load_system_roots_linux.cc',
                       'src/core/lib/security/security_connector/load_system_roots_linux.h',
                       'src/core/lib/security/security_connector/local/local_security_connector.cc',
                       'src/core/lib/security/security_connector/local/local_security_connector.h',
                       'src/core/lib/security/security_connector/security_connector.cc',
                       'src/core/lib/security/security_connector/security_connector.h',
                       'src/core/lib/security/security_connector/ssl/ssl_security_connector.cc',
                       'src/core/lib/security/security_connector/ssl/ssl_security_connector.h',
                       'src/core/lib/security/security_connector/ssl_utils.cc',
                       'src/core/lib/security/security_connector/ssl_utils.h',
                       'src/core/lib/security/security_connector/ssl_utils_config.cc',
                       'src/core/lib/security/security_connector/ssl_utils_config.h',
                       'src/core/lib/security/security_connector/tls/tls_security_connector.cc',
                       'src/core/lib/security/security_connector/tls/tls_security_connector.h',
                       'src/core/lib/security/transport/auth_filters.h',
                       'src/core/lib/security/transport/client_auth_filter.cc',
                       'src/core/lib/security/transport/secure_endpoint.cc',
                       'src/core/lib/security/transport/secure_endpoint.h',
                       'src/core/lib/security/transport/security_handshaker.cc',
                       'src/core/lib/security/transport/security_handshaker.h',
                       'src/core/lib/security/transport/server_auth_filter.cc',
                       'src/core/lib/security/transport/tsi_error.cc',
                       'src/core/lib/security/transport/tsi_error.h',
                       'src/core/lib/security/util/json_util.cc',
                       'src/core/lib/security/util/json_util.h',
                       'src/core/lib/service_config/service_config.h',
                       'src/core/lib/service_config/service_config_call_data.h',
                       'src/core/lib/service_config/service_config_impl.cc',
                       'src/core/lib/service_config/service_config_impl.h',
                       'src/core/lib/service_config/service_config_parser.cc',
                       'src/core/lib/service_config/service_config_parser.h',
                       'src/core/lib/slice/b64.cc',
                       'src/core/lib/slice/b64.h',
                       'src/core/lib/slice/percent_encoding.cc',
                       'src/core/lib/slice/percent_encoding.h',
                       'src/core/lib/slice/slice.cc',
                       'src/core/lib/slice/slice.h',
                       'src/core/lib/slice/slice_api.cc',
                       'src/core/lib/slice/slice_buffer.cc',
                       'src/core/lib/slice/slice_buffer.h',
                       'src/core/lib/slice/slice_buffer_api.cc',
                       'src/core/lib/slice/slice_internal.h',
                       'src/core/lib/slice/slice_refcount.cc',
                       'src/core/lib/slice/slice_refcount.h',
                       'src/core/lib/slice/slice_refcount_base.h',
                       'src/core/lib/slice/slice_split.cc',
                       'src/core/lib/slice/slice_split.h',
                       'src/core/lib/slice/slice_string_helpers.cc',
                       'src/core/lib/slice/slice_string_helpers.h',
                       'src/core/lib/surface/api_trace.cc',
                       'src/core/lib/surface/api_trace.h',
                       'src/core/lib/surface/builtins.cc',
                       'src/core/lib/surface/builtins.h',
                       'src/core/lib/surface/byte_buffer.cc',
                       'src/core/lib/surface/byte_buffer_reader.cc',
                       'src/core/lib/surface/call.cc',
                       'src/core/lib/surface/call.h',
                       'src/core/lib/surface/call_details.cc',
                       'src/core/lib/surface/call_log_batch.cc',
                       'src/core/lib/surface/call_test_only.h',
                       'src/core/lib/surface/channel.cc',
                       'src/core/lib/surface/channel.h',
                       'src/core/lib/surface/channel_init.cc',
                       'src/core/lib/surface/channel_init.h',
                       'src/core/lib/surface/channel_ping.cc',
                       'src/core/lib/surface/channel_stack_type.cc',
                       'src/core/lib/surface/channel_stack_type.h',
                       'src/core/lib/surface/completion_queue.cc',
                       'src/core/lib/surface/completion_queue.h',
                       'src/core/lib/surface/completion_queue_factory.cc',
                       'src/core/lib/surface/completion_queue_factory.h',
                       'src/core/lib/surface/event_string.cc',
                       'src/core/lib/surface/event_string.h',
                       'src/core/lib/surface/init.cc',
                       'src/core/lib/surface/init.h',
                       'src/core/lib/surface/lame_client.cc',
                       'src/core/lib/surface/lame_client.h',
                       'src/core/lib/surface/metadata_array.cc',
                       'src/core/lib/surface/server.cc',
                       'src/core/lib/surface/server.h',
                       'src/core/lib/surface/validate_metadata.cc',
                       'src/core/lib/surface/validate_metadata.h',
                       'src/core/lib/surface/version.cc',
                       'src/core/lib/transport/bdp_estimator.cc',
                       'src/core/lib/transport/bdp_estimator.h',
+                      'src/core/lib/transport/byte_stream.cc',
+                      'src/core/lib/transport/byte_stream.h',
                       'src/core/lib/transport/connectivity_state.cc',
                       'src/core/lib/transport/connectivity_state.h',
                       'src/core/lib/transport/error_utils.cc',
                       'src/core/lib/transport/error_utils.h',
                       'src/core/lib/transport/handshaker.cc',
                       'src/core/lib/transport/handshaker.h',
                       'src/core/lib/transport/handshaker_factory.h',
                       'src/core/lib/transport/handshaker_registry.cc',
                       'src/core/lib/transport/handshaker_registry.h',
                       'src/core/lib/transport/http2_errors.h',
                       'src/core/lib/transport/http_connect_handshaker.cc',
                       'src/core/lib/transport/http_connect_handshaker.h',
                       'src/core/lib/transport/metadata_batch.cc',
                       'src/core/lib/transport/metadata_batch.h',
                       'src/core/lib/transport/parsed_metadata.cc',
                       'src/core/lib/transport/parsed_metadata.h',
                       'src/core/lib/transport/pid_controller.cc',
                       'src/core/lib/transport/pid_controller.h',
                       'src/core/lib/transport/status_conversion.cc',
                       'src/core/lib/transport/status_conversion.h',
                       'src/core/lib/transport/tcp_connect_handshaker.cc',
                       'src/core/lib/transport/tcp_connect_handshaker.h',
                       'src/core/lib/transport/timeout_encoding.cc',
                       'src/core/lib/transport/timeout_encoding.h',
                       'src/core/lib/transport/transport.cc',
                       'src/core/lib/transport/transport.h',
                       'src/core/lib/transport/transport_fwd.h',
                       'src/core/lib/transport/transport_impl.h',
                       'src/core/lib/transport/transport_op_string.cc',
                       'src/core/lib/uri/uri_parser.cc',
                       'src/core/lib/uri/uri_parser.h',
                       'src/core/plugin_registry/grpc_plugin_registry.cc',
                       'src/core/plugin_registry/grpc_plugin_registry_extra.cc',
                       'src/core/tsi/alts/crypt/aes_gcm.cc',
                       'src/core/tsi/alts/crypt/gsec.cc',
                       'src/core/tsi/alts/crypt/gsec.h',
                       'src/core/tsi/alts/frame_protector/alts_counter.cc',
                       'src/core/tsi/alts/frame_protector/alts_counter.h',
                       'src/core/tsi/alts/frame_protector/alts_crypter.cc',
                       'src/core/tsi/alts/frame_protector/alts_crypter.h',
                       'src/core/tsi/alts/frame_protector/alts_frame_protector.cc',
                       'src/core/tsi/alts/frame_protector/alts_frame_protector.h',
                       'src/core/tsi/alts/frame_protector/alts_record_protocol_crypter_common.cc',
                       'src/core/tsi/alts/frame_protector/alts_record_protocol_crypter_common.h',
                       'src/core/tsi/alts/frame_protector/alts_seal_privacy_integrity_crypter.cc',
                       'src/core/tsi/alts/frame_protector/alts_unseal_privacy_integrity_crypter.cc',
                       'src/core/tsi/alts/frame_protector/frame_handler.cc',
                       'src/core/tsi/alts/frame_protector/frame_handler.h',
                       'src/core/tsi/alts/handshaker/alts_handshaker_client.cc',
                       'src/core/tsi/alts/handshaker/alts_handshaker_client.h',
                       'src/core/tsi/alts/handshaker/alts_shared_resource.cc',
                       'src/core/tsi/alts/handshaker/alts_shared_resource.h',
                       'src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc',
                       'src/core/tsi/alts/handshaker/alts_tsi_handshaker.h',
                       'src/core/tsi/alts/handshaker/alts_tsi_handshaker_private.h',
                       'src/core/tsi/alts/handshaker/alts_tsi_utils.cc',
                       'src/core/tsi/alts/handshaker/alts_tsi_utils.h',
                       'src/core/tsi/alts/handshaker/transport_security_common_api.cc',
                       'src/core/tsi/alts/handshaker/transport_security_common_api.h',
                       'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_integrity_only_record_protocol.cc',
                       'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_integrity_only_record_protocol.h',
                       'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_privacy_integrity_record_protocol.cc',
                       'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_privacy_integrity_record_protocol.h',
                       'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol.h',
                       'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol_common.cc',
                       'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol_common.h',
                       'src/core/tsi/alts/zero_copy_frame_protector/alts_iovec_record_protocol.cc',
                       'src/core/tsi/alts/zero_copy_frame_protector/alts_iovec_record_protocol.h',
                       'src/core/tsi/alts/zero_copy_frame_protector/alts_zero_copy_grpc_protector.cc',
                       'src/core/tsi/alts/zero_copy_frame_protector/alts_zero_copy_grpc_protector.h',
                       'src/core/tsi/fake_transport_security.cc',
                       'src/core/tsi/fake_transport_security.h',
                       'src/core/tsi/local_transport_security.cc',
                       'src/core/tsi/local_transport_security.h',
                       'src/core/tsi/ssl/key_logging/ssl_key_logging.cc',
                       'src/core/tsi/ssl/key_logging/ssl_key_logging.h',
                       'src/core/tsi/ssl/session_cache/ssl_session.h',
                       'src/core/tsi/ssl/session_cache/ssl_session_boringssl.cc',
                       'src/core/tsi/ssl/session_cache/ssl_session_cache.cc',
                       'src/core/tsi/ssl/session_cache/ssl_session_cache.h',
                       'src/core/tsi/ssl/session_cache/ssl_session_openssl.cc',
                       'src/core/tsi/ssl_transport_security.cc',
                       'src/core/tsi/ssl_transport_security.h',
                       'src/core/tsi/ssl_types.h',
                       'src/core/tsi/transport_security.cc',
                       'src/core/tsi/transport_security.h',
                       'src/core/tsi/transport_security_grpc.cc',
                       'src/core/tsi/transport_security_grpc.h',
                       'src/core/tsi/transport_security_interface.h',
                       'third_party/re2/re2/bitmap256.h',
                       'third_party/re2/re2/bitstate.cc',
                       'third_party/re2/re2/compile.cc',
                       'third_party/re2/re2/dfa.cc',
                       'third_party/re2/re2/filtered_re2.cc',
                       'third_party/re2/re2/filtered_re2.h',
                       'third_party/re2/re2/mimics_pcre.cc',
                       'third_party/re2/re2/nfa.cc',
                       'third_party/re2/re2/onepass.cc',
                       'third_party/re2/re2/parse.cc',
                       'third_party/re2/re2/perl_groups.cc',
                       'third_party/re2/re2/pod_array.h',
                       'third_party/re2/re2/prefilter.cc',
                       'third_party/re2/re2/prefilter.h',
                       'third_party/re2/re2/prefilter_tree.cc',
                       'third_party/re2/re2/prefilter_tree.h',
                       'third_party/re2/re2/prog.cc',
                       'third_party/re2/re2/prog.h',
                       'third_party/re2/re2/re2.cc',
                       'third_party/re2/re2/re2.h',
                       'third_party/re2/re2/regexp.cc',
                       'third_party/re2/re2/regexp.h',
                       'third_party/re2/re2/set.cc',
                       'third_party/re2/re2/set.h',
                       'third_party/re2/re2/simplify.cc',
                       'third_party/re2/re2/sparse_array.h',
                       'third_party/re2/re2/sparse_set.h',
                       'third_party/re2/re2/stringpiece.cc',
                       'third_party/re2/re2/stringpiece.h',
                       'third_party/re2/re2/tostring.cc',
                       'third_party/re2/re2/unicode_casefold.cc',
                       'third_party/re2/re2/unicode_casefold.h',
                       'third_party/re2/re2/unicode_groups.cc',
                       'third_party/re2/re2/unicode_groups.h',
                       'third_party/re2/re2/walker-inl.h',
                       'third_party/re2/util/benchmark.h',
                       'third_party/re2/util/flags.h',
                       'third_party/re2/util/logging.h',
                       'third_party/re2/util/malloc_counter.h',
                       'third_party/re2/util/mix.h',
                       'third_party/re2/util/mutex.h',
                       'third_party/re2/util/pcre.cc',
                       'third_party/re2/util/pcre.h',
                       'third_party/re2/util/rune.cc',
                       'third_party/re2/util/strutil.cc',
                       'third_party/re2/util/strutil.h',
                       'third_party/re2/util/test.h',
                       'third_party/re2/util/utf.h',
                       'third_party/re2/util/util.h',
                       'third_party/upb/third_party/utf8_range/naive.c',
                       'third_party/upb/third_party/utf8_range/range2-neon.c',
                       'third_party/upb/third_party/utf8_range/range2-sse.c',
                       'third_party/upb/third_party/utf8_range/utf8_range.h',
                       'third_party/upb/upb/decode.c',
                       'third_party/upb/upb/decode.h',
                       'third_party/upb/upb/decode_fast.c',
                       'third_party/upb/upb/decode_fast.h',
                       'third_party/upb/upb/decode_internal.h',
                       'third_party/upb/upb/def.c',
                       'third_party/upb/upb/def.h',
                       'third_party/upb/upb/def.hpp',
                       'third_party/upb/upb/encode.c',
                       'third_party/upb/upb/encode.h',
                       'third_party/upb/upb/json_encode.c',
                       'third_party/upb/upb/json_encode.h',
                       'third_party/upb/upb/msg.c',
                       'third_party/upb/upb/msg.h',
                       'third_party/upb/upb/msg_internal.h',
                       'third_party/upb/upb/port_def.inc',
                       'third_party/upb/upb/port_undef.inc',
                       'third_party/upb/upb/reflection.c',
                       'third_party/upb/upb/reflection.h',
                       'third_party/upb/upb/reflection.hpp',
                       'third_party/upb/upb/table.c',
                       'third_party/upb/upb/table_internal.h',
                       'third_party/upb/upb/text_encode.c',
                       'third_party/upb/upb/text_encode.h',
                       'third_party/upb/upb/upb.c',
                       'third_party/upb/upb/upb.h',
                       'third_party/upb/upb/upb.hpp',
                       'third_party/upb/upb/upb_internal.h',
                       'third_party/xxhash/xxhash.h'
     ss.private_header_files = 'src/core/ext/filters/channel_idle/channel_idle_filter.h',
                               'src/core/ext/filters/channel_idle/idle_filter_state.h',
                               'src/core/ext/filters/client_channel/backend_metric.h',
                               'src/core/ext/filters/client_channel/backup_poller.h',
                               'src/core/ext/filters/client_channel/client_channel.h',
                               'src/core/ext/filters/client_channel/client_channel_channelz.h',
                               'src/core/ext/filters/client_channel/client_channel_factory.h',
                               'src/core/ext/filters/client_channel/config_selector.h',
                               'src/core/ext/filters/client_channel/connector.h',
                               'src/core/ext/filters/client_channel/dynamic_filters.h',
                               'src/core/ext/filters/client_channel/global_subchannel_pool.h',
                               'src/core/ext/filters/client_channel/health/health_check_client.h',
                               'src/core/ext/filters/client_channel/http_proxy.h',
                               'src/core/ext/filters/client_channel/lb_policy.h',
                               'src/core/ext/filters/client_channel/lb_policy/address_filtering.h',
                               'src/core/ext/filters/client_channel/lb_policy/backend_metric_data.h',
                               'src/core/ext/filters/client_channel/lb_policy/child_policy_handler.h',
                               'src/core/ext/filters/client_channel/lb_policy/grpclb/client_load_reporting_filter.h',
                               'src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.h',
                               'src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_balancer_addresses.h',
                               'src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_client_stats.h',
                               'src/core/ext/filters/client_channel/lb_policy/grpclb/load_balancer_api.h',
                               'src/core/ext/filters/client_channel/lb_policy/oob_backend_metric.h',
                               'src/core/ext/filters/client_channel/lb_policy/outlier_detection/outlier_detection.h',
                               'src/core/ext/filters/client_channel/lb_policy/ring_hash/ring_hash.h',
                               'src/core/ext/filters/client_channel/lb_policy/subchannel_list.h',
                               'src/core/ext/filters/client_channel/lb_policy/xds/xds.h',
                               'src/core/ext/filters/client_channel/lb_policy/xds/xds_channel_args.h',
                               'src/core/ext/filters/client_channel/lb_policy_factory.h',
                               'src/core/ext/filters/client_channel/lb_policy_registry.h',
                               'src/core/ext/filters/client_channel/local_subchannel_pool.h',
                               'src/core/ext/filters/client_channel/proxy_mapper.h',
                               'src/core/ext/filters/client_channel/proxy_mapper_registry.h',
                               'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver.h',
                               'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.h',
                               'src/core/ext/filters/client_channel/resolver/dns/dns_resolver_selection.h',
                               'src/core/ext/filters/client_channel/resolver/fake/fake_resolver.h',
                               'src/core/ext/filters/client_channel/resolver/polling_resolver.h',
                               'src/core/ext/filters/client_channel/resolver/xds/xds_resolver.h',
                               'src/core/ext/filters/client_channel/resolver_result_parsing.h',
                               'src/core/ext/filters/client_channel/retry_filter.h',
                               'src/core/ext/filters/client_channel/retry_service_config.h',
                               'src/core/ext/filters/client_channel/retry_throttle.h',
                               'src/core/ext/filters/client_channel/subchannel.h',
                               'src/core/ext/filters/client_channel/subchannel_interface.h',
                               'src/core/ext/filters/client_channel/subchannel_interface_internal.h',
                               'src/core/ext/filters/client_channel/subchannel_pool_interface.h',
                               'src/core/ext/filters/client_channel/subchannel_stream_client.h',
                               'src/core/ext/filters/deadline/deadline_filter.h',
                               'src/core/ext/filters/fault_injection/fault_injection_filter.h',
                               'src/core/ext/filters/fault_injection/service_config_parser.h',
                               'src/core/ext/filters/http/client/http_client_filter.h',
                               'src/core/ext/filters/http/client_authority_filter.h',
                               'src/core/ext/filters/http/message_compress/message_compress_filter.h',
                               'src/core/ext/filters/http/message_compress/message_decompress_filter.h',
                               'src/core/ext/filters/http/server/http_server_filter.h',
                               'src/core/ext/filters/message_size/message_size_filter.h',
                               'src/core/ext/filters/rbac/rbac_filter.h',
                               'src/core/ext/filters/rbac/rbac_service_config_parser.h',
                               'src/core/ext/filters/server_config_selector/server_config_selector.h',
                               'src/core/ext/filters/server_config_selector/server_config_selector_filter.h',
                               'src/core/ext/transport/chttp2/alpn/alpn.h',
                               'src/core/ext/transport/chttp2/client/chttp2_connector.h',
                               'src/core/ext/transport/chttp2/server/chttp2_server.h',
                               'src/core/ext/transport/chttp2/transport/bin_decoder.h',
                               'src/core/ext/transport/chttp2/transport/bin_encoder.h',
                               'src/core/ext/transport/chttp2/transport/chttp2_transport.h',
                               'src/core/ext/transport/chttp2/transport/context_list.h',
                               'src/core/ext/transport/chttp2/transport/flow_control.h',
                               'src/core/ext/transport/chttp2/transport/frame.h',
                               'src/core/ext/transport/chttp2/transport/frame_data.h',
                               'src/core/ext/transport/chttp2/transport/frame_goaway.h',
                               'src/core/ext/transport/chttp2/transport/frame_ping.h',
                               'src/core/ext/transport/chttp2/transport/frame_rst_stream.h',
                               'src/core/ext/transport/chttp2/transport/frame_settings.h',
                               'src/core/ext/transport/chttp2/transport/frame_window_update.h',
                               'src/core/ext/transport/chttp2/transport/hpack_constants.h',
                               'src/core/ext/transport/chttp2/transport/hpack_encoder.h',
                               'src/core/ext/transport/chttp2/transport/hpack_encoder_table.h',
                               'src/core/ext/transport/chttp2/transport/hpack_parser.h',
                               'src/core/ext/transport/chttp2/transport/hpack_parser_table.h',
                               'src/core/ext/transport/chttp2/transport/http2_settings.h',
                               'src/core/ext/transport/chttp2/transport/huffsyms.h',
                               'src/core/ext/transport/chttp2/transport/internal.h',
                               'src/core/ext/transport/chttp2/transport/stream_map.h',
                               'src/core/ext/transport/chttp2/transport/varint.h',
                               'src/core/ext/transport/inproc/inproc_transport.h',
                               'src/core/ext/upb-generated/envoy/admin/v3/certs.upb.h',
                               'src/core/ext/upb-generated/envoy/admin/v3/clusters.upb.h',
                               'src/core/ext/upb-generated/envoy/admin/v3/config_dump.upb.h',
                               'src/core/ext/upb-generated/envoy/admin/v3/init_dump.upb.h',
                               'src/core/ext/upb-generated/envoy/admin/v3/listeners.upb.h',
                               'src/core/ext/upb-generated/envoy/admin/v3/memory.upb.h',
                               'src/core/ext/upb-generated/envoy/admin/v3/metrics.upb.h',
                               'src/core/ext/upb-generated/envoy/admin/v3/mutex_stats.upb.h',
                               'src/core/ext/upb-generated/envoy/admin/v3/server_info.upb.h',
                               'src/core/ext/upb-generated/envoy/admin/v3/tap.upb.h',
                               'src/core/ext/upb-generated/envoy/annotations/deprecation.upb.h',
                               'src/core/ext/upb-generated/envoy/annotations/resource.upb.h',
                               'src/core/ext/upb-generated/envoy/config/accesslog/v3/accesslog.upb.h',
                               'src/core/ext/upb-generated/envoy/config/bootstrap/v3/bootstrap.upb.h',
                               'src/core/ext/upb-generated/envoy/config/cluster/v3/circuit_breaker.upb.h',
                               'src/core/ext/upb-generated/envoy/config/cluster/v3/cluster.upb.h',
                               'src/core/ext/upb-generated/envoy/config/cluster/v3/filter.upb.h',
                               'src/core/ext/upb-generated/envoy/config/cluster/v3/outlier_detection.upb.h',
                               'src/core/ext/upb-generated/envoy/config/common/matcher/v3/matcher.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/address.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/backoff.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/base.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/config_source.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/event_service_config.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/extension.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/grpc_method_list.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/grpc_service.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/health_check.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/http_uri.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/protocol.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/proxy_protocol.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/resolver.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/socket_option.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/substitution_format_string.upb.h',
                               'src/core/ext/upb-generated/envoy/config/core/v3/udp_socket_config.upb.h',
                               'src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint.upb.h',
                               'src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint_components.upb.h',
                               'src/core/ext/upb-generated/envoy/config/endpoint/v3/load_report.upb.h',
                               'src/core/ext/upb-generated/envoy/config/listener/v3/api_listener.upb.h',
                               'src/core/ext/upb-generated/envoy/config/listener/v3/listener.upb.h',
                               'src/core/ext/upb-generated/envoy/config/listener/v3/listener_components.upb.h',
                               'src/core/ext/upb-generated/envoy/config/listener/v3/quic_config.upb.h',
                               'src/core/ext/upb-generated/envoy/config/listener/v3/udp_listener_config.upb.h',
                               'src/core/ext/upb-generated/envoy/config/metrics/v3/metrics_service.upb.h',
                               'src/core/ext/upb-generated/envoy/config/metrics/v3/stats.upb.h',
                               'src/core/ext/upb-generated/envoy/config/overload/v3/overload.upb.h',
                               'src/core/ext/upb-generated/envoy/config/rbac/v3/rbac.upb.h',
                               'src/core/ext/upb-generated/envoy/config/route/v3/route.upb.h',
                               'src/core/ext/upb-generated/envoy/config/route/v3/route_components.upb.h',
                               'src/core/ext/upb-generated/envoy/config/route/v3/scoped_route.upb.h',
                               'src/core/ext/upb-generated/envoy/config/tap/v3/common.upb.h',
                               'src/core/ext/upb-generated/envoy/config/trace/v3/datadog.upb.h',
                               'src/core/ext/upb-generated/envoy/config/trace/v3/dynamic_ot.upb.h',
                               'src/core/ext/upb-generated/envoy/config/trace/v3/http_tracer.upb.h',
                               'src/core/ext/upb-generated/envoy/config/trace/v3/lightstep.upb.h',
                               'src/core/ext/upb-generated/envoy/config/trace/v3/opencensus.upb.h',
                               'src/core/ext/upb-generated/envoy/config/trace/v3/service.upb.h',
                               'src/core/ext/upb-generated/envoy/config/trace/v3/skywalking.upb.h',
                               'src/core/ext/upb-generated/envoy/config/trace/v3/trace.upb.h',
                               'src/core/ext/upb-generated/envoy/config/trace/v3/xray.upb.h',
                               'src/core/ext/upb-generated/envoy/config/trace/v3/zipkin.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/clusters/aggregate/v3/cluster.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/filters/common/fault/v3/fault.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/filters/http/fault/v3/fault.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/filters/http/rbac/v3/rbac.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/filters/http/router/v3/router.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/ring_hash/v3/ring_hash.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/wrr_locality/v3/wrr_locality.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/cert.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/common.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/secret.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls.upb.h',
                               'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upb.h',
                               'src/core/ext/upb-generated/envoy/service/discovery/v3/ads.upb.h',
                               'src/core/ext/upb-generated/envoy/service/discovery/v3/discovery.upb.h',
                               'src/core/ext/upb-generated/envoy/service/load_stats/v3/lrs.upb.h',
                               'src/core/ext/upb-generated/envoy/service/status/v3/csds.upb.h',
                               'src/core/ext/upb-generated/envoy/type/http/v3/cookie.upb.h',
                               'src/core/ext/upb-generated/envoy/type/http/v3/path_transformation.upb.h',
                               'src/core/ext/upb-generated/envoy/type/matcher/v3/http_inputs.upb.h',
                               'src/core/ext/upb-generated/envoy/type/matcher/v3/metadata.upb.h',
                               'src/core/ext/upb-generated/envoy/type/matcher/v3/node.upb.h',
                               'src/core/ext/upb-generated/envoy/type/matcher/v3/number.upb.h',
                               'src/core/ext/upb-generated/envoy/type/matcher/v3/path.upb.h',
                               'src/core/ext/upb-generated/envoy/type/matcher/v3/regex.upb.h',
                               'src/core/ext/upb-generated/envoy/type/matcher/v3/string.upb.h',
                               'src/core/ext/upb-generated/envoy/type/matcher/v3/struct.upb.h',
                               'src/core/ext/upb-generated/envoy/type/matcher/v3/value.upb.h',
                               'src/core/ext/upb-generated/envoy/type/metadata/v3/metadata.upb.h',
                               'src/core/ext/upb-generated/envoy/type/tracing/v3/custom_tag.upb.h',
                               'src/core/ext/upb-generated/envoy/type/v3/hash_policy.upb.h',
                               'src/core/ext/upb-generated/envoy/type/v3/http.upb.h',
                               'src/core/ext/upb-generated/envoy/type/v3/http_status.upb.h',
                               'src/core/ext/upb-generated/envoy/type/v3/percent.upb.h',
                               'src/core/ext/upb-generated/envoy/type/v3/range.upb.h',
                               'src/core/ext/upb-generated/envoy/type/v3/ratelimit_unit.upb.h',
                               'src/core/ext/upb-generated/envoy/type/v3/semantic_version.upb.h',
                               'src/core/ext/upb-generated/envoy/type/v3/token_bucket.upb.h',
                               'src/core/ext/upb-generated/google/api/annotations.upb.h',
                               'src/core/ext/upb-generated/google/api/expr/v1alpha1/checked.upb.h',
                               'src/core/ext/upb-generated/google/api/expr/v1alpha1/syntax.upb.h',
                               'src/core/ext/upb-generated/google/api/http.upb.h',
                               'src/core/ext/upb-generated/google/api/httpbody.upb.h',
                               'src/core/ext/upb-generated/google/protobuf/any.upb.h',
                               'src/core/ext/upb-generated/google/protobuf/descriptor.upb.h',
                               'src/core/ext/upb-generated/google/protobuf/duration.upb.h',
                               'src/core/ext/upb-generated/google/protobuf/empty.upb.h',
                               'src/core/ext/upb-generated/google/protobuf/struct.upb.h',
                               'src/core/ext/upb-generated/google/protobuf/timestamp.upb.h',
                               'src/core/ext/upb-generated/google/protobuf/wrappers.upb.h',
                               'src/core/ext/upb-generated/google/rpc/status.upb.h',
                               'src/core/ext/upb-generated/opencensus/proto/trace/v1/trace_config.upb.h',
                               'src/core/ext/upb-generated/src/proto/grpc/gcp/altscontext.upb.h',
                               'src/core/ext/upb-generated/src/proto/grpc/gcp/handshaker.upb.h',
                               'src/core/ext/upb-generated/src/proto/grpc/gcp/transport_security_common.upb.h',
                               'src/core/ext/upb-generated/src/proto/grpc/health/v1/health.upb.h',
                               'src/core/ext/upb-generated/src/proto/grpc/lb/v1/load_balancer.upb.h',
                               'src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls.upb.h',
                               'src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls_config.upb.h',
                               'src/core/ext/upb-generated/udpa/annotations/migrate.upb.h',
                               'src/core/ext/upb-generated/udpa/annotations/security.upb.h',
                               'src/core/ext/upb-generated/udpa/annotations/sensitive.upb.h',
                               'src/core/ext/upb-generated/udpa/annotations/status.upb.h',
                               'src/core/ext/upb-generated/udpa/annotations/versioning.upb.h',
                               'src/core/ext/upb-generated/validate/validate.upb.h',
                               'src/core/ext/upb-generated/xds/annotations/v3/migrate.upb.h',
                               'src/core/ext/upb-generated/xds/annotations/v3/security.upb.h',
                               'src/core/ext/upb-generated/xds/annotations/v3/sensitive.upb.h',
                               'src/core/ext/upb-generated/xds/annotations/v3/status.upb.h',
                               'src/core/ext/upb-generated/xds/annotations/v3/versioning.upb.h',
                               'src/core/ext/upb-generated/xds/core/v3/authority.upb.h',
                               'src/core/ext/upb-generated/xds/core/v3/collection_entry.upb.h',
                               'src/core/ext/upb-generated/xds/core/v3/context_params.upb.h',
                               'src/core/ext/upb-generated/xds/core/v3/extension.upb.h',
                               'src/core/ext/upb-generated/xds/core/v3/resource.upb.h',
                               'src/core/ext/upb-generated/xds/core/v3/resource_locator.upb.h',
                               'src/core/ext/upb-generated/xds/core/v3/resource_name.upb.h',
                               'src/core/ext/upb-generated/xds/data/orca/v3/orca_load_report.upb.h',
                               'src/core/ext/upb-generated/xds/service/orca/v3/orca.upb.h',
                               'src/core/ext/upb-generated/xds/type/matcher/v3/matcher.upb.h',
                               'src/core/ext/upb-generated/xds/type/matcher/v3/regex.upb.h',
                               'src/core/ext/upb-generated/xds/type/matcher/v3/string.upb.h',
                               'src/core/ext/upb-generated/xds/type/v3/typed_struct.upb.h',
                               'src/core/ext/upbdefs-generated/envoy/admin/v3/certs.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/admin/v3/clusters.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/admin/v3/config_dump.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/admin/v3/init_dump.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/admin/v3/listeners.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/admin/v3/memory.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/admin/v3/metrics.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/admin/v3/mutex_stats.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/admin/v3/server_info.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/admin/v3/tap.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/annotations/deprecation.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/annotations/resource.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/accesslog/v3/accesslog.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/bootstrap/v3/bootstrap.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/circuit_breaker.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/cluster.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/filter.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/outlier_detection.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/common/matcher/v3/matcher.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/address.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/backoff.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/base.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/config_source.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/event_service_config.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/extension.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_method_list.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_service.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/health_check.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/http_uri.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/protocol.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/proxy_protocol.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/resolver.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/socket_option.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/substitution_format_string.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/core/v3/udp_socket_config.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint_components.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/load_report.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/listener/v3/api_listener.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener_components.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/listener/v3/quic_config.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/listener/v3/udp_listener_config.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/metrics/v3/metrics_service.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/metrics/v3/stats.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/overload/v3/overload.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/rbac/v3/rbac.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/route/v3/route.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/route/v3/route_components.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/route/v3/scoped_route.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/tap/v3/common.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/trace/v3/datadog.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/trace/v3/dynamic_ot.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/trace/v3/http_tracer.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/trace/v3/lightstep.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/trace/v3/opencensus.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/trace/v3/service.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/trace/v3/skywalking.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/trace/v3/trace.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/trace/v3/xray.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/config/trace/v3/zipkin.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/extensions/clusters/aggregate/v3/cluster.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/extensions/filters/common/fault/v3/fault.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/extensions/filters/http/fault/v3/fault.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/extensions/filters/http/rbac/v3/rbac.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/extensions/filters/http/router/v3/router.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/cert.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/common.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/secret.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/service/discovery/v3/ads.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/service/discovery/v3/discovery.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/service/load_stats/v3/lrs.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/service/status/v3/csds.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/http/v3/cookie.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/http/v3/path_transformation.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/http_inputs.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/metadata.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/node.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/number.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/path.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/regex.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/string.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/struct.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/value.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/metadata/v3/metadata.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/tracing/v3/custom_tag.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/v3/hash_policy.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/v3/http.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/v3/http_status.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/v3/percent.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/v3/range.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/v3/ratelimit_unit.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/v3/semantic_version.upbdefs.h',
                               'src/core/ext/upbdefs-generated/envoy/type/v3/token_bucket.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/api/annotations.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/checked.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/syntax.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/api/http.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/api/httpbody.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/protobuf/any.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/protobuf/descriptor.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/protobuf/duration.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/protobuf/empty.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/protobuf/struct.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/protobuf/timestamp.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/protobuf/wrappers.upbdefs.h',
                               'src/core/ext/upbdefs-generated/google/rpc/status.upbdefs.h',
                               'src/core/ext/upbdefs-generated/opencensus/proto/trace/v1/trace_config.upbdefs.h',
                               'src/core/ext/upbdefs-generated/src/proto/grpc/lookup/v1/rls_config.upbdefs.h',
                               'src/core/ext/upbdefs-generated/udpa/annotations/migrate.upbdefs.h',
                               'src/core/ext/upbdefs-generated/udpa/annotations/security.upbdefs.h',
                               'src/core/ext/upbdefs-generated/udpa/annotations/sensitive.upbdefs.h',
                               'src/core/ext/upbdefs-generated/udpa/annotations/status.upbdefs.h',
                               'src/core/ext/upbdefs-generated/udpa/annotations/versioning.upbdefs.h',
                               'src/core/ext/upbdefs-generated/validate/validate.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/annotations/v3/migrate.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/annotations/v3/security.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/annotations/v3/sensitive.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/annotations/v3/status.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/annotations/v3/versioning.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/core/v3/authority.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/core/v3/collection_entry.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/core/v3/context_params.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/core/v3/extension.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/core/v3/resource.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/core/v3/resource_locator.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/core/v3/resource_name.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/type/matcher/v3/matcher.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/type/matcher/v3/regex.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/type/matcher/v3/string.upbdefs.h',
                               'src/core/ext/upbdefs-generated/xds/type/v3/typed_struct.upbdefs.h',
                               'src/core/ext/xds/certificate_provider_factory.h',
                               'src/core/ext/xds/certificate_provider_registry.h',
                               'src/core/ext/xds/certificate_provider_store.h',
                               'src/core/ext/xds/file_watcher_certificate_provider_factory.h',
                               'src/core/ext/xds/upb_utils.h',
                               'src/core/ext/xds/xds_api.h',
                               'src/core/ext/xds/xds_bootstrap.h',
                               'src/core/ext/xds/xds_certificate_provider.h',
                               'src/core/ext/xds/xds_channel_args.h',
                               'src/core/ext/xds/xds_channel_stack_modifier.h',
                               'src/core/ext/xds/xds_client.h',
                               'src/core/ext/xds/xds_client_stats.h',
                               'src/core/ext/xds/xds_cluster.h',
                               'src/core/ext/xds/xds_cluster_specifier_plugin.h',
                               'src/core/ext/xds/xds_common_types.h',
                               'src/core/ext/xds/xds_endpoint.h',
                               'src/core/ext/xds/xds_http_fault_filter.h',
                               'src/core/ext/xds/xds_http_filters.h',
                               'src/core/ext/xds/xds_http_rbac_filter.h',
                               'src/core/ext/xds/xds_lb_policy_registry.h',
                               'src/core/ext/xds/xds_listener.h',
                               'src/core/ext/xds/xds_resource_type.h',
                               'src/core/ext/xds/xds_resource_type_impl.h',
                               'src/core/ext/xds/xds_route_config.h',
                               'src/core/ext/xds/xds_routing.h',
                               'src/core/lib/address_utils/parse_address.h',
                               'src/core/lib/address_utils/sockaddr_utils.h',
                               'src/core/lib/avl/avl.h',
                               'src/core/lib/backoff/backoff.h',
                               'src/core/lib/channel/call_finalization.h',
                               'src/core/lib/channel/call_tracer.h',
                               'src/core/lib/channel/channel_args.h',
                               'src/core/lib/channel/channel_args_preconditioning.h',
                               'src/core/lib/channel/channel_fwd.h',
                               'src/core/lib/channel/channel_stack.h',
                               'src/core/lib/channel/channel_stack_builder.h',
                               'src/core/lib/channel/channel_stack_builder_impl.h',
                               'src/core/lib/channel/channel_trace.h',
                               'src/core/lib/channel/channelz.h',
                               'src/core/lib/channel/channelz_registry.h',
                               'src/core/lib/channel/connected_channel.h',
                               'src/core/lib/channel/context.h',
                               'src/core/lib/channel/promise_based_filter.h',
                               'src/core/lib/channel/status_util.h',
                               'src/core/lib/compression/compression_internal.h',
                               'src/core/lib/compression/message_compress.h',
                               'src/core/lib/config/core_configuration.h',
                               'src/core/lib/debug/stats.h',
                               'src/core/lib/debug/stats_data.h',
                               'src/core/lib/debug/trace.h',
                               'src/core/lib/event_engine/channel_args_endpoint_config.h',
                               'src/core/lib/event_engine/event_engine_factory.h',
                               'src/core/lib/event_engine/handle_containers.h',
                               'src/core/lib/event_engine/iomgr_engine.h',
                               'src/core/lib/event_engine/trace.h',
                               'src/core/lib/gpr/alloc.h',
                               'src/core/lib/gpr/env.h',
                               'src/core/lib/gpr/murmur_hash.h',
                               'src/core/lib/gpr/spinlock.h',
                               'src/core/lib/gpr/string.h',
                               'src/core/lib/gpr/string_windows.h',
                               'src/core/lib/gpr/time_precise.h',
                               'src/core/lib/gpr/tls.h',
                               'src/core/lib/gpr/tmpfile.h',
                               'src/core/lib/gpr/useful.h',
                               'src/core/lib/gprpp/atomic_utils.h',
                               'src/core/lib/gprpp/bitset.h',
                               'src/core/lib/gprpp/chunked_vector.h',
                               'src/core/lib/gprpp/construct_destruct.h',
                               'src/core/lib/gprpp/cpp_impl_of.h',
                               'src/core/lib/gprpp/debug_location.h',
                               'src/core/lib/gprpp/dual_ref_counted.h',
                               'src/core/lib/gprpp/examine_stack.h',
                               'src/core/lib/gprpp/fork.h',
                               'src/core/lib/gprpp/global_config.h',
                               'src/core/lib/gprpp/global_config_custom.h',
                               'src/core/lib/gprpp/global_config_env.h',
                               'src/core/lib/gprpp/global_config_generic.h',
                               'src/core/lib/gprpp/host_port.h',
                               'src/core/lib/gprpp/manual_constructor.h',
                               'src/core/lib/gprpp/match.h',
                               'src/core/lib/gprpp/memory.h',
                               'src/core/lib/gprpp/mpscq.h',
                               'src/core/lib/gprpp/orphanable.h',
                               'src/core/lib/gprpp/overload.h',
                               'src/core/lib/gprpp/ref_counted.h',
                               'src/core/lib/gprpp/ref_counted_ptr.h',
                               'src/core/lib/gprpp/single_set_ptr.h',
                               'src/core/lib/gprpp/stat.h',
                               'src/core/lib/gprpp/status_helper.h',
                               'src/core/lib/gprpp/sync.h',
                               'src/core/lib/gprpp/table.h',
                               'src/core/lib/gprpp/thd.h',
                               'src/core/lib/gprpp/time.h',
                               'src/core/lib/gprpp/time_util.h',
                               'src/core/lib/gprpp/unique_type_name.h',
                               'src/core/lib/http/format_request.h',
                               'src/core/lib/http/httpcli.h',
                               'src/core/lib/http/httpcli_ssl_credentials.h',
                               'src/core/lib/http/parser.h',
                               'src/core/lib/iomgr/block_annotate.h',
                               'src/core/lib/iomgr/buffer_list.h',
                               'src/core/lib/iomgr/call_combiner.h',
                               'src/core/lib/iomgr/cfstream_handle.h',
                               'src/core/lib/iomgr/closure.h',
                               'src/core/lib/iomgr/combiner.h',
                               'src/core/lib/iomgr/dynamic_annotations.h',
                               'src/core/lib/iomgr/endpoint.h',
                               'src/core/lib/iomgr/endpoint_cfstream.h',
                               'src/core/lib/iomgr/endpoint_pair.h',
                               'src/core/lib/iomgr/error.h',
                               'src/core/lib/iomgr/error_cfstream.h',
                               'src/core/lib/iomgr/error_internal.h',
                               'src/core/lib/iomgr/ev_apple.h',
                               'src/core/lib/iomgr/ev_epoll1_linux.h',
                               'src/core/lib/iomgr/ev_poll_posix.h',
                               'src/core/lib/iomgr/ev_posix.h',
                               'src/core/lib/iomgr/exec_ctx.h',
                               'src/core/lib/iomgr/executor.h',
                               'src/core/lib/iomgr/executor/mpmcqueue.h',
                               'src/core/lib/iomgr/executor/threadpool.h',
                               'src/core/lib/iomgr/gethostname.h',
                               'src/core/lib/iomgr/grpc_if_nametoindex.h',
                               'src/core/lib/iomgr/internal_errqueue.h',
                               'src/core/lib/iomgr/iocp_windows.h',
                               'src/core/lib/iomgr/iomgr.h',
                               'src/core/lib/iomgr/iomgr_fwd.h',
                               'src/core/lib/iomgr/iomgr_internal.h',
                               'src/core/lib/iomgr/load_file.h',
                               'src/core/lib/iomgr/lockfree_event.h',
                               'src/core/lib/iomgr/nameser.h',
                               'src/core/lib/iomgr/polling_entity.h',
                               'src/core/lib/iomgr/pollset.h',
                               'src/core/lib/iomgr/pollset_set.h',
                               'src/core/lib/iomgr/pollset_set_windows.h',
                               'src/core/lib/iomgr/pollset_windows.h',
                               'src/core/lib/iomgr/port.h',
                               'src/core/lib/iomgr/python_util.h',
                               'src/core/lib/iomgr/resolve_address.h',
                               'src/core/lib/iomgr/resolve_address_impl.h',
                               'src/core/lib/iomgr/resolve_address_posix.h',
                               'src/core/lib/iomgr/resolve_address_windows.h',
                               'src/core/lib/iomgr/resolved_address.h',
                               'src/core/lib/iomgr/sockaddr.h',
                               'src/core/lib/iomgr/sockaddr_posix.h',
                               'src/core/lib/iomgr/sockaddr_windows.h',
                               'src/core/lib/iomgr/socket_factory_posix.h',
                               'src/core/lib/iomgr/socket_mutator.h',
                               'src/core/lib/iomgr/socket_utils.h',
                               'src/core/lib/iomgr/socket_utils_posix.h',
                               'src/core/lib/iomgr/socket_windows.h',
                               'src/core/lib/iomgr/tcp_client.h',
                               'src/core/lib/iomgr/tcp_client_posix.h',
                               'src/core/lib/iomgr/tcp_posix.h',
                               'src/core/lib/iomgr/tcp_server.h',
                               'src/core/lib/iomgr/tcp_server_utils_posix.h',
                               'src/core/lib/iomgr/tcp_windows.h',
                               'src/core/lib/iomgr/time_averaged_stats.h',
                               'src/core/lib/iomgr/timer.h',
                               'src/core/lib/iomgr/timer_generic.h',
                               'src/core/lib/iomgr/timer_heap.h',
                               'src/core/lib/iomgr/timer_manager.h',
                               'src/core/lib/iomgr/unix_sockets_posix.h',
                               'src/core/lib/iomgr/wakeup_fd_pipe.h',
                               'src/core/lib/iomgr/wakeup_fd_posix.h',
                               'src/core/lib/iomgr/work_serializer.h',
                               'src/core/lib/json/json.h',
                               'src/core/lib/json/json_util.h',
                               'src/core/lib/matchers/matchers.h',
                               'src/core/lib/profiling/timers.h',
                               'src/core/lib/promise/activity.h',
                               'src/core/lib/promise/arena_promise.h',
                               'src/core/lib/promise/call_push_pull.h',
                               'src/core/lib/promise/context.h',
                               'src/core/lib/promise/detail/basic_seq.h',
                               'src/core/lib/promise/detail/promise_factory.h',
                               'src/core/lib/promise/detail/promise_like.h',
                               'src/core/lib/promise/detail/status.h',
                               'src/core/lib/promise/detail/switch.h',
                               'src/core/lib/promise/exec_ctx_wakeup_scheduler.h',
                               'src/core/lib/promise/intra_activity_waiter.h',
                               'src/core/lib/promise/latch.h',
                               'src/core/lib/promise/loop.h',
                               'src/core/lib/promise/map.h',
                               'src/core/lib/promise/poll.h',
                               'src/core/lib/promise/promise.h',
                               'src/core/lib/promise/race.h',
                               'src/core/lib/promise/seq.h',
                               'src/core/lib/promise/sleep.h',
                               'src/core/lib/promise/try_seq.h',
                               'src/core/lib/resolver/resolver.h',
                               'src/core/lib/resolver/resolver_factory.h',
                               'src/core/lib/resolver/resolver_registry.h',
                               'src/core/lib/resolver/server_address.h',
                               'src/core/lib/resource_quota/api.h',
                               'src/core/lib/resource_quota/arena.h',
                               'src/core/lib/resource_quota/memory_quota.h',
                               'src/core/lib/resource_quota/resource_quota.h',
                               'src/core/lib/resource_quota/thread_quota.h',
                               'src/core/lib/resource_quota/trace.h',
                               'src/core/lib/security/authorization/authorization_engine.h',
                               'src/core/lib/security/authorization/authorization_policy_provider.h',
                               'src/core/lib/security/authorization/evaluate_args.h',
                               'src/core/lib/security/authorization/grpc_authorization_engine.h',
                               'src/core/lib/security/authorization/grpc_server_authz_filter.h',
                               'src/core/lib/security/authorization/matchers.h',
                               'src/core/lib/security/authorization/rbac_policy.h',
                               'src/core/lib/security/context/security_context.h',
                               'src/core/lib/security/credentials/alts/alts_credentials.h',
                               'src/core/lib/security/credentials/alts/check_gcp_environment.h',
                               'src/core/lib/security/credentials/alts/grpc_alts_credentials_options.h',
                               'src/core/lib/security/credentials/call_creds_util.h',
                               'src/core/lib/security/credentials/channel_creds_registry.h',
                               'src/core/lib/security/credentials/composite/composite_credentials.h',
                               'src/core/lib/security/credentials/credentials.h',
                               'src/core/lib/security/credentials/external/aws_external_account_credentials.h',
                               'src/core/lib/security/credentials/external/aws_request_signer.h',
                               'src/core/lib/security/credentials/external/external_account_credentials.h',
                               'src/core/lib/security/credentials/external/file_external_account_credentials.h',
                               'src/core/lib/security/credentials/external/url_external_account_credentials.h',
                               'src/core/lib/security/credentials/fake/fake_credentials.h',
                               'src/core/lib/security/credentials/google_default/google_default_credentials.h',
                               'src/core/lib/security/credentials/iam/iam_credentials.h',
                               'src/core/lib/security/credentials/insecure/insecure_credentials.h',
                               'src/core/lib/security/credentials/jwt/json_token.h',
                               'src/core/lib/security/credentials/jwt/jwt_credentials.h',
                               'src/core/lib/security/credentials/jwt/jwt_verifier.h',
                               'src/core/lib/security/credentials/local/local_credentials.h',
                               'src/core/lib/security/credentials/oauth2/oauth2_credentials.h',
                               'src/core/lib/security/credentials/plugin/plugin_credentials.h',
                               'src/core/lib/security/credentials/ssl/ssl_credentials.h',
                               'src/core/lib/security/credentials/tls/grpc_tls_certificate_distributor.h',
                               'src/core/lib/security/credentials/tls/grpc_tls_certificate_provider.h',
                               'src/core/lib/security/credentials/tls/grpc_tls_certificate_verifier.h',
                               'src/core/lib/security/credentials/tls/grpc_tls_credentials_options.h',
                               'src/core/lib/security/credentials/tls/tls_credentials.h',
                               'src/core/lib/security/credentials/tls/tls_utils.h',
                               'src/core/lib/security/credentials/xds/xds_credentials.h',
                               'src/core/lib/security/security_connector/alts/alts_security_connector.h',
                               'src/core/lib/security/security_connector/fake/fake_security_connector.h',
                               'src/core/lib/security/security_connector/insecure/insecure_security_connector.h',
                               'src/core/lib/security/security_connector/load_system_roots.h',
                               'src/core/lib/security/security_connector/load_system_roots_linux.h',
                               'src/core/lib/security/security_connector/local/local_security_connector.h',
                               'src/core/lib/security/security_connector/security_connector.h',
                               'src/core/lib/security/security_connector/ssl/ssl_security_connector.h',
                               'src/core/lib/security/security_connector/ssl_utils.h',
                               'src/core/lib/security/security_connector/ssl_utils_config.h',
                               'src/core/lib/security/security_connector/tls/tls_security_connector.h',
                               'src/core/lib/security/transport/auth_filters.h',
                               'src/core/lib/security/transport/secure_endpoint.h',
                               'src/core/lib/security/transport/security_handshaker.h',
                               'src/core/lib/security/transport/tsi_error.h',
                               'src/core/lib/security/util/json_util.h',
                               'src/core/lib/service_config/service_config.h',
                               'src/core/lib/service_config/service_config_call_data.h',
                               'src/core/lib/service_config/service_config_impl.h',
                               'src/core/lib/service_config/service_config_parser.h',
                               'src/core/lib/slice/b64.h',
                               'src/core/lib/slice/percent_encoding.h',
                               'src/core/lib/slice/slice.h',
                               'src/core/lib/slice/slice_buffer.h',
                               'src/core/lib/slice/slice_internal.h',
                               'src/core/lib/slice/slice_refcount.h',
                               'src/core/lib/slice/slice_refcount_base.h',
                               'src/core/lib/slice/slice_split.h',
                               'src/core/lib/slice/slice_string_helpers.h',
                               'src/core/lib/surface/api_trace.h',
                               'src/core/lib/surface/builtins.h',
                               'src/core/lib/surface/call.h',
                               'src/core/lib/surface/call_test_only.h',
                               'src/core/lib/surface/channel.h',
                               'src/core/lib/surface/channel_init.h',
                               'src/core/lib/surface/channel_stack_type.h',
                               'src/core/lib/surface/completion_queue.h',
                               'src/core/lib/surface/completion_queue_factory.h',
                               'src/core/lib/surface/event_string.h',
                               'src/core/lib/surface/init.h',
                               'src/core/lib/surface/lame_client.h',
                               'src/core/lib/surface/server.h',
                               'src/core/lib/surface/validate_metadata.h',
                               'src/core/lib/transport/bdp_estimator.h',
+                              'src/core/lib/transport/byte_stream.h',
                               'src/core/lib/transport/connectivity_state.h',
                               'src/core/lib/transport/error_utils.h',
                               'src/core/lib/transport/handshaker.h',
                               'src/core/lib/transport/handshaker_factory.h',
                               'src/core/lib/transport/handshaker_registry.h',
                               'src/core/lib/transport/http2_errors.h',
                               'src/core/lib/transport/http_connect_handshaker.h',
                               'src/core/lib/transport/metadata_batch.h',
                               'src/core/lib/transport/parsed_metadata.h',
                               'src/core/lib/transport/pid_controller.h',
                               'src/core/lib/transport/status_conversion.h',
                               'src/core/lib/transport/tcp_connect_handshaker.h',
                               'src/core/lib/transport/timeout_encoding.h',
                               'src/core/lib/transport/transport.h',
                               'src/core/lib/transport/transport_fwd.h',
                               'src/core/lib/transport/transport_impl.h',
                               'src/core/lib/uri/uri_parser.h',
                               'src/core/tsi/alts/crypt/gsec.h',
                               'src/core/tsi/alts/frame_protector/alts_counter.h',
                               'src/core/tsi/alts/frame_protector/alts_crypter.h',
                               'src/core/tsi/alts/frame_protector/alts_frame_protector.h',
                               'src/core/tsi/alts/frame_protector/alts_record_protocol_crypter_common.h',
                               'src/core/tsi/alts/frame_protector/frame_handler.h',
                               'src/core/tsi/alts/handshaker/alts_handshaker_client.h',
                               'src/core/tsi/alts/handshaker/alts_shared_resource.h',
                               'src/core/tsi/alts/handshaker/alts_tsi_handshaker.h',
                               'src/core/tsi/alts/handshaker/alts_tsi_handshaker_private.h',
                               'src/core/tsi/alts/handshaker/alts_tsi_utils.h',
                               'src/core/tsi/alts/handshaker/transport_security_common_api.h',
                               'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_integrity_only_record_protocol.h',
                               'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_privacy_integrity_record_protocol.h',
                               'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol.h',
                               'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol_common.h',
                               'src/core/tsi/alts/zero_copy_frame_protector/alts_iovec_record_protocol.h',
                               'src/core/tsi/alts/zero_copy_frame_protector/alts_zero_copy_grpc_protector.h',
                               'src/core/tsi/fake_transport_security.h',
                               'src/core/tsi/local_transport_security.h',
                               'src/core/tsi/ssl/key_logging/ssl_key_logging.h',
                               'src/core/tsi/ssl/session_cache/ssl_session.h',
                               'src/core/tsi/ssl/session_cache/ssl_session_cache.h',
                               'src/core/tsi/ssl_transport_security.h',
                               'src/core/tsi/ssl_types.h',
                               'src/core/tsi/transport_security.h',
                               'src/core/tsi/transport_security_grpc.h',
                               'src/core/tsi/transport_security_interface.h',
                               'third_party/re2/re2/bitmap256.h',
                               'third_party/re2/re2/filtered_re2.h',
                               'third_party/re2/re2/pod_array.h',
                               'third_party/re2/re2/prefilter.h',
                               'third_party/re2/re2/prefilter_tree.h',
                               'third_party/re2/re2/prog.h',
                               'third_party/re2/re2/re2.h',
                               'third_party/re2/re2/regexp.h',
                               'third_party/re2/re2/set.h',
                               'third_party/re2/re2/sparse_array.h',
                               'third_party/re2/re2/sparse_set.h',
                               'third_party/re2/re2/stringpiece.h',
                               'third_party/re2/re2/unicode_casefold.h',
                               'third_party/re2/re2/unicode_groups.h',
                               'third_party/re2/re2/walker-inl.h',
                               'third_party/re2/util/benchmark.h',
                               'third_party/re2/util/flags.h',
                               'third_party/re2/util/logging.h',
                               'third_party/re2/util/malloc_counter.h',
                               'third_party/re2/util/mix.h',
                               'third_party/re2/util/mutex.h',
                               'third_party/re2/util/pcre.h',
                               'third_party/re2/util/strutil.h',
                               'third_party/re2/util/test.h',
                               'third_party/re2/util/utf.h',
                               'third_party/re2/util/util.h',
                               'third_party/upb/third_party/utf8_range/utf8_range.h',
                               'third_party/upb/upb/decode.h',
                               'third_party/upb/upb/decode_fast.h',
                               'third_party/upb/upb/decode_internal.h',
                               'third_party/upb/upb/def.h',
                               'third_party/upb/upb/def.hpp',
                               'third_party/upb/upb/encode.h',
                               'third_party/upb/upb/json_encode.h',
                               'third_party/upb/upb/msg.h',
                               'third_party/upb/upb/msg_internal.h',
                               'third_party/upb/upb/port_def.inc',
                               'third_party/upb/upb/port_undef.inc',
                               'third_party/upb/upb/reflection.h',
                               'third_party/upb/upb/reflection.hpp',
                               'third_party/upb/upb/table_internal.h',
                               'third_party/upb/upb/text_encode.h',
                               'third_party/upb/upb/upb.h',
                               'third_party/upb/upb/upb.hpp',
                               'third_party/upb/upb/upb_internal.h',
                               'third_party/xxhash/xxhash.h'
   end
 
   # CFStream is now default. Leaving this subspec only for compatibility purpose.
   s.subspec 'CFStream-Implementation' do |ss|
     ss.dependency "#{s.name}/Implementation", version
   end
 
   s.subspec 'Cronet-Interface' do |ss|
     ss.header_mappings_dir = 'include/grpc'
     ss.source_files = 'include/grpc/grpc_cronet.h'
   end
 
   s.subspec 'Cronet-Implementation' do |ss|
     ss.header_mappings_dir = '.'
 
     ss.dependency "#{s.name}/Interface", version
     ss.dependency "#{s.name}/Implementation", version
     ss.dependency "#{s.name}/Cronet-Interface", version
 
     ss.source_files = 'src/core/ext/transport/cronet/client/secure/cronet_channel_create.cc',
                       'src/core/ext/transport/cronet/client/secure/cronet_channel_create.h',
                       'src/core/ext/transport/cronet/transport/cronet_status.cc',
                       'src/core/ext/transport/cronet/transport/cronet_status.h',
                       'src/core/ext/transport/cronet/transport/cronet_transport.cc',
                       'src/core/ext/transport/cronet/transport/cronet_transport.h',
                       'third_party/objective_c/Cronet/bidirectional_stream_c.h'
   end
 
   s.subspec 'Tests' do |ss|
     ss.header_mappings_dir = '.'
 
     ss.dependency "#{s.name}/Interface", version
     ss.dependency "#{s.name}/Implementation", version
     ss.dependency 'abseil/debugging/failure_signal_handler', abseil_version
     ss.dependency 'abseil/debugging/stacktrace', abseil_version
     ss.dependency 'abseil/debugging/symbolize', abseil_version
 
     ss.source_files = 'src/core/lib/security/authorization/grpc_authorization_policy_provider.cc',
                       'src/core/lib/security/authorization/grpc_authorization_policy_provider.h',
                       'src/core/lib/security/authorization/rbac_translator.cc',
                       'src/core/lib/security/authorization/rbac_translator.h',
                       'test/core/compression/args_utils.cc',
                       'test/core/compression/args_utils.h',
                       'test/core/end2end/cq_verifier.cc',
                       'test/core/end2end/cq_verifier.h',
                       'test/core/end2end/data/client_certs.cc',
                       'test/core/end2end/data/server1_cert.cc',
                       'test/core/end2end/data/server1_key.cc',
                       'test/core/end2end/data/ssl_test_data.h',
                       'test/core/end2end/data/test_root_cert.cc',
                       'test/core/end2end/end2end_test_utils.cc',
                       'test/core/end2end/end2end_tests.cc',
                       'test/core/end2end/end2end_tests.h',
                       'test/core/end2end/fixtures/http_proxy_fixture.cc',
                       'test/core/end2end/fixtures/http_proxy_fixture.h',
                       'test/core/end2end/fixtures/local_util.cc',
                       'test/core/end2end/fixtures/local_util.h',
                       'test/core/end2end/fixtures/proxy.cc',
                       'test/core/end2end/fixtures/proxy.h',
                       'test/core/end2end/tests/authority_not_supported.cc',
                       'test/core/end2end/tests/bad_hostname.cc',
                       'test/core/end2end/tests/bad_ping.cc',
                       'test/core/end2end/tests/binary_metadata.cc',
                       'test/core/end2end/tests/call_creds.cc',
                       'test/core/end2end/tests/call_host_override.cc',
                       'test/core/end2end/tests/cancel_after_accept.cc',
                       'test/core/end2end/tests/cancel_after_client_done.cc',
                       'test/core/end2end/tests/cancel_after_invoke.cc',
                       'test/core/end2end/tests/cancel_after_round_trip.cc',
                       'test/core/end2end/tests/cancel_before_invoke.cc',
                       'test/core/end2end/tests/cancel_in_a_vacuum.cc',
                       'test/core/end2end/tests/cancel_test_helpers.h',
                       'test/core/end2end/tests/cancel_with_status.cc',
                       'test/core/end2end/tests/channelz.cc',
                       'test/core/end2end/tests/client_streaming.cc',
                       'test/core/end2end/tests/compressed_payload.cc',
                       'test/core/end2end/tests/connectivity.cc',
                       'test/core/end2end/tests/default_host.cc',
                       'test/core/end2end/tests/disappearing_server.cc',
                       'test/core/end2end/tests/empty_batch.cc',
                       'test/core/end2end/tests/filter_causes_close.cc',
                       'test/core/end2end/tests/filter_context.cc',
                       'test/core/end2end/tests/filter_init_fails.cc',
                       'test/core/end2end/tests/filter_latency.cc',
                       'test/core/end2end/tests/filter_status_code.cc',
                       'test/core/end2end/tests/filtered_metadata.cc',
                       'test/core/end2end/tests/graceful_server_shutdown.cc',
                       'test/core/end2end/tests/grpc_authz.cc',
                       'test/core/end2end/tests/high_initial_seqno.cc',
                       'test/core/end2end/tests/hpack_size.cc',
                       'test/core/end2end/tests/invoke_large_request.cc',
                       'test/core/end2end/tests/keepalive_timeout.cc',
                       'test/core/end2end/tests/large_metadata.cc',
                       'test/core/end2end/tests/max_concurrent_streams.cc',
                       'test/core/end2end/tests/max_connection_age.cc',
                       'test/core/end2end/tests/max_connection_idle.cc',
                       'test/core/end2end/tests/max_message_length.cc',
                       'test/core/end2end/tests/negative_deadline.cc',
                       'test/core/end2end/tests/no_error_on_hotpath.cc',
                       'test/core/end2end/tests/no_logging.cc',
                       'test/core/end2end/tests/no_op.cc',
                       'test/core/end2end/tests/payload.cc',
                       'test/core/end2end/tests/ping.cc',
                       'test/core/end2end/tests/ping_pong_streaming.cc',
                       'test/core/end2end/tests/proxy_auth.cc',
                       'test/core/end2end/tests/registered_call.cc',
                       'test/core/end2end/tests/request_with_flags.cc',
                       'test/core/end2end/tests/request_with_payload.cc',
                       'test/core/end2end/tests/resource_quota_server.cc',
                       'test/core/end2end/tests/retry.cc',
                       'test/core/end2end/tests/retry_cancel_after_first_attempt_starts.cc',
                       'test/core/end2end/tests/retry_cancel_during_delay.cc',
                       'test/core/end2end/tests/retry_cancel_with_multiple_send_batches.cc',
                       'test/core/end2end/tests/retry_cancellation.cc',
                       'test/core/end2end/tests/retry_disabled.cc',
                       'test/core/end2end/tests/retry_exceeds_buffer_size_in_delay.cc',
                       'test/core/end2end/tests/retry_exceeds_buffer_size_in_initial_batch.cc',
                       'test/core/end2end/tests/retry_exceeds_buffer_size_in_subsequent_batch.cc',
                       'test/core/end2end/tests/retry_lb_drop.cc',
                       'test/core/end2end/tests/retry_lb_fail.cc',
                       'test/core/end2end/tests/retry_non_retriable_status.cc',
                       'test/core/end2end/tests/retry_non_retriable_status_before_recv_trailing_metadata_started.cc',
                       'test/core/end2end/tests/retry_per_attempt_recv_timeout.cc',
                       'test/core/end2end/tests/retry_per_attempt_recv_timeout_on_last_attempt.cc',
                       'test/core/end2end/tests/retry_recv_initial_metadata.cc',
                       'test/core/end2end/tests/retry_recv_message.cc',
                       'test/core/end2end/tests/retry_recv_message_replay.cc',
                       'test/core/end2end/tests/retry_recv_trailing_metadata_error.cc',
                       'test/core/end2end/tests/retry_send_initial_metadata_refs.cc',
                       'test/core/end2end/tests/retry_send_op_fails.cc',
                       'test/core/end2end/tests/retry_send_recv_batch.cc',
                       'test/core/end2end/tests/retry_server_pushback_delay.cc',
                       'test/core/end2end/tests/retry_server_pushback_disabled.cc',
                       'test/core/end2end/tests/retry_streaming.cc',
                       'test/core/end2end/tests/retry_streaming_after_commit.cc',
                       'test/core/end2end/tests/retry_streaming_succeeds_before_replay_finished.cc',
                       'test/core/end2end/tests/retry_throttled.cc',
                       'test/core/end2end/tests/retry_too_many_attempts.cc',
                       'test/core/end2end/tests/retry_transparent_goaway.cc',
                       'test/core/end2end/tests/retry_transparent_max_concurrent_streams.cc',
                       'test/core/end2end/tests/retry_transparent_not_sent_on_wire.cc',
                       'test/core/end2end/tests/retry_unref_before_finish.cc',
                       'test/core/end2end/tests/retry_unref_before_recv.cc',
                       'test/core/end2end/tests/server_finishes_request.cc',
                       'test/core/end2end/tests/server_streaming.cc',
                       'test/core/end2end/tests/shutdown_finishes_calls.cc',
                       'test/core/end2end/tests/shutdown_finishes_tags.cc',
                       'test/core/end2end/tests/simple_delayed_request.cc',
                       'test/core/end2end/tests/simple_metadata.cc',
                       'test/core/end2end/tests/simple_request.cc',
                       'test/core/end2end/tests/streaming_error_response.cc',
                       'test/core/end2end/tests/trailing_metadata.cc',
                       'test/core/end2end/tests/write_buffering.cc',
                       'test/core/end2end/tests/write_buffering_at_end.cc',
                       'test/core/event_engine/test_init.cc',
                       'test/core/event_engine/test_init.h',
                       'test/core/util/build.cc',
                       'test/core/util/build.h',
                       'test/core/util/cmdline.cc',
                       'test/core/util/cmdline.h',
                       'test/core/util/evaluate_args_test_util.h',
                       'test/core/util/fuzzer_util.cc',
                       'test/core/util/fuzzer_util.h',
                       'test/core/util/grpc_profiler.cc',
                       'test/core/util/grpc_profiler.h',
                       'test/core/util/histogram.cc',
                       'test/core/util/histogram.h',
                       'test/core/util/mock_authorization_endpoint.h',
                       'test/core/util/mock_endpoint.cc',
                       'test/core/util/mock_endpoint.h',
                       'test/core/util/parse_hexstring.cc',
                       'test/core/util/parse_hexstring.h',
                       'test/core/util/passthru_endpoint.cc',
                       'test/core/util/passthru_endpoint.h',
                       'test/core/util/port.cc',
                       'test/core/util/port.h',
                       'test/core/util/port_isolated_runtime_environment.cc',
                       'test/core/util/port_server_client.cc',
                       'test/core/util/port_server_client.h',
                       'test/core/util/reconnect_server.cc',
                       'test/core/util/reconnect_server.h',
                       'test/core/util/resolve_localhost_ip46.cc',
                       'test/core/util/resolve_localhost_ip46.h',
                       'test/core/util/slice_splitter.cc',
                       'test/core/util/slice_splitter.h',
                       'test/core/util/stack_tracer.cc',
                       'test/core/util/stack_tracer.h',
                       'test/core/util/subprocess.h',
                       'test/core/util/subprocess_windows.cc',
                       'test/core/util/test_config.cc',
                       'test/core/util/test_config.h',
                       'test/core/util/test_lb_policies.cc',
                       'test/core/util/test_lb_policies.h',
                       'test/core/util/test_tcp_server.cc',
                       'test/core/util/test_tcp_server.h',
                       'test/core/util/tls_utils.cc',
                       'test/core/util/tls_utils.h',
                       'test/core/util/tracer_util.cc',
                       'test/core/util/tracer_util.h'
   end
 
   # patch include of openssl to openssl_grpc
   s.prepare_command = <<-END_OF_COMMAND
     set -e
     find src/core -type f \\( -path '*.h' -or -path '*.cc' \\) -print0 | xargs -0 -L1 sed -E -i'.grpc_back' 's;#include <openssl/(.*)>;#if COCOAPODS==1\\\n  #include <openssl_grpc/\\1>\\\n#else\\\n  #include <openssl/\\1>\\\n#endif;g'
     find src/core/ -type f -name '*.grpc_back' -print0 | xargs -0 rm
   END_OF_COMMAND
diff --git a/grpc.gemspec b/grpc.gemspec
index fda6eff330..5ab7231aed 100644
--- a/grpc.gemspec
+++ b/grpc.gemspec
@@ -6,2496 +6,2498 @@ require 'grpc/version'
 Gem::Specification.new do |s|
   s.name          = 'grpc'
   s.version       = GRPC::VERSION
   s.authors       = ['gRPC Authors']
   s.email         = 'grpc-io@googlegroups.com'
   s.homepage      = 'https://github.com/google/grpc/tree/master/src/ruby'
   s.summary       = 'GRPC system in Ruby'
   s.description   = 'Send RPCs from Ruby using GRPC'
   s.license       = 'Apache-2.0'
 
   s.required_ruby_version = '>= 2.5.0'
 
   s.files = %w( Makefile .yardopts )
   s.files += %w( etc/roots.pem )
   s.files += Dir.glob('src/ruby/bin/**/*')
   s.files += Dir.glob('src/ruby/ext/**/*')
   s.files += Dir.glob('src/ruby/lib/**/*')
   s.files += Dir.glob('src/ruby/pb/**/*').reject do |f|
     f.match(%r{^src/ruby/pb/test})
   end
   s.files += Dir.glob('include/grpc/**/*')
   s.test_files = Dir.glob('src/ruby/spec/**/*')
   s.test_files += Dir.glob('src/ruby/pb/test/**/*')
   s.bindir = 'src/ruby/bin'
   s.require_paths = %w( src/ruby/lib src/ruby/bin src/ruby/pb )
   s.platform      = Gem::Platform::RUBY
 
   s.add_dependency 'google-protobuf', '~> 3.19'
   s.add_dependency 'googleapis-common-protos-types', '~> 1.0'
 
   s.add_development_dependency 'bundler',            '>= 1.9'
   s.add_development_dependency 'facter',             '~> 2.4'
   s.add_development_dependency 'logging',            '~> 2.0'
   s.add_development_dependency 'simplecov',          '~> 0.14.1'
   s.add_development_dependency 'rake',               '~> 13.0'
   s.add_development_dependency 'rake-compiler',      '<= 1.1.1'
   s.add_development_dependency 'rake-compiler-dock', '~> 1.2'
   s.add_development_dependency 'rspec',              '~> 3.6'
   s.add_development_dependency 'rubocop',            '~> 0.49.1'
   s.add_development_dependency 'signet',             '~> 0.7'
   s.add_development_dependency 'googleauth',         '>= 0.5.1', '< 0.10'
 
   s.extensions = %w(src/ruby/ext/grpc/extconf.rb)
 
   s.files += %w( include/grpc/byte_buffer.h )
   s.files += %w( include/grpc/byte_buffer_reader.h )
   s.files += %w( include/grpc/census.h )
   s.files += %w( include/grpc/compression.h )
   s.files += %w( include/grpc/event_engine/endpoint_config.h )
   s.files += %w( include/grpc/event_engine/event_engine.h )
   s.files += %w( include/grpc/event_engine/internal/memory_allocator_impl.h )
   s.files += %w( include/grpc/event_engine/memory_allocator.h )
   s.files += %w( include/grpc/event_engine/memory_request.h )
   s.files += %w( include/grpc/event_engine/port.h )
   s.files += %w( include/grpc/event_engine/slice.h )
   s.files += %w( include/grpc/event_engine/slice_buffer.h )
   s.files += %w( include/grpc/fork.h )
   s.files += %w( include/grpc/grpc.h )
   s.files += %w( include/grpc/grpc_posix.h )
   s.files += %w( include/grpc/grpc_security.h )
   s.files += %w( include/grpc/grpc_security_constants.h )
   s.files += %w( include/grpc/impl/codegen/atm.h )
   s.files += %w( include/grpc/impl/codegen/atm_gcc_atomic.h )
   s.files += %w( include/grpc/impl/codegen/atm_gcc_sync.h )
   s.files += %w( include/grpc/impl/codegen/atm_windows.h )
   s.files += %w( include/grpc/impl/codegen/byte_buffer.h )
   s.files += %w( include/grpc/impl/codegen/byte_buffer_reader.h )
   s.files += %w( include/grpc/impl/codegen/compression_types.h )
   s.files += %w( include/grpc/impl/codegen/connectivity_state.h )
   s.files += %w( include/grpc/impl/codegen/fork.h )
   s.files += %w( include/grpc/impl/codegen/gpr_slice.h )
   s.files += %w( include/grpc/impl/codegen/gpr_types.h )
   s.files += %w( include/grpc/impl/codegen/grpc_types.h )
   s.files += %w( include/grpc/impl/codegen/log.h )
   s.files += %w( include/grpc/impl/codegen/port_platform.h )
   s.files += %w( include/grpc/impl/codegen/propagation_bits.h )
   s.files += %w( include/grpc/impl/codegen/slice.h )
   s.files += %w( include/grpc/impl/codegen/status.h )
   s.files += %w( include/grpc/impl/codegen/sync.h )
   s.files += %w( include/grpc/impl/codegen/sync_abseil.h )
   s.files += %w( include/grpc/impl/codegen/sync_custom.h )
   s.files += %w( include/grpc/impl/codegen/sync_generic.h )
   s.files += %w( include/grpc/impl/codegen/sync_posix.h )
   s.files += %w( include/grpc/impl/codegen/sync_windows.h )
   s.files += %w( include/grpc/load_reporting.h )
   s.files += %w( include/grpc/slice.h )
   s.files += %w( include/grpc/slice_buffer.h )
   s.files += %w( include/grpc/status.h )
   s.files += %w( include/grpc/support/alloc.h )
   s.files += %w( include/grpc/support/atm.h )
   s.files += %w( include/grpc/support/atm_gcc_atomic.h )
   s.files += %w( include/grpc/support/atm_gcc_sync.h )
   s.files += %w( include/grpc/support/atm_windows.h )
   s.files += %w( include/grpc/support/cpu.h )
   s.files += %w( include/grpc/support/log.h )
   s.files += %w( include/grpc/support/log_windows.h )
   s.files += %w( include/grpc/support/port_platform.h )
   s.files += %w( include/grpc/support/string_util.h )
   s.files += %w( include/grpc/support/sync.h )
   s.files += %w( include/grpc/support/sync_abseil.h )
   s.files += %w( include/grpc/support/sync_custom.h )
   s.files += %w( include/grpc/support/sync_generic.h )
   s.files += %w( include/grpc/support/sync_posix.h )
   s.files += %w( include/grpc/support/sync_windows.h )
   s.files += %w( include/grpc/support/thd_id.h )
   s.files += %w( include/grpc/support/time.h )
   s.files += %w( include/grpc/support/workaround_list.h )
   s.files += %w( src/core/ext/filters/census/grpc_context.cc )
   s.files += %w( src/core/ext/filters/channel_idle/channel_idle_filter.cc )
   s.files += %w( src/core/ext/filters/channel_idle/channel_idle_filter.h )
   s.files += %w( src/core/ext/filters/channel_idle/idle_filter_state.cc )
   s.files += %w( src/core/ext/filters/channel_idle/idle_filter_state.h )
   s.files += %w( src/core/ext/filters/client_channel/backend_metric.cc )
   s.files += %w( src/core/ext/filters/client_channel/backend_metric.h )
   s.files += %w( src/core/ext/filters/client_channel/backup_poller.cc )
   s.files += %w( src/core/ext/filters/client_channel/backup_poller.h )
   s.files += %w( src/core/ext/filters/client_channel/channel_connectivity.cc )
   s.files += %w( src/core/ext/filters/client_channel/client_channel.cc )
   s.files += %w( src/core/ext/filters/client_channel/client_channel.h )
   s.files += %w( src/core/ext/filters/client_channel/client_channel_channelz.cc )
   s.files += %w( src/core/ext/filters/client_channel/client_channel_channelz.h )
   s.files += %w( src/core/ext/filters/client_channel/client_channel_factory.cc )
   s.files += %w( src/core/ext/filters/client_channel/client_channel_factory.h )
   s.files += %w( src/core/ext/filters/client_channel/client_channel_plugin.cc )
   s.files += %w( src/core/ext/filters/client_channel/config_selector.cc )
   s.files += %w( src/core/ext/filters/client_channel/config_selector.h )
   s.files += %w( src/core/ext/filters/client_channel/connector.h )
   s.files += %w( src/core/ext/filters/client_channel/dynamic_filters.cc )
   s.files += %w( src/core/ext/filters/client_channel/dynamic_filters.h )
   s.files += %w( src/core/ext/filters/client_channel/global_subchannel_pool.cc )
   s.files += %w( src/core/ext/filters/client_channel/global_subchannel_pool.h )
   s.files += %w( src/core/ext/filters/client_channel/health/health_check_client.cc )
   s.files += %w( src/core/ext/filters/client_channel/health/health_check_client.h )
   s.files += %w( src/core/ext/filters/client_channel/http_proxy.cc )
   s.files += %w( src/core/ext/filters/client_channel/http_proxy.h )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy.cc )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy.h )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/address_filtering.cc )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/address_filtering.h )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/backend_metric_data.h )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/child_policy_handler.cc )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/child_policy_handler.h )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/grpclb/client_load_reporting_filter.cc )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/grpclb/client_load_reporting_filter.h )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.h )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_balancer_addresses.cc )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_balancer_addresses.h )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_client_stats.cc )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_client_stats.h )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/grpclb/load_balancer_api.cc )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/grpclb/load_balancer_api.h )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/oob_backend_metric.cc )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/oob_backend_metric.h )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/outlier_detection/outlier_detection.cc )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/outlier_detection/outlier_detection.h )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/priority/priority.cc )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/ring_hash/ring_hash.cc )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/ring_hash/ring_hash.h )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/rls/rls.cc )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/subchannel_list.h )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/weighted_target/weighted_target.cc )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/xds/cds.cc )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/xds/xds.h )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/xds/xds_channel_args.h )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_impl.cc )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_manager.cc )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_resolver.cc )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy_factory.h )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy_registry.cc )
   s.files += %w( src/core/ext/filters/client_channel/lb_policy_registry.h )
   s.files += %w( src/core/ext/filters/client_channel/local_subchannel_pool.cc )
   s.files += %w( src/core/ext/filters/client_channel/local_subchannel_pool.h )
   s.files += %w( src/core/ext/filters/client_channel/proxy_mapper.h )
   s.files += %w( src/core/ext/filters/client_channel/proxy_mapper_registry.cc )
   s.files += %w( src/core/ext/filters/client_channel/proxy_mapper_registry.h )
   s.files += %w( src/core/ext/filters/client_channel/resolver/binder/binder_resolver.cc )
   s.files += %w( src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc )
   s.files += %w( src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver.h )
   s.files += %w( src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_posix.cc )
   s.files += %w( src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_windows.cc )
   s.files += %w( src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.cc )
   s.files += %w( src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.h )
   s.files += %w( src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_posix.cc )
   s.files += %w( src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_windows.cc )
   s.files += %w( src/core/ext/filters/client_channel/resolver/dns/dns_resolver_selection.cc )
   s.files += %w( src/core/ext/filters/client_channel/resolver/dns/dns_resolver_selection.h )
   s.files += %w( src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc )
   s.files += %w( src/core/ext/filters/client_channel/resolver/fake/fake_resolver.cc )
   s.files += %w( src/core/ext/filters/client_channel/resolver/fake/fake_resolver.h )
   s.files += %w( src/core/ext/filters/client_channel/resolver/google_c2p/google_c2p_resolver.cc )
   s.files += %w( src/core/ext/filters/client_channel/resolver/polling_resolver.cc )
   s.files += %w( src/core/ext/filters/client_channel/resolver/polling_resolver.h )
   s.files += %w( src/core/ext/filters/client_channel/resolver/sockaddr/sockaddr_resolver.cc )
   s.files += %w( src/core/ext/filters/client_channel/resolver/xds/xds_resolver.cc )
   s.files += %w( src/core/ext/filters/client_channel/resolver/xds/xds_resolver.h )
   s.files += %w( src/core/ext/filters/client_channel/resolver_result_parsing.cc )
   s.files += %w( src/core/ext/filters/client_channel/resolver_result_parsing.h )
   s.files += %w( src/core/ext/filters/client_channel/retry_filter.cc )
   s.files += %w( src/core/ext/filters/client_channel/retry_filter.h )
   s.files += %w( src/core/ext/filters/client_channel/retry_service_config.cc )
   s.files += %w( src/core/ext/filters/client_channel/retry_service_config.h )
   s.files += %w( src/core/ext/filters/client_channel/retry_throttle.cc )
   s.files += %w( src/core/ext/filters/client_channel/retry_throttle.h )
   s.files += %w( src/core/ext/filters/client_channel/service_config_channel_arg_filter.cc )
   s.files += %w( src/core/ext/filters/client_channel/subchannel.cc )
   s.files += %w( src/core/ext/filters/client_channel/subchannel.h )
   s.files += %w( src/core/ext/filters/client_channel/subchannel_interface.h )
   s.files += %w( src/core/ext/filters/client_channel/subchannel_interface_internal.h )
   s.files += %w( src/core/ext/filters/client_channel/subchannel_pool_interface.cc )
   s.files += %w( src/core/ext/filters/client_channel/subchannel_pool_interface.h )
   s.files += %w( src/core/ext/filters/client_channel/subchannel_stream_client.cc )
   s.files += %w( src/core/ext/filters/client_channel/subchannel_stream_client.h )
   s.files += %w( src/core/ext/filters/deadline/deadline_filter.cc )
   s.files += %w( src/core/ext/filters/deadline/deadline_filter.h )
   s.files += %w( src/core/ext/filters/fault_injection/fault_injection_filter.cc )
   s.files += %w( src/core/ext/filters/fault_injection/fault_injection_filter.h )
   s.files += %w( src/core/ext/filters/fault_injection/service_config_parser.cc )
   s.files += %w( src/core/ext/filters/fault_injection/service_config_parser.h )
   s.files += %w( src/core/ext/filters/http/client/http_client_filter.cc )
   s.files += %w( src/core/ext/filters/http/client/http_client_filter.h )
   s.files += %w( src/core/ext/filters/http/client_authority_filter.cc )
   s.files += %w( src/core/ext/filters/http/client_authority_filter.h )
   s.files += %w( src/core/ext/filters/http/http_filters_plugin.cc )
   s.files += %w( src/core/ext/filters/http/message_compress/message_compress_filter.cc )
   s.files += %w( src/core/ext/filters/http/message_compress/message_compress_filter.h )
   s.files += %w( src/core/ext/filters/http/message_compress/message_decompress_filter.cc )
   s.files += %w( src/core/ext/filters/http/message_compress/message_decompress_filter.h )
   s.files += %w( src/core/ext/filters/http/server/http_server_filter.cc )
   s.files += %w( src/core/ext/filters/http/server/http_server_filter.h )
   s.files += %w( src/core/ext/filters/message_size/message_size_filter.cc )
   s.files += %w( src/core/ext/filters/message_size/message_size_filter.h )
   s.files += %w( src/core/ext/filters/rbac/rbac_filter.cc )
   s.files += %w( src/core/ext/filters/rbac/rbac_filter.h )
   s.files += %w( src/core/ext/filters/rbac/rbac_service_config_parser.cc )
   s.files += %w( src/core/ext/filters/rbac/rbac_service_config_parser.h )
   s.files += %w( src/core/ext/filters/server_config_selector/server_config_selector.cc )
   s.files += %w( src/core/ext/filters/server_config_selector/server_config_selector.h )
   s.files += %w( src/core/ext/filters/server_config_selector/server_config_selector_filter.cc )
   s.files += %w( src/core/ext/filters/server_config_selector/server_config_selector_filter.h )
   s.files += %w( src/core/ext/transport/chttp2/alpn/alpn.cc )
   s.files += %w( src/core/ext/transport/chttp2/alpn/alpn.h )
   s.files += %w( src/core/ext/transport/chttp2/client/chttp2_connector.cc )
   s.files += %w( src/core/ext/transport/chttp2/client/chttp2_connector.h )
   s.files += %w( src/core/ext/transport/chttp2/server/chttp2_server.cc )
   s.files += %w( src/core/ext/transport/chttp2/server/chttp2_server.h )
   s.files += %w( src/core/ext/transport/chttp2/transport/bin_decoder.cc )
   s.files += %w( src/core/ext/transport/chttp2/transport/bin_decoder.h )
   s.files += %w( src/core/ext/transport/chttp2/transport/bin_encoder.cc )
   s.files += %w( src/core/ext/transport/chttp2/transport/bin_encoder.h )
   s.files += %w( src/core/ext/transport/chttp2/transport/chttp2_transport.cc )
   s.files += %w( src/core/ext/transport/chttp2/transport/chttp2_transport.h )
   s.files += %w( src/core/ext/transport/chttp2/transport/context_list.cc )
   s.files += %w( src/core/ext/transport/chttp2/transport/context_list.h )
   s.files += %w( src/core/ext/transport/chttp2/transport/flow_control.cc )
   s.files += %w( src/core/ext/transport/chttp2/transport/flow_control.h )
   s.files += %w( src/core/ext/transport/chttp2/transport/frame.h )
   s.files += %w( src/core/ext/transport/chttp2/transport/frame_data.cc )
   s.files += %w( src/core/ext/transport/chttp2/transport/frame_data.h )
   s.files += %w( src/core/ext/transport/chttp2/transport/frame_goaway.cc )
   s.files += %w( src/core/ext/transport/chttp2/transport/frame_goaway.h )
   s.files += %w( src/core/ext/transport/chttp2/transport/frame_ping.cc )
   s.files += %w( src/core/ext/transport/chttp2/transport/frame_ping.h )
   s.files += %w( src/core/ext/transport/chttp2/transport/frame_rst_stream.cc )
   s.files += %w( src/core/ext/transport/chttp2/transport/frame_rst_stream.h )
   s.files += %w( src/core/ext/transport/chttp2/transport/frame_settings.cc )
   s.files += %w( src/core/ext/transport/chttp2/transport/frame_settings.h )
   s.files += %w( src/core/ext/transport/chttp2/transport/frame_window_update.cc )
   s.files += %w( src/core/ext/transport/chttp2/transport/frame_window_update.h )
   s.files += %w( src/core/ext/transport/chttp2/transport/hpack_constants.h )
   s.files += %w( src/core/ext/transport/chttp2/transport/hpack_encoder.cc )
   s.files += %w( src/core/ext/transport/chttp2/transport/hpack_encoder.h )
   s.files += %w( src/core/ext/transport/chttp2/transport/hpack_encoder_table.cc )
   s.files += %w( src/core/ext/transport/chttp2/transport/hpack_encoder_table.h )
   s.files += %w( src/core/ext/transport/chttp2/transport/hpack_parser.cc )
   s.files += %w( src/core/ext/transport/chttp2/transport/hpack_parser.h )
   s.files += %w( src/core/ext/transport/chttp2/transport/hpack_parser_table.cc )
   s.files += %w( src/core/ext/transport/chttp2/transport/hpack_parser_table.h )
   s.files += %w( src/core/ext/transport/chttp2/transport/http2_settings.cc )
   s.files += %w( src/core/ext/transport/chttp2/transport/http2_settings.h )
   s.files += %w( src/core/ext/transport/chttp2/transport/huffsyms.cc )
   s.files += %w( src/core/ext/transport/chttp2/transport/huffsyms.h )
   s.files += %w( src/core/ext/transport/chttp2/transport/internal.h )
   s.files += %w( src/core/ext/transport/chttp2/transport/parsing.cc )
   s.files += %w( src/core/ext/transport/chttp2/transport/stream_lists.cc )
   s.files += %w( src/core/ext/transport/chttp2/transport/stream_map.cc )
   s.files += %w( src/core/ext/transport/chttp2/transport/stream_map.h )
   s.files += %w( src/core/ext/transport/chttp2/transport/varint.cc )
   s.files += %w( src/core/ext/transport/chttp2/transport/varint.h )
   s.files += %w( src/core/ext/transport/chttp2/transport/writing.cc )
   s.files += %w( src/core/ext/transport/inproc/inproc_plugin.cc )
   s.files += %w( src/core/ext/transport/inproc/inproc_transport.cc )
   s.files += %w( src/core/ext/transport/inproc/inproc_transport.h )
   s.files += %w( src/core/ext/upb-generated/envoy/admin/v3/certs.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/admin/v3/certs.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/admin/v3/clusters.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/admin/v3/clusters.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/admin/v3/config_dump.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/admin/v3/config_dump.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/admin/v3/init_dump.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/admin/v3/init_dump.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/admin/v3/listeners.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/admin/v3/listeners.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/admin/v3/memory.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/admin/v3/memory.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/admin/v3/metrics.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/admin/v3/metrics.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/admin/v3/mutex_stats.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/admin/v3/mutex_stats.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/admin/v3/server_info.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/admin/v3/server_info.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/admin/v3/tap.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/admin/v3/tap.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/annotations/deprecation.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/annotations/deprecation.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/annotations/resource.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/annotations/resource.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/accesslog/v3/accesslog.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/accesslog/v3/accesslog.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/bootstrap/v3/bootstrap.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/bootstrap/v3/bootstrap.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/cluster/v3/circuit_breaker.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/cluster/v3/circuit_breaker.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/cluster/v3/cluster.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/cluster/v3/cluster.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/cluster/v3/filter.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/cluster/v3/filter.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/cluster/v3/outlier_detection.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/cluster/v3/outlier_detection.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/common/matcher/v3/matcher.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/common/matcher/v3/matcher.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/address.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/address.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/backoff.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/backoff.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/base.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/base.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/config_source.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/config_source.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/event_service_config.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/event_service_config.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/extension.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/extension.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/grpc_method_list.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/grpc_method_list.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/grpc_service.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/grpc_service.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/health_check.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/health_check.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/http_uri.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/http_uri.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/protocol.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/protocol.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/proxy_protocol.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/proxy_protocol.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/resolver.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/resolver.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/socket_option.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/socket_option.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/substitution_format_string.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/substitution_format_string.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/udp_socket_config.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/core/v3/udp_socket_config.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint_components.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint_components.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/endpoint/v3/load_report.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/endpoint/v3/load_report.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/listener/v3/api_listener.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/listener/v3/api_listener.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/listener/v3/listener.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/listener/v3/listener.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/listener/v3/listener_components.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/listener/v3/listener_components.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/listener/v3/quic_config.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/listener/v3/quic_config.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/listener/v3/udp_listener_config.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/listener/v3/udp_listener_config.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/metrics/v3/metrics_service.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/metrics/v3/metrics_service.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/metrics/v3/stats.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/metrics/v3/stats.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/overload/v3/overload.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/overload/v3/overload.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/rbac/v3/rbac.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/rbac/v3/rbac.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/route/v3/route.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/route/v3/route.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/route/v3/route_components.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/route/v3/route_components.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/route/v3/scoped_route.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/route/v3/scoped_route.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/tap/v3/common.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/tap/v3/common.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/trace/v3/datadog.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/trace/v3/datadog.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/trace/v3/dynamic_ot.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/trace/v3/dynamic_ot.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/trace/v3/http_tracer.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/trace/v3/http_tracer.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/trace/v3/lightstep.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/trace/v3/lightstep.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/trace/v3/opencensus.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/trace/v3/opencensus.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/trace/v3/service.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/trace/v3/service.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/trace/v3/skywalking.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/trace/v3/skywalking.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/trace/v3/trace.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/trace/v3/trace.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/trace/v3/xray.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/trace/v3/xray.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/config/trace/v3/zipkin.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/config/trace/v3/zipkin.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/clusters/aggregate/v3/cluster.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/clusters/aggregate/v3/cluster.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/filters/common/fault/v3/fault.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/filters/common/fault/v3/fault.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/filters/http/fault/v3/fault.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/filters/http/fault/v3/fault.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/filters/http/rbac/v3/rbac.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/filters/http/rbac/v3/rbac.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/filters/http/router/v3/router.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/filters/http/router/v3/router.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/ring_hash/v3/ring_hash.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/ring_hash/v3/ring_hash.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/wrr_locality/v3/wrr_locality.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/wrr_locality/v3/wrr_locality.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/cert.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/cert.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/common.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/common.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/secret.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/secret.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/service/discovery/v3/ads.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/service/discovery/v3/ads.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/service/discovery/v3/discovery.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/service/discovery/v3/discovery.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/service/load_stats/v3/lrs.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/service/load_stats/v3/lrs.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/service/status/v3/csds.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/service/status/v3/csds.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/type/http/v3/cookie.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/type/http/v3/cookie.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/type/http/v3/path_transformation.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/type/http/v3/path_transformation.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/type/matcher/v3/http_inputs.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/type/matcher/v3/http_inputs.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/type/matcher/v3/metadata.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/type/matcher/v3/metadata.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/type/matcher/v3/node.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/type/matcher/v3/node.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/type/matcher/v3/number.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/type/matcher/v3/number.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/type/matcher/v3/path.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/type/matcher/v3/path.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/type/matcher/v3/regex.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/type/matcher/v3/regex.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/type/matcher/v3/string.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/type/matcher/v3/string.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/type/matcher/v3/struct.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/type/matcher/v3/struct.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/type/matcher/v3/value.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/type/matcher/v3/value.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/type/metadata/v3/metadata.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/type/metadata/v3/metadata.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/type/tracing/v3/custom_tag.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/type/tracing/v3/custom_tag.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/type/v3/hash_policy.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/type/v3/hash_policy.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/type/v3/http.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/type/v3/http.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/type/v3/http_status.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/type/v3/http_status.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/type/v3/percent.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/type/v3/percent.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/type/v3/range.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/type/v3/range.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/type/v3/ratelimit_unit.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/type/v3/ratelimit_unit.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/type/v3/semantic_version.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/type/v3/semantic_version.upb.h )
   s.files += %w( src/core/ext/upb-generated/envoy/type/v3/token_bucket.upb.c )
   s.files += %w( src/core/ext/upb-generated/envoy/type/v3/token_bucket.upb.h )
   s.files += %w( src/core/ext/upb-generated/google/api/annotations.upb.c )
   s.files += %w( src/core/ext/upb-generated/google/api/annotations.upb.h )
   s.files += %w( src/core/ext/upb-generated/google/api/expr/v1alpha1/checked.upb.c )
   s.files += %w( src/core/ext/upb-generated/google/api/expr/v1alpha1/checked.upb.h )
   s.files += %w( src/core/ext/upb-generated/google/api/expr/v1alpha1/syntax.upb.c )
   s.files += %w( src/core/ext/upb-generated/google/api/expr/v1alpha1/syntax.upb.h )
   s.files += %w( src/core/ext/upb-generated/google/api/http.upb.c )
   s.files += %w( src/core/ext/upb-generated/google/api/http.upb.h )
   s.files += %w( src/core/ext/upb-generated/google/api/httpbody.upb.c )
   s.files += %w( src/core/ext/upb-generated/google/api/httpbody.upb.h )
   s.files += %w( src/core/ext/upb-generated/google/protobuf/any.upb.c )
   s.files += %w( src/core/ext/upb-generated/google/protobuf/any.upb.h )
   s.files += %w( src/core/ext/upb-generated/google/protobuf/descriptor.upb.c )
   s.files += %w( src/core/ext/upb-generated/google/protobuf/descriptor.upb.h )
   s.files += %w( src/core/ext/upb-generated/google/protobuf/duration.upb.c )
   s.files += %w( src/core/ext/upb-generated/google/protobuf/duration.upb.h )
   s.files += %w( src/core/ext/upb-generated/google/protobuf/empty.upb.c )
   s.files += %w( src/core/ext/upb-generated/google/protobuf/empty.upb.h )
   s.files += %w( src/core/ext/upb-generated/google/protobuf/struct.upb.c )
   s.files += %w( src/core/ext/upb-generated/google/protobuf/struct.upb.h )
   s.files += %w( src/core/ext/upb-generated/google/protobuf/timestamp.upb.c )
   s.files += %w( src/core/ext/upb-generated/google/protobuf/timestamp.upb.h )
   s.files += %w( src/core/ext/upb-generated/google/protobuf/wrappers.upb.c )
   s.files += %w( src/core/ext/upb-generated/google/protobuf/wrappers.upb.h )
   s.files += %w( src/core/ext/upb-generated/google/rpc/status.upb.c )
   s.files += %w( src/core/ext/upb-generated/google/rpc/status.upb.h )
   s.files += %w( src/core/ext/upb-generated/opencensus/proto/trace/v1/trace_config.upb.c )
   s.files += %w( src/core/ext/upb-generated/opencensus/proto/trace/v1/trace_config.upb.h )
   s.files += %w( src/core/ext/upb-generated/src/proto/grpc/gcp/altscontext.upb.c )
   s.files += %w( src/core/ext/upb-generated/src/proto/grpc/gcp/altscontext.upb.h )
   s.files += %w( src/core/ext/upb-generated/src/proto/grpc/gcp/handshaker.upb.c )
   s.files += %w( src/core/ext/upb-generated/src/proto/grpc/gcp/handshaker.upb.h )
   s.files += %w( src/core/ext/upb-generated/src/proto/grpc/gcp/transport_security_common.upb.c )
   s.files += %w( src/core/ext/upb-generated/src/proto/grpc/gcp/transport_security_common.upb.h )
   s.files += %w( src/core/ext/upb-generated/src/proto/grpc/health/v1/health.upb.c )
   s.files += %w( src/core/ext/upb-generated/src/proto/grpc/health/v1/health.upb.h )
   s.files += %w( src/core/ext/upb-generated/src/proto/grpc/lb/v1/load_balancer.upb.c )
   s.files += %w( src/core/ext/upb-generated/src/proto/grpc/lb/v1/load_balancer.upb.h )
   s.files += %w( src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls.upb.c )
   s.files += %w( src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls.upb.h )
   s.files += %w( src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls_config.upb.c )
   s.files += %w( src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls_config.upb.h )
   s.files += %w( src/core/ext/upb-generated/udpa/annotations/migrate.upb.c )
   s.files += %w( src/core/ext/upb-generated/udpa/annotations/migrate.upb.h )
   s.files += %w( src/core/ext/upb-generated/udpa/annotations/security.upb.c )
   s.files += %w( src/core/ext/upb-generated/udpa/annotations/security.upb.h )
   s.files += %w( src/core/ext/upb-generated/udpa/annotations/sensitive.upb.c )
   s.files += %w( src/core/ext/upb-generated/udpa/annotations/sensitive.upb.h )
   s.files += %w( src/core/ext/upb-generated/udpa/annotations/status.upb.c )
   s.files += %w( src/core/ext/upb-generated/udpa/annotations/status.upb.h )
   s.files += %w( src/core/ext/upb-generated/udpa/annotations/versioning.upb.c )
   s.files += %w( src/core/ext/upb-generated/udpa/annotations/versioning.upb.h )
   s.files += %w( src/core/ext/upb-generated/validate/validate.upb.c )
   s.files += %w( src/core/ext/upb-generated/validate/validate.upb.h )
   s.files += %w( src/core/ext/upb-generated/xds/annotations/v3/migrate.upb.c )
   s.files += %w( src/core/ext/upb-generated/xds/annotations/v3/migrate.upb.h )
   s.files += %w( src/core/ext/upb-generated/xds/annotations/v3/security.upb.c )
   s.files += %w( src/core/ext/upb-generated/xds/annotations/v3/security.upb.h )
   s.files += %w( src/core/ext/upb-generated/xds/annotations/v3/sensitive.upb.c )
   s.files += %w( src/core/ext/upb-generated/xds/annotations/v3/sensitive.upb.h )
   s.files += %w( src/core/ext/upb-generated/xds/annotations/v3/status.upb.c )
   s.files += %w( src/core/ext/upb-generated/xds/annotations/v3/status.upb.h )
   s.files += %w( src/core/ext/upb-generated/xds/annotations/v3/versioning.upb.c )
   s.files += %w( src/core/ext/upb-generated/xds/annotations/v3/versioning.upb.h )
   s.files += %w( src/core/ext/upb-generated/xds/core/v3/authority.upb.c )
   s.files += %w( src/core/ext/upb-generated/xds/core/v3/authority.upb.h )
   s.files += %w( src/core/ext/upb-generated/xds/core/v3/collection_entry.upb.c )
   s.files += %w( src/core/ext/upb-generated/xds/core/v3/collection_entry.upb.h )
   s.files += %w( src/core/ext/upb-generated/xds/core/v3/context_params.upb.c )
   s.files += %w( src/core/ext/upb-generated/xds/core/v3/context_params.upb.h )
   s.files += %w( src/core/ext/upb-generated/xds/core/v3/extension.upb.c )
   s.files += %w( src/core/ext/upb-generated/xds/core/v3/extension.upb.h )
   s.files += %w( src/core/ext/upb-generated/xds/core/v3/resource.upb.c )
   s.files += %w( src/core/ext/upb-generated/xds/core/v3/resource.upb.h )
   s.files += %w( src/core/ext/upb-generated/xds/core/v3/resource_locator.upb.c )
   s.files += %w( src/core/ext/upb-generated/xds/core/v3/resource_locator.upb.h )
   s.files += %w( src/core/ext/upb-generated/xds/core/v3/resource_name.upb.c )
   s.files += %w( src/core/ext/upb-generated/xds/core/v3/resource_name.upb.h )
   s.files += %w( src/core/ext/upb-generated/xds/data/orca/v3/orca_load_report.upb.c )
   s.files += %w( src/core/ext/upb-generated/xds/data/orca/v3/orca_load_report.upb.h )
   s.files += %w( src/core/ext/upb-generated/xds/service/orca/v3/orca.upb.c )
   s.files += %w( src/core/ext/upb-generated/xds/service/orca/v3/orca.upb.h )
   s.files += %w( src/core/ext/upb-generated/xds/type/matcher/v3/matcher.upb.c )
   s.files += %w( src/core/ext/upb-generated/xds/type/matcher/v3/matcher.upb.h )
   s.files += %w( src/core/ext/upb-generated/xds/type/matcher/v3/regex.upb.c )
   s.files += %w( src/core/ext/upb-generated/xds/type/matcher/v3/regex.upb.h )
   s.files += %w( src/core/ext/upb-generated/xds/type/matcher/v3/string.upb.c )
   s.files += %w( src/core/ext/upb-generated/xds/type/matcher/v3/string.upb.h )
   s.files += %w( src/core/ext/upb-generated/xds/type/v3/typed_struct.upb.c )
   s.files += %w( src/core/ext/upb-generated/xds/type/v3/typed_struct.upb.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/admin/v3/certs.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/admin/v3/certs.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/admin/v3/clusters.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/admin/v3/clusters.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/admin/v3/config_dump.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/admin/v3/config_dump.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/admin/v3/init_dump.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/admin/v3/init_dump.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/admin/v3/listeners.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/admin/v3/listeners.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/admin/v3/memory.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/admin/v3/memory.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/admin/v3/metrics.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/admin/v3/metrics.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/admin/v3/mutex_stats.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/admin/v3/mutex_stats.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/admin/v3/server_info.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/admin/v3/server_info.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/admin/v3/tap.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/admin/v3/tap.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/annotations/deprecation.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/annotations/deprecation.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/annotations/resource.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/annotations/resource.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/accesslog/v3/accesslog.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/accesslog/v3/accesslog.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/bootstrap/v3/bootstrap.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/bootstrap/v3/bootstrap.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/cluster/v3/circuit_breaker.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/cluster/v3/circuit_breaker.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/cluster/v3/cluster.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/cluster/v3/cluster.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/cluster/v3/filter.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/cluster/v3/filter.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/cluster/v3/outlier_detection.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/cluster/v3/outlier_detection.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/common/matcher/v3/matcher.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/common/matcher/v3/matcher.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/address.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/address.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/backoff.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/backoff.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/base.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/base.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/config_source.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/config_source.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/event_service_config.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/event_service_config.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/extension.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/extension.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_method_list.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_method_list.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_service.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_service.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/health_check.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/health_check.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/http_uri.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/http_uri.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/protocol.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/protocol.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/proxy_protocol.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/proxy_protocol.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/resolver.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/resolver.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/socket_option.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/socket_option.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/substitution_format_string.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/substitution_format_string.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/udp_socket_config.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/core/v3/udp_socket_config.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint_components.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint_components.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/load_report.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/load_report.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/listener/v3/api_listener.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/listener/v3/api_listener.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener_components.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener_components.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/listener/v3/quic_config.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/listener/v3/quic_config.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/listener/v3/udp_listener_config.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/listener/v3/udp_listener_config.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/metrics/v3/metrics_service.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/metrics/v3/metrics_service.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/metrics/v3/stats.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/metrics/v3/stats.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/overload/v3/overload.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/overload/v3/overload.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/rbac/v3/rbac.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/rbac/v3/rbac.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/route/v3/route.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/route/v3/route.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/route/v3/route_components.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/route/v3/route_components.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/route/v3/scoped_route.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/route/v3/scoped_route.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/tap/v3/common.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/tap/v3/common.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/trace/v3/datadog.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/trace/v3/datadog.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/trace/v3/dynamic_ot.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/trace/v3/dynamic_ot.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/trace/v3/http_tracer.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/trace/v3/http_tracer.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/trace/v3/lightstep.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/trace/v3/lightstep.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/trace/v3/opencensus.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/trace/v3/opencensus.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/trace/v3/service.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/trace/v3/service.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/trace/v3/skywalking.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/trace/v3/skywalking.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/trace/v3/trace.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/trace/v3/trace.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/trace/v3/xray.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/trace/v3/xray.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/trace/v3/zipkin.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/config/trace/v3/zipkin.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/extensions/clusters/aggregate/v3/cluster.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/extensions/clusters/aggregate/v3/cluster.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/extensions/filters/common/fault/v3/fault.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/extensions/filters/common/fault/v3/fault.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/extensions/filters/http/fault/v3/fault.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/extensions/filters/http/fault/v3/fault.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/extensions/filters/http/rbac/v3/rbac.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/extensions/filters/http/rbac/v3/rbac.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/extensions/filters/http/router/v3/router.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/extensions/filters/http/router/v3/router.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/cert.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/cert.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/common.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/common.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/secret.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/secret.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/service/discovery/v3/ads.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/service/discovery/v3/ads.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/service/discovery/v3/discovery.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/service/discovery/v3/discovery.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/service/load_stats/v3/lrs.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/service/load_stats/v3/lrs.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/service/status/v3/csds.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/service/status/v3/csds.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/http/v3/cookie.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/http/v3/cookie.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/http/v3/path_transformation.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/http/v3/path_transformation.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/matcher/v3/http_inputs.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/matcher/v3/http_inputs.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/matcher/v3/metadata.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/matcher/v3/metadata.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/matcher/v3/node.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/matcher/v3/node.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/matcher/v3/number.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/matcher/v3/number.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/matcher/v3/path.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/matcher/v3/path.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/matcher/v3/regex.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/matcher/v3/regex.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/matcher/v3/string.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/matcher/v3/string.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/matcher/v3/struct.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/matcher/v3/struct.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/matcher/v3/value.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/matcher/v3/value.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/metadata/v3/metadata.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/metadata/v3/metadata.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/tracing/v3/custom_tag.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/tracing/v3/custom_tag.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/v3/hash_policy.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/v3/hash_policy.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/v3/http.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/v3/http.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/v3/http_status.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/v3/http_status.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/v3/percent.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/v3/percent.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/v3/range.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/v3/range.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/v3/ratelimit_unit.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/v3/ratelimit_unit.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/v3/semantic_version.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/v3/semantic_version.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/v3/token_bucket.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/envoy/type/v3/token_bucket.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/google/api/annotations.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/google/api/annotations.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/checked.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/checked.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/syntax.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/syntax.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/google/api/http.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/google/api/http.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/google/api/httpbody.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/google/api/httpbody.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/google/protobuf/any.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/google/protobuf/any.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/google/protobuf/descriptor.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/google/protobuf/descriptor.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/google/protobuf/duration.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/google/protobuf/duration.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/google/protobuf/empty.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/google/protobuf/empty.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/google/protobuf/struct.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/google/protobuf/struct.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/google/protobuf/timestamp.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/google/protobuf/timestamp.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/google/protobuf/wrappers.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/google/protobuf/wrappers.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/google/rpc/status.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/google/rpc/status.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/opencensus/proto/trace/v1/trace_config.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/opencensus/proto/trace/v1/trace_config.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/src/proto/grpc/lookup/v1/rls_config.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/src/proto/grpc/lookup/v1/rls_config.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/udpa/annotations/migrate.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/udpa/annotations/migrate.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/udpa/annotations/security.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/udpa/annotations/security.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/udpa/annotations/sensitive.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/udpa/annotations/sensitive.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/udpa/annotations/status.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/udpa/annotations/status.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/udpa/annotations/versioning.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/udpa/annotations/versioning.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/validate/validate.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/validate/validate.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/xds/annotations/v3/migrate.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/xds/annotations/v3/migrate.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/xds/annotations/v3/security.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/xds/annotations/v3/security.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/xds/annotations/v3/sensitive.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/xds/annotations/v3/sensitive.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/xds/annotations/v3/status.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/xds/annotations/v3/status.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/xds/annotations/v3/versioning.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/xds/annotations/v3/versioning.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/xds/core/v3/authority.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/xds/core/v3/authority.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/xds/core/v3/collection_entry.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/xds/core/v3/collection_entry.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/xds/core/v3/context_params.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/xds/core/v3/context_params.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/xds/core/v3/extension.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/xds/core/v3/extension.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/xds/core/v3/resource.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/xds/core/v3/resource.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/xds/core/v3/resource_locator.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/xds/core/v3/resource_locator.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/xds/core/v3/resource_name.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/xds/core/v3/resource_name.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/xds/type/matcher/v3/matcher.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/xds/type/matcher/v3/matcher.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/xds/type/matcher/v3/regex.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/xds/type/matcher/v3/regex.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/xds/type/matcher/v3/string.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/xds/type/matcher/v3/string.upbdefs.h )
   s.files += %w( src/core/ext/upbdefs-generated/xds/type/v3/typed_struct.upbdefs.c )
   s.files += %w( src/core/ext/upbdefs-generated/xds/type/v3/typed_struct.upbdefs.h )
   s.files += %w( src/core/ext/xds/certificate_provider_factory.h )
   s.files += %w( src/core/ext/xds/certificate_provider_registry.cc )
   s.files += %w( src/core/ext/xds/certificate_provider_registry.h )
   s.files += %w( src/core/ext/xds/certificate_provider_store.cc )
   s.files += %w( src/core/ext/xds/certificate_provider_store.h )
   s.files += %w( src/core/ext/xds/file_watcher_certificate_provider_factory.cc )
   s.files += %w( src/core/ext/xds/file_watcher_certificate_provider_factory.h )
   s.files += %w( src/core/ext/xds/upb_utils.h )
   s.files += %w( src/core/ext/xds/xds_api.cc )
   s.files += %w( src/core/ext/xds/xds_api.h )
   s.files += %w( src/core/ext/xds/xds_bootstrap.cc )
   s.files += %w( src/core/ext/xds/xds_bootstrap.h )
   s.files += %w( src/core/ext/xds/xds_certificate_provider.cc )
   s.files += %w( src/core/ext/xds/xds_certificate_provider.h )
   s.files += %w( src/core/ext/xds/xds_channel_args.h )
   s.files += %w( src/core/ext/xds/xds_channel_stack_modifier.cc )
   s.files += %w( src/core/ext/xds/xds_channel_stack_modifier.h )
   s.files += %w( src/core/ext/xds/xds_client.cc )
   s.files += %w( src/core/ext/xds/xds_client.h )
   s.files += %w( src/core/ext/xds/xds_client_stats.cc )
   s.files += %w( src/core/ext/xds/xds_client_stats.h )
   s.files += %w( src/core/ext/xds/xds_cluster.cc )
   s.files += %w( src/core/ext/xds/xds_cluster.h )
   s.files += %w( src/core/ext/xds/xds_cluster_specifier_plugin.cc )
   s.files += %w( src/core/ext/xds/xds_cluster_specifier_plugin.h )
   s.files += %w( src/core/ext/xds/xds_common_types.cc )
   s.files += %w( src/core/ext/xds/xds_common_types.h )
   s.files += %w( src/core/ext/xds/xds_endpoint.cc )
   s.files += %w( src/core/ext/xds/xds_endpoint.h )
   s.files += %w( src/core/ext/xds/xds_http_fault_filter.cc )
   s.files += %w( src/core/ext/xds/xds_http_fault_filter.h )
   s.files += %w( src/core/ext/xds/xds_http_filters.cc )
   s.files += %w( src/core/ext/xds/xds_http_filters.h )
   s.files += %w( src/core/ext/xds/xds_http_rbac_filter.cc )
   s.files += %w( src/core/ext/xds/xds_http_rbac_filter.h )
   s.files += %w( src/core/ext/xds/xds_lb_policy_registry.cc )
   s.files += %w( src/core/ext/xds/xds_lb_policy_registry.h )
   s.files += %w( src/core/ext/xds/xds_listener.cc )
   s.files += %w( src/core/ext/xds/xds_listener.h )
   s.files += %w( src/core/ext/xds/xds_resource_type.cc )
   s.files += %w( src/core/ext/xds/xds_resource_type.h )
   s.files += %w( src/core/ext/xds/xds_resource_type_impl.h )
   s.files += %w( src/core/ext/xds/xds_route_config.cc )
   s.files += %w( src/core/ext/xds/xds_route_config.h )
   s.files += %w( src/core/ext/xds/xds_routing.cc )
   s.files += %w( src/core/ext/xds/xds_routing.h )
   s.files += %w( src/core/ext/xds/xds_server_config_fetcher.cc )
   s.files += %w( src/core/lib/address_utils/parse_address.cc )
   s.files += %w( src/core/lib/address_utils/parse_address.h )
   s.files += %w( src/core/lib/address_utils/sockaddr_utils.cc )
   s.files += %w( src/core/lib/address_utils/sockaddr_utils.h )
   s.files += %w( src/core/lib/avl/avl.h )
   s.files += %w( src/core/lib/backoff/backoff.cc )
   s.files += %w( src/core/lib/backoff/backoff.h )
   s.files += %w( src/core/lib/channel/call_finalization.h )
   s.files += %w( src/core/lib/channel/call_tracer.h )
   s.files += %w( src/core/lib/channel/channel_args.cc )
   s.files += %w( src/core/lib/channel/channel_args.h )
   s.files += %w( src/core/lib/channel/channel_args_preconditioning.cc )
   s.files += %w( src/core/lib/channel/channel_args_preconditioning.h )
   s.files += %w( src/core/lib/channel/channel_fwd.h )
   s.files += %w( src/core/lib/channel/channel_stack.cc )
   s.files += %w( src/core/lib/channel/channel_stack.h )
   s.files += %w( src/core/lib/channel/channel_stack_builder.cc )
   s.files += %w( src/core/lib/channel/channel_stack_builder.h )
   s.files += %w( src/core/lib/channel/channel_stack_builder_impl.cc )
   s.files += %w( src/core/lib/channel/channel_stack_builder_impl.h )
   s.files += %w( src/core/lib/channel/channel_trace.cc )
   s.files += %w( src/core/lib/channel/channel_trace.h )
   s.files += %w( src/core/lib/channel/channelz.cc )
   s.files += %w( src/core/lib/channel/channelz.h )
   s.files += %w( src/core/lib/channel/channelz_registry.cc )
   s.files += %w( src/core/lib/channel/channelz_registry.h )
   s.files += %w( src/core/lib/channel/connected_channel.cc )
   s.files += %w( src/core/lib/channel/connected_channel.h )
   s.files += %w( src/core/lib/channel/context.h )
   s.files += %w( src/core/lib/channel/promise_based_filter.cc )
   s.files += %w( src/core/lib/channel/promise_based_filter.h )
   s.files += %w( src/core/lib/channel/status_util.cc )
   s.files += %w( src/core/lib/channel/status_util.h )
   s.files += %w( src/core/lib/compression/compression.cc )
   s.files += %w( src/core/lib/compression/compression_internal.cc )
   s.files += %w( src/core/lib/compression/compression_internal.h )
   s.files += %w( src/core/lib/compression/message_compress.cc )
   s.files += %w( src/core/lib/compression/message_compress.h )
   s.files += %w( src/core/lib/config/core_configuration.cc )
   s.files += %w( src/core/lib/config/core_configuration.h )
   s.files += %w( src/core/lib/debug/stats.cc )
   s.files += %w( src/core/lib/debug/stats.h )
   s.files += %w( src/core/lib/debug/stats_data.cc )
   s.files += %w( src/core/lib/debug/stats_data.h )
   s.files += %w( src/core/lib/debug/trace.cc )
   s.files += %w( src/core/lib/debug/trace.h )
   s.files += %w( src/core/lib/event_engine/channel_args_endpoint_config.cc )
   s.files += %w( src/core/lib/event_engine/channel_args_endpoint_config.h )
   s.files += %w( src/core/lib/event_engine/default_event_engine_factory.cc )
   s.files += %w( src/core/lib/event_engine/event_engine.cc )
   s.files += %w( src/core/lib/event_engine/event_engine_factory.h )
   s.files += %w( src/core/lib/event_engine/handle_containers.h )
   s.files += %w( src/core/lib/event_engine/iomgr_engine.cc )
   s.files += %w( src/core/lib/event_engine/iomgr_engine.h )
   s.files += %w( src/core/lib/event_engine/memory_allocator.cc )
   s.files += %w( src/core/lib/event_engine/resolved_address.cc )
   s.files += %w( src/core/lib/event_engine/slice.cc )
   s.files += %w( src/core/lib/event_engine/slice_buffer.cc )
   s.files += %w( src/core/lib/event_engine/trace.cc )
   s.files += %w( src/core/lib/event_engine/trace.h )
   s.files += %w( src/core/lib/gpr/alloc.cc )
   s.files += %w( src/core/lib/gpr/alloc.h )
   s.files += %w( src/core/lib/gpr/atm.cc )
   s.files += %w( src/core/lib/gpr/cpu_iphone.cc )
   s.files += %w( src/core/lib/gpr/cpu_linux.cc )
   s.files += %w( src/core/lib/gpr/cpu_posix.cc )
   s.files += %w( src/core/lib/gpr/cpu_windows.cc )
   s.files += %w( src/core/lib/gpr/env.h )
   s.files += %w( src/core/lib/gpr/env_linux.cc )
   s.files += %w( src/core/lib/gpr/env_posix.cc )
   s.files += %w( src/core/lib/gpr/env_windows.cc )
   s.files += %w( src/core/lib/gpr/log.cc )
   s.files += %w( src/core/lib/gpr/log_android.cc )
   s.files += %w( src/core/lib/gpr/log_linux.cc )
   s.files += %w( src/core/lib/gpr/log_posix.cc )
   s.files += %w( src/core/lib/gpr/log_windows.cc )
   s.files += %w( src/core/lib/gpr/murmur_hash.cc )
   s.files += %w( src/core/lib/gpr/murmur_hash.h )
   s.files += %w( src/core/lib/gpr/spinlock.h )
   s.files += %w( src/core/lib/gpr/string.cc )
   s.files += %w( src/core/lib/gpr/string.h )
   s.files += %w( src/core/lib/gpr/string_posix.cc )
   s.files += %w( src/core/lib/gpr/string_util_windows.cc )
   s.files += %w( src/core/lib/gpr/string_windows.cc )
   s.files += %w( src/core/lib/gpr/string_windows.h )
   s.files += %w( src/core/lib/gpr/sync.cc )
   s.files += %w( src/core/lib/gpr/sync_abseil.cc )
   s.files += %w( src/core/lib/gpr/sync_posix.cc )
   s.files += %w( src/core/lib/gpr/sync_windows.cc )
   s.files += %w( src/core/lib/gpr/time.cc )
   s.files += %w( src/core/lib/gpr/time_posix.cc )
   s.files += %w( src/core/lib/gpr/time_precise.cc )
   s.files += %w( src/core/lib/gpr/time_precise.h )
   s.files += %w( src/core/lib/gpr/time_windows.cc )
   s.files += %w( src/core/lib/gpr/tls.h )
   s.files += %w( src/core/lib/gpr/tmpfile.h )
   s.files += %w( src/core/lib/gpr/tmpfile_msys.cc )
   s.files += %w( src/core/lib/gpr/tmpfile_posix.cc )
   s.files += %w( src/core/lib/gpr/tmpfile_windows.cc )
   s.files += %w( src/core/lib/gpr/useful.h )
   s.files += %w( src/core/lib/gpr/wrap_memcpy.cc )
   s.files += %w( src/core/lib/gprpp/atomic_utils.h )
   s.files += %w( src/core/lib/gprpp/bitset.h )
   s.files += %w( src/core/lib/gprpp/chunked_vector.h )
   s.files += %w( src/core/lib/gprpp/construct_destruct.h )
   s.files += %w( src/core/lib/gprpp/cpp_impl_of.h )
   s.files += %w( src/core/lib/gprpp/debug_location.h )
   s.files += %w( src/core/lib/gprpp/dual_ref_counted.h )
   s.files += %w( src/core/lib/gprpp/examine_stack.cc )
   s.files += %w( src/core/lib/gprpp/examine_stack.h )
   s.files += %w( src/core/lib/gprpp/fork.cc )
   s.files += %w( src/core/lib/gprpp/fork.h )
   s.files += %w( src/core/lib/gprpp/global_config.h )
   s.files += %w( src/core/lib/gprpp/global_config_custom.h )
   s.files += %w( src/core/lib/gprpp/global_config_env.cc )
   s.files += %w( src/core/lib/gprpp/global_config_env.h )
   s.files += %w( src/core/lib/gprpp/global_config_generic.h )
   s.files += %w( src/core/lib/gprpp/host_port.cc )
   s.files += %w( src/core/lib/gprpp/host_port.h )
   s.files += %w( src/core/lib/gprpp/manual_constructor.h )
   s.files += %w( src/core/lib/gprpp/match.h )
   s.files += %w( src/core/lib/gprpp/memory.h )
   s.files += %w( src/core/lib/gprpp/mpscq.cc )
   s.files += %w( src/core/lib/gprpp/mpscq.h )
   s.files += %w( src/core/lib/gprpp/orphanable.h )
   s.files += %w( src/core/lib/gprpp/overload.h )
   s.files += %w( src/core/lib/gprpp/ref_counted.h )
   s.files += %w( src/core/lib/gprpp/ref_counted_ptr.h )
   s.files += %w( src/core/lib/gprpp/single_set_ptr.h )
   s.files += %w( src/core/lib/gprpp/stat.h )
   s.files += %w( src/core/lib/gprpp/stat_posix.cc )
   s.files += %w( src/core/lib/gprpp/stat_windows.cc )
   s.files += %w( src/core/lib/gprpp/status_helper.cc )
   s.files += %w( src/core/lib/gprpp/status_helper.h )
   s.files += %w( src/core/lib/gprpp/sync.h )
   s.files += %w( src/core/lib/gprpp/table.h )
   s.files += %w( src/core/lib/gprpp/thd.h )
   s.files += %w( src/core/lib/gprpp/thd_posix.cc )
   s.files += %w( src/core/lib/gprpp/thd_windows.cc )
   s.files += %w( src/core/lib/gprpp/time.cc )
   s.files += %w( src/core/lib/gprpp/time.h )
   s.files += %w( src/core/lib/gprpp/time_util.cc )
   s.files += %w( src/core/lib/gprpp/time_util.h )
   s.files += %w( src/core/lib/gprpp/unique_type_name.h )
   s.files += %w( src/core/lib/http/format_request.cc )
   s.files += %w( src/core/lib/http/format_request.h )
   s.files += %w( src/core/lib/http/httpcli.cc )
   s.files += %w( src/core/lib/http/httpcli.h )
   s.files += %w( src/core/lib/http/httpcli_security_connector.cc )
   s.files += %w( src/core/lib/http/httpcli_ssl_credentials.h )
   s.files += %w( src/core/lib/http/parser.cc )
   s.files += %w( src/core/lib/http/parser.h )
   s.files += %w( src/core/lib/iomgr/block_annotate.h )
   s.files += %w( src/core/lib/iomgr/buffer_list.cc )
   s.files += %w( src/core/lib/iomgr/buffer_list.h )
   s.files += %w( src/core/lib/iomgr/call_combiner.cc )
   s.files += %w( src/core/lib/iomgr/call_combiner.h )
   s.files += %w( src/core/lib/iomgr/cfstream_handle.cc )
   s.files += %w( src/core/lib/iomgr/cfstream_handle.h )
   s.files += %w( src/core/lib/iomgr/closure.h )
   s.files += %w( src/core/lib/iomgr/combiner.cc )
   s.files += %w( src/core/lib/iomgr/combiner.h )
   s.files += %w( src/core/lib/iomgr/dualstack_socket_posix.cc )
   s.files += %w( src/core/lib/iomgr/dynamic_annotations.h )
   s.files += %w( src/core/lib/iomgr/endpoint.cc )
   s.files += %w( src/core/lib/iomgr/endpoint.h )
   s.files += %w( src/core/lib/iomgr/endpoint_cfstream.cc )
   s.files += %w( src/core/lib/iomgr/endpoint_cfstream.h )
   s.files += %w( src/core/lib/iomgr/endpoint_pair.h )
   s.files += %w( src/core/lib/iomgr/endpoint_pair_posix.cc )
   s.files += %w( src/core/lib/iomgr/endpoint_pair_windows.cc )
   s.files += %w( src/core/lib/iomgr/error.cc )
   s.files += %w( src/core/lib/iomgr/error.h )
   s.files += %w( src/core/lib/iomgr/error_cfstream.cc )
   s.files += %w( src/core/lib/iomgr/error_cfstream.h )
   s.files += %w( src/core/lib/iomgr/error_internal.h )
   s.files += %w( src/core/lib/iomgr/ev_apple.cc )
   s.files += %w( src/core/lib/iomgr/ev_apple.h )
   s.files += %w( src/core/lib/iomgr/ev_epoll1_linux.cc )
   s.files += %w( src/core/lib/iomgr/ev_epoll1_linux.h )
   s.files += %w( src/core/lib/iomgr/ev_poll_posix.cc )
   s.files += %w( src/core/lib/iomgr/ev_poll_posix.h )
   s.files += %w( src/core/lib/iomgr/ev_posix.cc )
   s.files += %w( src/core/lib/iomgr/ev_posix.h )
   s.files += %w( src/core/lib/iomgr/ev_windows.cc )
   s.files += %w( src/core/lib/iomgr/exec_ctx.cc )
   s.files += %w( src/core/lib/iomgr/exec_ctx.h )
   s.files += %w( src/core/lib/iomgr/executor.cc )
   s.files += %w( src/core/lib/iomgr/executor.h )
   s.files += %w( src/core/lib/iomgr/executor/mpmcqueue.cc )
   s.files += %w( src/core/lib/iomgr/executor/mpmcqueue.h )
   s.files += %w( src/core/lib/iomgr/executor/threadpool.cc )
   s.files += %w( src/core/lib/iomgr/executor/threadpool.h )
   s.files += %w( src/core/lib/iomgr/fork_posix.cc )
   s.files += %w( src/core/lib/iomgr/fork_windows.cc )
   s.files += %w( src/core/lib/iomgr/gethostname.h )
   s.files += %w( src/core/lib/iomgr/gethostname_fallback.cc )
   s.files += %w( src/core/lib/iomgr/gethostname_host_name_max.cc )
   s.files += %w( src/core/lib/iomgr/gethostname_sysconf.cc )
   s.files += %w( src/core/lib/iomgr/grpc_if_nametoindex.h )
   s.files += %w( src/core/lib/iomgr/grpc_if_nametoindex_posix.cc )
   s.files += %w( src/core/lib/iomgr/grpc_if_nametoindex_unsupported.cc )
   s.files += %w( src/core/lib/iomgr/internal_errqueue.cc )
   s.files += %w( src/core/lib/iomgr/internal_errqueue.h )
   s.files += %w( src/core/lib/iomgr/iocp_windows.cc )
   s.files += %w( src/core/lib/iomgr/iocp_windows.h )
   s.files += %w( src/core/lib/iomgr/iomgr.cc )
   s.files += %w( src/core/lib/iomgr/iomgr.h )
   s.files += %w( src/core/lib/iomgr/iomgr_fwd.h )
   s.files += %w( src/core/lib/iomgr/iomgr_internal.cc )
   s.files += %w( src/core/lib/iomgr/iomgr_internal.h )
   s.files += %w( src/core/lib/iomgr/iomgr_posix.cc )
   s.files += %w( src/core/lib/iomgr/iomgr_posix_cfstream.cc )
   s.files += %w( src/core/lib/iomgr/iomgr_windows.cc )
   s.files += %w( src/core/lib/iomgr/load_file.cc )
   s.files += %w( src/core/lib/iomgr/load_file.h )
   s.files += %w( src/core/lib/iomgr/lockfree_event.cc )
   s.files += %w( src/core/lib/iomgr/lockfree_event.h )
   s.files += %w( src/core/lib/iomgr/nameser.h )
   s.files += %w( src/core/lib/iomgr/polling_entity.cc )
   s.files += %w( src/core/lib/iomgr/polling_entity.h )
   s.files += %w( src/core/lib/iomgr/pollset.cc )
   s.files += %w( src/core/lib/iomgr/pollset.h )
   s.files += %w( src/core/lib/iomgr/pollset_set.cc )
   s.files += %w( src/core/lib/iomgr/pollset_set.h )
   s.files += %w( src/core/lib/iomgr/pollset_set_windows.cc )
   s.files += %w( src/core/lib/iomgr/pollset_set_windows.h )
   s.files += %w( src/core/lib/iomgr/pollset_windows.cc )
   s.files += %w( src/core/lib/iomgr/pollset_windows.h )
   s.files += %w( src/core/lib/iomgr/port.h )
   s.files += %w( src/core/lib/iomgr/python_util.h )
   s.files += %w( src/core/lib/iomgr/resolve_address.cc )
   s.files += %w( src/core/lib/iomgr/resolve_address.h )
   s.files += %w( src/core/lib/iomgr/resolve_address_impl.h )
   s.files += %w( src/core/lib/iomgr/resolve_address_posix.cc )
   s.files += %w( src/core/lib/iomgr/resolve_address_posix.h )
   s.files += %w( src/core/lib/iomgr/resolve_address_windows.cc )
   s.files += %w( src/core/lib/iomgr/resolve_address_windows.h )
   s.files += %w( src/core/lib/iomgr/resolved_address.h )
   s.files += %w( src/core/lib/iomgr/sockaddr.h )
   s.files += %w( src/core/lib/iomgr/sockaddr_posix.h )
   s.files += %w( src/core/lib/iomgr/sockaddr_utils_posix.cc )
   s.files += %w( src/core/lib/iomgr/sockaddr_windows.h )
   s.files += %w( src/core/lib/iomgr/socket_factory_posix.cc )
   s.files += %w( src/core/lib/iomgr/socket_factory_posix.h )
   s.files += %w( src/core/lib/iomgr/socket_mutator.cc )
   s.files += %w( src/core/lib/iomgr/socket_mutator.h )
   s.files += %w( src/core/lib/iomgr/socket_utils.h )
   s.files += %w( src/core/lib/iomgr/socket_utils_common_posix.cc )
   s.files += %w( src/core/lib/iomgr/socket_utils_linux.cc )
   s.files += %w( src/core/lib/iomgr/socket_utils_posix.cc )
   s.files += %w( src/core/lib/iomgr/socket_utils_posix.h )
   s.files += %w( src/core/lib/iomgr/socket_utils_windows.cc )
   s.files += %w( src/core/lib/iomgr/socket_windows.cc )
   s.files += %w( src/core/lib/iomgr/socket_windows.h )
   s.files += %w( src/core/lib/iomgr/tcp_client.cc )
   s.files += %w( src/core/lib/iomgr/tcp_client.h )
   s.files += %w( src/core/lib/iomgr/tcp_client_cfstream.cc )
   s.files += %w( src/core/lib/iomgr/tcp_client_posix.cc )
   s.files += %w( src/core/lib/iomgr/tcp_client_posix.h )
   s.files += %w( src/core/lib/iomgr/tcp_client_windows.cc )
   s.files += %w( src/core/lib/iomgr/tcp_posix.cc )
   s.files += %w( src/core/lib/iomgr/tcp_posix.h )
   s.files += %w( src/core/lib/iomgr/tcp_server.cc )
   s.files += %w( src/core/lib/iomgr/tcp_server.h )
   s.files += %w( src/core/lib/iomgr/tcp_server_posix.cc )
   s.files += %w( src/core/lib/iomgr/tcp_server_utils_posix.h )
   s.files += %w( src/core/lib/iomgr/tcp_server_utils_posix_common.cc )
   s.files += %w( src/core/lib/iomgr/tcp_server_utils_posix_ifaddrs.cc )
   s.files += %w( src/core/lib/iomgr/tcp_server_utils_posix_noifaddrs.cc )
   s.files += %w( src/core/lib/iomgr/tcp_server_windows.cc )
   s.files += %w( src/core/lib/iomgr/tcp_windows.cc )
   s.files += %w( src/core/lib/iomgr/tcp_windows.h )
   s.files += %w( src/core/lib/iomgr/time_averaged_stats.cc )
   s.files += %w( src/core/lib/iomgr/time_averaged_stats.h )
   s.files += %w( src/core/lib/iomgr/timer.cc )
   s.files += %w( src/core/lib/iomgr/timer.h )
   s.files += %w( src/core/lib/iomgr/timer_generic.cc )
   s.files += %w( src/core/lib/iomgr/timer_generic.h )
   s.files += %w( src/core/lib/iomgr/timer_heap.cc )
   s.files += %w( src/core/lib/iomgr/timer_heap.h )
   s.files += %w( src/core/lib/iomgr/timer_manager.cc )
   s.files += %w( src/core/lib/iomgr/timer_manager.h )
   s.files += %w( src/core/lib/iomgr/unix_sockets_posix.cc )
   s.files += %w( src/core/lib/iomgr/unix_sockets_posix.h )
   s.files += %w( src/core/lib/iomgr/unix_sockets_posix_noop.cc )
   s.files += %w( src/core/lib/iomgr/wakeup_fd_eventfd.cc )
   s.files += %w( src/core/lib/iomgr/wakeup_fd_nospecial.cc )
   s.files += %w( src/core/lib/iomgr/wakeup_fd_pipe.cc )
   s.files += %w( src/core/lib/iomgr/wakeup_fd_pipe.h )
   s.files += %w( src/core/lib/iomgr/wakeup_fd_posix.cc )
   s.files += %w( src/core/lib/iomgr/wakeup_fd_posix.h )
   s.files += %w( src/core/lib/iomgr/work_serializer.cc )
   s.files += %w( src/core/lib/iomgr/work_serializer.h )
   s.files += %w( src/core/lib/json/json.h )
   s.files += %w( src/core/lib/json/json_reader.cc )
   s.files += %w( src/core/lib/json/json_util.cc )
   s.files += %w( src/core/lib/json/json_util.h )
   s.files += %w( src/core/lib/json/json_writer.cc )
   s.files += %w( src/core/lib/matchers/matchers.cc )
   s.files += %w( src/core/lib/matchers/matchers.h )
   s.files += %w( src/core/lib/profiling/basic_timers.cc )
   s.files += %w( src/core/lib/profiling/stap_timers.cc )
   s.files += %w( src/core/lib/profiling/timers.h )
   s.files += %w( src/core/lib/promise/activity.cc )
   s.files += %w( src/core/lib/promise/activity.h )
   s.files += %w( src/core/lib/promise/arena_promise.h )
   s.files += %w( src/core/lib/promise/call_push_pull.h )
   s.files += %w( src/core/lib/promise/context.h )
   s.files += %w( src/core/lib/promise/detail/basic_seq.h )
   s.files += %w( src/core/lib/promise/detail/promise_factory.h )
   s.files += %w( src/core/lib/promise/detail/promise_like.h )
   s.files += %w( src/core/lib/promise/detail/status.h )
   s.files += %w( src/core/lib/promise/detail/switch.h )
   s.files += %w( src/core/lib/promise/exec_ctx_wakeup_scheduler.h )
   s.files += %w( src/core/lib/promise/intra_activity_waiter.h )
   s.files += %w( src/core/lib/promise/latch.h )
   s.files += %w( src/core/lib/promise/loop.h )
   s.files += %w( src/core/lib/promise/map.h )
   s.files += %w( src/core/lib/promise/poll.h )
   s.files += %w( src/core/lib/promise/promise.h )
   s.files += %w( src/core/lib/promise/race.h )
   s.files += %w( src/core/lib/promise/seq.h )
   s.files += %w( src/core/lib/promise/sleep.cc )
   s.files += %w( src/core/lib/promise/sleep.h )
   s.files += %w( src/core/lib/promise/try_seq.h )
   s.files += %w( src/core/lib/resolver/resolver.cc )
   s.files += %w( src/core/lib/resolver/resolver.h )
   s.files += %w( src/core/lib/resolver/resolver_factory.h )
   s.files += %w( src/core/lib/resolver/resolver_registry.cc )
   s.files += %w( src/core/lib/resolver/resolver_registry.h )
   s.files += %w( src/core/lib/resolver/server_address.cc )
   s.files += %w( src/core/lib/resolver/server_address.h )
   s.files += %w( src/core/lib/resource_quota/api.cc )
   s.files += %w( src/core/lib/resource_quota/api.h )
   s.files += %w( src/core/lib/resource_quota/arena.cc )
   s.files += %w( src/core/lib/resource_quota/arena.h )
   s.files += %w( src/core/lib/resource_quota/memory_quota.cc )
   s.files += %w( src/core/lib/resource_quota/memory_quota.h )
   s.files += %w( src/core/lib/resource_quota/resource_quota.cc )
   s.files += %w( src/core/lib/resource_quota/resource_quota.h )
   s.files += %w( src/core/lib/resource_quota/thread_quota.cc )
   s.files += %w( src/core/lib/resource_quota/thread_quota.h )
   s.files += %w( src/core/lib/resource_quota/trace.cc )
   s.files += %w( src/core/lib/resource_quota/trace.h )
   s.files += %w( src/core/lib/security/authorization/authorization_engine.h )
   s.files += %w( src/core/lib/security/authorization/authorization_policy_provider.h )
   s.files += %w( src/core/lib/security/authorization/authorization_policy_provider_vtable.cc )
   s.files += %w( src/core/lib/security/authorization/evaluate_args.cc )
   s.files += %w( src/core/lib/security/authorization/evaluate_args.h )
   s.files += %w( src/core/lib/security/authorization/grpc_authorization_engine.cc )
   s.files += %w( src/core/lib/security/authorization/grpc_authorization_engine.h )
   s.files += %w( src/core/lib/security/authorization/grpc_server_authz_filter.cc )
   s.files += %w( src/core/lib/security/authorization/grpc_server_authz_filter.h )
   s.files += %w( src/core/lib/security/authorization/matchers.cc )
   s.files += %w( src/core/lib/security/authorization/matchers.h )
   s.files += %w( src/core/lib/security/authorization/rbac_policy.cc )
   s.files += %w( src/core/lib/security/authorization/rbac_policy.h )
   s.files += %w( src/core/lib/security/context/security_context.cc )
   s.files += %w( src/core/lib/security/context/security_context.h )
   s.files += %w( src/core/lib/security/credentials/alts/alts_credentials.cc )
   s.files += %w( src/core/lib/security/credentials/alts/alts_credentials.h )
   s.files += %w( src/core/lib/security/credentials/alts/check_gcp_environment.cc )
   s.files += %w( src/core/lib/security/credentials/alts/check_gcp_environment.h )
   s.files += %w( src/core/lib/security/credentials/alts/check_gcp_environment_linux.cc )
   s.files += %w( src/core/lib/security/credentials/alts/check_gcp_environment_no_op.cc )
   s.files += %w( src/core/lib/security/credentials/alts/check_gcp_environment_windows.cc )
   s.files += %w( src/core/lib/security/credentials/alts/grpc_alts_credentials_client_options.cc )
   s.files += %w( src/core/lib/security/credentials/alts/grpc_alts_credentials_options.cc )
   s.files += %w( src/core/lib/security/credentials/alts/grpc_alts_credentials_options.h )
   s.files += %w( src/core/lib/security/credentials/alts/grpc_alts_credentials_server_options.cc )
   s.files += %w( src/core/lib/security/credentials/call_creds_util.cc )
   s.files += %w( src/core/lib/security/credentials/call_creds_util.h )
   s.files += %w( src/core/lib/security/credentials/channel_creds_registry.h )
   s.files += %w( src/core/lib/security/credentials/channel_creds_registry_init.cc )
   s.files += %w( src/core/lib/security/credentials/composite/composite_credentials.cc )
   s.files += %w( src/core/lib/security/credentials/composite/composite_credentials.h )
   s.files += %w( src/core/lib/security/credentials/credentials.cc )
   s.files += %w( src/core/lib/security/credentials/credentials.h )
   s.files += %w( src/core/lib/security/credentials/external/aws_external_account_credentials.cc )
   s.files += %w( src/core/lib/security/credentials/external/aws_external_account_credentials.h )
   s.files += %w( src/core/lib/security/credentials/external/aws_request_signer.cc )
   s.files += %w( src/core/lib/security/credentials/external/aws_request_signer.h )
   s.files += %w( src/core/lib/security/credentials/external/external_account_credentials.cc )
   s.files += %w( src/core/lib/security/credentials/external/external_account_credentials.h )
   s.files += %w( src/core/lib/security/credentials/external/file_external_account_credentials.cc )
   s.files += %w( src/core/lib/security/credentials/external/file_external_account_credentials.h )
   s.files += %w( src/core/lib/security/credentials/external/url_external_account_credentials.cc )
   s.files += %w( src/core/lib/security/credentials/external/url_external_account_credentials.h )
   s.files += %w( src/core/lib/security/credentials/fake/fake_credentials.cc )
   s.files += %w( src/core/lib/security/credentials/fake/fake_credentials.h )
   s.files += %w( src/core/lib/security/credentials/google_default/credentials_generic.cc )
   s.files += %w( src/core/lib/security/credentials/google_default/google_default_credentials.cc )
   s.files += %w( src/core/lib/security/credentials/google_default/google_default_credentials.h )
   s.files += %w( src/core/lib/security/credentials/iam/iam_credentials.cc )
   s.files += %w( src/core/lib/security/credentials/iam/iam_credentials.h )
   s.files += %w( src/core/lib/security/credentials/insecure/insecure_credentials.cc )
   s.files += %w( src/core/lib/security/credentials/insecure/insecure_credentials.h )
   s.files += %w( src/core/lib/security/credentials/jwt/json_token.cc )
   s.files += %w( src/core/lib/security/credentials/jwt/json_token.h )
   s.files += %w( src/core/lib/security/credentials/jwt/jwt_credentials.cc )
   s.files += %w( src/core/lib/security/credentials/jwt/jwt_credentials.h )
   s.files += %w( src/core/lib/security/credentials/jwt/jwt_verifier.cc )
   s.files += %w( src/core/lib/security/credentials/jwt/jwt_verifier.h )
   s.files += %w( src/core/lib/security/credentials/local/local_credentials.cc )
   s.files += %w( src/core/lib/security/credentials/local/local_credentials.h )
   s.files += %w( src/core/lib/security/credentials/oauth2/oauth2_credentials.cc )
   s.files += %w( src/core/lib/security/credentials/oauth2/oauth2_credentials.h )
   s.files += %w( src/core/lib/security/credentials/plugin/plugin_credentials.cc )
   s.files += %w( src/core/lib/security/credentials/plugin/plugin_credentials.h )
   s.files += %w( src/core/lib/security/credentials/ssl/ssl_credentials.cc )
   s.files += %w( src/core/lib/security/credentials/ssl/ssl_credentials.h )
   s.files += %w( src/core/lib/security/credentials/tls/grpc_tls_certificate_distributor.cc )
   s.files += %w( src/core/lib/security/credentials/tls/grpc_tls_certificate_distributor.h )
   s.files += %w( src/core/lib/security/credentials/tls/grpc_tls_certificate_provider.cc )
   s.files += %w( src/core/lib/security/credentials/tls/grpc_tls_certificate_provider.h )
   s.files += %w( src/core/lib/security/credentials/tls/grpc_tls_certificate_verifier.cc )
   s.files += %w( src/core/lib/security/credentials/tls/grpc_tls_certificate_verifier.h )
   s.files += %w( src/core/lib/security/credentials/tls/grpc_tls_credentials_options.cc )
   s.files += %w( src/core/lib/security/credentials/tls/grpc_tls_credentials_options.h )
   s.files += %w( src/core/lib/security/credentials/tls/tls_credentials.cc )
   s.files += %w( src/core/lib/security/credentials/tls/tls_credentials.h )
   s.files += %w( src/core/lib/security/credentials/tls/tls_utils.cc )
   s.files += %w( src/core/lib/security/credentials/tls/tls_utils.h )
   s.files += %w( src/core/lib/security/credentials/xds/xds_credentials.cc )
   s.files += %w( src/core/lib/security/credentials/xds/xds_credentials.h )
   s.files += %w( src/core/lib/security/security_connector/alts/alts_security_connector.cc )
   s.files += %w( src/core/lib/security/security_connector/alts/alts_security_connector.h )
   s.files += %w( src/core/lib/security/security_connector/fake/fake_security_connector.cc )
   s.files += %w( src/core/lib/security/security_connector/fake/fake_security_connector.h )
   s.files += %w( src/core/lib/security/security_connector/insecure/insecure_security_connector.cc )
   s.files += %w( src/core/lib/security/security_connector/insecure/insecure_security_connector.h )
   s.files += %w( src/core/lib/security/security_connector/load_system_roots.h )
   s.files += %w( src/core/lib/security/security_connector/load_system_roots_fallback.cc )
   s.files += %w( src/core/lib/security/security_connector/load_system_roots_linux.cc )
   s.files += %w( src/core/lib/security/security_connector/load_system_roots_linux.h )
   s.files += %w( src/core/lib/security/security_connector/local/local_security_connector.cc )
   s.files += %w( src/core/lib/security/security_connector/local/local_security_connector.h )
   s.files += %w( src/core/lib/security/security_connector/security_connector.cc )
   s.files += %w( src/core/lib/security/security_connector/security_connector.h )
   s.files += %w( src/core/lib/security/security_connector/ssl/ssl_security_connector.cc )
   s.files += %w( src/core/lib/security/security_connector/ssl/ssl_security_connector.h )
   s.files += %w( src/core/lib/security/security_connector/ssl_utils.cc )
   s.files += %w( src/core/lib/security/security_connector/ssl_utils.h )
   s.files += %w( src/core/lib/security/security_connector/ssl_utils_config.cc )
   s.files += %w( src/core/lib/security/security_connector/ssl_utils_config.h )
   s.files += %w( src/core/lib/security/security_connector/tls/tls_security_connector.cc )
   s.files += %w( src/core/lib/security/security_connector/tls/tls_security_connector.h )
   s.files += %w( src/core/lib/security/transport/auth_filters.h )
   s.files += %w( src/core/lib/security/transport/client_auth_filter.cc )
   s.files += %w( src/core/lib/security/transport/secure_endpoint.cc )
   s.files += %w( src/core/lib/security/transport/secure_endpoint.h )
   s.files += %w( src/core/lib/security/transport/security_handshaker.cc )
   s.files += %w( src/core/lib/security/transport/security_handshaker.h )
   s.files += %w( src/core/lib/security/transport/server_auth_filter.cc )
   s.files += %w( src/core/lib/security/transport/tsi_error.cc )
   s.files += %w( src/core/lib/security/transport/tsi_error.h )
   s.files += %w( src/core/lib/security/util/json_util.cc )
   s.files += %w( src/core/lib/security/util/json_util.h )
   s.files += %w( src/core/lib/service_config/service_config.h )
   s.files += %w( src/core/lib/service_config/service_config_call_data.h )
   s.files += %w( src/core/lib/service_config/service_config_impl.cc )
   s.files += %w( src/core/lib/service_config/service_config_impl.h )
   s.files += %w( src/core/lib/service_config/service_config_parser.cc )
   s.files += %w( src/core/lib/service_config/service_config_parser.h )
   s.files += %w( src/core/lib/slice/b64.cc )
   s.files += %w( src/core/lib/slice/b64.h )
   s.files += %w( src/core/lib/slice/percent_encoding.cc )
   s.files += %w( src/core/lib/slice/percent_encoding.h )
   s.files += %w( src/core/lib/slice/slice.cc )
   s.files += %w( src/core/lib/slice/slice.h )
   s.files += %w( src/core/lib/slice/slice_api.cc )
   s.files += %w( src/core/lib/slice/slice_buffer.cc )
   s.files += %w( src/core/lib/slice/slice_buffer.h )
   s.files += %w( src/core/lib/slice/slice_buffer_api.cc )
   s.files += %w( src/core/lib/slice/slice_internal.h )
   s.files += %w( src/core/lib/slice/slice_refcount.cc )
   s.files += %w( src/core/lib/slice/slice_refcount.h )
   s.files += %w( src/core/lib/slice/slice_refcount_base.h )
   s.files += %w( src/core/lib/slice/slice_split.cc )
   s.files += %w( src/core/lib/slice/slice_split.h )
   s.files += %w( src/core/lib/slice/slice_string_helpers.cc )
   s.files += %w( src/core/lib/slice/slice_string_helpers.h )
   s.files += %w( src/core/lib/surface/api_trace.cc )
   s.files += %w( src/core/lib/surface/api_trace.h )
   s.files += %w( src/core/lib/surface/builtins.cc )
   s.files += %w( src/core/lib/surface/builtins.h )
   s.files += %w( src/core/lib/surface/byte_buffer.cc )
   s.files += %w( src/core/lib/surface/byte_buffer_reader.cc )
   s.files += %w( src/core/lib/surface/call.cc )
   s.files += %w( src/core/lib/surface/call.h )
   s.files += %w( src/core/lib/surface/call_details.cc )
   s.files += %w( src/core/lib/surface/call_log_batch.cc )
   s.files += %w( src/core/lib/surface/call_test_only.h )
   s.files += %w( src/core/lib/surface/channel.cc )
   s.files += %w( src/core/lib/surface/channel.h )
   s.files += %w( src/core/lib/surface/channel_init.cc )
   s.files += %w( src/core/lib/surface/channel_init.h )
   s.files += %w( src/core/lib/surface/channel_ping.cc )
   s.files += %w( src/core/lib/surface/channel_stack_type.cc )
   s.files += %w( src/core/lib/surface/channel_stack_type.h )
   s.files += %w( src/core/lib/surface/completion_queue.cc )
   s.files += %w( src/core/lib/surface/completion_queue.h )
   s.files += %w( src/core/lib/surface/completion_queue_factory.cc )
   s.files += %w( src/core/lib/surface/completion_queue_factory.h )
   s.files += %w( src/core/lib/surface/event_string.cc )
   s.files += %w( src/core/lib/surface/event_string.h )
   s.files += %w( src/core/lib/surface/init.cc )
   s.files += %w( src/core/lib/surface/init.h )
   s.files += %w( src/core/lib/surface/lame_client.cc )
   s.files += %w( src/core/lib/surface/lame_client.h )
   s.files += %w( src/core/lib/surface/metadata_array.cc )
   s.files += %w( src/core/lib/surface/server.cc )
   s.files += %w( src/core/lib/surface/server.h )
   s.files += %w( src/core/lib/surface/validate_metadata.cc )
   s.files += %w( src/core/lib/surface/validate_metadata.h )
   s.files += %w( src/core/lib/surface/version.cc )
   s.files += %w( src/core/lib/transport/bdp_estimator.cc )
   s.files += %w( src/core/lib/transport/bdp_estimator.h )
+  s.files += %w( src/core/lib/transport/byte_stream.cc )
+  s.files += %w( src/core/lib/transport/byte_stream.h )
   s.files += %w( src/core/lib/transport/connectivity_state.cc )
   s.files += %w( src/core/lib/transport/connectivity_state.h )
   s.files += %w( src/core/lib/transport/error_utils.cc )
   s.files += %w( src/core/lib/transport/error_utils.h )
   s.files += %w( src/core/lib/transport/handshaker.cc )
   s.files += %w( src/core/lib/transport/handshaker.h )
   s.files += %w( src/core/lib/transport/handshaker_factory.h )
   s.files += %w( src/core/lib/transport/handshaker_registry.cc )
   s.files += %w( src/core/lib/transport/handshaker_registry.h )
   s.files += %w( src/core/lib/transport/http2_errors.h )
   s.files += %w( src/core/lib/transport/http_connect_handshaker.cc )
   s.files += %w( src/core/lib/transport/http_connect_handshaker.h )
   s.files += %w( src/core/lib/transport/metadata_batch.cc )
   s.files += %w( src/core/lib/transport/metadata_batch.h )
   s.files += %w( src/core/lib/transport/parsed_metadata.cc )
   s.files += %w( src/core/lib/transport/parsed_metadata.h )
   s.files += %w( src/core/lib/transport/pid_controller.cc )
   s.files += %w( src/core/lib/transport/pid_controller.h )
   s.files += %w( src/core/lib/transport/status_conversion.cc )
   s.files += %w( src/core/lib/transport/status_conversion.h )
   s.files += %w( src/core/lib/transport/tcp_connect_handshaker.cc )
   s.files += %w( src/core/lib/transport/tcp_connect_handshaker.h )
   s.files += %w( src/core/lib/transport/timeout_encoding.cc )
   s.files += %w( src/core/lib/transport/timeout_encoding.h )
   s.files += %w( src/core/lib/transport/transport.cc )
   s.files += %w( src/core/lib/transport/transport.h )
   s.files += %w( src/core/lib/transport/transport_fwd.h )
   s.files += %w( src/core/lib/transport/transport_impl.h )
   s.files += %w( src/core/lib/transport/transport_op_string.cc )
   s.files += %w( src/core/lib/uri/uri_parser.cc )
   s.files += %w( src/core/lib/uri/uri_parser.h )
   s.files += %w( src/core/plugin_registry/grpc_plugin_registry.cc )
   s.files += %w( src/core/plugin_registry/grpc_plugin_registry_extra.cc )
   s.files += %w( src/core/tsi/alts/crypt/aes_gcm.cc )
   s.files += %w( src/core/tsi/alts/crypt/gsec.cc )
   s.files += %w( src/core/tsi/alts/crypt/gsec.h )
   s.files += %w( src/core/tsi/alts/frame_protector/alts_counter.cc )
   s.files += %w( src/core/tsi/alts/frame_protector/alts_counter.h )
   s.files += %w( src/core/tsi/alts/frame_protector/alts_crypter.cc )
   s.files += %w( src/core/tsi/alts/frame_protector/alts_crypter.h )
   s.files += %w( src/core/tsi/alts/frame_protector/alts_frame_protector.cc )
   s.files += %w( src/core/tsi/alts/frame_protector/alts_frame_protector.h )
   s.files += %w( src/core/tsi/alts/frame_protector/alts_record_protocol_crypter_common.cc )
   s.files += %w( src/core/tsi/alts/frame_protector/alts_record_protocol_crypter_common.h )
   s.files += %w( src/core/tsi/alts/frame_protector/alts_seal_privacy_integrity_crypter.cc )
   s.files += %w( src/core/tsi/alts/frame_protector/alts_unseal_privacy_integrity_crypter.cc )
   s.files += %w( src/core/tsi/alts/frame_protector/frame_handler.cc )
   s.files += %w( src/core/tsi/alts/frame_protector/frame_handler.h )
   s.files += %w( src/core/tsi/alts/handshaker/alts_handshaker_client.cc )
   s.files += %w( src/core/tsi/alts/handshaker/alts_handshaker_client.h )
   s.files += %w( src/core/tsi/alts/handshaker/alts_shared_resource.cc )
   s.files += %w( src/core/tsi/alts/handshaker/alts_shared_resource.h )
   s.files += %w( src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc )
   s.files += %w( src/core/tsi/alts/handshaker/alts_tsi_handshaker.h )
   s.files += %w( src/core/tsi/alts/handshaker/alts_tsi_handshaker_private.h )
   s.files += %w( src/core/tsi/alts/handshaker/alts_tsi_utils.cc )
   s.files += %w( src/core/tsi/alts/handshaker/alts_tsi_utils.h )
   s.files += %w( src/core/tsi/alts/handshaker/transport_security_common_api.cc )
   s.files += %w( src/core/tsi/alts/handshaker/transport_security_common_api.h )
   s.files += %w( src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_integrity_only_record_protocol.cc )
   s.files += %w( src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_integrity_only_record_protocol.h )
   s.files += %w( src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_privacy_integrity_record_protocol.cc )
   s.files += %w( src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_privacy_integrity_record_protocol.h )
   s.files += %w( src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol.h )
   s.files += %w( src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol_common.cc )
   s.files += %w( src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol_common.h )
   s.files += %w( src/core/tsi/alts/zero_copy_frame_protector/alts_iovec_record_protocol.cc )
   s.files += %w( src/core/tsi/alts/zero_copy_frame_protector/alts_iovec_record_protocol.h )
   s.files += %w( src/core/tsi/alts/zero_copy_frame_protector/alts_zero_copy_grpc_protector.cc )
   s.files += %w( src/core/tsi/alts/zero_copy_frame_protector/alts_zero_copy_grpc_protector.h )
   s.files += %w( src/core/tsi/fake_transport_security.cc )
   s.files += %w( src/core/tsi/fake_transport_security.h )
   s.files += %w( src/core/tsi/local_transport_security.cc )
   s.files += %w( src/core/tsi/local_transport_security.h )
   s.files += %w( src/core/tsi/ssl/key_logging/ssl_key_logging.cc )
   s.files += %w( src/core/tsi/ssl/key_logging/ssl_key_logging.h )
   s.files += %w( src/core/tsi/ssl/session_cache/ssl_session.h )
   s.files += %w( src/core/tsi/ssl/session_cache/ssl_session_boringssl.cc )
   s.files += %w( src/core/tsi/ssl/session_cache/ssl_session_cache.cc )
   s.files += %w( src/core/tsi/ssl/session_cache/ssl_session_cache.h )
   s.files += %w( src/core/tsi/ssl/session_cache/ssl_session_openssl.cc )
   s.files += %w( src/core/tsi/ssl_transport_security.cc )
   s.files += %w( src/core/tsi/ssl_transport_security.h )
   s.files += %w( src/core/tsi/ssl_types.h )
   s.files += %w( src/core/tsi/transport_security.cc )
   s.files += %w( src/core/tsi/transport_security.h )
   s.files += %w( src/core/tsi/transport_security_grpc.cc )
   s.files += %w( src/core/tsi/transport_security_grpc.h )
   s.files += %w( src/core/tsi/transport_security_interface.h )
   s.files += %w( third_party/abseil-cpp/absl/algorithm/algorithm.h )
   s.files += %w( third_party/abseil-cpp/absl/algorithm/container.h )
   s.files += %w( third_party/abseil-cpp/absl/base/attributes.h )
   s.files += %w( third_party/abseil-cpp/absl/base/call_once.h )
   s.files += %w( third_party/abseil-cpp/absl/base/casts.h )
   s.files += %w( third_party/abseil-cpp/absl/base/config.h )
   s.files += %w( third_party/abseil-cpp/absl/base/const_init.h )
   s.files += %w( third_party/abseil-cpp/absl/base/dynamic_annotations.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/atomic_hook.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/cycleclock.cc )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/cycleclock.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/direct_mmap.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/dynamic_annotations.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/endian.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/errno_saver.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/fast_type_id.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/hide_ptr.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/identity.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/inline_variable.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/invoke.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/low_level_alloc.cc )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/low_level_alloc.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/low_level_scheduling.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/per_thread_tls.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/raw_logging.cc )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/raw_logging.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/scheduling_mode.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/spinlock.cc )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/spinlock.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/spinlock_akaros.inc )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/spinlock_linux.inc )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/spinlock_posix.inc )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/spinlock_wait.cc )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/spinlock_wait.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/spinlock_win32.inc )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/sysinfo.cc )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/sysinfo.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/thread_annotations.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/thread_identity.cc )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/thread_identity.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/throw_delegate.cc )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/throw_delegate.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/tsan_mutex_interface.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/unaligned_access.h )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/unscaledcycleclock.cc )
   s.files += %w( third_party/abseil-cpp/absl/base/internal/unscaledcycleclock.h )
   s.files += %w( third_party/abseil-cpp/absl/base/log_severity.cc )
   s.files += %w( third_party/abseil-cpp/absl/base/log_severity.h )
   s.files += %w( third_party/abseil-cpp/absl/base/macros.h )
   s.files += %w( third_party/abseil-cpp/absl/base/optimization.h )
   s.files += %w( third_party/abseil-cpp/absl/base/options.h )
   s.files += %w( third_party/abseil-cpp/absl/base/policy_checks.h )
   s.files += %w( third_party/abseil-cpp/absl/base/port.h )
   s.files += %w( third_party/abseil-cpp/absl/base/thread_annotations.h )
   s.files += %w( third_party/abseil-cpp/absl/cleanup/cleanup.h )
   s.files += %w( third_party/abseil-cpp/absl/cleanup/internal/cleanup.h )
   s.files += %w( third_party/abseil-cpp/absl/container/fixed_array.h )
   s.files += %w( third_party/abseil-cpp/absl/container/flat_hash_map.h )
   s.files += %w( third_party/abseil-cpp/absl/container/flat_hash_set.h )
   s.files += %w( third_party/abseil-cpp/absl/container/inlined_vector.h )
   s.files += %w( third_party/abseil-cpp/absl/container/internal/common.h )
   s.files += %w( third_party/abseil-cpp/absl/container/internal/compressed_tuple.h )
   s.files += %w( third_party/abseil-cpp/absl/container/internal/container_memory.h )
   s.files += %w( third_party/abseil-cpp/absl/container/internal/hash_function_defaults.h )
   s.files += %w( third_party/abseil-cpp/absl/container/internal/hash_policy_traits.h )
   s.files += %w( third_party/abseil-cpp/absl/container/internal/hashtable_debug_hooks.h )
   s.files += %w( third_party/abseil-cpp/absl/container/internal/hashtablez_sampler.cc )
   s.files += %w( third_party/abseil-cpp/absl/container/internal/hashtablez_sampler.h )
   s.files += %w( third_party/abseil-cpp/absl/container/internal/hashtablez_sampler_force_weak_definition.cc )
   s.files += %w( third_party/abseil-cpp/absl/container/internal/have_sse.h )
   s.files += %w( third_party/abseil-cpp/absl/container/internal/inlined_vector.h )
   s.files += %w( third_party/abseil-cpp/absl/container/internal/layout.h )
   s.files += %w( third_party/abseil-cpp/absl/container/internal/raw_hash_map.h )
   s.files += %w( third_party/abseil-cpp/absl/container/internal/raw_hash_set.cc )
   s.files += %w( third_party/abseil-cpp/absl/container/internal/raw_hash_set.h )
   s.files += %w( third_party/abseil-cpp/absl/debugging/internal/address_is_readable.cc )
   s.files += %w( third_party/abseil-cpp/absl/debugging/internal/address_is_readable.h )
   s.files += %w( third_party/abseil-cpp/absl/debugging/internal/demangle.cc )
   s.files += %w( third_party/abseil-cpp/absl/debugging/internal/demangle.h )
   s.files += %w( third_party/abseil-cpp/absl/debugging/internal/elf_mem_image.cc )
   s.files += %w( third_party/abseil-cpp/absl/debugging/internal/elf_mem_image.h )
   s.files += %w( third_party/abseil-cpp/absl/debugging/internal/stacktrace_aarch64-inl.inc )
   s.files += %w( third_party/abseil-cpp/absl/debugging/internal/stacktrace_arm-inl.inc )
   s.files += %w( third_party/abseil-cpp/absl/debugging/internal/stacktrace_config.h )
   s.files += %w( third_party/abseil-cpp/absl/debugging/internal/stacktrace_emscripten-inl.inc )
   s.files += %w( third_party/abseil-cpp/absl/debugging/internal/stacktrace_generic-inl.inc )
   s.files += %w( third_party/abseil-cpp/absl/debugging/internal/stacktrace_powerpc-inl.inc )
   s.files += %w( third_party/abseil-cpp/absl/debugging/internal/stacktrace_riscv-inl.inc )
   s.files += %w( third_party/abseil-cpp/absl/debugging/internal/stacktrace_unimplemented-inl.inc )
   s.files += %w( third_party/abseil-cpp/absl/debugging/internal/stacktrace_win32-inl.inc )
   s.files += %w( third_party/abseil-cpp/absl/debugging/internal/stacktrace_x86-inl.inc )
   s.files += %w( third_party/abseil-cpp/absl/debugging/internal/symbolize.h )
   s.files += %w( third_party/abseil-cpp/absl/debugging/internal/vdso_support.cc )
   s.files += %w( third_party/abseil-cpp/absl/debugging/internal/vdso_support.h )
   s.files += %w( third_party/abseil-cpp/absl/debugging/stacktrace.cc )
   s.files += %w( third_party/abseil-cpp/absl/debugging/stacktrace.h )
   s.files += %w( third_party/abseil-cpp/absl/debugging/symbolize.cc )
   s.files += %w( third_party/abseil-cpp/absl/debugging/symbolize.h )
   s.files += %w( third_party/abseil-cpp/absl/debugging/symbolize_darwin.inc )
   s.files += %w( third_party/abseil-cpp/absl/debugging/symbolize_elf.inc )
   s.files += %w( third_party/abseil-cpp/absl/debugging/symbolize_emscripten.inc )
   s.files += %w( third_party/abseil-cpp/absl/debugging/symbolize_unimplemented.inc )
   s.files += %w( third_party/abseil-cpp/absl/debugging/symbolize_win32.inc )
   s.files += %w( third_party/abseil-cpp/absl/functional/bind_front.h )
   s.files += %w( third_party/abseil-cpp/absl/functional/function_ref.h )
   s.files += %w( third_party/abseil-cpp/absl/functional/internal/front_binder.h )
   s.files += %w( third_party/abseil-cpp/absl/functional/internal/function_ref.h )
   s.files += %w( third_party/abseil-cpp/absl/hash/hash.h )
   s.files += %w( third_party/abseil-cpp/absl/hash/internal/city.cc )
   s.files += %w( third_party/abseil-cpp/absl/hash/internal/city.h )
   s.files += %w( third_party/abseil-cpp/absl/hash/internal/hash.cc )
   s.files += %w( third_party/abseil-cpp/absl/hash/internal/hash.h )
   s.files += %w( third_party/abseil-cpp/absl/hash/internal/low_level_hash.cc )
   s.files += %w( third_party/abseil-cpp/absl/hash/internal/low_level_hash.h )
   s.files += %w( third_party/abseil-cpp/absl/memory/memory.h )
   s.files += %w( third_party/abseil-cpp/absl/meta/type_traits.h )
   s.files += %w( third_party/abseil-cpp/absl/numeric/bits.h )
   s.files += %w( third_party/abseil-cpp/absl/numeric/int128.cc )
   s.files += %w( third_party/abseil-cpp/absl/numeric/int128.h )
   s.files += %w( third_party/abseil-cpp/absl/numeric/int128_have_intrinsic.inc )
   s.files += %w( third_party/abseil-cpp/absl/numeric/int128_no_intrinsic.inc )
   s.files += %w( third_party/abseil-cpp/absl/numeric/internal/bits.h )
   s.files += %w( third_party/abseil-cpp/absl/numeric/internal/representation.h )
   s.files += %w( third_party/abseil-cpp/absl/profiling/internal/exponential_biased.cc )
   s.files += %w( third_party/abseil-cpp/absl/profiling/internal/exponential_biased.h )
   s.files += %w( third_party/abseil-cpp/absl/profiling/internal/sample_recorder.h )
   s.files += %w( third_party/abseil-cpp/absl/random/bernoulli_distribution.h )
   s.files += %w( third_party/abseil-cpp/absl/random/beta_distribution.h )
   s.files += %w( third_party/abseil-cpp/absl/random/discrete_distribution.cc )
   s.files += %w( third_party/abseil-cpp/absl/random/discrete_distribution.h )
   s.files += %w( third_party/abseil-cpp/absl/random/distributions.h )
   s.files += %w( third_party/abseil-cpp/absl/random/exponential_distribution.h )
   s.files += %w( third_party/abseil-cpp/absl/random/gaussian_distribution.cc )
   s.files += %w( third_party/abseil-cpp/absl/random/gaussian_distribution.h )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/distribution_caller.h )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/fast_uniform_bits.h )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/fastmath.h )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/generate_real.h )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/iostream_state_saver.h )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/nonsecure_base.h )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/pcg_engine.h )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/platform.h )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/pool_urbg.cc )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/pool_urbg.h )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/randen.cc )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/randen.h )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/randen_detect.cc )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/randen_detect.h )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/randen_engine.h )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/randen_hwaes.cc )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/randen_hwaes.h )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/randen_round_keys.cc )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/randen_slow.cc )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/randen_slow.h )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/randen_traits.h )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/salted_seed_seq.h )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/seed_material.cc )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/seed_material.h )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/traits.h )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/uniform_helper.h )
   s.files += %w( third_party/abseil-cpp/absl/random/internal/wide_multiply.h )
   s.files += %w( third_party/abseil-cpp/absl/random/log_uniform_int_distribution.h )
   s.files += %w( third_party/abseil-cpp/absl/random/poisson_distribution.h )
   s.files += %w( third_party/abseil-cpp/absl/random/random.h )
   s.files += %w( third_party/abseil-cpp/absl/random/seed_gen_exception.cc )
   s.files += %w( third_party/abseil-cpp/absl/random/seed_gen_exception.h )
   s.files += %w( third_party/abseil-cpp/absl/random/seed_sequences.cc )
   s.files += %w( third_party/abseil-cpp/absl/random/seed_sequences.h )
   s.files += %w( third_party/abseil-cpp/absl/random/uniform_int_distribution.h )
   s.files += %w( third_party/abseil-cpp/absl/random/uniform_real_distribution.h )
   s.files += %w( third_party/abseil-cpp/absl/random/zipf_distribution.h )
   s.files += %w( third_party/abseil-cpp/absl/status/internal/status_internal.h )
   s.files += %w( third_party/abseil-cpp/absl/status/internal/statusor_internal.h )
   s.files += %w( third_party/abseil-cpp/absl/status/status.cc )
   s.files += %w( third_party/abseil-cpp/absl/status/status.h )
   s.files += %w( third_party/abseil-cpp/absl/status/status_payload_printer.cc )
   s.files += %w( third_party/abseil-cpp/absl/status/status_payload_printer.h )
   s.files += %w( third_party/abseil-cpp/absl/status/statusor.cc )
   s.files += %w( third_party/abseil-cpp/absl/status/statusor.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/ascii.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/ascii.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/charconv.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/charconv.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/cord.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/cord.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/escaping.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/escaping.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/char_map.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/charconv_bigint.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/charconv_bigint.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/charconv_parse.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/charconv_parse.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/cord_internal.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/cord_internal.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/cord_rep_btree.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/cord_rep_btree.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/cord_rep_btree_navigator.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/cord_rep_btree_navigator.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/cord_rep_btree_reader.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/cord_rep_btree_reader.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/cord_rep_consume.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/cord_rep_consume.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/cord_rep_flat.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/cord_rep_ring.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/cord_rep_ring.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/cord_rep_ring_reader.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/cordz_functions.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/cordz_functions.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/cordz_handle.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/cordz_handle.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/cordz_info.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/cordz_info.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/cordz_statistics.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/cordz_update_scope.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/cordz_update_tracker.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/escaping.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/escaping.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/memutil.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/memutil.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/ostringstream.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/ostringstream.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/resize_uninitialized.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/stl_type_traits.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/str_format/arg.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/str_format/arg.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/str_format/bind.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/str_format/bind.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/str_format/checker.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/str_format/extension.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/str_format/extension.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/str_format/float_conversion.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/str_format/float_conversion.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/str_format/output.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/str_format/output.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/str_format/parser.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/str_format/parser.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/str_join_internal.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/str_split_internal.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/string_constant.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/utf8.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/internal/utf8.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/match.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/match.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/numbers.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/numbers.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/str_cat.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/str_cat.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/str_format.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/str_join.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/str_replace.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/str_replace.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/str_split.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/str_split.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/string_view.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/string_view.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/strip.h )
   s.files += %w( third_party/abseil-cpp/absl/strings/substitute.cc )
   s.files += %w( third_party/abseil-cpp/absl/strings/substitute.h )
   s.files += %w( third_party/abseil-cpp/absl/synchronization/barrier.cc )
   s.files += %w( third_party/abseil-cpp/absl/synchronization/barrier.h )
   s.files += %w( third_party/abseil-cpp/absl/synchronization/blocking_counter.cc )
   s.files += %w( third_party/abseil-cpp/absl/synchronization/blocking_counter.h )
   s.files += %w( third_party/abseil-cpp/absl/synchronization/internal/create_thread_identity.cc )
   s.files += %w( third_party/abseil-cpp/absl/synchronization/internal/create_thread_identity.h )
   s.files += %w( third_party/abseil-cpp/absl/synchronization/internal/futex.h )
   s.files += %w( third_party/abseil-cpp/absl/synchronization/internal/graphcycles.cc )
   s.files += %w( third_party/abseil-cpp/absl/synchronization/internal/graphcycles.h )
   s.files += %w( third_party/abseil-cpp/absl/synchronization/internal/kernel_timeout.h )
   s.files += %w( third_party/abseil-cpp/absl/synchronization/internal/per_thread_sem.cc )
   s.files += %w( third_party/abseil-cpp/absl/synchronization/internal/per_thread_sem.h )
   s.files += %w( third_party/abseil-cpp/absl/synchronization/internal/waiter.cc )
   s.files += %w( third_party/abseil-cpp/absl/synchronization/internal/waiter.h )
   s.files += %w( third_party/abseil-cpp/absl/synchronization/mutex.cc )
   s.files += %w( third_party/abseil-cpp/absl/synchronization/mutex.h )
   s.files += %w( third_party/abseil-cpp/absl/synchronization/notification.cc )
   s.files += %w( third_party/abseil-cpp/absl/synchronization/notification.h )
   s.files += %w( third_party/abseil-cpp/absl/time/civil_time.cc )
   s.files += %w( third_party/abseil-cpp/absl/time/civil_time.h )
   s.files += %w( third_party/abseil-cpp/absl/time/clock.cc )
   s.files += %w( third_party/abseil-cpp/absl/time/clock.h )
   s.files += %w( third_party/abseil-cpp/absl/time/duration.cc )
   s.files += %w( third_party/abseil-cpp/absl/time/format.cc )
   s.files += %w( third_party/abseil-cpp/absl/time/internal/cctz/include/cctz/civil_time.h )
   s.files += %w( third_party/abseil-cpp/absl/time/internal/cctz/include/cctz/civil_time_detail.h )
   s.files += %w( third_party/abseil-cpp/absl/time/internal/cctz/include/cctz/time_zone.h )
   s.files += %w( third_party/abseil-cpp/absl/time/internal/cctz/include/cctz/zone_info_source.h )
   s.files += %w( third_party/abseil-cpp/absl/time/internal/cctz/src/civil_time_detail.cc )
   s.files += %w( third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_fixed.cc )
   s.files += %w( third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_fixed.h )
   s.files += %w( third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_format.cc )
   s.files += %w( third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_if.cc )
   s.files += %w( third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_if.h )
   s.files += %w( third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_impl.cc )
   s.files += %w( third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_impl.h )
   s.files += %w( third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_info.cc )
   s.files += %w( third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_info.h )
   s.files += %w( third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_libc.cc )
   s.files += %w( third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_libc.h )
   s.files += %w( third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_lookup.cc )
   s.files += %w( third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_posix.cc )
   s.files += %w( third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_posix.h )
   s.files += %w( third_party/abseil-cpp/absl/time/internal/cctz/src/tzfile.h )
   s.files += %w( third_party/abseil-cpp/absl/time/internal/cctz/src/zone_info_source.cc )
   s.files += %w( third_party/abseil-cpp/absl/time/internal/get_current_time_chrono.inc )
   s.files += %w( third_party/abseil-cpp/absl/time/internal/get_current_time_posix.inc )
   s.files += %w( third_party/abseil-cpp/absl/time/time.cc )
   s.files += %w( third_party/abseil-cpp/absl/time/time.h )
   s.files += %w( third_party/abseil-cpp/absl/types/bad_optional_access.cc )
   s.files += %w( third_party/abseil-cpp/absl/types/bad_optional_access.h )
   s.files += %w( third_party/abseil-cpp/absl/types/bad_variant_access.cc )
   s.files += %w( third_party/abseil-cpp/absl/types/bad_variant_access.h )
   s.files += %w( third_party/abseil-cpp/absl/types/internal/optional.h )
   s.files += %w( third_party/abseil-cpp/absl/types/internal/span.h )
   s.files += %w( third_party/abseil-cpp/absl/types/internal/variant.h )
   s.files += %w( third_party/abseil-cpp/absl/types/optional.h )
   s.files += %w( third_party/abseil-cpp/absl/types/span.h )
   s.files += %w( third_party/abseil-cpp/absl/types/variant.h )
   s.files += %w( third_party/abseil-cpp/absl/utility/utility.h )
   s.files += %w( third_party/address_sorting/address_sorting.c )
   s.files += %w( third_party/address_sorting/address_sorting_internal.h )
   s.files += %w( third_party/address_sorting/address_sorting_posix.c )
   s.files += %w( third_party/address_sorting/address_sorting_windows.c )
   s.files += %w( third_party/address_sorting/include/address_sorting/address_sorting.h )
   s.files += %w( third_party/boringssl-with-bazel/err_data.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/a_bitstr.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/a_bool.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/a_d2i_fp.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/a_dup.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/a_enum.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/a_gentm.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/a_i2d_fp.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/a_int.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/a_mbstr.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/a_object.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/a_octet.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/a_print.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/a_strex.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/a_strnid.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/a_time.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/a_type.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/a_utctm.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/a_utf8.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/asn1_lib.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/asn1_par.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/asn_pack.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/charmap.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/f_int.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/f_string.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/tasn_dec.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/tasn_enc.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/tasn_fre.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/tasn_new.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/tasn_typ.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/tasn_utl.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/asn1/time_support.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/base64/base64.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/bio/bio.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/bio/bio_mem.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/bio/connect.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/bio/fd.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/bio/file.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/bio/hexdump.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/bio/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/bio/pair.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/bio/printf.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/bio/socket.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/bio/socket_helper.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/blake2/blake2.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/bn_extra/bn_asn1.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/bn_extra/convert.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/buf/buf.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/bytestring/asn1_compat.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/bytestring/ber.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/bytestring/cbb.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/bytestring/cbs.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/bytestring/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/bytestring/unicode.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/chacha/chacha.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/chacha/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/cipher_extra/cipher_extra.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/cipher_extra/derive_key.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_aesccm.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_aesctrhmac.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_aesgcmsiv.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_chacha20poly1305.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_null.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_rc2.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_rc4.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_tls.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/cipher_extra/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/cipher_extra/tls_cbc.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/cmac/cmac.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/conf/conf.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/conf/conf_def.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/conf/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/cpu-aarch64-fuchsia.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/cpu-aarch64-linux.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/cpu-aarch64-win.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/cpu-arm-linux.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/cpu-arm-linux.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/cpu-arm.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/cpu-intel.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/cpu-ppc64le.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/crypto.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/curve25519/curve25519.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/curve25519/curve25519_tables.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/curve25519/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/curve25519/spake25519.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/dh_extra/dh_asn1.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/dh_extra/params.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/digest_extra/digest_extra.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/dsa/dsa.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/dsa/dsa_asn1.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/dsa/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/ec_extra/ec_asn1.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/ec_extra/ec_derive.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/ec_extra/hash_to_curve.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/ec_extra/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/ecdh_extra/ecdh_extra.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/ecdsa_extra/ecdsa_asn1.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/engine/engine.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/err/err.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/err/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/evp/digestsign.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/evp/evp.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/evp/evp_asn1.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/evp/evp_ctx.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/evp/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/evp/p_dsa_asn1.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/evp/p_ec.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/evp/p_ec_asn1.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/evp/p_ed25519.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/evp/p_ed25519_asn1.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/evp/p_rsa.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/evp/p_rsa_asn1.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/evp/p_x25519.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/evp/p_x25519_asn1.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/evp/pbkdf.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/evp/print.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/evp/scrypt.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/evp/sign.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/ex_data.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/aes/aes.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/aes/aes_nohw.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/aes/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/aes/key_wrap.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/aes/mode_wrappers.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/bcm.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/add.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/asm/x86_64-gcc.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/bn.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/bytes.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/cmp.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/ctx.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/div.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/div_extra.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/exponentiation.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/gcd.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/gcd_extra.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/generic.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/jacobi.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/montgomery.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/montgomery_inv.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/mul.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/prime.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/random.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/rsaz_exp.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/rsaz_exp.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/shift.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/sqrt.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/cipher/aead.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/cipher/cipher.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/cipher/e_aes.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/cipher/e_des.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/cipher/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/delocate.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/des/des.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/des/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/dh/check.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/dh/dh.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/digest/digest.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/digest/digests.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/digest/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/digest/md32_common.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/ec.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/ec_key.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/ec_montgomery.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/felem.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/oct.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/p224-64.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/p256-x86_64-table.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/p256-x86_64.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/p256-x86_64.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/p256.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/p256_table.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/scalar.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/simple.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/simple_mul.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/util.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/wnaf.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/ecdh/ecdh.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/ecdsa/ecdsa.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/ecdsa/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/fips_shared_support.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/hmac/hmac.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/md4/md4.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/md5/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/md5/md5.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/modes/cbc.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/modes/cfb.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/modes/ctr.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/modes/gcm.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/modes/gcm_nohw.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/modes/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/modes/ofb.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/modes/polyval.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/rand/ctrdrbg.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/rand/fork_detect.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/rand/fork_detect.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/rand/getrandom_fillin.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/rand/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/rand/rand.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/rand/urandom.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/rsa/blinding.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/rsa/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/rsa/padding.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/rsa/rsa.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/rsa/rsa_impl.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/self_check/fips.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/self_check/self_check.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/sha/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/sha/sha1-altivec.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/sha/sha1.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/sha/sha256.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/sha/sha512.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/tls/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/fipsmodule/tls/kdf.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/hkdf/hkdf.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/hpke/hpke.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/hrss/hrss.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/hrss/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/lhash/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/lhash/lhash.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/mem.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/obj/obj.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/obj/obj_dat.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/obj/obj_xref.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/pem/pem_all.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/pem/pem_info.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/pem/pem_lib.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/pem/pem_oth.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/pem/pem_pk8.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/pem/pem_pkey.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/pem/pem_x509.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/pem/pem_xaux.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/pkcs7/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/pkcs7/pkcs7.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/pkcs7/pkcs7_x509.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/pkcs8/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/pkcs8/p5_pbev2.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/pkcs8/pkcs8.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/pkcs8/pkcs8_x509.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/poly1305/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/poly1305/poly1305.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/poly1305/poly1305_arm.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/poly1305/poly1305_vec.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/pool/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/pool/pool.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/rand_extra/deterministic.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/rand_extra/forkunsafe.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/rand_extra/fuchsia.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/rand_extra/passive.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/rand_extra/rand_extra.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/rand_extra/windows.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/rc4/rc4.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/refcount_c11.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/refcount_lock.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/rsa_extra/rsa_asn1.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/rsa_extra/rsa_print.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/siphash/siphash.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/stack/stack.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/thread.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/thread_none.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/thread_pthread.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/thread_win.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/trust_token/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/trust_token/pmbtoken.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/trust_token/trust_token.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/trust_token/voprf.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/a_digest.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/a_sign.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/a_verify.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/algorithm.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/asn1_gen.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/by_dir.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/by_file.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/i2d_pr.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/name_print.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/rsa_pss.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/t_crl.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/t_req.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/t_x509.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/t_x509a.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x509.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x509_att.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x509_cmp.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x509_d2.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x509_def.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x509_ext.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x509_lu.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x509_obj.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x509_req.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x509_set.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x509_trs.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x509_txt.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x509_v3.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x509_vfy.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x509_vpm.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x509cset.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x509name.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x509rset.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x509spki.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x_algor.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x_all.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x_attrib.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x_crl.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x_exten.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x_info.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x_name.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x_pkey.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x_pubkey.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x_req.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x_sig.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x_spki.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x_val.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x_x509.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509/x_x509a.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/ext_dat.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_cache.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_data.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_lib.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_map.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_node.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_tree.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_akey.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_akeya.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_alt.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_bcons.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_bitst.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_conf.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_cpols.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_crld.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_enum.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_extku.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_genn.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_ia5.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_info.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_int.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_lib.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_ncons.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_ocsp.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_pci.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_pcia.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_pcons.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_pmaps.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_prn.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_purp.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_skey.c )
   s.files += %w( third_party/boringssl-with-bazel/src/crypto/x509v3/v3_utl.c )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/aead.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/aes.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/arm_arch.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/asn1.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/asn1_mac.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/asn1t.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/base.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/base64.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/bio.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/blake2.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/blowfish.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/bn.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/buf.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/buffer.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/bytestring.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/cast.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/chacha.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/cipher.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/cmac.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/conf.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/cpu.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/crypto.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/curve25519.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/des.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/dh.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/digest.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/dsa.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/dtls1.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/e_os2.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/ec.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/ec_key.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/ecdh.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/ecdsa.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/engine.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/err.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/evp.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/evp_errors.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/ex_data.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/hkdf.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/hmac.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/hpke.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/hrss.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/is_boringssl.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/lhash.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/md4.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/md5.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/mem.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/nid.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/obj.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/obj_mac.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/objects.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/opensslconf.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/opensslv.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/ossl_typ.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/pem.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/pkcs12.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/pkcs7.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/pkcs8.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/poly1305.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/pool.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/rand.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/rc4.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/ripemd.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/rsa.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/safestack.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/sha.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/siphash.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/span.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/srtp.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/ssl.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/ssl3.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/stack.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/thread.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/tls1.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/trust_token.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/type_check.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/x509.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/x509_vfy.h )
   s.files += %w( third_party/boringssl-with-bazel/src/include/openssl/x509v3.h )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/bio_ssl.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/d1_both.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/d1_lib.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/d1_pkt.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/d1_srtp.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/dtls_method.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/dtls_record.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/encrypted_client_hello.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/extensions.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/handoff.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/handshake.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/handshake_client.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/handshake_server.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/internal.h )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/s3_both.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/s3_lib.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/s3_pkt.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/ssl_aead_ctx.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/ssl_asn1.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/ssl_buffer.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/ssl_cert.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/ssl_cipher.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/ssl_file.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/ssl_key_share.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/ssl_lib.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/ssl_privkey.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/ssl_session.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/ssl_stat.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/ssl_transcript.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/ssl_versions.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/ssl_x509.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/t1_enc.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/tls13_both.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/tls13_client.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/tls13_enc.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/tls13_server.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/tls_method.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/ssl/tls_record.cc )
   s.files += %w( third_party/boringssl-with-bazel/src/third_party/fiat/curve25519_32.h )
   s.files += %w( third_party/boringssl-with-bazel/src/third_party/fiat/curve25519_64.h )
   s.files += %w( third_party/boringssl-with-bazel/src/third_party/fiat/p256_32.h )
   s.files += %w( third_party/boringssl-with-bazel/src/third_party/fiat/p256_64.h )
   s.files += %w( third_party/cares/ares_build.h )
   s.files += %w( third_party/cares/cares/include/ares.h )
   s.files += %w( third_party/cares/cares/include/ares_dns.h )
   s.files += %w( third_party/cares/cares/include/ares_rules.h )
   s.files += %w( third_party/cares/cares/include/ares_version.h )
   s.files += %w( third_party/cares/cares/src/lib/ares__close_sockets.c )
   s.files += %w( third_party/cares/cares/src/lib/ares__get_hostent.c )
   s.files += %w( third_party/cares/cares/src/lib/ares__parse_into_addrinfo.c )
   s.files += %w( third_party/cares/cares/src/lib/ares__read_line.c )
   s.files += %w( third_party/cares/cares/src/lib/ares__readaddrinfo.c )
   s.files += %w( third_party/cares/cares/src/lib/ares__sortaddrinfo.c )
   s.files += %w( third_party/cares/cares/src/lib/ares__timeval.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_android.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_android.h )
   s.files += %w( third_party/cares/cares/src/lib/ares_cancel.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_create_query.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_data.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_data.h )
   s.files += %w( third_party/cares/cares/src/lib/ares_destroy.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_expand_name.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_expand_string.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_fds.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_free_hostent.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_free_string.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_freeaddrinfo.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_getaddrinfo.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_getenv.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_getenv.h )
   s.files += %w( third_party/cares/cares/src/lib/ares_gethostbyaddr.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_gethostbyname.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_getnameinfo.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_getsock.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_inet_net_pton.h )
   s.files += %w( third_party/cares/cares/src/lib/ares_init.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_iphlpapi.h )
   s.files += %w( third_party/cares/cares/src/lib/ares_ipv6.h )
   s.files += %w( third_party/cares/cares/src/lib/ares_library_init.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_library_init.h )
   s.files += %w( third_party/cares/cares/src/lib/ares_llist.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_llist.h )
   s.files += %w( third_party/cares/cares/src/lib/ares_mkquery.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_nameser.h )
   s.files += %w( third_party/cares/cares/src/lib/ares_nowarn.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_nowarn.h )
   s.files += %w( third_party/cares/cares/src/lib/ares_options.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_parse_a_reply.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_parse_aaaa_reply.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_parse_caa_reply.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_parse_mx_reply.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_parse_naptr_reply.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_parse_ns_reply.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_parse_ptr_reply.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_parse_soa_reply.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_parse_srv_reply.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_parse_txt_reply.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_platform.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_platform.h )
   s.files += %w( third_party/cares/cares/src/lib/ares_private.h )
   s.files += %w( third_party/cares/cares/src/lib/ares_process.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_query.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_search.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_send.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_setup.h )
   s.files += %w( third_party/cares/cares/src/lib/ares_strcasecmp.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_strcasecmp.h )
   s.files += %w( third_party/cares/cares/src/lib/ares_strdup.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_strdup.h )
   s.files += %w( third_party/cares/cares/src/lib/ares_strerror.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_strsplit.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_strsplit.h )
   s.files += %w( third_party/cares/cares/src/lib/ares_timeout.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_version.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_writev.c )
   s.files += %w( third_party/cares/cares/src/lib/ares_writev.h )
   s.files += %w( third_party/cares/cares/src/lib/bitncmp.c )
   s.files += %w( third_party/cares/cares/src/lib/bitncmp.h )
   s.files += %w( third_party/cares/cares/src/lib/config-dos.h )
   s.files += %w( third_party/cares/cares/src/lib/config-win32.h )
   s.files += %w( third_party/cares/cares/src/lib/inet_net_pton.c )
   s.files += %w( third_party/cares/cares/src/lib/inet_ntop.c )
   s.files += %w( third_party/cares/cares/src/lib/setup_once.h )
   s.files += %w( third_party/cares/cares/src/lib/windows_port.c )
   s.files += %w( third_party/cares/config_darwin/ares_config.h )
   s.files += %w( third_party/cares/config_freebsd/ares_config.h )
   s.files += %w( third_party/cares/config_linux/ares_config.h )
   s.files += %w( third_party/cares/config_openbsd/ares_config.h )
   s.files += %w( third_party/re2/re2/bitmap256.h )
   s.files += %w( third_party/re2/re2/bitstate.cc )
   s.files += %w( third_party/re2/re2/compile.cc )
   s.files += %w( third_party/re2/re2/dfa.cc )
   s.files += %w( third_party/re2/re2/filtered_re2.cc )
   s.files += %w( third_party/re2/re2/filtered_re2.h )
   s.files += %w( third_party/re2/re2/mimics_pcre.cc )
   s.files += %w( third_party/re2/re2/nfa.cc )
   s.files += %w( third_party/re2/re2/onepass.cc )
   s.files += %w( third_party/re2/re2/parse.cc )
   s.files += %w( third_party/re2/re2/perl_groups.cc )
   s.files += %w( third_party/re2/re2/pod_array.h )
   s.files += %w( third_party/re2/re2/prefilter.cc )
   s.files += %w( third_party/re2/re2/prefilter.h )
   s.files += %w( third_party/re2/re2/prefilter_tree.cc )
   s.files += %w( third_party/re2/re2/prefilter_tree.h )
   s.files += %w( third_party/re2/re2/prog.cc )
   s.files += %w( third_party/re2/re2/prog.h )
   s.files += %w( third_party/re2/re2/re2.cc )
   s.files += %w( third_party/re2/re2/re2.h )
   s.files += %w( third_party/re2/re2/regexp.cc )
   s.files += %w( third_party/re2/re2/regexp.h )
   s.files += %w( third_party/re2/re2/set.cc )
   s.files += %w( third_party/re2/re2/set.h )
   s.files += %w( third_party/re2/re2/simplify.cc )
   s.files += %w( third_party/re2/re2/sparse_array.h )
   s.files += %w( third_party/re2/re2/sparse_set.h )
   s.files += %w( third_party/re2/re2/stringpiece.cc )
   s.files += %w( third_party/re2/re2/stringpiece.h )
   s.files += %w( third_party/re2/re2/tostring.cc )
   s.files += %w( third_party/re2/re2/unicode_casefold.cc )
   s.files += %w( third_party/re2/re2/unicode_casefold.h )
   s.files += %w( third_party/re2/re2/unicode_groups.cc )
   s.files += %w( third_party/re2/re2/unicode_groups.h )
   s.files += %w( third_party/re2/re2/walker-inl.h )
   s.files += %w( third_party/re2/util/benchmark.h )
   s.files += %w( third_party/re2/util/flags.h )
   s.files += %w( third_party/re2/util/logging.h )
   s.files += %w( third_party/re2/util/malloc_counter.h )
   s.files += %w( third_party/re2/util/mix.h )
   s.files += %w( third_party/re2/util/mutex.h )
   s.files += %w( third_party/re2/util/pcre.cc )
   s.files += %w( third_party/re2/util/pcre.h )
   s.files += %w( third_party/re2/util/rune.cc )
   s.files += %w( third_party/re2/util/strutil.cc )
   s.files += %w( third_party/re2/util/strutil.h )
   s.files += %w( third_party/re2/util/test.h )
   s.files += %w( third_party/re2/util/utf.h )
   s.files += %w( third_party/re2/util/util.h )
   s.files += %w( third_party/upb/third_party/utf8_range/naive.c )
   s.files += %w( third_party/upb/third_party/utf8_range/range2-neon.c )
   s.files += %w( third_party/upb/third_party/utf8_range/range2-sse.c )
   s.files += %w( third_party/upb/third_party/utf8_range/utf8_range.h )
   s.files += %w( third_party/upb/upb/decode.c )
   s.files += %w( third_party/upb/upb/decode.h )
   s.files += %w( third_party/upb/upb/decode_fast.c )
   s.files += %w( third_party/upb/upb/decode_fast.h )
   s.files += %w( third_party/upb/upb/decode_internal.h )
   s.files += %w( third_party/upb/upb/def.c )
   s.files += %w( third_party/upb/upb/def.h )
   s.files += %w( third_party/upb/upb/def.hpp )
   s.files += %w( third_party/upb/upb/encode.c )
   s.files += %w( third_party/upb/upb/encode.h )
   s.files += %w( third_party/upb/upb/json_encode.c )
   s.files += %w( third_party/upb/upb/json_encode.h )
   s.files += %w( third_party/upb/upb/msg.c )
   s.files += %w( third_party/upb/upb/msg.h )
   s.files += %w( third_party/upb/upb/msg_internal.h )
   s.files += %w( third_party/upb/upb/port_def.inc )
   s.files += %w( third_party/upb/upb/port_undef.inc )
   s.files += %w( third_party/upb/upb/reflection.c )
   s.files += %w( third_party/upb/upb/reflection.h )
   s.files += %w( third_party/upb/upb/reflection.hpp )
   s.files += %w( third_party/upb/upb/table.c )
   s.files += %w( third_party/upb/upb/table_internal.h )
   s.files += %w( third_party/upb/upb/text_encode.c )
   s.files += %w( third_party/upb/upb/text_encode.h )
   s.files += %w( third_party/upb/upb/upb.c )
   s.files += %w( third_party/upb/upb/upb.h )
   s.files += %w( third_party/upb/upb/upb.hpp )
   s.files += %w( third_party/upb/upb/upb_internal.h )
   s.files += %w( third_party/xxhash/xxhash.h )
   s.files += %w( third_party/zlib/adler32.c )
   s.files += %w( third_party/zlib/compress.c )
   s.files += %w( third_party/zlib/crc32.c )
   s.files += %w( third_party/zlib/crc32.h )
   s.files += %w( third_party/zlib/deflate.c )
   s.files += %w( third_party/zlib/deflate.h )
   s.files += %w( third_party/zlib/gzclose.c )
   s.files += %w( third_party/zlib/gzguts.h )
   s.files += %w( third_party/zlib/gzlib.c )
   s.files += %w( third_party/zlib/gzread.c )
   s.files += %w( third_party/zlib/gzwrite.c )
   s.files += %w( third_party/zlib/infback.c )
   s.files += %w( third_party/zlib/inffast.c )
   s.files += %w( third_party/zlib/inffast.h )
   s.files += %w( third_party/zlib/inffixed.h )
   s.files += %w( third_party/zlib/inflate.c )
   s.files += %w( third_party/zlib/inflate.h )
   s.files += %w( third_party/zlib/inftrees.c )
   s.files += %w( third_party/zlib/inftrees.h )
   s.files += %w( third_party/zlib/trees.c )
   s.files += %w( third_party/zlib/trees.h )
   s.files += %w( third_party/zlib/uncompr.c )
   s.files += %w( third_party/zlib/zconf.h )
   s.files += %w( third_party/zlib/zlib.h )
   s.files += %w( third_party/zlib/zutil.c )
   s.files += %w( third_party/zlib/zutil.h )
diff --git a/grpc.gyp b/grpc.gyp
index 2ba108cea9..dd5c35a991 100644
--- a/grpc.gyp
+++ b/grpc.gyp
@@ -1,2075 +1,2077 @@
 # GRPC GYP build file
 
 # This file has been automatically generated from a template file.
 # Please look at the templates directory instead.
 # This file can be regenerated from the template by running
 # tools/buildgen/generate_projects.sh
 
 # Copyright 2015 gRPC authors.
 #
 # Licensed under the Apache License, Version 2.0 (the "License");
 # you may not use this file except in compliance with the License.
 # You may obtain a copy of the License at
 #
 #     http://www.apache.org/licenses/LICENSE-2.0
 #
 # Unless required by applicable law or agreed to in writing, software
 # distributed under the License is distributed on an "AS IS" BASIS,
 # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
 {
   'variables': {
    # The openssl and zlib dependencies must be passed in as variables
    # defined in an included gypi file, usually common.gypi.
    'openssl_gyp_target%': 'Please Define openssl_gyp_target variable',
    'zlib_gyp_target%': 'Please Define zlib_gyp_target variable',
 
    'grpc_gcov%': 'false',
    'grpc_alpine%': 'false',
   },
   'target_defaults': {
     'configurations': {
       'Debug': {
         'cflags': [
           '-O0',
         ],
         'defines': [
           '_DEBUG',
           'DEBUG',
         ],
       },
       'Release': {
         'cflags': [
           '-O2',
           '-Wframe-larger-than=16384',
         ],
         'defines': [
           'NDEBUG',
         ],
       },
     },
     'cflags': [
       '-g',
       '-Wall',
       '-Wextra',
       '-DOSATOMIC_USE_INLINED=1',
       '-Ithird_party/abseil-cpp',
       '-Ithird_party/re2',
       '-Ithird_party/upb',
       '-Isrc/core/ext/upb-generated',
       '-Isrc/core/ext/upbdefs-generated',
       '-Ithird_party/xxhash',
     ],
     'ldflags': [
       '-g',
     ],
     'cflags_c': [
       '-Werror',
       '-std=c11',
     ],
     'cflags_cc': [
       '-Werror',
       '-std=c++14',
     ],
     'include_dirs': [
       '.',
       '../..',
       'include',
     ],
     'defines': [
       'GRPC_ARES=0',
     ],
     'dependencies': [
       '<(openssl_gyp_target)',
       '<(zlib_gyp_target)',
     ],
     'conditions': [
       ['grpc_gcov=="true"', {
         'cflags': [
           '-O0',
           '-fprofile-arcs',
           '-ftest-coverage',
           '-Wno-return-type',
         ],
         'defines': [
           '_DEBUG',
           'DEBUG',
           'GPR_GCOV',
         ],
         'ldflags': [
           '-fprofile-arcs',
           '-ftest-coverage',
           '-rdynamic',
           '-lstdc++',
         ],
       }],
       ['grpc_alpine=="true"', {
         'defines': [
           'GPR_MUSL_LIBC_COMPAT'
         ]
       }],
       ['OS == "win"', {
         'defines': [
           '_WIN32_WINNT=0x0600',
           'WIN32_LEAN_AND_MEAN',
           '_HAS_EXCEPTIONS=0',
           'UNICODE',
           '_UNICODE',
           'NOMINMAX',
         ],
         'msvs_settings': {
           'VCCLCompilerTool': {
             'RuntimeLibrary': 1, # static debug
           }
         },
         "libraries": [
           "ws2_32"
         ]
       }],
       ['OS == "mac"', {
         'xcode_settings': {
           'OTHER_CFLAGS': [
             '-g',
             '-Wall',
             '-Wextra',
             '-DOSATOMIC_USE_INLINED=1',
             '-Ithird_party/abseil-cpp',
             '-Ithird_party/re2',
             '-Ithird_party/upb',
             '-Isrc/core/ext/upb-generated',
             '-Isrc/core/ext/upbdefs-generated',
             '-Ithird_party/xxhash',
           ],
           'OTHER_CPLUSPLUSFLAGS': [
             '-g',
             '-Wall',
             '-Wextra',
             '-DOSATOMIC_USE_INLINED=1',
             '-Ithird_party/abseil-cpp',
             '-Ithird_party/re2',
             '-Ithird_party/upb',
             '-Isrc/core/ext/upb-generated',
             '-Isrc/core/ext/upbdefs-generated',
             '-Ithird_party/xxhash',
             '-stdlib=libc++',
             '-std=c++14',
             '-Wno-error=deprecated-declarations',
           ],
         },
       }]
     ]
   },
   'targets': [
     {
       'target_name': 'address_sorting',
       'type': 'static_library',
       'dependencies': [
       ],
       'sources': [
         'third_party/address_sorting/address_sorting.c',
         'third_party/address_sorting/address_sorting_posix.c',
         'third_party/address_sorting/address_sorting_windows.c',
       ],
     },
     {
       'target_name': 'end2end_tests',
       'type': 'static_library',
       'dependencies': [
         'grpc_test_util',
       ],
       'sources': [
         'src/core/lib/security/authorization/grpc_authorization_policy_provider.cc',
         'src/core/lib/security/authorization/rbac_translator.cc',
         'test/core/compression/args_utils.cc',
         'test/core/end2end/cq_verifier.cc',
         'test/core/end2end/data/client_certs.cc',
         'test/core/end2end/data/server1_cert.cc',
         'test/core/end2end/data/server1_key.cc',
         'test/core/end2end/data/test_root_cert.cc',
         'test/core/end2end/end2end_test_utils.cc',
         'test/core/end2end/end2end_tests.cc',
         'test/core/end2end/fixtures/http_proxy_fixture.cc',
         'test/core/end2end/fixtures/local_util.cc',
         'test/core/end2end/fixtures/proxy.cc',
         'test/core/end2end/tests/authority_not_supported.cc',
         'test/core/end2end/tests/bad_hostname.cc',
         'test/core/end2end/tests/bad_ping.cc',
         'test/core/end2end/tests/binary_metadata.cc',
         'test/core/end2end/tests/call_creds.cc',
         'test/core/end2end/tests/call_host_override.cc',
         'test/core/end2end/tests/cancel_after_accept.cc',
         'test/core/end2end/tests/cancel_after_client_done.cc',
         'test/core/end2end/tests/cancel_after_invoke.cc',
         'test/core/end2end/tests/cancel_after_round_trip.cc',
         'test/core/end2end/tests/cancel_before_invoke.cc',
         'test/core/end2end/tests/cancel_in_a_vacuum.cc',
         'test/core/end2end/tests/cancel_with_status.cc',
         'test/core/end2end/tests/channelz.cc',
         'test/core/end2end/tests/client_streaming.cc',
         'test/core/end2end/tests/compressed_payload.cc',
         'test/core/end2end/tests/connectivity.cc',
         'test/core/end2end/tests/default_host.cc',
         'test/core/end2end/tests/disappearing_server.cc',
         'test/core/end2end/tests/empty_batch.cc',
         'test/core/end2end/tests/filter_causes_close.cc',
         'test/core/end2end/tests/filter_context.cc',
         'test/core/end2end/tests/filter_init_fails.cc',
         'test/core/end2end/tests/filter_latency.cc',
         'test/core/end2end/tests/filter_status_code.cc',
         'test/core/end2end/tests/filtered_metadata.cc',
         'test/core/end2end/tests/graceful_server_shutdown.cc',
         'test/core/end2end/tests/grpc_authz.cc',
         'test/core/end2end/tests/high_initial_seqno.cc',
         'test/core/end2end/tests/hpack_size.cc',
         'test/core/end2end/tests/invoke_large_request.cc',
         'test/core/end2end/tests/keepalive_timeout.cc',
         'test/core/end2end/tests/large_metadata.cc',
         'test/core/end2end/tests/max_concurrent_streams.cc',
         'test/core/end2end/tests/max_connection_age.cc',
         'test/core/end2end/tests/max_connection_idle.cc',
         'test/core/end2end/tests/max_message_length.cc',
         'test/core/end2end/tests/negative_deadline.cc',
         'test/core/end2end/tests/no_error_on_hotpath.cc',
         'test/core/end2end/tests/no_logging.cc',
         'test/core/end2end/tests/no_op.cc',
         'test/core/end2end/tests/payload.cc',
         'test/core/end2end/tests/ping.cc',
         'test/core/end2end/tests/ping_pong_streaming.cc',
         'test/core/end2end/tests/proxy_auth.cc',
         'test/core/end2end/tests/registered_call.cc',
         'test/core/end2end/tests/request_with_flags.cc',
         'test/core/end2end/tests/request_with_payload.cc',
         'test/core/end2end/tests/resource_quota_server.cc',
         'test/core/end2end/tests/retry.cc',
         'test/core/end2end/tests/retry_cancel_after_first_attempt_starts.cc',
         'test/core/end2end/tests/retry_cancel_during_delay.cc',
         'test/core/end2end/tests/retry_cancel_with_multiple_send_batches.cc',
         'test/core/end2end/tests/retry_cancellation.cc',
         'test/core/end2end/tests/retry_disabled.cc',
         'test/core/end2end/tests/retry_exceeds_buffer_size_in_delay.cc',
         'test/core/end2end/tests/retry_exceeds_buffer_size_in_initial_batch.cc',
         'test/core/end2end/tests/retry_exceeds_buffer_size_in_subsequent_batch.cc',
         'test/core/end2end/tests/retry_lb_drop.cc',
         'test/core/end2end/tests/retry_lb_fail.cc',
         'test/core/end2end/tests/retry_non_retriable_status.cc',
         'test/core/end2end/tests/retry_non_retriable_status_before_recv_trailing_metadata_started.cc',
         'test/core/end2end/tests/retry_per_attempt_recv_timeout.cc',
         'test/core/end2end/tests/retry_per_attempt_recv_timeout_on_last_attempt.cc',
         'test/core/end2end/tests/retry_recv_initial_metadata.cc',
         'test/core/end2end/tests/retry_recv_message.cc',
         'test/core/end2end/tests/retry_recv_message_replay.cc',
         'test/core/end2end/tests/retry_recv_trailing_metadata_error.cc',
         'test/core/end2end/tests/retry_send_initial_metadata_refs.cc',
         'test/core/end2end/tests/retry_send_op_fails.cc',
         'test/core/end2end/tests/retry_send_recv_batch.cc',
         'test/core/end2end/tests/retry_server_pushback_delay.cc',
         'test/core/end2end/tests/retry_server_pushback_disabled.cc',
         'test/core/end2end/tests/retry_streaming.cc',
         'test/core/end2end/tests/retry_streaming_after_commit.cc',
         'test/core/end2end/tests/retry_streaming_succeeds_before_replay_finished.cc',
         'test/core/end2end/tests/retry_throttled.cc',
         'test/core/end2end/tests/retry_too_many_attempts.cc',
         'test/core/end2end/tests/retry_transparent_goaway.cc',
         'test/core/end2end/tests/retry_transparent_max_concurrent_streams.cc',
         'test/core/end2end/tests/retry_transparent_not_sent_on_wire.cc',
         'test/core/end2end/tests/retry_unref_before_finish.cc',
         'test/core/end2end/tests/retry_unref_before_recv.cc',
         'test/core/end2end/tests/server_finishes_request.cc',
         'test/core/end2end/tests/server_streaming.cc',
         'test/core/end2end/tests/shutdown_finishes_calls.cc',
         'test/core/end2end/tests/shutdown_finishes_tags.cc',
         'test/core/end2end/tests/simple_delayed_request.cc',
         'test/core/end2end/tests/simple_metadata.cc',
         'test/core/end2end/tests/simple_request.cc',
         'test/core/end2end/tests/streaming_error_response.cc',
         'test/core/end2end/tests/trailing_metadata.cc',
         'test/core/end2end/tests/write_buffering.cc',
         'test/core/end2end/tests/write_buffering_at_end.cc',
         'test/core/util/test_lb_policies.cc',
       ],
     },
     {
       'target_name': 'gpr',
       'type': 'static_library',
       'dependencies': [
         'absl/base:base',
         'absl/base:core_headers',
         'absl/memory:memory',
         'absl/random:random',
         'absl/status:status',
         'absl/strings:cord',
         'absl/strings:str_format',
         'absl/strings:strings',
         'absl/synchronization:synchronization',
         'absl/time:time',
         'absl/types:optional',
       ],
       'sources': [
         'src/core/lib/gpr/alloc.cc',
         'src/core/lib/gpr/atm.cc',
         'src/core/lib/gpr/cpu_iphone.cc',
         'src/core/lib/gpr/cpu_linux.cc',
         'src/core/lib/gpr/cpu_posix.cc',
         'src/core/lib/gpr/cpu_windows.cc',
         'src/core/lib/gpr/env_linux.cc',
         'src/core/lib/gpr/env_posix.cc',
         'src/core/lib/gpr/env_windows.cc',
         'src/core/lib/gpr/log.cc',
         'src/core/lib/gpr/log_android.cc',
         'src/core/lib/gpr/log_linux.cc',
         'src/core/lib/gpr/log_posix.cc',
         'src/core/lib/gpr/log_windows.cc',
         'src/core/lib/gpr/murmur_hash.cc',
         'src/core/lib/gpr/string.cc',
         'src/core/lib/gpr/string_posix.cc',
         'src/core/lib/gpr/string_util_windows.cc',
         'src/core/lib/gpr/string_windows.cc',
         'src/core/lib/gpr/sync.cc',
         'src/core/lib/gpr/sync_abseil.cc',
         'src/core/lib/gpr/sync_posix.cc',
         'src/core/lib/gpr/sync_windows.cc',
         'src/core/lib/gpr/time.cc',
         'src/core/lib/gpr/time_posix.cc',
         'src/core/lib/gpr/time_precise.cc',
         'src/core/lib/gpr/time_windows.cc',
         'src/core/lib/gpr/tmpfile_msys.cc',
         'src/core/lib/gpr/tmpfile_posix.cc',
         'src/core/lib/gpr/tmpfile_windows.cc',
         'src/core/lib/gpr/wrap_memcpy.cc',
         'src/core/lib/gprpp/examine_stack.cc',
         'src/core/lib/gprpp/fork.cc',
         'src/core/lib/gprpp/global_config_env.cc',
         'src/core/lib/gprpp/host_port.cc',
         'src/core/lib/gprpp/mpscq.cc',
         'src/core/lib/gprpp/stat_posix.cc',
         'src/core/lib/gprpp/stat_windows.cc',
         'src/core/lib/gprpp/thd_posix.cc',
         'src/core/lib/gprpp/thd_windows.cc',
         'src/core/lib/gprpp/time_util.cc',
         'src/core/lib/profiling/basic_timers.cc',
         'src/core/lib/profiling/stap_timers.cc',
       ],
     },
     {
       'target_name': 'grpc',
       'type': 'static_library',
       'dependencies': [
         'absl/cleanup:cleanup',
         'absl/container:flat_hash_map',
         'absl/container:flat_hash_set',
         'absl/container:inlined_vector',
         'absl/functional:bind_front',
         'absl/hash:hash',
         'absl/meta:type_traits',
         'absl/status:statusor',
         'absl/types:span',
         'absl/types:variant',
         'absl/utility:utility',
         'gpr',
         'address_sorting',
         'upb',
       ],
       'sources': [
         'src/core/ext/filters/census/grpc_context.cc',
         'src/core/ext/filters/channel_idle/channel_idle_filter.cc',
         'src/core/ext/filters/channel_idle/idle_filter_state.cc',
         'src/core/ext/filters/client_channel/backend_metric.cc',
         'src/core/ext/filters/client_channel/backup_poller.cc',
         'src/core/ext/filters/client_channel/channel_connectivity.cc',
         'src/core/ext/filters/client_channel/client_channel.cc',
         'src/core/ext/filters/client_channel/client_channel_channelz.cc',
         'src/core/ext/filters/client_channel/client_channel_factory.cc',
         'src/core/ext/filters/client_channel/client_channel_plugin.cc',
         'src/core/ext/filters/client_channel/config_selector.cc',
         'src/core/ext/filters/client_channel/dynamic_filters.cc',
         'src/core/ext/filters/client_channel/global_subchannel_pool.cc',
         'src/core/ext/filters/client_channel/health/health_check_client.cc',
         'src/core/ext/filters/client_channel/http_proxy.cc',
         'src/core/ext/filters/client_channel/lb_policy.cc',
         'src/core/ext/filters/client_channel/lb_policy/address_filtering.cc',
         'src/core/ext/filters/client_channel/lb_policy/child_policy_handler.cc',
         'src/core/ext/filters/client_channel/lb_policy/grpclb/client_load_reporting_filter.cc',
         'src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc',
         'src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_balancer_addresses.cc',
         'src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_client_stats.cc',
         'src/core/ext/filters/client_channel/lb_policy/grpclb/load_balancer_api.cc',
         'src/core/ext/filters/client_channel/lb_policy/oob_backend_metric.cc',
         'src/core/ext/filters/client_channel/lb_policy/outlier_detection/outlier_detection.cc',
         'src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc',
         'src/core/ext/filters/client_channel/lb_policy/priority/priority.cc',
         'src/core/ext/filters/client_channel/lb_policy/ring_hash/ring_hash.cc',
         'src/core/ext/filters/client_channel/lb_policy/rls/rls.cc',
         'src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc',
         'src/core/ext/filters/client_channel/lb_policy/weighted_target/weighted_target.cc',
         'src/core/ext/filters/client_channel/lb_policy/xds/cds.cc',
         'src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_impl.cc',
         'src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_manager.cc',
         'src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_resolver.cc',
         'src/core/ext/filters/client_channel/lb_policy_registry.cc',
         'src/core/ext/filters/client_channel/local_subchannel_pool.cc',
         'src/core/ext/filters/client_channel/proxy_mapper_registry.cc',
         'src/core/ext/filters/client_channel/resolver/binder/binder_resolver.cc',
         'src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc',
         'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_posix.cc',
         'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_windows.cc',
         'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.cc',
         'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_posix.cc',
         'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_windows.cc',
         'src/core/ext/filters/client_channel/resolver/dns/dns_resolver_selection.cc',
         'src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc',
         'src/core/ext/filters/client_channel/resolver/fake/fake_resolver.cc',
         'src/core/ext/filters/client_channel/resolver/google_c2p/google_c2p_resolver.cc',
         'src/core/ext/filters/client_channel/resolver/polling_resolver.cc',
         'src/core/ext/filters/client_channel/resolver/sockaddr/sockaddr_resolver.cc',
         'src/core/ext/filters/client_channel/resolver/xds/xds_resolver.cc',
         'src/core/ext/filters/client_channel/resolver_result_parsing.cc',
         'src/core/ext/filters/client_channel/retry_filter.cc',
         'src/core/ext/filters/client_channel/retry_service_config.cc',
         'src/core/ext/filters/client_channel/retry_throttle.cc',
         'src/core/ext/filters/client_channel/service_config_channel_arg_filter.cc',
         'src/core/ext/filters/client_channel/subchannel.cc',
         'src/core/ext/filters/client_channel/subchannel_pool_interface.cc',
         'src/core/ext/filters/client_channel/subchannel_stream_client.cc',
         'src/core/ext/filters/deadline/deadline_filter.cc',
         'src/core/ext/filters/fault_injection/fault_injection_filter.cc',
         'src/core/ext/filters/fault_injection/service_config_parser.cc',
         'src/core/ext/filters/http/client/http_client_filter.cc',
         'src/core/ext/filters/http/client_authority_filter.cc',
         'src/core/ext/filters/http/http_filters_plugin.cc',
         'src/core/ext/filters/http/message_compress/message_compress_filter.cc',
         'src/core/ext/filters/http/message_compress/message_decompress_filter.cc',
         'src/core/ext/filters/http/server/http_server_filter.cc',
         'src/core/ext/filters/message_size/message_size_filter.cc',
         'src/core/ext/filters/rbac/rbac_filter.cc',
         'src/core/ext/filters/rbac/rbac_service_config_parser.cc',
         'src/core/ext/filters/server_config_selector/server_config_selector.cc',
         'src/core/ext/filters/server_config_selector/server_config_selector_filter.cc',
         'src/core/ext/transport/chttp2/alpn/alpn.cc',
         'src/core/ext/transport/chttp2/client/chttp2_connector.cc',
         'src/core/ext/transport/chttp2/server/chttp2_server.cc',
         'src/core/ext/transport/chttp2/transport/bin_decoder.cc',
         'src/core/ext/transport/chttp2/transport/bin_encoder.cc',
         'src/core/ext/transport/chttp2/transport/chttp2_transport.cc',
         'src/core/ext/transport/chttp2/transport/context_list.cc',
         'src/core/ext/transport/chttp2/transport/flow_control.cc',
         'src/core/ext/transport/chttp2/transport/frame_data.cc',
         'src/core/ext/transport/chttp2/transport/frame_goaway.cc',
         'src/core/ext/transport/chttp2/transport/frame_ping.cc',
         'src/core/ext/transport/chttp2/transport/frame_rst_stream.cc',
         'src/core/ext/transport/chttp2/transport/frame_settings.cc',
         'src/core/ext/transport/chttp2/transport/frame_window_update.cc',
         'src/core/ext/transport/chttp2/transport/hpack_encoder.cc',
         'src/core/ext/transport/chttp2/transport/hpack_encoder_table.cc',
         'src/core/ext/transport/chttp2/transport/hpack_parser.cc',
         'src/core/ext/transport/chttp2/transport/hpack_parser_table.cc',
         'src/core/ext/transport/chttp2/transport/http2_settings.cc',
         'src/core/ext/transport/chttp2/transport/huffsyms.cc',
         'src/core/ext/transport/chttp2/transport/parsing.cc',
         'src/core/ext/transport/chttp2/transport/stream_lists.cc',
         'src/core/ext/transport/chttp2/transport/stream_map.cc',
         'src/core/ext/transport/chttp2/transport/varint.cc',
         'src/core/ext/transport/chttp2/transport/writing.cc',
         'src/core/ext/transport/inproc/inproc_plugin.cc',
         'src/core/ext/transport/inproc/inproc_transport.cc',
         'src/core/ext/upb-generated/envoy/admin/v3/certs.upb.c',
         'src/core/ext/upb-generated/envoy/admin/v3/clusters.upb.c',
         'src/core/ext/upb-generated/envoy/admin/v3/config_dump.upb.c',
         'src/core/ext/upb-generated/envoy/admin/v3/init_dump.upb.c',
         'src/core/ext/upb-generated/envoy/admin/v3/listeners.upb.c',
         'src/core/ext/upb-generated/envoy/admin/v3/memory.upb.c',
         'src/core/ext/upb-generated/envoy/admin/v3/metrics.upb.c',
         'src/core/ext/upb-generated/envoy/admin/v3/mutex_stats.upb.c',
         'src/core/ext/upb-generated/envoy/admin/v3/server_info.upb.c',
         'src/core/ext/upb-generated/envoy/admin/v3/tap.upb.c',
         'src/core/ext/upb-generated/envoy/annotations/deprecation.upb.c',
         'src/core/ext/upb-generated/envoy/annotations/resource.upb.c',
         'src/core/ext/upb-generated/envoy/config/accesslog/v3/accesslog.upb.c',
         'src/core/ext/upb-generated/envoy/config/bootstrap/v3/bootstrap.upb.c',
         'src/core/ext/upb-generated/envoy/config/cluster/v3/circuit_breaker.upb.c',
         'src/core/ext/upb-generated/envoy/config/cluster/v3/cluster.upb.c',
         'src/core/ext/upb-generated/envoy/config/cluster/v3/filter.upb.c',
         'src/core/ext/upb-generated/envoy/config/cluster/v3/outlier_detection.upb.c',
         'src/core/ext/upb-generated/envoy/config/common/matcher/v3/matcher.upb.c',
         'src/core/ext/upb-generated/envoy/config/core/v3/address.upb.c',
         'src/core/ext/upb-generated/envoy/config/core/v3/backoff.upb.c',
         'src/core/ext/upb-generated/envoy/config/core/v3/base.upb.c',
         'src/core/ext/upb-generated/envoy/config/core/v3/config_source.upb.c',
         'src/core/ext/upb-generated/envoy/config/core/v3/event_service_config.upb.c',
         'src/core/ext/upb-generated/envoy/config/core/v3/extension.upb.c',
         'src/core/ext/upb-generated/envoy/config/core/v3/grpc_method_list.upb.c',
         'src/core/ext/upb-generated/envoy/config/core/v3/grpc_service.upb.c',
         'src/core/ext/upb-generated/envoy/config/core/v3/health_check.upb.c',
         'src/core/ext/upb-generated/envoy/config/core/v3/http_uri.upb.c',
         'src/core/ext/upb-generated/envoy/config/core/v3/protocol.upb.c',
         'src/core/ext/upb-generated/envoy/config/core/v3/proxy_protocol.upb.c',
         'src/core/ext/upb-generated/envoy/config/core/v3/resolver.upb.c',
         'src/core/ext/upb-generated/envoy/config/core/v3/socket_option.upb.c',
         'src/core/ext/upb-generated/envoy/config/core/v3/substitution_format_string.upb.c',
         'src/core/ext/upb-generated/envoy/config/core/v3/udp_socket_config.upb.c',
         'src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint.upb.c',
         'src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint_components.upb.c',
         'src/core/ext/upb-generated/envoy/config/endpoint/v3/load_report.upb.c',
         'src/core/ext/upb-generated/envoy/config/listener/v3/api_listener.upb.c',
         'src/core/ext/upb-generated/envoy/config/listener/v3/listener.upb.c',
         'src/core/ext/upb-generated/envoy/config/listener/v3/listener_components.upb.c',
         'src/core/ext/upb-generated/envoy/config/listener/v3/quic_config.upb.c',
         'src/core/ext/upb-generated/envoy/config/listener/v3/udp_listener_config.upb.c',
         'src/core/ext/upb-generated/envoy/config/metrics/v3/metrics_service.upb.c',
         'src/core/ext/upb-generated/envoy/config/metrics/v3/stats.upb.c',
         'src/core/ext/upb-generated/envoy/config/overload/v3/overload.upb.c',
         'src/core/ext/upb-generated/envoy/config/rbac/v3/rbac.upb.c',
         'src/core/ext/upb-generated/envoy/config/route/v3/route.upb.c',
         'src/core/ext/upb-generated/envoy/config/route/v3/route_components.upb.c',
         'src/core/ext/upb-generated/envoy/config/route/v3/scoped_route.upb.c',
         'src/core/ext/upb-generated/envoy/config/tap/v3/common.upb.c',
         'src/core/ext/upb-generated/envoy/config/trace/v3/datadog.upb.c',
         'src/core/ext/upb-generated/envoy/config/trace/v3/dynamic_ot.upb.c',
         'src/core/ext/upb-generated/envoy/config/trace/v3/http_tracer.upb.c',
         'src/core/ext/upb-generated/envoy/config/trace/v3/lightstep.upb.c',
         'src/core/ext/upb-generated/envoy/config/trace/v3/opencensus.upb.c',
         'src/core/ext/upb-generated/envoy/config/trace/v3/service.upb.c',
         'src/core/ext/upb-generated/envoy/config/trace/v3/skywalking.upb.c',
         'src/core/ext/upb-generated/envoy/config/trace/v3/trace.upb.c',
         'src/core/ext/upb-generated/envoy/config/trace/v3/xray.upb.c',
         'src/core/ext/upb-generated/envoy/config/trace/v3/zipkin.upb.c',
         'src/core/ext/upb-generated/envoy/extensions/clusters/aggregate/v3/cluster.upb.c',
         'src/core/ext/upb-generated/envoy/extensions/filters/common/fault/v3/fault.upb.c',
         'src/core/ext/upb-generated/envoy/extensions/filters/http/fault/v3/fault.upb.c',
         'src/core/ext/upb-generated/envoy/extensions/filters/http/rbac/v3/rbac.upb.c',
         'src/core/ext/upb-generated/envoy/extensions/filters/http/router/v3/router.upb.c',
         'src/core/ext/upb-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upb.c',
         'src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/ring_hash/v3/ring_hash.upb.c',
         'src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/wrr_locality/v3/wrr_locality.upb.c',
         'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/cert.upb.c',
         'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/common.upb.c',
         'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/secret.upb.c',
         'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls.upb.c',
         'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upb.c',
         'src/core/ext/upb-generated/envoy/service/discovery/v3/ads.upb.c',
         'src/core/ext/upb-generated/envoy/service/discovery/v3/discovery.upb.c',
         'src/core/ext/upb-generated/envoy/service/load_stats/v3/lrs.upb.c',
         'src/core/ext/upb-generated/envoy/service/status/v3/csds.upb.c',
         'src/core/ext/upb-generated/envoy/type/http/v3/cookie.upb.c',
         'src/core/ext/upb-generated/envoy/type/http/v3/path_transformation.upb.c',
         'src/core/ext/upb-generated/envoy/type/matcher/v3/http_inputs.upb.c',
         'src/core/ext/upb-generated/envoy/type/matcher/v3/metadata.upb.c',
         'src/core/ext/upb-generated/envoy/type/matcher/v3/node.upb.c',
         'src/core/ext/upb-generated/envoy/type/matcher/v3/number.upb.c',
         'src/core/ext/upb-generated/envoy/type/matcher/v3/path.upb.c',
         'src/core/ext/upb-generated/envoy/type/matcher/v3/regex.upb.c',
         'src/core/ext/upb-generated/envoy/type/matcher/v3/string.upb.c',
         'src/core/ext/upb-generated/envoy/type/matcher/v3/struct.upb.c',
         'src/core/ext/upb-generated/envoy/type/matcher/v3/value.upb.c',
         'src/core/ext/upb-generated/envoy/type/metadata/v3/metadata.upb.c',
         'src/core/ext/upb-generated/envoy/type/tracing/v3/custom_tag.upb.c',
         'src/core/ext/upb-generated/envoy/type/v3/hash_policy.upb.c',
         'src/core/ext/upb-generated/envoy/type/v3/http.upb.c',
         'src/core/ext/upb-generated/envoy/type/v3/http_status.upb.c',
         'src/core/ext/upb-generated/envoy/type/v3/percent.upb.c',
         'src/core/ext/upb-generated/envoy/type/v3/range.upb.c',
         'src/core/ext/upb-generated/envoy/type/v3/ratelimit_unit.upb.c',
         'src/core/ext/upb-generated/envoy/type/v3/semantic_version.upb.c',
         'src/core/ext/upb-generated/envoy/type/v3/token_bucket.upb.c',
         'src/core/ext/upb-generated/google/api/annotations.upb.c',
         'src/core/ext/upb-generated/google/api/expr/v1alpha1/checked.upb.c',
         'src/core/ext/upb-generated/google/api/expr/v1alpha1/syntax.upb.c',
         'src/core/ext/upb-generated/google/api/http.upb.c',
         'src/core/ext/upb-generated/google/api/httpbody.upb.c',
         'src/core/ext/upb-generated/google/protobuf/any.upb.c',
         'src/core/ext/upb-generated/google/protobuf/descriptor.upb.c',
         'src/core/ext/upb-generated/google/protobuf/duration.upb.c',
         'src/core/ext/upb-generated/google/protobuf/empty.upb.c',
         'src/core/ext/upb-generated/google/protobuf/struct.upb.c',
         'src/core/ext/upb-generated/google/protobuf/timestamp.upb.c',
         'src/core/ext/upb-generated/google/protobuf/wrappers.upb.c',
         'src/core/ext/upb-generated/google/rpc/status.upb.c',
         'src/core/ext/upb-generated/opencensus/proto/trace/v1/trace_config.upb.c',
         'src/core/ext/upb-generated/src/proto/grpc/gcp/altscontext.upb.c',
         'src/core/ext/upb-generated/src/proto/grpc/gcp/handshaker.upb.c',
         'src/core/ext/upb-generated/src/proto/grpc/gcp/transport_security_common.upb.c',
         'src/core/ext/upb-generated/src/proto/grpc/health/v1/health.upb.c',
         'src/core/ext/upb-generated/src/proto/grpc/lb/v1/load_balancer.upb.c',
         'src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls.upb.c',
         'src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls_config.upb.c',
         'src/core/ext/upb-generated/udpa/annotations/migrate.upb.c',
         'src/core/ext/upb-generated/udpa/annotations/security.upb.c',
         'src/core/ext/upb-generated/udpa/annotations/sensitive.upb.c',
         'src/core/ext/upb-generated/udpa/annotations/status.upb.c',
         'src/core/ext/upb-generated/udpa/annotations/versioning.upb.c',
         'src/core/ext/upb-generated/validate/validate.upb.c',
         'src/core/ext/upb-generated/xds/annotations/v3/migrate.upb.c',
         'src/core/ext/upb-generated/xds/annotations/v3/security.upb.c',
         'src/core/ext/upb-generated/xds/annotations/v3/sensitive.upb.c',
         'src/core/ext/upb-generated/xds/annotations/v3/status.upb.c',
         'src/core/ext/upb-generated/xds/annotations/v3/versioning.upb.c',
         'src/core/ext/upb-generated/xds/core/v3/authority.upb.c',
         'src/core/ext/upb-generated/xds/core/v3/collection_entry.upb.c',
         'src/core/ext/upb-generated/xds/core/v3/context_params.upb.c',
         'src/core/ext/upb-generated/xds/core/v3/extension.upb.c',
         'src/core/ext/upb-generated/xds/core/v3/resource.upb.c',
         'src/core/ext/upb-generated/xds/core/v3/resource_locator.upb.c',
         'src/core/ext/upb-generated/xds/core/v3/resource_name.upb.c',
         'src/core/ext/upb-generated/xds/data/orca/v3/orca_load_report.upb.c',
         'src/core/ext/upb-generated/xds/service/orca/v3/orca.upb.c',
         'src/core/ext/upb-generated/xds/type/matcher/v3/matcher.upb.c',
         'src/core/ext/upb-generated/xds/type/matcher/v3/regex.upb.c',
         'src/core/ext/upb-generated/xds/type/matcher/v3/string.upb.c',
         'src/core/ext/upb-generated/xds/type/v3/typed_struct.upb.c',
         'src/core/ext/upbdefs-generated/envoy/admin/v3/certs.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/admin/v3/clusters.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/admin/v3/config_dump.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/admin/v3/init_dump.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/admin/v3/listeners.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/admin/v3/memory.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/admin/v3/metrics.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/admin/v3/mutex_stats.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/admin/v3/server_info.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/admin/v3/tap.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/annotations/deprecation.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/annotations/resource.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/accesslog/v3/accesslog.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/bootstrap/v3/bootstrap.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/circuit_breaker.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/cluster.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/filter.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/outlier_detection.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/common/matcher/v3/matcher.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/core/v3/address.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/core/v3/backoff.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/core/v3/base.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/core/v3/config_source.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/core/v3/event_service_config.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/core/v3/extension.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_method_list.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_service.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/core/v3/health_check.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/core/v3/http_uri.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/core/v3/protocol.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/core/v3/proxy_protocol.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/core/v3/resolver.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/core/v3/socket_option.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/core/v3/substitution_format_string.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/core/v3/udp_socket_config.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint_components.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/load_report.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/listener/v3/api_listener.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener_components.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/listener/v3/quic_config.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/listener/v3/udp_listener_config.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/metrics/v3/metrics_service.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/metrics/v3/stats.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/overload/v3/overload.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/rbac/v3/rbac.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/route/v3/route.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/route/v3/route_components.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/route/v3/scoped_route.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/tap/v3/common.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/trace/v3/datadog.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/trace/v3/dynamic_ot.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/trace/v3/http_tracer.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/trace/v3/lightstep.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/trace/v3/opencensus.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/trace/v3/service.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/trace/v3/skywalking.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/trace/v3/trace.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/trace/v3/xray.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/config/trace/v3/zipkin.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/extensions/clusters/aggregate/v3/cluster.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/extensions/filters/common/fault/v3/fault.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/extensions/filters/http/fault/v3/fault.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/extensions/filters/http/rbac/v3/rbac.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/extensions/filters/http/router/v3/router.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/cert.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/common.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/secret.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/service/discovery/v3/ads.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/service/discovery/v3/discovery.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/service/load_stats/v3/lrs.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/service/status/v3/csds.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/type/http/v3/cookie.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/type/http/v3/path_transformation.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/http_inputs.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/metadata.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/node.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/number.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/path.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/regex.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/string.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/struct.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/value.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/type/metadata/v3/metadata.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/type/tracing/v3/custom_tag.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/type/v3/hash_policy.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/type/v3/http.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/type/v3/http_status.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/type/v3/percent.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/type/v3/range.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/type/v3/ratelimit_unit.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/type/v3/semantic_version.upbdefs.c',
         'src/core/ext/upbdefs-generated/envoy/type/v3/token_bucket.upbdefs.c',
         'src/core/ext/upbdefs-generated/google/api/annotations.upbdefs.c',
         'src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/checked.upbdefs.c',
         'src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/syntax.upbdefs.c',
         'src/core/ext/upbdefs-generated/google/api/http.upbdefs.c',
         'src/core/ext/upbdefs-generated/google/api/httpbody.upbdefs.c',
         'src/core/ext/upbdefs-generated/google/protobuf/any.upbdefs.c',
         'src/core/ext/upbdefs-generated/google/protobuf/descriptor.upbdefs.c',
         'src/core/ext/upbdefs-generated/google/protobuf/duration.upbdefs.c',
         'src/core/ext/upbdefs-generated/google/protobuf/empty.upbdefs.c',
         'src/core/ext/upbdefs-generated/google/protobuf/struct.upbdefs.c',
         'src/core/ext/upbdefs-generated/google/protobuf/timestamp.upbdefs.c',
         'src/core/ext/upbdefs-generated/google/protobuf/wrappers.upbdefs.c',
         'src/core/ext/upbdefs-generated/google/rpc/status.upbdefs.c',
         'src/core/ext/upbdefs-generated/opencensus/proto/trace/v1/trace_config.upbdefs.c',
         'src/core/ext/upbdefs-generated/src/proto/grpc/lookup/v1/rls_config.upbdefs.c',
         'src/core/ext/upbdefs-generated/udpa/annotations/migrate.upbdefs.c',
         'src/core/ext/upbdefs-generated/udpa/annotations/security.upbdefs.c',
         'src/core/ext/upbdefs-generated/udpa/annotations/sensitive.upbdefs.c',
         'src/core/ext/upbdefs-generated/udpa/annotations/status.upbdefs.c',
         'src/core/ext/upbdefs-generated/udpa/annotations/versioning.upbdefs.c',
         'src/core/ext/upbdefs-generated/validate/validate.upbdefs.c',
         'src/core/ext/upbdefs-generated/xds/annotations/v3/migrate.upbdefs.c',
         'src/core/ext/upbdefs-generated/xds/annotations/v3/security.upbdefs.c',
         'src/core/ext/upbdefs-generated/xds/annotations/v3/sensitive.upbdefs.c',
         'src/core/ext/upbdefs-generated/xds/annotations/v3/status.upbdefs.c',
         'src/core/ext/upbdefs-generated/xds/annotations/v3/versioning.upbdefs.c',
         'src/core/ext/upbdefs-generated/xds/core/v3/authority.upbdefs.c',
         'src/core/ext/upbdefs-generated/xds/core/v3/collection_entry.upbdefs.c',
         'src/core/ext/upbdefs-generated/xds/core/v3/context_params.upbdefs.c',
         'src/core/ext/upbdefs-generated/xds/core/v3/extension.upbdefs.c',
         'src/core/ext/upbdefs-generated/xds/core/v3/resource.upbdefs.c',
         'src/core/ext/upbdefs-generated/xds/core/v3/resource_locator.upbdefs.c',
         'src/core/ext/upbdefs-generated/xds/core/v3/resource_name.upbdefs.c',
         'src/core/ext/upbdefs-generated/xds/type/matcher/v3/matcher.upbdefs.c',
         'src/core/ext/upbdefs-generated/xds/type/matcher/v3/regex.upbdefs.c',
         'src/core/ext/upbdefs-generated/xds/type/matcher/v3/string.upbdefs.c',
         'src/core/ext/upbdefs-generated/xds/type/v3/typed_struct.upbdefs.c',
         'src/core/ext/xds/certificate_provider_registry.cc',
         'src/core/ext/xds/certificate_provider_store.cc',
         'src/core/ext/xds/file_watcher_certificate_provider_factory.cc',
         'src/core/ext/xds/xds_api.cc',
         'src/core/ext/xds/xds_bootstrap.cc',
         'src/core/ext/xds/xds_certificate_provider.cc',
         'src/core/ext/xds/xds_channel_stack_modifier.cc',
         'src/core/ext/xds/xds_client.cc',
         'src/core/ext/xds/xds_client_stats.cc',
         'src/core/ext/xds/xds_cluster.cc',
         'src/core/ext/xds/xds_cluster_specifier_plugin.cc',
         'src/core/ext/xds/xds_common_types.cc',
         'src/core/ext/xds/xds_endpoint.cc',
         'src/core/ext/xds/xds_http_fault_filter.cc',
         'src/core/ext/xds/xds_http_filters.cc',
         'src/core/ext/xds/xds_http_rbac_filter.cc',
         'src/core/ext/xds/xds_lb_policy_registry.cc',
         'src/core/ext/xds/xds_listener.cc',
         'src/core/ext/xds/xds_resource_type.cc',
         'src/core/ext/xds/xds_route_config.cc',
         'src/core/ext/xds/xds_routing.cc',
         'src/core/ext/xds/xds_server_config_fetcher.cc',
         'src/core/lib/address_utils/parse_address.cc',
         'src/core/lib/address_utils/sockaddr_utils.cc',
         'src/core/lib/backoff/backoff.cc',
         'src/core/lib/channel/channel_args.cc',
         'src/core/lib/channel/channel_args_preconditioning.cc',
         'src/core/lib/channel/channel_stack.cc',
         'src/core/lib/channel/channel_stack_builder.cc',
         'src/core/lib/channel/channel_stack_builder_impl.cc',
         'src/core/lib/channel/channel_trace.cc',
         'src/core/lib/channel/channelz.cc',
         'src/core/lib/channel/channelz_registry.cc',
         'src/core/lib/channel/connected_channel.cc',
         'src/core/lib/channel/promise_based_filter.cc',
         'src/core/lib/channel/status_util.cc',
         'src/core/lib/compression/compression.cc',
         'src/core/lib/compression/compression_internal.cc',
         'src/core/lib/compression/message_compress.cc',
         'src/core/lib/config/core_configuration.cc',
         'src/core/lib/debug/stats.cc',
         'src/core/lib/debug/stats_data.cc',
         'src/core/lib/debug/trace.cc',
         'src/core/lib/event_engine/channel_args_endpoint_config.cc',
         'src/core/lib/event_engine/default_event_engine_factory.cc',
         'src/core/lib/event_engine/event_engine.cc',
         'src/core/lib/event_engine/iomgr_engine.cc',
         'src/core/lib/event_engine/memory_allocator.cc',
         'src/core/lib/event_engine/resolved_address.cc',
         'src/core/lib/event_engine/slice.cc',
         'src/core/lib/event_engine/slice_buffer.cc',
         'src/core/lib/event_engine/trace.cc',
         'src/core/lib/gprpp/status_helper.cc',
         'src/core/lib/gprpp/time.cc',
         'src/core/lib/http/format_request.cc',
         'src/core/lib/http/httpcli.cc',
         'src/core/lib/http/httpcli_security_connector.cc',
         'src/core/lib/http/parser.cc',
         'src/core/lib/iomgr/buffer_list.cc',
         'src/core/lib/iomgr/call_combiner.cc',
         'src/core/lib/iomgr/cfstream_handle.cc',
         'src/core/lib/iomgr/combiner.cc',
         'src/core/lib/iomgr/dualstack_socket_posix.cc',
         'src/core/lib/iomgr/endpoint.cc',
         'src/core/lib/iomgr/endpoint_cfstream.cc',
         'src/core/lib/iomgr/endpoint_pair_posix.cc',
         'src/core/lib/iomgr/endpoint_pair_windows.cc',
         'src/core/lib/iomgr/error.cc',
         'src/core/lib/iomgr/error_cfstream.cc',
         'src/core/lib/iomgr/ev_apple.cc',
         'src/core/lib/iomgr/ev_epoll1_linux.cc',
         'src/core/lib/iomgr/ev_poll_posix.cc',
         'src/core/lib/iomgr/ev_posix.cc',
         'src/core/lib/iomgr/ev_windows.cc',
         'src/core/lib/iomgr/exec_ctx.cc',
         'src/core/lib/iomgr/executor.cc',
         'src/core/lib/iomgr/executor/mpmcqueue.cc',
         'src/core/lib/iomgr/executor/threadpool.cc',
         'src/core/lib/iomgr/fork_posix.cc',
         'src/core/lib/iomgr/fork_windows.cc',
         'src/core/lib/iomgr/gethostname_fallback.cc',
         'src/core/lib/iomgr/gethostname_host_name_max.cc',
         'src/core/lib/iomgr/gethostname_sysconf.cc',
         'src/core/lib/iomgr/grpc_if_nametoindex_posix.cc',
         'src/core/lib/iomgr/grpc_if_nametoindex_unsupported.cc',
         'src/core/lib/iomgr/internal_errqueue.cc',
         'src/core/lib/iomgr/iocp_windows.cc',
         'src/core/lib/iomgr/iomgr.cc',
         'src/core/lib/iomgr/iomgr_internal.cc',
         'src/core/lib/iomgr/iomgr_posix.cc',
         'src/core/lib/iomgr/iomgr_posix_cfstream.cc',
         'src/core/lib/iomgr/iomgr_windows.cc',
         'src/core/lib/iomgr/load_file.cc',
         'src/core/lib/iomgr/lockfree_event.cc',
         'src/core/lib/iomgr/polling_entity.cc',
         'src/core/lib/iomgr/pollset.cc',
         'src/core/lib/iomgr/pollset_set.cc',
         'src/core/lib/iomgr/pollset_set_windows.cc',
         'src/core/lib/iomgr/pollset_windows.cc',
         'src/core/lib/iomgr/resolve_address.cc',
         'src/core/lib/iomgr/resolve_address_posix.cc',
         'src/core/lib/iomgr/resolve_address_windows.cc',
         'src/core/lib/iomgr/sockaddr_utils_posix.cc',
         'src/core/lib/iomgr/socket_factory_posix.cc',
         'src/core/lib/iomgr/socket_mutator.cc',
         'src/core/lib/iomgr/socket_utils_common_posix.cc',
         'src/core/lib/iomgr/socket_utils_linux.cc',
         'src/core/lib/iomgr/socket_utils_posix.cc',
         'src/core/lib/iomgr/socket_utils_windows.cc',
         'src/core/lib/iomgr/socket_windows.cc',
         'src/core/lib/iomgr/tcp_client.cc',
         'src/core/lib/iomgr/tcp_client_cfstream.cc',
         'src/core/lib/iomgr/tcp_client_posix.cc',
         'src/core/lib/iomgr/tcp_client_windows.cc',
         'src/core/lib/iomgr/tcp_posix.cc',
         'src/core/lib/iomgr/tcp_server.cc',
         'src/core/lib/iomgr/tcp_server_posix.cc',
         'src/core/lib/iomgr/tcp_server_utils_posix_common.cc',
         'src/core/lib/iomgr/tcp_server_utils_posix_ifaddrs.cc',
         'src/core/lib/iomgr/tcp_server_utils_posix_noifaddrs.cc',
         'src/core/lib/iomgr/tcp_server_windows.cc',
         'src/core/lib/iomgr/tcp_windows.cc',
         'src/core/lib/iomgr/time_averaged_stats.cc',
         'src/core/lib/iomgr/timer.cc',
         'src/core/lib/iomgr/timer_generic.cc',
         'src/core/lib/iomgr/timer_heap.cc',
         'src/core/lib/iomgr/timer_manager.cc',
         'src/core/lib/iomgr/unix_sockets_posix.cc',
         'src/core/lib/iomgr/unix_sockets_posix_noop.cc',
         'src/core/lib/iomgr/wakeup_fd_eventfd.cc',
         'src/core/lib/iomgr/wakeup_fd_nospecial.cc',
         'src/core/lib/iomgr/wakeup_fd_pipe.cc',
         'src/core/lib/iomgr/wakeup_fd_posix.cc',
         'src/core/lib/iomgr/work_serializer.cc',
         'src/core/lib/json/json_reader.cc',
         'src/core/lib/json/json_util.cc',
         'src/core/lib/json/json_writer.cc',
         'src/core/lib/matchers/matchers.cc',
         'src/core/lib/promise/activity.cc',
         'src/core/lib/promise/sleep.cc',
         'src/core/lib/resolver/resolver.cc',
         'src/core/lib/resolver/resolver_registry.cc',
         'src/core/lib/resolver/server_address.cc',
         'src/core/lib/resource_quota/api.cc',
         'src/core/lib/resource_quota/arena.cc',
         'src/core/lib/resource_quota/memory_quota.cc',
         'src/core/lib/resource_quota/resource_quota.cc',
         'src/core/lib/resource_quota/thread_quota.cc',
         'src/core/lib/resource_quota/trace.cc',
         'src/core/lib/security/authorization/authorization_policy_provider_vtable.cc',
         'src/core/lib/security/authorization/evaluate_args.cc',
         'src/core/lib/security/authorization/grpc_authorization_engine.cc',
         'src/core/lib/security/authorization/grpc_server_authz_filter.cc',
         'src/core/lib/security/authorization/matchers.cc',
         'src/core/lib/security/authorization/rbac_policy.cc',
         'src/core/lib/security/context/security_context.cc',
         'src/core/lib/security/credentials/alts/alts_credentials.cc',
         'src/core/lib/security/credentials/alts/check_gcp_environment.cc',
         'src/core/lib/security/credentials/alts/check_gcp_environment_linux.cc',
         'src/core/lib/security/credentials/alts/check_gcp_environment_no_op.cc',
         'src/core/lib/security/credentials/alts/check_gcp_environment_windows.cc',
         'src/core/lib/security/credentials/alts/grpc_alts_credentials_client_options.cc',
         'src/core/lib/security/credentials/alts/grpc_alts_credentials_options.cc',
         'src/core/lib/security/credentials/alts/grpc_alts_credentials_server_options.cc',
         'src/core/lib/security/credentials/call_creds_util.cc',
         'src/core/lib/security/credentials/channel_creds_registry_init.cc',
         'src/core/lib/security/credentials/composite/composite_credentials.cc',
         'src/core/lib/security/credentials/credentials.cc',
         'src/core/lib/security/credentials/external/aws_external_account_credentials.cc',
         'src/core/lib/security/credentials/external/aws_request_signer.cc',
         'src/core/lib/security/credentials/external/external_account_credentials.cc',
         'src/core/lib/security/credentials/external/file_external_account_credentials.cc',
         'src/core/lib/security/credentials/external/url_external_account_credentials.cc',
         'src/core/lib/security/credentials/fake/fake_credentials.cc',
         'src/core/lib/security/credentials/google_default/credentials_generic.cc',
         'src/core/lib/security/credentials/google_default/google_default_credentials.cc',
         'src/core/lib/security/credentials/iam/iam_credentials.cc',
         'src/core/lib/security/credentials/insecure/insecure_credentials.cc',
         'src/core/lib/security/credentials/jwt/json_token.cc',
         'src/core/lib/security/credentials/jwt/jwt_credentials.cc',
         'src/core/lib/security/credentials/jwt/jwt_verifier.cc',
         'src/core/lib/security/credentials/local/local_credentials.cc',
         'src/core/lib/security/credentials/oauth2/oauth2_credentials.cc',
         'src/core/lib/security/credentials/plugin/plugin_credentials.cc',
         'src/core/lib/security/credentials/ssl/ssl_credentials.cc',
         'src/core/lib/security/credentials/tls/grpc_tls_certificate_distributor.cc',
         'src/core/lib/security/credentials/tls/grpc_tls_certificate_provider.cc',
         'src/core/lib/security/credentials/tls/grpc_tls_certificate_verifier.cc',
         'src/core/lib/security/credentials/tls/grpc_tls_credentials_options.cc',
         'src/core/lib/security/credentials/tls/tls_credentials.cc',
         'src/core/lib/security/credentials/tls/tls_utils.cc',
         'src/core/lib/security/credentials/xds/xds_credentials.cc',
         'src/core/lib/security/security_connector/alts/alts_security_connector.cc',
         'src/core/lib/security/security_connector/fake/fake_security_connector.cc',
         'src/core/lib/security/security_connector/insecure/insecure_security_connector.cc',
         'src/core/lib/security/security_connector/load_system_roots_fallback.cc',
         'src/core/lib/security/security_connector/load_system_roots_linux.cc',
         'src/core/lib/security/security_connector/local/local_security_connector.cc',
         'src/core/lib/security/security_connector/security_connector.cc',
         'src/core/lib/security/security_connector/ssl/ssl_security_connector.cc',
         'src/core/lib/security/security_connector/ssl_utils.cc',
         'src/core/lib/security/security_connector/ssl_utils_config.cc',
         'src/core/lib/security/security_connector/tls/tls_security_connector.cc',
         'src/core/lib/security/transport/client_auth_filter.cc',
         'src/core/lib/security/transport/secure_endpoint.cc',
         'src/core/lib/security/transport/security_handshaker.cc',
         'src/core/lib/security/transport/server_auth_filter.cc',
         'src/core/lib/security/transport/tsi_error.cc',
         'src/core/lib/security/util/json_util.cc',
         'src/core/lib/service_config/service_config_impl.cc',
         'src/core/lib/service_config/service_config_parser.cc',
         'src/core/lib/slice/b64.cc',
         'src/core/lib/slice/percent_encoding.cc',
         'src/core/lib/slice/slice.cc',
         'src/core/lib/slice/slice_api.cc',
         'src/core/lib/slice/slice_buffer.cc',
         'src/core/lib/slice/slice_buffer_api.cc',
         'src/core/lib/slice/slice_refcount.cc',
         'src/core/lib/slice/slice_split.cc',
         'src/core/lib/slice/slice_string_helpers.cc',
         'src/core/lib/surface/api_trace.cc',
         'src/core/lib/surface/builtins.cc',
         'src/core/lib/surface/byte_buffer.cc',
         'src/core/lib/surface/byte_buffer_reader.cc',
         'src/core/lib/surface/call.cc',
         'src/core/lib/surface/call_details.cc',
         'src/core/lib/surface/call_log_batch.cc',
         'src/core/lib/surface/channel.cc',
         'src/core/lib/surface/channel_init.cc',
         'src/core/lib/surface/channel_ping.cc',
         'src/core/lib/surface/channel_stack_type.cc',
         'src/core/lib/surface/completion_queue.cc',
         'src/core/lib/surface/completion_queue_factory.cc',
         'src/core/lib/surface/event_string.cc',
         'src/core/lib/surface/init.cc',
         'src/core/lib/surface/lame_client.cc',
         'src/core/lib/surface/metadata_array.cc',
         'src/core/lib/surface/server.cc',
         'src/core/lib/surface/validate_metadata.cc',
         'src/core/lib/surface/version.cc',
         'src/core/lib/transport/bdp_estimator.cc',
+        'src/core/lib/transport/byte_stream.cc',
         'src/core/lib/transport/connectivity_state.cc',
         'src/core/lib/transport/error_utils.cc',
         'src/core/lib/transport/handshaker.cc',
         'src/core/lib/transport/handshaker_registry.cc',
         'src/core/lib/transport/http_connect_handshaker.cc',
         'src/core/lib/transport/metadata_batch.cc',
         'src/core/lib/transport/parsed_metadata.cc',
         'src/core/lib/transport/pid_controller.cc',
         'src/core/lib/transport/status_conversion.cc',
         'src/core/lib/transport/tcp_connect_handshaker.cc',
         'src/core/lib/transport/timeout_encoding.cc',
         'src/core/lib/transport/transport.cc',
         'src/core/lib/transport/transport_op_string.cc',
         'src/core/lib/uri/uri_parser.cc',
         'src/core/plugin_registry/grpc_plugin_registry.cc',
         'src/core/plugin_registry/grpc_plugin_registry_extra.cc',
         'src/core/tsi/alts/crypt/aes_gcm.cc',
         'src/core/tsi/alts/crypt/gsec.cc',
         'src/core/tsi/alts/frame_protector/alts_counter.cc',
         'src/core/tsi/alts/frame_protector/alts_crypter.cc',
         'src/core/tsi/alts/frame_protector/alts_frame_protector.cc',
         'src/core/tsi/alts/frame_protector/alts_record_protocol_crypter_common.cc',
         'src/core/tsi/alts/frame_protector/alts_seal_privacy_integrity_crypter.cc',
         'src/core/tsi/alts/frame_protector/alts_unseal_privacy_integrity_crypter.cc',
         'src/core/tsi/alts/frame_protector/frame_handler.cc',
         'src/core/tsi/alts/handshaker/alts_handshaker_client.cc',
         'src/core/tsi/alts/handshaker/alts_shared_resource.cc',
         'src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc',
         'src/core/tsi/alts/handshaker/alts_tsi_utils.cc',
         'src/core/tsi/alts/handshaker/transport_security_common_api.cc',
         'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_integrity_only_record_protocol.cc',
         'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_privacy_integrity_record_protocol.cc',
         'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol_common.cc',
         'src/core/tsi/alts/zero_copy_frame_protector/alts_iovec_record_protocol.cc',
         'src/core/tsi/alts/zero_copy_frame_protector/alts_zero_copy_grpc_protector.cc',
         'src/core/tsi/fake_transport_security.cc',
         'src/core/tsi/local_transport_security.cc',
         'src/core/tsi/ssl/key_logging/ssl_key_logging.cc',
         'src/core/tsi/ssl/session_cache/ssl_session_boringssl.cc',
         'src/core/tsi/ssl/session_cache/ssl_session_cache.cc',
         'src/core/tsi/ssl/session_cache/ssl_session_openssl.cc',
         'src/core/tsi/ssl_transport_security.cc',
         'src/core/tsi/transport_security.cc',
         'src/core/tsi/transport_security_grpc.cc',
       ],
     },
     {
       'target_name': 'grpc_test_util',
       'type': 'static_library',
       'dependencies': [
         'absl/debugging:failure_signal_handler',
         'absl/debugging:stacktrace',
         'absl/debugging:symbolize',
         'grpc',
       ],
       'sources': [
         'test/core/event_engine/test_init.cc',
         'test/core/util/build.cc',
         'test/core/util/cmdline.cc',
         'test/core/util/fuzzer_util.cc',
         'test/core/util/grpc_profiler.cc',
         'test/core/util/histogram.cc',
         'test/core/util/mock_endpoint.cc',
         'test/core/util/parse_hexstring.cc',
         'test/core/util/passthru_endpoint.cc',
         'test/core/util/port.cc',
         'test/core/util/port_isolated_runtime_environment.cc',
         'test/core/util/port_server_client.cc',
         'test/core/util/reconnect_server.cc',
         'test/core/util/resolve_localhost_ip46.cc',
         'test/core/util/slice_splitter.cc',
         'test/core/util/stack_tracer.cc',
         'test/core/util/subprocess_posix.cc',
         'test/core/util/subprocess_windows.cc',
         'test/core/util/test_config.cc',
         'test/core/util/test_tcp_server.cc',
         'test/core/util/tls_utils.cc',
         'test/core/util/tracer_util.cc',
       ],
     },
     {
       'target_name': 'grpc_test_util_unsecure',
       'type': 'static_library',
       'dependencies': [
         'absl/debugging:failure_signal_handler',
         'absl/debugging:stacktrace',
         'absl/debugging:symbolize',
         'grpc_unsecure',
       ],
       'sources': [
         'test/core/event_engine/test_init.cc',
         'test/core/util/build.cc',
         'test/core/util/cmdline.cc',
         'test/core/util/fuzzer_util.cc',
         'test/core/util/grpc_profiler.cc',
         'test/core/util/histogram.cc',
         'test/core/util/mock_endpoint.cc',
         'test/core/util/parse_hexstring.cc',
         'test/core/util/passthru_endpoint.cc',
         'test/core/util/port.cc',
         'test/core/util/port_isolated_runtime_environment.cc',
         'test/core/util/port_server_client.cc',
         'test/core/util/reconnect_server.cc',
         'test/core/util/resolve_localhost_ip46.cc',
         'test/core/util/slice_splitter.cc',
         'test/core/util/stack_tracer.cc',
         'test/core/util/subprocess_posix.cc',
         'test/core/util/subprocess_windows.cc',
         'test/core/util/test_config.cc',
         'test/core/util/test_tcp_server.cc',
         'test/core/util/tracer_util.cc',
       ],
     },
     {
       'target_name': 'grpc_unsecure',
       'type': 'static_library',
       'dependencies': [
         'absl/cleanup:cleanup',
         'absl/container:flat_hash_map',
         'absl/container:flat_hash_set',
         'absl/container:inlined_vector',
         'absl/functional:bind_front',
         'absl/hash:hash',
         'absl/meta:type_traits',
         'absl/status:statusor',
         'absl/types:span',
         'absl/types:variant',
         'absl/utility:utility',
         'gpr',
         'address_sorting',
         'upb',
       ],
       'sources': [
         'src/core/ext/filters/census/grpc_context.cc',
         'src/core/ext/filters/channel_idle/channel_idle_filter.cc',
         'src/core/ext/filters/channel_idle/idle_filter_state.cc',
         'src/core/ext/filters/client_channel/backend_metric.cc',
         'src/core/ext/filters/client_channel/backup_poller.cc',
         'src/core/ext/filters/client_channel/channel_connectivity.cc',
         'src/core/ext/filters/client_channel/client_channel.cc',
         'src/core/ext/filters/client_channel/client_channel_channelz.cc',
         'src/core/ext/filters/client_channel/client_channel_factory.cc',
         'src/core/ext/filters/client_channel/client_channel_plugin.cc',
         'src/core/ext/filters/client_channel/config_selector.cc',
         'src/core/ext/filters/client_channel/dynamic_filters.cc',
         'src/core/ext/filters/client_channel/global_subchannel_pool.cc',
         'src/core/ext/filters/client_channel/health/health_check_client.cc',
         'src/core/ext/filters/client_channel/http_proxy.cc',
         'src/core/ext/filters/client_channel/lb_policy.cc',
         'src/core/ext/filters/client_channel/lb_policy/address_filtering.cc',
         'src/core/ext/filters/client_channel/lb_policy/child_policy_handler.cc',
         'src/core/ext/filters/client_channel/lb_policy/grpclb/client_load_reporting_filter.cc',
         'src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc',
         'src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_balancer_addresses.cc',
         'src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_client_stats.cc',
         'src/core/ext/filters/client_channel/lb_policy/grpclb/load_balancer_api.cc',
         'src/core/ext/filters/client_channel/lb_policy/oob_backend_metric.cc',
         'src/core/ext/filters/client_channel/lb_policy/outlier_detection/outlier_detection.cc',
         'src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc',
         'src/core/ext/filters/client_channel/lb_policy/priority/priority.cc',
         'src/core/ext/filters/client_channel/lb_policy/ring_hash/ring_hash.cc',
         'src/core/ext/filters/client_channel/lb_policy/rls/rls.cc',
         'src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc',
         'src/core/ext/filters/client_channel/lb_policy/weighted_target/weighted_target.cc',
         'src/core/ext/filters/client_channel/lb_policy_registry.cc',
         'src/core/ext/filters/client_channel/local_subchannel_pool.cc',
         'src/core/ext/filters/client_channel/proxy_mapper_registry.cc',
         'src/core/ext/filters/client_channel/resolver/binder/binder_resolver.cc',
         'src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc',
         'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_posix.cc',
         'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_windows.cc',
         'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.cc',
         'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_posix.cc',
         'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_windows.cc',
         'src/core/ext/filters/client_channel/resolver/dns/dns_resolver_selection.cc',
         'src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc',
         'src/core/ext/filters/client_channel/resolver/fake/fake_resolver.cc',
         'src/core/ext/filters/client_channel/resolver/polling_resolver.cc',
         'src/core/ext/filters/client_channel/resolver/sockaddr/sockaddr_resolver.cc',
         'src/core/ext/filters/client_channel/resolver_result_parsing.cc',
         'src/core/ext/filters/client_channel/retry_filter.cc',
         'src/core/ext/filters/client_channel/retry_service_config.cc',
         'src/core/ext/filters/client_channel/retry_throttle.cc',
         'src/core/ext/filters/client_channel/service_config_channel_arg_filter.cc',
         'src/core/ext/filters/client_channel/subchannel.cc',
         'src/core/ext/filters/client_channel/subchannel_pool_interface.cc',
         'src/core/ext/filters/client_channel/subchannel_stream_client.cc',
         'src/core/ext/filters/deadline/deadline_filter.cc',
         'src/core/ext/filters/fault_injection/fault_injection_filter.cc',
         'src/core/ext/filters/fault_injection/service_config_parser.cc',
         'src/core/ext/filters/http/client/http_client_filter.cc',
         'src/core/ext/filters/http/client_authority_filter.cc',
         'src/core/ext/filters/http/http_filters_plugin.cc',
         'src/core/ext/filters/http/message_compress/message_compress_filter.cc',
         'src/core/ext/filters/http/message_compress/message_decompress_filter.cc',
         'src/core/ext/filters/http/server/http_server_filter.cc',
         'src/core/ext/filters/message_size/message_size_filter.cc',
         'src/core/ext/transport/chttp2/alpn/alpn.cc',
         'src/core/ext/transport/chttp2/client/chttp2_connector.cc',
         'src/core/ext/transport/chttp2/server/chttp2_server.cc',
         'src/core/ext/transport/chttp2/transport/bin_decoder.cc',
         'src/core/ext/transport/chttp2/transport/bin_encoder.cc',
         'src/core/ext/transport/chttp2/transport/chttp2_transport.cc',
         'src/core/ext/transport/chttp2/transport/context_list.cc',
         'src/core/ext/transport/chttp2/transport/flow_control.cc',
         'src/core/ext/transport/chttp2/transport/frame_data.cc',
         'src/core/ext/transport/chttp2/transport/frame_goaway.cc',
         'src/core/ext/transport/chttp2/transport/frame_ping.cc',
         'src/core/ext/transport/chttp2/transport/frame_rst_stream.cc',
         'src/core/ext/transport/chttp2/transport/frame_settings.cc',
         'src/core/ext/transport/chttp2/transport/frame_window_update.cc',
         'src/core/ext/transport/chttp2/transport/hpack_encoder.cc',
         'src/core/ext/transport/chttp2/transport/hpack_encoder_table.cc',
         'src/core/ext/transport/chttp2/transport/hpack_parser.cc',
         'src/core/ext/transport/chttp2/transport/hpack_parser_table.cc',
         'src/core/ext/transport/chttp2/transport/http2_settings.cc',
         'src/core/ext/transport/chttp2/transport/huffsyms.cc',
         'src/core/ext/transport/chttp2/transport/parsing.cc',
         'src/core/ext/transport/chttp2/transport/stream_lists.cc',
         'src/core/ext/transport/chttp2/transport/stream_map.cc',
         'src/core/ext/transport/chttp2/transport/varint.cc',
         'src/core/ext/transport/chttp2/transport/writing.cc',
         'src/core/ext/transport/inproc/inproc_plugin.cc',
         'src/core/ext/transport/inproc/inproc_transport.cc',
         'src/core/ext/upb-generated/google/api/annotations.upb.c',
         'src/core/ext/upb-generated/google/api/http.upb.c',
         'src/core/ext/upb-generated/google/protobuf/any.upb.c',
         'src/core/ext/upb-generated/google/protobuf/descriptor.upb.c',
         'src/core/ext/upb-generated/google/protobuf/duration.upb.c',
         'src/core/ext/upb-generated/google/protobuf/empty.upb.c',
         'src/core/ext/upb-generated/google/protobuf/struct.upb.c',
         'src/core/ext/upb-generated/google/protobuf/timestamp.upb.c',
         'src/core/ext/upb-generated/google/protobuf/wrappers.upb.c',
         'src/core/ext/upb-generated/google/rpc/status.upb.c',
         'src/core/ext/upb-generated/src/proto/grpc/health/v1/health.upb.c',
         'src/core/ext/upb-generated/src/proto/grpc/lb/v1/load_balancer.upb.c',
         'src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls.upb.c',
         'src/core/ext/upb-generated/validate/validate.upb.c',
         'src/core/ext/upb-generated/xds/data/orca/v3/orca_load_report.upb.c',
         'src/core/ext/upb-generated/xds/service/orca/v3/orca.upb.c',
         'src/core/lib/address_utils/parse_address.cc',
         'src/core/lib/address_utils/sockaddr_utils.cc',
         'src/core/lib/backoff/backoff.cc',
         'src/core/lib/channel/channel_args.cc',
         'src/core/lib/channel/channel_args_preconditioning.cc',
         'src/core/lib/channel/channel_stack.cc',
         'src/core/lib/channel/channel_stack_builder.cc',
         'src/core/lib/channel/channel_stack_builder_impl.cc',
         'src/core/lib/channel/channel_trace.cc',
         'src/core/lib/channel/channelz.cc',
         'src/core/lib/channel/channelz_registry.cc',
         'src/core/lib/channel/connected_channel.cc',
         'src/core/lib/channel/promise_based_filter.cc',
         'src/core/lib/channel/status_util.cc',
         'src/core/lib/compression/compression.cc',
         'src/core/lib/compression/compression_internal.cc',
         'src/core/lib/compression/message_compress.cc',
         'src/core/lib/config/core_configuration.cc',
         'src/core/lib/debug/stats.cc',
         'src/core/lib/debug/stats_data.cc',
         'src/core/lib/debug/trace.cc',
         'src/core/lib/event_engine/channel_args_endpoint_config.cc',
         'src/core/lib/event_engine/default_event_engine_factory.cc',
         'src/core/lib/event_engine/event_engine.cc',
         'src/core/lib/event_engine/iomgr_engine.cc',
         'src/core/lib/event_engine/memory_allocator.cc',
         'src/core/lib/event_engine/resolved_address.cc',
         'src/core/lib/event_engine/slice.cc',
         'src/core/lib/event_engine/slice_buffer.cc',
         'src/core/lib/event_engine/trace.cc',
         'src/core/lib/gprpp/status_helper.cc',
         'src/core/lib/gprpp/time.cc',
         'src/core/lib/http/format_request.cc',
         'src/core/lib/http/httpcli.cc',
         'src/core/lib/http/parser.cc',
         'src/core/lib/iomgr/buffer_list.cc',
         'src/core/lib/iomgr/call_combiner.cc',
         'src/core/lib/iomgr/cfstream_handle.cc',
         'src/core/lib/iomgr/combiner.cc',
         'src/core/lib/iomgr/dualstack_socket_posix.cc',
         'src/core/lib/iomgr/endpoint.cc',
         'src/core/lib/iomgr/endpoint_cfstream.cc',
         'src/core/lib/iomgr/endpoint_pair_posix.cc',
         'src/core/lib/iomgr/endpoint_pair_windows.cc',
         'src/core/lib/iomgr/error.cc',
         'src/core/lib/iomgr/error_cfstream.cc',
         'src/core/lib/iomgr/ev_apple.cc',
         'src/core/lib/iomgr/ev_epoll1_linux.cc',
         'src/core/lib/iomgr/ev_poll_posix.cc',
         'src/core/lib/iomgr/ev_posix.cc',
         'src/core/lib/iomgr/ev_windows.cc',
         'src/core/lib/iomgr/exec_ctx.cc',
         'src/core/lib/iomgr/executor.cc',
         'src/core/lib/iomgr/executor/mpmcqueue.cc',
         'src/core/lib/iomgr/executor/threadpool.cc',
         'src/core/lib/iomgr/fork_posix.cc',
         'src/core/lib/iomgr/fork_windows.cc',
         'src/core/lib/iomgr/gethostname_fallback.cc',
         'src/core/lib/iomgr/gethostname_host_name_max.cc',
         'src/core/lib/iomgr/gethostname_sysconf.cc',
         'src/core/lib/iomgr/grpc_if_nametoindex_posix.cc',
         'src/core/lib/iomgr/grpc_if_nametoindex_unsupported.cc',
         'src/core/lib/iomgr/internal_errqueue.cc',
         'src/core/lib/iomgr/iocp_windows.cc',
         'src/core/lib/iomgr/iomgr.cc',
         'src/core/lib/iomgr/iomgr_internal.cc',
         'src/core/lib/iomgr/iomgr_posix.cc',
         'src/core/lib/iomgr/iomgr_posix_cfstream.cc',
         'src/core/lib/iomgr/iomgr_windows.cc',
         'src/core/lib/iomgr/load_file.cc',
         'src/core/lib/iomgr/lockfree_event.cc',
         'src/core/lib/iomgr/polling_entity.cc',
         'src/core/lib/iomgr/pollset.cc',
         'src/core/lib/iomgr/pollset_set.cc',
         'src/core/lib/iomgr/pollset_set_windows.cc',
         'src/core/lib/iomgr/pollset_windows.cc',
         'src/core/lib/iomgr/resolve_address.cc',
         'src/core/lib/iomgr/resolve_address_posix.cc',
         'src/core/lib/iomgr/resolve_address_windows.cc',
         'src/core/lib/iomgr/sockaddr_utils_posix.cc',
         'src/core/lib/iomgr/socket_factory_posix.cc',
         'src/core/lib/iomgr/socket_mutator.cc',
         'src/core/lib/iomgr/socket_utils_common_posix.cc',
         'src/core/lib/iomgr/socket_utils_linux.cc',
         'src/core/lib/iomgr/socket_utils_posix.cc',
         'src/core/lib/iomgr/socket_utils_windows.cc',
         'src/core/lib/iomgr/socket_windows.cc',
         'src/core/lib/iomgr/tcp_client.cc',
         'src/core/lib/iomgr/tcp_client_cfstream.cc',
         'src/core/lib/iomgr/tcp_client_posix.cc',
         'src/core/lib/iomgr/tcp_client_windows.cc',
         'src/core/lib/iomgr/tcp_posix.cc',
         'src/core/lib/iomgr/tcp_server.cc',
         'src/core/lib/iomgr/tcp_server_posix.cc',
         'src/core/lib/iomgr/tcp_server_utils_posix_common.cc',
         'src/core/lib/iomgr/tcp_server_utils_posix_ifaddrs.cc',
         'src/core/lib/iomgr/tcp_server_utils_posix_noifaddrs.cc',
         'src/core/lib/iomgr/tcp_server_windows.cc',
         'src/core/lib/iomgr/tcp_windows.cc',
         'src/core/lib/iomgr/time_averaged_stats.cc',
         'src/core/lib/iomgr/timer.cc',
         'src/core/lib/iomgr/timer_generic.cc',
         'src/core/lib/iomgr/timer_heap.cc',
         'src/core/lib/iomgr/timer_manager.cc',
         'src/core/lib/iomgr/unix_sockets_posix.cc',
         'src/core/lib/iomgr/unix_sockets_posix_noop.cc',
         'src/core/lib/iomgr/wakeup_fd_eventfd.cc',
         'src/core/lib/iomgr/wakeup_fd_nospecial.cc',
         'src/core/lib/iomgr/wakeup_fd_pipe.cc',
         'src/core/lib/iomgr/wakeup_fd_posix.cc',
         'src/core/lib/iomgr/work_serializer.cc',
         'src/core/lib/json/json_reader.cc',
         'src/core/lib/json/json_util.cc',
         'src/core/lib/json/json_writer.cc',
         'src/core/lib/promise/activity.cc',
         'src/core/lib/promise/sleep.cc',
         'src/core/lib/resolver/resolver.cc',
         'src/core/lib/resolver/resolver_registry.cc',
         'src/core/lib/resolver/server_address.cc',
         'src/core/lib/resource_quota/api.cc',
         'src/core/lib/resource_quota/arena.cc',
         'src/core/lib/resource_quota/memory_quota.cc',
         'src/core/lib/resource_quota/resource_quota.cc',
         'src/core/lib/resource_quota/thread_quota.cc',
         'src/core/lib/resource_quota/trace.cc',
         'src/core/lib/security/authorization/authorization_policy_provider_vtable.cc',
         'src/core/lib/security/authorization/evaluate_args.cc',
         'src/core/lib/security/authorization/grpc_server_authz_filter.cc',
         'src/core/lib/security/context/security_context.cc',
         'src/core/lib/security/credentials/call_creds_util.cc',
         'src/core/lib/security/credentials/composite/composite_credentials.cc',
         'src/core/lib/security/credentials/credentials.cc',
         'src/core/lib/security/credentials/fake/fake_credentials.cc',
         'src/core/lib/security/credentials/insecure/insecure_credentials.cc',
         'src/core/lib/security/credentials/plugin/plugin_credentials.cc',
         'src/core/lib/security/credentials/tls/tls_utils.cc',
         'src/core/lib/security/security_connector/fake/fake_security_connector.cc',
         'src/core/lib/security/security_connector/insecure/insecure_security_connector.cc',
         'src/core/lib/security/security_connector/load_system_roots_fallback.cc',
         'src/core/lib/security/security_connector/load_system_roots_linux.cc',
         'src/core/lib/security/security_connector/security_connector.cc',
         'src/core/lib/security/transport/client_auth_filter.cc',
         'src/core/lib/security/transport/secure_endpoint.cc',
         'src/core/lib/security/transport/security_handshaker.cc',
         'src/core/lib/security/transport/server_auth_filter.cc',
         'src/core/lib/security/transport/tsi_error.cc',
         'src/core/lib/security/util/json_util.cc',
         'src/core/lib/service_config/service_config_impl.cc',
         'src/core/lib/service_config/service_config_parser.cc',
         'src/core/lib/slice/b64.cc',
         'src/core/lib/slice/percent_encoding.cc',
         'src/core/lib/slice/slice.cc',
         'src/core/lib/slice/slice_api.cc',
         'src/core/lib/slice/slice_buffer.cc',
         'src/core/lib/slice/slice_buffer_api.cc',
         'src/core/lib/slice/slice_refcount.cc',
         'src/core/lib/slice/slice_split.cc',
         'src/core/lib/slice/slice_string_helpers.cc',
         'src/core/lib/surface/api_trace.cc',
         'src/core/lib/surface/builtins.cc',
         'src/core/lib/surface/byte_buffer.cc',
         'src/core/lib/surface/byte_buffer_reader.cc',
         'src/core/lib/surface/call.cc',
         'src/core/lib/surface/call_details.cc',
         'src/core/lib/surface/call_log_batch.cc',
         'src/core/lib/surface/channel.cc',
         'src/core/lib/surface/channel_init.cc',
         'src/core/lib/surface/channel_ping.cc',
         'src/core/lib/surface/channel_stack_type.cc',
         'src/core/lib/surface/completion_queue.cc',
         'src/core/lib/surface/completion_queue_factory.cc',
         'src/core/lib/surface/event_string.cc',
         'src/core/lib/surface/init.cc',
         'src/core/lib/surface/lame_client.cc',
         'src/core/lib/surface/metadata_array.cc',
         'src/core/lib/surface/server.cc',
         'src/core/lib/surface/validate_metadata.cc',
         'src/core/lib/surface/version.cc',
         'src/core/lib/transport/bdp_estimator.cc',
+        'src/core/lib/transport/byte_stream.cc',
         'src/core/lib/transport/connectivity_state.cc',
         'src/core/lib/transport/error_utils.cc',
         'src/core/lib/transport/handshaker.cc',
         'src/core/lib/transport/handshaker_registry.cc',
         'src/core/lib/transport/http_connect_handshaker.cc',
         'src/core/lib/transport/metadata_batch.cc',
         'src/core/lib/transport/parsed_metadata.cc',
         'src/core/lib/transport/pid_controller.cc',
         'src/core/lib/transport/status_conversion.cc',
         'src/core/lib/transport/tcp_connect_handshaker.cc',
         'src/core/lib/transport/timeout_encoding.cc',
         'src/core/lib/transport/transport.cc',
         'src/core/lib/transport/transport_op_string.cc',
         'src/core/lib/uri/uri_parser.cc',
         'src/core/plugin_registry/grpc_plugin_registry.cc',
         'src/core/plugin_registry/grpc_plugin_registry_noextra.cc',
         'src/core/tsi/fake_transport_security.cc',
         'src/core/tsi/local_transport_security.cc',
         'src/core/tsi/transport_security.cc',
         'src/core/tsi/transport_security_grpc.cc',
       ],
     },
     {
       'target_name': 'benchmark_helpers',
       'type': 'static_library',
       'dependencies': [
         'benchmark',
         'grpc++_unsecure',
         'grpc_test_util_unsecure',
         'grpc++_test_config',
       ],
       'sources': [
         'src/proto/grpc/testing/echo.proto',
         'src/proto/grpc/testing/echo_messages.proto',
         'src/proto/grpc/testing/simple_messages.proto',
         'src/proto/grpc/testing/xds/v3/orca_load_report.proto',
         'test/cpp/microbenchmarks/helpers.cc',
       ],
     },
     {
       'target_name': 'grpc++',
       'type': 'static_library',
       'dependencies': [
         'grpc',
       ],
       'sources': [
         'src/core/ext/transport/binder/client/binder_connector.cc',
         'src/core/ext/transport/binder/client/channel_create.cc',
         'src/core/ext/transport/binder/client/channel_create_impl.cc',
         'src/core/ext/transport/binder/client/connection_id_generator.cc',
         'src/core/ext/transport/binder/client/endpoint_binder_pool.cc',
         'src/core/ext/transport/binder/client/jni_utils.cc',
         'src/core/ext/transport/binder/client/security_policy_setting.cc',
         'src/core/ext/transport/binder/security_policy/binder_security_policy.cc',
         'src/core/ext/transport/binder/server/binder_server.cc',
         'src/core/ext/transport/binder/server/binder_server_credentials.cc',
         'src/core/ext/transport/binder/transport/binder_transport.cc',
         'src/core/ext/transport/binder/utils/ndk_binder.cc',
         'src/core/ext/transport/binder/utils/transport_stream_receiver_impl.cc',
         'src/core/ext/transport/binder/wire_format/binder_android.cc',
         'src/core/ext/transport/binder/wire_format/binder_constants.cc',
         'src/core/ext/transport/binder/wire_format/transaction.cc',
         'src/core/ext/transport/binder/wire_format/wire_reader_impl.cc',
         'src/core/ext/transport/binder/wire_format/wire_writer.cc',
         'src/cpp/client/channel_cc.cc',
         'src/cpp/client/client_callback.cc',
         'src/cpp/client/client_context.cc',
         'src/cpp/client/client_interceptor.cc',
         'src/cpp/client/create_channel.cc',
         'src/cpp/client/create_channel_internal.cc',
         'src/cpp/client/create_channel_posix.cc',
         'src/cpp/client/credentials_cc.cc',
         'src/cpp/client/insecure_credentials.cc',
         'src/cpp/client/secure_credentials.cc',
         'src/cpp/client/xds_credentials.cc',
         'src/cpp/codegen/codegen_init.cc',
         'src/cpp/common/alarm.cc',
         'src/cpp/common/auth_property_iterator.cc',
         'src/cpp/common/channel_arguments.cc',
         'src/cpp/common/channel_filter.cc',
         'src/cpp/common/completion_queue_cc.cc',
         'src/cpp/common/core_codegen.cc',
         'src/cpp/common/resource_quota_cc.cc',
         'src/cpp/common/rpc_method.cc',
         'src/cpp/common/secure_auth_context.cc',
         'src/cpp/common/secure_channel_arguments.cc',
         'src/cpp/common/secure_create_auth_context.cc',
         'src/cpp/common/tls_certificate_provider.cc',
         'src/cpp/common/tls_certificate_verifier.cc',
         'src/cpp/common/tls_credentials_options.cc',
         'src/cpp/common/validate_service_config.cc',
         'src/cpp/common/version_cc.cc',
         'src/cpp/server/async_generic_service.cc',
         'src/cpp/server/channel_argument_option.cc',
         'src/cpp/server/create_default_thread_pool.cc',
         'src/cpp/server/dynamic_thread_pool.cc',
         'src/cpp/server/external_connection_acceptor_impl.cc',
         'src/cpp/server/health/default_health_check_service.cc',
         'src/cpp/server/health/health_check_service.cc',
         'src/cpp/server/health/health_check_service_server_builder_option.cc',
         'src/cpp/server/insecure_server_credentials.cc',
         'src/cpp/server/orca/call_metric_recorder.cc',
         'src/cpp/server/secure_server_credentials.cc',
         'src/cpp/server/server_builder.cc',
         'src/cpp/server/server_callback.cc',
         'src/cpp/server/server_cc.cc',
         'src/cpp/server/server_context.cc',
         'src/cpp/server/server_credentials.cc',
         'src/cpp/server/server_posix.cc',
         'src/cpp/server/xds_server_credentials.cc',
         'src/cpp/thread_manager/thread_manager.cc',
         'src/cpp/util/byte_buffer_cc.cc',
         'src/cpp/util/status.cc',
         'src/cpp/util/string_ref.cc',
         'src/cpp/util/time_cc.cc',
       ],
     },
     {
       'target_name': 'grpc++_alts',
       'type': 'static_library',
       'dependencies': [
         'grpc++',
       ],
       'sources': [
         'src/cpp/common/alts_context.cc',
         'src/cpp/common/alts_util.cc',
       ],
     },
     {
       'target_name': 'grpc++_error_details',
       'type': 'static_library',
       'dependencies': [
         'grpc++',
       ],
       'sources': [
         'src/cpp/util/error_details.cc',
       ],
     },
     {
       'target_name': 'grpc++_reflection',
       'type': 'static_library',
       'dependencies': [
         'grpc++',
       ],
       'sources': [
         'src/proto/grpc/reflection/v1alpha/reflection.proto',
         'src/cpp/ext/proto_server_reflection.cc',
         'src/cpp/ext/proto_server_reflection_plugin.cc',
       ],
     },
     {
       'target_name': 'grpc++_test',
       'type': 'static_library',
       'dependencies': [
         'grpc++',
       ],
       'sources': [
         'src/cpp/client/channel_test_peer.cc',
       ],
     },
     {
       'target_name': 'grpc++_test_config',
       'type': 'static_library',
       'dependencies': [
         'absl/flags:parse',
         'gpr',
       ],
       'sources': [
         'test/cpp/util/test_config_cc.cc',
       ],
     },
     {
       'target_name': 'grpc++_test_util',
       'type': 'static_library',
       'dependencies': [
         'absl/flags:flag',
         'grpc++',
         'grpc_test_util',
       ],
       'sources': [
         'test/core/end2end/data/client_certs.cc',
         'test/core/end2end/data/server1_cert.cc',
         'test/core/end2end/data/server1_key.cc',
         'test/core/end2end/data/test_root_cert.cc',
         'test/cpp/util/byte_buffer_proto_helper.cc',
         'test/cpp/util/create_test_channel.cc',
         'test/cpp/util/string_ref_helper.cc',
         'test/cpp/util/subprocess.cc',
         'test/cpp/util/test_credentials_provider.cc',
       ],
     },
     {
       'target_name': 'grpc++_unsecure',
       'type': 'static_library',
       'dependencies': [
         'grpc_unsecure',
       ],
       'sources': [
         'src/cpp/client/channel_cc.cc',
         'src/cpp/client/client_callback.cc',
         'src/cpp/client/client_context.cc',
         'src/cpp/client/client_interceptor.cc',
         'src/cpp/client/create_channel.cc',
         'src/cpp/client/create_channel_internal.cc',
         'src/cpp/client/create_channel_posix.cc',
         'src/cpp/client/credentials_cc.cc',
         'src/cpp/client/insecure_credentials.cc',
         'src/cpp/codegen/codegen_init.cc',
         'src/cpp/common/alarm.cc',
         'src/cpp/common/channel_arguments.cc',
         'src/cpp/common/channel_filter.cc',
         'src/cpp/common/completion_queue_cc.cc',
         'src/cpp/common/core_codegen.cc',
         'src/cpp/common/insecure_create_auth_context.cc',
         'src/cpp/common/resource_quota_cc.cc',
         'src/cpp/common/rpc_method.cc',
         'src/cpp/common/validate_service_config.cc',
         'src/cpp/common/version_cc.cc',
         'src/cpp/server/async_generic_service.cc',
         'src/cpp/server/channel_argument_option.cc',
         'src/cpp/server/create_default_thread_pool.cc',
         'src/cpp/server/dynamic_thread_pool.cc',
         'src/cpp/server/external_connection_acceptor_impl.cc',
         'src/cpp/server/health/default_health_check_service.cc',
         'src/cpp/server/health/health_check_service.cc',
         'src/cpp/server/health/health_check_service_server_builder_option.cc',
         'src/cpp/server/insecure_server_credentials.cc',
         'src/cpp/server/orca/call_metric_recorder.cc',
         'src/cpp/server/server_builder.cc',
         'src/cpp/server/server_callback.cc',
         'src/cpp/server/server_cc.cc',
         'src/cpp/server/server_context.cc',
         'src/cpp/server/server_credentials.cc',
         'src/cpp/server/server_posix.cc',
         'src/cpp/thread_manager/thread_manager.cc',
         'src/cpp/util/byte_buffer_cc.cc',
         'src/cpp/util/status.cc',
         'src/cpp/util/string_ref.cc',
         'src/cpp/util/time_cc.cc',
       ],
     },
     {
       'target_name': 'grpc_plugin_support',
       'type': 'static_library',
       'dependencies': [
       ],
       'sources': [
         'src/compiler/cpp_generator.cc',
         'src/compiler/csharp_generator.cc',
         'src/compiler/node_generator.cc',
         'src/compiler/objective_c_generator.cc',
         'src/compiler/php_generator.cc',
         'src/compiler/python_generator.cc',
         'src/compiler/ruby_generator.cc',
       ],
     },
     {
       'target_name': 'grpcpp_channelz',
       'type': 'static_library',
       'dependencies': [
         'grpc++',
       ],
       'sources': [
         'src/proto/grpc/channelz/channelz.proto',
         'src/cpp/server/channelz/channelz_service.cc',
         'src/cpp/server/channelz/channelz_service_plugin.cc',
       ],
     },
     {
       'target_name': 'boringssl',
       'type': 'static_library',
       'dependencies': [
       ],
       'sources': [
         'third_party/boringssl-with-bazel/err_data.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/a_bitstr.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/a_bool.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/a_d2i_fp.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/a_dup.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/a_enum.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/a_gentm.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/a_i2d_fp.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/a_int.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/a_mbstr.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/a_object.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/a_octet.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/a_print.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/a_strex.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/a_strnid.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/a_time.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/a_type.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/a_utctm.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/a_utf8.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/asn1_lib.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/asn1_par.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/asn_pack.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/f_int.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/f_string.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/tasn_dec.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/tasn_enc.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/tasn_fre.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/tasn_new.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/tasn_typ.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/tasn_utl.c',
         'third_party/boringssl-with-bazel/src/crypto/asn1/time_support.c',
         'third_party/boringssl-with-bazel/src/crypto/base64/base64.c',
         'third_party/boringssl-with-bazel/src/crypto/bio/bio.c',
         'third_party/boringssl-with-bazel/src/crypto/bio/bio_mem.c',
         'third_party/boringssl-with-bazel/src/crypto/bio/connect.c',
         'third_party/boringssl-with-bazel/src/crypto/bio/fd.c',
         'third_party/boringssl-with-bazel/src/crypto/bio/file.c',
         'third_party/boringssl-with-bazel/src/crypto/bio/hexdump.c',
         'third_party/boringssl-with-bazel/src/crypto/bio/pair.c',
         'third_party/boringssl-with-bazel/src/crypto/bio/printf.c',
         'third_party/boringssl-with-bazel/src/crypto/bio/socket.c',
         'third_party/boringssl-with-bazel/src/crypto/bio/socket_helper.c',
         'third_party/boringssl-with-bazel/src/crypto/blake2/blake2.c',
         'third_party/boringssl-with-bazel/src/crypto/bn_extra/bn_asn1.c',
         'third_party/boringssl-with-bazel/src/crypto/bn_extra/convert.c',
         'third_party/boringssl-with-bazel/src/crypto/buf/buf.c',
         'third_party/boringssl-with-bazel/src/crypto/bytestring/asn1_compat.c',
         'third_party/boringssl-with-bazel/src/crypto/bytestring/ber.c',
         'third_party/boringssl-with-bazel/src/crypto/bytestring/cbb.c',
         'third_party/boringssl-with-bazel/src/crypto/bytestring/cbs.c',
         'third_party/boringssl-with-bazel/src/crypto/bytestring/unicode.c',
         'third_party/boringssl-with-bazel/src/crypto/chacha/chacha.c',
         'third_party/boringssl-with-bazel/src/crypto/cipher_extra/cipher_extra.c',
         'third_party/boringssl-with-bazel/src/crypto/cipher_extra/derive_key.c',
         'third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_aesccm.c',
         'third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_aesctrhmac.c',
         'third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_aesgcmsiv.c',
         'third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_chacha20poly1305.c',
         'third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_null.c',
         'third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_rc2.c',
         'third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_rc4.c',
         'third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_tls.c',
         'third_party/boringssl-with-bazel/src/crypto/cipher_extra/tls_cbc.c',
         'third_party/boringssl-with-bazel/src/crypto/cmac/cmac.c',
         'third_party/boringssl-with-bazel/src/crypto/conf/conf.c',
         'third_party/boringssl-with-bazel/src/crypto/cpu-aarch64-fuchsia.c',
         'third_party/boringssl-with-bazel/src/crypto/cpu-aarch64-linux.c',
         'third_party/boringssl-with-bazel/src/crypto/cpu-aarch64-win.c',
         'third_party/boringssl-with-bazel/src/crypto/cpu-arm-linux.c',
         'third_party/boringssl-with-bazel/src/crypto/cpu-arm.c',
         'third_party/boringssl-with-bazel/src/crypto/cpu-intel.c',
         'third_party/boringssl-with-bazel/src/crypto/cpu-ppc64le.c',
         'third_party/boringssl-with-bazel/src/crypto/crypto.c',
         'third_party/boringssl-with-bazel/src/crypto/curve25519/curve25519.c',
         'third_party/boringssl-with-bazel/src/crypto/curve25519/spake25519.c',
         'third_party/boringssl-with-bazel/src/crypto/dh_extra/dh_asn1.c',
         'third_party/boringssl-with-bazel/src/crypto/dh_extra/params.c',
         'third_party/boringssl-with-bazel/src/crypto/digest_extra/digest_extra.c',
         'third_party/boringssl-with-bazel/src/crypto/dsa/dsa.c',
         'third_party/boringssl-with-bazel/src/crypto/dsa/dsa_asn1.c',
         'third_party/boringssl-with-bazel/src/crypto/ec_extra/ec_asn1.c',
         'third_party/boringssl-with-bazel/src/crypto/ec_extra/ec_derive.c',
         'third_party/boringssl-with-bazel/src/crypto/ec_extra/hash_to_curve.c',
         'third_party/boringssl-with-bazel/src/crypto/ecdh_extra/ecdh_extra.c',
         'third_party/boringssl-with-bazel/src/crypto/ecdsa_extra/ecdsa_asn1.c',
         'third_party/boringssl-with-bazel/src/crypto/engine/engine.c',
         'third_party/boringssl-with-bazel/src/crypto/err/err.c',
         'third_party/boringssl-with-bazel/src/crypto/evp/digestsign.c',
         'third_party/boringssl-with-bazel/src/crypto/evp/evp.c',
         'third_party/boringssl-with-bazel/src/crypto/evp/evp_asn1.c',
         'third_party/boringssl-with-bazel/src/crypto/evp/evp_ctx.c',
         'third_party/boringssl-with-bazel/src/crypto/evp/p_dsa_asn1.c',
         'third_party/boringssl-with-bazel/src/crypto/evp/p_ec.c',
         'third_party/boringssl-with-bazel/src/crypto/evp/p_ec_asn1.c',
         'third_party/boringssl-with-bazel/src/crypto/evp/p_ed25519.c',
         'third_party/boringssl-with-bazel/src/crypto/evp/p_ed25519_asn1.c',
         'third_party/boringssl-with-bazel/src/crypto/evp/p_rsa.c',
         'third_party/boringssl-with-bazel/src/crypto/evp/p_rsa_asn1.c',
         'third_party/boringssl-with-bazel/src/crypto/evp/p_x25519.c',
         'third_party/boringssl-with-bazel/src/crypto/evp/p_x25519_asn1.c',
         'third_party/boringssl-with-bazel/src/crypto/evp/pbkdf.c',
         'third_party/boringssl-with-bazel/src/crypto/evp/print.c',
         'third_party/boringssl-with-bazel/src/crypto/evp/scrypt.c',
         'third_party/boringssl-with-bazel/src/crypto/evp/sign.c',
         'third_party/boringssl-with-bazel/src/crypto/ex_data.c',
         'third_party/boringssl-with-bazel/src/crypto/fipsmodule/bcm.c',
         'third_party/boringssl-with-bazel/src/crypto/fipsmodule/fips_shared_support.c',
         'third_party/boringssl-with-bazel/src/crypto/hkdf/hkdf.c',
         'third_party/boringssl-with-bazel/src/crypto/hpke/hpke.c',
         'third_party/boringssl-with-bazel/src/crypto/hrss/hrss.c',
         'third_party/boringssl-with-bazel/src/crypto/lhash/lhash.c',
         'third_party/boringssl-with-bazel/src/crypto/mem.c',
         'third_party/boringssl-with-bazel/src/crypto/obj/obj.c',
         'third_party/boringssl-with-bazel/src/crypto/obj/obj_xref.c',
         'third_party/boringssl-with-bazel/src/crypto/pem/pem_all.c',
         'third_party/boringssl-with-bazel/src/crypto/pem/pem_info.c',
         'third_party/boringssl-with-bazel/src/crypto/pem/pem_lib.c',
         'third_party/boringssl-with-bazel/src/crypto/pem/pem_oth.c',
         'third_party/boringssl-with-bazel/src/crypto/pem/pem_pk8.c',
         'third_party/boringssl-with-bazel/src/crypto/pem/pem_pkey.c',
         'third_party/boringssl-with-bazel/src/crypto/pem/pem_x509.c',
         'third_party/boringssl-with-bazel/src/crypto/pem/pem_xaux.c',
         'third_party/boringssl-with-bazel/src/crypto/pkcs7/pkcs7.c',
         'third_party/boringssl-with-bazel/src/crypto/pkcs7/pkcs7_x509.c',
         'third_party/boringssl-with-bazel/src/crypto/pkcs8/p5_pbev2.c',
         'third_party/boringssl-with-bazel/src/crypto/pkcs8/pkcs8.c',
         'third_party/boringssl-with-bazel/src/crypto/pkcs8/pkcs8_x509.c',
         'third_party/boringssl-with-bazel/src/crypto/poly1305/poly1305.c',
         'third_party/boringssl-with-bazel/src/crypto/poly1305/poly1305_arm.c',
         'third_party/boringssl-with-bazel/src/crypto/poly1305/poly1305_vec.c',
         'third_party/boringssl-with-bazel/src/crypto/pool/pool.c',
         'third_party/boringssl-with-bazel/src/crypto/rand_extra/deterministic.c',
         'third_party/boringssl-with-bazel/src/crypto/rand_extra/forkunsafe.c',
         'third_party/boringssl-with-bazel/src/crypto/rand_extra/fuchsia.c',
         'third_party/boringssl-with-bazel/src/crypto/rand_extra/passive.c',
         'third_party/boringssl-with-bazel/src/crypto/rand_extra/rand_extra.c',
         'third_party/boringssl-with-bazel/src/crypto/rand_extra/windows.c',
         'third_party/boringssl-with-bazel/src/crypto/rc4/rc4.c',
         'third_party/boringssl-with-bazel/src/crypto/refcount_c11.c',
         'third_party/boringssl-with-bazel/src/crypto/refcount_lock.c',
         'third_party/boringssl-with-bazel/src/crypto/rsa_extra/rsa_asn1.c',
         'third_party/boringssl-with-bazel/src/crypto/rsa_extra/rsa_print.c',
         'third_party/boringssl-with-bazel/src/crypto/siphash/siphash.c',
         'third_party/boringssl-with-bazel/src/crypto/stack/stack.c',
         'third_party/boringssl-with-bazel/src/crypto/thread.c',
         'third_party/boringssl-with-bazel/src/crypto/thread_none.c',
         'third_party/boringssl-with-bazel/src/crypto/thread_pthread.c',
         'third_party/boringssl-with-bazel/src/crypto/thread_win.c',
         'third_party/boringssl-with-bazel/src/crypto/trust_token/pmbtoken.c',
         'third_party/boringssl-with-bazel/src/crypto/trust_token/trust_token.c',
         'third_party/boringssl-with-bazel/src/crypto/trust_token/voprf.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/a_digest.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/a_sign.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/a_verify.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/algorithm.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/asn1_gen.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/by_dir.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/by_file.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/i2d_pr.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/name_print.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/rsa_pss.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/t_crl.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/t_req.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/t_x509.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/t_x509a.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x509.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x509_att.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x509_cmp.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x509_d2.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x509_def.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x509_ext.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x509_lu.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x509_obj.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x509_req.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x509_set.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x509_trs.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x509_txt.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x509_v3.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x509_vfy.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x509_vpm.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x509cset.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x509name.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x509rset.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x509spki.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x_algor.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x_all.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x_attrib.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x_crl.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x_exten.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x_info.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x_name.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x_pkey.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x_pubkey.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x_req.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x_sig.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x_spki.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x_val.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x_x509.c',
         'third_party/boringssl-with-bazel/src/crypto/x509/x_x509a.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_cache.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_data.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_lib.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_map.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_node.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_tree.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_akey.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_akeya.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_alt.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_bcons.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_bitst.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_conf.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_cpols.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_crld.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_enum.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_extku.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_genn.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_ia5.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_info.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_int.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_lib.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_ncons.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_ocsp.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_pci.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_pcia.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_pcons.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_pmaps.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_prn.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_purp.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_skey.c',
         'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_utl.c',
         'third_party/boringssl-with-bazel/src/ssl/bio_ssl.cc',
         'third_party/boringssl-with-bazel/src/ssl/d1_both.cc',
         'third_party/boringssl-with-bazel/src/ssl/d1_lib.cc',
         'third_party/boringssl-with-bazel/src/ssl/d1_pkt.cc',
         'third_party/boringssl-with-bazel/src/ssl/d1_srtp.cc',
         'third_party/boringssl-with-bazel/src/ssl/dtls_method.cc',
         'third_party/boringssl-with-bazel/src/ssl/dtls_record.cc',
         'third_party/boringssl-with-bazel/src/ssl/encrypted_client_hello.cc',
         'third_party/boringssl-with-bazel/src/ssl/extensions.cc',
         'third_party/boringssl-with-bazel/src/ssl/handoff.cc',
         'third_party/boringssl-with-bazel/src/ssl/handshake.cc',
         'third_party/boringssl-with-bazel/src/ssl/handshake_client.cc',
         'third_party/boringssl-with-bazel/src/ssl/handshake_server.cc',
         'third_party/boringssl-with-bazel/src/ssl/s3_both.cc',
         'third_party/boringssl-with-bazel/src/ssl/s3_lib.cc',
         'third_party/boringssl-with-bazel/src/ssl/s3_pkt.cc',
         'third_party/boringssl-with-bazel/src/ssl/ssl_aead_ctx.cc',
         'third_party/boringssl-with-bazel/src/ssl/ssl_asn1.cc',
         'third_party/boringssl-with-bazel/src/ssl/ssl_buffer.cc',
         'third_party/boringssl-with-bazel/src/ssl/ssl_cert.cc',
         'third_party/boringssl-with-bazel/src/ssl/ssl_cipher.cc',
         'third_party/boringssl-with-bazel/src/ssl/ssl_file.cc',
         'third_party/boringssl-with-bazel/src/ssl/ssl_key_share.cc',
         'third_party/boringssl-with-bazel/src/ssl/ssl_lib.cc',
         'third_party/boringssl-with-bazel/src/ssl/ssl_privkey.cc',
         'third_party/boringssl-with-bazel/src/ssl/ssl_session.cc',
         'third_party/boringssl-with-bazel/src/ssl/ssl_stat.cc',
         'third_party/boringssl-with-bazel/src/ssl/ssl_transcript.cc',
         'third_party/boringssl-with-bazel/src/ssl/ssl_versions.cc',
         'third_party/boringssl-with-bazel/src/ssl/ssl_x509.cc',
         'third_party/boringssl-with-bazel/src/ssl/t1_enc.cc',
         'third_party/boringssl-with-bazel/src/ssl/tls13_both.cc',
         'third_party/boringssl-with-bazel/src/ssl/tls13_client.cc',
         'third_party/boringssl-with-bazel/src/ssl/tls13_enc.cc',
         'third_party/boringssl-with-bazel/src/ssl/tls13_server.cc',
         'third_party/boringssl-with-bazel/src/ssl/tls_method.cc',
         'third_party/boringssl-with-bazel/src/ssl/tls_record.cc',
       ],
     },
     {
       'target_name': 'boringssl_test_util',
       'type': 'static_library',
       'dependencies': [
       ],
       'sources': [
         'third_party/boringssl-with-bazel/src/crypto/test/file_test.cc',
         'third_party/boringssl-with-bazel/src/crypto/test/malloc.cc',
         'third_party/boringssl-with-bazel/src/crypto/test/test_util.cc',
         'third_party/boringssl-with-bazel/src/crypto/test/wycheproof_util.cc',
       ],
     },
     {
       'target_name': 'benchmark',
       'type': 'static_library',
       'dependencies': [
       ],
       'sources': [
         'third_party/benchmark/src/benchmark.cc',
         'third_party/benchmark/src/benchmark_api_internal.cc',
         'third_party/benchmark/src/benchmark_main.cc',
         'third_party/benchmark/src/benchmark_name.cc',
         'third_party/benchmark/src/benchmark_register.cc',
         'third_party/benchmark/src/benchmark_runner.cc',
         'third_party/benchmark/src/colorprint.cc',
         'third_party/benchmark/src/commandlineflags.cc',
         'third_party/benchmark/src/complexity.cc',
         'third_party/benchmark/src/console_reporter.cc',
         'third_party/benchmark/src/counter.cc',
         'third_party/benchmark/src/csv_reporter.cc',
         'third_party/benchmark/src/json_reporter.cc',
         'third_party/benchmark/src/perf_counters.cc',
         'third_party/benchmark/src/reporter.cc',
         'third_party/benchmark/src/sleep.cc',
         'third_party/benchmark/src/statistics.cc',
         'third_party/benchmark/src/string_util.cc',
         'third_party/benchmark/src/sysinfo.cc',
         'third_party/benchmark/src/timers.cc',
       ],
     },
     {
       'target_name': 're2',
       'type': 'static_library',
       'dependencies': [
       ],
       'sources': [
         'third_party/re2/re2/bitstate.cc',
         'third_party/re2/re2/compile.cc',
         'third_party/re2/re2/dfa.cc',
         'third_party/re2/re2/filtered_re2.cc',
         'third_party/re2/re2/mimics_pcre.cc',
         'third_party/re2/re2/nfa.cc',
         'third_party/re2/re2/onepass.cc',
         'third_party/re2/re2/parse.cc',
         'third_party/re2/re2/perl_groups.cc',
         'third_party/re2/re2/prefilter.cc',
         'third_party/re2/re2/prefilter_tree.cc',
         'third_party/re2/re2/prog.cc',
         'third_party/re2/re2/re2.cc',
         'third_party/re2/re2/regexp.cc',
         'third_party/re2/re2/set.cc',
         'third_party/re2/re2/simplify.cc',
         'third_party/re2/re2/stringpiece.cc',
         'third_party/re2/re2/tostring.cc',
         'third_party/re2/re2/unicode_casefold.cc',
         'third_party/re2/re2/unicode_groups.cc',
         'third_party/re2/util/pcre.cc',
         'third_party/re2/util/rune.cc',
         'third_party/re2/util/strutil.cc',
       ],
     },
     {
       'target_name': 'upb',
       'type': 'static_library',
       'dependencies': [
       ],
       'sources': [
         'third_party/upb/third_party/utf8_range/naive.c',
         'third_party/upb/third_party/utf8_range/range2-neon.c',
         'third_party/upb/third_party/utf8_range/range2-sse.c',
         'third_party/upb/upb/decode_fast.c',
         'third_party/upb/upb/decode.c',
         'third_party/upb/upb/def.c',
         'third_party/upb/upb/encode.c',
         'third_party/upb/upb/json_encode.c',
         'third_party/upb/upb/msg.c',
         'third_party/upb/upb/reflection.c',
         'third_party/upb/upb/table.c',
         'third_party/upb/upb/text_encode.c',
         'third_party/upb/upb/upb.c',
         'src/core/ext/upb-generated/google/protobuf/descriptor.upb.c',
         'src/core/ext/upbdefs-generated/google/protobuf/descriptor.upbdefs.c',
       ],
     },
     {
       'target_name': 'z',
       'type': 'static_library',
       'dependencies': [
       ],
       'sources': [
         'third_party/zlib/adler32.c',
         'third_party/zlib/compress.c',
         'third_party/zlib/crc32.c',
         'third_party/zlib/deflate.c',
         'third_party/zlib/gzclose.c',
         'third_party/zlib/gzlib.c',
         'third_party/zlib/gzread.c',
         'third_party/zlib/gzwrite.c',
         'third_party/zlib/infback.c',
         'third_party/zlib/inffast.c',
         'third_party/zlib/inflate.c',
         'third_party/zlib/inftrees.c',
         'third_party/zlib/trees.c',
         'third_party/zlib/uncompr.c',
         'third_party/zlib/zutil.c',
       ],
     },
   ]
 }
diff --git a/include/grpc/event_engine/slice_buffer.h b/include/grpc/event_engine/slice_buffer.h
index 3861717e7b..609b6ea084 100644
--- a/include/grpc/event_engine/slice_buffer.h
+++ b/include/grpc/event_engine/slice_buffer.h
@@ -36,83 +36,77 @@ namespace experimental {
 /// A Wrapper around \a grpc_slice_buffer pointer.
 ///
 /// A slice buffer holds the memory for a collection of slices.
 /// The SliceBuffer object itself is meant to only hide the C-style API,
 /// and won't hold the data itself. In terms of lifespan, the
 /// grpc_slice_buffer ought to be kept somewhere inside the caller's objects,
 /// like a transport or an endpoint.
 ///
 /// This lifespan rule is likely to change in the future, as we may
 /// collapse the grpc_slice_buffer structure straight into this class.
 ///
 /// The SliceBuffer API is basically a replica of the grpc_slice_buffer's,
 /// and its documentation will move here once we remove the C structure,
 /// which should happen before the Event Engine's API is no longer
 /// an experimental API.
 class SliceBuffer {
  public:
   explicit SliceBuffer() { grpc_slice_buffer_init(&slice_buffer_); }
   SliceBuffer(const SliceBuffer& other) = delete;
   SliceBuffer(SliceBuffer&& other) noexcept
       : slice_buffer_(other.slice_buffer_) {
-    grpc_slice_buffer_init(&slice_buffer_);
+    grpc_slice_buffer_reset_and_unref(&slice_buffer_);
     grpc_slice_buffer_swap(&slice_buffer_, &other.slice_buffer_);
   }
   /// Upon destruction, the underlying raw slice buffer is cleaned out and all
   /// slices are unreffed.
   ~SliceBuffer() { grpc_slice_buffer_destroy(&slice_buffer_); }
 
-  SliceBuffer& operator=(const SliceBuffer&) = delete;
-  SliceBuffer& operator=(SliceBuffer&& other) noexcept {
-    grpc_slice_buffer_swap(&slice_buffer_, &other.slice_buffer_);
-    return *this;
-  }
-
   /// Appends a new slice into the SliceBuffer and makes an attempt to merge
   /// this slice with the last slice in the SliceBuffer.
   void Append(Slice slice);
 
   /// Adds a new slice into the SliceBuffer at the next available index.
   /// Returns the index at which the new slice is added.
   size_t AppendIndexed(Slice slice);
 
   /// Returns the number of slices held by the SliceBuffer.
   size_t Count() { return slice_buffer_.count; }
 
   /// Removes/deletes the last n bytes in the SliceBuffer.
   void RemoveLastNBytes(size_t n) {
     grpc_slice_buffer_trim_end(&slice_buffer_, n, nullptr);
   }
 
   /// Move the first n bytes of the SliceBuffer into a memory pointed to by dst.
   void MoveFirstNBytesIntoBuffer(size_t n, void* dst) {
     grpc_slice_buffer_move_first_into_buffer(&slice_buffer_, n, dst);
   }
 
   /// Removes and unrefs all slices in the SliceBuffer.
   void Clear() { grpc_slice_buffer_reset_and_unref(&slice_buffer_); }
 
   /// Removes the first slice in the SliceBuffer and returns it.
   Slice TakeFirst();
 
   /// Prepends the slice to the the front of the SliceBuffer.
   void Prepend(Slice slice);
 
   /// Increased the ref-count of slice at the specified index and returns the
   /// associated slice.
   Slice RefSlice(size_t index);
 
   /// The total number of bytes held by the SliceBuffer
   size_t Length() { return slice_buffer_.length; }
 
   /// Return a pointer to the back raw grpc_slice_buffer
-  grpc_slice_buffer* c_slice_buffer() { return &slice_buffer_; }
+  grpc_slice_buffer* RawSliceBuffer() { return &slice_buffer_; }
 
  private:
   /// The backing raw slice buffer.
   grpc_slice_buffer slice_buffer_;
 };
 
 }  // namespace experimental
 }  // namespace grpc_event_engine
 
 #endif  // GRPC_EVENT_ENGINE_SLICE_BUFFER_H
diff --git a/package.xml b/package.xml
index fcfc02942e..ffc854f073 100644
--- a/package.xml
+++ b/package.xml
@@ -1,2447 +1,2449 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <package packagerversion="1.9.5" version="2.0" xmlns="http://pear.php.net/dtd/package-2.0" xmlns:tasks="http://pear.php.net/dtd/tasks-1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pear.php.net/dtd/tasks-1.0 http://pear.php.net/dtd/tasks-1.0.xsd http://pear.php.net/dtd/package-2.0 http://pear.php.net/dtd/package-2.0.xsd">
  <name>grpc</name>
  <channel>pecl.php.net</channel>
  <summary>A high performance, open source, general RPC framework that puts mobile and HTTP/2 first.</summary>
  <description>Remote Procedure Calls (RPCs) provide a useful abstraction for building distributed applications and services. The libraries in this repository provide a concrete implementation of the gRPC protocol, layered over HTTP/2. These libraries enable communication between clients and servers using any combination of the supported languages.</description>
  <lead>
   <name>Stanley Cheung</name>
   <user>stanleycheung</user>
   <email>grpc-packages@google.com</email>
   <active>yes</active>
  </lead>
  <date>2019-09-24</date>
  <time>16:06:07</time>
  <version>
   <release>1.48.0dev</release>
   <api>1.48.0dev</api>
  </version>
  <stability>
   <release>beta</release>
   <api>beta</api>
  </stability>
  <license>Apache 2.0</license>
  <notes>
 - gRPC Core 1.48.0 update
  </notes>
  <contents>
   <dir baseinstalldir="/" name="/">
     <file baseinstalldir="/" name="config.m4" role="src" />
     <file baseinstalldir="/" name="config.w32" role="src" />
     <file baseinstalldir="/" name="src/php/README.md" role="src" />
     <file baseinstalldir="/" name="include/grpc/byte_buffer.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/byte_buffer_reader.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/census.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/compression.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/event_engine/endpoint_config.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/event_engine/event_engine.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/event_engine/internal/memory_allocator_impl.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/event_engine/memory_allocator.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/event_engine/memory_request.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/event_engine/port.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/event_engine/slice.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/event_engine/slice_buffer.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/fork.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/grpc.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/grpc_posix.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/grpc_security.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/grpc_security_constants.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/impl/codegen/atm.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/impl/codegen/atm_gcc_atomic.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/impl/codegen/atm_gcc_sync.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/impl/codegen/atm_windows.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/impl/codegen/byte_buffer.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/impl/codegen/byte_buffer_reader.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/impl/codegen/compression_types.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/impl/codegen/connectivity_state.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/impl/codegen/fork.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/impl/codegen/gpr_slice.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/impl/codegen/gpr_types.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/impl/codegen/grpc_types.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/impl/codegen/log.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/impl/codegen/port_platform.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/impl/codegen/propagation_bits.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/impl/codegen/slice.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/impl/codegen/status.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/impl/codegen/sync.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/impl/codegen/sync_abseil.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/impl/codegen/sync_custom.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/impl/codegen/sync_generic.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/impl/codegen/sync_posix.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/impl/codegen/sync_windows.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/load_reporting.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/slice.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/slice_buffer.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/status.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/support/alloc.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/support/atm.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/support/atm_gcc_atomic.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/support/atm_gcc_sync.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/support/atm_windows.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/support/cpu.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/support/log.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/support/log_windows.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/support/port_platform.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/support/string_util.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/support/sync.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/support/sync_abseil.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/support/sync_custom.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/support/sync_generic.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/support/sync_posix.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/support/sync_windows.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/support/thd_id.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/support/time.h" role="src" />
     <file baseinstalldir="/" name="include/grpc/support/workaround_list.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/census/grpc_context.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/channel_idle/channel_idle_filter.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/channel_idle/channel_idle_filter.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/channel_idle/idle_filter_state.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/channel_idle/idle_filter_state.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/backend_metric.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/backend_metric.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/backup_poller.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/backup_poller.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/channel_connectivity.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/client_channel.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/client_channel.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/client_channel_channelz.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/client_channel_channelz.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/client_channel_factory.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/client_channel_factory.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/client_channel_plugin.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/config_selector.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/config_selector.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/connector.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/dynamic_filters.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/dynamic_filters.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/global_subchannel_pool.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/global_subchannel_pool.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/health/health_check_client.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/health/health_check_client.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/http_proxy.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/http_proxy.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/address_filtering.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/address_filtering.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/backend_metric_data.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/child_policy_handler.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/child_policy_handler.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/grpclb/client_load_reporting_filter.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/grpclb/client_load_reporting_filter.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_balancer_addresses.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_balancer_addresses.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_client_stats.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_client_stats.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/grpclb/load_balancer_api.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/grpclb/load_balancer_api.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/oob_backend_metric.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/oob_backend_metric.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/outlier_detection/outlier_detection.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/outlier_detection/outlier_detection.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/priority/priority.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/ring_hash/ring_hash.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/ring_hash/ring_hash.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/rls/rls.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/subchannel_list.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/weighted_target/weighted_target.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/xds/cds.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/xds/xds.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/xds/xds_channel_args.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_impl.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_manager.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_resolver.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy_factory.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy_registry.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/lb_policy_registry.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/local_subchannel_pool.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/local_subchannel_pool.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/proxy_mapper.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/proxy_mapper_registry.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/proxy_mapper_registry.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/resolver/binder/binder_resolver.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/resolver/dns/dns_resolver_selection.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/resolver/dns/dns_resolver_selection.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/resolver/fake/fake_resolver.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/resolver/fake/fake_resolver.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/resolver/google_c2p/google_c2p_resolver.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/resolver/polling_resolver.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/resolver/polling_resolver.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/resolver/sockaddr/sockaddr_resolver.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/resolver/xds/xds_resolver.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/resolver/xds/xds_resolver.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/resolver_result_parsing.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/resolver_result_parsing.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/retry_filter.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/retry_filter.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/retry_service_config.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/retry_service_config.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/retry_throttle.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/retry_throttle.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/service_config_channel_arg_filter.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/subchannel.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/subchannel.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/subchannel_interface.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/subchannel_interface_internal.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/subchannel_pool_interface.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/subchannel_pool_interface.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/subchannel_stream_client.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/client_channel/subchannel_stream_client.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/deadline/deadline_filter.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/deadline/deadline_filter.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/fault_injection/fault_injection_filter.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/fault_injection/fault_injection_filter.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/fault_injection/service_config_parser.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/fault_injection/service_config_parser.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/http/client/http_client_filter.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/http/client/http_client_filter.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/http/client_authority_filter.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/http/client_authority_filter.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/http/http_filters_plugin.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/http/message_compress/message_compress_filter.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/http/message_compress/message_compress_filter.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/http/message_compress/message_decompress_filter.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/http/message_compress/message_decompress_filter.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/http/server/http_server_filter.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/http/server/http_server_filter.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/message_size/message_size_filter.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/message_size/message_size_filter.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/rbac/rbac_filter.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/rbac/rbac_filter.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/rbac/rbac_service_config_parser.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/rbac/rbac_service_config_parser.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/server_config_selector/server_config_selector.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/server_config_selector/server_config_selector.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/server_config_selector/server_config_selector_filter.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/filters/server_config_selector/server_config_selector_filter.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/alpn/alpn.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/alpn/alpn.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/client/chttp2_connector.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/client/chttp2_connector.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/server/chttp2_server.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/server/chttp2_server.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/bin_decoder.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/bin_decoder.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/bin_encoder.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/bin_encoder.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/chttp2_transport.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/chttp2_transport.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/context_list.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/context_list.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/flow_control.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/flow_control.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/frame.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/frame_data.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/frame_data.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/frame_goaway.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/frame_goaway.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/frame_ping.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/frame_ping.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/frame_rst_stream.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/frame_rst_stream.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/frame_settings.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/frame_settings.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/frame_window_update.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/frame_window_update.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/hpack_constants.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/hpack_encoder.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/hpack_encoder.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/hpack_encoder_table.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/hpack_encoder_table.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/hpack_parser.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/hpack_parser.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/hpack_parser_table.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/hpack_parser_table.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/http2_settings.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/http2_settings.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/huffsyms.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/huffsyms.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/internal.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/parsing.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/stream_lists.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/stream_map.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/stream_map.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/varint.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/varint.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/chttp2/transport/writing.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/inproc/inproc_plugin.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/inproc/inproc_transport.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/transport/inproc/inproc_transport.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/admin/v3/certs.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/admin/v3/certs.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/admin/v3/clusters.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/admin/v3/clusters.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/admin/v3/config_dump.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/admin/v3/config_dump.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/admin/v3/init_dump.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/admin/v3/init_dump.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/admin/v3/listeners.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/admin/v3/listeners.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/admin/v3/memory.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/admin/v3/memory.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/admin/v3/metrics.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/admin/v3/metrics.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/admin/v3/mutex_stats.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/admin/v3/mutex_stats.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/admin/v3/server_info.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/admin/v3/server_info.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/admin/v3/tap.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/admin/v3/tap.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/annotations/deprecation.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/annotations/deprecation.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/annotations/resource.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/annotations/resource.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/accesslog/v3/accesslog.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/accesslog/v3/accesslog.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/bootstrap/v3/bootstrap.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/bootstrap/v3/bootstrap.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/cluster/v3/circuit_breaker.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/cluster/v3/circuit_breaker.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/cluster/v3/cluster.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/cluster/v3/cluster.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/cluster/v3/filter.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/cluster/v3/filter.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/cluster/v3/outlier_detection.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/cluster/v3/outlier_detection.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/common/matcher/v3/matcher.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/common/matcher/v3/matcher.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/address.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/address.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/backoff.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/backoff.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/base.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/base.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/config_source.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/config_source.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/event_service_config.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/event_service_config.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/extension.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/extension.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/grpc_method_list.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/grpc_method_list.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/grpc_service.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/grpc_service.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/health_check.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/health_check.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/http_uri.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/http_uri.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/protocol.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/protocol.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/proxy_protocol.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/proxy_protocol.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/resolver.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/resolver.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/socket_option.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/socket_option.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/substitution_format_string.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/substitution_format_string.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/udp_socket_config.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/core/v3/udp_socket_config.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint_components.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint_components.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/endpoint/v3/load_report.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/endpoint/v3/load_report.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/listener/v3/api_listener.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/listener/v3/api_listener.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/listener/v3/listener.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/listener/v3/listener.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/listener/v3/listener_components.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/listener/v3/listener_components.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/listener/v3/quic_config.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/listener/v3/quic_config.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/listener/v3/udp_listener_config.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/listener/v3/udp_listener_config.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/metrics/v3/metrics_service.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/metrics/v3/metrics_service.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/metrics/v3/stats.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/metrics/v3/stats.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/overload/v3/overload.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/overload/v3/overload.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/rbac/v3/rbac.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/rbac/v3/rbac.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/route/v3/route.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/route/v3/route.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/route/v3/route_components.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/route/v3/route_components.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/route/v3/scoped_route.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/route/v3/scoped_route.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/tap/v3/common.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/tap/v3/common.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/trace/v3/datadog.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/trace/v3/datadog.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/trace/v3/dynamic_ot.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/trace/v3/dynamic_ot.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/trace/v3/http_tracer.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/trace/v3/http_tracer.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/trace/v3/lightstep.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/trace/v3/lightstep.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/trace/v3/opencensus.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/trace/v3/opencensus.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/trace/v3/service.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/trace/v3/service.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/trace/v3/skywalking.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/trace/v3/skywalking.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/trace/v3/trace.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/trace/v3/trace.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/trace/v3/xray.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/trace/v3/xray.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/trace/v3/zipkin.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/config/trace/v3/zipkin.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/clusters/aggregate/v3/cluster.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/clusters/aggregate/v3/cluster.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/filters/common/fault/v3/fault.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/filters/common/fault/v3/fault.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/filters/http/fault/v3/fault.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/filters/http/fault/v3/fault.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/filters/http/rbac/v3/rbac.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/filters/http/rbac/v3/rbac.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/filters/http/router/v3/router.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/filters/http/router/v3/router.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/ring_hash/v3/ring_hash.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/ring_hash/v3/ring_hash.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/wrr_locality/v3/wrr_locality.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/wrr_locality/v3/wrr_locality.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/cert.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/cert.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/common.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/common.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/secret.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/secret.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/service/discovery/v3/ads.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/service/discovery/v3/ads.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/service/discovery/v3/discovery.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/service/discovery/v3/discovery.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/service/load_stats/v3/lrs.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/service/load_stats/v3/lrs.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/service/status/v3/csds.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/service/status/v3/csds.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/http/v3/cookie.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/http/v3/cookie.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/http/v3/path_transformation.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/http/v3/path_transformation.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/matcher/v3/http_inputs.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/matcher/v3/http_inputs.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/matcher/v3/metadata.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/matcher/v3/metadata.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/matcher/v3/node.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/matcher/v3/node.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/matcher/v3/number.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/matcher/v3/number.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/matcher/v3/path.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/matcher/v3/path.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/matcher/v3/regex.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/matcher/v3/regex.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/matcher/v3/string.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/matcher/v3/string.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/matcher/v3/struct.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/matcher/v3/struct.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/matcher/v3/value.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/matcher/v3/value.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/metadata/v3/metadata.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/metadata/v3/metadata.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/tracing/v3/custom_tag.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/tracing/v3/custom_tag.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/v3/hash_policy.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/v3/hash_policy.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/v3/http.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/v3/http.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/v3/http_status.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/v3/http_status.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/v3/percent.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/v3/percent.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/v3/range.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/v3/range.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/v3/ratelimit_unit.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/v3/ratelimit_unit.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/v3/semantic_version.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/v3/semantic_version.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/v3/token_bucket.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/envoy/type/v3/token_bucket.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/api/annotations.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/api/annotations.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/api/expr/v1alpha1/checked.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/api/expr/v1alpha1/checked.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/api/expr/v1alpha1/syntax.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/api/expr/v1alpha1/syntax.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/api/http.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/api/http.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/api/httpbody.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/api/httpbody.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/protobuf/any.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/protobuf/any.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/protobuf/descriptor.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/protobuf/descriptor.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/protobuf/duration.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/protobuf/duration.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/protobuf/empty.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/protobuf/empty.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/protobuf/struct.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/protobuf/struct.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/protobuf/timestamp.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/protobuf/timestamp.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/protobuf/wrappers.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/protobuf/wrappers.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/rpc/status.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/google/rpc/status.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/opencensus/proto/trace/v1/trace_config.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/opencensus/proto/trace/v1/trace_config.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/src/proto/grpc/gcp/altscontext.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/src/proto/grpc/gcp/altscontext.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/src/proto/grpc/gcp/handshaker.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/src/proto/grpc/gcp/handshaker.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/src/proto/grpc/gcp/transport_security_common.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/src/proto/grpc/gcp/transport_security_common.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/src/proto/grpc/health/v1/health.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/src/proto/grpc/health/v1/health.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/src/proto/grpc/lb/v1/load_balancer.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/src/proto/grpc/lb/v1/load_balancer.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls_config.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls_config.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/udpa/annotations/migrate.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/udpa/annotations/migrate.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/udpa/annotations/security.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/udpa/annotations/security.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/udpa/annotations/sensitive.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/udpa/annotations/sensitive.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/udpa/annotations/status.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/udpa/annotations/status.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/udpa/annotations/versioning.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/udpa/annotations/versioning.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/validate/validate.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/validate/validate.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/annotations/v3/migrate.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/annotations/v3/migrate.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/annotations/v3/security.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/annotations/v3/security.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/annotations/v3/sensitive.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/annotations/v3/sensitive.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/annotations/v3/status.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/annotations/v3/status.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/annotations/v3/versioning.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/annotations/v3/versioning.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/core/v3/authority.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/core/v3/authority.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/core/v3/collection_entry.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/core/v3/collection_entry.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/core/v3/context_params.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/core/v3/context_params.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/core/v3/extension.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/core/v3/extension.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/core/v3/resource.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/core/v3/resource.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/core/v3/resource_locator.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/core/v3/resource_locator.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/core/v3/resource_name.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/core/v3/resource_name.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/data/orca/v3/orca_load_report.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/data/orca/v3/orca_load_report.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/service/orca/v3/orca.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/service/orca/v3/orca.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/type/matcher/v3/matcher.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/type/matcher/v3/matcher.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/type/matcher/v3/regex.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/type/matcher/v3/regex.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/type/matcher/v3/string.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/type/matcher/v3/string.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/type/v3/typed_struct.upb.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upb-generated/xds/type/v3/typed_struct.upb.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/admin/v3/certs.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/admin/v3/certs.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/admin/v3/clusters.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/admin/v3/clusters.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/admin/v3/config_dump.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/admin/v3/config_dump.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/admin/v3/init_dump.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/admin/v3/init_dump.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/admin/v3/listeners.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/admin/v3/listeners.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/admin/v3/memory.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/admin/v3/memory.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/admin/v3/metrics.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/admin/v3/metrics.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/admin/v3/mutex_stats.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/admin/v3/mutex_stats.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/admin/v3/server_info.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/admin/v3/server_info.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/admin/v3/tap.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/admin/v3/tap.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/annotations/deprecation.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/annotations/deprecation.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/annotations/resource.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/annotations/resource.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/accesslog/v3/accesslog.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/accesslog/v3/accesslog.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/bootstrap/v3/bootstrap.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/bootstrap/v3/bootstrap.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/cluster/v3/circuit_breaker.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/cluster/v3/circuit_breaker.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/cluster/v3/cluster.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/cluster/v3/cluster.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/cluster/v3/filter.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/cluster/v3/filter.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/cluster/v3/outlier_detection.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/cluster/v3/outlier_detection.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/common/matcher/v3/matcher.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/common/matcher/v3/matcher.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/address.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/address.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/backoff.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/backoff.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/base.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/base.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/config_source.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/config_source.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/event_service_config.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/event_service_config.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/extension.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/extension.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_method_list.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_method_list.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_service.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_service.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/health_check.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/health_check.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/http_uri.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/http_uri.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/protocol.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/protocol.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/proxy_protocol.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/proxy_protocol.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/resolver.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/resolver.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/socket_option.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/socket_option.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/substitution_format_string.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/substitution_format_string.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/udp_socket_config.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/core/v3/udp_socket_config.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint_components.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint_components.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/load_report.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/load_report.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/listener/v3/api_listener.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/listener/v3/api_listener.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener_components.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener_components.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/listener/v3/quic_config.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/listener/v3/quic_config.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/listener/v3/udp_listener_config.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/listener/v3/udp_listener_config.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/metrics/v3/metrics_service.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/metrics/v3/metrics_service.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/metrics/v3/stats.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/metrics/v3/stats.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/overload/v3/overload.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/overload/v3/overload.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/rbac/v3/rbac.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/rbac/v3/rbac.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/route/v3/route.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/route/v3/route.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/route/v3/route_components.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/route/v3/route_components.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/route/v3/scoped_route.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/route/v3/scoped_route.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/tap/v3/common.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/tap/v3/common.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/trace/v3/datadog.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/trace/v3/datadog.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/trace/v3/dynamic_ot.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/trace/v3/dynamic_ot.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/trace/v3/http_tracer.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/trace/v3/http_tracer.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/trace/v3/lightstep.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/trace/v3/lightstep.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/trace/v3/opencensus.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/trace/v3/opencensus.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/trace/v3/service.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/trace/v3/service.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/trace/v3/skywalking.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/trace/v3/skywalking.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/trace/v3/trace.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/trace/v3/trace.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/trace/v3/xray.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/trace/v3/xray.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/trace/v3/zipkin.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/config/trace/v3/zipkin.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/extensions/clusters/aggregate/v3/cluster.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/extensions/clusters/aggregate/v3/cluster.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/extensions/filters/common/fault/v3/fault.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/extensions/filters/common/fault/v3/fault.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/extensions/filters/http/fault/v3/fault.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/extensions/filters/http/fault/v3/fault.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/extensions/filters/http/rbac/v3/rbac.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/extensions/filters/http/rbac/v3/rbac.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/extensions/filters/http/router/v3/router.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/extensions/filters/http/router/v3/router.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/cert.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/cert.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/common.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/common.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/secret.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/secret.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/service/discovery/v3/ads.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/service/discovery/v3/ads.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/service/discovery/v3/discovery.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/service/discovery/v3/discovery.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/service/load_stats/v3/lrs.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/service/load_stats/v3/lrs.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/service/status/v3/csds.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/service/status/v3/csds.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/http/v3/cookie.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/http/v3/cookie.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/http/v3/path_transformation.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/http/v3/path_transformation.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/matcher/v3/http_inputs.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/matcher/v3/http_inputs.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/matcher/v3/metadata.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/matcher/v3/metadata.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/matcher/v3/node.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/matcher/v3/node.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/matcher/v3/number.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/matcher/v3/number.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/matcher/v3/path.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/matcher/v3/path.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/matcher/v3/regex.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/matcher/v3/regex.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/matcher/v3/string.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/matcher/v3/string.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/matcher/v3/struct.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/matcher/v3/struct.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/matcher/v3/value.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/matcher/v3/value.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/metadata/v3/metadata.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/metadata/v3/metadata.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/tracing/v3/custom_tag.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/tracing/v3/custom_tag.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/v3/hash_policy.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/v3/hash_policy.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/v3/http.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/v3/http.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/v3/http_status.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/v3/http_status.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/v3/percent.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/v3/percent.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/v3/range.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/v3/range.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/v3/ratelimit_unit.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/v3/ratelimit_unit.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/v3/semantic_version.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/v3/semantic_version.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/v3/token_bucket.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/envoy/type/v3/token_bucket.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/api/annotations.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/api/annotations.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/checked.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/checked.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/syntax.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/syntax.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/api/http.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/api/http.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/api/httpbody.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/api/httpbody.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/protobuf/any.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/protobuf/any.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/protobuf/descriptor.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/protobuf/descriptor.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/protobuf/duration.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/protobuf/duration.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/protobuf/empty.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/protobuf/empty.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/protobuf/struct.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/protobuf/struct.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/protobuf/timestamp.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/protobuf/timestamp.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/protobuf/wrappers.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/protobuf/wrappers.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/rpc/status.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/google/rpc/status.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/opencensus/proto/trace/v1/trace_config.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/opencensus/proto/trace/v1/trace_config.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/src/proto/grpc/lookup/v1/rls_config.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/src/proto/grpc/lookup/v1/rls_config.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/udpa/annotations/migrate.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/udpa/annotations/migrate.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/udpa/annotations/security.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/udpa/annotations/security.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/udpa/annotations/sensitive.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/udpa/annotations/sensitive.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/udpa/annotations/status.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/udpa/annotations/status.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/udpa/annotations/versioning.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/udpa/annotations/versioning.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/validate/validate.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/validate/validate.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/annotations/v3/migrate.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/annotations/v3/migrate.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/annotations/v3/security.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/annotations/v3/security.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/annotations/v3/sensitive.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/annotations/v3/sensitive.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/annotations/v3/status.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/annotations/v3/status.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/annotations/v3/versioning.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/annotations/v3/versioning.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/core/v3/authority.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/core/v3/authority.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/core/v3/collection_entry.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/core/v3/collection_entry.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/core/v3/context_params.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/core/v3/context_params.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/core/v3/extension.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/core/v3/extension.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/core/v3/resource.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/core/v3/resource.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/core/v3/resource_locator.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/core/v3/resource_locator.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/core/v3/resource_name.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/core/v3/resource_name.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/type/matcher/v3/matcher.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/type/matcher/v3/matcher.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/type/matcher/v3/regex.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/type/matcher/v3/regex.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/type/matcher/v3/string.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/type/matcher/v3/string.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/type/v3/typed_struct.upbdefs.c" role="src" />
     <file baseinstalldir="/" name="src/core/ext/upbdefs-generated/xds/type/v3/typed_struct.upbdefs.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/certificate_provider_factory.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/certificate_provider_registry.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/certificate_provider_registry.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/certificate_provider_store.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/certificate_provider_store.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/file_watcher_certificate_provider_factory.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/file_watcher_certificate_provider_factory.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/upb_utils.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_api.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_api.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_bootstrap.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_bootstrap.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_certificate_provider.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_certificate_provider.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_channel_args.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_channel_stack_modifier.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_channel_stack_modifier.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_client.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_client.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_client_stats.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_client_stats.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_cluster.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_cluster.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_cluster_specifier_plugin.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_cluster_specifier_plugin.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_common_types.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_common_types.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_endpoint.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_endpoint.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_http_fault_filter.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_http_fault_filter.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_http_filters.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_http_filters.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_http_rbac_filter.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_http_rbac_filter.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_lb_policy_registry.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_lb_policy_registry.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_listener.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_listener.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_resource_type.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_resource_type.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_resource_type_impl.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_route_config.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_route_config.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_routing.cc" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_routing.h" role="src" />
     <file baseinstalldir="/" name="src/core/ext/xds/xds_server_config_fetcher.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/address_utils/parse_address.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/address_utils/parse_address.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/address_utils/sockaddr_utils.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/address_utils/sockaddr_utils.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/avl/avl.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/backoff/backoff.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/backoff/backoff.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/call_finalization.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/call_tracer.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/channel_args.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/channel_args.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/channel_args_preconditioning.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/channel_args_preconditioning.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/channel_fwd.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/channel_stack.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/channel_stack.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/channel_stack_builder.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/channel_stack_builder.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/channel_stack_builder_impl.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/channel_stack_builder_impl.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/channel_trace.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/channel_trace.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/channelz.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/channelz.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/channelz_registry.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/channelz_registry.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/connected_channel.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/connected_channel.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/context.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/promise_based_filter.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/promise_based_filter.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/status_util.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/channel/status_util.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/compression/compression.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/compression/compression_internal.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/compression/compression_internal.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/compression/message_compress.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/compression/message_compress.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/config/core_configuration.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/config/core_configuration.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/debug/stats.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/debug/stats.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/debug/stats_data.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/debug/stats_data.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/debug/trace.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/debug/trace.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/event_engine/channel_args_endpoint_config.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/event_engine/channel_args_endpoint_config.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/event_engine/default_event_engine_factory.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/event_engine/event_engine.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/event_engine/event_engine_factory.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/event_engine/handle_containers.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/event_engine/iomgr_engine.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/event_engine/iomgr_engine.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/event_engine/memory_allocator.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/event_engine/resolved_address.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/event_engine/slice.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/event_engine/slice_buffer.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/event_engine/trace.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/event_engine/trace.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/alloc.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/alloc.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/atm.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/cpu_iphone.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/cpu_linux.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/cpu_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/cpu_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/env.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/env_linux.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/env_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/env_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/log.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/log_android.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/log_linux.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/log_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/log_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/murmur_hash.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/murmur_hash.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/spinlock.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/string.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/string.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/string_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/string_util_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/string_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/string_windows.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/sync.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/sync_abseil.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/sync_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/sync_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/time.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/time_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/time_precise.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/time_precise.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/time_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/tls.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/tmpfile.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/tmpfile_msys.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/tmpfile_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/tmpfile_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/useful.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gpr/wrap_memcpy.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/atomic_utils.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/bitset.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/chunked_vector.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/construct_destruct.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/cpp_impl_of.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/debug_location.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/dual_ref_counted.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/examine_stack.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/examine_stack.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/fork.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/fork.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/global_config.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/global_config_custom.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/global_config_env.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/global_config_env.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/global_config_generic.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/host_port.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/host_port.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/manual_constructor.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/match.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/memory.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/mpscq.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/mpscq.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/orphanable.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/overload.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/ref_counted.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/ref_counted_ptr.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/single_set_ptr.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/stat.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/stat_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/stat_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/status_helper.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/status_helper.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/sync.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/table.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/thd.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/thd_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/thd_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/time.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/time.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/time_util.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/time_util.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/gprpp/unique_type_name.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/http/format_request.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/http/format_request.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/http/httpcli.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/http/httpcli.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/http/httpcli_security_connector.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/http/httpcli_ssl_credentials.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/http/parser.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/http/parser.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/block_annotate.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/buffer_list.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/buffer_list.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/call_combiner.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/call_combiner.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/cfstream_handle.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/cfstream_handle.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/closure.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/combiner.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/combiner.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/dualstack_socket_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/dynamic_annotations.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/endpoint.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/endpoint.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/endpoint_cfstream.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/endpoint_cfstream.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/endpoint_pair.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/endpoint_pair_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/endpoint_pair_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/error.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/error.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/error_cfstream.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/error_cfstream.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/error_internal.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/ev_apple.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/ev_apple.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/ev_epoll1_linux.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/ev_epoll1_linux.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/ev_poll_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/ev_poll_posix.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/ev_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/ev_posix.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/ev_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/exec_ctx.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/exec_ctx.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/executor.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/executor.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/executor/mpmcqueue.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/executor/mpmcqueue.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/executor/threadpool.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/executor/threadpool.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/fork_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/fork_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/gethostname.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/gethostname_fallback.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/gethostname_host_name_max.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/gethostname_sysconf.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/grpc_if_nametoindex.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/grpc_if_nametoindex_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/grpc_if_nametoindex_unsupported.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/internal_errqueue.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/internal_errqueue.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/iocp_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/iocp_windows.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/iomgr.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/iomgr.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/iomgr_fwd.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/iomgr_internal.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/iomgr_internal.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/iomgr_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/iomgr_posix_cfstream.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/iomgr_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/load_file.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/load_file.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/lockfree_event.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/lockfree_event.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/nameser.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/polling_entity.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/polling_entity.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/pollset.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/pollset.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/pollset_set.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/pollset_set.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/pollset_set_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/pollset_set_windows.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/pollset_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/pollset_windows.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/port.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/python_util.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/resolve_address.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/resolve_address.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/resolve_address_impl.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/resolve_address_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/resolve_address_posix.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/resolve_address_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/resolve_address_windows.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/resolved_address.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/sockaddr.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/sockaddr_posix.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/sockaddr_utils_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/sockaddr_windows.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/socket_factory_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/socket_factory_posix.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/socket_mutator.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/socket_mutator.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/socket_utils.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/socket_utils_common_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/socket_utils_linux.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/socket_utils_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/socket_utils_posix.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/socket_utils_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/socket_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/socket_windows.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/tcp_client.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/tcp_client.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/tcp_client_cfstream.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/tcp_client_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/tcp_client_posix.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/tcp_client_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/tcp_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/tcp_posix.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/tcp_server.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/tcp_server.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/tcp_server_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/tcp_server_utils_posix.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/tcp_server_utils_posix_common.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/tcp_server_utils_posix_ifaddrs.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/tcp_server_utils_posix_noifaddrs.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/tcp_server_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/tcp_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/tcp_windows.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/time_averaged_stats.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/time_averaged_stats.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/timer.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/timer.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/timer_generic.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/timer_generic.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/timer_heap.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/timer_heap.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/timer_manager.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/timer_manager.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/unix_sockets_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/unix_sockets_posix.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/unix_sockets_posix_noop.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/wakeup_fd_eventfd.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/wakeup_fd_nospecial.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/wakeup_fd_pipe.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/wakeup_fd_pipe.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/wakeup_fd_posix.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/wakeup_fd_posix.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/work_serializer.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/iomgr/work_serializer.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/json/json.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/json/json_reader.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/json/json_util.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/json/json_util.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/json/json_writer.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/matchers/matchers.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/matchers/matchers.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/profiling/basic_timers.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/profiling/stap_timers.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/profiling/timers.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/promise/activity.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/promise/activity.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/promise/arena_promise.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/promise/call_push_pull.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/promise/context.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/promise/detail/basic_seq.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/promise/detail/promise_factory.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/promise/detail/promise_like.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/promise/detail/status.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/promise/detail/switch.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/promise/exec_ctx_wakeup_scheduler.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/promise/intra_activity_waiter.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/promise/latch.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/promise/loop.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/promise/map.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/promise/poll.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/promise/promise.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/promise/race.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/promise/seq.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/promise/sleep.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/promise/sleep.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/promise/try_seq.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/resolver/resolver.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/resolver/resolver.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/resolver/resolver_factory.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/resolver/resolver_registry.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/resolver/resolver_registry.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/resolver/server_address.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/resolver/server_address.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/resource_quota/api.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/resource_quota/api.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/resource_quota/arena.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/resource_quota/arena.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/resource_quota/memory_quota.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/resource_quota/memory_quota.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/resource_quota/resource_quota.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/resource_quota/resource_quota.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/resource_quota/thread_quota.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/resource_quota/thread_quota.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/resource_quota/trace.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/resource_quota/trace.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/authorization/authorization_engine.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/authorization/authorization_policy_provider.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/authorization/authorization_policy_provider_vtable.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/authorization/evaluate_args.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/authorization/evaluate_args.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/authorization/grpc_authorization_engine.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/authorization/grpc_authorization_engine.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/authorization/grpc_server_authz_filter.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/authorization/grpc_server_authz_filter.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/authorization/matchers.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/authorization/matchers.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/authorization/rbac_policy.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/authorization/rbac_policy.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/context/security_context.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/context/security_context.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/alts/alts_credentials.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/alts/alts_credentials.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/alts/check_gcp_environment.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/alts/check_gcp_environment.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/alts/check_gcp_environment_linux.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/alts/check_gcp_environment_no_op.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/alts/check_gcp_environment_windows.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/alts/grpc_alts_credentials_client_options.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/alts/grpc_alts_credentials_options.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/alts/grpc_alts_credentials_options.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/alts/grpc_alts_credentials_server_options.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/call_creds_util.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/call_creds_util.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/channel_creds_registry.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/channel_creds_registry_init.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/composite/composite_credentials.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/composite/composite_credentials.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/credentials.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/credentials.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/external/aws_external_account_credentials.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/external/aws_external_account_credentials.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/external/aws_request_signer.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/external/aws_request_signer.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/external/external_account_credentials.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/external/external_account_credentials.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/external/file_external_account_credentials.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/external/file_external_account_credentials.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/external/url_external_account_credentials.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/external/url_external_account_credentials.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/fake/fake_credentials.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/fake/fake_credentials.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/google_default/credentials_generic.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/google_default/google_default_credentials.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/google_default/google_default_credentials.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/iam/iam_credentials.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/iam/iam_credentials.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/insecure/insecure_credentials.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/insecure/insecure_credentials.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/jwt/json_token.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/jwt/json_token.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/jwt/jwt_credentials.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/jwt/jwt_credentials.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/jwt/jwt_verifier.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/jwt/jwt_verifier.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/local/local_credentials.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/local/local_credentials.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/oauth2/oauth2_credentials.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/oauth2/oauth2_credentials.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/plugin/plugin_credentials.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/plugin/plugin_credentials.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/ssl/ssl_credentials.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/ssl/ssl_credentials.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/tls/grpc_tls_certificate_distributor.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/tls/grpc_tls_certificate_distributor.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/tls/grpc_tls_certificate_provider.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/tls/grpc_tls_certificate_provider.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/tls/grpc_tls_certificate_verifier.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/tls/grpc_tls_certificate_verifier.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/tls/grpc_tls_credentials_options.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/tls/grpc_tls_credentials_options.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/tls/tls_credentials.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/tls/tls_credentials.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/tls/tls_utils.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/tls/tls_utils.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/xds/xds_credentials.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/credentials/xds/xds_credentials.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/security_connector/alts/alts_security_connector.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/security_connector/alts/alts_security_connector.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/security_connector/fake/fake_security_connector.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/security_connector/fake/fake_security_connector.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/security_connector/insecure/insecure_security_connector.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/security_connector/insecure/insecure_security_connector.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/security_connector/load_system_roots.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/security_connector/load_system_roots_fallback.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/security_connector/load_system_roots_linux.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/security_connector/load_system_roots_linux.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/security_connector/local/local_security_connector.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/security_connector/local/local_security_connector.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/security_connector/security_connector.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/security_connector/security_connector.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/security_connector/ssl/ssl_security_connector.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/security_connector/ssl/ssl_security_connector.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/security_connector/ssl_utils.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/security_connector/ssl_utils.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/security_connector/ssl_utils_config.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/security_connector/ssl_utils_config.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/security_connector/tls/tls_security_connector.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/security_connector/tls/tls_security_connector.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/transport/auth_filters.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/transport/client_auth_filter.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/transport/secure_endpoint.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/transport/secure_endpoint.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/transport/security_handshaker.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/transport/security_handshaker.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/transport/server_auth_filter.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/transport/tsi_error.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/transport/tsi_error.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/util/json_util.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/security/util/json_util.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/service_config/service_config.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/service_config/service_config_call_data.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/service_config/service_config_impl.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/service_config/service_config_impl.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/service_config/service_config_parser.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/service_config/service_config_parser.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/slice/b64.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/slice/b64.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/slice/percent_encoding.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/slice/percent_encoding.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/slice/slice.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/slice/slice.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/slice/slice_api.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/slice/slice_buffer.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/slice/slice_buffer.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/slice/slice_buffer_api.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/slice/slice_internal.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/slice/slice_refcount.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/slice/slice_refcount.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/slice/slice_refcount_base.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/slice/slice_split.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/slice/slice_split.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/slice/slice_string_helpers.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/slice/slice_string_helpers.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/api_trace.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/api_trace.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/builtins.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/builtins.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/byte_buffer.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/byte_buffer_reader.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/call.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/call.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/call_details.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/call_log_batch.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/call_test_only.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/channel.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/channel.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/channel_init.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/channel_init.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/channel_ping.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/channel_stack_type.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/channel_stack_type.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/completion_queue.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/completion_queue.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/completion_queue_factory.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/completion_queue_factory.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/event_string.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/event_string.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/init.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/init.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/lame_client.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/lame_client.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/metadata_array.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/server.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/server.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/validate_metadata.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/validate_metadata.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/surface/version.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/bdp_estimator.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/bdp_estimator.h" role="src" />
+    <file baseinstalldir="/" name="src/core/lib/transport/byte_stream.cc" role="src" />
+    <file baseinstalldir="/" name="src/core/lib/transport/byte_stream.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/connectivity_state.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/connectivity_state.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/error_utils.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/error_utils.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/handshaker.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/handshaker.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/handshaker_factory.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/handshaker_registry.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/handshaker_registry.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/http2_errors.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/http_connect_handshaker.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/http_connect_handshaker.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/metadata_batch.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/metadata_batch.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/parsed_metadata.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/parsed_metadata.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/pid_controller.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/pid_controller.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/status_conversion.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/status_conversion.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/tcp_connect_handshaker.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/tcp_connect_handshaker.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/timeout_encoding.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/timeout_encoding.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/transport.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/transport.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/transport_fwd.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/transport_impl.h" role="src" />
     <file baseinstalldir="/" name="src/core/lib/transport/transport_op_string.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/uri/uri_parser.cc" role="src" />
     <file baseinstalldir="/" name="src/core/lib/uri/uri_parser.h" role="src" />
     <file baseinstalldir="/" name="src/core/plugin_registry/grpc_plugin_registry.cc" role="src" />
     <file baseinstalldir="/" name="src/core/plugin_registry/grpc_plugin_registry_extra.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/crypt/aes_gcm.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/crypt/gsec.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/crypt/gsec.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/frame_protector/alts_counter.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/frame_protector/alts_counter.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/frame_protector/alts_crypter.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/frame_protector/alts_crypter.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/frame_protector/alts_frame_protector.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/frame_protector/alts_frame_protector.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/frame_protector/alts_record_protocol_crypter_common.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/frame_protector/alts_record_protocol_crypter_common.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/frame_protector/alts_seal_privacy_integrity_crypter.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/frame_protector/alts_unseal_privacy_integrity_crypter.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/frame_protector/frame_handler.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/frame_protector/frame_handler.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/handshaker/alts_handshaker_client.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/handshaker/alts_handshaker_client.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/handshaker/alts_shared_resource.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/handshaker/alts_shared_resource.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/handshaker/alts_tsi_handshaker.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/handshaker/alts_tsi_handshaker_private.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/handshaker/alts_tsi_utils.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/handshaker/alts_tsi_utils.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/handshaker/transport_security_common_api.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/handshaker/transport_security_common_api.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_integrity_only_record_protocol.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_integrity_only_record_protocol.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_privacy_integrity_record_protocol.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_privacy_integrity_record_protocol.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol_common.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol_common.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/zero_copy_frame_protector/alts_iovec_record_protocol.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/zero_copy_frame_protector/alts_iovec_record_protocol.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/zero_copy_frame_protector/alts_zero_copy_grpc_protector.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/alts/zero_copy_frame_protector/alts_zero_copy_grpc_protector.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/fake_transport_security.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/fake_transport_security.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/local_transport_security.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/local_transport_security.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/ssl/key_logging/ssl_key_logging.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/ssl/key_logging/ssl_key_logging.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/ssl/session_cache/ssl_session.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/ssl/session_cache/ssl_session_boringssl.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/ssl/session_cache/ssl_session_cache.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/ssl/session_cache/ssl_session_cache.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/ssl/session_cache/ssl_session_openssl.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/ssl_transport_security.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/ssl_transport_security.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/ssl_types.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/transport_security.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/transport_security.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/transport_security_grpc.cc" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/transport_security_grpc.h" role="src" />
     <file baseinstalldir="/" name="src/core/tsi/transport_security_interface.h" role="src" />
     <file baseinstalldir="/" name="src/php/ext/grpc/byte_buffer.c" role="src" />
     <file baseinstalldir="/" name="src/php/ext/grpc/byte_buffer.h" role="src" />
     <file baseinstalldir="/" name="src/php/ext/grpc/call.c" role="src" />
     <file baseinstalldir="/" name="src/php/ext/grpc/call.h" role="src" />
     <file baseinstalldir="/" name="src/php/ext/grpc/call_credentials.c" role="src" />
     <file baseinstalldir="/" name="src/php/ext/grpc/call_credentials.h" role="src" />
     <file baseinstalldir="/" name="src/php/ext/grpc/channel.c" role="src" />
     <file baseinstalldir="/" name="src/php/ext/grpc/channel.h" role="src" />
     <file baseinstalldir="/" name="src/php/ext/grpc/channel_credentials.c" role="src" />
     <file baseinstalldir="/" name="src/php/ext/grpc/channel_credentials.h" role="src" />
     <file baseinstalldir="/" name="src/php/ext/grpc/completion_queue.c" role="src" />
     <file baseinstalldir="/" name="src/php/ext/grpc/completion_queue.h" role="src" />
     <file baseinstalldir="/" name="src/php/ext/grpc/php7_wrapper.h" role="src" />
     <file baseinstalldir="/" name="src/php/ext/grpc/php_grpc.c" role="src" />
     <file baseinstalldir="/" name="src/php/ext/grpc/php_grpc.h" role="src" />
     <file baseinstalldir="/" name="src/php/ext/grpc/server.c" role="src" />
     <file baseinstalldir="/" name="src/php/ext/grpc/server.h" role="src" />
     <file baseinstalldir="/" name="src/php/ext/grpc/server_credentials.c" role="src" />
     <file baseinstalldir="/" name="src/php/ext/grpc/server_credentials.h" role="src" />
     <file baseinstalldir="/" name="src/php/ext/grpc/timeval.c" role="src" />
     <file baseinstalldir="/" name="src/php/ext/grpc/timeval.h" role="src" />
     <file baseinstalldir="/" name="src/php/ext/grpc/version.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/algorithm/algorithm.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/algorithm/container.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/attributes.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/call_once.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/casts.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/config.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/const_init.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/dynamic_annotations.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/atomic_hook.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/cycleclock.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/cycleclock.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/direct_mmap.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/dynamic_annotations.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/endian.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/errno_saver.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/fast_type_id.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/hide_ptr.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/identity.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/inline_variable.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/invoke.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/low_level_alloc.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/low_level_alloc.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/low_level_scheduling.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/per_thread_tls.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/raw_logging.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/raw_logging.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/scheduling_mode.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/spinlock.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/spinlock.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/spinlock_akaros.inc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/spinlock_linux.inc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/spinlock_posix.inc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/spinlock_wait.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/spinlock_wait.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/spinlock_win32.inc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/sysinfo.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/sysinfo.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/thread_annotations.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/thread_identity.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/thread_identity.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/throw_delegate.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/throw_delegate.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/tsan_mutex_interface.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/unaligned_access.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/unscaledcycleclock.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/internal/unscaledcycleclock.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/log_severity.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/log_severity.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/macros.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/optimization.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/options.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/policy_checks.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/port.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/base/thread_annotations.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/cleanup/cleanup.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/cleanup/internal/cleanup.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/container/fixed_array.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/container/flat_hash_map.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/container/flat_hash_set.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/container/inlined_vector.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/container/internal/common.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/container/internal/compressed_tuple.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/container/internal/container_memory.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/container/internal/hash_function_defaults.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/container/internal/hash_policy_traits.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/container/internal/hashtable_debug_hooks.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/container/internal/hashtablez_sampler.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/container/internal/hashtablez_sampler.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/container/internal/hashtablez_sampler_force_weak_definition.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/container/internal/have_sse.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/container/internal/inlined_vector.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/container/internal/layout.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/container/internal/raw_hash_map.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/container/internal/raw_hash_set.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/container/internal/raw_hash_set.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/internal/address_is_readable.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/internal/address_is_readable.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/internal/demangle.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/internal/demangle.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/internal/elf_mem_image.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/internal/elf_mem_image.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/internal/stacktrace_aarch64-inl.inc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/internal/stacktrace_arm-inl.inc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/internal/stacktrace_config.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/internal/stacktrace_emscripten-inl.inc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/internal/stacktrace_generic-inl.inc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/internal/stacktrace_powerpc-inl.inc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/internal/stacktrace_riscv-inl.inc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/internal/stacktrace_unimplemented-inl.inc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/internal/stacktrace_win32-inl.inc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/internal/stacktrace_x86-inl.inc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/internal/symbolize.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/internal/vdso_support.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/internal/vdso_support.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/stacktrace.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/stacktrace.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/symbolize.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/symbolize.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/symbolize_darwin.inc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/symbolize_elf.inc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/symbolize_emscripten.inc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/symbolize_unimplemented.inc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/debugging/symbolize_win32.inc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/functional/bind_front.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/functional/function_ref.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/functional/internal/front_binder.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/functional/internal/function_ref.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/hash/hash.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/hash/internal/city.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/hash/internal/city.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/hash/internal/hash.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/hash/internal/hash.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/hash/internal/low_level_hash.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/hash/internal/low_level_hash.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/memory/memory.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/meta/type_traits.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/numeric/bits.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/numeric/int128.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/numeric/int128.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/numeric/int128_have_intrinsic.inc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/numeric/int128_no_intrinsic.inc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/numeric/internal/bits.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/numeric/internal/representation.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/profiling/internal/exponential_biased.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/profiling/internal/exponential_biased.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/profiling/internal/sample_recorder.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/bernoulli_distribution.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/beta_distribution.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/discrete_distribution.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/discrete_distribution.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/distributions.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/exponential_distribution.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/gaussian_distribution.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/gaussian_distribution.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/distribution_caller.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/fast_uniform_bits.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/fastmath.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/generate_real.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/iostream_state_saver.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/nonsecure_base.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/pcg_engine.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/platform.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/pool_urbg.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/pool_urbg.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/randen.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/randen.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/randen_detect.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/randen_detect.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/randen_engine.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/randen_hwaes.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/randen_hwaes.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/randen_round_keys.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/randen_slow.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/randen_slow.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/randen_traits.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/salted_seed_seq.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/seed_material.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/seed_material.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/traits.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/uniform_helper.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/internal/wide_multiply.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/log_uniform_int_distribution.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/poisson_distribution.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/random.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/seed_gen_exception.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/seed_gen_exception.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/seed_sequences.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/seed_sequences.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/uniform_int_distribution.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/uniform_real_distribution.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/random/zipf_distribution.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/status/internal/status_internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/status/internal/statusor_internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/status/status.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/status/status.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/status/status_payload_printer.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/status/status_payload_printer.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/status/statusor.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/status/statusor.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/ascii.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/ascii.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/charconv.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/charconv.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/cord.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/cord.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/escaping.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/escaping.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/char_map.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/charconv_bigint.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/charconv_bigint.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/charconv_parse.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/charconv_parse.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/cord_internal.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/cord_internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/cord_rep_btree.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/cord_rep_btree.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/cord_rep_btree_navigator.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/cord_rep_btree_navigator.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/cord_rep_btree_reader.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/cord_rep_btree_reader.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/cord_rep_consume.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/cord_rep_consume.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/cord_rep_flat.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/cord_rep_ring.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/cord_rep_ring.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/cord_rep_ring_reader.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/cordz_functions.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/cordz_functions.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/cordz_handle.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/cordz_handle.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/cordz_info.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/cordz_info.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/cordz_statistics.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/cordz_update_scope.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/cordz_update_tracker.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/escaping.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/escaping.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/memutil.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/memutil.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/ostringstream.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/ostringstream.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/resize_uninitialized.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/stl_type_traits.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/str_format/arg.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/str_format/arg.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/str_format/bind.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/str_format/bind.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/str_format/checker.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/str_format/extension.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/str_format/extension.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/str_format/float_conversion.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/str_format/float_conversion.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/str_format/output.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/str_format/output.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/str_format/parser.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/str_format/parser.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/str_join_internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/str_split_internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/string_constant.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/utf8.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/internal/utf8.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/match.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/match.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/numbers.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/numbers.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/str_cat.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/str_cat.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/str_format.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/str_join.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/str_replace.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/str_replace.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/str_split.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/str_split.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/string_view.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/string_view.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/strip.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/substitute.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/strings/substitute.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/synchronization/barrier.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/synchronization/barrier.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/synchronization/blocking_counter.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/synchronization/blocking_counter.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/synchronization/internal/create_thread_identity.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/synchronization/internal/create_thread_identity.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/synchronization/internal/futex.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/synchronization/internal/graphcycles.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/synchronization/internal/graphcycles.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/synchronization/internal/kernel_timeout.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/synchronization/internal/per_thread_sem.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/synchronization/internal/per_thread_sem.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/synchronization/internal/waiter.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/synchronization/internal/waiter.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/synchronization/mutex.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/synchronization/mutex.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/synchronization/notification.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/synchronization/notification.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/civil_time.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/civil_time.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/clock.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/clock.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/duration.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/format.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/internal/cctz/include/cctz/civil_time.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/internal/cctz/include/cctz/civil_time_detail.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/internal/cctz/include/cctz/time_zone.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/internal/cctz/include/cctz/zone_info_source.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/internal/cctz/src/civil_time_detail.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_fixed.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_fixed.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_format.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_if.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_if.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_impl.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_impl.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_info.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_info.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_libc.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_libc.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_lookup.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_posix.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_posix.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/internal/cctz/src/tzfile.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/internal/cctz/src/zone_info_source.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/internal/get_current_time_chrono.inc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/internal/get_current_time_posix.inc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/time.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/time/time.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/types/bad_optional_access.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/types/bad_optional_access.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/types/bad_variant_access.cc" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/types/bad_variant_access.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/types/internal/optional.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/types/internal/span.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/types/internal/variant.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/types/optional.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/types/span.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/types/variant.h" role="src" />
     <file baseinstalldir="/" name="third_party/abseil-cpp/absl/utility/utility.h" role="src" />
     <file baseinstalldir="/" name="third_party/address_sorting/address_sorting.c" role="src" />
     <file baseinstalldir="/" name="third_party/address_sorting/address_sorting_internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/address_sorting/address_sorting_posix.c" role="src" />
     <file baseinstalldir="/" name="third_party/address_sorting/address_sorting_windows.c" role="src" />
     <file baseinstalldir="/" name="third_party/address_sorting/include/address_sorting/address_sorting.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/err_data.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/a_bitstr.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/a_bool.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/a_d2i_fp.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/a_dup.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/a_enum.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/a_gentm.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/a_i2d_fp.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/a_int.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/a_mbstr.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/a_object.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/a_octet.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/a_print.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/a_strex.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/a_strnid.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/a_time.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/a_type.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/a_utctm.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/a_utf8.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/asn1_lib.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/asn1_par.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/asn_pack.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/charmap.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/f_int.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/f_string.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/tasn_dec.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/tasn_enc.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/tasn_fre.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/tasn_new.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/tasn_typ.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/tasn_utl.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/asn1/time_support.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/base64/base64.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/bio/bio.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/bio/bio_mem.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/bio/connect.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/bio/fd.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/bio/file.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/bio/hexdump.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/bio/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/bio/pair.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/bio/printf.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/bio/socket.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/bio/socket_helper.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/blake2/blake2.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/bn_extra/bn_asn1.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/bn_extra/convert.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/buf/buf.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/bytestring/asn1_compat.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/bytestring/ber.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/bytestring/cbb.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/bytestring/cbs.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/bytestring/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/bytestring/unicode.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/chacha/chacha.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/chacha/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/cipher_extra/cipher_extra.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/cipher_extra/derive_key.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_aesccm.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_aesctrhmac.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_aesgcmsiv.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_chacha20poly1305.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_null.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_rc2.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_rc4.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_tls.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/cipher_extra/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/cipher_extra/tls_cbc.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/cmac/cmac.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/conf/conf.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/conf/conf_def.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/conf/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/cpu-aarch64-fuchsia.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/cpu-aarch64-linux.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/cpu-aarch64-win.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/cpu-arm-linux.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/cpu-arm-linux.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/cpu-arm.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/cpu-intel.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/cpu-ppc64le.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/crypto.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/curve25519/curve25519.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/curve25519/curve25519_tables.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/curve25519/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/curve25519/spake25519.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/dh_extra/dh_asn1.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/dh_extra/params.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/digest_extra/digest_extra.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/dsa/dsa.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/dsa/dsa_asn1.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/dsa/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/ec_extra/ec_asn1.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/ec_extra/ec_derive.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/ec_extra/hash_to_curve.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/ec_extra/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/ecdh_extra/ecdh_extra.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/ecdsa_extra/ecdsa_asn1.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/engine/engine.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/err/err.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/err/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/evp/digestsign.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/evp/evp.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/evp/evp_asn1.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/evp/evp_ctx.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/evp/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/evp/p_dsa_asn1.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/evp/p_ec.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/evp/p_ec_asn1.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/evp/p_ed25519.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/evp/p_ed25519_asn1.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/evp/p_rsa.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/evp/p_rsa_asn1.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/evp/p_x25519.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/evp/p_x25519_asn1.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/evp/pbkdf.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/evp/print.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/evp/scrypt.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/evp/sign.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/ex_data.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/aes/aes.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/aes/aes_nohw.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/aes/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/aes/key_wrap.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/aes/mode_wrappers.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/bcm.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/add.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/asm/x86_64-gcc.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/bn.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/bytes.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/cmp.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/ctx.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/div.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/div_extra.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/exponentiation.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/gcd.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/gcd_extra.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/generic.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/jacobi.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/montgomery.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/montgomery_inv.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/mul.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/prime.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/random.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/rsaz_exp.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/rsaz_exp.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/shift.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/bn/sqrt.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/cipher/aead.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/cipher/cipher.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/cipher/e_aes.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/cipher/e_des.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/cipher/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/delocate.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/des/des.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/des/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/dh/check.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/dh/dh.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/digest/digest.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/digest/digests.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/digest/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/digest/md32_common.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/ec.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/ec_key.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/ec_montgomery.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/felem.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/oct.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/p224-64.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/p256-x86_64-table.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/p256-x86_64.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/p256-x86_64.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/p256.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/p256_table.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/scalar.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/simple.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/simple_mul.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/util.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/ec/wnaf.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/ecdh/ecdh.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/ecdsa/ecdsa.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/ecdsa/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/fips_shared_support.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/hmac/hmac.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/md4/md4.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/md5/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/md5/md5.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/modes/cbc.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/modes/cfb.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/modes/ctr.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/modes/gcm.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/modes/gcm_nohw.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/modes/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/modes/ofb.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/modes/polyval.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/rand/ctrdrbg.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/rand/fork_detect.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/rand/fork_detect.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/rand/getrandom_fillin.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/rand/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/rand/rand.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/rand/urandom.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/rsa/blinding.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/rsa/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/rsa/padding.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/rsa/rsa.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/rsa/rsa_impl.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/self_check/fips.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/self_check/self_check.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/sha/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/sha/sha1-altivec.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/sha/sha1.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/sha/sha256.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/sha/sha512.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/tls/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/fipsmodule/tls/kdf.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/hkdf/hkdf.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/hpke/hpke.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/hrss/hrss.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/hrss/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/lhash/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/lhash/lhash.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/mem.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/obj/obj.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/obj/obj_dat.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/obj/obj_xref.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/pem/pem_all.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/pem/pem_info.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/pem/pem_lib.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/pem/pem_oth.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/pem/pem_pk8.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/pem/pem_pkey.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/pem/pem_x509.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/pem/pem_xaux.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/pkcs7/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/pkcs7/pkcs7.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/pkcs7/pkcs7_x509.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/pkcs8/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/pkcs8/p5_pbev2.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/pkcs8/pkcs8.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/pkcs8/pkcs8_x509.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/poly1305/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/poly1305/poly1305.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/poly1305/poly1305_arm.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/poly1305/poly1305_vec.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/pool/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/pool/pool.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/rand_extra/deterministic.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/rand_extra/forkunsafe.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/rand_extra/fuchsia.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/rand_extra/passive.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/rand_extra/rand_extra.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/rand_extra/windows.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/rc4/rc4.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/refcount_c11.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/refcount_lock.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/rsa_extra/rsa_asn1.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/rsa_extra/rsa_print.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/siphash/siphash.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/stack/stack.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/thread.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/thread_none.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/thread_pthread.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/thread_win.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/trust_token/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/trust_token/pmbtoken.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/trust_token/trust_token.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/trust_token/voprf.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/a_digest.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/a_sign.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/a_verify.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/algorithm.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/asn1_gen.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/by_dir.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/by_file.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/i2d_pr.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/name_print.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/rsa_pss.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/t_crl.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/t_req.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/t_x509.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/t_x509a.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x509.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x509_att.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x509_cmp.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x509_d2.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x509_def.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x509_ext.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x509_lu.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x509_obj.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x509_req.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x509_set.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x509_trs.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x509_txt.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x509_v3.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x509_vfy.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x509_vpm.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x509cset.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x509name.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x509rset.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x509spki.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x_algor.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x_all.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x_attrib.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x_crl.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x_exten.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x_info.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x_name.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x_pkey.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x_pubkey.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x_req.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x_sig.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x_spki.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x_val.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x_x509.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509/x_x509a.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/ext_dat.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_cache.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_data.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_lib.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_map.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_node.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_tree.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_akey.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_akeya.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_alt.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_bcons.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_bitst.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_conf.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_cpols.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_crld.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_enum.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_extku.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_genn.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_ia5.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_info.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_int.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_lib.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_ncons.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_ocsp.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_pci.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_pcia.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_pcons.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_pmaps.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_prn.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_purp.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_skey.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/crypto/x509v3/v3_utl.c" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/aead.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/aes.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/arm_arch.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/asn1.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/asn1_mac.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/asn1t.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/base.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/base64.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/bio.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/blake2.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/blowfish.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/bn.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/buf.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/buffer.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/bytestring.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/cast.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/chacha.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/cipher.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/cmac.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/conf.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/cpu.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/crypto.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/curve25519.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/des.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/dh.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/digest.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/dsa.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/dtls1.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/e_os2.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/ec.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/ec_key.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/ecdh.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/ecdsa.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/engine.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/err.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/evp.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/evp_errors.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/ex_data.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/hkdf.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/hmac.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/hpke.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/hrss.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/is_boringssl.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/lhash.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/md4.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/md5.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/mem.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/nid.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/obj.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/obj_mac.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/objects.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/opensslconf.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/opensslv.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/ossl_typ.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/pem.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/pkcs12.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/pkcs7.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/pkcs8.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/poly1305.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/pool.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/rand.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/rc4.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/ripemd.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/rsa.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/safestack.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/sha.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/siphash.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/span.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/srtp.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/ssl.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/ssl3.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/stack.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/thread.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/tls1.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/trust_token.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/type_check.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/x509.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/x509_vfy.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/include/openssl/x509v3.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/bio_ssl.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/d1_both.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/d1_lib.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/d1_pkt.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/d1_srtp.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/dtls_method.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/dtls_record.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/encrypted_client_hello.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/extensions.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/handoff.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/handshake.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/handshake_client.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/handshake_server.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/s3_both.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/s3_lib.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/s3_pkt.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/ssl_aead_ctx.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/ssl_asn1.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/ssl_buffer.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/ssl_cert.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/ssl_cipher.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/ssl_file.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/ssl_key_share.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/ssl_lib.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/ssl_privkey.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/ssl_session.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/ssl_stat.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/ssl_transcript.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/ssl_versions.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/ssl_x509.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/t1_enc.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/tls13_both.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/tls13_client.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/tls13_enc.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/tls13_server.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/tls_method.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/ssl/tls_record.cc" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/third_party/fiat/curve25519_32.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/third_party/fiat/curve25519_64.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/third_party/fiat/p256_32.h" role="src" />
     <file baseinstalldir="/" name="third_party/boringssl-with-bazel/src/third_party/fiat/p256_64.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/bitmap256.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/bitstate.cc" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/compile.cc" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/dfa.cc" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/filtered_re2.cc" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/filtered_re2.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/mimics_pcre.cc" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/nfa.cc" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/onepass.cc" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/parse.cc" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/perl_groups.cc" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/pod_array.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/prefilter.cc" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/prefilter.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/prefilter_tree.cc" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/prefilter_tree.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/prog.cc" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/prog.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/re2.cc" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/re2.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/regexp.cc" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/regexp.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/set.cc" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/set.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/simplify.cc" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/sparse_array.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/sparse_set.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/stringpiece.cc" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/stringpiece.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/tostring.cc" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/unicode_casefold.cc" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/unicode_casefold.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/unicode_groups.cc" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/unicode_groups.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/re2/walker-inl.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/util/benchmark.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/util/flags.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/util/logging.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/util/malloc_counter.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/util/mix.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/util/mutex.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/util/pcre.cc" role="src" />
     <file baseinstalldir="/" name="third_party/re2/util/pcre.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/util/rune.cc" role="src" />
     <file baseinstalldir="/" name="third_party/re2/util/strutil.cc" role="src" />
     <file baseinstalldir="/" name="third_party/re2/util/strutil.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/util/test.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/util/utf.h" role="src" />
     <file baseinstalldir="/" name="third_party/re2/util/util.h" role="src" />
     <file baseinstalldir="/" name="third_party/upb/third_party/utf8_range/naive.c" role="src" />
     <file baseinstalldir="/" name="third_party/upb/third_party/utf8_range/range2-neon.c" role="src" />
     <file baseinstalldir="/" name="third_party/upb/third_party/utf8_range/range2-sse.c" role="src" />
     <file baseinstalldir="/" name="third_party/upb/third_party/utf8_range/utf8_range.h" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/decode.c" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/decode.h" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/decode_fast.c" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/decode_fast.h" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/decode_internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/def.c" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/def.h" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/def.hpp" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/encode.c" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/encode.h" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/json_encode.c" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/json_encode.h" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/msg.c" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/msg.h" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/msg_internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/port_def.inc" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/port_undef.inc" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/reflection.c" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/reflection.h" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/reflection.hpp" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/table.c" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/table_internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/text_encode.c" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/text_encode.h" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/upb.c" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/upb.h" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/upb.hpp" role="src" />
     <file baseinstalldir="/" name="third_party/upb/upb/upb_internal.h" role="src" />
     <file baseinstalldir="/" name="third_party/xxhash/xxhash.h" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/adler32.c" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/compress.c" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/crc32.c" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/crc32.h" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/deflate.c" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/deflate.h" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/gzclose.c" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/gzguts.h" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/gzlib.c" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/gzread.c" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/gzwrite.c" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/infback.c" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/inffast.c" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/inffast.h" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/inffixed.h" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/inflate.c" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/inflate.h" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/inftrees.c" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/inftrees.h" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/trees.c" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/trees.h" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/uncompr.c" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/zconf.h" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/zlib.h" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/zutil.c" role="src" />
     <file baseinstalldir="/" name="third_party/zlib/zutil.h" role="src" />
     <file name="LICENSE" role="doc" />
   </dir>
  </contents>
  <dependencies>
   <required>
    <php>
     <min>7.0.0</min>
    </php>
    <pearinstaller>
     <min>1.4.0</min>
    </pearinstaller>
   </required>
  </dependencies>
  <providesextension>grpc</providesextension>
  <extsrcrelease />
  <changelog>
   <release>
    <version>
     <release>0.5.0</release>
     <api>0.5.0</api>
    </version>
    <stability>
     <release>alpha</release>
     <api>alpha</api>
    </stability>
    <date>2015-06-16</date>
    <license>BSD</license>
    <notes>
diff --git a/src/core/ext/filters/client_channel/client_channel.cc b/src/core/ext/filters/client_channel/client_channel.cc
index fbf8b4a99d..6c3c3a2adf 100644
--- a/src/core/ext/filters/client_channel/client_channel.cc
+++ b/src/core/ext/filters/client_channel/client_channel.cc
@@ -2938,13 +2938,13 @@ void ClientChannel::LoadBalancedCall::RecvInitialMetadataReady(
 void ClientChannel::LoadBalancedCall::RecvMessageReady(
     void* arg, grpc_error_handle error) {
   auto* self = static_cast<LoadBalancedCall*>(arg);
   if (GRPC_TRACE_FLAG_ENABLED(grpc_client_channel_lb_call_trace)) {
     gpr_log(GPR_INFO, "chand=%p lb_call=%p: got recv_message_ready: error=%s",
             self->chand_, self, grpc_error_std_string(error).c_str());
   }
-  if (self->recv_message_->has_value()) {
+  if (*self->recv_message_ != nullptr) {
     self->call_attempt_tracer_->RecordReceivedMessage(**self->recv_message_);
   }
   Closure::Run(DEBUG_LOCATION, self->original_recv_message_ready_,
                GRPC_ERROR_REF(error));
 }
diff --git a/src/core/ext/filters/client_channel/client_channel.h b/src/core/ext/filters/client_channel/client_channel.h
index 1b8da1eb9f..16efd35154 100644
--- a/src/core/ext/filters/client_channel/client_channel.h
+++ b/src/core/ext/filters/client_channel/client_channel.h
@@ -1,105 +1,105 @@
 //
 // Copyright 2015 gRPC authors.
 //
 // Licensed under the Apache License, Version 2.0 (the "License");
 // you may not use this file except in compliance with the License.
 // You may obtain a copy of the License at
 //
 //     http://www.apache.org/licenses/LICENSE-2.0
 //
 // Unless required by applicable law or agreed to in writing, software
 // distributed under the License is distributed on an "AS IS" BASIS,
 // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 // See the License for the specific language governing permissions and
 // limitations under the License.
 //
 
 #ifndef GRPC_CORE_EXT_FILTERS_CLIENT_CHANNEL_CLIENT_CHANNEL_H
 #define GRPC_CORE_EXT_FILTERS_CLIENT_CHANNEL_CLIENT_CHANNEL_H
 
 #include <grpc/support/port_platform.h>
 
 #include <stddef.h>
 
 #include <atomic>
 #include <map>
 #include <memory>
 #include <set>
 #include <string>
 #include <utility>
 
 #include "absl/base/thread_annotations.h"
 #include "absl/status/status.h"
 #include "absl/strings/string_view.h"
 #include "absl/types/optional.h"
 
 #include <grpc/impl/codegen/connectivity_state.h>
 #include <grpc/impl/codegen/grpc_types.h>
 #include <grpc/support/atm.h>
 
 #include "src/core/ext/filters/client_channel/client_channel_factory.h"
 #include "src/core/ext/filters/client_channel/config_selector.h"
 #include "src/core/ext/filters/client_channel/dynamic_filters.h"
 #include "src/core/ext/filters/client_channel/lb_policy.h"
 #include "src/core/ext/filters/client_channel/lb_policy/backend_metric_data.h"
 #include "src/core/ext/filters/client_channel/subchannel.h"
 #include "src/core/ext/filters/client_channel/subchannel_pool_interface.h"
 #include "src/core/lib/channel/call_tracer.h"
 #include "src/core/lib/channel/channel_fwd.h"
 #include "src/core/lib/channel/channel_stack.h"
 #include "src/core/lib/channel/channelz.h"
 #include "src/core/lib/channel/context.h"
 #include "src/core/lib/gpr/time_precise.h"
 #include "src/core/lib/gprpp/orphanable.h"
 #include "src/core/lib/gprpp/ref_counted.h"
 #include "src/core/lib/gprpp/ref_counted_ptr.h"
 #include "src/core/lib/gprpp/sync.h"
 #include "src/core/lib/gprpp/time.h"
 #include "src/core/lib/gprpp/unique_type_name.h"
 #include "src/core/lib/iomgr/call_combiner.h"
 #include "src/core/lib/iomgr/closure.h"
 #include "src/core/lib/iomgr/error.h"
 #include "src/core/lib/iomgr/iomgr_fwd.h"
 #include "src/core/lib/iomgr/polling_entity.h"
 #include "src/core/lib/iomgr/work_serializer.h"
 #include "src/core/lib/resolver/resolver.h"
 #include "src/core/lib/resource_quota/arena.h"
 #include "src/core/lib/service_config/service_config.h"
 #include "src/core/lib/service_config/service_config_call_data.h"
 #include "src/core/lib/service_config/service_config_parser.h"
 #include "src/core/lib/slice/slice.h"
-#include "src/core/lib/slice/slice_buffer.h"
 #include "src/core/lib/surface/channel.h"
+#include "src/core/lib/transport/byte_stream.h"
 #include "src/core/lib/transport/connectivity_state.h"
 #include "src/core/lib/transport/metadata_batch.h"
 #include "src/core/lib/transport/transport.h"
 
 //
 // Client channel filter
 //
 
 // A client channel is a channel that begins disconnected, and can connect
 // to some endpoint on demand. If that endpoint disconnects, it will be
 // connected to again later.
 //
 // Calls on a disconnected client channel are queued until a connection is
 // established.
 
 // Channel arg key for server URI string.
 #define GRPC_ARG_SERVER_URI "grpc.server_uri"
 
 // Channel arg containing a pointer to the ClientChannel object.
 #define GRPC_ARG_CLIENT_CHANNEL "grpc.internal.client_channel"
 
 // Channel arg containing a pointer to the ServiceConfig object.
 #define GRPC_ARG_SERVICE_CONFIG_OBJ "grpc.internal.service_config_obj"
 
 // Max number of batches that can be pending on a call at any given
 // time.  This includes one batch for each of the following ops:
 //   recv_initial_metadata
 //   send_initial_metadata
 //   recv_message
 //   send_message
 //   recv_trailing_metadata
 //   send_trailing_metadata
 #define MAX_PENDING_BATCHES 6
@@ -382,176 +382,176 @@ class ClientChannel {
 // TODO(roth): As part of simplifying cancellation in the filter stack,
 // this should no longer need to be ref-counted.
 class ClientChannel::LoadBalancedCall
     : public InternallyRefCounted<LoadBalancedCall, kUnrefCallDtor> {
  public:
   class LbCallState : public LoadBalancingPolicy::CallState {
    public:
     explicit LbCallState(LoadBalancedCall* lb_call) : lb_call_(lb_call) {}
 
     void* Alloc(size_t size) override { return lb_call_->arena_->Alloc(size); }
 
     // Internal API to allow first-party LB policies to access per-call
     // attributes set by the ConfigSelector.
     absl::string_view GetCallAttribute(UniqueTypeName type);
 
    private:
     LoadBalancedCall* lb_call_;
   };
 
   // If on_call_destruction_complete is non-null, then it will be
   // invoked once the LoadBalancedCall is completely destroyed.
   // If it is null, then the caller is responsible for checking whether
   // the LB call has a subchannel call and ensuring that the
   // on_call_destruction_complete closure passed down from the surface
   // is not invoked until after the subchannel call stack is destroyed.
   LoadBalancedCall(
       ClientChannel* chand, const grpc_call_element_args& args,
       grpc_polling_entity* pollent, grpc_closure* on_call_destruction_complete,
       ConfigSelector::CallDispatchController* call_dispatch_controller,
       bool is_transparent_retry);
   ~LoadBalancedCall() override;
 
   void Orphan() override;
 
   void StartTransportStreamOpBatch(grpc_transport_stream_op_batch* batch);
 
   // Invoked by channel for queued LB picks when the picker is updated.
   static void PickSubchannel(void* arg, grpc_error_handle error);
   // Helper function for performing an LB pick while holding the data plane
   // mutex.  Returns true if the pick is complete, in which case the caller
   // must invoke PickDone() or AsyncPickDone() with the returned error.
   bool PickSubchannelLocked(grpc_error_handle* error)
       ABSL_EXCLUSIVE_LOCKS_REQUIRED(&ClientChannel::data_plane_mu_);
   // Schedules a callback to process the completed pick.  The callback
   // will not run until after this method returns.
   void AsyncPickDone(grpc_error_handle error);
 
   RefCountedPtr<SubchannelCall> subchannel_call() const {
     return subchannel_call_;
   }
 
  private:
   class LbQueuedCallCanceller;
   class Metadata;
   class BackendMetricAccessor;
 
   // Returns the index into pending_batches_ to be used for batch.
   static size_t GetBatchIndex(grpc_transport_stream_op_batch* batch);
   void PendingBatchesAdd(grpc_transport_stream_op_batch* batch);
   static void FailPendingBatchInCallCombiner(void* arg,
                                              grpc_error_handle error);
   // A predicate type and some useful implementations for PendingBatchesFail().
   typedef bool (*YieldCallCombinerPredicate)(
       const CallCombinerClosureList& closures);
   static bool YieldCallCombiner(const CallCombinerClosureList& /*closures*/) {
     return true;
   }
   static bool NoYieldCallCombiner(const CallCombinerClosureList& /*closures*/) {
     return false;
   }
   static bool YieldCallCombinerIfPendingBatchesFound(
       const CallCombinerClosureList& closures) {
     return closures.size() > 0;
   }
   // Fails all pending batches.
   // If yield_call_combiner_predicate returns true, assumes responsibility for
   // yielding the call combiner.
   void PendingBatchesFail(
       grpc_error_handle error,
       YieldCallCombinerPredicate yield_call_combiner_predicate);
   static void ResumePendingBatchInCallCombiner(void* arg,
                                                grpc_error_handle ignored);
   // Resumes all pending batches on subchannel_call_.
   void PendingBatchesResume();
 
   static void SendInitialMetadataOnComplete(void* arg, grpc_error_handle error);
   static void RecvInitialMetadataReady(void* arg, grpc_error_handle error);
   static void RecvMessageReady(void* arg, grpc_error_handle error);
   static void RecvTrailingMetadataReady(void* arg, grpc_error_handle error);
 
   void RecordCallCompletion(absl::Status status);
 
   void CreateSubchannelCall();
   // Invoked when a pick is completed, on both success or failure.
   static void PickDone(void* arg, grpc_error_handle error);
   // Removes the call from the channel's list of queued picks if present.
   void MaybeRemoveCallFromLbQueuedCallsLocked()
       ABSL_EXCLUSIVE_LOCKS_REQUIRED(&ClientChannel::data_plane_mu_);
   // Adds the call to the channel's list of queued picks if not already present.
   void MaybeAddCallToLbQueuedCallsLocked()
       ABSL_EXCLUSIVE_LOCKS_REQUIRED(&ClientChannel::data_plane_mu_);
 
   ClientChannel* chand_;
 
   // TODO(roth): Instead of duplicating these fields in every filter
   // that uses any one of them, we should store them in the call
   // context.  This will save per-call memory overhead.
   Slice path_;  // Request path.
   Timestamp deadline_;
   Arena* arena_;
   grpc_call_stack* owning_call_;
   CallCombiner* call_combiner_;
   grpc_call_context_element* call_context_;
   grpc_polling_entity* pollent_;
   grpc_closure* on_call_destruction_complete_;
   ConfigSelector::CallDispatchController* call_dispatch_controller_;
 
   CallTracer::CallAttemptTracer* call_attempt_tracer_;
 
   gpr_cycle_counter lb_call_start_time_ = gpr_get_cycle_counter();
 
   // Set when we get a cancel_stream op.
   grpc_error_handle cancel_error_ = GRPC_ERROR_NONE;
 
   // Set when we fail inside the LB call.
   grpc_error_handle failure_error_ = GRPC_ERROR_NONE;
 
   grpc_closure pick_closure_;
 
   // Accessed while holding ClientChannel::data_plane_mu_.
   ClientChannel::LbQueuedCall queued_call_
       ABSL_GUARDED_BY(&ClientChannel::data_plane_mu_);
   bool queued_pending_lb_pick_ ABSL_GUARDED_BY(&ClientChannel::data_plane_mu_) =
       false;
   LbQueuedCallCanceller* lb_call_canceller_
       ABSL_GUARDED_BY(&ClientChannel::data_plane_mu_) = nullptr;
 
   RefCountedPtr<ConnectedSubchannel> connected_subchannel_;
   const BackendMetricData* backend_metric_data_ = nullptr;
   std::unique_ptr<LoadBalancingPolicy::SubchannelCallTrackerInterface>
       lb_subchannel_call_tracker_;
 
   RefCountedPtr<SubchannelCall> subchannel_call_;
 
   // For intercepting send_initial_metadata on_complete.
   gpr_atm* peer_string_ = nullptr;
   grpc_closure send_initial_metadata_on_complete_;
   grpc_closure* original_send_initial_metadata_on_complete_ = nullptr;
 
   // For intercepting recv_initial_metadata_ready.
   grpc_metadata_batch* recv_initial_metadata_ = nullptr;
   grpc_closure recv_initial_metadata_ready_;
   grpc_closure* original_recv_initial_metadata_ready_ = nullptr;
 
   // For intercepting recv_message_ready.
-  absl::optional<SliceBuffer>* recv_message_ = nullptr;
+  OrphanablePtr<ByteStream>* recv_message_ = nullptr;
   grpc_closure recv_message_ready_;
   grpc_closure* original_recv_message_ready_ = nullptr;
 
   // For intercepting recv_trailing_metadata_ready.
   grpc_metadata_batch* recv_trailing_metadata_ = nullptr;
   grpc_transport_stream_stats* transport_stream_stats_ = nullptr;
   grpc_closure recv_trailing_metadata_ready_;
   grpc_closure* original_recv_trailing_metadata_ready_ = nullptr;
 
   // Batches are added to this list when received from above.
   // They are removed when we are done handling the batch (i.e., when
   // either we have invoked all of the batch's callbacks or we have
   // passed the batch down to the subchannel call and are not
   // intercepting any of its callbacks).
   grpc_transport_stream_op_batch* pending_batches_[MAX_PENDING_BATCHES] = {};
 };
 
 // A sub-class of ServiceConfigCallData used to access the
 // CallDispatchController.  Allocated on the arena, stored in the call
 // context, and destroyed when the call is destroyed.
diff --git a/src/core/ext/filters/client_channel/retry_filter.cc b/src/core/ext/filters/client_channel/retry_filter.cc
index e3d705a9d1..5f0633a2cf 100644
--- a/src/core/ext/filters/client_channel/retry_filter.cc
+++ b/src/core/ext/filters/client_channel/retry_filter.cc
@@ -1,128 +1,127 @@
 //
 // Copyright 2015 gRPC authors.
 //
 // Licensed under the Apache License, Version 2.0 (the "License");
 // you may not use this file except in compliance with the License.
 // You may obtain a copy of the License at
 //
 //     http://www.apache.org/licenses/LICENSE-2.0
 //
 // Unless required by applicable law or agreed to in writing, software
 // distributed under the License is distributed on an "AS IS" BASIS,
 // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 // See the License for the specific language governing permissions and
 // limitations under the License.
 //
 
 #include <grpc/support/port_platform.h>
 
 #include "src/core/ext/filters/client_channel/retry_filter.h"
 
 #include <inttypes.h>
 #include <limits.h>
 #include <stddef.h>
 
 #include <memory>
 #include <new>
 #include <string>
 #include <utility>
 
 #include "absl/container/inlined_vector.h"
 #include "absl/status/statusor.h"
 #include "absl/strings/str_cat.h"
 #include "absl/strings/string_view.h"
 #include "absl/strings/strip.h"
 #include "absl/types/optional.h"
-#include "absl/utility/utility.h"
 
 #include <grpc/impl/codegen/grpc_types.h>
 #include <grpc/slice.h>
 #include <grpc/status.h>
 #include <grpc/support/atm.h>
 #include <grpc/support/log.h>
 
 #include "src/core/ext/filters/client_channel/client_channel.h"
 #include "src/core/ext/filters/client_channel/config_selector.h"
 #include "src/core/ext/filters/client_channel/retry_service_config.h"
 #include "src/core/ext/filters/client_channel/retry_throttle.h"
 #include "src/core/lib/backoff/backoff.h"
 #include "src/core/lib/channel/channel_args.h"
 #include "src/core/lib/channel/channel_stack.h"
 #include "src/core/lib/channel/context.h"
 #include "src/core/lib/channel/status_util.h"
 #include "src/core/lib/debug/trace.h"
 #include "src/core/lib/gpr/useful.h"
-#include "src/core/lib/gprpp/construct_destruct.h"
 #include "src/core/lib/gprpp/debug_location.h"
+#include "src/core/lib/gprpp/manual_constructor.h"
 #include "src/core/lib/gprpp/orphanable.h"
 #include "src/core/lib/gprpp/ref_counted.h"
 #include "src/core/lib/gprpp/ref_counted_ptr.h"
 #include "src/core/lib/gprpp/time.h"
 #include "src/core/lib/iomgr/call_combiner.h"
 #include "src/core/lib/iomgr/closure.h"
 #include "src/core/lib/iomgr/error.h"
 #include "src/core/lib/iomgr/exec_ctx.h"
 #include "src/core/lib/iomgr/polling_entity.h"
 #include "src/core/lib/iomgr/timer.h"
 #include "src/core/lib/resource_quota/arena.h"
 #include "src/core/lib/service_config/service_config.h"
 #include "src/core/lib/service_config/service_config_call_data.h"
-#include "src/core/lib/slice/slice_buffer.h"
 #include "src/core/lib/slice/slice_refcount.h"
+#include "src/core/lib/transport/byte_stream.h"
 #include "src/core/lib/transport/error_utils.h"
 #include "src/core/lib/transport/metadata_batch.h"
 #include "src/core/lib/transport/transport.h"
 #include "src/core/lib/uri/uri_parser.h"
 
 //
 // Retry filter
 //
 
 // This filter is intended to be used in the DynamicFilter stack in the
 // client channel, which is situated between the name resolver and the
 // LB policy.  Normally, the last filter in the DynamicFilter stack is
 // the DynamicTerminationFilter (see client_channel.cc), which creates a
 // LoadBalancedCall and delegates to it.  However, when retries are
 // enabled, this filter is used instead of the DynamicTerminationFilter.
 //
 // In order to support retries, we act as a proxy for stream op batches.
 // When we get a batch from the surface, we add it to our list of pending
 // batches, and we then use those batches to construct separate "child"
 // batches to be started on an LB call.  When the child batches return, we
 // then decide which pending batches have been completed and schedule their
 // callbacks accordingly.  If a call attempt fails and we want to retry it,
 // we create a new LB call and start again, constructing new "child" batches
 // for the new LB call.
 //
 // Note that retries are committed when receiving data from the server
 // (except for Trailers-Only responses).  However, there may be many
 // send ops started before receiving any data, so we may have already
 // completed some number of send ops (and returned the completions up to
 // the surface) by the time we realize that we need to retry.  To deal
 // with this, we cache data for send ops, so that we can replay them on a
 // different LB call even after we have completed the original batches.
 //
 // The code is structured as follows:
 // - In CallData (in the parent channel), we maintain a list of pending
 //   ops and cached data for send ops.
 // - There is a CallData::CallAttempt object for each retry attempt.
 //   This object contains the LB call for that attempt and state to indicate
 //   which ops from the CallData object have already been sent down to that
 //   LB call.
 // - There is a CallData::CallAttempt::BatchData object for each "child"
 //   batch sent on the LB call.
 //
 // When constructing the "child" batches, we compare the state in the
 // CallAttempt object against the state in the CallData object to see
 // which batches need to be sent on the LB call for a given attempt.
 
 // TODO(roth): In subsequent PRs:
 // - implement hedging
 
 // By default, we buffer 256 KiB per RPC for retries.
 // TODO(roth): Do we have any data to suggest a better value?
 #define DEFAULT_PER_RPC_RETRY_BUFFER_SIZE (256 << 10)
 
 // This value was picked arbitrarily.  It can be changed if there is
 // any even moderately compelling reason to do so.
 #define RETRY_BACKOFF_JITTER 0.2
@@ -226,430 +225,432 @@ class RetryFilter {
 class RetryFilter::CallData {
  public:
   static grpc_error_handle Init(grpc_call_element* elem,
                                 const grpc_call_element_args* args);
   static void Destroy(grpc_call_element* elem,
                       const grpc_call_final_info* /*final_info*/,
                       grpc_closure* then_schedule_closure);
   static void StartTransportStreamOpBatch(
       grpc_call_element* elem, grpc_transport_stream_op_batch* batch);
   static void SetPollent(grpc_call_element* elem, grpc_polling_entity* pollent);
 
  private:
   class CallStackDestructionBarrier;
 
   // Pending batches stored in call data.
   struct PendingBatch {
     // The pending batch.  If nullptr, this slot is empty.
     grpc_transport_stream_op_batch* batch = nullptr;
     // Indicates whether payload for send ops has been cached in CallData.
     bool send_ops_cached = false;
   };
 
   // State associated with each call attempt.
   class CallAttempt : public RefCounted<CallAttempt> {
    public:
     CallAttempt(CallData* calld, bool is_transparent_retry);
     ~CallAttempt() override;
 
     bool lb_call_committed() const { return lb_call_committed_; }
 
     // Constructs and starts whatever batches are needed on this call
     // attempt.
     void StartRetriableBatches();
 
     // Frees cached send ops that have already been completed after
     // committing the call.
     void FreeCachedSendOpDataAfterCommit();
 
     // Cancels the call attempt.
     void CancelFromSurface(grpc_transport_stream_op_batch* cancel_batch);
 
    private:
     // State used for starting a retryable batch on the call attempt's LB call.
     // This provides its own grpc_transport_stream_op_batch and other data
     // structures needed to populate the ops in the batch.
     // We allocate one struct on the arena for each attempt at starting a
     // batch on a given LB call.
     class BatchData
         : public RefCounted<BatchData, PolymorphicRefCount, kUnrefCallDtor> {
      public:
       BatchData(RefCountedPtr<CallAttempt> call_attempt, int refcount,
                 bool set_on_complete);
       ~BatchData() override;
 
       grpc_transport_stream_op_batch* batch() { return &batch_; }
 
       // Adds retriable send_initial_metadata op.
       void AddRetriableSendInitialMetadataOp();
       // Adds retriable send_message op.
       void AddRetriableSendMessageOp();
       // Adds retriable send_trailing_metadata op.
       void AddRetriableSendTrailingMetadataOp();
       // Adds retriable recv_initial_metadata op.
       void AddRetriableRecvInitialMetadataOp();
       // Adds retriable recv_message op.
       void AddRetriableRecvMessageOp();
       // Adds retriable recv_trailing_metadata op.
       void AddRetriableRecvTrailingMetadataOp();
       // Adds cancel_stream op.
       void AddCancelStreamOp(grpc_error_handle error);
 
      private:
       // Frees cached send ops that were completed by the completed batch in
       // batch_data.  Used when batches are completed after the call is
       // committed.
       void FreeCachedSendOpDataForCompletedBatch();
 
       // If there is a pending recv_initial_metadata op, adds a closure
       // to closures for recv_initial_metadata_ready.
       void MaybeAddClosureForRecvInitialMetadataCallback(
           grpc_error_handle error, CallCombinerClosureList* closures);
       // Intercepts recv_initial_metadata_ready callback for retries.
       // Commits the call and returns the initial metadata up the stack.
       static void RecvInitialMetadataReady(void* arg, grpc_error_handle error);
 
       // If there is a pending recv_message op, adds a closure to closures
       // for recv_message_ready.
       void MaybeAddClosureForRecvMessageCallback(
           grpc_error_handle error, CallCombinerClosureList* closures);
       // Intercepts recv_message_ready callback for retries.
       // Commits the call and returns the message up the stack.
       static void RecvMessageReady(void* arg, grpc_error_handle error);
 
       // If there is a pending recv_trailing_metadata op, adds a closure to
       // closures for recv_trailing_metadata_ready.
       void MaybeAddClosureForRecvTrailingMetadataReady(
           grpc_error_handle error, CallCombinerClosureList* closures);
       // Adds any necessary closures for deferred batch completion
       // callbacks to closures.
       void AddClosuresForDeferredCompletionCallbacks(
           CallCombinerClosureList* closures);
       // For any pending batch containing an op that has not yet been started,
       // adds the pending batch's completion closures to closures.
       void AddClosuresToFailUnstartedPendingBatches(
           grpc_error_handle error, CallCombinerClosureList* closures);
       // Runs necessary closures upon completion of a call attempt.
       void RunClosuresForCompletedCall(grpc_error_handle error);
       // Intercepts recv_trailing_metadata_ready callback for retries.
       // Commits the call and returns the trailing metadata up the stack.
       static void RecvTrailingMetadataReady(void* arg, grpc_error_handle error);
 
       // Adds the on_complete closure for the pending batch completed in
       // batch_data to closures.
       void AddClosuresForCompletedPendingBatch(
           grpc_error_handle error, CallCombinerClosureList* closures);
 
       // If there are any cached ops to replay or pending ops to start on the
       // LB call, adds them to closures.
       void AddClosuresForReplayOrPendingSendOps(
           CallCombinerClosureList* closures);
 
       // Callback used to intercept on_complete from LB calls.
       static void OnComplete(void* arg, grpc_error_handle error);
 
       // Callback used to handle on_complete for internally generated
       // cancel_stream op.
       static void OnCompleteForCancelOp(void* arg, grpc_error_handle error);
 
       RefCountedPtr<CallAttempt> call_attempt_;
       // The batch to use in the LB call.
       // Its payload field points to CallAttempt::batch_payload_.
       grpc_transport_stream_op_batch batch_;
       // For intercepting on_complete.
       grpc_closure on_complete_;
     };
 
     class AttemptDispatchController
         : public ConfigSelector::CallDispatchController {
      public:
       explicit AttemptDispatchController(CallAttempt* call_attempt)
           : call_attempt_(call_attempt) {}
 
       // Will never be called.
       bool ShouldRetry() override { return false; }
 
       void Commit() override {
         call_attempt_->lb_call_committed_ = true;
         auto* calld = call_attempt_->calld_;
         if (calld->retry_committed_) {
           auto* service_config_call_data =
               static_cast<ClientChannelServiceConfigCallData*>(
                   calld->call_context_[GRPC_CONTEXT_SERVICE_CONFIG_CALL_DATA]
                       .value);
           service_config_call_data->call_dispatch_controller()->Commit();
         }
       }
 
      private:
       CallAttempt* call_attempt_;
     };
 
     // Creates a BatchData object on the call's arena with the
     // specified refcount.  If set_on_complete is true, the batch's
     // on_complete callback will be set to point to on_complete();
     // otherwise, the batch's on_complete callback will be null.
     BatchData* CreateBatch(int refcount, bool set_on_complete) {
       return calld_->arena_->New<BatchData>(Ref(DEBUG_LOCATION, "CreateBatch"),
                                             refcount, set_on_complete);
     }
 
     // If there are any cached send ops that need to be replayed on this
     // call attempt, creates and returns a new batch to replay those ops.
     // Otherwise, returns nullptr.
     BatchData* MaybeCreateBatchForReplay();
 
     // Adds a closure to closures that will execute batch in the call combiner.
     void AddClosureForBatch(grpc_transport_stream_op_batch* batch,
                             const char* reason,
                             CallCombinerClosureList* closures);
 
     // Helper function used to start a recv_trailing_metadata batch.  This
     // is used in the case where a recv_initial_metadata or recv_message
     // op fails in a way that we know the call is over but when the application
     // has not yet started its own recv_trailing_metadata op.
     void AddBatchForInternalRecvTrailingMetadata(
         CallCombinerClosureList* closures);
 
     // Adds a batch to closures to cancel this call attempt, if
     // cancellation has not already been sent on the LB call.
     void MaybeAddBatchForCancelOp(grpc_error_handle error,
                                   CallCombinerClosureList* closures);
 
     // Adds batches for pending batches to closures.
     void AddBatchesForPendingBatches(CallCombinerClosureList* closures);
 
     // Adds whatever batches are needed on this attempt to closures.
     void AddRetriableBatches(CallCombinerClosureList* closures);
 
     // Returns true if any send op in the batch was not yet started on this
     // attempt.
     bool PendingBatchContainsUnstartedSendOps(PendingBatch* pending);
 
     // Returns true if there are cached send ops to replay.
     bool HaveSendOpsToReplay();
 
     // If our retry state is no longer needed, switch to fast path by moving
     // our LB call into calld_->committed_call_ and having calld_ drop
     // its ref to us.
     void MaybeSwitchToFastPath();
 
     // Returns true if the call should be retried.
     bool ShouldRetry(absl::optional<grpc_status_code> status,
                      absl::optional<Duration> server_pushback_ms);
 
     // Abandons the call attempt.  Unrefs any deferred batches.
     void Abandon();
 
     static void OnPerAttemptRecvTimer(void* arg, grpc_error_handle error);
     static void OnPerAttemptRecvTimerLocked(void* arg, grpc_error_handle error);
     void MaybeCancelPerAttemptRecvTimer();
 
     CallData* calld_;
     AttemptDispatchController attempt_dispatch_controller_;
     OrphanablePtr<ClientChannel::LoadBalancedCall> lb_call_;
     bool lb_call_committed_ = false;
 
     grpc_timer per_attempt_recv_timer_;
     grpc_closure on_per_attempt_recv_timer_;
     bool per_attempt_recv_timer_pending_ = false;
 
     // BatchData.batch.payload points to this.
     grpc_transport_stream_op_batch_payload batch_payload_;
     // For send_initial_metadata.
     grpc_metadata_batch send_initial_metadata_{calld_->arena_};
+    // For send_message.
+    // TODO(roth): Restructure this to eliminate use of ManualConstructor.
+    ManualConstructor<ByteStreamCache::CachingByteStream> send_message_;
     // For send_trailing_metadata.
     grpc_metadata_batch send_trailing_metadata_{calld_->arena_};
     // For intercepting recv_initial_metadata.
     grpc_metadata_batch recv_initial_metadata_{calld_->arena_};
     grpc_closure recv_initial_metadata_ready_;
     bool trailing_metadata_available_ = false;
     // For intercepting recv_message.
     grpc_closure recv_message_ready_;
-    absl::optional<SliceBuffer> recv_message_;
-    uint32_t recv_message_flags_;
+    OrphanablePtr<ByteStream> recv_message_;
     // For intercepting recv_trailing_metadata.
     grpc_metadata_batch recv_trailing_metadata_{calld_->arena_};
     grpc_transport_stream_stats collect_stats_;
     grpc_closure recv_trailing_metadata_ready_;
     // These fields indicate which ops have been started and completed on
     // this call attempt.
     size_t started_send_message_count_ = 0;
     size_t completed_send_message_count_ = 0;
     size_t started_recv_message_count_ = 0;
     size_t completed_recv_message_count_ = 0;
     bool started_send_initial_metadata_ : 1;
     bool completed_send_initial_metadata_ : 1;
     bool started_send_trailing_metadata_ : 1;
     bool completed_send_trailing_metadata_ : 1;
     bool started_recv_initial_metadata_ : 1;
     bool completed_recv_initial_metadata_ : 1;
     bool started_recv_trailing_metadata_ : 1;
     bool completed_recv_trailing_metadata_ : 1;
     bool sent_cancel_stream_ : 1;
     // State for callback processing.
     RefCountedPtr<BatchData> recv_initial_metadata_ready_deferred_batch_;
     grpc_error_handle recv_initial_metadata_error_ = GRPC_ERROR_NONE;
     RefCountedPtr<BatchData> recv_message_ready_deferred_batch_;
     grpc_error_handle recv_message_error_ = GRPC_ERROR_NONE;
     struct OnCompleteDeferredBatch {
       OnCompleteDeferredBatch(RefCountedPtr<BatchData> batch,
                               grpc_error_handle error)
           : batch(std::move(batch)), error(error) {}
       RefCountedPtr<BatchData> batch;
       grpc_error_handle error;
     };
     // There cannot be more than 3 pending send op batches at a time.
     absl::InlinedVector<OnCompleteDeferredBatch, 3>
         on_complete_deferred_batches_;
     RefCountedPtr<BatchData> recv_trailing_metadata_internal_batch_;
     grpc_error_handle recv_trailing_metadata_error_ = GRPC_ERROR_NONE;
     bool seen_recv_trailing_metadata_from_surface_ : 1;
     // NOTE: Do not move this next to the metadata bitfields above. That would
     //       save space but will also result in a data race because compiler
     //       will generate a 2 byte store which overwrites the meta-data
     //       fields upon setting this field.
     bool abandoned_ : 1;
   };
 
   CallData(RetryFilter* chand, const grpc_call_element_args& args);
   ~CallData();
 
   void StartTransportStreamOpBatch(grpc_transport_stream_op_batch* batch);
 
   // Returns the index into pending_batches_ to be used for batch.
   static size_t GetBatchIndex(grpc_transport_stream_op_batch* batch);
   PendingBatch* PendingBatchesAdd(grpc_transport_stream_op_batch* batch);
   void PendingBatchClear(PendingBatch* pending);
   void MaybeClearPendingBatch(PendingBatch* pending);
   static void FailPendingBatchInCallCombiner(void* arg,
                                              grpc_error_handle error);
   // Fails all pending batches.  Does NOT yield call combiner.
   void PendingBatchesFail(grpc_error_handle error);
   // Returns a pointer to the first pending batch for which predicate(batch)
   // returns true, or null if not found.
   template <typename Predicate>
   PendingBatch* PendingBatchFind(const char* log_message, Predicate predicate);
 
   // Caches data for send ops so that it can be retried later, if not
   // already cached.
   void MaybeCacheSendOpsForBatch(PendingBatch* pending);
   void FreeCachedSendInitialMetadata();
   // Frees cached send_message at index idx.
   void FreeCachedSendMessage(size_t idx);
   void FreeCachedSendTrailingMetadata();
   void FreeAllCachedSendOpData();
 
   // Commits the call so that no further retry attempts will be performed.
   void RetryCommit(CallAttempt* call_attempt);
 
   // Starts a timer to retry after appropriate back-off.
   // If server_pushback is nullopt, retry_backoff_ is used.
   void StartRetryTimer(absl::optional<Duration> server_pushback);
 
   static void OnRetryTimer(void* arg, grpc_error_handle error);
   static void OnRetryTimerLocked(void* arg, grpc_error_handle error);
 
   // Adds a closure to closures to start a transparent retry.
   void AddClosureToStartTransparentRetry(CallCombinerClosureList* closures);
   static void StartTransparentRetry(void* arg, grpc_error_handle error);
 
   OrphanablePtr<ClientChannel::LoadBalancedCall> CreateLoadBalancedCall(
       ConfigSelector::CallDispatchController* call_dispatch_controller,
       bool is_transparent_retry);
 
   void CreateCallAttempt(bool is_transparent_retry);
 
   RetryFilter* chand_;
   grpc_polling_entity* pollent_;
   RefCountedPtr<ServerRetryThrottleData> retry_throttle_data_;
   const RetryMethodConfig* retry_policy_ = nullptr;
   BackOff retry_backoff_;
 
   grpc_slice path_;  // Request path.
   Timestamp deadline_;
   Arena* arena_;
   grpc_call_stack* owning_call_;
   CallCombiner* call_combiner_;
   grpc_call_context_element* call_context_;
 
   grpc_error_handle cancelled_from_surface_ = GRPC_ERROR_NONE;
 
   RefCountedPtr<CallStackDestructionBarrier> call_stack_destruction_barrier_;
 
   // TODO(roth): As part of implementing hedging, we will need to maintain a
   // list of all pending attempts, so that we can cancel them all if the call
   // gets cancelled.
   RefCountedPtr<CallAttempt> call_attempt_;
 
   // LB call used when we've committed to a call attempt and the retry
   // state for that attempt is no longer needed.  This provides a fast
   // path for long-running streaming calls that minimizes overhead.
   OrphanablePtr<ClientChannel::LoadBalancedCall> committed_call_;
 
   // When are are not yet fully committed to a particular call (i.e.,
   // either we might still retry or we have committed to the call but
   // there are still some cached ops to be replayed on the call),
   // batches received from above will be added to this list, and they
   // will not be removed until we have invoked their completion callbacks.
   size_t bytes_buffered_for_retry_ = 0;
   PendingBatch pending_batches_[MAX_PENDING_BATCHES];
   bool pending_send_initial_metadata_ : 1;
   bool pending_send_message_ : 1;
   bool pending_send_trailing_metadata_ : 1;
 
   // Retry state.
   bool retry_committed_ : 1;
   bool retry_timer_pending_ : 1;
   bool retry_codepath_started_ : 1;
   bool sent_transparent_retry_not_seen_by_server_ : 1;
   int num_attempts_completed_ = 0;
   grpc_timer retry_timer_;
   grpc_closure retry_closure_;
 
   // Cached data for retrying send ops.
   // send_initial_metadata
   bool seen_send_initial_metadata_ = false;
   grpc_metadata_batch send_initial_metadata_{arena_};
   uint32_t send_initial_metadata_flags_;
   // TODO(roth): As part of implementing hedging, we'll probably need to
   // have the LB call set a value in CallAttempt and then propagate it
   // from CallAttempt to the parent call when we commit.  Otherwise, we
   // may leave this with a value for a peer other than the one we
   // actually commit to.  Alternatively, maybe see if there's a way to
   // change the surface API such that the peer isn't available until
   // after initial metadata is received?  (Could even change the
   // transport API to return this with the recv_initial_metadata op.)
   gpr_atm* peer_string_;
   // send_message
   // When we get a send_message op, we replace the original byte stream
   // with a CachingByteStream that caches the slices to a local buffer for
   // use in retries.
   // Note: We inline the cache for the first 3 send_message ops and use
   // dynamic allocation after that.  This number was essentially picked
   // at random; it could be changed in the future to tune performance.
-  struct CachedSendMessage {
-    SliceBuffer* slices;
-    uint32_t flags;
-  };
-  absl::InlinedVector<CachedSendMessage, 3> send_messages_;
+  // TODO(roth): As part of implementing hedging, we may need some
+  // synchronization here, since ByteStreamCache does not provide any
+  // synchronization, so it's not safe to have multiple
+  // CachingByteStreams read from the same ByteStreamCache concurrently.
+  absl::InlinedVector<ByteStreamCache*, 3> send_messages_;
   // send_trailing_metadata
   bool seen_send_trailing_metadata_ = false;
   grpc_metadata_batch send_trailing_metadata_{arena_};
 };
 
 //
 // RetryFilter::CallData::CallStackDestructionBarrier
 //
 
 // A class to track the existence of LoadBalancedCall call stacks that
 // we've created.  We wait until all such call stacks have been
 // destroyed before we return the on_call_stack_destruction closure up
 // to the surface.
 //
 // The parent RetryFilter::CallData object holds a ref to this object.
 // When it is destroyed, it will store the on_call_stack_destruction
 // closure from the surface in this object and then release its ref.
 // We also take a ref to this object for each LB call we create, and
 // those refs are not released until the LB call stack is destroyed.
 // When this object is destroyed, it will invoke the
 // on_call_stack_destruction closure from the surface.
@@ -1496,30 +1497,28 @@ void RetryFilter::CallData::CallAttempt::BatchData::RecvInitialMetadataReady(
 void RetryFilter::CallData::CallAttempt::BatchData::
     MaybeAddClosureForRecvMessageCallback(grpc_error_handle error,
                                           CallCombinerClosureList* closures) {
   // Find pending op.
   PendingBatch* pending = call_attempt_->calld_->PendingBatchFind(
       "invoking recv_message_ready for",
       [](grpc_transport_stream_op_batch* batch) {
         return batch->recv_message &&
                batch->payload->recv_message.recv_message_ready != nullptr;
       });
   if (pending == nullptr) {
     GRPC_ERROR_UNREF(error);
     return;
   }
   // Return payload.
   *pending->batch->payload->recv_message.recv_message =
       std::move(call_attempt_->recv_message_);
-  *pending->batch->payload->recv_message.flags =
-      call_attempt_->recv_message_flags_;
   // Update bookkeeping.
   // Note: Need to do this before invoking the callback, since invoking
   // the callback will result in yielding the call combiner.
   grpc_closure* recv_message_ready =
       pending->batch->payload->recv_message.recv_message_ready;
   pending->batch->payload->recv_message.recv_message_ready = nullptr;
   call_attempt_->calld_->MaybeClearPendingBatch(pending);
   // Add callback to closures.
   closures->Add(recv_message_ready, error,
                 "recv_message_ready for pending batch");
 }
@@ -1527,72 +1526,72 @@ void RetryFilter::CallData::CallAttempt::BatchData::
 void RetryFilter::CallData::CallAttempt::BatchData::RecvMessageReady(
     void* arg, grpc_error_handle error) {
   RefCountedPtr<BatchData> batch_data(static_cast<BatchData*>(arg));
   CallAttempt* call_attempt = batch_data->call_attempt_.get();
   CallData* calld = call_attempt->calld_;
   if (GRPC_TRACE_FLAG_ENABLED(grpc_retry_trace)) {
     gpr_log(GPR_INFO,
             "chand=%p calld=%p attempt=%p batch_data=%p: "
             "got recv_message_ready, error=%s",
             calld->chand_, calld, call_attempt, batch_data.get(),
             grpc_error_std_string(error).c_str());
   }
   ++call_attempt->completed_recv_message_count_;
   // If this attempt has been abandoned, then we're not going to use the
   // result of this recv_message op, so do nothing.
   if (call_attempt->abandoned_) {
     // The transport will not invoke recv_trailing_metadata_ready until the byte
     // stream for any recv_message op is orphaned, so we do that here to ensure
     // that any pending recv_trailing_metadata op can complete.
     call_attempt->recv_message_.reset();
     GRPC_CALL_COMBINER_STOP(calld->call_combiner_,
                             "recv_message_ready for abandoned attempt");
     return;
   }
   // Cancel per-attempt recv timer, if any.
   call_attempt->MaybeCancelPerAttemptRecvTimer();
   // If we're not committed, check the response to see if we need to commit.
   if (!calld->retry_committed_) {
     // If we got an error or the payload was nullptr and we have not yet gotten
     // the recv_trailing_metadata_ready callback, then defer propagating this
     // callback back to the surface.  We can evaluate whether to retry when
     // recv_trailing_metadata comes back.
-    if (GPR_UNLIKELY((!call_attempt->recv_message_.has_value() ||
+    if (GPR_UNLIKELY((call_attempt->recv_message_ == nullptr ||
                       error != GRPC_ERROR_NONE) &&
                      !call_attempt->completed_recv_trailing_metadata_)) {
       if (GRPC_TRACE_FLAG_ENABLED(grpc_retry_trace)) {
         gpr_log(GPR_INFO,
                 "chand=%p calld=%p attempt=%p: deferring recv_message_ready "
                 "(nullptr message and recv_trailing_metadata pending)",
                 calld->chand_, calld, call_attempt);
       }
       call_attempt->recv_message_ready_deferred_batch_ = std::move(batch_data);
       call_attempt->recv_message_error_ = GRPC_ERROR_REF(error);
       CallCombinerClosureList closures;
       if (error != GRPC_ERROR_NONE) {
         call_attempt->MaybeAddBatchForCancelOp(GRPC_ERROR_REF(error),
                                                &closures);
       }
       if (!call_attempt->started_recv_trailing_metadata_) {
         // recv_trailing_metadata not yet started by application; start it
         // ourselves to get status.
         call_attempt->AddBatchForInternalRecvTrailingMetadata(&closures);
       }
       closures.RunClosures(calld->call_combiner_);
       return;
     }
     // Received a valid message, so commit the call.
     calld->RetryCommit(call_attempt);
     // If retry state is no longer needed, switch to fast path for
     // subsequent batches.
     call_attempt->MaybeSwitchToFastPath();
   }
   // Invoke the callback to return the result to the surface.
   CallCombinerClosureList closures;
   batch_data->MaybeAddClosureForRecvMessageCallback(GRPC_ERROR_REF(error),
                                                     &closures);
   closures.RunClosures(calld->call_combiner_);
 }
 
 //
 // recv_trailing_metadata handling
 //
@@ -2022,20 +2021,21 @@ void RetryFilter::CallData::CallAttempt::BatchData::
 void RetryFilter::CallData::CallAttempt::BatchData::
     AddRetriableSendMessageOp() {
   auto* calld = call_attempt_->calld_;
   if (GRPC_TRACE_FLAG_ENABLED(grpc_retry_trace)) {
     gpr_log(
         GPR_INFO,
         "chand=%p calld=%p attempt=%p: starting calld->send_messages[%" PRIuPTR
         "]",
         calld->chand_, calld, call_attempt_.get(),
         call_attempt_->started_send_message_count_);
   }
-  CachedSendMessage cache =
+  ByteStreamCache* cache =
       calld->send_messages_[call_attempt_->started_send_message_count_];
   ++call_attempt_->started_send_message_count_;
+  call_attempt_->send_message_.Init(cache);
   batch_.send_message = true;
-  batch_.payload->send_message.send_message = cache.slices;
-  batch_.payload->send_message.flags = cache.flags;
+  batch_.payload->send_message.send_message.reset(
+      call_attempt_->send_message_.get());
 }
 
 void RetryFilter::CallData::CallAttempt::BatchData::
@@ -2070,12 +2070,11 @@ void RetryFilter::CallData::CallAttempt::BatchData::
 void RetryFilter::CallData::CallAttempt::BatchData::
     AddRetriableRecvMessageOp() {
   ++call_attempt_->started_recv_message_count_;
   batch_.recv_message = true;
   batch_.payload->recv_message.recv_message = &call_attempt_->recv_message_;
-  batch_.payload->recv_message.flags = &call_attempt_->recv_message_flags_;
   batch_.payload->recv_message.call_failed_before_recv_message = nullptr;
   GRPC_CLOSURE_INIT(&call_attempt_->recv_message_ready_, RecvMessageReady, this,
                     grpc_schedule_on_exec_ctx);
   batch_.payload->recv_message.recv_message_ready =
       &call_attempt_->recv_message_ready_;
 }
@@ -2360,28 +2359,28 @@ void RetryFilter::CallData::CreateCallAttempt(bool is_transparent_retry) {
 void RetryFilter::CallData::MaybeCacheSendOpsForBatch(PendingBatch* pending) {
   if (pending->send_ops_cached) return;
   pending->send_ops_cached = true;
   grpc_transport_stream_op_batch* batch = pending->batch;
   // Save a copy of metadata for send_initial_metadata ops.
   if (batch->send_initial_metadata) {
     seen_send_initial_metadata_ = true;
     grpc_metadata_batch* send_initial_metadata =
         batch->payload->send_initial_metadata.send_initial_metadata;
     send_initial_metadata_ = send_initial_metadata->Copy();
     send_initial_metadata_flags_ =
         batch->payload->send_initial_metadata.send_initial_metadata_flags;
     peer_string_ = batch->payload->send_initial_metadata.peer_string;
   }
   // Set up cache for send_message ops.
   if (batch->send_message) {
-    SliceBuffer* cache = arena_->New<SliceBuffer>(std::move(
-        *absl::exchange(batch->payload->send_message.send_message, nullptr)));
-    send_messages_.push_back({cache, batch->payload->send_message.flags});
+    ByteStreamCache* cache = arena_->New<ByteStreamCache>(
+        std::move(batch->payload->send_message.send_message));
+    send_messages_.push_back(cache);
   }
   // Save metadata batch for send_trailing_metadata ops.
   if (batch->send_trailing_metadata) {
     seen_send_trailing_metadata_ = true;
     grpc_metadata_batch* send_trailing_metadata =
         batch->payload->send_trailing_metadata.send_trailing_metadata;
     send_trailing_metadata_ = send_trailing_metadata->Copy();
   }
 }
@@ -2395,13 +2394,14 @@ void RetryFilter::CallData::FreeCachedSendInitialMetadata() {
 }
 
 void RetryFilter::CallData::FreeCachedSendMessage(size_t idx) {
-  if (send_messages_[idx].slices != nullptr) {
+  if (send_messages_[idx] != nullptr) {
     if (GRPC_TRACE_FLAG_ENABLED(grpc_retry_trace)) {
       gpr_log(GPR_INFO,
               "chand=%p calld=%p: destroying send_messages[%" PRIuPTR "]",
               chand_, this, idx);
     }
-    Destruct(absl::exchange(send_messages_[idx].slices, nullptr));
+    send_messages_[idx]->Destroy();
+    send_messages_[idx] = nullptr;
   }
 }
 
@@ -2443,44 +2443,44 @@ size_t RetryFilter::CallData::GetBatchIndex(
 // This is called via the call combiner, so access to calld is synchronized.
 RetryFilter::CallData::PendingBatch* RetryFilter::CallData::PendingBatchesAdd(
     grpc_transport_stream_op_batch* batch) {
   const size_t idx = GetBatchIndex(batch);
   if (GRPC_TRACE_FLAG_ENABLED(grpc_retry_trace)) {
     gpr_log(GPR_INFO,
             "chand=%p calld=%p: adding pending batch at index %" PRIuPTR,
             chand_, this, idx);
   }
   PendingBatch* pending = &pending_batches_[idx];
   GPR_ASSERT(pending->batch == nullptr);
   pending->batch = batch;
   pending->send_ops_cached = false;
   // Update state in calld about pending batches.
   // Also check if the batch takes us over the retry buffer limit.
   // Note: We don't check the size of trailing metadata here, because
   // gRPC clients do not send trailing metadata.
   if (batch->send_initial_metadata) {
     pending_send_initial_metadata_ = true;
     bytes_buffered_for_retry_ += batch->payload->send_initial_metadata
                                      .send_initial_metadata->TransportSize();
   }
   if (batch->send_message) {
     pending_send_message_ = true;
     bytes_buffered_for_retry_ +=
-        batch->payload->send_message.send_message->Length();
+        batch->payload->send_message.send_message->length();
   }
   if (batch->send_trailing_metadata) {
     pending_send_trailing_metadata_ = true;
   }
   // TODO(roth): When we implement hedging, if there are currently attempts
   // in flight, we will need to pick the one on which the max number of send
   // ops have already been sent, and we commit to that attempt.
   if (GPR_UNLIKELY(bytes_buffered_for_retry_ >
                    chand_->per_rpc_retry_buffer_size_)) {
     if (GRPC_TRACE_FLAG_ENABLED(grpc_retry_trace)) {
       gpr_log(GPR_INFO,
               "chand=%p calld=%p: exceeded retry buffer size, committing",
               chand_, this);
     }
     RetryCommit(call_attempt_.get());
   }
   return pending;
 }
diff --git a/src/core/ext/filters/client_channel/subchannel.cc b/src/core/ext/filters/client_channel/subchannel.cc
index 0bb87d784c..826954625d 100644
--- a/src/core/ext/filters/client_channel/subchannel.cc
+++ b/src/core/ext/filters/client_channel/subchannel.cc
@@ -1,81 +1,82 @@
 //
 // Copyright 2015 gRPC authors.
 //
 // Licensed under the Apache License, Version 2.0 (the "License");
 // you may not use this file except in compliance with the License.
 // You may obtain a copy of the License at
 //
 //     http://www.apache.org/licenses/LICENSE-2.0
 //
 // Unless required by applicable law or agreed to in writing, software
 // distributed under the License is distributed on an "AS IS" BASIS,
 // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 // See the License for the specific language governing permissions and
 // limitations under the License.
 //
 
 #include <grpc/support/port_platform.h>
 
 #include "src/core/ext/filters/client_channel/subchannel.h"
 
 #include <inttypes.h>
 #include <limits.h>
 
 #include <algorithm>
 #include <cstring>
 #include <memory>
 #include <new>
+#include <type_traits>
 #include <utility>
 
 #include "absl/status/statusor.h"
 
 #include <grpc/slice.h>
 #include <grpc/status.h>
 #include <grpc/support/alloc.h>
 #include <grpc/support/log.h>
 
 #include "src/core/ext/filters/client_channel/health/health_check_client.h"
 #include "src/core/ext/filters/client_channel/proxy_mapper_registry.h"
 #include "src/core/ext/filters/client_channel/subchannel_pool_interface.h"
 #include "src/core/ext/filters/client_channel/subchannel_stream_client.h"
 #include "src/core/lib/address_utils/sockaddr_utils.h"
 #include "src/core/lib/backoff/backoff.h"
 #include "src/core/lib/channel/channel_args.h"
 #include "src/core/lib/channel/channel_stack.h"
 #include "src/core/lib/channel/channel_stack_builder.h"
 #include "src/core/lib/channel/channel_stack_builder_impl.h"
 #include "src/core/lib/channel/channel_trace.h"
 #include "src/core/lib/channel/channelz.h"
 #include "src/core/lib/config/core_configuration.h"
 #include "src/core/lib/debug/stats.h"
 #include "src/core/lib/debug/trace.h"
 #include "src/core/lib/gpr/alloc.h"
 #include "src/core/lib/gprpp/debug_location.h"
 #include "src/core/lib/gprpp/ref_counted_ptr.h"
 #include "src/core/lib/gprpp/sync.h"
 #include "src/core/lib/iomgr/exec_ctx.h"
 #include "src/core/lib/iomgr/pollset_set.h"
 #include "src/core/lib/profiling/timers.h"
 #include "src/core/lib/surface/channel_init.h"
 #include "src/core/lib/surface/channel_stack_type.h"
 #include "src/core/lib/transport/connectivity_state.h"
 #include "src/core/lib/transport/error_utils.h"
 
 // Strong and weak refs.
 #define INTERNAL_REF_BITS 16
 #define STRONG_REF_MASK (~(gpr_atm)((1 << INTERNAL_REF_BITS) - 1))
 
 // Backoff parameters.
 #define GRPC_SUBCHANNEL_INITIAL_CONNECT_BACKOFF_SECONDS 1
 #define GRPC_SUBCHANNEL_RECONNECT_BACKOFF_MULTIPLIER 1.6
 #define GRPC_SUBCHANNEL_RECONNECT_MIN_TIMEOUT_SECONDS 20
 #define GRPC_SUBCHANNEL_RECONNECT_MAX_BACKOFF_SECONDS 120
 #define GRPC_SUBCHANNEL_RECONNECT_JITTER 0.2
 
 // Conversion between subchannel call and call stack.
 #define SUBCHANNEL_CALL_TO_CALL_STACK(call) \
   (grpc_call_stack*)((char*)(call) +        \
                      GPR_ROUND_UP_TO_ALIGNMENT_SIZE(sizeof(SubchannelCall)))
 #define CALL_STACK_TO_SUBCHANNEL_CALL(callstack) \
   (SubchannelCall*)(((char*)(call_stack)) -      \
                     GPR_ROUND_UP_TO_ALIGNMENT_SIZE(sizeof(SubchannelCall)))
diff --git a/src/core/ext/filters/client_channel/subchannel_stream_client.cc b/src/core/ext/filters/client_channel/subchannel_stream_client.cc
index 360a64bc32..e2f35276e4 100644
--- a/src/core/ext/filters/client_channel/subchannel_stream_client.cc
+++ b/src/core/ext/filters/client_channel/subchannel_stream_client.cc
@@ -1,42 +1,47 @@
 //
 // Copyright 2018 gRPC authors.
 //
 // Licensed under the Apache License, Version 2.0 (the "License");
 // you may not use this file except in compliance with the License.
 // You may obtain a copy of the License at
 //
 //     http://www.apache.org/licenses/LICENSE-2.0
 //
 // Unless required by applicable law or agreed to in writing, software
 // distributed under the License is distributed on an "AS IS" BASIS,
 // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 // See the License for the specific language governing permissions and
 // limitations under the License.
 //
 
 #include <grpc/support/port_platform.h>
 
 #include "src/core/ext/filters/client_channel/subchannel_stream_client.h"
 
 #include <inttypes.h>
 #include <stdio.h>
+#include <string.h>
 
+#include <cstdint>
 #include <string>
 #include <utility>
 
+#include <grpc/slice_buffer.h>
 #include <grpc/status.h>
+#include <grpc/support/alloc.h>
 #include <grpc/support/log.h>
 
 #include "src/core/lib/gpr/time_precise.h"
 #include "src/core/lib/gprpp/debug_location.h"
 #include "src/core/lib/gprpp/sync.h"
 #include "src/core/lib/gprpp/time.h"
 #include "src/core/lib/iomgr/exec_ctx.h"
 #include "src/core/lib/resource_quota/api.h"
 #include "src/core/lib/resource_quota/resource_quota.h"
+#include "src/core/lib/slice/slice_internal.h"
 #include "src/core/lib/transport/error_utils.h"
 
 #define SUBCHANNEL_STREAM_INITIAL_CONNECT_BACKOFF_SECONDS 1
 #define SUBCHANNEL_STREAM_RECONNECT_BACKOFF_MULTIPLIER 1.6
 #define SUBCHANNEL_STREAM_RECONNECT_MAX_BACKOFF_SECONDS 120
 #define SUBCHANNEL_STREAM_RECONNECT_JITTER 0.2
@@ -203,94 +208,99 @@ void SubchannelStreamClient::CallState::Orphan() {
 void SubchannelStreamClient::CallState::StartCallLocked() {
   SubchannelCall::Args args = {
       subchannel_stream_client_->connected_subchannel_,
       &pollent_,
       Slice::FromStaticString("/grpc.health.v1.Health/Watch"),
       gpr_get_cycle_counter(),  // start_time
       Timestamp::InfFuture(),   // deadline
       arena_.get(),
       context_,
       &call_combiner_,
   };
   grpc_error_handle error = GRPC_ERROR_NONE;
   call_ = SubchannelCall::Create(std::move(args), &error).release();
   // Register after-destruction callback.
   GRPC_CLOSURE_INIT(&after_call_stack_destruction_, AfterCallStackDestruction,
                     this, grpc_schedule_on_exec_ctx);
   call_->SetAfterCallStackDestroy(&after_call_stack_destruction_);
   // Check if creation failed.
   if (error != GRPC_ERROR_NONE ||
       subchannel_stream_client_->event_handler_ == nullptr) {
     gpr_log(GPR_ERROR,
             "SubchannelStreamClient %p CallState %p: error creating "
             "stream on subchannel (%s); will retry",
             subchannel_stream_client_.get(), this,
             grpc_error_std_string(error).c_str());
     GRPC_ERROR_UNREF(error);
     CallEndedLocked(/*retry=*/true);
     return;
   }
   // Initialize payload and batch.
   payload_.context = context_;
   batch_.payload = &payload_;
   // on_complete callback takes ref, handled manually.
   call_->Ref(DEBUG_LOCATION, "on_complete").release();
   batch_.on_complete = GRPC_CLOSURE_INIT(&on_complete_, OnComplete, this,
                                          grpc_schedule_on_exec_ctx);
   // Add send_initial_metadata op.
   send_initial_metadata_.Set(
       HttpPathMetadata(),
       subchannel_stream_client_->event_handler_->GetPathLocked());
   GPR_ASSERT(error == GRPC_ERROR_NONE);
   payload_.send_initial_metadata.send_initial_metadata =
       &send_initial_metadata_;
   payload_.send_initial_metadata.send_initial_metadata_flags = 0;
   payload_.send_initial_metadata.peer_string = nullptr;
   batch_.send_initial_metadata = true;
   // Add send_message op.
-  send_message_.Append(Slice(
-      subchannel_stream_client_->event_handler_->EncodeSendMessageLocked()));
-  payload_.send_message.send_message = &send_message_;
+  grpc_slice request_slice =
+      subchannel_stream_client_->event_handler_->EncodeSendMessageLocked();
+  grpc_slice_buffer slice_buffer;
+  grpc_slice_buffer_init(&slice_buffer);
+  grpc_slice_buffer_add(&slice_buffer, request_slice);
+  send_message_.emplace(&slice_buffer, 0);
+  grpc_slice_buffer_destroy_internal(&slice_buffer);
+  payload_.send_message.send_message.reset(&*send_message_);
   batch_.send_message = true;
   // Add send_trailing_metadata op.
   payload_.send_trailing_metadata.send_trailing_metadata =
       &send_trailing_metadata_;
   batch_.send_trailing_metadata = true;
   // Add recv_initial_metadata op.
   payload_.recv_initial_metadata.recv_initial_metadata =
       &recv_initial_metadata_;
   payload_.recv_initial_metadata.recv_flags = nullptr;
   payload_.recv_initial_metadata.trailing_metadata_available = nullptr;
   payload_.recv_initial_metadata.peer_string = nullptr;
   // recv_initial_metadata_ready callback takes ref, handled manually.
   call_->Ref(DEBUG_LOCATION, "recv_initial_metadata_ready").release();
   payload_.recv_initial_metadata.recv_initial_metadata_ready =
       GRPC_CLOSURE_INIT(&recv_initial_metadata_ready_, RecvInitialMetadataReady,
                         this, grpc_schedule_on_exec_ctx);
   batch_.recv_initial_metadata = true;
   // Add recv_message op.
   payload_.recv_message.recv_message = &recv_message_;
   payload_.recv_message.call_failed_before_recv_message = nullptr;
   // recv_message callback takes ref, handled manually.
   call_->Ref(DEBUG_LOCATION, "recv_message_ready").release();
   payload_.recv_message.recv_message_ready = GRPC_CLOSURE_INIT(
       &recv_message_ready_, RecvMessageReady, this, grpc_schedule_on_exec_ctx);
   batch_.recv_message = true;
   // Start batch.
   StartBatch(&batch_);
   // Initialize recv_trailing_metadata batch.
   recv_trailing_metadata_batch_.payload = &payload_;
   // Add recv_trailing_metadata op.
   payload_.recv_trailing_metadata.recv_trailing_metadata =
       &recv_trailing_metadata_;
   payload_.recv_trailing_metadata.collect_stats = &collect_stats_;
   // This callback signals the end of the call, so it relies on the
   // initial ref instead of taking a new ref.  When it's invoked, the
   // initial ref is released.
   payload_.recv_trailing_metadata.recv_trailing_metadata_ready =
       GRPC_CLOSURE_INIT(&recv_trailing_metadata_ready_,
                         RecvTrailingMetadataReady, this,
                         grpc_schedule_on_exec_ctx);
   recv_trailing_metadata_batch_.recv_trailing_metadata = true;
   // Start recv_trailing_metadata batch.
   StartBatch(&recv_trailing_metadata_batch_);
 }
@@ -364,51 +374,126 @@ void SubchannelStreamClient::CallState::RecvInitialMetadataReady(
   self->call_->Unref(DEBUG_LOCATION, "recv_initial_metadata_ready");
 }
 
-void SubchannelStreamClient::CallState::RecvMessageReady() {
-  if (!recv_message_.has_value()) {
+void SubchannelStreamClient::CallState::DoneReadingRecvMessage(
+    grpc_error_handle error) {
+  recv_message_.reset();
+  if (error != GRPC_ERROR_NONE) {
+    GRPC_ERROR_UNREF(error);
+    Cancel();
+    grpc_slice_buffer_destroy_internal(&recv_message_buffer_);
     call_->Unref(DEBUG_LOCATION, "recv_message_ready");
     return;
   }
+  // Concatenate the slices to form a single string.
+  std::unique_ptr<uint8_t> recv_message_deleter;
+  uint8_t* recv_message;
+  if (recv_message_buffer_.count == 1) {
+    recv_message = GRPC_SLICE_START_PTR(recv_message_buffer_.slices[0]);
+  } else {
+    recv_message =
+        static_cast<uint8_t*>(gpr_malloc(recv_message_buffer_.length));
+    recv_message_deleter.reset(recv_message);
+    size_t offset = 0;
+    for (size_t i = 0; i < recv_message_buffer_.count; ++i) {
+      memcpy(recv_message + offset,
+             GRPC_SLICE_START_PTR(recv_message_buffer_.slices[i]),
+             GRPC_SLICE_LENGTH(recv_message_buffer_.slices[i]));
+      offset += GRPC_SLICE_LENGTH(recv_message_buffer_.slices[i]);
+    }
+  }
   // Report payload.
   {
     MutexLock lock(&subchannel_stream_client_->mu_);
     if (subchannel_stream_client_->event_handler_ != nullptr) {
+      absl::string_view serialized_message(
+          reinterpret_cast<char*>(recv_message), recv_message_buffer_.length);
       absl::Status status =
           subchannel_stream_client_->event_handler_->RecvMessageReadyLocked(
-              subchannel_stream_client_.get(), recv_message_->JoinIntoString());
+              subchannel_stream_client_.get(), serialized_message);
       if (!status.ok()) {
         if (GPR_UNLIKELY(subchannel_stream_client_->tracer_ != nullptr)) {
           gpr_log(GPR_INFO,
                   "%s %p: SubchannelStreamClient CallState %p: failed to "
                   "parse response message: %s",
                   subchannel_stream_client_->tracer_,
                   subchannel_stream_client_.get(), this,
                   status.ToString().c_str());
         }
         Cancel();
       }
     }
   }
   seen_response_.store(true, std::memory_order_release);
-  recv_message_.reset();
+  grpc_slice_buffer_destroy_internal(&recv_message_buffer_);
   // Start another recv_message batch.
   // This re-uses the ref we're holding.
   // Note: Can't just reuse batch_ here, since we don't know that all
   // callbacks from the original batch have completed yet.
   recv_message_batch_.payload = &payload_;
   payload_.recv_message.recv_message = &recv_message_;
   payload_.recv_message.call_failed_before_recv_message = nullptr;
   payload_.recv_message.recv_message_ready = GRPC_CLOSURE_INIT(
       &recv_message_ready_, RecvMessageReady, this, grpc_schedule_on_exec_ctx);
   recv_message_batch_.recv_message = true;
   StartBatch(&recv_message_batch_);
 }
 
+grpc_error_handle
+SubchannelStreamClient::CallState::PullSliceFromRecvMessage() {
+  grpc_slice slice;
+  grpc_error_handle error = recv_message_->Pull(&slice);
+  if (error == GRPC_ERROR_NONE) {
+    grpc_slice_buffer_add(&recv_message_buffer_, slice);
+  }
+  return error;
+}
+
+void SubchannelStreamClient::CallState::ContinueReadingRecvMessage() {
+  while (recv_message_->Next(SIZE_MAX, &recv_message_ready_)) {
+    grpc_error_handle error = PullSliceFromRecvMessage();
+    if (error != GRPC_ERROR_NONE) {
+      DoneReadingRecvMessage(error);
+      return;
+    }
+    if (recv_message_buffer_.length == recv_message_->length()) {
+      DoneReadingRecvMessage(GRPC_ERROR_NONE);
+      break;
+    }
+  }
+}
+
+void SubchannelStreamClient::CallState::OnByteStreamNext(
+    void* arg, grpc_error_handle error) {
+  auto* self = static_cast<SubchannelStreamClient::CallState*>(arg);
+  if (error != GRPC_ERROR_NONE) {
+    self->DoneReadingRecvMessage(GRPC_ERROR_REF(error));
+    return;
+  }
+  error = self->PullSliceFromRecvMessage();
+  if (error != GRPC_ERROR_NONE) {
+    self->DoneReadingRecvMessage(error);
+    return;
+  }
+  if (self->recv_message_buffer_.length == self->recv_message_->length()) {
+    self->DoneReadingRecvMessage(GRPC_ERROR_NONE);
+  } else {
+    self->ContinueReadingRecvMessage();
+  }
+}
+
 void SubchannelStreamClient::CallState::RecvMessageReady(
     void* arg, grpc_error_handle /*error*/) {
   auto* self = static_cast<SubchannelStreamClient::CallState*>(arg);
   GRPC_CALL_COMBINER_STOP(&self->call_combiner_, "recv_message_ready");
-  self->RecvMessageReady();
+  if (self->recv_message_ == nullptr) {
+    self->call_->Unref(DEBUG_LOCATION, "recv_message_ready");
+    return;
+  }
+  grpc_slice_buffer_init(&self->recv_message_buffer_);
+  GRPC_CLOSURE_INIT(&self->recv_message_ready_, OnByteStreamNext, self,
+                    grpc_schedule_on_exec_ctx);
+  self->ContinueReadingRecvMessage();
+  // Ref will continue to be held until we finish draining the byte stream.
 }
 
 void SubchannelStreamClient::CallState::RecvTrailingMetadataReady(
diff --git a/src/core/ext/filters/client_channel/subchannel_stream_client.h b/src/core/ext/filters/client_channel/subchannel_stream_client.h
index 32d8f00fd6..08f03f7586 100644
--- a/src/core/ext/filters/client_channel/subchannel_stream_client.h
+++ b/src/core/ext/filters/client_channel/subchannel_stream_client.h
@@ -1,52 +1,52 @@
 //
 // Copyright 2018 gRPC authors.
 //
 // Licensed under the Apache License, Version 2.0 (the "License");
 // you may not use this file except in compliance with the License.
 // You may obtain a copy of the License at
 //
 //     http://www.apache.org/licenses/LICENSE-2.0
 //
 // Unless required by applicable law or agreed to in writing, software
 // distributed under the License is distributed on an "AS IS" BASIS,
 // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 // See the License for the specific language governing permissions and
 // limitations under the License.
 //
 
 #ifndef GRPC_CORE_EXT_FILTERS_CLIENT_CHANNEL_SUBCHANNEL_STREAM_CLIENT_H
 #define GRPC_CORE_EXT_FILTERS_CLIENT_CHANNEL_SUBCHANNEL_STREAM_CLIENT_H
 
 #include <grpc/support/port_platform.h>
 
 #include <atomic>
 #include <memory>
 
 #include "absl/base/thread_annotations.h"
 #include "absl/status/status.h"
 #include "absl/strings/string_view.h"
 #include "absl/types/optional.h"
 
 #include <grpc/event_engine/memory_allocator.h>
 #include <grpc/slice.h>
 #include <grpc/status.h>
 
 #include "src/core/ext/filters/client_channel/subchannel.h"
 #include "src/core/lib/backoff/backoff.h"
 #include "src/core/lib/channel/context.h"
 #include "src/core/lib/gprpp/orphanable.h"
 #include "src/core/lib/gprpp/ref_counted_ptr.h"
 #include "src/core/lib/gprpp/sync.h"
 #include "src/core/lib/iomgr/call_combiner.h"
 #include "src/core/lib/iomgr/closure.h"
 #include "src/core/lib/iomgr/error.h"
 #include "src/core/lib/iomgr/iomgr_fwd.h"
 #include "src/core/lib/iomgr/polling_entity.h"
 #include "src/core/lib/iomgr/timer.h"
 #include "src/core/lib/resource_quota/arena.h"
 #include "src/core/lib/resource_quota/memory_quota.h"
 #include "src/core/lib/slice/slice.h"
-#include "src/core/lib/slice/slice_buffer.h"
+#include "src/core/lib/transport/byte_stream.h"
 #include "src/core/lib/transport/metadata_batch.h"
 #include "src/core/lib/transport/transport.h"
 
@@ -55,168 +55,172 @@ namespace grpc_core {
 // Represents a streaming call on a subchannel that should be maintained
 // open at all times.
 // If the call fails with UNIMPLEMENTED, no further attempts are made.
 // If the call fails with any other status (including OK), we retry the
 // call with appropriate backoff.
 // The backoff state is reset when we receive a message on a stream.
 //
 // Currently, this assumes server-side streaming, but it could be extended
 // to support full bidi streaming if there is a need in the future.
 class SubchannelStreamClient
     : public InternallyRefCounted<SubchannelStreamClient> {
  public:
   // Interface implemented by caller.  Thread safety is provided for the
   // implementation; only one method will be called by any thread at any
   // one time (including destruction).
   //
   // The address of the SubchannelStreamClient object is passed to most
   // methods for logging purposes.
   class CallEventHandler {
    public:
     virtual ~CallEventHandler() = default;
 
     // Returns the path for the streaming call.
     virtual Slice GetPathLocked()
         ABSL_EXCLUSIVE_LOCKS_REQUIRED(&SubchannelStreamClient::mu_) = 0;
     // Called when a new call attempt is being started.
     virtual void OnCallStartLocked(SubchannelStreamClient* client)
         ABSL_EXCLUSIVE_LOCKS_REQUIRED(&SubchannelStreamClient::mu_) = 0;
     // Called when a previous call attempt has failed and the retry
     // timer is started before the next attempt.
     virtual void OnRetryTimerStartLocked(SubchannelStreamClient* client)
         ABSL_EXCLUSIVE_LOCKS_REQUIRED(&SubchannelStreamClient::mu_) = 0;
     // Returns the message payload to send from the client.
     virtual grpc_slice EncodeSendMessageLocked()
         ABSL_EXCLUSIVE_LOCKS_REQUIRED(&SubchannelStreamClient::mu_) = 0;
     // Called whenever a message is received from the server.
     virtual absl::Status RecvMessageReadyLocked(
         SubchannelStreamClient* client, absl::string_view serialized_message)
         ABSL_EXCLUSIVE_LOCKS_REQUIRED(&SubchannelStreamClient::mu_) = 0;
     // Called when a stream fails.
     virtual void RecvTrailingMetadataReadyLocked(SubchannelStreamClient* client,
                                                  grpc_status_code status)
         ABSL_EXCLUSIVE_LOCKS_REQUIRED(&SubchannelStreamClient::mu_) = 0;
   };
 
   // If tracer is non-null, it enables trace logging, with the specified
   // string being the first part of the log message.
   // Does not take ownership of interested_parties; the caller is responsible
   // for ensuring that it will outlive the SubchannelStreamClient.
   SubchannelStreamClient(
       RefCountedPtr<ConnectedSubchannel> connected_subchannel,
       grpc_pollset_set* interested_parties,
       std::unique_ptr<CallEventHandler> event_handler, const char* tracer);
 
   ~SubchannelStreamClient() override;
 
   void Orphan() override;
 
  private:
   // Contains a call to the backend and all the data related to the call.
   class CallState : public Orphanable {
    public:
     CallState(RefCountedPtr<SubchannelStreamClient> client,
               grpc_pollset_set* interested_parties);
     ~CallState() override;
 
     void Orphan() override;
 
     void StartCallLocked()
         ABSL_EXCLUSIVE_LOCKS_REQUIRED(&SubchannelStreamClient::mu_);
 
    private:
     void Cancel();
 
     void StartBatch(grpc_transport_stream_op_batch* batch);
     static void StartBatchInCallCombiner(void* arg, grpc_error_handle error);
 
     void CallEndedLocked(bool retry)
         ABSL_EXCLUSIVE_LOCKS_REQUIRED(&subchannel_stream_client_->mu_);
 
-    void RecvMessageReady();
-
     static void OnComplete(void* arg, grpc_error_handle error);
     static void RecvInitialMetadataReady(void* arg, grpc_error_handle error);
     static void RecvMessageReady(void* arg, grpc_error_handle error);
     static void RecvTrailingMetadataReady(void* arg, grpc_error_handle error);
     static void StartCancel(void* arg, grpc_error_handle error);
     static void OnCancelComplete(void* arg, grpc_error_handle error);
 
+    static void OnByteStreamNext(void* arg, grpc_error_handle error);
+    void ContinueReadingRecvMessage();
+    grpc_error_handle PullSliceFromRecvMessage();
+    void DoneReadingRecvMessage(grpc_error_handle error);
+
     static void AfterCallStackDestruction(void* arg, grpc_error_handle error);
 
     RefCountedPtr<SubchannelStreamClient> subchannel_stream_client_;
     grpc_polling_entity pollent_;
 
     ScopedArenaPtr arena_;
     CallCombiner call_combiner_;
     grpc_call_context_element context_[GRPC_CONTEXT_COUNT] = {};
 
     // The streaming call to the backend. Always non-null.
     // Refs are tracked manually; when the last ref is released, the
     // CallState object will be automatically destroyed.
     SubchannelCall* call_;
 
     grpc_transport_stream_op_batch_payload payload_;
     grpc_transport_stream_op_batch batch_;
     grpc_transport_stream_op_batch recv_message_batch_;
     grpc_transport_stream_op_batch recv_trailing_metadata_batch_;
 
     grpc_closure on_complete_;
 
     // send_initial_metadata
     grpc_metadata_batch send_initial_metadata_;
 
     // send_message
-    SliceBuffer send_message_;
+    absl::optional<SliceBufferByteStream> send_message_;
 
     // send_trailing_metadata
     grpc_metadata_batch send_trailing_metadata_;
 
     // recv_initial_metadata
     grpc_metadata_batch recv_initial_metadata_;
     grpc_closure recv_initial_metadata_ready_;
 
     // recv_message
-    absl::optional<SliceBuffer> recv_message_;
+    OrphanablePtr<ByteStream> recv_message_;
     grpc_closure recv_message_ready_;
+    grpc_slice_buffer recv_message_buffer_;
     std::atomic<bool> seen_response_{false};
 
     // True if the cancel_stream batch has been started.
     std::atomic<bool> cancelled_{false};
 
     // recv_trailing_metadata
     grpc_metadata_batch recv_trailing_metadata_;
     grpc_transport_stream_stats collect_stats_;
     grpc_closure recv_trailing_metadata_ready_;
 
     // Closure for call stack destruction.
     grpc_closure after_call_stack_destruction_;
   };
 
   void StartCall();
   void StartCallLocked() ABSL_EXCLUSIVE_LOCKS_REQUIRED(&mu_);
 
   void StartRetryTimerLocked() ABSL_EXCLUSIVE_LOCKS_REQUIRED(&mu_);
   static void OnRetryTimer(void* arg, grpc_error_handle error);
 
   RefCountedPtr<ConnectedSubchannel> connected_subchannel_;
   grpc_pollset_set* interested_parties_;  // Do not own.
   const char* tracer_;
   MemoryAllocator call_allocator_;
 
   Mutex mu_;
   std::unique_ptr<CallEventHandler> event_handler_ ABSL_GUARDED_BY(mu_);
 
   // The data associated with the current health check call.  It holds a ref
   // to this SubchannelStreamClient object.
   OrphanablePtr<CallState> call_state_ ABSL_GUARDED_BY(mu_);
 
   // Call retry state.
   BackOff retry_backoff_ ABSL_GUARDED_BY(mu_);
   grpc_timer retry_timer_ ABSL_GUARDED_BY(mu_);
   grpc_closure retry_timer_callback_ ABSL_GUARDED_BY(mu_);
   bool retry_timer_callback_pending_ ABSL_GUARDED_BY(mu_) = false;
 };
 
 }  // namespace grpc_core
 
 #endif  // GRPC_CORE_EXT_FILTERS_CLIENT_CHANNEL_SUBCHANNEL_STREAM_CLIENT_H
diff --git a/src/core/ext/filters/http/message_compress/message_compress_filter.cc b/src/core/ext/filters/http/message_compress/message_compress_filter.cc
index acfafb3f49..6387050e08 100644
--- a/src/core/ext/filters/http/message_compress/message_compress_filter.cc
+++ b/src/core/ext/filters/http/message_compress/message_compress_filter.cc
@@ -1,48 +1,54 @@
 /*
  *
  * Copyright 2015 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #include <grpc/support/port_platform.h>
 
 #include "src/core/ext/filters/http/message_compress/message_compress_filter.h"
 
 #include <inttypes.h>
 #include <stdlib.h>
 
+#include <memory>
 #include <new>
+#include <type_traits>
 
 #include "absl/meta/type_traits.h"
 #include "absl/types/optional.h"
-#include "absl/utility/utility.h"
 
 #include <grpc/compression.h>
 #include <grpc/impl/codegen/compression_types.h>
 #include <grpc/impl/codegen/grpc_types.h>
+#include <grpc/slice.h>
+#include <grpc/slice_buffer.h>
 #include <grpc/support/log.h>
 
 #include "src/core/lib/compression/compression_internal.h"
 #include "src/core/lib/compression/message_compress.h"
 #include "src/core/lib/debug/trace.h"
+#include "src/core/lib/gprpp/debug_location.h"
+#include "src/core/lib/gprpp/orphanable.h"
 #include "src/core/lib/iomgr/call_combiner.h"
 #include "src/core/lib/iomgr/closure.h"
 #include "src/core/lib/iomgr/error.h"
 #include "src/core/lib/profiling/timers.h"
-#include "src/core/lib/slice/slice_buffer.h"
+#include "src/core/lib/slice/slice_internal.h"
 #include "src/core/lib/surface/call.h"
+#include "src/core/lib/transport/byte_stream.h"
 #include "src/core/lib/transport/metadata_batch.h"
 #include "src/core/lib/transport/transport.h"
 
@@ -92,119 +98,178 @@ class ChannelData {
 class CallData {
  public:
   CallData(grpc_call_element* elem, const grpc_call_element_args& args)
       : call_combiner_(args.call_combiner) {
     ChannelData* channeld = static_cast<ChannelData*>(elem->channel_data);
     // The call's message compression algorithm is set to channel's default
     // setting. It can be overridden later by initial metadata.
     if (GPR_LIKELY(channeld->enabled_compression_algorithms().IsSet(
             channeld->default_compression_algorithm()))) {
       compression_algorithm_ = channeld->default_compression_algorithm();
     }
-    GRPC_CLOSURE_INIT(&forward_send_message_batch_in_call_combiner_,
-                      ForwardSendMessageBatch, elem, grpc_schedule_on_exec_ctx);
+    GRPC_CLOSURE_INIT(&start_send_message_batch_in_call_combiner_,
+                      StartSendMessageBatch, elem, grpc_schedule_on_exec_ctx);
   }
 
-  ~CallData() { GRPC_ERROR_UNREF(cancel_error_); }
+  ~CallData() {
+    if (state_initialized_) {
+      grpc_slice_buffer_destroy_internal(&slices_);
+    }
+    GRPC_ERROR_UNREF(cancel_error_);
+  }
 
   void CompressStartTransportStreamOpBatch(
       grpc_call_element* elem, grpc_transport_stream_op_batch* batch);
 
  private:
   bool SkipMessageCompression();
-  void FinishSendMessage(grpc_call_element* elem);
+  void InitializeState(grpc_call_element* elem);
 
   void ProcessSendInitialMetadata(grpc_call_element* elem,
                                   grpc_metadata_batch* initial_metadata);
 
   // Methods for processing a send_message batch
+  static void StartSendMessageBatch(void* elem_arg, grpc_error_handle unused);
+  static void OnSendMessageNextDone(void* elem_arg, grpc_error_handle error);
+  grpc_error_handle PullSliceFromSendMessage();
+  void ContinueReadingSendMessage(grpc_call_element* elem);
+  void FinishSendMessage(grpc_call_element* elem);
+  void SendMessageBatchContinue(grpc_call_element* elem);
   static void FailSendMessageBatchInCallCombiner(void* calld_arg,
                                                  grpc_error_handle error);
-  static void ForwardSendMessageBatch(void* elem_arg, grpc_error_handle unused);
+
+  static void SendMessageOnComplete(void* calld_arg, grpc_error_handle error);
 
   grpc_core::CallCombiner* call_combiner_;
   grpc_compression_algorithm compression_algorithm_ = GRPC_COMPRESS_NONE;
   grpc_error_handle cancel_error_ = GRPC_ERROR_NONE;
   grpc_transport_stream_op_batch* send_message_batch_ = nullptr;
   bool seen_initial_metadata_ = false;
-  grpc_closure forward_send_message_batch_in_call_combiner_;
+  /* Set to true, if the fields below are initialized. */
+  bool state_initialized_ = false;
+  grpc_closure start_send_message_batch_in_call_combiner_;
+  /* The fields below are only initialized when we compress the payload.
+   * Keep them at the bottom of the struct, so they don't pollute the
+   * cache-lines. */
+  grpc_slice_buffer slices_; /**< Buffers up input slices to be compressed */
+  // Allocate space for the replacement stream
+  std::aligned_storage<sizeof(grpc_core::SliceBufferByteStream),
+                       alignof(grpc_core::SliceBufferByteStream)>::type
+      replacement_stream_;
+  grpc_closure* original_send_message_on_complete_ = nullptr;
+  grpc_closure send_message_on_complete_;
+  grpc_closure on_send_message_next_done_;
 };
 
 // Returns true if we should skip message compression for the current message.
 bool CallData::SkipMessageCompression() {
   // If the flags of this message indicate that it shouldn't be compressed, we
   // skip message compression.
-  uint32_t flags = send_message_batch_->payload->send_message.flags;
+  uint32_t flags =
+      send_message_batch_->payload->send_message.send_message->flags();
   if (flags & (GRPC_WRITE_NO_COMPRESS | GRPC_WRITE_INTERNAL_COMPRESS)) {
     return true;
   }
   // If this call doesn't have any message compression algorithm set, skip
   // message compression.
   return compression_algorithm_ == GRPC_COMPRESS_NONE;
 }
 
+void CallData::InitializeState(grpc_call_element* elem) {
+  GPR_DEBUG_ASSERT(!state_initialized_);
+  state_initialized_ = true;
+  grpc_slice_buffer_init(&slices_);
+  GRPC_CLOSURE_INIT(&send_message_on_complete_, SendMessageOnComplete, this,
+                    grpc_schedule_on_exec_ctx);
+  GRPC_CLOSURE_INIT(&on_send_message_next_done_, OnSendMessageNextDone, elem,
+                    grpc_schedule_on_exec_ctx);
+}
+
 void CallData::ProcessSendInitialMetadata(
     grpc_call_element* elem, grpc_metadata_batch* initial_metadata) {
   ChannelData* channeld = static_cast<ChannelData*>(elem->channel_data);
   // Find the compression algorithm.
   compression_algorithm_ =
       initial_metadata->Take(grpc_core::GrpcInternalEncodingRequest())
           .value_or(channeld->default_compression_algorithm());
   switch (compression_algorithm_) {
     case GRPC_COMPRESS_NONE:
       break;
     case GRPC_COMPRESS_DEFLATE:
     case GRPC_COMPRESS_GZIP:
+      InitializeState(elem);
       initial_metadata->Set(grpc_core::GrpcEncodingMetadata(),
                             compression_algorithm_);
       break;
     case GRPC_COMPRESS_ALGORITHMS_COUNT:
       abort();
   }
   // Convey supported compression algorithms.
   initial_metadata->Set(grpc_core::GrpcAcceptEncodingMetadata(),
                         channeld->enabled_compression_algorithms());
 }
 
+void CallData::SendMessageOnComplete(void* calld_arg, grpc_error_handle error) {
+  CallData* calld = static_cast<CallData*>(calld_arg);
+  grpc_slice_buffer_reset_and_unref_internal(&calld->slices_);
+  grpc_core::Closure::Run(DEBUG_LOCATION,
+                          calld->original_send_message_on_complete_,
+                          GRPC_ERROR_REF(error));
+}
+
+void CallData::SendMessageBatchContinue(grpc_call_element* elem) {
+  // Note: The call to grpc_call_next_op() results in yielding the
+  // call combiner, so we need to clear send_message_batch_ before we do that.
+  grpc_transport_stream_op_batch* send_message_batch = send_message_batch_;
+  send_message_batch_ = nullptr;
+  grpc_call_next_op(elem, send_message_batch);
+}
+
 void CallData::FinishSendMessage(grpc_call_element* elem) {
+  GPR_DEBUG_ASSERT(compression_algorithm_ != GRPC_COMPRESS_NONE);
   // Compress the data if appropriate.
-  if (!SkipMessageCompression()) {
-    grpc_core::SliceBuffer tmp;
-    uint32_t& send_flags = send_message_batch_->payload->send_message.flags;
-    grpc_core::SliceBuffer* payload =
-        send_message_batch_->payload->send_message.send_message;
-    bool did_compress =
-        grpc_msg_compress(compression_algorithm_, payload->c_slice_buffer(),
-                          tmp.c_slice_buffer());
-    if (did_compress) {
-      if (GRPC_TRACE_FLAG_ENABLED(grpc_compression_trace)) {
-        const char* algo_name;
-        const size_t before_size = payload->Length();
-        const size_t after_size = tmp.Length();
-        const float savings_ratio = 1.0f - static_cast<float>(after_size) /
-                                               static_cast<float>(before_size);
-        GPR_ASSERT(grpc_compression_algorithm_name(compression_algorithm_,
-                                                   &algo_name));
-        gpr_log(GPR_INFO,
-                "Compressed[%s] %" PRIuPTR " bytes vs. %" PRIuPTR
-                " bytes (%.2f%% savings)",
-                algo_name, before_size, after_size, 100 * savings_ratio);
-      }
-      tmp.Swap(payload);
-      send_flags |= GRPC_WRITE_INTERNAL_COMPRESS;
-    } else {
-      if (GRPC_TRACE_FLAG_ENABLED(grpc_compression_trace)) {
-        const char* algo_name;
-        GPR_ASSERT(grpc_compression_algorithm_name(compression_algorithm_,
-                                                   &algo_name));
-        gpr_log(
-            GPR_INFO,
-            "Algorithm '%s' enabled but decided not to compress. Input size: "
-            "%" PRIuPTR,
-            algo_name, payload->Length());
-      }
+  grpc_slice_buffer tmp;
+  grpc_slice_buffer_init(&tmp);
+  uint32_t send_flags =
+      send_message_batch_->payload->send_message.send_message->flags();
+  bool did_compress = grpc_msg_compress(compression_algorithm_, &slices_, &tmp);
+  if (did_compress) {
+    if (GRPC_TRACE_FLAG_ENABLED(grpc_compression_trace)) {
+      const char* algo_name;
+      const size_t before_size = slices_.length;
+      const size_t after_size = tmp.length;
+      const float savings_ratio = 1.0f - static_cast<float>(after_size) /
+                                             static_cast<float>(before_size);
+      GPR_ASSERT(
+          grpc_compression_algorithm_name(compression_algorithm_, &algo_name));
+      gpr_log(GPR_INFO,
+              "Compressed[%s] %" PRIuPTR " bytes vs. %" PRIuPTR
+              " bytes (%.2f%% savings)",
+              algo_name, before_size, after_size, 100 * savings_ratio);
+    }
+    grpc_slice_buffer_swap(&slices_, &tmp);
+    send_flags |= GRPC_WRITE_INTERNAL_COMPRESS;
+  } else {
+    if (GRPC_TRACE_FLAG_ENABLED(grpc_compression_trace)) {
+      const char* algo_name;
+      GPR_ASSERT(
+          grpc_compression_algorithm_name(compression_algorithm_, &algo_name));
+      gpr_log(GPR_INFO,
+              "Algorithm '%s' enabled but decided not to compress. Input size: "
+              "%" PRIuPTR,
+              algo_name, slices_.length);
     }
   }
-  grpc_call_next_op(elem, absl::exchange(send_message_batch_, nullptr));
+  grpc_slice_buffer_destroy_internal(&tmp);
+  // Swap out the original byte stream with our new one and send the
+  // batch down.
+  new (&replacement_stream_)
+      grpc_core::SliceBufferByteStream(&slices_, send_flags);
+  send_message_batch_->payload->send_message.send_message.reset(
+      reinterpret_cast<grpc_core::SliceBufferByteStream*>(
+          &replacement_stream_));
+  original_send_message_on_complete_ = send_message_batch_->on_complete;
+  send_message_batch_->on_complete = &send_message_on_complete_;
+  SendMessageBatchContinue(elem);
 }
 
 void CallData::FailSendMessageBatchInCallCombiner(void* calld_arg,
@@ -218,66 +283,136 @@ void CallData::FailSendMessageBatchInCallCombiner(void* calld_arg,
   }
 }
 
-void CallData::ForwardSendMessageBatch(void* elem_arg,
-                                       grpc_error_handle /*unused*/) {
+// Pulls a slice from the send_message byte stream and adds it to slices_.
+grpc_error_handle CallData::PullSliceFromSendMessage() {
+  grpc_slice incoming_slice;
+  grpc_error_handle error =
+      send_message_batch_->payload->send_message.send_message->Pull(
+          &incoming_slice);
+  if (error == GRPC_ERROR_NONE) {
+    grpc_slice_buffer_add(&slices_, incoming_slice);
+  }
+  return error;
+}
+
+// Reads as many slices as possible from the send_message byte stream.
+// If all data has been read, invokes FinishSendMessage().  Otherwise,
+// an async call to ByteStream::Next() has been started, which will
+// eventually result in calling OnSendMessageNextDone().
+void CallData::ContinueReadingSendMessage(grpc_call_element* elem) {
+  if (slices_.length ==
+      send_message_batch_->payload->send_message.send_message->length()) {
+    FinishSendMessage(elem);
+    return;
+  }
+  while (send_message_batch_->payload->send_message.send_message->Next(
+      ~static_cast<size_t>(0), &on_send_message_next_done_)) {
+    grpc_error_handle error = PullSliceFromSendMessage();
+    if (error != GRPC_ERROR_NONE) {
+      // Closure callback; does not take ownership of error.
+      FailSendMessageBatchInCallCombiner(this, error);
+      GRPC_ERROR_UNREF(error);
+      return;
+    }
+    if (slices_.length ==
+        send_message_batch_->payload->send_message.send_message->length()) {
+      FinishSendMessage(elem);
+      break;
+    }
+  }
+}
+
+// Async callback for ByteStream::Next().
+void CallData::OnSendMessageNextDone(void* elem_arg, grpc_error_handle error) {
   grpc_call_element* elem = static_cast<grpc_call_element*>(elem_arg);
   CallData* calld = static_cast<CallData*>(elem->call_data);
-  calld->FinishSendMessage(elem);
+  if (error != GRPC_ERROR_NONE) {
+    // Closure callback; does not take ownership of error.
+    FailSendMessageBatchInCallCombiner(calld, error);
+    return;
+  }
+  error = calld->PullSliceFromSendMessage();
+  if (error != GRPC_ERROR_NONE) {
+    // Closure callback; does not take ownership of error.
+    FailSendMessageBatchInCallCombiner(calld, error);
+    GRPC_ERROR_UNREF(error);
+    return;
+  }
+  if (calld->slices_.length == calld->send_message_batch_->payload->send_message
+                                   .send_message->length()) {
+    calld->FinishSendMessage(elem);
+  } else {
+    calld->ContinueReadingSendMessage(elem);
+  }
+}
+
+void CallData::StartSendMessageBatch(void* elem_arg,
+                                     grpc_error_handle /*unused*/) {
+  grpc_call_element* elem = static_cast<grpc_call_element*>(elem_arg);
+  CallData* calld = static_cast<CallData*>(elem->call_data);
+  if (calld->SkipMessageCompression()) {
+    calld->SendMessageBatchContinue(elem);
+  } else {
+    calld->ContinueReadingSendMessage(elem);
+  }
 }
 
 void CallData::CompressStartTransportStreamOpBatch(
     grpc_call_element* elem, grpc_transport_stream_op_batch* batch) {
   GPR_TIMER_SCOPE("compress_start_transport_stream_op_batch", 0);
   // Handle cancel_stream.
   if (batch->cancel_stream) {
     GRPC_ERROR_UNREF(cancel_error_);
     cancel_error_ = GRPC_ERROR_REF(batch->payload->cancel_stream.cancel_error);
     if (send_message_batch_ != nullptr) {
       if (!seen_initial_metadata_) {
         GRPC_CALL_COMBINER_START(
             call_combiner_,
             GRPC_CLOSURE_CREATE(FailSendMessageBatchInCallCombiner, this,
                                 grpc_schedule_on_exec_ctx),
             GRPC_ERROR_REF(cancel_error_), "failing send_message op");
+      } else {
+        send_message_batch_->payload->send_message.send_message->Shutdown(
+            GRPC_ERROR_REF(cancel_error_));
       }
     }
   } else if (cancel_error_ != GRPC_ERROR_NONE) {
     grpc_transport_stream_op_batch_finish_with_failure(
         batch, GRPC_ERROR_REF(cancel_error_), call_combiner_);
     return;
   }
   // Handle send_initial_metadata.
   if (batch->send_initial_metadata) {
     GPR_ASSERT(!seen_initial_metadata_);
     ProcessSendInitialMetadata(
         elem, batch->payload->send_initial_metadata.send_initial_metadata);
     seen_initial_metadata_ = true;
     // If we had previously received a batch containing a send_message op,
     // handle it now.  Note that we need to re-enter the call combiner
     // for this, since we can't send two batches down while holding the
     // call combiner, since the connected_channel filter (at the bottom of
     // the call stack) will release the call combiner for each batch it sees.
     if (send_message_batch_ != nullptr) {
       GRPC_CALL_COMBINER_START(
-          call_combiner_, &forward_send_message_batch_in_call_combiner_,
+          call_combiner_, &start_send_message_batch_in_call_combiner_,
           GRPC_ERROR_NONE, "starting send_message after send_initial_metadata");
     }
   }
   // Handle send_message.
   if (batch->send_message) {
     GPR_ASSERT(send_message_batch_ == nullptr);
     send_message_batch_ = batch;
     // If we have not yet seen send_initial_metadata, then we have to
     // wait.  We save the batch and then drop the call combiner, which we'll
     // have to pick up again later when we get send_initial_metadata.
     if (!seen_initial_metadata_) {
       GRPC_CALL_COMBINER_STOP(
           call_combiner_, "send_message batch pending send_initial_metadata");
       return;
     }
-    FinishSendMessage(elem);
+    StartSendMessageBatch(elem, GRPC_ERROR_NONE);
   } else {
     // Pass control down the stack.
     grpc_call_next_op(elem, batch);
   }
 }
diff --git a/src/core/ext/filters/http/message_compress/message_decompress_filter.cc b/src/core/ext/filters/http/message_compress/message_decompress_filter.cc
index 3b26a75472..9bb3da48a8 100644
--- a/src/core/ext/filters/http/message_compress/message_decompress_filter.cc
+++ b/src/core/ext/filters/http/message_compress/message_decompress_filter.cc
@@ -1,47 +1,53 @@
 //
 //
 // Copyright 2020 gRPC authors.
 //
 // Licensed under the Apache License, Version 2.0 (the "License");
 // you may not use this file except in compliance with the License.
 // You may obtain a copy of the License at
 //
 //     http://www.apache.org/licenses/LICENSE-2.0
 //
 // Unless required by applicable law or agreed to in writing, software
 // distributed under the License is distributed on an "AS IS" BASIS,
 // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 // See the License for the specific language governing permissions and
 // limitations under the License.
 //
 //
 
 #include <grpc/support/port_platform.h>
 
 #include "src/core/ext/filters/http/message_compress/message_decompress_filter.h"
 
 #include <stdint.h>
 #include <string.h>
 
+#include <memory>
 #include <new>
+#include <type_traits>
 
 #include "absl/strings/str_cat.h"
 #include "absl/strings/str_format.h"
 #include "absl/types/optional.h"
 
 #include <grpc/impl/codegen/compression_types.h>
+#include <grpc/slice.h>
+#include <grpc/slice_buffer.h>
 #include <grpc/status.h>
 #include <grpc/support/log.h>
 
 #include "src/core/ext/filters/message_size/message_size_filter.h"
 #include "src/core/lib/channel/channel_args.h"
 #include "src/core/lib/compression/message_compress.h"
 #include "src/core/lib/gprpp/debug_location.h"
+#include "src/core/lib/gprpp/orphanable.h"
 #include "src/core/lib/iomgr/call_combiner.h"
 #include "src/core/lib/iomgr/closure.h"
 #include "src/core/lib/iomgr/error.h"
 #include "src/core/lib/profiling/timers.h"
-#include "src/core/lib/slice/slice_buffer.h"
+#include "src/core/lib/slice/slice_internal.h"
+#include "src/core/lib/transport/byte_stream.h"
 #include "src/core/lib/transport/metadata_batch.h"
 #include "src/core/lib/transport/transport.h"
 
@@ -69,62 +75,78 @@ class ChannelData {
 class CallData {
  public:
   CallData(const grpc_call_element_args& args, const ChannelData* chand)
       : call_combiner_(args.call_combiner),
         max_recv_message_length_(chand->max_recv_size()) {
     // Initialize state for recv_initial_metadata_ready callback
     GRPC_CLOSURE_INIT(&on_recv_initial_metadata_ready_,
                       OnRecvInitialMetadataReady, this,
                       grpc_schedule_on_exec_ctx);
     // Initialize state for recv_message_ready callback
+    grpc_slice_buffer_init(&recv_slices_);
+    GRPC_CLOSURE_INIT(&on_recv_message_next_done_, OnRecvMessageNextDone, this,
+                      grpc_schedule_on_exec_ctx);
     GRPC_CLOSURE_INIT(&on_recv_message_ready_, OnRecvMessageReady, this,
                       grpc_schedule_on_exec_ctx);
     // Initialize state for recv_trailing_metadata_ready callback
     GRPC_CLOSURE_INIT(&on_recv_trailing_metadata_ready_,
                       OnRecvTrailingMetadataReady, this,
                       grpc_schedule_on_exec_ctx);
     const MessageSizeParsedConfig* limits =
         MessageSizeParsedConfig::GetFromCallContext(
             args.context, chand->message_size_service_config_parser_index());
     if (limits != nullptr && limits->limits().max_recv_size >= 0 &&
         (limits->limits().max_recv_size < max_recv_message_length_ ||
          max_recv_message_length_ < 0)) {
       max_recv_message_length_ = limits->limits().max_recv_size;
     }
   }
 
+  ~CallData() { grpc_slice_buffer_destroy_internal(&recv_slices_); }
+
   void DecompressStartTransportStreamOpBatch(
       grpc_call_element* elem, grpc_transport_stream_op_batch* batch);
 
  private:
   static void OnRecvInitialMetadataReady(void* arg, grpc_error_handle error);
 
   // Methods for processing a receive message event
   void MaybeResumeOnRecvMessageReady();
   static void OnRecvMessageReady(void* arg, grpc_error_handle error);
+  static void OnRecvMessageNextDone(void* arg, grpc_error_handle error);
+  grpc_error_handle PullSliceFromRecvMessage();
+  void ContinueReadingRecvMessage();
+  void FinishRecvMessage();
   void ContinueRecvMessageReadyCallback(grpc_error_handle error);
 
   // Methods for processing a recv_trailing_metadata event
   void MaybeResumeOnRecvTrailingMetadataReady();
   static void OnRecvTrailingMetadataReady(void* arg, grpc_error_handle error);
 
   CallCombiner* call_combiner_;
   // Overall error for the call
   grpc_error_handle error_ = GRPC_ERROR_NONE;
   // Fields for handling recv_initial_metadata_ready callback
   grpc_closure on_recv_initial_metadata_ready_;
   grpc_closure* original_recv_initial_metadata_ready_ = nullptr;
   grpc_metadata_batch* recv_initial_metadata_ = nullptr;
   // Fields for handling recv_message_ready callback
   bool seen_recv_message_ready_ = false;
   int max_recv_message_length_;
   grpc_compression_algorithm algorithm_ = GRPC_COMPRESS_NONE;
-  absl::optional<SliceBuffer>* recv_message_ = nullptr;
-  uint32_t* recv_message_flags_ = nullptr;
   grpc_closure on_recv_message_ready_;
   grpc_closure* original_recv_message_ready_ = nullptr;
+  grpc_closure on_recv_message_next_done_;
+  OrphanablePtr<ByteStream>* recv_message_ = nullptr;
+  // recv_slices_ holds the slices read from the original recv_message stream.
+  // It is initialized during construction and reset when a new stream is
+  // created using it.
+  grpc_slice_buffer recv_slices_;
+  std::aligned_storage<sizeof(SliceBufferByteStream),
+                       alignof(SliceBufferByteStream)>::type
+      recv_replacement_stream_;
   // Fields for handling recv_trailing_metadata_ready callback
   bool seen_recv_trailing_metadata_ready_ = false;
   grpc_closure on_recv_trailing_metadata_ready_;
   grpc_closure* original_recv_trailing_metadata_ready_ = nullptr;
   grpc_error_handle on_recv_trailing_metadata_ready_error_ = GRPC_ERROR_NONE;
 };
@@ -155,56 +177,111 @@ void CallData::MaybeResumeOnRecvMessageReady() {
 void CallData::OnRecvMessageReady(void* arg, grpc_error_handle error) {
   CallData* calld = static_cast<CallData*>(arg);
   if (error == GRPC_ERROR_NONE) {
     if (calld->original_recv_initial_metadata_ready_ != nullptr) {
       calld->seen_recv_message_ready_ = true;
       GRPC_CALL_COMBINER_STOP(calld->call_combiner_,
                               "Deferring OnRecvMessageReady until after "
                               "OnRecvInitialMetadataReady");
       return;
     }
     if (calld->algorithm_ != GRPC_COMPRESS_NONE) {
       // recv_message can be NULL if trailing metadata is received instead of
       // message, or it's possible that the message was not compressed.
-      if (!calld->recv_message_->has_value() ||
-          (*calld->recv_message_)->Length() == 0 ||
-          ((*calld->recv_message_flags_ & GRPC_WRITE_INTERNAL_COMPRESS) == 0)) {
+      if (*calld->recv_message_ == nullptr ||
+          (*calld->recv_message_)->length() == 0 ||
+          ((*calld->recv_message_)->flags() & GRPC_WRITE_INTERNAL_COMPRESS) ==
+              0) {
         return calld->ContinueRecvMessageReadyCallback(GRPC_ERROR_NONE);
       }
       if (calld->max_recv_message_length_ >= 0 &&
-          (*calld->recv_message_)->Length() >
+          (*calld->recv_message_)->length() >
               static_cast<uint32_t>(calld->max_recv_message_length_)) {
         GPR_DEBUG_ASSERT(calld->error_ == GRPC_ERROR_NONE);
         calld->error_ = grpc_error_set_int(
             GRPC_ERROR_CREATE_FROM_CPP_STRING(
                 absl::StrFormat("Received message larger than max (%u vs. %d)",
-                                (*calld->recv_message_)->Length(),
+                                (*calld->recv_message_)->length(),
                                 calld->max_recv_message_length_)),
             GRPC_ERROR_INT_GRPC_STATUS, GRPC_STATUS_RESOURCE_EXHAUSTED);
         return calld->ContinueRecvMessageReadyCallback(
             GRPC_ERROR_REF(calld->error_));
       }
-      SliceBuffer decompressed_slices;
-      if (grpc_msg_decompress(calld->algorithm_,
-                              (*calld->recv_message_)->c_slice_buffer(),
-                              decompressed_slices.c_slice_buffer()) == 0) {
-        GPR_DEBUG_ASSERT(calld->error_ == GRPC_ERROR_NONE);
-        calld->error_ = GRPC_ERROR_CREATE_FROM_CPP_STRING(absl::StrCat(
-            "Unexpected error decompressing data for algorithm with "
-            "enum value ",
-            calld->algorithm_));
-      } else {
-        *calld->recv_message_flags_ =
-            (*calld->recv_message_flags_ & (~GRPC_WRITE_INTERNAL_COMPRESS)) |
-            GRPC_WRITE_INTERNAL_TEST_ONLY_WAS_COMPRESSED;
-        (*calld->recv_message_)->Swap(&decompressed_slices);
-      }
-      return calld->ContinueRecvMessageReadyCallback(
-          GRPC_ERROR_REF(calld->error_));
+      grpc_slice_buffer_destroy_internal(&calld->recv_slices_);
+      grpc_slice_buffer_init(&calld->recv_slices_);
+      return calld->ContinueReadingRecvMessage();
     }
   }
   calld->ContinueRecvMessageReadyCallback(GRPC_ERROR_REF(error));
 }
 
+void CallData::ContinueReadingRecvMessage() {
+  while ((*recv_message_)
+             ->Next((*recv_message_)->length() - recv_slices_.length,
+                    &on_recv_message_next_done_)) {
+    grpc_error_handle error = PullSliceFromRecvMessage();
+    if (error != GRPC_ERROR_NONE) {
+      return ContinueRecvMessageReadyCallback(error);
+    }
+    // We have read the entire message.
+    if (recv_slices_.length == (*recv_message_)->length()) {
+      return FinishRecvMessage();
+    }
+  }
+}
+
+grpc_error_handle CallData::PullSliceFromRecvMessage() {
+  grpc_slice incoming_slice;
+  grpc_error_handle error = (*recv_message_)->Pull(&incoming_slice);
+  if (error == GRPC_ERROR_NONE) {
+    grpc_slice_buffer_add(&recv_slices_, incoming_slice);
+  }
+  return error;
+}
+
+void CallData::OnRecvMessageNextDone(void* arg, grpc_error_handle error) {
+  CallData* calld = static_cast<CallData*>(arg);
+  if (error != GRPC_ERROR_NONE) {
+    return calld->ContinueRecvMessageReadyCallback(GRPC_ERROR_REF(error));
+  }
+  error = calld->PullSliceFromRecvMessage();
+  if (error != GRPC_ERROR_NONE) {
+    return calld->ContinueRecvMessageReadyCallback(error);
+  }
+  if (calld->recv_slices_.length == (*calld->recv_message_)->length()) {
+    calld->FinishRecvMessage();
+  } else {
+    calld->ContinueReadingRecvMessage();
+  }
+}
+
+void CallData::FinishRecvMessage() {
+  grpc_slice_buffer decompressed_slices;
+  grpc_slice_buffer_init(&decompressed_slices);
+  if (grpc_msg_decompress(algorithm_, &recv_slices_, &decompressed_slices) ==
+      0) {
+    GPR_DEBUG_ASSERT(error_ == GRPC_ERROR_NONE);
+    error_ = GRPC_ERROR_CREATE_FROM_CPP_STRING(
+        absl::StrCat("Unexpected error decompressing data for algorithm with "
+                     "enum value ",
+                     algorithm_));
+    grpc_slice_buffer_destroy_internal(&decompressed_slices);
+  } else {
+    uint32_t recv_flags =
+        ((*recv_message_)->flags() & (~GRPC_WRITE_INTERNAL_COMPRESS)) |
+        GRPC_WRITE_INTERNAL_TEST_ONLY_WAS_COMPRESSED;
+    // Swap out the original receive byte stream with our new one and send the
+    // batch down.
+    // Initializing recv_replacement_stream_ with decompressed_slices removes
+    // all the slices from decompressed_slices leaving it empty.
+    new (&recv_replacement_stream_)
+        SliceBufferByteStream(&decompressed_slices, recv_flags);
+    recv_message_->reset(
+        reinterpret_cast<SliceBufferByteStream*>(&recv_replacement_stream_));
+    recv_message_ = nullptr;
+  }
+  ContinueRecvMessageReadyCallback(GRPC_ERROR_REF(error_));
+}
+
 void CallData::ContinueRecvMessageReadyCallback(grpc_error_handle error) {
   MaybeResumeOnRecvTrailingMetadataReady();
   // The surface will clean up the receiving stream if there is an error.
@@ -245,29 +322,28 @@ void CallData::OnRecvTrailingMetadataReady(void* arg, grpc_error_handle error) {
 void CallData::DecompressStartTransportStreamOpBatch(
     grpc_call_element* elem, grpc_transport_stream_op_batch* batch) {
   // Handle recv_initial_metadata.
   if (batch->recv_initial_metadata) {
     recv_initial_metadata_ =
         batch->payload->recv_initial_metadata.recv_initial_metadata;
     original_recv_initial_metadata_ready_ =
         batch->payload->recv_initial_metadata.recv_initial_metadata_ready;
     batch->payload->recv_initial_metadata.recv_initial_metadata_ready =
         &on_recv_initial_metadata_ready_;
   }
   // Handle recv_message
   if (batch->recv_message) {
     recv_message_ = batch->payload->recv_message.recv_message;
-    recv_message_flags_ = batch->payload->recv_message.flags;
     original_recv_message_ready_ =
         batch->payload->recv_message.recv_message_ready;
     batch->payload->recv_message.recv_message_ready = &on_recv_message_ready_;
   }
   // Handle recv_trailing_metadata
   if (batch->recv_trailing_metadata) {
     original_recv_trailing_metadata_ready_ =
         batch->payload->recv_trailing_metadata.recv_trailing_metadata_ready;
     batch->payload->recv_trailing_metadata.recv_trailing_metadata_ready =
         &on_recv_trailing_metadata_ready_;
   }
   // Pass control down the stack.
   grpc_call_next_op(elem, batch);
 }
diff --git a/src/core/ext/filters/message_size/message_size_filter.cc b/src/core/ext/filters/message_size/message_size_filter.cc
index 227396cab9..b5145a6d4f 100644
--- a/src/core/ext/filters/message_size/message_size_filter.cc
+++ b/src/core/ext/filters/message_size/message_size_filter.cc
@@ -1,50 +1,51 @@
 //
 // Copyright 2016 gRPC authors.
 //
 // Licensed under the Apache License, Version 2.0 (the "License");
 // you may not use this file except in compliance with the License.
 // You may obtain a copy of the License at
 //
 //     http://www.apache.org/licenses/LICENSE-2.0
 //
 // Unless required by applicable law or agreed to in writing, software
 // distributed under the License is distributed on an "AS IS" BASIS,
 // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 // See the License for the specific language governing permissions and
 // limitations under the License.
 //
 
 #include <grpc/support/port_platform.h>
 
 #include "src/core/ext/filters/message_size/message_size_filter.h"
 
 #include <algorithm>
 #include <map>
 #include <new>
 #include <string>
 #include <utility>
 #include <vector>
 
 #include "absl/memory/memory.h"
 #include "absl/strings/str_format.h"
 #include "absl/types/optional.h"
 
 #include <grpc/impl/codegen/grpc_types.h>
 #include <grpc/status.h>
 #include <grpc/support/log.h>
 
 #include "src/core/lib/channel/channel_args.h"
 #include "src/core/lib/channel/channel_stack.h"
 #include "src/core/lib/channel/channel_stack_builder.h"
 #include "src/core/lib/config/core_configuration.h"
 #include "src/core/lib/gpr/string.h"
 #include "src/core/lib/gprpp/debug_location.h"
+#include "src/core/lib/gprpp/orphanable.h"
 #include "src/core/lib/iomgr/call_combiner.h"
 #include "src/core/lib/iomgr/closure.h"
 #include "src/core/lib/service_config/service_config_call_data.h"
-#include "src/core/lib/slice/slice_buffer.h"
 #include "src/core/lib/surface/channel_init.h"
 #include "src/core/lib/surface/channel_stack_type.h"
+#include "src/core/lib/transport/byte_stream.h"
 #include "src/core/lib/transport/transport.h"
 
 static void recv_message_ready(void* user_data, grpc_error_handle error);
@@ -154,92 +155,92 @@ struct channel_data {
 struct call_data {
   call_data(grpc_call_element* elem, const channel_data& chand,
             const grpc_call_element_args& args)
       : call_combiner(args.call_combiner), limits(chand.limits) {
     GRPC_CLOSURE_INIT(&recv_message_ready, ::recv_message_ready, elem,
                       grpc_schedule_on_exec_ctx);
     GRPC_CLOSURE_INIT(&recv_trailing_metadata_ready,
                       ::recv_trailing_metadata_ready, elem,
                       grpc_schedule_on_exec_ctx);
     // Get max sizes from channel data, then merge in per-method config values.
     // Note: Per-method config is only available on the client, so we
     // apply the max request size to the send limit and the max response
     // size to the receive limit.
     const grpc_core::MessageSizeParsedConfig* limits =
         grpc_core::MessageSizeParsedConfig::GetFromCallContext(
             args.context, chand.service_config_parser_index);
     if (limits != nullptr) {
       if (limits->limits().max_send_size >= 0 &&
           (limits->limits().max_send_size < this->limits.max_send_size ||
            this->limits.max_send_size < 0)) {
         this->limits.max_send_size = limits->limits().max_send_size;
       }
       if (limits->limits().max_recv_size >= 0 &&
           (limits->limits().max_recv_size < this->limits.max_recv_size ||
            this->limits.max_recv_size < 0)) {
         this->limits.max_recv_size = limits->limits().max_recv_size;
       }
     }
   }
 
   ~call_data() { GRPC_ERROR_UNREF(error); }
 
   grpc_core::CallCombiner* call_combiner;
   grpc_core::MessageSizeParsedConfig::message_size_limits limits;
   // Receive closures are chained: we inject this closure as the
   // recv_message_ready up-call on transport_stream_op, and remember to
   // call our next_recv_message_ready member after handling it.
   grpc_closure recv_message_ready;
   grpc_closure recv_trailing_metadata_ready;
   // The error caused by a message that is too large, or GRPC_ERROR_NONE
   grpc_error_handle error = GRPC_ERROR_NONE;
   // Used by recv_message_ready.
-  absl::optional<grpc_core::SliceBuffer>* recv_message = nullptr;
+  grpc_core::OrphanablePtr<grpc_core::ByteStream>* recv_message = nullptr;
   // Original recv_message_ready callback, invoked after our own.
   grpc_closure* next_recv_message_ready = nullptr;
   // Original recv_trailing_metadata callback, invoked after our own.
   grpc_closure* original_recv_trailing_metadata_ready;
   bool seen_recv_trailing_metadata = false;
   grpc_error_handle recv_trailing_metadata_error;
 };
 
 }  // namespace
 
 // Callback invoked when we receive a message.  Here we check the max
 // receive message size.
 static void recv_message_ready(void* user_data, grpc_error_handle error) {
   grpc_call_element* elem = static_cast<grpc_call_element*>(user_data);
   call_data* calld = static_cast<call_data*>(elem->call_data);
-  if (calld->recv_message->has_value() && calld->limits.max_recv_size >= 0 &&
-      (*calld->recv_message)->Length() >
+  if (*calld->recv_message != nullptr && calld->limits.max_recv_size >= 0 &&
+      (*calld->recv_message)->length() >
           static_cast<size_t>(calld->limits.max_recv_size)) {
     grpc_error_handle new_error = grpc_error_set_int(
         GRPC_ERROR_CREATE_FROM_CPP_STRING(absl::StrFormat(
             "Received message larger than max (%u vs. %d)",
-            (*calld->recv_message)->Length(), calld->limits.max_recv_size)),
+            (*calld->recv_message)->length(), calld->limits.max_recv_size)),
         GRPC_ERROR_INT_GRPC_STATUS, GRPC_STATUS_RESOURCE_EXHAUSTED);
     error = grpc_error_add_child(GRPC_ERROR_REF(error), new_error);
     GRPC_ERROR_UNREF(calld->error);
     calld->error = GRPC_ERROR_REF(error);
   } else {
     (void)GRPC_ERROR_REF(error);
   }
   // Invoke the next callback.
   grpc_closure* closure = calld->next_recv_message_ready;
   calld->next_recv_message_ready = nullptr;
   if (calld->seen_recv_trailing_metadata) {
     /* We might potentially see another RECV_MESSAGE op. In that case, we do not
      * want to run the recv_trailing_metadata_ready closure again. The newer
      * RECV_MESSAGE op cannot cause any errors since the transport has already
      * invoked the recv_trailing_metadata_ready closure and all further
      * RECV_MESSAGE ops will get null payloads. */
     calld->seen_recv_trailing_metadata = false;
     GRPC_CALL_COMBINER_START(calld->call_combiner,
                              &calld->recv_trailing_metadata_ready,
                              calld->recv_trailing_metadata_error,
                              "continue recv_trailing_metadata_ready");
   }
   grpc_core::Closure::Run(DEBUG_LOCATION, closure, error);
 }
 
 // Callback invoked on completion of recv_trailing_metadata
 // Notifies the recv_trailing_metadata batch of any message size failures
@@ -265,38 +266,38 @@ static void recv_trailing_metadata_ready(void* user_data,
 // Start transport stream op.
 static void message_size_start_transport_stream_op_batch(
     grpc_call_element* elem, grpc_transport_stream_op_batch* op) {
   call_data* calld = static_cast<call_data*>(elem->call_data);
   // Check max send message size.
   if (op->send_message && calld->limits.max_send_size >= 0 &&
-      op->payload->send_message.send_message->Length() >
+      op->payload->send_message.send_message->length() >
           static_cast<size_t>(calld->limits.max_send_size)) {
     grpc_transport_stream_op_batch_finish_with_failure(
         op,
         grpc_error_set_int(GRPC_ERROR_CREATE_FROM_CPP_STRING(absl::StrFormat(
                                "Sent message larger than max (%u vs. %d)",
-                               op->payload->send_message.send_message->Length(),
+                               op->payload->send_message.send_message->length(),
                                calld->limits.max_send_size)),
                            GRPC_ERROR_INT_GRPC_STATUS,
                            GRPC_STATUS_RESOURCE_EXHAUSTED),
         calld->call_combiner);
     return;
   }
   // Inject callback for receiving a message.
   if (op->recv_message) {
     calld->next_recv_message_ready =
         op->payload->recv_message.recv_message_ready;
     calld->recv_message = op->payload->recv_message.recv_message;
     op->payload->recv_message.recv_message_ready = &calld->recv_message_ready;
   }
   // Inject callback for receiving trailing metadata.
   if (op->recv_trailing_metadata) {
     calld->original_recv_trailing_metadata_ready =
         op->payload->recv_trailing_metadata.recv_trailing_metadata_ready;
     op->payload->recv_trailing_metadata.recv_trailing_metadata_ready =
         &calld->recv_trailing_metadata_ready;
   }
   // Chain to the next filter.
   grpc_call_next_op(elem, op);
 }
 
 // Constructor for call_data.
diff --git a/src/core/ext/filters/server_config_selector/server_config_selector_filter.cc b/src/core/ext/filters/server_config_selector/server_config_selector_filter.cc
index bdb76d30dc..4489a857a0 100644
--- a/src/core/ext/filters/server_config_selector/server_config_selector_filter.cc
+++ b/src/core/ext/filters/server_config_selector/server_config_selector_filter.cc
@@ -1,44 +1,45 @@
 // Copyright 2021 gRPC authors.
 //
 // Licensed under the Apache License, Version 2.0 (the "License");
 // you may not use this file except in compliance with the License.
 // You may obtain a copy of the License at
 //
 //     http://www.apache.org/licenses/LICENSE-2.0
 //
 // Unless required by applicable law or agreed to in writing, software
 // distributed under the License is distributed on an "AS IS" BASIS,
 // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 // See the License for the specific language governing permissions and
 // limitations under the License.
 
 #include <grpc/support/port_platform.h>
 
 #include "src/core/ext/filters/server_config_selector/server_config_selector_filter.h"
 
 #include <functional>
 #include <memory>
+#include <type_traits>
 #include <utility>
 
 #include "absl/base/thread_annotations.h"
 #include "absl/memory/memory.h"
 #include "absl/status/status.h"
 #include "absl/status/statusor.h"
 #include "absl/types/optional.h"
 
 #include <grpc/support/log.h>
 
 #include "src/core/ext/filters/server_config_selector/server_config_selector.h"
 #include "src/core/lib/channel/channel_args.h"
 #include "src/core/lib/channel/context.h"
 #include "src/core/lib/channel/promise_based_filter.h"
 #include "src/core/lib/gprpp/ref_counted_ptr.h"
 #include "src/core/lib/gprpp/sync.h"
 #include "src/core/lib/iomgr/error.h"
 #include "src/core/lib/promise/arena_promise.h"
 #include "src/core/lib/promise/context.h"
 #include "src/core/lib/promise/poll.h"
 #include "src/core/lib/promise/promise.h"
 #include "src/core/lib/resource_quota/arena.h"
 #include "src/core/lib/service_config/service_config_call_data.h"
 #include "src/core/lib/transport/transport.h"
diff --git a/src/core/ext/transport/binder/transport/binder_stream.h b/src/core/ext/transport/binder/transport/binder_stream.h
index 6c753e8ca0..b04076b1f8 100644
--- a/src/core/ext/transport/binder/transport/binder_stream.h
+++ b/src/core/ext/transport/binder/transport/binder_stream.h
@@ -49,70 +49,71 @@ struct RegisterStreamArgs {
 // TODO(mingcl): Figure out if we want to use class instead of struct here
 struct grpc_binder_stream {
   // server_data will be null for client, and for server it will be whatever
   // passed in to the accept_stream_fn callback by client.
   grpc_binder_stream(grpc_binder_transport* t, grpc_stream_refcount* refcount,
                      const void* /*server_data*/, grpc_core::Arena* arena,
                      int tx_code, bool is_client)
       : t(t),
         refcount(refcount),
         arena(arena),
         tx_code(tx_code),
         is_client(is_client),
         is_closed(false) {
     recv_initial_metadata_args.gbs = this;
     recv_initial_metadata_args.gbt = t;
     recv_message_args.gbs = this;
     recv_message_args.gbt = t;
     recv_trailing_metadata_args.gbs = this;
     recv_trailing_metadata_args.gbt = t;
   }
 
   ~grpc_binder_stream() {
     GRPC_ERROR_UNREF(cancel_self_error);
     if (destroy_stream_then_closure != nullptr) {
       grpc_core::ExecCtx::Run(DEBUG_LOCATION, destroy_stream_then_closure,
                               GRPC_ERROR_NONE);
     }
   }
 
   int GetTxCode() const { return tx_code; }
 
   grpc_binder_transport* t;
   grpc_stream_refcount* refcount;
   grpc_core::Arena* arena;
+  grpc_core::ManualConstructor<grpc_core::SliceBufferByteStream> sbs;
   int tx_code;
   const bool is_client;
   bool is_closed;
 
   grpc_closure* destroy_stream_then_closure = nullptr;
   grpc_closure destroy_stream;
 
   // The reason why this stream is cancelled and closed.
   grpc_error_handle cancel_self_error = GRPC_ERROR_NONE;
 
   grpc_closure recv_initial_metadata_closure;
   RecvInitialMetadataArgs recv_initial_metadata_args;
   grpc_closure recv_message_closure;
   RecvMessageArgs recv_message_args;
   grpc_closure recv_trailing_metadata_closure;
   RecvTrailingMetadataArgs recv_trailing_metadata_args;
 
   grpc_closure register_stream_closure;
   RegisterStreamArgs register_stream_args;
 
   // We store these fields passed from op batch, in order to access them through
   // grpc_binder_stream
   grpc_metadata_batch* recv_initial_metadata;
   grpc_closure* recv_initial_metadata_ready = nullptr;
   bool* trailing_metadata_available = nullptr;
-  absl::optional<grpc_core::SliceBuffer>* recv_message;
+  grpc_core::OrphanablePtr<grpc_core::ByteStream>* recv_message;
   grpc_closure* recv_message_ready = nullptr;
   bool* call_failed_before_recv_message = nullptr;
   grpc_metadata_batch* recv_trailing_metadata;
   grpc_closure* recv_trailing_metadata_finished = nullptr;
 
   bool trailing_metadata_sent = false;
   bool need_to_call_trailing_metadata_callback = false;
 };
 
 #endif  // GRPC_CORE_EXT_TRANSPORT_BINDER_TRANSPORT_BINDER_STREAM_H
diff --git a/src/core/ext/transport/binder/transport/binder_transport.cc b/src/core/ext/transport/binder/transport/binder_transport.cc
index 4cf48b4ca8..d1374ef5a4 100644
--- a/src/core/ext/transport/binder/transport/binder_transport.cc
+++ b/src/core/ext/transport/binder/transport/binder_transport.cc
@@ -1,44 +1,45 @@
 // Copyright 2021 gRPC authors.
 //
 // Licensed under the Apache License, Version 2.0 (the "License");
 // you may not use this file except in compliance with the License.
 // You may obtain a copy of the License at
 //
 //     http://www.apache.org/licenses/LICENSE-2.0
 //
 // Unless required by applicable law or agreed to in writing, software
 // distributed under the License is distributed on an "AS IS" BASIS,
 // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 // See the License for the specific language governing permissions and
 // limitations under the License.
 
 #include <grpc/support/port_platform.h>
 
 #include "src/core/ext/transport/binder/transport/binder_transport.h"
 
 #ifndef GRPC_NO_BINDER
 
 #include <cstdint>
 #include <memory>
 #include <string>
 #include <utility>
 
 #include "absl/memory/memory.h"
 #include "absl/strings/str_cat.h"
 #include "absl/strings/substitute.h"
 
 #include <grpc/support/log.h>
 
 #include "src/core/ext/transport/binder/transport/binder_stream.h"
 #include "src/core/ext/transport/binder/utils/transport_stream_receiver.h"
 #include "src/core/ext/transport/binder/utils/transport_stream_receiver_impl.h"
 #include "src/core/ext/transport/binder/wire_format/wire_reader.h"
 #include "src/core/ext/transport/binder/wire_format/wire_reader_impl.h"
 #include "src/core/ext/transport/binder/wire_format/wire_writer.h"
 #include "src/core/lib/iomgr/exec_ctx.h"
 #include "src/core/lib/slice/slice_internal.h"
+#include "src/core/lib/transport/byte_stream.h"
 #include "src/core/lib/transport/error_utils.h"
 #include "src/core/lib/transport/metadata_batch.h"
 #include "src/core/lib/transport/transport.h"
 
 #ifndef NDEBUG
@@ -235,42 +236,45 @@ static void recv_initial_metadata_locked(void* arg,
 static void recv_message_locked(void* arg, grpc_error_handle /*error*/) {
   RecvMessageArgs* args = static_cast<RecvMessageArgs*>(arg);
   grpc_binder_stream* gbs = args->gbs;
 
   gpr_log(GPR_INFO, "recv_message_locked is_client = %d is_closed = %d",
           gbs->is_client, gbs->is_closed);
 
   if (!gbs->is_closed) {
     grpc_error_handle error = [&] {
       GPR_ASSERT(gbs->recv_message);
       GPR_ASSERT(gbs->recv_message_ready);
       if (!args->message.ok()) {
         gpr_log(GPR_ERROR, "Failed to receive message");
         if (args->message.status().message() ==
             grpc_binder::TransportStreamReceiver::
                 kGrpcBinderTransportCancelledGracefully) {
           gpr_log(GPR_ERROR, "message cancelled gracefully");
           // Cancelled because we've already received trailing metadata.
           // It's not an error in this case.
           return GRPC_ERROR_NONE;
         } else {
           return absl_status_to_grpc_error(args->message.status());
         }
       }
-      grpc_core::SliceBuffer buf;
-      buf.Append(grpc_core::Slice(grpc_slice_from_cpp_string(*args->message)));
-      *gbs->recv_message = std::move(buf);
+      grpc_slice_buffer buf;
+      grpc_slice_buffer_init(&buf);
+      grpc_slice_buffer_add(&buf, grpc_slice_from_cpp_string(*args->message));
+
+      gbs->sbs.Init(&buf, 0);
+      gbs->recv_message->reset(gbs->sbs.get());
       return GRPC_ERROR_NONE;
     }();
 
     if (error != GRPC_ERROR_NONE &&
         gbs->call_failed_before_recv_message != nullptr) {
       *gbs->call_failed_before_recv_message = true;
     }
     grpc_closure* cb = gbs->recv_message_ready;
     gbs->recv_message_ready = nullptr;
     gbs->recv_message = nullptr;
     grpc_core::ExecCtx::Run(DEBUG_LOCATION, cb, error);
   }
 
   GRPC_BINDER_STREAM_UNREF(gbs, "recv_message");
 }
@@ -378,186 +382,206 @@ class MetadataEncoder {
 static void perform_stream_op_locked(void* stream_op,
                                      grpc_error_handle /*error*/) {
   grpc_transport_stream_op_batch* op =
       static_cast<grpc_transport_stream_op_batch*>(stream_op);
   grpc_binder_stream* gbs =
       static_cast<grpc_binder_stream*>(op->handler_private.extra_arg);
   grpc_binder_transport* gbt = gbs->t;
   if (op->cancel_stream) {
     // TODO(waynetu): Is this true?
     GPR_ASSERT(!op->send_initial_metadata && !op->send_message &&
                !op->send_trailing_metadata && !op->recv_initial_metadata &&
                !op->recv_message && !op->recv_trailing_metadata);
     gpr_log(GPR_INFO, "cancel_stream is_client = %d", gbs->is_client);
     if (!gbs->is_client) {
       // Send trailing metadata to inform the other end about the cancellation,
       // regardless if we'd already done that or not.
       grpc_binder::Transaction cancel_tx(gbs->GetTxCode(), gbt->is_client);
       cancel_tx.SetSuffix(grpc_binder::Metadata{});
       cancel_tx.SetStatus(1);
       absl::Status status = gbt->wire_writer->RpcCall(cancel_tx);
     }
     cancel_stream_locked(gbt, gbs, op->payload->cancel_stream.cancel_error);
     if (op->on_complete != nullptr) {
       grpc_core::ExecCtx::Run(DEBUG_LOCATION, op->on_complete, GRPC_ERROR_NONE);
     }
     GRPC_BINDER_STREAM_UNREF(gbs, "perform_stream_op");
     return;
   }
 
   if (gbs->is_closed) {
     if (op->send_message) {
       // Reset the send_message payload to prevent memory leaks.
-      op->payload->send_message.send_message->Clear();
+      op->payload->send_message.send_message.reset();
     }
     if (op->recv_initial_metadata) {
       grpc_core::ExecCtx::Run(
           DEBUG_LOCATION,
           op->payload->recv_initial_metadata.recv_initial_metadata_ready,
           GRPC_ERROR_REF(gbs->cancel_self_error));
     }
     if (op->recv_message) {
       grpc_core::ExecCtx::Run(DEBUG_LOCATION,
                               op->payload->recv_message.recv_message_ready,
                               GRPC_ERROR_REF(gbs->cancel_self_error));
     }
     if (op->recv_trailing_metadata) {
       grpc_core::ExecCtx::Run(
           DEBUG_LOCATION,
           op->payload->recv_trailing_metadata.recv_trailing_metadata_ready,
           GRPC_ERROR_REF(gbs->cancel_self_error));
     }
     if (op->on_complete != nullptr) {
       grpc_core::ExecCtx::Run(DEBUG_LOCATION, op->on_complete,
                               GRPC_ERROR_REF(gbs->cancel_self_error));
     }
     GRPC_BINDER_STREAM_UNREF(gbs, "perform_stream_op");
     return;
   }
 
   int tx_code = gbs->tx_code;
   grpc_binder::Transaction tx(tx_code, gbt->is_client);
 
   if (op->send_initial_metadata) {
     gpr_log(GPR_INFO, "send_initial_metadata");
     grpc_binder::Metadata init_md;
     auto batch = op->payload->send_initial_metadata.send_initial_metadata;
 
     grpc_binder::MetadataEncoder encoder(gbt->is_client, &tx, &init_md);
     batch->Encode(&encoder);
     tx.SetPrefix(init_md);
   }
   if (op->send_message) {
     gpr_log(GPR_INFO, "send_message");
-    tx.SetData(op->payload->send_message.send_message->JoinIntoString());
+    size_t remaining = op->payload->send_message.send_message->length();
+    std::string message_data;
+    while (remaining > 0) {
+      grpc_slice message_slice;
+      // TODO(waynetu): Temporarily assume that the message is ready.
+      GPR_ASSERT(
+          op->payload->send_message.send_message->Next(SIZE_MAX, nullptr));
+      grpc_error_handle error =
+          op->payload->send_message.send_message->Pull(&message_slice);
+      // TODO(waynetu): Cancel the stream if error is not GRPC_ERROR_NONE.
+      GPR_ASSERT(error == GRPC_ERROR_NONE);
+      uint8_t* p = GRPC_SLICE_START_PTR(message_slice);
+      size_t len = GRPC_SLICE_LENGTH(message_slice);
+      remaining -= len;
+      message_data += std::string(reinterpret_cast<char*>(p), len);
+      grpc_slice_unref_internal(message_slice);
+    }
+    tx.SetData(message_data);
+    // TODO(b/192369787): Are we supposed to reset here to avoid
+    // use-after-free issue in call.cc?
+    op->payload->send_message.send_message.reset();
   }
 
   if (op->send_trailing_metadata) {
     gpr_log(GPR_INFO, "send_trailing_metadata");
     auto batch = op->payload->send_trailing_metadata.send_trailing_metadata;
     grpc_binder::Metadata trailing_metadata;
 
     grpc_binder::MetadataEncoder encoder(gbt->is_client, &tx,
                                          &trailing_metadata);
     batch->Encode(&encoder);
 
     // TODO(mingcl): Will we ever has key-value pair here? According to
     // wireformat client suffix data is always empty.
     tx.SetSuffix(trailing_metadata);
   }
   if (op->recv_initial_metadata) {
     gpr_log(GPR_INFO, "recv_initial_metadata");
     gbs->recv_initial_metadata_ready =
         op->payload->recv_initial_metadata.recv_initial_metadata_ready;
     gbs->recv_initial_metadata =
         op->payload->recv_initial_metadata.recv_initial_metadata;
     gbs->trailing_metadata_available =
         op->payload->recv_initial_metadata.trailing_metadata_available;
     GRPC_BINDER_STREAM_REF(gbs, "recv_initial_metadata");
     gbt->transport_stream_receiver->RegisterRecvInitialMetadata(
         tx_code, [tx_code, gbs,
                   gbt](absl::StatusOr<grpc_binder::Metadata> initial_metadata) {
           grpc_core::ExecCtx exec_ctx;
           gbs->recv_initial_metadata_args.tx_code = tx_code;
           gbs->recv_initial_metadata_args.initial_metadata =
               std::move(initial_metadata);
           gbt->combiner->Run(
               GRPC_CLOSURE_INIT(&gbs->recv_initial_metadata_closure,
                                 recv_initial_metadata_locked,
                                 &gbs->recv_initial_metadata_args, nullptr),
               GRPC_ERROR_NONE);
         });
   }
   if (op->recv_message) {
     gpr_log(GPR_INFO, "recv_message");
     gbs->recv_message_ready = op->payload->recv_message.recv_message_ready;
     gbs->recv_message = op->payload->recv_message.recv_message;
     gbs->call_failed_before_recv_message =
         op->payload->recv_message.call_failed_before_recv_message;
     GRPC_BINDER_STREAM_REF(gbs, "recv_message");
     gbt->transport_stream_receiver->RegisterRecvMessage(
         tx_code, [tx_code, gbs, gbt](absl::StatusOr<std::string> message) {
           grpc_core::ExecCtx exec_ctx;
           gbs->recv_message_args.tx_code = tx_code;
           gbs->recv_message_args.message = std::move(message);
           gbt->combiner->Run(
               GRPC_CLOSURE_INIT(&gbs->recv_message_closure, recv_message_locked,
                                 &gbs->recv_message_args, nullptr),
               GRPC_ERROR_NONE);
         });
   }
   if (op->recv_trailing_metadata) {
     gpr_log(GPR_INFO, "recv_trailing_metadata");
     gbs->recv_trailing_metadata_finished =
         op->payload->recv_trailing_metadata.recv_trailing_metadata_ready;
     gbs->recv_trailing_metadata =
         op->payload->recv_trailing_metadata.recv_trailing_metadata;
     GRPC_BINDER_STREAM_REF(gbs, "recv_trailing_metadata");
     gbt->transport_stream_receiver->RegisterRecvTrailingMetadata(
         tx_code, [tx_code, gbs, gbt](
                      absl::StatusOr<grpc_binder::Metadata> trailing_metadata,
                      int status) {
           grpc_core::ExecCtx exec_ctx;
           gbs->recv_trailing_metadata_args.tx_code = tx_code;
           gbs->recv_trailing_metadata_args.trailing_metadata =
               std::move(trailing_metadata);
           gbs->recv_trailing_metadata_args.status = status;
           gbt->combiner->Run(
               GRPC_CLOSURE_INIT(&gbs->recv_trailing_metadata_closure,
                                 recv_trailing_metadata_locked,
                                 &gbs->recv_trailing_metadata_args, nullptr),
               GRPC_ERROR_NONE);
         });
   }
   // Only send transaction when there's a send op presented.
   absl::Status status = absl::OkStatus();
   if (op->send_initial_metadata || op->send_message ||
       op->send_trailing_metadata) {
     // TODO(waynetu): RpcCall() is doing a lot of work (including waiting for
     // acknowledgements from the other side). Consider delaying this operation
     // with combiner.
     status = gbt->wire_writer->RpcCall(tx);
     if (!gbs->is_client && op->send_trailing_metadata) {
       gbs->trailing_metadata_sent = true;
       // According to transport explaineer - "Server extra: This op shouldn't
       // actually be considered complete until the server has also sent trailing
       // metadata to provide the other side with final status"
       //
       // Because we've done sending trailing metadata here, we can safely
       // complete the recv_trailing_metadata callback here.
       if (gbs->need_to_call_trailing_metadata_callback) {
         grpc_closure* cb = gbs->recv_trailing_metadata_finished;
         gbs->recv_trailing_metadata_finished = nullptr;
         grpc_core::ExecCtx::Run(DEBUG_LOCATION, cb, GRPC_ERROR_NONE);
         gbs->need_to_call_trailing_metadata_callback = false;
       }
     }
   }
   // Note that this should only be scheduled when all non-recv ops are
   // completed
   if (op->on_complete != nullptr) {
     grpc_core::ExecCtx::Run(DEBUG_LOCATION, op->on_complete,
                             absl_status_to_grpc_error(status));
     gpr_log(GPR_INFO, "on_complete closure schuduled");
   }
   GRPC_BINDER_STREAM_UNREF(gbs, "perform_stream_op");
 }
diff --git a/src/core/ext/transport/chttp2/transport/chttp2_transport.cc b/src/core/ext/transport/chttp2/transport/chttp2_transport.cc
index b12d1887d9..deec773ed8 100644
--- a/src/core/ext/transport/chttp2/transport/chttp2_transport.cc
+++ b/src/core/ext/transport/chttp2/transport/chttp2_transport.cc
@@ -1,110 +1,117 @@
 //
 // Copyright 2018 gRPC authors.
 //
 // Licensed under the Apache License, Version 2.0 (the "License");
 // you may not use this file except in compliance with the License.
 // You may obtain a copy of the License at
 //
 //     http://www.apache.org/licenses/LICENSE-2.0
 //
 // Unless required by applicable law or agreed to in writing, software
 // distributed under the License is distributed on an "AS IS" BASIS,
 // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 // See the License for the specific language governing permissions and
 // limitations under the License.
 //
 
 #include <grpc/support/port_platform.h>
 
 #include "src/core/ext/transport/chttp2/transport/chttp2_transport.h"
 
 #include <inttypes.h>
 #include <limits.h>
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
 
 #include <algorithm>
 #include <memory>
 #include <new>
 #include <string>
 #include <utility>
 
 #include "absl/base/attributes.h"
 #include "absl/status/status.h"
 #include "absl/strings/cord.h"
 #include "absl/strings/str_cat.h"
 #include "absl/strings/str_format.h"
 #include "absl/strings/string_view.h"
 #include "absl/types/optional.h"
-#include "absl/types/variant.h"
 
 #include <grpc/impl/codegen/connectivity_state.h>
 #include <grpc/slice_buffer.h>
 #include <grpc/status.h>
 #include <grpc/support/alloc.h>
 #include <grpc/support/atm.h>
 #include <grpc/support/log.h>
 
 #include "src/core/ext/transport/chttp2/transport/context_list.h"
 #include "src/core/ext/transport/chttp2/transport/flow_control.h"
 #include "src/core/ext/transport/chttp2/transport/frame.h"
 #include "src/core/ext/transport/chttp2/transport/frame_data.h"
 #include "src/core/ext/transport/chttp2/transport/frame_goaway.h"
 #include "src/core/ext/transport/chttp2/transport/frame_rst_stream.h"
 #include "src/core/ext/transport/chttp2/transport/hpack_encoder.h"
 #include "src/core/ext/transport/chttp2/transport/http2_settings.h"
 #include "src/core/ext/transport/chttp2/transport/internal.h"
 #include "src/core/ext/transport/chttp2/transport/stream_map.h"
 #include "src/core/ext/transport/chttp2/transport/varint.h"
 #include "src/core/lib/channel/channel_args.h"
 #include "src/core/lib/debug/stats.h"
 #include "src/core/lib/gpr/useful.h"
 #include "src/core/lib/gprpp/bitset.h"
 #include "src/core/lib/gprpp/debug_location.h"
+#include "src/core/lib/gprpp/global_config_env.h"
+#include "src/core/lib/gprpp/manual_constructor.h"
+#include "src/core/lib/gprpp/orphanable.h"
 #include "src/core/lib/gprpp/ref_counted.h"
 #include "src/core/lib/gprpp/time.h"
 #include "src/core/lib/http/parser.h"
 #include "src/core/lib/iomgr/combiner.h"
 #include "src/core/lib/iomgr/error.h"
 #include "src/core/lib/iomgr/exec_ctx.h"
 #include "src/core/lib/iomgr/iomgr_fwd.h"
 #include "src/core/lib/iomgr/pollset.h"
 #include "src/core/lib/iomgr/timer.h"
 #include "src/core/lib/profiling/timers.h"
-#include "src/core/lib/promise/poll.h"
 #include "src/core/lib/resource_quota/api.h"
 #include "src/core/lib/resource_quota/arena.h"
 #include "src/core/lib/resource_quota/memory_quota.h"
 #include "src/core/lib/resource_quota/resource_quota.h"
 #include "src/core/lib/resource_quota/trace.h"
 #include "src/core/lib/slice/slice.h"
-#include "src/core/lib/slice/slice_buffer.h"
 #include "src/core/lib/slice/slice_internal.h"
 #include "src/core/lib/slice/slice_refcount.h"
 #include "src/core/lib/transport/bdp_estimator.h"
+#include "src/core/lib/transport/byte_stream.h"
 #include "src/core/lib/transport/connectivity_state.h"
 #include "src/core/lib/transport/error_utils.h"
 #include "src/core/lib/transport/http2_errors.h"
 #include "src/core/lib/transport/metadata_batch.h"
 #include "src/core/lib/transport/status_conversion.h"
 #include "src/core/lib/transport/transport.h"
 #include "src/core/lib/transport/transport_impl.h"
 
+GPR_GLOBAL_CONFIG_DEFINE_BOOL(
+    grpc_experimental_disable_flow_control, false,
+    "If set, flow control will be effectively disabled. Max out all values and "
+    "assume the remote peer does the same. Thus we can ignore any flow control "
+    "bookkeeping, error checking, and decision making");
+
 #define DEFAULT_CONNECTION_WINDOW_TARGET (1024 * 1024)
 #define MAX_WINDOW 0x7fffffffu
 #define MAX_WRITE_BUFFER_SIZE (64 * 1024 * 1024)
 #define DEFAULT_MAX_HEADER_LIST_SIZE (8 * 1024)
 
 #define DEFAULT_CLIENT_KEEPALIVE_TIME_MS INT_MAX
 #define DEFAULT_CLIENT_KEEPALIVE_TIMEOUT_MS 20000 /* 20 seconds */
 #define DEFAULT_SERVER_KEEPALIVE_TIME_MS 7200000  /* 2 hours */
 #define DEFAULT_SERVER_KEEPALIVE_TIMEOUT_MS 20000 /* 20 seconds */
 #define DEFAULT_KEEPALIVE_PERMIT_WITHOUT_CALLS false
 #define KEEPALIVE_TIME_BACKOFF_MULTIPLIER 2
 
 #define DEFAULT_MIN_RECV_PING_INTERVAL_WITHOUT_DATA_MS 300000 /* 5 minutes */
 #define DEFAULT_MAX_PINGS_BETWEEN_DATA 2
 #define DEFAULT_MAX_PING_STRIKES 2
 
 #define DEFAULT_MAX_PENDING_INDUCED_FRAMES 10000
@@ -143,6 +150,8 @@ static void read_action(void* t, grpc_error_handle error);
 static void read_action_locked(void* t, grpc_error_handle error);
 static void continue_read_action_locked(grpc_chttp2_transport* t);
 
+static void complete_fetch(void* gs, grpc_error_handle error);
+static void complete_fetch_locked(void* gs, grpc_error_handle error);
 // Set a transport level setting, and push it to our peer
 static void queue_setting_update(grpc_chttp2_transport* t,
                                  grpc_chttp2_setting_id id, uint32_t value);
@@ -192,6 +201,8 @@ static void finish_keepalive_ping_locked(void* arg, grpc_error_handle error);
 static void keepalive_watchdog_fired(void* arg, grpc_error_handle error);
 static void keepalive_watchdog_fired_locked(void* arg, grpc_error_handle error);
 
+static void reset_byte_stream(void* arg, grpc_error_handle error);
+
 namespace grpc_core {
 
 namespace {
@@ -225,201 +236,209 @@ void TestOnlyGlobalHttp2TransportDisableTransientFailureStateNotification(
 grpc_chttp2_transport::~grpc_chttp2_transport() {
   size_t i;
 
   if (channelz_socket != nullptr) {
     channelz_socket.reset();
   }
 
   grpc_endpoint_destroy(ep);
 
   grpc_slice_buffer_destroy_internal(&qbuf);
 
   grpc_slice_buffer_destroy_internal(&outbuf);
 
   grpc_error_handle error =
       GRPC_ERROR_CREATE_FROM_STATIC_STRING("Transport destroyed");
   // ContextList::Execute follows semantics of a callback function and does not
   // take a ref on error
   grpc_core::ContextList::Execute(cl, nullptr, error);
   GRPC_ERROR_UNREF(error);
   cl = nullptr;
 
   grpc_slice_buffer_destroy_internal(&read_buffer);
   grpc_chttp2_goaway_parser_destroy(&goaway_parser);
 
   for (i = 0; i < STREAM_LIST_COUNT; i++) {
     GPR_ASSERT(lists[i].head == nullptr);
     GPR_ASSERT(lists[i].tail == nullptr);
   }
 
   GRPC_ERROR_UNREF(goaway_error);
 
   GPR_ASSERT(grpc_chttp2_stream_map_size(&stream_map) == 0);
 
   grpc_chttp2_stream_map_destroy(&stream_map);
 
   GRPC_COMBINER_UNREF(combiner, "chttp2_transport");
 
   cancel_pings(this,
                GRPC_ERROR_CREATE_FROM_STATIC_STRING("Transport destroyed"));
 
   while (write_cb_pool) {
     grpc_chttp2_write_cb* next = write_cb_pool->next;
     gpr_free(write_cb_pool);
     write_cb_pool = next;
   }
 
+  flow_control.Destroy();
+
   GRPC_ERROR_UNREF(closed_with_error);
   gpr_free(ping_acks);
   if (grpc_core::test_only_destruct_callback != nullptr) {
     grpc_core::test_only_destruct_callback();
   }
 }
 
 static const grpc_transport_vtable* get_vtable(void);
 
-static void read_channel_args(grpc_chttp2_transport* t,
+// Returns whether bdp is enabled
+static bool read_channel_args(grpc_chttp2_transport* t,
                               const grpc_channel_args* channel_args,
                               bool is_client) {
+  bool enable_bdp = true;
   bool channelz_enabled = GRPC_ENABLE_CHANNELZ_DEFAULT;
   size_t i;
   int j;
 
   for (i = 0; i < channel_args->num_args; i++) {
     if (0 == strcmp(channel_args->args[i].key,
                     GRPC_ARG_HTTP2_INITIAL_SEQUENCE_NUMBER)) {
       const grpc_integer_options options = {-1, 0, INT_MAX};
       const int value =
           grpc_channel_arg_get_integer(&channel_args->args[i], options);
       if (value >= 0) {
         if ((t->next_stream_id & 1) != (value & 1)) {
           gpr_log(GPR_ERROR, "%s: low bit must be %d on %s",
                   GRPC_ARG_HTTP2_INITIAL_SEQUENCE_NUMBER, t->next_stream_id & 1,
                   is_client ? "client" : "server");
         } else {
           t->next_stream_id = static_cast<uint32_t>(value);
         }
       }
     } else if (0 == strcmp(channel_args->args[i].key,
                            GRPC_ARG_HTTP2_HPACK_TABLE_SIZE_ENCODER)) {
       const grpc_integer_options options = {-1, 0, INT_MAX};
       const int value =
           grpc_channel_arg_get_integer(&channel_args->args[i], options);
       if (value >= 0) {
         t->hpack_compressor.SetMaxUsableSize(value);
       }
     } else if (0 == strcmp(channel_args->args[i].key,
                            GRPC_ARG_HTTP2_MAX_PINGS_WITHOUT_DATA)) {
       t->ping_policy.max_pings_without_data = grpc_channel_arg_get_integer(
           &channel_args->args[i],
           {g_default_max_pings_without_data, 0, INT_MAX});
     } else if (0 == strcmp(channel_args->args[i].key,
                            GRPC_ARG_HTTP2_MAX_PING_STRIKES)) {
       t->ping_policy.max_ping_strikes = grpc_channel_arg_get_integer(
           &channel_args->args[i], {g_default_max_ping_strikes, 0, INT_MAX});
     } else if (0 ==
                strcmp(channel_args->args[i].key,
                       GRPC_ARG_HTTP2_MIN_RECV_PING_INTERVAL_WITHOUT_DATA_MS)) {
       t->ping_policy.min_recv_ping_interval_without_data =
           grpc_core::Duration::Milliseconds(grpc_channel_arg_get_integer(
               &channel_args->args[i],
               grpc_integer_options{
                   g_default_min_recv_ping_interval_without_data_ms, 0,
                   INT_MAX}));
     } else if (0 == strcmp(channel_args->args[i].key,
                            GRPC_ARG_HTTP2_WRITE_BUFFER_SIZE)) {
       t->write_buffer_size = static_cast<uint32_t>(grpc_channel_arg_get_integer(
           &channel_args->args[i], {0, 0, MAX_WRITE_BUFFER_SIZE}));
+    } else if (0 ==
+               strcmp(channel_args->args[i].key, GRPC_ARG_HTTP2_BDP_PROBE)) {
+      enable_bdp = grpc_channel_arg_get_bool(&channel_args->args[i], true);
     } else if (0 ==
                strcmp(channel_args->args[i].key, GRPC_ARG_KEEPALIVE_TIME_MS)) {
       const int value = grpc_channel_arg_get_integer(
           &channel_args->args[i],
           grpc_integer_options{t->is_client
                                    ? g_default_client_keepalive_time_ms
                                    : g_default_server_keepalive_time_ms,
                                1, INT_MAX});
       t->keepalive_time = value == INT_MAX
                               ? grpc_core::Duration::Infinity()
                               : grpc_core::Duration::Milliseconds(value);
     } else if (0 == strcmp(channel_args->args[i].key,
                            GRPC_ARG_KEEPALIVE_TIMEOUT_MS)) {
       const int value = grpc_channel_arg_get_integer(
           &channel_args->args[i],
           grpc_integer_options{t->is_client
                                    ? g_default_client_keepalive_timeout_ms
                                    : g_default_server_keepalive_timeout_ms,
                                0, INT_MAX});
       t->keepalive_timeout = value == INT_MAX
                                  ? grpc_core::Duration::Infinity()
                                  : grpc_core::Duration::Milliseconds(value);
     } else if (0 == strcmp(channel_args->args[i].key,
                            GRPC_ARG_KEEPALIVE_PERMIT_WITHOUT_CALLS)) {
       t->keepalive_permit_without_calls = static_cast<uint32_t>(
           grpc_channel_arg_get_integer(&channel_args->args[i], {0, 0, 1}));
     } else if (0 == strcmp(channel_args->args[i].key,
                            GRPC_ARG_OPTIMIZATION_TARGET)) {
       gpr_log(GPR_INFO, "GRPC_ARG_OPTIMIZATION_TARGET is deprecated");
     } else if (0 ==
                strcmp(channel_args->args[i].key, GRPC_ARG_ENABLE_CHANNELZ)) {
       channelz_enabled = grpc_channel_arg_get_bool(
           &channel_args->args[i], GRPC_ENABLE_CHANNELZ_DEFAULT);
     } else {
       static const struct {
         const char* channel_arg_name;
         grpc_chttp2_setting_id setting_id;
         grpc_integer_options integer_options;
         bool availability[2] /* server, client */;
       } settings_map[] = {{GRPC_ARG_MAX_CONCURRENT_STREAMS,
                            GRPC_CHTTP2_SETTINGS_MAX_CONCURRENT_STREAMS,
                            {-1, 0, INT32_MAX},
                            {true, false}},
                           {GRPC_ARG_HTTP2_HPACK_TABLE_SIZE_DECODER,
                            GRPC_CHTTP2_SETTINGS_HEADER_TABLE_SIZE,
                            {-1, 0, INT32_MAX},
                            {true, true}},
                           {GRPC_ARG_MAX_METADATA_SIZE,
                            GRPC_CHTTP2_SETTINGS_MAX_HEADER_LIST_SIZE,
                            {-1, 0, INT32_MAX},
                            {true, true}},
                           {GRPC_ARG_HTTP2_MAX_FRAME_SIZE,
                            GRPC_CHTTP2_SETTINGS_MAX_FRAME_SIZE,
                            {-1, 16384, 16777215},
                            {true, true}},
                           {GRPC_ARG_HTTP2_ENABLE_TRUE_BINARY,
                            GRPC_CHTTP2_SETTINGS_GRPC_ALLOW_TRUE_BINARY_METADATA,
                            {1, 0, 1},
                            {true, true}},
                           {GRPC_ARG_HTTP2_STREAM_LOOKAHEAD_BYTES,
                            GRPC_CHTTP2_SETTINGS_INITIAL_WINDOW_SIZE,
                            {-1, 5, INT32_MAX},
                            {true, true}}};
       for (j = 0; j < static_cast<int> GPR_ARRAY_SIZE(settings_map); j++) {
         if (0 == strcmp(channel_args->args[i].key,
                         settings_map[j].channel_arg_name)) {
           if (!settings_map[j].availability[is_client]) {
             gpr_log(GPR_DEBUG, "%s is not available on %s",
                     settings_map[j].channel_arg_name,
                     is_client ? "clients" : "servers");
           } else {
             int value = grpc_channel_arg_get_integer(
                 &channel_args->args[i], settings_map[j].integer_options);
             if (value >= 0) {
               queue_setting_update(t, settings_map[j].setting_id,
                                    static_cast<uint32_t>(value));
             }
           }
           break;
         }
       }
     }
   }
   if (channelz_enabled) {
     t->channelz_socket =
         grpc_core::MakeRefCounted<grpc_core::channelz::SocketNode>(
             std::string(grpc_endpoint_get_local_address(t->ep)), t->peer_string,
             absl::StrFormat("%s %s", get_vtable()->name, t->peer_string),
             grpc_core::channelz::SocketNode::Security::GetFromChannelArgs(
                 channel_args));
   }
+  return enable_bdp;
 }
 
 static void init_transport_keepalive_settings(grpc_chttp2_transport* t) {
@@ -475,89 +494,96 @@ static void init_keepalive_pings_if_enabled(grpc_chttp2_transport* t) {
 grpc_chttp2_transport::grpc_chttp2_transport(
     const grpc_channel_args* channel_args, grpc_endpoint* ep, bool is_client)
     : refs(1, GRPC_TRACE_FLAG_ENABLED(grpc_trace_chttp2_refcount)
                   ? "chttp2_refcount"
                   : nullptr),
       ep(ep),
       peer_string(grpc_endpoint_get_peer(ep)),
       memory_owner(grpc_core::ResourceQuotaFromChannelArgs(channel_args)
                        ->memory_quota()
                        ->CreateMemoryOwner(absl::StrCat(
                            grpc_endpoint_get_peer(ep), ":client_transport"))),
       self_reservation(
           memory_owner.MakeReservation(sizeof(grpc_chttp2_transport))),
       combiner(grpc_combiner_create()),
       state_tracker(is_client ? "client_transport" : "server_transport",
                     GRPC_CHANNEL_READY),
       is_client(is_client),
       next_stream_id(is_client ? 1 : 2),
-      flow_control(peer_string.c_str(),
-                   grpc_channel_args_find_bool(channel_args,
-                                               GRPC_ARG_HTTP2_BDP_PROBE, true),
-                   &memory_owner),
       deframe_state(is_client ? GRPC_DTS_FH_0 : GRPC_DTS_CLIENT_PREFIX_0) {
   GPR_ASSERT(strlen(GRPC_CHTTP2_CLIENT_CONNECT_STRING) ==
              GRPC_CHTTP2_CLIENT_CONNECT_STRLEN);
   base.vtable = get_vtable();
   // 8 is a random stab in the dark as to a good initial size: it's small enough
   //   that it shouldn't waste memory for infrequently used connections, yet
   //   large enough that the exponential growth should happen nicely when it's
   //   needed.
   //   TODO(ctiller): tune this
   grpc_chttp2_stream_map_init(&stream_map, 8);
 
   grpc_slice_buffer_init(&read_buffer);
   grpc_slice_buffer_init(&outbuf);
   if (is_client) {
     grpc_slice_buffer_add(&outbuf, grpc_slice_from_copied_string(
                                        GRPC_CHTTP2_CLIENT_CONNECT_STRING));
   }
   grpc_slice_buffer_init(&qbuf);
   // copy in initial settings to all setting sets
   size_t i;
   int j;
   for (i = 0; i < GRPC_CHTTP2_NUM_SETTINGS; i++) {
     for (j = 0; j < GRPC_NUM_SETTING_SETS; j++) {
       settings[j][i] = grpc_chttp2_settings_parameters[i].default_value;
     }
   }
   grpc_chttp2_goaway_parser_init(&goaway_parser);
 
   // configure http2 the way we like it
   if (is_client) {
     queue_setting_update(this, GRPC_CHTTP2_SETTINGS_ENABLE_PUSH, 0);
     queue_setting_update(this, GRPC_CHTTP2_SETTINGS_MAX_CONCURRENT_STREAMS, 0);
   }
   queue_setting_update(this, GRPC_CHTTP2_SETTINGS_MAX_HEADER_LIST_SIZE,
                        DEFAULT_MAX_HEADER_LIST_SIZE);
   queue_setting_update(this,
                        GRPC_CHTTP2_SETTINGS_GRPC_ALLOW_TRUE_BINARY_METADATA, 1);
 
   configure_transport_ping_policy(this);
   init_transport_keepalive_settings(this);
 
-  if (channel_args != nullptr) {
-    read_channel_args(this, channel_args, is_client);
+  bool enable_bdp = true;
+  if (channel_args) {
+    enable_bdp = read_channel_args(this, channel_args, is_client);
+  }
+
+  static const bool kEnableFlowControl =
+      !GPR_GLOBAL_CONFIG_GET(grpc_experimental_disable_flow_control);
+  if (kEnableFlowControl) {
+    flow_control.Init<grpc_core::chttp2::TransportFlowControl>(this,
+                                                               enable_bdp);
+  } else {
+    flow_control.Init<grpc_core::chttp2::TransportFlowControlDisabled>(this);
+    enable_bdp = false;
   }
 
   // No pings allowed before receiving a header or data frame.
   ping_state.pings_before_data_required = 0;
   ping_state.is_delayed_ping_timer_set = false;
   ping_state.last_ping_sent_time = grpc_core::Timestamp::InfPast();
 
   ping_recv_state.last_ping_recv_time = grpc_core::Timestamp::InfPast();
   ping_recv_state.ping_strikes = 0;
 
   init_keepalive_pings_if_enabled(this);
 
-  if (flow_control.bdp_probe()) {
+  if (enable_bdp) {
     bdp_ping_blocked = true;
-    grpc_chttp2_act_on_flowctl_action(flow_control.PeriodicUpdate(), this,
+    grpc_chttp2_act_on_flowctl_action(flow_control->PeriodicUpdate(), this,
                                       nullptr);
   }
 
   grpc_chttp2_initiate_write(this, GRPC_CHTTP2_INITIATE_WRITE_INITIAL_WRITE);
   post_benign_reclaimer(this);
   if (grpc_core::test_only_init_callback != nullptr) {
     grpc_core::test_only_init_callback();
   }
 }
@@ -671,56 +697,69 @@ grpc_chttp2_stream::Reffer::Reffer(grpc_chttp2_stream* s) {
 grpc_chttp2_stream::grpc_chttp2_stream(grpc_chttp2_transport* t,
                                        grpc_stream_refcount* refcount,
                                        const void* server_data,
                                        grpc_core::Arena* arena)
     : t(t),
       refcount(refcount),
       reffer(this),
       initial_metadata_buffer(arena),
-      trailing_metadata_buffer(arena),
-      flow_control(&t->flow_control) {
+      trailing_metadata_buffer(arena) {
   if (server_data) {
     id = static_cast<uint32_t>(reinterpret_cast<uintptr_t>(server_data));
     *t->accepting_stream = this;
     grpc_chttp2_stream_map_add(&t->stream_map, id, this);
     post_destructive_reclaimer(t);
   }
+  if (t->flow_control->flow_control_enabled()) {
+    flow_control.Init<grpc_core::chttp2::StreamFlowControl>(
+        static_cast<grpc_core::chttp2::TransportFlowControl*>(
+            t->flow_control.get()),
+        this);
+  } else {
+    flow_control.Init<grpc_core::chttp2::StreamFlowControlDisabled>();
+  }
 
   grpc_slice_buffer_init(&frame_storage);
+  grpc_slice_buffer_init(&unprocessed_incoming_frames_buffer);
   grpc_slice_buffer_init(&flow_controlled_buffer);
+  GRPC_CLOSURE_INIT(&reset_byte_stream, ::reset_byte_stream, this, nullptr);
 }
 
 grpc_chttp2_stream::~grpc_chttp2_stream() {
   if (t->channelz_socket != nullptr) {
     if ((t->is_client && eos_received) || (!t->is_client && eos_sent)) {
       t->channelz_socket->RecordStreamSucceeded();
     } else {
       t->channelz_socket->RecordStreamFailed();
     }
   }
 
   GPR_ASSERT((write_closed && read_closed) || id == 0);
   if (id != 0) {
     GPR_ASSERT(grpc_chttp2_stream_map_find(&t->stream_map, id) == nullptr);
   }
 
+  grpc_slice_buffer_destroy_internal(&unprocessed_incoming_frames_buffer);
   grpc_slice_buffer_destroy_internal(&frame_storage);
 
   for (int i = 0; i < STREAM_LIST_COUNT; i++) {
     if (GPR_UNLIKELY(included.is_set(i))) {
       gpr_log(GPR_ERROR, "%s stream %d still included in list %d",
               t->is_client ? "client" : "server", id, i);
       abort();
     }
   }
 
   GPR_ASSERT(send_initial_metadata_finished == nullptr);
+  GPR_ASSERT(fetching_send_message == nullptr);
   GPR_ASSERT(send_trailing_metadata_finished == nullptr);
   GPR_ASSERT(recv_initial_metadata_ready == nullptr);
   GPR_ASSERT(recv_message_ready == nullptr);
   GPR_ASSERT(recv_trailing_metadata_finished == nullptr);
   grpc_slice_buffer_destroy_internal(&flow_controlled_buffer);
   GRPC_ERROR_UNREF(read_closed_error);
   GRPC_ERROR_UNREF(write_closed_error);
+  GRPC_ERROR_UNREF(byte_stream_error);
+  flow_control.Destroy();
   GRPC_CHTTP2_UNREF_TRANSPORT(t, "stream");
   grpc_core::ExecCtx::Run(DEBUG_LOCATION, destroy_stream_arg, GRPC_ERROR_NONE);
 }
@@ -1286,6 +1325,94 @@ static bool contains_non_ok_status(grpc_metadata_batch* batch) {
          GRPC_STATUS_OK;
 }
 
+static void maybe_become_writable_due_to_send_msg(grpc_chttp2_transport* t,
+                                                  grpc_chttp2_stream* s) {
+  if (s->id != 0 && (!s->write_buffering ||
+                     s->flow_controlled_buffer.length > t->write_buffer_size)) {
+    grpc_chttp2_mark_stream_writable(t, s);
+    grpc_chttp2_initiate_write(t, GRPC_CHTTP2_INITIATE_WRITE_SEND_MESSAGE);
+  }
+}
+
+static void add_fetched_slice_locked(grpc_chttp2_transport* t,
+                                     grpc_chttp2_stream* s) {
+  s->fetched_send_message_length +=
+      static_cast<uint32_t> GRPC_SLICE_LENGTH(s->fetching_slice);
+  grpc_slice_buffer_add(&s->flow_controlled_buffer, s->fetching_slice);
+  maybe_become_writable_due_to_send_msg(t, s);
+}
+
+static void continue_fetching_send_locked(grpc_chttp2_transport* t,
+                                          grpc_chttp2_stream* s) {
+  for (;;) {
+    if (s->fetching_send_message == nullptr) {
+      // Stream was cancelled before message fetch completed
+      abort(); /* TODO(ctiller): what cleanup here? */
+    }
+    if (s->fetched_send_message_length == s->fetching_send_message->length()) {
+      int64_t notify_offset = s->next_message_end_offset;
+      if (notify_offset <= s->flow_controlled_bytes_written) {
+        grpc_chttp2_complete_closure_step(
+            t, s, &s->fetching_send_message_finished, GRPC_ERROR_NONE,
+            "fetching_send_message_finished");
+      } else {
+        grpc_chttp2_write_cb* cb = t->write_cb_pool;
+        if (cb == nullptr) {
+          cb = static_cast<grpc_chttp2_write_cb*>(gpr_malloc(sizeof(*cb)));
+        } else {
+          t->write_cb_pool = cb->next;
+        }
+        cb->call_at_byte = notify_offset;
+        cb->closure = s->fetching_send_message_finished;
+        s->fetching_send_message_finished = nullptr;
+        grpc_chttp2_write_cb** list =
+            s->fetching_send_message->flags() & GRPC_WRITE_THROUGH
+                ? &s->on_write_finished_cbs
+                : &s->on_flow_controlled_cbs;
+        cb->next = *list;
+        *list = cb;
+      }
+      s->fetching_send_message.reset();
+      return; /* early out */
+    } else if (s->fetching_send_message->Next(
+                   UINT32_MAX, GRPC_CLOSURE_INIT(&s->complete_fetch_locked,
+                                                 ::complete_fetch, s,
+                                                 grpc_schedule_on_exec_ctx))) {
+      grpc_error_handle error =
+          s->fetching_send_message->Pull(&s->fetching_slice);
+      if (error != GRPC_ERROR_NONE) {
+        s->fetching_send_message.reset();
+        grpc_chttp2_cancel_stream(t, s, error);
+      } else {
+        add_fetched_slice_locked(t, s);
+      }
+    }
+  }
+}
+
+static void complete_fetch(void* gs, grpc_error_handle error) {
+  grpc_chttp2_stream* s = static_cast<grpc_chttp2_stream*>(gs);
+  s->t->combiner->Run(GRPC_CLOSURE_INIT(&s->complete_fetch_locked,
+                                        ::complete_fetch_locked, s, nullptr),
+                      GRPC_ERROR_REF(error));
+}
+
+static void complete_fetch_locked(void* gs, grpc_error_handle error) {
+  grpc_chttp2_stream* s = static_cast<grpc_chttp2_stream*>(gs);
+  grpc_chttp2_transport* t = s->t;
+  if (error == GRPC_ERROR_NONE) {
+    error = s->fetching_send_message->Pull(&s->fetching_slice);
+    if (error == GRPC_ERROR_NONE) {
+      add_fetched_slice_locked(t, s);
+      continue_fetching_send_locked(t, s);
+    }
+  }
+  if (error != GRPC_ERROR_NONE) {
+    s->fetching_send_message.reset();
+    grpc_chttp2_cancel_stream(t, s, error);
+  }
+}
+
 static void log_metadata(const grpc_metadata_batch* md_batch, uint32_t id,
                          bool is_client, bool is_initial) {
   const std::string prefix = absl::StrCat(
@@ -1298,262 +1425,245 @@ static void log_metadata(const grpc_metadata_batch* md_batch, uint32_t id,
 static void perform_stream_op_locked(void* stream_op,
                                      grpc_error_handle /*error_ignored*/) {
   GPR_TIMER_SCOPE("perform_stream_op_locked", 0);
 
   grpc_transport_stream_op_batch* op =
       static_cast<grpc_transport_stream_op_batch*>(stream_op);
   grpc_chttp2_stream* s =
       static_cast<grpc_chttp2_stream*>(op->handler_private.extra_arg);
   grpc_transport_stream_op_batch_payload* op_payload = op->payload;
   grpc_chttp2_transport* t = s->t;
 
   GRPC_STATS_INC_HTTP2_OP_BATCHES();
 
   s->context = op->payload->context;
   s->traced = op->is_traced;
   if (GRPC_TRACE_FLAG_ENABLED(grpc_http_trace)) {
     gpr_log(GPR_INFO,
             "perform_stream_op_locked[s=%p; op=%p]: %s; on_complete = %p", s,
             op, grpc_transport_stream_op_batch_string(op).c_str(),
             op->on_complete);
     if (op->send_initial_metadata) {
       log_metadata(op_payload->send_initial_metadata.send_initial_metadata,
                    s->id, t->is_client, true);
     }
     if (op->send_trailing_metadata) {
       log_metadata(op_payload->send_trailing_metadata.send_trailing_metadata,
                    s->id, t->is_client, false);
     }
   }
 
   grpc_closure* on_complete = op->on_complete;
   // on_complete will be null if and only if there are no send ops in the batch.
   if (on_complete != nullptr) {
     // This batch has send ops. Use final_data as a barrier until enqueue time;
     // the initial counter is dropped at the end of this function.
     on_complete->next_data.scratch = CLOSURE_BARRIER_FIRST_REF_BIT;
     on_complete->error_data.error = 0;
   }
 
   if (op->cancel_stream) {
     GRPC_STATS_INC_HTTP2_OP_CANCEL();
     grpc_chttp2_cancel_stream(t, s, op_payload->cancel_stream.cancel_error);
   }
 
   if (op->send_initial_metadata) {
     if (t->is_client && t->channelz_socket != nullptr) {
       t->channelz_socket->RecordStreamStartedFromLocal();
     }
     GRPC_STATS_INC_HTTP2_OP_SEND_INITIAL_METADATA();
     GPR_ASSERT(s->send_initial_metadata_finished == nullptr);
     on_complete->next_data.scratch |= CLOSURE_BARRIER_MAY_COVER_WRITE;
 
     s->send_initial_metadata_finished = add_closure_barrier(on_complete);
     s->send_initial_metadata =
         op_payload->send_initial_metadata.send_initial_metadata;
     if (t->is_client) {
       s->deadline = std::min(
           s->deadline,
           s->send_initial_metadata->get(grpc_core::GrpcTimeoutMetadata())
               .value_or(grpc_core::Timestamp::InfFuture()));
     }
     if (contains_non_ok_status(s->send_initial_metadata)) {
       s->seen_error = true;
     }
     if (!s->write_closed) {
       if (t->is_client) {
         if (t->closed_with_error == GRPC_ERROR_NONE) {
           GPR_ASSERT(s->id == 0);
           grpc_chttp2_list_add_waiting_for_concurrency(t, s);
           maybe_start_some_streams(t);
         } else {
           s->trailing_metadata_buffer.Set(
               grpc_core::GrpcStreamNetworkState(),
               grpc_core::GrpcStreamNetworkState::kNotSentOnWire);
           grpc_chttp2_cancel_stream(
               t, s,
               grpc_error_set_int(
                   GRPC_ERROR_CREATE_REFERENCING_FROM_STATIC_STRING(
                       "Transport closed", &t->closed_with_error, 1),
                   GRPC_ERROR_INT_GRPC_STATUS, GRPC_STATUS_UNAVAILABLE));
         }
       } else {
         GPR_ASSERT(s->id != 0);
         grpc_chttp2_mark_stream_writable(t, s);
         if (!(op->send_message &&
-              (op->payload->send_message.flags & GRPC_WRITE_BUFFER_HINT))) {
+              (op->payload->send_message.send_message->flags() &
+               GRPC_WRITE_BUFFER_HINT))) {
           grpc_chttp2_initiate_write(
               t, GRPC_CHTTP2_INITIATE_WRITE_SEND_INITIAL_METADATA);
         }
       }
     } else {
       s->send_initial_metadata = nullptr;
       grpc_chttp2_complete_closure_step(
           t, s, &s->send_initial_metadata_finished,
           GRPC_ERROR_CREATE_REFERENCING_FROM_STATIC_STRING(
               "Attempt to send initial metadata after stream was closed",
               &s->write_closed_error, 1),
           "send_initial_metadata_finished");
     }
     if (op_payload->send_initial_metadata.peer_string != nullptr) {
       gpr_atm_rel_store(op_payload->send_initial_metadata.peer_string,
                         (gpr_atm)t->peer_string.c_str());
     }
   }
 
   if (op->send_message) {
     GRPC_STATS_INC_HTTP2_OP_SEND_MESSAGE();
     t->num_messages_in_next_write++;
     GRPC_STATS_INC_HTTP2_SEND_MESSAGE_SIZE(
-        op->payload->send_message.send_message->Length());
+        op->payload->send_message.send_message->length());
     on_complete->next_data.scratch |= CLOSURE_BARRIER_MAY_COVER_WRITE;
-    s->send_message_finished = add_closure_barrier(op->on_complete);
-    const uint32_t flags = op_payload->send_message.flags;
+    s->fetching_send_message_finished = add_closure_barrier(op->on_complete);
     if (s->write_closed) {
       op->payload->send_message.stream_write_closed = true;
       // We should NOT return an error here, so as to avoid a cancel OP being
       // started. The surface layer will notice that the stream has been closed
       // for writes and fail the send message op.
-      grpc_chttp2_complete_closure_step(t, s, &s->send_message_finished,
-                                        GRPC_ERROR_NONE,
-                                        "fetching_send_message_finished");
+      op->payload->send_message.send_message.reset();
+      grpc_chttp2_complete_closure_step(
+          t, s, &s->fetching_send_message_finished, GRPC_ERROR_NONE,
+          "fetching_send_message_finished");
     } else {
+      GPR_ASSERT(s->fetching_send_message == nullptr);
       uint8_t* frame_hdr = grpc_slice_buffer_tiny_add(
           &s->flow_controlled_buffer, GRPC_HEADER_SIZE_IN_BYTES);
+      uint32_t flags = op_payload->send_message.send_message->flags();
       frame_hdr[0] = (flags & GRPC_WRITE_INTERNAL_COMPRESS) != 0;
-      size_t len = op_payload->send_message.send_message->Length();
+      size_t len = op_payload->send_message.send_message->length();
       frame_hdr[1] = static_cast<uint8_t>(len >> 24);
       frame_hdr[2] = static_cast<uint8_t>(len >> 16);
       frame_hdr[3] = static_cast<uint8_t>(len >> 8);
       frame_hdr[4] = static_cast<uint8_t>(len);
-
+      s->fetching_send_message =
+          std::move(op_payload->send_message.send_message);
+      s->fetched_send_message_length = 0;
       s->next_message_end_offset =
           s->flow_controlled_bytes_written +
           static_cast<int64_t>(s->flow_controlled_buffer.length) +
           static_cast<int64_t>(len);
       if (flags & GRPC_WRITE_BUFFER_HINT) {
         s->next_message_end_offset -= t->write_buffer_size;
         s->write_buffering = true;
       } else {
         s->write_buffering = false;
       }
-
-      grpc_slice* const slices =
-          op_payload->send_message.send_message->c_slice_buffer()->slices;
-      grpc_slice* const end =
-          slices + op_payload->send_message.send_message->Count();
-      for (grpc_slice* slice = slices; slice != end; slice++) {
-        grpc_slice_buffer_add(&s->flow_controlled_buffer,
-                              grpc_slice_ref_internal(*slice));
-      }
-
-      int64_t notify_offset = s->next_message_end_offset;
-      if (notify_offset <= s->flow_controlled_bytes_written) {
-        grpc_chttp2_complete_closure_step(t, s, &s->send_message_finished,
-                                          GRPC_ERROR_NONE,
-                                          "fetching_send_message_finished");
-      } else {
-        grpc_chttp2_write_cb* cb = t->write_cb_pool;
-        if (cb == nullptr) {
-          cb = static_cast<grpc_chttp2_write_cb*>(gpr_malloc(sizeof(*cb)));
-        } else {
-          t->write_cb_pool = cb->next;
-        }
-        cb->call_at_byte = notify_offset;
-        cb->closure = s->send_message_finished;
-        s->send_message_finished = nullptr;
-        grpc_chttp2_write_cb** list = flags & GRPC_WRITE_THROUGH
-                                          ? &s->on_write_finished_cbs
-                                          : &s->on_flow_controlled_cbs;
-        cb->next = *list;
-        *list = cb;
-      }
-
-      if (s->id != 0 &&
-          (!s->write_buffering ||
-           s->flow_controlled_buffer.length > t->write_buffer_size)) {
-        grpc_chttp2_mark_stream_writable(t, s);
-        grpc_chttp2_initiate_write(t, GRPC_CHTTP2_INITIATE_WRITE_SEND_MESSAGE);
-      }
+      continue_fetching_send_locked(t, s);
+      maybe_become_writable_due_to_send_msg(t, s);
     }
   }
 
   if (op->send_trailing_metadata) {
     GRPC_STATS_INC_HTTP2_OP_SEND_TRAILING_METADATA();
     GPR_ASSERT(s->send_trailing_metadata_finished == nullptr);
     on_complete->next_data.scratch |= CLOSURE_BARRIER_MAY_COVER_WRITE;
     s->send_trailing_metadata_finished = add_closure_barrier(on_complete);
     s->send_trailing_metadata =
         op_payload->send_trailing_metadata.send_trailing_metadata;
     s->sent_trailing_metadata_op = op_payload->send_trailing_metadata.sent;
     s->write_buffering = false;
     if (contains_non_ok_status(s->send_trailing_metadata)) {
       s->seen_error = true;
     }
     if (s->write_closed) {
       s->send_trailing_metadata = nullptr;
       s->sent_trailing_metadata_op = nullptr;
       grpc_chttp2_complete_closure_step(
           t, s, &s->send_trailing_metadata_finished,
           op->payload->send_trailing_metadata.send_trailing_metadata->empty()
               ? GRPC_ERROR_NONE
               : GRPC_ERROR_CREATE_FROM_STATIC_STRING(
                     "Attempt to send trailing metadata after "
                     "stream was closed"),
           "send_trailing_metadata_finished");
     } else if (s->id != 0) {
       // TODO(ctiller): check if there's flow control for any outstanding
       //   bytes before going writable
       grpc_chttp2_mark_stream_writable(t, s);
       grpc_chttp2_initiate_write(
           t, GRPC_CHTTP2_INITIATE_WRITE_SEND_TRAILING_METADATA);
     }
   }
 
   if (op->recv_initial_metadata) {
     GRPC_STATS_INC_HTTP2_OP_RECV_INITIAL_METADATA();
     GPR_ASSERT(s->recv_initial_metadata_ready == nullptr);
     s->recv_initial_metadata_ready =
         op_payload->recv_initial_metadata.recv_initial_metadata_ready;
     s->recv_initial_metadata =
         op_payload->recv_initial_metadata.recv_initial_metadata;
     s->trailing_metadata_available =
         op_payload->recv_initial_metadata.trailing_metadata_available;
     if (op_payload->recv_initial_metadata.peer_string != nullptr) {
       gpr_atm_rel_store(op_payload->recv_initial_metadata.peer_string,
                         (gpr_atm)t->peer_string.c_str());
     }
     grpc_chttp2_maybe_complete_recv_initial_metadata(t, s);
   }
 
   if (op->recv_message) {
     GRPC_STATS_INC_HTTP2_OP_RECV_MESSAGE();
+    size_t before = 0;
     GPR_ASSERT(s->recv_message_ready == nullptr);
+    GPR_ASSERT(!s->pending_byte_stream);
     s->recv_message_ready = op_payload->recv_message.recv_message_ready;
     s->recv_message = op_payload->recv_message.recv_message;
-    s->recv_message->emplace();
-    s->recv_message_flags = op_payload->recv_message.flags;
     s->call_failed_before_recv_message =
         op_payload->recv_message.call_failed_before_recv_message;
-    grpc_chttp2_maybe_complete_recv_trailing_metadata(t, s);
+    if (s->id != 0) {
+      if (!s->read_closed) {
+        before = s->frame_storage.length +
+                 s->unprocessed_incoming_frames_buffer.length;
+      }
+    }
+    grpc_chttp2_maybe_complete_recv_message(t, s);
+    if (s->id != 0) {
+      if (!s->read_closed && s->frame_storage.length == 0) {
+        size_t after = s->unprocessed_incoming_frames_buffer_cached_length;
+        s->flow_control->IncomingByteStreamUpdate(GRPC_HEADER_SIZE_IN_BYTES,
+                                                  before - after);
+        grpc_chttp2_act_on_flowctl_action(s->flow_control->MakeAction(), t, s);
+      }
+    }
   }
 
   if (op->recv_trailing_metadata) {
     GRPC_STATS_INC_HTTP2_OP_RECV_TRAILING_METADATA();
     GPR_ASSERT(s->collecting_stats == nullptr);
     s->collecting_stats = op_payload->recv_trailing_metadata.collect_stats;
     GPR_ASSERT(s->recv_trailing_metadata_finished == nullptr);
     s->recv_trailing_metadata_finished =
         op_payload->recv_trailing_metadata.recv_trailing_metadata_ready;
     s->recv_trailing_metadata =
         op_payload->recv_trailing_metadata.recv_trailing_metadata;
     s->final_metadata_requested = true;
     grpc_chttp2_maybe_complete_recv_trailing_metadata(t, s);
   }
 
   if (on_complete != nullptr) {
     grpc_chttp2_complete_closure_step(t, s, &on_complete, GRPC_ERROR_NONE,
                                       "op->on_complete");
   }
 
   GRPC_CHTTP2_STREAM_UNREF(s, "perform_stream_op");
 }
@@ -1905,83 +2015,76 @@ static void perform_transport_op(grpc_transport* gt, grpc_transport_op* op) {
 void grpc_chttp2_maybe_complete_recv_initial_metadata(grpc_chttp2_transport* t,
                                                       grpc_chttp2_stream* s) {
   if (s->recv_initial_metadata_ready != nullptr &&
       s->published_metadata[0] != GRPC_METADATA_NOT_PUBLISHED) {
     if (s->seen_error) {
       grpc_slice_buffer_reset_and_unref_internal(&s->frame_storage);
+      if (!s->pending_byte_stream) {
+        grpc_slice_buffer_reset_and_unref_internal(
+            &s->unprocessed_incoming_frames_buffer);
+      }
     }
     *s->recv_initial_metadata = std::move(s->initial_metadata_buffer);
     s->recv_initial_metadata->Set(grpc_core::PeerString(), t->peer_string);
     // If we didn't receive initial metadata from the wire and instead faked a
     // status (due to stream cancellations for example), let upper layers know
     // that trailing metadata is immediately available.
     if (s->trailing_metadata_available != nullptr &&
         s->published_metadata[0] != GRPC_METADATA_PUBLISHED_FROM_WIRE &&
         s->published_metadata[1] == GRPC_METADATA_SYNTHESIZED_FROM_FAKE) {
       *s->trailing_metadata_available = true;
       s->trailing_metadata_available = nullptr;
     }
     null_then_sched_closure(&s->recv_initial_metadata_ready);
   }
 }
 
-void grpc_chttp2_maybe_complete_recv_message(grpc_chttp2_transport* t,
+void grpc_chttp2_maybe_complete_recv_message(grpc_chttp2_transport* /*t*/,
                                              grpc_chttp2_stream* s) {
   grpc_error_handle error = GRPC_ERROR_NONE;
   if (s->recv_message_ready != nullptr) {
+    *s->recv_message = nullptr;
     if (s->final_metadata_requested && s->seen_error) {
       grpc_slice_buffer_reset_and_unref_internal(&s->frame_storage);
-      s->recv_message->reset();
-    } else {
-      if (s->frame_storage.length != 0) {
-        while (true) {
-          GPR_ASSERT(s->frame_storage.length > 0);
-          uint32_t min_progress_size;
-          auto r = grpc_deframe_unprocessed_incoming_frames(
-              s, &min_progress_size, &**s->recv_message, s->recv_message_flags);
-          if (absl::holds_alternative<grpc_core::Pending>(r)) {
-            if (s->read_closed) {
-              grpc_slice_buffer_reset_and_unref_internal(&s->frame_storage);
-              s->recv_message->reset();
-              break;
-            } else {
-              s->flow_control.UpdateProgress(min_progress_size);
-              grpc_chttp2_act_on_flowctl_action(s->flow_control.MakeAction(), t,
-                                                s);
-              return;
-            }
-          } else {
-            error = absl::get<grpc_error_handle>(r);
-            if (error != GRPC_ERROR_NONE) {
-              s->seen_error = true;
-              grpc_slice_buffer_reset_and_unref_internal(&s->frame_storage);
-              break;
-            } else {
-              if (t->channelz_socket != nullptr) {
-                t->channelz_socket->RecordMessageReceived();
-              }
-              break;
-            }
-          }
+      if (!s->pending_byte_stream) {
+        grpc_slice_buffer_reset_and_unref_internal(
+            &s->unprocessed_incoming_frames_buffer);
+      }
+    }
+    if (!s->pending_byte_stream) {
+      while (s->unprocessed_incoming_frames_buffer.length > 0 ||
+             s->frame_storage.length > 0) {
+        if (s->unprocessed_incoming_frames_buffer.length == 0) {
+          grpc_slice_buffer_swap(&s->unprocessed_incoming_frames_buffer,
+                                 &s->frame_storage);
+        }
+        error = grpc_deframe_unprocessed_incoming_frames(
+            &s->data_parser, s, &s->unprocessed_incoming_frames_buffer, nullptr,
+            s->recv_message);
+        if (error != GRPC_ERROR_NONE) {
+          s->seen_error = true;
+          grpc_slice_buffer_reset_and_unref_internal(&s->frame_storage);
+          grpc_slice_buffer_reset_and_unref_internal(
+              &s->unprocessed_incoming_frames_buffer);
+          break;
+        } else if (*s->recv_message != nullptr) {
+          break;
         }
-      } else if (s->read_closed) {
-        s->recv_message->reset();
-      } else {
-        s->flow_control.UpdateProgress(GRPC_HEADER_SIZE_IN_BYTES);
-        grpc_chttp2_act_on_flowctl_action(s->flow_control.MakeAction(), t, s);
-        return;
       }
     }
     // save the length of the buffer before handing control back to application
     // threads. Needed to support correct flow control bookkeeping
-    if (error == GRPC_ERROR_NONE && s->recv_message->has_value()) {
+    s->unprocessed_incoming_frames_buffer_cached_length =
+        s->unprocessed_incoming_frames_buffer.length;
+    if (error == GRPC_ERROR_NONE && *s->recv_message != nullptr) {
       null_then_sched_closure(&s->recv_message_ready);
     } else if (s->published_metadata[1] != GRPC_METADATA_NOT_PUBLISHED) {
+      *s->recv_message = nullptr;
       if (s->call_failed_before_recv_message != nullptr) {
         *s->call_failed_before_recv_message =
             (s->published_metadata[1] != GRPC_METADATA_PUBLISHED_AT_CLOSE);
       }
       null_then_sched_closure(&s->recv_message_ready);
     }
     GRPC_ERROR_UNREF(error);
   }
 }
@@ -1989,18 +2092,36 @@ void grpc_chttp2_maybe_complete_recv_message(grpc_chttp2_transport* t,
 void grpc_chttp2_maybe_complete_recv_trailing_metadata(grpc_chttp2_transport* t,
                                                        grpc_chttp2_stream* s) {
   grpc_chttp2_maybe_complete_recv_message(t, s);
   if (s->recv_trailing_metadata_finished != nullptr && s->read_closed &&
       s->write_closed) {
     if (s->seen_error || !t->is_client) {
       grpc_slice_buffer_reset_and_unref_internal(&s->frame_storage);
+      if (!s->pending_byte_stream) {
+        grpc_slice_buffer_reset_and_unref_internal(
+            &s->unprocessed_incoming_frames_buffer);
+      }
     }
-    if (s->read_closed && s->frame_storage.length == 0 &&
+    bool pending_data = s->pending_byte_stream ||
+                        s->unprocessed_incoming_frames_buffer.length > 0;
+    if (s->read_closed && s->frame_storage.length > 0 && !pending_data &&
+        !s->seen_error && s->recv_trailing_metadata_finished != nullptr) {
+      // Maybe some SYNC_FLUSH data is left in frame_storage. Consume them and
+      // maybe decompress the next 5 bytes in the stream.
+      grpc_slice_buffer_move_first(
+          &s->frame_storage,
+          std::min(s->frame_storage.length, size_t(GRPC_HEADER_SIZE_IN_BYTES)),
+          &s->unprocessed_incoming_frames_buffer);
+      if (s->unprocessed_incoming_frames_buffer.length > 0) {
+        pending_data = true;
+      }
+    }
+    if (s->read_closed && s->frame_storage.length == 0 && !pending_data &&
         s->recv_trailing_metadata_finished != nullptr) {
       grpc_transport_move_stats(&s->stats, s->collecting_stats);
       s->collecting_stats = nullptr;
       *s->recv_trailing_metadata = std::move(s->trailing_metadata_buffer);
       s->recv_trailing_metadata->Set(grpc_core::PeerString(), t->peer_string);
       null_then_sched_closure(&s->recv_trailing_metadata_finished);
     }
   }
 }
@@ -2008,28 +2129,42 @@ void grpc_chttp2_maybe_complete_recv_trailing_metadata(grpc_chttp2_transport* t,
 static void remove_stream(grpc_chttp2_transport* t, uint32_t id,
                           grpc_error_handle error) {
   grpc_chttp2_stream* s = static_cast<grpc_chttp2_stream*>(
       grpc_chttp2_stream_map_delete(&t->stream_map, id));
   GPR_DEBUG_ASSERT(s);
   if (t->incoming_stream == s) {
     t->incoming_stream = nullptr;
     grpc_chttp2_parsing_become_skip_parser(t);
   }
+  if (s->pending_byte_stream) {
+    if (s->on_next != nullptr) {
+      grpc_core::Chttp2IncomingByteStream* bs = s->data_parser.parsing_frame;
+      if (error == GRPC_ERROR_NONE) {
+        error = GRPC_ERROR_CREATE_FROM_STATIC_STRING("Truncated message");
+      }
+      bs->PublishError(error);
+      bs->Unref();
+      s->data_parser.parsing_frame = nullptr;
+    } else {
+      GRPC_ERROR_UNREF(s->byte_stream_error);
+      s->byte_stream_error = GRPC_ERROR_REF(error);
+    }
+  }
 
   if (grpc_chttp2_stream_map_size(&t->stream_map) == 0) {
     post_benign_reclaimer(t);
     if (t->sent_goaway_state == GRPC_CHTTP2_FINAL_GOAWAY_SENT) {
       close_transport_locked(
           t, GRPC_ERROR_CREATE_REFERENCING_FROM_STATIC_STRING(
                  "Last stream closed after sending GOAWAY", &error, 1));
     }
   }
   if (grpc_chttp2_list_remove_writable_stream(t, s)) {
     GRPC_CHTTP2_STREAM_UNREF(s, "chttp2_writing:remove_stream");
   }
   grpc_chttp2_list_remove_stalled_by_stream(t, s);
   grpc_chttp2_list_remove_stalled_by_transport(t, s);
 
   GRPC_ERROR_UNREF(error);
 
   maybe_start_some_streams(t);
 }
@@ -2134,22 +2269,23 @@ static void flush_write_list(grpc_chttp2_transport* t, grpc_chttp2_stream* s,
 void grpc_chttp2_fail_pending_writes(grpc_chttp2_transport* t,
                                      grpc_chttp2_stream* s,
                                      grpc_error_handle error) {
   error =
       removal_error(error, s, "Pending writes failed due to stream closure");
   s->send_initial_metadata = nullptr;
   grpc_chttp2_complete_closure_step(t, s, &s->send_initial_metadata_finished,
                                     GRPC_ERROR_REF(error),
                                     "send_initial_metadata_finished");
 
   s->send_trailing_metadata = nullptr;
   s->sent_trailing_metadata_op = nullptr;
   grpc_chttp2_complete_closure_step(t, s, &s->send_trailing_metadata_finished,
                                     GRPC_ERROR_REF(error),
                                     "send_trailing_metadata_finished");
 
-  grpc_chttp2_complete_closure_step(t, s, &s->send_message_finished,
+  s->fetching_send_message.reset();
+  grpc_chttp2_complete_closure_step(t, s, &s->fetching_send_message_finished,
                                     GRPC_ERROR_REF(error),
                                     "fetching_send_message_finished");
   flush_write_list(t, s, &s->on_write_finished_cbs, GRPC_ERROR_REF(error));
   flush_write_list(t, s, &s->on_flow_controlled_cbs, error);
 }
@@ -2416,23 +2552,20 @@ static void WithUrgency(grpc_chttp2_transport* t,
 void grpc_chttp2_act_on_flowctl_action(
     const grpc_core::chttp2::FlowControlAction& action,
     grpc_chttp2_transport* t, grpc_chttp2_stream* s) {
   WithUrgency(t, action.send_stream_update(),
-              GRPC_CHTTP2_INITIATE_WRITE_STREAM_FLOW_CONTROL, [t, s]() {
-                if (s->id != 0) {
-                  grpc_chttp2_mark_stream_writable(t, s);
-                }
-              });
+              GRPC_CHTTP2_INITIATE_WRITE_STREAM_FLOW_CONTROL,
+              [t, s]() { grpc_chttp2_mark_stream_writable(t, s); });
   WithUrgency(t, action.send_transport_update(),
               GRPC_CHTTP2_INITIATE_WRITE_TRANSPORT_FLOW_CONTROL, []() {});
   WithUrgency(t, action.send_initial_window_update(),
               GRPC_CHTTP2_INITIATE_WRITE_SEND_SETTINGS, [t, &action]() {
                 queue_setting_update(t,
                                      GRPC_CHTTP2_SETTINGS_INITIAL_WINDOW_SIZE,
                                      action.initial_window_size());
               });
   WithUrgency(t, action.send_max_frame_size_update(),
               GRPC_CHTTP2_INITIATE_WRITE_SEND_SETTINGS, [t, &action]() {
                 queue_setting_update(t, GRPC_CHTTP2_SETTINGS_MAX_FRAME_SIZE,
                                      action.max_frame_size());
               });
 }
@@ -2566,21 +2699,21 @@ static void read_action_locked(void* tp, grpc_error_handle error) {
 static void continue_read_action_locked(grpc_chttp2_transport* t) {
   const bool urgent = t->goaway_error != GRPC_ERROR_NONE;
   GRPC_CLOSURE_INIT(&t->read_action_locked, read_action, t,
                     grpc_schedule_on_exec_ctx);
   grpc_endpoint_read(t->ep, &t->read_buffer, &t->read_action_locked, urgent,
                      /*min_progress_size=*/1);
-  grpc_chttp2_act_on_flowctl_action(t->flow_control.MakeAction(), t, nullptr);
+  grpc_chttp2_act_on_flowctl_action(t->flow_control->MakeAction(), t, nullptr);
 }
 
 // t is reffed prior to calling the first time, and once the callback chain
 // that kicks off finishes, it's unreffed
 void schedule_bdp_ping_locked(grpc_chttp2_transport* t) {
-  t->flow_control.bdp_estimator()->SchedulePing();
+  t->flow_control->bdp_estimator()->SchedulePing();
   send_ping_locked(
       t,
       GRPC_CLOSURE_INIT(&t->start_bdp_ping_locked, start_bdp_ping, t,
                         grpc_schedule_on_exec_ctx),
       GRPC_CLOSURE_INIT(&t->finish_bdp_ping_locked, finish_bdp_ping, t,
                         grpc_schedule_on_exec_ctx));
   grpc_chttp2_initiate_write(t, GRPC_CHTTP2_INITIATE_WRITE_BDP_PING);
 }
@@ -2595,17 +2728,17 @@ static void start_bdp_ping(void* tp, grpc_error_handle error) {
 static void start_bdp_ping_locked(void* tp, grpc_error_handle error) {
   grpc_chttp2_transport* t = static_cast<grpc_chttp2_transport*>(tp);
   if (GRPC_TRACE_FLAG_ENABLED(grpc_http_trace)) {
     gpr_log(GPR_INFO, "%s: Start BDP ping err=%s", t->peer_string.c_str(),
             grpc_error_std_string(error).c_str());
   }
   if (error != GRPC_ERROR_NONE || t->closed_with_error != GRPC_ERROR_NONE) {
     return;
   }
   // Reset the keepalive ping timer
   if (t->keepalive_state == GRPC_CHTTP2_KEEPALIVE_STATE_WAITING) {
     grpc_timer_cancel(&t->keepalive_ping_timer);
   }
-  t->flow_control.bdp_estimator()->StartPing();
+  t->flow_control->bdp_estimator()->StartPing();
   t->bdp_ping_started = true;
 }
 
@@ -2619,30 +2752,30 @@ static void finish_bdp_ping(void* tp, grpc_error_handle error) {
 static void finish_bdp_ping_locked(void* tp, grpc_error_handle error) {
   grpc_chttp2_transport* t = static_cast<grpc_chttp2_transport*>(tp);
   if (GRPC_TRACE_FLAG_ENABLED(grpc_http_trace)) {
     gpr_log(GPR_INFO, "%s: Complete BDP ping err=%s", t->peer_string.c_str(),
             grpc_error_std_string(error).c_str());
   }
   if (error != GRPC_ERROR_NONE || t->closed_with_error != GRPC_ERROR_NONE) {
     GRPC_CHTTP2_UNREF_TRANSPORT(t, "bdp_ping");
     return;
   }
   if (!t->bdp_ping_started) {
     // start_bdp_ping_locked has not been run yet. Schedule
     // finish_bdp_ping_locked to be run later.
     t->combiner->Run(GRPC_CLOSURE_INIT(&t->finish_bdp_ping_locked,
                                        finish_bdp_ping_locked, t, nullptr),
                      GRPC_ERROR_REF(error));
     return;
   }
   t->bdp_ping_started = false;
   grpc_core::Timestamp next_ping =
-      t->flow_control.bdp_estimator()->CompletePing();
-  grpc_chttp2_act_on_flowctl_action(t->flow_control.PeriodicUpdate(), t,
+      t->flow_control->bdp_estimator()->CompletePing();
+  grpc_chttp2_act_on_flowctl_action(t->flow_control->PeriodicUpdate(), t,
                                     nullptr);
   GPR_ASSERT(!t->have_next_bdp_ping_timer);
   t->have_next_bdp_ping_timer = true;
   GRPC_CLOSURE_INIT(&t->next_bdp_ping_timer_expired_locked,
                     next_bdp_ping_timer_expired, t, grpc_schedule_on_exec_ctx);
   grpc_timer_init(&t->next_bdp_ping_timer, next_ping,
                   &t->next_bdp_ping_timer_expired_locked);
 }
@@ -2658,17 +2791,17 @@ static void next_bdp_ping_timer_expired(void* tp, grpc_error_handle error) {
 static void next_bdp_ping_timer_expired_locked(void* tp,
                                                grpc_error_handle error) {
   grpc_chttp2_transport* t = static_cast<grpc_chttp2_transport*>(tp);
   GPR_ASSERT(t->have_next_bdp_ping_timer);
   t->have_next_bdp_ping_timer = false;
   if (error != GRPC_ERROR_NONE) {
     GRPC_CHTTP2_UNREF_TRANSPORT(t, "bdp_ping");
     return;
   }
-  if (t->flow_control.bdp_estimator()->accumulator() == 0) {
+  if (t->flow_control->bdp_estimator()->accumulator() == 0) {
     // Block the bdp ping till we receive more data.
     t->bdp_ping_blocked = true;
     GRPC_CHTTP2_UNREF_TRANSPORT(t, "bdp_ping");
   } else {
     schedule_bdp_ping_locked(t);
   }
 }
@@ -2897,9 +3030,190 @@ static void set_pollset(grpc_transport* gt, grpc_stream* /*gs*/,
 static void set_pollset_set(grpc_transport* gt, grpc_stream* /*gs*/,
                             grpc_pollset_set* pollset_set) {
   grpc_chttp2_transport* t = reinterpret_cast<grpc_chttp2_transport*>(gt);
   grpc_endpoint_add_to_pollset_set(t->ep, pollset_set);
 }
 
+//
+// BYTE STREAM
+//
+
+static void reset_byte_stream(void* arg, grpc_error_handle error) {
+  grpc_chttp2_stream* s = static_cast<grpc_chttp2_stream*>(arg);
+  s->pending_byte_stream = false;
+  if (error == GRPC_ERROR_NONE) {
+    grpc_chttp2_maybe_complete_recv_message(s->t, s);
+    grpc_chttp2_maybe_complete_recv_trailing_metadata(s->t, s);
+  } else {
+    GPR_ASSERT(error != GRPC_ERROR_NONE);
+    grpc_core::ExecCtx::Run(DEBUG_LOCATION, s->on_next, GRPC_ERROR_REF(error));
+    s->on_next = nullptr;
+    GRPC_ERROR_UNREF(s->byte_stream_error);
+    s->byte_stream_error = GRPC_ERROR_NONE;
+    grpc_chttp2_cancel_stream(s->t, s, GRPC_ERROR_REF(error));
+    s->byte_stream_error = GRPC_ERROR_REF(error);
+  }
+}
+
+namespace grpc_core {
+
+Chttp2IncomingByteStream::Chttp2IncomingByteStream(
+    grpc_chttp2_transport* transport, grpc_chttp2_stream* stream,
+    uint32_t frame_size, uint32_t flags)
+    : ByteStream(frame_size, flags),
+      transport_(transport),
+      stream_(stream),
+      refs_(2),
+      remaining_bytes_(frame_size) {
+  GRPC_ERROR_UNREF(stream->byte_stream_error);
+  stream->byte_stream_error = GRPC_ERROR_NONE;
+}
+
+void Chttp2IncomingByteStream::OrphanLocked(
+    void* arg, grpc_error_handle /*error_ignored*/) {
+  Chttp2IncomingByteStream* bs = static_cast<Chttp2IncomingByteStream*>(arg);
+  grpc_chttp2_stream* s = bs->stream_;
+  grpc_chttp2_transport* t = s->t;
+  bs->Unref();
+  s->pending_byte_stream = false;
+  grpc_chttp2_maybe_complete_recv_message(t, s);
+  grpc_chttp2_maybe_complete_recv_trailing_metadata(t, s);
+}
+
+void Chttp2IncomingByteStream::Orphan() {
+  GPR_TIMER_SCOPE("incoming_byte_stream_destroy", 0);
+  transport_->combiner->Run(
+      GRPC_CLOSURE_INIT(&destroy_action_,
+                        &Chttp2IncomingByteStream::OrphanLocked, this, nullptr),
+      GRPC_ERROR_NONE);
+}
+
+void Chttp2IncomingByteStream::NextLocked(void* arg,
+                                          grpc_error_handle /*error_ignored*/) {
+  Chttp2IncomingByteStream* bs = static_cast<Chttp2IncomingByteStream*>(arg);
+  grpc_chttp2_transport* t = bs->transport_;
+  grpc_chttp2_stream* s = bs->stream_;
+  size_t cur_length = s->frame_storage.length;
+  if (!s->read_closed) {
+    s->flow_control->IncomingByteStreamUpdate(bs->next_action_.max_size_hint,
+                                              cur_length);
+    grpc_chttp2_act_on_flowctl_action(s->flow_control->MakeAction(), t, s);
+  }
+  GPR_ASSERT(s->unprocessed_incoming_frames_buffer.length == 0);
+  if (s->frame_storage.length > 0) {
+    grpc_slice_buffer_swap(&s->frame_storage,
+                           &s->unprocessed_incoming_frames_buffer);
+    ExecCtx::Run(DEBUG_LOCATION, bs->next_action_.on_complete, GRPC_ERROR_NONE);
+  } else if (s->byte_stream_error != GRPC_ERROR_NONE) {
+    ExecCtx::Run(DEBUG_LOCATION, bs->next_action_.on_complete,
+                 GRPC_ERROR_REF(s->byte_stream_error));
+    if (s->data_parser.parsing_frame != nullptr) {
+      s->data_parser.parsing_frame->Unref();
+      s->data_parser.parsing_frame = nullptr;
+    }
+  } else if (s->read_closed) {
+    if (bs->remaining_bytes_ != 0) {
+      s->byte_stream_error = GRPC_ERROR_CREATE_REFERENCING_FROM_STATIC_STRING(
+          "Truncated message", &s->read_closed_error, 1);
+      ExecCtx::Run(DEBUG_LOCATION, bs->next_action_.on_complete,
+                   GRPC_ERROR_REF(s->byte_stream_error));
+      if (s->data_parser.parsing_frame != nullptr) {
+        s->data_parser.parsing_frame->Unref();
+        s->data_parser.parsing_frame = nullptr;
+      }
+    } else {
+      // Should never reach here.
+      GPR_ASSERT(false);
+    }
+  } else {
+    s->on_next = bs->next_action_.on_complete;
+  }
+  bs->Unref();
+}
+
+bool Chttp2IncomingByteStream::Next(size_t max_size_hint,
+                                    grpc_closure* on_complete) {
+  GPR_TIMER_SCOPE("incoming_byte_stream_next", 0);
+  if (stream_->unprocessed_incoming_frames_buffer.length > 0) {
+    return true;
+  } else {
+    Ref();
+    next_action_.max_size_hint = max_size_hint;
+    next_action_.on_complete = on_complete;
+    transport_->combiner->Run(
+        GRPC_CLOSURE_INIT(&next_action_.closure,
+                          &Chttp2IncomingByteStream::NextLocked, this, nullptr),
+        GRPC_ERROR_NONE);
+    return false;
+  }
+}
+
+grpc_error_handle Chttp2IncomingByteStream::Pull(grpc_slice* slice) {
+  GPR_TIMER_SCOPE("incoming_byte_stream_pull", 0);
+  grpc_error_handle error;
+  if (stream_->unprocessed_incoming_frames_buffer.length > 0) {
+    error = grpc_deframe_unprocessed_incoming_frames(
+        &stream_->data_parser, stream_,
+        &stream_->unprocessed_incoming_frames_buffer, slice, nullptr);
+    if (error != GRPC_ERROR_NONE) {
+      return error;
+    }
+  } else {
+    error = GRPC_ERROR_CREATE_FROM_STATIC_STRING("Truncated message");
+    stream_->t->combiner->Run(&stream_->reset_byte_stream,
+                              GRPC_ERROR_REF(error));
+    return error;
+  }
+  return GRPC_ERROR_NONE;
+}
+
+void Chttp2IncomingByteStream::PublishError(grpc_error_handle error) {
+  GPR_ASSERT(error != GRPC_ERROR_NONE);
+  ExecCtx::Run(DEBUG_LOCATION, stream_->on_next, GRPC_ERROR_REF(error));
+  stream_->on_next = nullptr;
+  GRPC_ERROR_UNREF(stream_->byte_stream_error);
+  stream_->byte_stream_error = GRPC_ERROR_REF(error);
+  grpc_chttp2_cancel_stream(transport_, stream_, GRPC_ERROR_REF(error));
+}
+
+grpc_error_handle Chttp2IncomingByteStream::Push(const grpc_slice& slice,
+                                                 grpc_slice* slice_out) {
+  if (remaining_bytes_ < GRPC_SLICE_LENGTH(slice)) {
+    grpc_error_handle error =
+        GRPC_ERROR_CREATE_FROM_STATIC_STRING("Too many bytes in stream");
+    transport_->combiner->Run(&stream_->reset_byte_stream,
+                              GRPC_ERROR_REF(error));
+    grpc_slice_unref_internal(slice);
+    return error;
+  } else {
+    remaining_bytes_ -= static_cast<uint32_t> GRPC_SLICE_LENGTH(slice);
+    if (slice_out != nullptr) {
+      *slice_out = slice;
+    }
+    return GRPC_ERROR_NONE;
+  }
+}
+
+grpc_error_handle Chttp2IncomingByteStream::Finished(grpc_error_handle error,
+                                                     bool reset_on_error) {
+  if (error == GRPC_ERROR_NONE) {
+    if (remaining_bytes_ != 0) {
+      error = GRPC_ERROR_CREATE_FROM_STATIC_STRING("Truncated message");
+    }
+  }
+  if (error != GRPC_ERROR_NONE && reset_on_error) {
+    transport_->combiner->Run(&stream_->reset_byte_stream,
+                              GRPC_ERROR_REF(error));
+  }
+  Unref();
+  return error;
+}
+
+void Chttp2IncomingByteStream::Shutdown(grpc_error_handle error) {
+  GRPC_ERROR_UNREF(Finished(error, true /* reset_on_error */));
+}
+
+}  // namespace grpc_core
+
 //
 // RESOURCE QUOTAS
 //
diff --git a/src/core/ext/transport/chttp2/transport/flow_control.cc b/src/core/ext/transport/chttp2/transport/flow_control.cc
index 769ea43888..54aad55a99 100644
--- a/src/core/ext/transport/chttp2/transport/flow_control.cc
+++ b/src/core/ext/transport/chttp2/transport/flow_control.cc
@@ -1,40 +1,40 @@
 /*
  *
  * Copyright 2017 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #include <grpc/support/port_platform.h>
 
 #include "src/core/ext/transport/chttp2/transport/flow_control.h"
 
 #include <inttypes.h>
 #include <limits.h>
 
-#include <algorithm>
 #include <cmath>
-#include <ostream>
 #include <string>
-#include <vector>
 
-#include "absl/strings/str_cat.h"
 #include "absl/strings/str_format.h"
-#include "absl/strings/str_join.h"
 
+#include <grpc/slice.h>
+#include <grpc/support/alloc.h>
 #include <grpc/support/log.h>
 
+#include "src/core/ext/transport/chttp2/transport/frame.h"
+#include "src/core/ext/transport/chttp2/transport/internal.h"
+#include "src/core/lib/gpr/string.h"
 #include "src/core/lib/gpr/useful.h"
 #include "src/core/lib/iomgr/exec_ctx.h"
 #include "src/core/lib/resource_quota/memory_quota.h"
@@ -51,184 +51,282 @@ bool g_test_only_transport_flow_control_window_check;
 
 namespace {
 
+constexpr const int kTracePadding = 30;
 constexpr const int64_t kMaxWindowUpdateSize = (1u << 31) - 1;
 
+char* fmt_int64_diff_str(int64_t old_val, int64_t new_val) {
+  std::string str;
+  if (old_val != new_val) {
+    str = absl::StrFormat("%" PRId64 " -> %" PRId64 "", old_val, new_val);
+  } else {
+    str = absl::StrFormat("%" PRId64 "", old_val);
+  }
+  return gpr_leftpad(str.c_str(), ' ', kTracePadding);
+}
+
+char* fmt_uint32_diff_str(uint32_t old_val, uint32_t new_val) {
+  std::string str;
+  if (old_val != new_val) {
+    str = absl::StrFormat("%" PRIu32 " -> %" PRIu32 "", old_val, new_val);
+  } else {
+    str = absl::StrFormat("%" PRIu32 "", old_val);
+  }
+  return gpr_leftpad(str.c_str(), ' ', kTracePadding);
+}
 }  // namespace
 
+void FlowControlTrace::Init(const char* reason, TransportFlowControl* tfc,
+                            StreamFlowControl* sfc) {
+  tfc_ = tfc;
+  sfc_ = sfc;
+  reason_ = reason;
+  remote_window_ = tfc->remote_window();
+  target_window_ = tfc->target_window();
+  announced_window_ = tfc->announced_window();
+  if (sfc != nullptr) {
+    remote_window_delta_ = sfc->remote_window_delta();
+    local_window_delta_ = sfc->local_window_delta();
+    announced_window_delta_ = sfc->announced_window_delta();
+  }
+}
+
+void FlowControlTrace::Finish() {
+  uint32_t acked_local_window =
+      tfc_->transport()->settings[GRPC_SENT_SETTINGS]
+                                 [GRPC_CHTTP2_SETTINGS_INITIAL_WINDOW_SIZE];
+  uint32_t remote_window =
+      tfc_->transport()->settings[GRPC_PEER_SETTINGS]
+                                 [GRPC_CHTTP2_SETTINGS_INITIAL_WINDOW_SIZE];
+  char* trw_str = fmt_int64_diff_str(remote_window_, tfc_->remote_window());
+  char* tlw_str = fmt_int64_diff_str(target_window_, tfc_->target_window());
+  char* taw_str =
+      fmt_int64_diff_str(announced_window_, tfc_->announced_window());
+  char* srw_str;
+  char* slw_str;
+  char* saw_str;
+  if (sfc_ != nullptr) {
+    srw_str = fmt_int64_diff_str(remote_window_delta_ + remote_window,
+                                 sfc_->remote_window_delta() + remote_window);
+    slw_str =
+        fmt_int64_diff_str(local_window_delta_ + acked_local_window,
+                           sfc_->local_window_delta() + acked_local_window);
+    saw_str =
+        fmt_int64_diff_str(announced_window_delta_ + acked_local_window,
+                           sfc_->announced_window_delta() + acked_local_window);
+  } else {
+    srw_str = gpr_leftpad("", ' ', kTracePadding);
+    slw_str = gpr_leftpad("", ' ', kTracePadding);
+    saw_str = gpr_leftpad("", ' ', kTracePadding);
+  }
+  gpr_log(GPR_DEBUG,
+          "%p[%u][%s] | %s | trw:%s, tlw:%s, taw:%s, srw:%s, slw:%s, saw:%s",
+          tfc_, sfc_ != nullptr ? sfc_->stream()->id : 0,
+          tfc_->transport()->is_client ? "cli" : "svr", reason_, trw_str,
+          tlw_str, taw_str, srw_str, slw_str, saw_str);
+  gpr_free(trw_str);
+  gpr_free(tlw_str);
+  gpr_free(taw_str);
+  gpr_free(srw_str);
+  gpr_free(slw_str);
+  gpr_free(saw_str);
+}
+
 const char* FlowControlAction::UrgencyString(Urgency u) {
   switch (u) {
     case Urgency::NO_ACTION_NEEDED:
-      return "no-action";
+      return "no action";
     case Urgency::UPDATE_IMMEDIATELY:
-      return "now";
+      return "update immediately";
     case Urgency::QUEUE_UPDATE:
-      return "queue";
+      return "queue update";
     default:
       GPR_UNREACHABLE_CODE(return "unknown");
   }
   GPR_UNREACHABLE_CODE(return "unknown");
 }
 
-std::ostream& operator<<(std::ostream& out, FlowControlAction::Urgency u) {
-  return out << FlowControlAction::UrgencyString(u);
+void FlowControlAction::Trace(grpc_chttp2_transport* t) const {
+  char* iw_str = fmt_uint32_diff_str(
+      t->settings[GRPC_SENT_SETTINGS][GRPC_CHTTP2_SETTINGS_INITIAL_WINDOW_SIZE],
+      initial_window_size_);
+  char* mf_str = fmt_uint32_diff_str(
+      t->settings[GRPC_SENT_SETTINGS][GRPC_CHTTP2_SETTINGS_MAX_FRAME_SIZE],
+      max_frame_size_);
+  gpr_log(GPR_DEBUG, "t[%s],  s[%s], iw:%s:%s mf:%s:%s",
+          UrgencyString(send_transport_update_),
+          UrgencyString(send_stream_update_),
+          UrgencyString(send_initial_window_update_), iw_str,
+          UrgencyString(send_max_frame_size_update_), mf_str);
+  gpr_free(iw_str);
+  gpr_free(mf_str);
 }
 
-std::string FlowControlAction::DebugString() const {
-  std::vector<std::string> segments;
-  if (send_transport_update_ != Urgency::NO_ACTION_NEEDED) {
-    segments.push_back(
-        absl::StrCat("t:", UrgencyString(send_transport_update_)));
-  }
-  if (send_stream_update_ != Urgency::NO_ACTION_NEEDED) {
-    segments.push_back(absl::StrCat("s:", UrgencyString(send_stream_update_)));
-  }
-  if (send_initial_window_update_ != Urgency::NO_ACTION_NEEDED) {
-    segments.push_back(
-        absl::StrCat("iw=", initial_window_size_, ":",
-                     UrgencyString(send_initial_window_update_)));
-  }
-  if (send_max_frame_size_update_ != Urgency::NO_ACTION_NEEDED) {
-    segments.push_back(
-        absl::StrCat("mf=", max_frame_size_, ":",
-                     UrgencyString(send_max_frame_size_update_)));
-  }
-  if (segments.empty()) return "no action";
-  return absl::StrJoin(segments, ",");
+TransportFlowControlDisabled::TransportFlowControlDisabled(
+    grpc_chttp2_transport* t) {
+  remote_window_ = kMaxWindow;
+  target_initial_window_size_ = kMaxWindow;
+  announced_window_ = kMaxWindow;
+  t->settings[GRPC_PEER_SETTINGS][GRPC_CHTTP2_SETTINGS_MAX_FRAME_SIZE] =
+      kFrameSize;
+  t->settings[GRPC_SENT_SETTINGS][GRPC_CHTTP2_SETTINGS_MAX_FRAME_SIZE] =
+      kFrameSize;
+  t->settings[GRPC_ACKED_SETTINGS][GRPC_CHTTP2_SETTINGS_MAX_FRAME_SIZE] =
+      kFrameSize;
+  t->settings[GRPC_PEER_SETTINGS][GRPC_CHTTP2_SETTINGS_INITIAL_WINDOW_SIZE] =
+      kMaxWindow;
+  t->settings[GRPC_SENT_SETTINGS][GRPC_CHTTP2_SETTINGS_INITIAL_WINDOW_SIZE] =
+      kMaxWindow;
+  t->settings[GRPC_ACKED_SETTINGS][GRPC_CHTTP2_SETTINGS_INITIAL_WINDOW_SIZE] =
+      kMaxWindow;
 }
 
-std::ostream& operator<<(std::ostream& out, const FlowControlAction& action) {
-  return out << action.DebugString();
-}
-
-TransportFlowControl::TransportFlowControl(const char* name,
-                                           bool enable_bdp_probe,
-                                           MemoryOwner* memory_owner)
-    : memory_owner_(memory_owner),
+TransportFlowControl::TransportFlowControl(const grpc_chttp2_transport* t,
+                                           bool enable_bdp_probe)
+    : t_(t),
       enable_bdp_probe_(enable_bdp_probe),
-      bdp_estimator_(name),
+      bdp_estimator_(t->peer_string.c_str()),
       pid_controller_(PidController::Args()
                           .set_gain_p(4)
                           .set_gain_i(8)
                           .set_gain_d(0)
                           .set_initial_control_value(TargetLogBdp())
                           .set_min_control_value(-1)
                           .set_max_control_value(25)
                           .set_integral_range(10)),
       last_pid_update_(ExecCtx::Get()->Now()) {}
 
 uint32_t TransportFlowControl::MaybeSendUpdate(bool writing_anyway) {
+  FlowControlTrace trace("t updt sent", this, nullptr);
   const uint32_t target_announced_window =
       static_cast<uint32_t>(target_window());
   if ((writing_anyway || announced_window_ <= target_announced_window / 2) &&
       announced_window_ != target_announced_window) {
     const uint32_t announce =
         static_cast<uint32_t>(Clamp(target_announced_window - announced_window_,
                                     int64_t(0), kMaxWindowUpdateSize));
     announced_window_ += announce;
     return announce;
   }
   return 0;
 }
 
-absl::Status TransportFlowControl::ValidateRecvData(
+grpc_error_handle TransportFlowControl::ValidateRecvData(
     int64_t incoming_frame_size) {
   if (incoming_frame_size > announced_window_) {
-    return absl::InternalError(absl::StrFormat(
+    return GRPC_ERROR_CREATE_FROM_CPP_STRING(absl::StrFormat(
         "frame of size %" PRId64 " overflows local window of %" PRId64,
         incoming_frame_size, announced_window_));
   }
-  return absl::OkStatus();
+  return GRPC_ERROR_NONE;
 }
 
-void TransportFlowControl::CommitRecvData(int64_t incoming_frame_size) {
-  announced_window_ -= incoming_frame_size;
-}
+StreamFlowControl::StreamFlowControl(TransportFlowControl* tfc,
+                                     const grpc_chttp2_stream* s)
+    : tfc_(tfc), s_(s) {}
 
-StreamFlowControl::StreamFlowControl(TransportFlowControl* tfc) : tfc_(tfc) {}
+grpc_error_handle StreamFlowControl::RecvData(int64_t incoming_frame_size) {
+  FlowControlTrace trace("  data recv", tfc_, this);
 
-absl::Status StreamFlowControl::RecvData(int64_t incoming_frame_size) {
-  absl::Status error = tfc_->ValidateRecvData(incoming_frame_size);
-  if (!error.ok()) return error;
+  grpc_error_handle error = GRPC_ERROR_NONE;
+  error = tfc_->ValidateRecvData(incoming_frame_size);
+  if (error != GRPC_ERROR_NONE) return error;
 
-  int64_t acked_stream_window =
-      announced_window_delta_ + tfc_->acked_init_window();
+  uint32_t sent_init_window =
+      tfc_->transport()->settings[GRPC_SENT_SETTINGS]
+                                 [GRPC_CHTTP2_SETTINGS_INITIAL_WINDOW_SIZE];
+  uint32_t acked_init_window =
+      tfc_->transport()->settings[GRPC_ACKED_SETTINGS]
+                                 [GRPC_CHTTP2_SETTINGS_INITIAL_WINDOW_SIZE];
+
+  int64_t acked_stream_window = announced_window_delta_ + acked_init_window;
+  int64_t sent_stream_window = announced_window_delta_ + sent_init_window;
   if (incoming_frame_size > acked_stream_window) {
-    return absl::InternalError(absl::StrFormat(
-        "frame of size %" PRId64 " overflows local window of %" PRId64,
-        incoming_frame_size, acked_stream_window));
+    if (incoming_frame_size <= sent_stream_window) {
+      gpr_log(GPR_ERROR,
+              "Incoming frame of size %" PRId64
+              " exceeds local window size of %" PRId64
+              ".\n"
+              "The (un-acked, future) window size would be %" PRId64
+              " which is not exceeded.\n"
+              "This would usually cause a disconnection, but allowing it due to"
+              "broken HTTP2 implementations in the wild.\n"
+              "See (for example) https://github.com/netty/netty/issues/6520.",
+              incoming_frame_size, acked_stream_window, sent_stream_window);
+    } else {
+      return GRPC_ERROR_CREATE_FROM_CPP_STRING(absl::StrFormat(
+          "frame of size %" PRId64 " overflows local window of %" PRId64,
+          incoming_frame_size, acked_stream_window));
+    }
   }
 
   UpdateAnnouncedWindowDelta(tfc_, -incoming_frame_size);
   local_window_delta_ -= incoming_frame_size;
-  min_progress_size_ -=
-      std::min(static_cast<int64_t>(min_progress_size_), incoming_frame_size);
   tfc_->CommitRecvData(incoming_frame_size);
-  return absl::OkStatus();
+  return GRPC_ERROR_NONE;
 }
 
 uint32_t StreamFlowControl::MaybeSendUpdate() {
+  FlowControlTrace trace("s updt sent", tfc_, this);
   // If a recently sent settings frame caused the stream's flow control window
-  // to go in the negative (or < min_progress_size_), update the delta.
-  // In this case, we want to make sure that bytes are still flowing.
-  UpdateProgress(min_progress_size_);
+  // to go in the negative (or < GRPC_HEADER_SIZE_IN_BYTES), update the delta if
+  // one of the following conditions is satisfied -
+  // 1) There is a pending byte_stream and higher layers have expressed interest
+  // in reading additional data through the invokation of `Next()` where the
+  // bytes are to be available asynchronously. 2) There is a pending
+  // recv_message op.
+  // In these cases, we want to make sure that bytes are still flowing.
+  if (local_window_delta_ < GRPC_HEADER_SIZE_IN_BYTES) {
+    if (s_->on_next != nullptr) {
+      GPR_DEBUG_ASSERT(s_->pending_byte_stream);
+      IncomingByteStreamUpdate(GRPC_HEADER_SIZE_IN_BYTES, 0);
+    } else if (s_->recv_message != nullptr) {
+      IncomingByteStreamUpdate(GRPC_HEADER_SIZE_IN_BYTES,
+                               s_->frame_storage.length);
+    }
+  }
   if (local_window_delta_ > announced_window_delta_) {
     uint32_t announce = static_cast<uint32_t>(
         Clamp(local_window_delta_ - announced_window_delta_, int64_t(0),
               kMaxWindowUpdateSize));
     UpdateAnnouncedWindowDelta(tfc_, announce);
     return announce;
   }
   return 0;
 }
 
-void StreamFlowControl::UpdateProgress(uint32_t min_progress_size) {
+void StreamFlowControl::IncomingByteStreamUpdate(size_t max_size_hint,
+                                                 size_t have_already) {
+  FlowControlTrace trace("app st recv", tfc_, this);
   uint32_t max_recv_bytes;
 
-  min_progress_size_ = min_progress_size;
-
   /* clamp max recv hint to an allowable size */
-  if (min_progress_size >= kMaxWindowDelta) {
+  if (max_size_hint >= kMaxWindowDelta) {
     max_recv_bytes = kMaxWindowDelta;
   } else {
-    max_recv_bytes = static_cast<uint32_t>(min_progress_size);
+    max_recv_bytes = static_cast<uint32_t>(max_size_hint);
+  }
+
+  /* account for bytes already received but unknown to higher layers */
+  if (max_recv_bytes >= have_already) {
+    max_recv_bytes -= static_cast<uint32_t>(have_already);
+  } else {
+    max_recv_bytes = 0;
   }
 
   /* add some small lookahead to keep pipelines flowing */
-  GPR_DEBUG_ASSERT(max_recv_bytes <=
-                   kMaxWindowUpdateSize - tfc_->sent_init_window());
+  GPR_DEBUG_ASSERT(
+      max_recv_bytes <=
+      kMaxWindowUpdateSize -
+          tfc_->transport()
+              ->settings[GRPC_SENT_SETTINGS]
+                        [GRPC_CHTTP2_SETTINGS_INITIAL_WINDOW_SIZE]);
   if (local_window_delta_ < max_recv_bytes) {
     uint32_t add_max_recv_bytes =
         static_cast<uint32_t>(max_recv_bytes - local_window_delta_);
     local_window_delta_ += add_max_recv_bytes;
   }
 }
 
-absl::Status TransportFlowControl::RecvData(int64_t incoming_frame_size) {
-  absl::Status error = ValidateRecvData(incoming_frame_size);
-  if (error.ok()) return error;
-  CommitRecvData(incoming_frame_size);
-  return absl::OkStatus();
-}
-
-void TransportFlowControl::RecvUpdate(uint32_t size) { remote_window_ += size; }
-
-int64_t TransportFlowControl::target_window() const {
-  // See comment above announced_stream_total_over_incoming_window_ for the
-  // logic behind this decision.
-  return static_cast<uint32_t>(
-      std::min(static_cast<int64_t>((1u << 31) - 1),
-               announced_stream_total_over_incoming_window_ +
-                   target_initial_window_size_));
-}
-
-FlowControlAction TransportFlowControl::UpdateAction(FlowControlAction action) {
-  if (announced_window_ < target_window() / 2) {
-    action.set_send_transport_update(
-        FlowControlAction::Urgency::UPDATE_IMMEDIATELY);
-  }
-  return action;
-}
-
 // Take in a target and modifies it based on the memory pressure of the system
 static double AdjustForMemoryPressure(double memory_pressure, double target) {
   // do not increase window under heavy memory pressure.
@@ -247,9 +345,10 @@ static double AdjustForMemoryPressure(double memory_pressure, double target) {
 }
 
 double TransportFlowControl::TargetLogBdp() {
-  return AdjustForMemoryPressure(
-      memory_owner_->is_valid() ? memory_owner_->InstantaneousPressure() : 0.0,
-      1 + log2(bdp_estimator_.EstimateBdp()));
+  return AdjustForMemoryPressure(t_->memory_owner.is_valid()
+                                     ? t_->memory_owner.InstantaneousPressure()
+                                     : 0.0,
+                                 1 + log2(bdp_estimator_.EstimateBdp()));
 }
 
 double TransportFlowControl::SmoothLogBdp(double value) {
@@ -262,81 +361,74 @@ double TransportFlowControl::SmoothLogBdp(double value) {
   return pid_controller_.Update(bdp_error, dt > kMaxDt ? kMaxDt : dt);
 }
 
-void TransportFlowControl::UpdateSetting(
-    int64_t* desired_value, int64_t new_desired_value,
-    FlowControlAction* action,
-    FlowControlAction& (FlowControlAction::*set)(FlowControlAction::Urgency,
-                                                 uint32_t)) {
-  int64_t delta = new_desired_value - *desired_value;
+FlowControlAction::Urgency TransportFlowControl::DeltaUrgency(
+    int64_t value, grpc_chttp2_setting_id setting_id) {
+  int64_t delta = value - static_cast<int64_t>(
+                              t_->settings[GRPC_LOCAL_SETTINGS][setting_id]);
   // TODO(ncteisen): tune this
-  if (delta != 0 &&
-      (delta <= -*desired_value / 5 || delta >= *desired_value / 5)) {
-    *desired_value = new_desired_value;
-    (action->*set)(FlowControlAction::Urgency::QUEUE_UPDATE, *desired_value);
+  if (delta != 0 && (delta <= -value / 5 || delta >= value / 5)) {
+    return FlowControlAction::Urgency::QUEUE_UPDATE;
+  } else {
+    return FlowControlAction::Urgency::NO_ACTION_NEEDED;
   }
 }
 
 FlowControlAction TransportFlowControl::PeriodicUpdate() {
   FlowControlAction action;
   if (enable_bdp_probe_) {
     // get bdp estimate and update initial_window accordingly.
     // target might change based on how much memory pressure we are under
     // TODO(ncteisen): experiment with setting target to be huge under low
     // memory pressure.
     double target = pow(2, SmoothLogBdp(TargetLogBdp()));
     if (g_test_only_transport_target_window_estimates_mocker != nullptr) {
       // Hook for simulating unusual flow control situations in tests.
       target = g_test_only_transport_target_window_estimates_mocker
                    ->ComputeNextTargetInitialWindowSizeFromPeriodicUpdate(
                        target_initial_window_size_ /* current target */);
     }
     // Though initial window 'could' drop to 0, we keep the floor at
     // kMinInitialWindowSize
-    UpdateSetting(
-        &target_initial_window_size_,
-        static_cast<int32_t>(Clamp(target, double(kMinInitialWindowSize),
-                                   double(kMaxInitialWindowSize))),
-        &action, &FlowControlAction::set_send_initial_window_update);
+    target_initial_window_size_ = static_cast<int32_t>(Clamp(
+        target, double(kMinInitialWindowSize), double(kMaxInitialWindowSize)));
+    action.set_send_initial_window_update(
+        DeltaUrgency(target_initial_window_size_,
+                     GRPC_CHTTP2_SETTINGS_INITIAL_WINDOW_SIZE),
+        static_cast<uint32_t>(target_initial_window_size_));
 
     // get bandwidth estimate and update max_frame accordingly.
     double bw_dbl = bdp_estimator_.EstimateBandwidth();
     // we target the max of BDP or bandwidth in microseconds.
-    UpdateSetting(
-        &target_frame_size_,
-        static_cast<int32_t>(Clamp(
-            std::max(static_cast<int32_t>(Clamp(bw_dbl, 0.0, double(INT_MAX))) /
-                         1000,
-                     static_cast<int32_t>(target_initial_window_size_)),
-            16384, 16777215)),
-        &action, &FlowControlAction::set_send_max_frame_size_update);
+    int32_t frame_size = static_cast<int32_t>(Clamp(
+        std::max(
+            static_cast<int32_t>(Clamp(bw_dbl, 0.0, double(INT_MAX))) / 1000,
+            static_cast<int32_t>(target_initial_window_size_)),
+        16384, 16777215));
+    action.set_send_max_frame_size_update(
+        DeltaUrgency(static_cast<int64_t>(frame_size),
+                     GRPC_CHTTP2_SETTINGS_MAX_FRAME_SIZE),
+        frame_size);
   }
   return UpdateAction(action);
 }
 
 FlowControlAction StreamFlowControl::UpdateAction(FlowControlAction action) {
-  const uint32_t sent_init_window = tfc_->sent_init_window();
-  if (local_window_delta_ > announced_window_delta_ &&
-      announced_window_delta_ + sent_init_window <= sent_init_window / 2) {
-    action.set_send_stream_update(
-        FlowControlAction::Urgency::UPDATE_IMMEDIATELY);
-  } else if (local_window_delta_ > announced_window_delta_) {
-    action.set_send_stream_update(FlowControlAction::Urgency::QUEUE_UPDATE);
+  // TODO(ncteisen): tune this
+  if (!s_->read_closed) {
+    uint32_t sent_init_window =
+        tfc_->transport()->settings[GRPC_SENT_SETTINGS]
+                                   [GRPC_CHTTP2_SETTINGS_INITIAL_WINDOW_SIZE];
+    if (local_window_delta_ > announced_window_delta_ &&
+        announced_window_delta_ + sent_init_window <= sent_init_window / 2) {
+      action.set_send_stream_update(
+          FlowControlAction::Urgency::UPDATE_IMMEDIATELY);
+    } else if (local_window_delta_ > announced_window_delta_) {
+      action.set_send_stream_update(FlowControlAction::Urgency::QUEUE_UPDATE);
+    }
   }
 
   return action;
 }
 
-void StreamFlowControl::UpdateAnnouncedWindowDelta(TransportFlowControl* tfc,
-                                                   int64_t change) {
-  tfc->PreUpdateAnnouncedWindowOverIncomingWindow(announced_window_delta_);
-  announced_window_delta_ += change;
-  tfc->PostUpdateAnnouncedWindowOverIncomingWindow(announced_window_delta_);
-}
-
-void StreamFlowControl::SentData(int64_t outgoing_frame_size) {
-  tfc_->StreamSentData(outgoing_frame_size);
-  remote_window_delta_ -= outgoing_frame_size;
-}
-
 }  // namespace chttp2
 }  // namespace grpc_core
diff --git a/src/core/ext/transport/chttp2/transport/flow_control.h b/src/core/ext/transport/chttp2/transport/flow_control.h
index bc6fc7f2be..185f18b38c 100644
--- a/src/core/ext/transport/chttp2/transport/flow_control.h
+++ b/src/core/ext/transport/chttp2/transport/flow_control.h
@@ -1,39 +1,41 @@
 /*
  *
  * Copyright 2017 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #ifndef GRPC_CORE_EXT_TRANSPORT_CHTTP2_TRANSPORT_FLOW_CONTROL_H
 #define GRPC_CORE_EXT_TRANSPORT_CHTTP2_TRANSPORT_FLOW_CONTROL_H
 
 #include <grpc/support/port_platform.h>
 
 #include <stdint.h>
+#include <stdlib.h>
 
-#include <iosfwd>
-#include <string>
-
-#include "absl/status/status.h"
+#include <algorithm>
 
+#include "src/core/ext/transport/chttp2/transport/http2_settings.h"
 #include "src/core/lib/debug/trace.h"
 #include "src/core/lib/gprpp/time.h"
-#include "src/core/lib/resource_quota/memory_quota.h"
+#include "src/core/lib/iomgr/error.h"
 #include "src/core/lib/transport/bdp_estimator.h"
 #include "src/core/lib/transport/pid_controller.h"
 
+struct grpc_chttp2_transport;
+struct grpc_chttp2_stream;
+
 extern grpc_core::TraceFlag grpc_flowctl_trace;
 
 namespace grpc {
@@ -46,7 +48,6 @@ namespace grpc_core {
 namespace chttp2 {
 
 static constexpr uint32_t kDefaultWindow = 65535;
-static constexpr uint32_t kDefaultFrameSize = 16384;
 static constexpr int64_t kMaxWindow = static_cast<int64_t>((1u << 31) - 1);
 // TODO(ncteisen): Tune this
 static constexpr uint32_t kFrameSize = 1024 * 1024;
@@ -63,230 +64,416 @@ extern bool g_test_only_transport_flow_control_window_check;
 // Encapsulates a collections of actions the transport needs to take with
 // regard to flow control. Each action comes with urgencies that tell the
 // transport how quickly the action must take place.
 class FlowControlAction {
  public:
   enum class Urgency : uint8_t {
     // Nothing to be done.
     NO_ACTION_NEEDED = 0,
     // Initiate a write to update the initial window immediately.
     UPDATE_IMMEDIATELY,
     // Push the flow control update into a send buffer, to be sent
     // out the next time a write is initiated.
     QUEUE_UPDATE,
   };
 
   Urgency send_stream_update() const { return send_stream_update_; }
   Urgency send_transport_update() const { return send_transport_update_; }
   Urgency send_initial_window_update() const {
     return send_initial_window_update_;
   }
   Urgency send_max_frame_size_update() const {
     return send_max_frame_size_update_;
   }
   uint32_t initial_window_size() const { return initial_window_size_; }
   uint32_t max_frame_size() const { return max_frame_size_; }
 
   FlowControlAction& set_send_stream_update(Urgency u) {
     send_stream_update_ = u;
     return *this;
   }
   FlowControlAction& set_send_transport_update(Urgency u) {
     send_transport_update_ = u;
     return *this;
   }
   FlowControlAction& set_send_initial_window_update(Urgency u,
                                                     uint32_t update) {
     send_initial_window_update_ = u;
     initial_window_size_ = update;
     return *this;
   }
   FlowControlAction& set_send_max_frame_size_update(Urgency u,
                                                     uint32_t update) {
     send_max_frame_size_update_ = u;
     max_frame_size_ = update;
     return *this;
   }
 
   static const char* UrgencyString(Urgency u);
-  std::string DebugString() const;
-
-  bool operator==(const FlowControlAction& other) const {
-    return send_stream_update_ == other.send_stream_update_ &&
-           send_transport_update_ == other.send_transport_update_ &&
-           send_initial_window_update_ == other.send_initial_window_update_ &&
-           send_max_frame_size_update_ == other.send_max_frame_size_update_ &&
-           initial_window_size_ == other.initial_window_size_ &&
-           max_frame_size_ == other.max_frame_size_;
-  }
+  void Trace(grpc_chttp2_transport* t) const;
 
  private:
   Urgency send_stream_update_ = Urgency::NO_ACTION_NEEDED;
   Urgency send_transport_update_ = Urgency::NO_ACTION_NEEDED;
   Urgency send_initial_window_update_ = Urgency::NO_ACTION_NEEDED;
   Urgency send_max_frame_size_update_ = Urgency::NO_ACTION_NEEDED;
   uint32_t initial_window_size_ = 0;
   uint32_t max_frame_size_ = 0;
 };
 
-std::ostream& operator<<(std::ostream& out, FlowControlAction::Urgency urgency);
-std::ostream& operator<<(std::ostream& out, const FlowControlAction& action);
+class FlowControlTrace {
+ public:
+  FlowControlTrace(const char* reason, TransportFlowControl* tfc,
+                   StreamFlowControl* sfc) {
+    if (enabled_) Init(reason, tfc, sfc);
+  }
+
+  ~FlowControlTrace() {
+    if (enabled_) Finish();
+  }
+
+ private:
+  void Init(const char* reason, TransportFlowControl* tfc,
+            StreamFlowControl* sfc);
+  void Finish();
+
+  const bool enabled_ = GRPC_TRACE_FLAG_ENABLED(grpc_flowctl_trace);
+
+  TransportFlowControl* tfc_;
+  StreamFlowControl* sfc_;
+  const char* reason_;
+  int64_t remote_window_;
+  int64_t target_window_;
+  int64_t announced_window_;
+  int64_t remote_window_delta_;
+  int64_t local_window_delta_;
+  int64_t announced_window_delta_;
+};
+
+// Fat interface with all methods a flow control implementation needs to
+// support.
+class TransportFlowControlBase {
+ public:
+  TransportFlowControlBase() {}
+  virtual ~TransportFlowControlBase() {}
+
+  // Is flow control enabled? This is needed in other codepaths like the checks
+  // in parsing and in writing.
+  virtual bool flow_control_enabled() const = 0;
+
+  // Called to check if the transport needs to send a WINDOW_UPDATE frame
+  virtual uint32_t MaybeSendUpdate(bool /* writing_anyway */) = 0;
+
+  // Using the protected members, returns and Action to be taken by the
+  // tranport.
+  virtual FlowControlAction MakeAction() = 0;
+
+  // Using the protected members, returns and Action to be taken by the
+  // tranport. Also checks for updates to our BDP estimate and acts
+  // accordingly.
+  virtual FlowControlAction PeriodicUpdate() = 0;
+
+  // Called to do bookkeeping when a stream owned by this transport sends
+  // data on the wire
+  virtual void StreamSentData(int64_t /* size */) = 0;
+
+  // Called to do bookkeeping when a stream owned by this transport receives
+  // data from the wire. Also does error checking for frame size.
+  virtual grpc_error_handle RecvData(int64_t /* incoming_frame_size */) = 0;
+
+  // Called to do bookkeeping when we receive a WINDOW_UPDATE frame.
+  virtual void RecvUpdate(uint32_t /* size */) = 0;
+
+  // Returns the BdpEstimator held by this object. Caller is responsible for
+  // checking for nullptr. TODO(ncteisen): consider fully encapsulating all
+  // bdp estimator actions inside TransportFlowControl
+  virtual BdpEstimator* bdp_estimator() { return nullptr; }
+
+  // Getters
+  int64_t remote_window() const { return remote_window_; }
+  virtual int64_t target_window() const { return target_initial_window_size_; }
+  int64_t announced_window() const { return announced_window_; }
+
+  // Used in certain benchmarks in which we don't want FlowControl to be a
+  // factor
+  virtual void TestOnlyForceHugeWindow() {}
+
+ protected:
+  friend class grpc::testing::TrickledCHTTP2;
+  int64_t remote_window_ = kDefaultWindow;
+  int64_t target_initial_window_size_ = kDefaultWindow;
+  int64_t announced_window_ = kDefaultWindow;
+};
+
+// Implementation of flow control that does NOTHING. Always returns maximum
+// values, never initiates writes, and assumes that the remote peer is doing
+// the same. To be used to narrow down on flow control as the cause of negative
+// performance.
+class TransportFlowControlDisabled final : public TransportFlowControlBase {
+ public:
+  // Maxes out all values
+  explicit TransportFlowControlDisabled(grpc_chttp2_transport* t);
+
+  bool flow_control_enabled() const override { return false; }
+
+  // Never do anything.
+  uint32_t MaybeSendUpdate(bool /* writing_anyway */) override { return 0; }
+  FlowControlAction MakeAction() override { return FlowControlAction(); }
+  FlowControlAction PeriodicUpdate() override { return FlowControlAction(); }
+  void StreamSentData(int64_t /* size */) override {}
+  grpc_error_handle RecvData(int64_t /* incoming_frame_size */) override {
+    return GRPC_ERROR_NONE;
+  }
+  void RecvUpdate(uint32_t /* size */) override {}
+};
 
 // Implementation of flow control that abides to HTTP/2 spec and attempts
 // to be as performant as possible.
-class TransportFlowControl final {
+class TransportFlowControl final : public TransportFlowControlBase {
  public:
-  explicit TransportFlowControl(const char* name, bool enable_bdp_probe,
-                                MemoryOwner* memory_owner);
-  ~TransportFlowControl() {}
+  TransportFlowControl(const grpc_chttp2_transport* t, bool enable_bdp_probe);
+  ~TransportFlowControl() override {}
+
+  bool flow_control_enabled() const override { return true; }
 
   bool bdp_probe() const { return enable_bdp_probe_; }
 
   // returns an announce if we should send a transport update to our peer,
   // else returns zero; writing_anyway indicates if a write would happen
   // regardless of the send - if it is false and this function returns non-zero,
   // this announce will cause a write to occur
-  uint32_t MaybeSendUpdate(bool writing_anyway);
+  uint32_t MaybeSendUpdate(bool writing_anyway) override;
 
   // Reads the flow control data and returns and actionable struct that will
   // tell chttp2 exactly what it needs to do
-  FlowControlAction MakeAction() { return UpdateAction(FlowControlAction()); }
+  FlowControlAction MakeAction() override {
+    return UpdateAction(FlowControlAction());
+  }
 
   // Call periodically (at a low-ish rate, 100ms - 10s makes sense)
   // to perform more complex flow control calculations and return an action
   // to let chttp2 change its parameters
-  FlowControlAction PeriodicUpdate();
+  FlowControlAction PeriodicUpdate() override;
 
-  void StreamSentData(int64_t size) { remote_window_ -= size; }
+  void StreamSentData(int64_t size) override { remote_window_ -= size; }
 
-  absl::Status ValidateRecvData(int64_t incoming_frame_size);
-  void CommitRecvData(int64_t incoming_frame_size);
+  grpc_error_handle ValidateRecvData(int64_t incoming_frame_size);
+  void CommitRecvData(int64_t incoming_frame_size) {
+    announced_window_ -= incoming_frame_size;
+  }
 
-  absl::Status RecvData(int64_t incoming_frame_size);
+  grpc_error_handle RecvData(int64_t incoming_frame_size) override {
+    FlowControlTrace trace("  data recv", this, nullptr);
+    grpc_error_handle error = ValidateRecvData(incoming_frame_size);
+    if (error != GRPC_ERROR_NONE) return error;
+    CommitRecvData(incoming_frame_size);
+    return GRPC_ERROR_NONE;
+  }
 
   // we have received a WINDOW_UPDATE frame for a transport
-  void RecvUpdate(uint32_t size);
+  void RecvUpdate(uint32_t size) override {
+    FlowControlTrace trace("t updt recv", this, nullptr);
+    remote_window_ += size;
+  }
 
-  int64_t target_window() const;
+  // See comment above announced_stream_total_over_incoming_window_ for the
+  // logic behind this decision.
+  int64_t target_window() const override {
+    return static_cast<uint32_t>(
+        std::min(static_cast<int64_t>((1u << 31) - 1),
+                 announced_stream_total_over_incoming_window_ +
+                     target_initial_window_size_));
+  }
 
-  int64_t target_frame_size() const { return target_frame_size_; }
+  const grpc_chttp2_transport* transport() const { return t_; }
 
   void PreUpdateAnnouncedWindowOverIncomingWindow(int64_t delta) {
     if (delta > 0) {
       announced_stream_total_over_incoming_window_ -= delta;
     }
   }
 
   void PostUpdateAnnouncedWindowOverIncomingWindow(int64_t delta) {
     if (delta > 0) {
       announced_stream_total_over_incoming_window_ += delta;
     }
   }
 
-  BdpEstimator* bdp_estimator() { return &bdp_estimator_; }
+  BdpEstimator* bdp_estimator() override { return &bdp_estimator_; }
 
-  void TestOnlyForceHugeWindow() {
+  void TestOnlyForceHugeWindow() override {
     announced_window_ = 1024 * 1024 * 1024;
     remote_window_ = 1024 * 1024 * 1024;
   }
 
-  uint32_t acked_init_window() const { return acked_init_window_; }
-  uint32_t sent_init_window() const { return sent_init_window_; }
-
-  void SetSentInitialWindow(uint32_t value) { sent_init_window_ = value; }
-  void SetAckedInitialWindow(uint32_t value) { acked_init_window_ = value; }
-
-  // Getters
-  int64_t remote_window() const { return remote_window_; }
-  int64_t announced_window() const { return announced_window_; }
-
  private:
   double TargetLogBdp();
   double SmoothLogBdp(double value);
-  static void UpdateSetting(int64_t* desired_value, int64_t new_desired_value,
-                            FlowControlAction* action,
-                            FlowControlAction& (FlowControlAction::*set)(
-                                FlowControlAction::Urgency, uint32_t));
+  FlowControlAction::Urgency DeltaUrgency(int64_t value,
+                                          grpc_chttp2_setting_id setting_id);
 
-  FlowControlAction UpdateAction(FlowControlAction action);
+  FlowControlAction UpdateAction(FlowControlAction action) {
+    if (announced_window_ < target_window() / 2) {
+      action.set_send_transport_update(
+          FlowControlAction::Urgency::UPDATE_IMMEDIATELY);
+    }
+    return action;
+  }
 
-  MemoryOwner* const memory_owner_;
+  const grpc_chttp2_transport* const t_;
 
   /** calculating what we should give for local window:
       we track the total amount of flow control over initial window size
       across all streams: this is data that we want to receive right now (it
       has an outstanding read)
       and the total amount of flow control under initial window size across all
       streams: this is data we've read early
       we want to adjust incoming_window such that:
       incoming_window = total_over - max(bdp - total_under, 0) */
   int64_t announced_stream_total_over_incoming_window_ = 0;
 
   /** should we probe bdp? */
   const bool enable_bdp_probe_;
 
   /* bdp estimation */
   BdpEstimator bdp_estimator_;
 
   /* pid controller */
   PidController pid_controller_;
   Timestamp last_pid_update_;
+};
 
-  int64_t remote_window_ = kDefaultWindow;
-  int64_t target_initial_window_size_ = kDefaultWindow;
-  int64_t target_frame_size_ = kDefaultFrameSize;
-  int64_t announced_window_ = kDefaultWindow;
-  uint32_t sent_init_window_ = kDefaultWindow;
-  uint32_t acked_init_window_ = kDefaultWindow;
+// Fat interface with all methods a stream flow control implementation needs
+// to support.
+class StreamFlowControlBase {
+ public:
+  StreamFlowControlBase() {}
+  virtual ~StreamFlowControlBase() {}
+
+  // Updates an action using the protected members.
+  virtual FlowControlAction UpdateAction(FlowControlAction /* action */) {
+    abort();
+  }
+
+  // Using the protected members, returns an Action for this stream to be
+  // taken by the tranport.
+  virtual FlowControlAction MakeAction() = 0;
+
+  // Bookkeeping for when data is sent on this stream.
+  virtual void SentData(int64_t /* outgoing_frame_size */) = 0;
+
+  // Bookkeeping and error checking for when data is received by this stream.
+  virtual grpc_error_handle RecvData(int64_t /* incoming_frame_size */) = 0;
+
+  // Called to check if this stream needs to send a WINDOW_UPDATE frame.
+  virtual uint32_t MaybeSendUpdate() = 0;
+
+  // Bookkeeping for receiving a WINDOW_UPDATE from for this stream.
+  virtual void RecvUpdate(uint32_t /* size */) = 0;
+
+  // Bookkeeping for when a call pulls bytes out of the transport. At this
+  // point we consider the data 'used' and can thus let out peer know we are
+  // ready for more data.
+  virtual void IncomingByteStreamUpdate(size_t /* max_size_hint */,
+                                        size_t /* have_already */) {
+    abort();
+  }
+
+  // Used in certain benchmarks in which we don't want FlowControl to be a
+  // factor
+  virtual void TestOnlyForceHugeWindow() {}
+
+  // Getters
+  int64_t remote_window_delta() const { return remote_window_delta_; }
+  int64_t local_window_delta() const { return local_window_delta_; }
+  int64_t announced_window_delta() const { return announced_window_delta_; }
+
+ protected:
+  friend class grpc::testing::TrickledCHTTP2;
+  int64_t remote_window_delta_ = 0;
+  int64_t local_window_delta_ = 0;
+  int64_t announced_window_delta_ = 0;
+};
+
+// Implementation of flow control that does NOTHING. Always returns maximum
+// values, never initiates writes, and assumes that the remote peer is doing
+// the same. To be used to narrow down on flow control as the cause of negative
+// performance.
+class StreamFlowControlDisabled : public StreamFlowControlBase {
+ public:
+  FlowControlAction UpdateAction(FlowControlAction action) override {
+    return action;
+  }
+  FlowControlAction MakeAction() override { return FlowControlAction(); }
+  void SentData(int64_t /* outgoing_frame_size */) override {}
+  grpc_error_handle RecvData(int64_t /* incoming_frame_size */) override {
+    return GRPC_ERROR_NONE;
+  }
+  uint32_t MaybeSendUpdate() override { return 0; }
+  void RecvUpdate(uint32_t /* size */) override {}
+  void IncomingByteStreamUpdate(size_t /* max_size_hint */,
+                                size_t /* have_already */) override {}
 };
 
 // Implementation of flow control that abides to HTTP/2 spec and attempts
 // to be as performant as possible.
-class StreamFlowControl final {
+class StreamFlowControl final : public StreamFlowControlBase {
  public:
-  explicit StreamFlowControl(TransportFlowControl* tfc);
-  ~StreamFlowControl() {
+  StreamFlowControl(TransportFlowControl* tfc, const grpc_chttp2_stream* s);
+  ~StreamFlowControl() override {
     tfc_->PreUpdateAnnouncedWindowOverIncomingWindow(announced_window_delta_);
   }
 
-  FlowControlAction UpdateAction(FlowControlAction action);
-  FlowControlAction MakeAction() { return UpdateAction(tfc_->MakeAction()); }
+  FlowControlAction UpdateAction(FlowControlAction action) override;
+  FlowControlAction MakeAction() override {
+    return UpdateAction(tfc_->MakeAction());
+  }
 
   // we have sent data on the wire, we must track this in our bookkeeping for
   // the remote peer's flow control.
-  void SentData(int64_t outgoing_frame_size);
+  void SentData(int64_t outgoing_frame_size) override {
+    FlowControlTrace tracer("  data sent", tfc_, this);
+    tfc_->StreamSentData(outgoing_frame_size);
+    remote_window_delta_ -= outgoing_frame_size;
+  }
 
   // we have received data from the wire
-  absl::Status RecvData(int64_t incoming_frame_size);
+  grpc_error_handle RecvData(int64_t incoming_frame_size) override;
 
   // returns an announce if we should send a stream update to our peer, else
   // returns zero
-  uint32_t MaybeSendUpdate();
+  uint32_t MaybeSendUpdate() override;
 
   // we have received a WINDOW_UPDATE frame for a stream
-  void RecvUpdate(uint32_t size) { remote_window_delta_ += size; }
+  void RecvUpdate(uint32_t size) override {
+    FlowControlTrace trace("s updt recv", tfc_, this);
+    remote_window_delta_ += size;
+  }
 
   // the application is asking for a certain amount of bytes
-  void UpdateProgress(uint32_t min_progress_size);
+  void IncomingByteStreamUpdate(size_t max_size_hint,
+                                size_t have_already) override;
 
   int64_t remote_window_delta() const { return remote_window_delta_; }
   int64_t local_window_delta() const { return local_window_delta_; }
   int64_t announced_window_delta() const { return announced_window_delta_; }
-  uint32_t min_progress_size() const { return min_progress_size_; }
 
-  void TestOnlyForceHugeWindow() {
+  const grpc_chttp2_stream* stream() const { return s_; }
+
+  void TestOnlyForceHugeWindow() override {
     announced_window_delta_ = 1024 * 1024 * 1024;
     local_window_delta_ = 1024 * 1024 * 1024;
     remote_window_delta_ = 1024 * 1024 * 1024;
   }
 
  private:
   TransportFlowControl* const tfc_;
-  uint32_t min_progress_size_ = 0;
-  int64_t remote_window_delta_ = 0;
-  int64_t local_window_delta_ = 0;
-  int64_t announced_window_delta_ = 0;
+  const grpc_chttp2_stream* const s_;
 
-  void UpdateAnnouncedWindowDelta(TransportFlowControl* tfc, int64_t change);
+  void UpdateAnnouncedWindowDelta(TransportFlowControl* tfc, int64_t change) {
+    tfc->PreUpdateAnnouncedWindowOverIncomingWindow(announced_window_delta_);
+    announced_window_delta_ += change;
+    tfc->PostUpdateAnnouncedWindowOverIncomingWindow(announced_window_delta_);
+  }
 };
 
 class TestOnlyTransportTargetWindowEstimatesMocker {
diff --git a/src/core/ext/transport/chttp2/transport/frame_data.cc b/src/core/ext/transport/chttp2/transport/frame_data.cc
index 49a83ed6d3..b3eb18c1d4 100644
--- a/src/core/ext/transport/chttp2/transport/frame_data.cc
+++ b/src/core/ext/transport/chttp2/transport/frame_data.cc
@@ -1,53 +1,71 @@
 /*
  *
  * Copyright 2015 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #include <grpc/support/port_platform.h>
 
 #include "src/core/ext/transport/chttp2/transport/frame_data.h"
 
-#include <stdlib.h>
+#include <string.h>
 
+#include "absl/base/attributes.h"
 #include "absl/strings/str_format.h"
 
 #include <grpc/slice_buffer.h>
 #include <grpc/support/log.h>
 
 #include "src/core/ext/transport/chttp2/transport/internal.h"
-#include "src/core/lib/slice/slice_buffer.h"
+#include "src/core/lib/channel/channelz.h"
+#include "src/core/lib/gpr/string.h"
+#include "src/core/lib/gprpp/debug_location.h"
+#include "src/core/lib/gprpp/memory.h"
+#include "src/core/lib/gprpp/ref_counted_ptr.h"
+#include "src/core/lib/iomgr/exec_ctx.h"
+#include "src/core/lib/slice/slice_internal.h"
 #include "src/core/lib/slice/slice_refcount.h"
+#include "src/core/lib/slice/slice_string_helpers.h"
 #include "src/core/lib/transport/transport.h"
 
-absl::Status grpc_chttp2_data_parser_begin_frame(uint8_t flags,
-                                                 uint32_t stream_id,
-                                                 grpc_chttp2_stream* s) {
+grpc_chttp2_data_parser::~grpc_chttp2_data_parser() {
+  if (parsing_frame != nullptr) {
+    GRPC_ERROR_UNREF(parsing_frame->Finished(
+        GRPC_ERROR_CREATE_FROM_STATIC_STRING("Parser destroyed"), false));
+  }
+  GRPC_ERROR_UNREF(error);
+}
+
+grpc_error_handle grpc_chttp2_data_parser_begin_frame(
+    grpc_chttp2_data_parser* /*parser*/, uint8_t flags, uint32_t stream_id,
+    grpc_chttp2_stream* s) {
   if (flags & ~GRPC_CHTTP2_DATA_FLAG_END_STREAM) {
-    return absl::InternalError(absl::StrFormat(
-        "unsupported data flags: 0x%02x stream: %d", flags, stream_id));
+    return grpc_error_set_int(GRPC_ERROR_CREATE_FROM_CPP_STRING(absl::StrFormat(
+                                  "unsupported data flags: 0x%02x", flags)),
+                              GRPC_ERROR_INT_STREAM_ID,
+                              static_cast<intptr_t>(stream_id));
   }
 
   if (flags & GRPC_CHTTP2_DATA_FLAG_END_STREAM) {
     s->received_last_frame = true;
     s->eos_received = true;
   } else {
     s->received_last_frame = false;
   }
 
-  return absl::OkStatus();
+  return GRPC_ERROR_NONE;
 }
 
 void grpc_chttp2_encode_data(uint32_t id, grpc_slice_buffer* inbuf,
@@ -78,78 +96,218 @@ void grpc_chttp2_encode_data(uint32_t id, grpc_slice_buffer* inbuf,
   stats->data_bytes += write_bytes;
 }
 
-grpc_core::Poll<grpc_error_handle> grpc_deframe_unprocessed_incoming_frames(
-    grpc_chttp2_stream* s, uint32_t* min_progress_size,
-    grpc_core::SliceBuffer* stream_out, uint32_t* message_flags) {
-  grpc_slice_buffer* slices = &s->frame_storage;
+grpc_error_handle grpc_deframe_unprocessed_incoming_frames(
+    grpc_chttp2_data_parser* p, grpc_chttp2_stream* s,
+    grpc_slice_buffer* slices, grpc_slice* slice_out,
+    grpc_core::OrphanablePtr<grpc_core::ByteStream>* stream_out) {
   grpc_error_handle error = GRPC_ERROR_NONE;
+  grpc_chttp2_transport* t = s->t;
 
-  if (slices->length < 5) {
-    if (min_progress_size != nullptr) *min_progress_size = 5 - slices->length;
-    return grpc_core::Pending{};
-  }
-
-  uint8_t header[5];
-  grpc_slice_buffer_copy_first_into_buffer(slices, 5, header);
-
-  switch (header[0]) {
-    case 0:
-      if (message_flags != nullptr) *message_flags = 0;
-      break;
-    case 1:
-      if (message_flags != nullptr) {
-        *message_flags = GRPC_WRITE_INTERNAL_COMPRESS;
-      }
-      break;
-    default:
-      error = GRPC_ERROR_CREATE_FROM_CPP_STRING(
-          absl::StrFormat("Bad GRPC frame type 0x%02x", header[0]));
-      error = grpc_error_set_int(error, GRPC_ERROR_INT_STREAM_ID,
-                                 static_cast<intptr_t>(s->id));
-      return error;
-  }
+  while (slices->count > 0) {
+    uint8_t* beg = nullptr;
+    uint8_t* end = nullptr;
+    uint8_t* cur = nullptr;
 
-  uint32_t length = (static_cast<uint32_t>(header[1]) << 24) |
-                    (static_cast<uint32_t>(header[2]) << 16) |
-                    (static_cast<uint32_t>(header[3]) << 8) |
-                    static_cast<uint32_t>(header[4]);
+    grpc_slice* slice = grpc_slice_buffer_peek_first(slices);
+    beg = GRPC_SLICE_START_PTR(*slice);
+    end = GRPC_SLICE_END_PTR(*slice);
+    cur = beg;
+    uint32_t message_flags;
 
-  if (slices->length < length + 5) {
-    if (min_progress_size != nullptr) {
-      *min_progress_size = length + 5 - slices->length;
+    if (cur == end) {
+      grpc_slice_buffer_remove_first(slices);
+      continue;
     }
-    return grpc_core::Pending{};
-  }
 
-  if (min_progress_size != nullptr) *min_progress_size = 0;
-
-  if (stream_out != nullptr) {
-    s->stats.incoming.framing_bytes += 5;
-    s->stats.incoming.data_bytes += length;
-    grpc_slice_buffer_move_first_into_buffer(slices, 5, header);
-    grpc_slice_buffer_move_first_no_ref(slices, length,
-                                        stream_out->c_slice_buffer());
+    switch (p->state) {
+      case GRPC_CHTTP2_DATA_ERROR:
+        p->state = GRPC_CHTTP2_DATA_ERROR;
+        grpc_slice_buffer_remove_first(slices);
+        return GRPC_ERROR_REF(p->error);
+      case GRPC_CHTTP2_DATA_FH_0:
+        s->stats.incoming.framing_bytes++;
+        p->frame_type = *cur;
+        switch (p->frame_type) {
+          case 0:
+            p->is_frame_compressed = false; /* GPR_FALSE */
+            break;
+          case 1:
+            p->is_frame_compressed = true; /* GPR_TRUE */
+            break;
+          default:
+            p->error = GRPC_ERROR_CREATE_FROM_CPP_STRING(
+                absl::StrFormat("Bad GRPC frame type 0x%02x", p->frame_type));
+            p->error = grpc_error_set_int(p->error, GRPC_ERROR_INT_STREAM_ID,
+                                          static_cast<intptr_t>(s->id));
+            grpc_core::UniquePtr<char> dmp(
+                grpc_dump_slice(*slice, GPR_DUMP_HEX | GPR_DUMP_ASCII));
+            p->error = grpc_error_set_str(p->error, GRPC_ERROR_STR_RAW_BYTES,
+                                          dmp.get());
+            p->error =
+                grpc_error_set_int(p->error, GRPC_ERROR_INT_OFFSET, cur - beg);
+            p->state = GRPC_CHTTP2_DATA_ERROR;
+            grpc_slice_buffer_remove_first(slices);
+            return GRPC_ERROR_REF(p->error);
+        }
+        if (++cur == end) {
+          p->state = GRPC_CHTTP2_DATA_FH_1;
+          grpc_slice_buffer_remove_first(slices);
+          continue;
+        }
+        ABSL_FALLTHROUGH_INTENDED;
+      case GRPC_CHTTP2_DATA_FH_1:
+        s->stats.incoming.framing_bytes++;
+        p->frame_size = (static_cast<uint32_t>(*cur)) << 24;
+        if (++cur == end) {
+          p->state = GRPC_CHTTP2_DATA_FH_2;
+          grpc_slice_buffer_remove_first(slices);
+          continue;
+        }
+        ABSL_FALLTHROUGH_INTENDED;
+      case GRPC_CHTTP2_DATA_FH_2:
+        s->stats.incoming.framing_bytes++;
+        p->frame_size |= (static_cast<uint32_t>(*cur)) << 16;
+        if (++cur == end) {
+          p->state = GRPC_CHTTP2_DATA_FH_3;
+          grpc_slice_buffer_remove_first(slices);
+          continue;
+        }
+        ABSL_FALLTHROUGH_INTENDED;
+      case GRPC_CHTTP2_DATA_FH_3:
+        s->stats.incoming.framing_bytes++;
+        p->frame_size |= (static_cast<uint32_t>(*cur)) << 8;
+        if (++cur == end) {
+          p->state = GRPC_CHTTP2_DATA_FH_4;
+          grpc_slice_buffer_remove_first(slices);
+          continue;
+        }
+        ABSL_FALLTHROUGH_INTENDED;
+      case GRPC_CHTTP2_DATA_FH_4:
+        s->stats.incoming.framing_bytes++;
+        GPR_ASSERT(stream_out != nullptr);
+        GPR_ASSERT(p->parsing_frame == nullptr);
+        p->frame_size |= (static_cast<uint32_t>(*cur));
+        if (t->channelz_socket != nullptr) {
+          t->channelz_socket->RecordMessageReceived();
+        }
+        p->state = GRPC_CHTTP2_DATA_FRAME;
+        ++cur;
+        message_flags = 0;
+        if (p->is_frame_compressed) {
+          message_flags |= GRPC_WRITE_INTERNAL_COMPRESS;
+        }
+        p->parsing_frame = new grpc_core::Chttp2IncomingByteStream(
+            t, s, p->frame_size, message_flags);
+        stream_out->reset(p->parsing_frame);
+        if (p->parsing_frame->remaining_bytes() == 0) {
+          GRPC_ERROR_UNREF(p->parsing_frame->Finished(GRPC_ERROR_NONE, true));
+          p->parsing_frame = nullptr;
+          p->state = GRPC_CHTTP2_DATA_FH_0;
+        }
+        s->pending_byte_stream = true;
+        if (cur != end) {
+          grpc_slice_buffer_sub_first(slices, static_cast<size_t>(cur - beg),
+                                      static_cast<size_t>(end - beg));
+        } else {
+          grpc_slice_buffer_remove_first(slices);
+        }
+        return GRPC_ERROR_NONE;
+      case GRPC_CHTTP2_DATA_FRAME: {
+        GPR_ASSERT(p->parsing_frame != nullptr);
+        GPR_ASSERT(slice_out != nullptr);
+        if (cur == end) {
+          grpc_slice_buffer_remove_first(slices);
+          continue;
+        }
+        uint32_t remaining = static_cast<uint32_t>(end - cur);
+        if (remaining == p->frame_size) {
+          s->stats.incoming.data_bytes += remaining;
+          if (GRPC_ERROR_NONE !=
+              (error = p->parsing_frame->Push(
+                   grpc_slice_sub(*slice, static_cast<size_t>(cur - beg),
+                                  static_cast<size_t>(end - beg)),
+                   slice_out))) {
+            grpc_slice_buffer_remove_first(slices);
+            return error;
+          }
+          if (GRPC_ERROR_NONE !=
+              (error = p->parsing_frame->Finished(GRPC_ERROR_NONE, true))) {
+            grpc_slice_buffer_remove_first(slices);
+            return error;
+          }
+          p->parsing_frame = nullptr;
+          p->state = GRPC_CHTTP2_DATA_FH_0;
+          grpc_slice_buffer_remove_first(slices);
+          return GRPC_ERROR_NONE;
+        } else if (remaining < p->frame_size) {
+          s->stats.incoming.data_bytes += remaining;
+          if (GRPC_ERROR_NONE !=
+              (error = p->parsing_frame->Push(
+                   grpc_slice_sub(*slice, static_cast<size_t>(cur - beg),
+                                  static_cast<size_t>(end - beg)),
+                   slice_out))) {
+            return error;
+          }
+          p->frame_size -= remaining;
+          grpc_slice_buffer_remove_first(slices);
+          return GRPC_ERROR_NONE;
+        } else {
+          GPR_ASSERT(remaining > p->frame_size);
+          s->stats.incoming.data_bytes += p->frame_size;
+          if (GRPC_ERROR_NONE !=
+              p->parsing_frame->Push(
+                  grpc_slice_sub(
+                      *slice, static_cast<size_t>(cur - beg),
+                      static_cast<size_t>(cur + p->frame_size - beg)),
+                  slice_out)) {
+            grpc_slice_buffer_remove_first(slices);
+            return error;
+          }
+          if (GRPC_ERROR_NONE !=
+              (error = p->parsing_frame->Finished(GRPC_ERROR_NONE, true))) {
+            grpc_slice_buffer_remove_first(slices);
+            return error;
+          }
+          p->parsing_frame = nullptr;
+          p->state = GRPC_CHTTP2_DATA_FH_0;
+          cur += p->frame_size;
+          grpc_slice_buffer_sub_first(slices, static_cast<size_t>(cur - beg),
+                                      static_cast<size_t>(end - beg));
+          return GRPC_ERROR_NONE;
+        }
+      }
+    }
   }
-
   return GRPC_ERROR_NONE;
 }
 
 grpc_error_handle grpc_chttp2_data_parser_parse(void* /*parser*/,
                                                 grpc_chttp2_transport* t,
                                                 grpc_chttp2_stream* s,
                                                 const grpc_slice& slice,
                                                 int is_last) {
-  grpc_slice_ref_internal(slice);
-  grpc_slice_buffer_add(&s->frame_storage, slice);
-  grpc_chttp2_maybe_complete_recv_message(t, s);
+  if (!s->pending_byte_stream) {
+    grpc_slice_ref_internal(slice);
+    grpc_slice_buffer_add(&s->frame_storage, slice);
+    grpc_chttp2_maybe_complete_recv_message(t, s);
+  } else if (s->on_next) {
+    GPR_ASSERT(s->frame_storage.length == 0);
+    grpc_slice_ref_internal(slice);
+    grpc_slice_buffer_add(&s->unprocessed_incoming_frames_buffer, slice);
+    grpc_core::ExecCtx::Run(DEBUG_LOCATION, s->on_next, GRPC_ERROR_NONE);
+    s->on_next = nullptr;
+  } else {
+    grpc_slice_ref_internal(slice);
+    grpc_slice_buffer_add(&s->frame_storage, slice);
+  }
 
   if (is_last && s->received_last_frame) {
     grpc_chttp2_mark_stream_closed(
         t, s, true, false,
         t->is_client ? GRPC_ERROR_CREATE_FROM_STATIC_STRING(
                            "Data frame with END_STREAM flag received")
                      : GRPC_ERROR_NONE);
   }
 
   return GRPC_ERROR_NONE;
 }
diff --git a/src/core/ext/transport/chttp2/transport/frame_data.h b/src/core/ext/transport/chttp2/transport/frame_data.h
index e1805edcb6..d32bba8306 100644
--- a/src/core/ext/transport/chttp2/transport/frame_data.h
+++ b/src/core/ext/transport/chttp2/transport/frame_data.h
@@ -1,44 +1,69 @@
 /*
  *
  * Copyright 2015 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #ifndef GRPC_CORE_EXT_TRANSPORT_CHTTP2_TRANSPORT_FRAME_DATA_H
 #define GRPC_CORE_EXT_TRANSPORT_CHTTP2_TRANSPORT_FRAME_DATA_H
 
 /* Parser for GRPC streams embedded in DATA frames */
 
 #include <grpc/support/port_platform.h>
 
 #include <stdint.h>
 
-#include "absl/status/status.h"
-
 #include <grpc/slice.h>
 
 #include "src/core/ext/transport/chttp2/transport/frame.h"
+#include "src/core/lib/gprpp/orphanable.h"
 #include "src/core/lib/iomgr/error.h"
-#include "src/core/lib/promise/poll.h"
-#include "src/core/lib/slice/slice_buffer.h"
+#include "src/core/lib/transport/byte_stream.h"
 #include "src/core/lib/transport/transport.h"
 
+typedef enum {
+  GRPC_CHTTP2_DATA_FH_0,
+  GRPC_CHTTP2_DATA_FH_1,
+  GRPC_CHTTP2_DATA_FH_2,
+  GRPC_CHTTP2_DATA_FH_3,
+  GRPC_CHTTP2_DATA_FH_4,
+  GRPC_CHTTP2_DATA_FRAME,
+  GRPC_CHTTP2_DATA_ERROR
+} grpc_chttp2_stream_state;
+
+namespace grpc_core {
+class Chttp2IncomingByteStream;
+}  // namespace grpc_core
+
+struct grpc_chttp2_data_parser {
+  grpc_chttp2_data_parser() = default;
+  ~grpc_chttp2_data_parser();
+
+  grpc_chttp2_stream_state state = GRPC_CHTTP2_DATA_FH_0;
+  uint8_t frame_type = 0;
+  uint32_t frame_size = 0;
+  grpc_error_handle error = GRPC_ERROR_NONE;
+
+  bool is_frame_compressed = false;
+  grpc_core::Chttp2IncomingByteStream* parsing_frame = nullptr;
+};
+
 /* start processing a new data frame */
-absl::Status grpc_chttp2_data_parser_begin_frame(uint8_t flags,
-                                                 uint32_t stream_id,
-                                                 grpc_chttp2_stream* s);
+grpc_error_handle grpc_chttp2_data_parser_begin_frame(
+    grpc_chttp2_data_parser* parser, uint8_t flags, uint32_t stream_id,
+    grpc_chttp2_stream* s);
 
 /* handle a slice of a data frame - is_last indicates the last slice of a
    frame */
@@ -53,8 +78,9 @@ void grpc_chttp2_encode_data(uint32_t id, grpc_slice_buffer* inbuf,
                              grpc_transport_one_way_stats* stats,
                              grpc_slice_buffer* outbuf);
 
-grpc_core::Poll<grpc_error_handle> grpc_deframe_unprocessed_incoming_frames(
-    grpc_chttp2_stream* s, uint32_t* min_progress_size,
-    grpc_core::SliceBuffer* stream_out, uint32_t* message_flags);
+grpc_error_handle grpc_deframe_unprocessed_incoming_frames(
+    grpc_chttp2_data_parser* p, grpc_chttp2_stream* s,
+    grpc_slice_buffer* slices, grpc_slice* slice_out,
+    grpc_core::OrphanablePtr<grpc_core::ByteStream>* stream_out);
 
 #endif /* GRPC_CORE_EXT_TRANSPORT_CHTTP2_TRANSPORT_FRAME_DATA_H */
diff --git a/src/core/ext/transport/chttp2/transport/frame_settings.cc b/src/core/ext/transport/chttp2/transport/frame_settings.cc
index c049acedb9..dfbfde9ee7 100644
--- a/src/core/ext/transport/chttp2/transport/frame_settings.cc
+++ b/src/core/ext/transport/chttp2/transport/frame_settings.cc
@@ -1,44 +1,45 @@
 /*
  *
  * Copyright 2015 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #include <grpc/support/port_platform.h>
 
 #include "src/core/ext/transport/chttp2/transport/frame_settings.h"
 
 #include <string.h>
 
 #include <string>
 
 #include "absl/base/attributes.h"
 #include "absl/strings/str_format.h"
 
 #include <grpc/slice_buffer.h>
 #include <grpc/support/log.h>
 
 #include "src/core/ext/transport/chttp2/transport/flow_control.h"
 #include "src/core/ext/transport/chttp2/transport/frame.h"
 #include "src/core/ext/transport/chttp2/transport/frame_goaway.h"
 #include "src/core/ext/transport/chttp2/transport/hpack_encoder.h"
 #include "src/core/ext/transport/chttp2/transport/internal.h"
 #include "src/core/ext/transport/chttp2/transport/stream_map.h"
 #include "src/core/lib/debug/trace.h"
 #include "src/core/lib/gpr/useful.h"
 #include "src/core/lib/gprpp/debug_location.h"
+#include "src/core/lib/gprpp/manual_constructor.h"
 #include "src/core/lib/iomgr/exec_ctx.h"
 
 static uint8_t* fill_header(uint8_t* out, uint32_t length, uint8_t flags) {
@@ -123,13 +124,13 @@ namespace {
 void StreamFlowControlWindowCheck(void* user_data, uint32_t /* key */,
                                   void* stream) {
   bool* error = static_cast<bool*>(user_data);
   grpc_chttp2_stream* s = static_cast<grpc_chttp2_stream*>(stream);
   if ((s->t->settings[GRPC_PEER_SETTINGS]
                      [GRPC_CHTTP2_SETTINGS_INITIAL_WINDOW_SIZE] +
-       s->t->initial_window_update + s->flow_control.remote_window_delta()) >
+       s->t->initial_window_update + s->flow_control->remote_window_delta()) >
       ((1u << 31) - 1)) {
     *error = true;
   }
 }
 
 }  // namespace
@@ -137,141 +138,147 @@ void StreamFlowControlWindowCheck(void* user_data, uint32_t /* key */,
 grpc_error_handle grpc_chttp2_settings_parser_parse(void* p,
                                                     grpc_chttp2_transport* t,
                                                     grpc_chttp2_stream* /*s*/,
                                                     const grpc_slice& slice,
                                                     int is_last) {
   grpc_chttp2_settings_parser* parser =
       static_cast<grpc_chttp2_settings_parser*>(p);
   const uint8_t* cur = GRPC_SLICE_START_PTR(slice);
   const uint8_t* end = GRPC_SLICE_END_PTR(slice);
   grpc_chttp2_setting_id id;
 
   if (parser->is_ack) {
     return GRPC_ERROR_NONE;
   }
 
   for (;;) {
     switch (parser->state) {
       case GRPC_CHTTP2_SPS_ID0:
         if (cur == end) {
           parser->state = GRPC_CHTTP2_SPS_ID0;
           if (is_last) {
             memcpy(parser->target_settings, parser->incoming_settings,
                    GRPC_CHTTP2_NUM_SETTINGS * sizeof(uint32_t));
             t->num_pending_induced_frames++;
             grpc_slice_buffer_add(&t->qbuf, grpc_chttp2_settings_ack_create());
             grpc_chttp2_initiate_write(t,
                                        GRPC_CHTTP2_INITIATE_WRITE_SETTINGS_ACK);
             if (t->notify_on_receive_settings != nullptr) {
               grpc_core::ExecCtx::Run(DEBUG_LOCATION,
                                       t->notify_on_receive_settings,
                                       GRPC_ERROR_NONE);
               t->notify_on_receive_settings = nullptr;
             }
           }
           return GRPC_ERROR_NONE;
         }
         parser->id = static_cast<uint16_t>((static_cast<uint16_t>(*cur)) << 8);
         cur++;
         ABSL_FALLTHROUGH_INTENDED;
       case GRPC_CHTTP2_SPS_ID1:
         if (cur == end) {
           parser->state = GRPC_CHTTP2_SPS_ID1;
           return GRPC_ERROR_NONE;
         }
         parser->id = static_cast<uint16_t>(parser->id | (*cur));
         cur++;
         ABSL_FALLTHROUGH_INTENDED;
       case GRPC_CHTTP2_SPS_VAL0:
         if (cur == end) {
           parser->state = GRPC_CHTTP2_SPS_VAL0;
           return GRPC_ERROR_NONE;
         }
         parser->value = (static_cast<uint32_t>(*cur)) << 24;
         cur++;
         ABSL_FALLTHROUGH_INTENDED;
       case GRPC_CHTTP2_SPS_VAL1:
         if (cur == end) {
           parser->state = GRPC_CHTTP2_SPS_VAL1;
           return GRPC_ERROR_NONE;
         }
         parser->value |= (static_cast<uint32_t>(*cur)) << 16;
         cur++;
         ABSL_FALLTHROUGH_INTENDED;
       case GRPC_CHTTP2_SPS_VAL2:
         if (cur == end) {
           parser->state = GRPC_CHTTP2_SPS_VAL2;
           return GRPC_ERROR_NONE;
         }
         parser->value |= (static_cast<uint32_t>(*cur)) << 8;
         cur++;
         ABSL_FALLTHROUGH_INTENDED;
       case GRPC_CHTTP2_SPS_VAL3:
         if (cur == end) {
           parser->state = GRPC_CHTTP2_SPS_VAL3;
           return GRPC_ERROR_NONE;
         } else {
           parser->state = GRPC_CHTTP2_SPS_ID0;
         }
         parser->value |= *cur;
         cur++;
 
         if (grpc_wire_id_to_setting_id(parser->id, &id)) {
           const grpc_chttp2_setting_parameters* sp =
               &grpc_chttp2_settings_parameters[id];
+          // If flow control is disabled we skip these.
+          if (!t->flow_control->flow_control_enabled() &&
+              (id == GRPC_CHTTP2_SETTINGS_INITIAL_WINDOW_SIZE ||
+               id == GRPC_CHTTP2_SETTINGS_MAX_FRAME_SIZE)) {
+            continue;
+          }
           if (parser->value < sp->min_value || parser->value > sp->max_value) {
             switch (sp->invalid_value_behavior) {
               case GRPC_CHTTP2_CLAMP_INVALID_VALUE:
                 parser->value = grpc_core::Clamp(parser->value, sp->min_value,
                                                  sp->max_value);
                 break;
               case GRPC_CHTTP2_DISCONNECT_ON_INVALID_VALUE:
                 grpc_chttp2_goaway_append(
                     t->last_new_stream_id, sp->error_value,
                     grpc_slice_from_static_string("HTTP2 settings error"),
                     &t->qbuf);
                 return GRPC_ERROR_CREATE_FROM_CPP_STRING(absl::StrFormat(
                     "invalid value %u passed for %s", parser->value, sp->name));
             }
           }
           if (id == GRPC_CHTTP2_SETTINGS_INITIAL_WINDOW_SIZE &&
               parser->incoming_settings[id] != parser->value) {
             t->initial_window_update += static_cast<int64_t>(parser->value) -
                                         parser->incoming_settings[id];
             if (GRPC_TRACE_FLAG_ENABLED(grpc_http_trace) ||
                 GRPC_TRACE_FLAG_ENABLED(grpc_flowctl_trace)) {
               gpr_log(GPR_INFO, "%p[%s] adding %d for initial_window change", t,
                       t->is_client ? "cli" : "svr",
                       static_cast<int>(t->initial_window_update));
             }
             if (grpc_core::chttp2::
                     g_test_only_transport_flow_control_window_check) {
               bool error = false;
               if (parser->value > grpc_core::chttp2::kMaxInitialWindowSize ||
                   parser->value < grpc_core::chttp2::kMinInitialWindowSize) {
                 error = true;
               } else {
                 grpc_chttp2_stream_map_for_each(
                     &t->stream_map, StreamFlowControlWindowCheck, &error);
               }
               if (error) {
                 grpc_chttp2_goaway_append(
                     t->last_new_stream_id, sp->error_value,
                     grpc_slice_from_static_string("HTTP2 settings error"),
                     &t->qbuf);
               }
             }
           }
           parser->incoming_settings[id] = parser->value;
           if (GRPC_TRACE_FLAG_ENABLED(grpc_http_trace)) {
             gpr_log(GPR_INFO, "CHTTP2:%s:%s: got setting %s = %d",
                     t->is_client ? "CLI" : "SVR", t->peer_string.c_str(),
                     sp->name, parser->value);
           }
         } else if (GRPC_TRACE_FLAG_ENABLED(grpc_http_trace)) {
           gpr_log(GPR_ERROR, "CHTTP2: Ignoring unknown setting %d (value %d)",
                   parser->id, parser->value);
         }
         break;
     }
   }
 }
diff --git a/src/core/ext/transport/chttp2/transport/frame_window_update.cc b/src/core/ext/transport/chttp2/transport/frame_window_update.cc
index c208d47974..790c654cb5 100644
--- a/src/core/ext/transport/chttp2/transport/frame_window_update.cc
+++ b/src/core/ext/transport/chttp2/transport/frame_window_update.cc
@@ -1,34 +1,35 @@
 /*
  *
  * Copyright 2015 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #include <grpc/support/port_platform.h>
 
 #include "src/core/ext/transport/chttp2/transport/frame_window_update.h"
 
 #include <stddef.h>
 
 #include "absl/strings/str_cat.h"
 #include "absl/strings/str_format.h"
 
 #include <grpc/support/log.h>
 
 #include "src/core/ext/transport/chttp2/transport/flow_control.h"
 #include "src/core/ext/transport/chttp2/transport/internal.h"
+#include "src/core/lib/gprpp/manual_constructor.h"
 
 grpc_slice grpc_chttp2_window_update_create(
     uint32_t id, uint32_t window_delta, grpc_transport_one_way_stats* stats) {
@@ -70,56 +71,56 @@ grpc_error_handle grpc_chttp2_window_update_parser_begin_frame(
 grpc_error_handle grpc_chttp2_window_update_parser_parse(
     void* parser, grpc_chttp2_transport* t, grpc_chttp2_stream* s,
     const grpc_slice& slice, int is_last) {
   const uint8_t* const beg = GRPC_SLICE_START_PTR(slice);
   const uint8_t* const end = GRPC_SLICE_END_PTR(slice);
   const uint8_t* cur = beg;
   grpc_chttp2_window_update_parser* p =
       static_cast<grpc_chttp2_window_update_parser*>(parser);
 
   while (p->byte != 4 && cur != end) {
     p->amount |= (static_cast<uint32_t>(*cur)) << (8 * (3 - p->byte));
     cur++;
     p->byte++;
   }
 
   if (s != nullptr) {
     s->stats.incoming.framing_bytes += static_cast<uint32_t>(end - cur);
   }
 
   if (p->byte == 4) {
     // top bit is reserved and must be ignored.
     uint32_t received_update = p->amount & 0x7fffffffu;
     if (received_update == 0) {
       return GRPC_ERROR_CREATE_FROM_CPP_STRING(
           absl::StrCat("invalid window update bytes: ", p->amount));
     }
     GPR_ASSERT(is_last);
 
     if (t->incoming_stream_id != 0) {
       if (s != nullptr) {
-        s->flow_control.RecvUpdate(received_update);
+        s->flow_control->RecvUpdate(received_update);
         if (grpc_core::chttp2::
                 g_test_only_transport_flow_control_window_check &&
-            s->flow_control.remote_window_delta() >
+            s->flow_control->remote_window_delta() >
                 grpc_core::chttp2::kMaxWindowDelta) {
           GPR_ASSERT(false);
         }
         if (grpc_chttp2_list_remove_stalled_by_stream(t, s)) {
           grpc_chttp2_mark_stream_writable(t, s);
           grpc_chttp2_initiate_write(
               t, GRPC_CHTTP2_INITIATE_WRITE_FLOW_CONTROL_UNSTALLED_BY_UPDATE);
         }
       }
     } else {
-      bool was_zero = t->flow_control.remote_window() <= 0;
-      t->flow_control.RecvUpdate(received_update);
-      bool is_zero = t->flow_control.remote_window() <= 0;
+      bool was_zero = t->flow_control->remote_window() <= 0;
+      t->flow_control->RecvUpdate(received_update);
+      bool is_zero = t->flow_control->remote_window() <= 0;
       if (was_zero && !is_zero) {
         grpc_chttp2_initiate_write(
             t, GRPC_CHTTP2_INITIATE_WRITE_TRANSPORT_FLOW_CONTROL_UNSTALLED);
       }
     }
   }
 
   return GRPC_ERROR_NONE;
 }
diff --git a/src/core/ext/transport/chttp2/transport/internal.h b/src/core/ext/transport/chttp2/transport/internal.h
index 4af3c4ec9d..d859766ead 100644
--- a/src/core/ext/transport/chttp2/transport/internal.h
+++ b/src/core/ext/transport/chttp2/transport/internal.h
@@ -1,66 +1,68 @@
 /*
  *
  * Copyright 2015 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #ifndef GRPC_CORE_EXT_TRANSPORT_CHTTP2_TRANSPORT_INTERNAL_H
 #define GRPC_CORE_EXT_TRANSPORT_CHTTP2_TRANSPORT_INTERNAL_H
 
 #include <grpc/support/port_platform.h>
 
 #include <stddef.h>
 #include <stdint.h>
 
 #include <string>
 
 #include "absl/strings/string_view.h"
-#include "absl/types/optional.h"
 
 #include <grpc/event_engine/memory_allocator.h>
 #include <grpc/impl/codegen/grpc_types.h>
 #include <grpc/slice.h>
 
 #include "src/core/ext/transport/chttp2/transport/flow_control.h"
 #include "src/core/ext/transport/chttp2/transport/frame.h"
+#include "src/core/ext/transport/chttp2/transport/frame_data.h"
 #include "src/core/ext/transport/chttp2/transport/frame_goaway.h"
 #include "src/core/ext/transport/chttp2/transport/frame_ping.h"
 #include "src/core/ext/transport/chttp2/transport/frame_rst_stream.h"
 #include "src/core/ext/transport/chttp2/transport/frame_settings.h"
 #include "src/core/ext/transport/chttp2/transport/frame_window_update.h"
 #include "src/core/ext/transport/chttp2/transport/hpack_encoder.h"
 #include "src/core/ext/transport/chttp2/transport/hpack_parser.h"
 #include "src/core/ext/transport/chttp2/transport/http2_settings.h"
 #include "src/core/ext/transport/chttp2/transport/stream_map.h"
 #include "src/core/lib/channel/channelz.h"
 #include "src/core/lib/debug/trace.h"
 #include "src/core/lib/gprpp/bitset.h"
 #include "src/core/lib/gprpp/debug_location.h"
+#include "src/core/lib/gprpp/manual_constructor.h"
+#include "src/core/lib/gprpp/orphanable.h"
 #include "src/core/lib/gprpp/ref_counted.h"
 #include "src/core/lib/gprpp/ref_counted_ptr.h"
 #include "src/core/lib/gprpp/time.h"
 #include "src/core/lib/iomgr/closure.h"
 #include "src/core/lib/iomgr/combiner.h"
 #include "src/core/lib/iomgr/endpoint.h"
 #include "src/core/lib/iomgr/error.h"
 #include "src/core/lib/iomgr/timer.h"
 #include "src/core/lib/resource_quota/arena.h"
 #include "src/core/lib/resource_quota/memory_quota.h"
-#include "src/core/lib/slice/slice_buffer.h"
+#include "src/core/lib/transport/byte_stream.h"
 #include "src/core/lib/transport/connectivity_state.h"
 #include "src/core/lib/transport/metadata_batch.h"
 #include "src/core/lib/transport/transport.h"
 #include "src/core/lib/transport/transport_fwd.h"
 #include "src/core/lib/transport/transport_impl.h"
@@ -228,6 +230,76 @@ typedef struct grpc_chttp2_write_cb {
   struct grpc_chttp2_write_cb* next;
 } grpc_chttp2_write_cb;
 
+namespace grpc_core {
+
+class Chttp2IncomingByteStream : public ByteStream {
+ public:
+  Chttp2IncomingByteStream(grpc_chttp2_transport* transport,
+                           grpc_chttp2_stream* stream, uint32_t frame_size,
+                           uint32_t flags);
+
+  void Orphan() override;
+
+  bool Next(size_t max_size_hint, grpc_closure* on_complete) override;
+  grpc_error_handle Pull(grpc_slice* slice) override;
+  void Shutdown(grpc_error_handle error) override;
+
+  // TODO(roth): When I converted this class to C++, I wanted to make it
+  // inherit from RefCounted or InternallyRefCounted instead of continuing
+  // to use its own custom ref-counting code.  However, that would require
+  // using multiple inheritance, which sucks in general.  And to make matters
+  // worse, it causes problems with our New<> and Delete<> wrappers.
+  // Specifically, unless RefCounted is first in the list of parent classes,
+  // it will see a different value of the address of the object than the one
+  // we actually allocated, in which case gpr_free() will be called on a
+  // different address than the one we got from gpr_malloc(), thus causing a
+  // crash.  Given the fragility of depending on that, as well as a desire to
+  // avoid multiple inheritance in general, I've decided to leave this
+  // alone for now.  We can revisit this once we're able to link against
+  // libc++, at which point we can eliminate New<> and Delete<> and
+  // switch to std::shared_ptr<>.
+  void Ref() { refs_.Ref(); }
+  void Unref() {
+    if (GPR_UNLIKELY(refs_.Unref())) {
+      delete this;
+    }
+  }
+
+  void PublishError(grpc_error_handle error);
+
+  grpc_error_handle Push(const grpc_slice& slice, grpc_slice* slice_out);
+
+  grpc_error_handle Finished(grpc_error_handle error, bool reset_on_error);
+
+  uint32_t remaining_bytes() const { return remaining_bytes_; }
+
+ private:
+  static void NextLocked(void* arg, grpc_error_handle error_ignored);
+  static void OrphanLocked(void* arg, grpc_error_handle error_ignored);
+
+  grpc_chttp2_transport* transport_;  // Immutable.
+  grpc_chttp2_stream* stream_;        // Immutable.
+
+  RefCount refs_;
+
+  /* Accessed only by transport thread when stream->pending_byte_stream == false
+   * Accessed only by application thread when stream->pending_byte_stream ==
+   * true */
+  uint32_t remaining_bytes_;
+
+  /* Accessed only by transport thread when stream->pending_byte_stream == false
+   * Accessed only by application thread when stream->pending_byte_stream ==
+   * true */
+  struct {
+    grpc_closure closure;
+    size_t max_size_hint;
+    grpc_closure* on_complete;
+  } next_action_;
+  grpc_closure destroy_action_;
+};
+
+}  // namespace grpc_core
+
 typedef enum {
   GRPC_CHTTP2_KEEPALIVE_STATE_WAITING,
   GRPC_CHTTP2_KEEPALIVE_STATE_PINGING,
@@ -238,210 +310,214 @@ typedef enum {
 struct grpc_chttp2_transport {
   grpc_chttp2_transport(const grpc_channel_args* channel_args,
                         grpc_endpoint* ep, bool is_client);
   ~grpc_chttp2_transport();
 
   grpc_transport base; /* must be first */
   grpc_core::RefCount refs;
   grpc_endpoint* ep;
   std::string peer_string;
 
   grpc_core::MemoryOwner memory_owner;
   const grpc_core::MemoryAllocator::Reservation self_reservation;
   grpc_core::ReclamationSweep active_reclamation;
 
   grpc_core::Combiner* combiner;
 
   grpc_closure* notify_on_receive_settings = nullptr;
   grpc_closure* notify_on_close = nullptr;
 
   /** write execution state of the transport */
   grpc_chttp2_write_state write_state = GRPC_CHTTP2_WRITE_STATE_IDLE;
 
   /** is the transport destroying itself? */
   uint8_t destroying = false;
   /** has the upper layer closed the transport? */
   grpc_error_handle closed_with_error = GRPC_ERROR_NONE;
 
   /** is there a read request to the endpoint outstanding? */
   uint8_t endpoint_reading = 1;
 
   /** various lists of streams */
   grpc_chttp2_stream_list lists[STREAM_LIST_COUNT] = {};
 
   /** maps stream id to grpc_chttp2_stream objects */
   grpc_chttp2_stream_map stream_map;
 
   grpc_closure write_action_begin_locked;
   grpc_closure write_action;
   grpc_closure write_action_end_locked;
 
   grpc_closure read_action_locked;
 
   /** incoming read bytes */
   grpc_slice_buffer read_buffer;
 
   /** address to place a newly accepted stream - set and unset by
       grpc_chttp2_parsing_accept_stream; used by init_stream to
       publish the accepted server stream */
   grpc_chttp2_stream** accepting_stream = nullptr;
 
   /* accept stream callback */
   void (*accept_stream_cb)(void* user_data, grpc_transport* transport,
                            const void* server_data);
   void* accept_stream_cb_user_data;
 
   /** connectivity tracking */
   grpc_core::ConnectivityStateTracker state_tracker;
 
   /** data to write now */
   grpc_slice_buffer outbuf;
   /** hpack encoding */
   grpc_core::HPackCompressor hpack_compressor;
   /** is this a client? */
   bool is_client;
 
   /** data to write next write */
   grpc_slice_buffer qbuf;
 
   /** how much data are we willing to buffer when the WRITE_BUFFER_HINT is set?
    */
   uint32_t write_buffer_size = grpc_core::chttp2::kDefaultWindow;
 
   /** Set to a grpc_error object if a goaway frame is received. By default, set
    * to GRPC_ERROR_NONE */
   grpc_error_handle goaway_error = GRPC_ERROR_NONE;
 
   grpc_chttp2_sent_goaway_state sent_goaway_state = GRPC_CHTTP2_NO_GOAWAY_SEND;
 
   /** are the local settings dirty and need to be sent? */
   bool dirtied_local_settings = true;
   /** have local settings been sent? */
   bool sent_local_settings = false;
   /** bitmask of setting indexes to send out
       Hack: it's common for implementations to assume 65536 bytes initial send
       window -- this should by rights be 0 */
   uint32_t force_send_settings = 1 << GRPC_CHTTP2_SETTINGS_INITIAL_WINDOW_SIZE;
   /** settings values */
   uint32_t settings[GRPC_NUM_SETTING_SETS][GRPC_CHTTP2_NUM_SETTINGS];
 
   /** what is the next stream id to be allocated by this peer?
       copied to next_stream_id in parsing when parsing commences */
   uint32_t next_stream_id = 0;
 
   /** last new stream id */
   uint32_t last_new_stream_id = 0;
 
   /** ping queues for various ping insertion points */
   grpc_chttp2_ping_queue ping_queue = grpc_chttp2_ping_queue();
   grpc_chttp2_repeated_ping_policy ping_policy;
   grpc_chttp2_repeated_ping_state ping_state;
   uint64_t ping_ctr = 0; /* unique id for pings */
   grpc_closure retry_initiate_ping_locked;
 
   /** ping acks */
   size_t ping_ack_count = 0;
   size_t ping_ack_capacity = 0;
   uint64_t* ping_acks = nullptr;
   grpc_chttp2_server_ping_recv_state ping_recv_state;
 
   /** parser for headers */
   grpc_core::HPackParser hpack_parser;
   /** simple one shot parsers */
   union {
     grpc_chttp2_window_update_parser window_update;
     grpc_chttp2_settings_parser settings;
     grpc_chttp2_ping_parser ping;
     grpc_chttp2_rst_stream_parser rst_stream;
   } simple;
   /** parser for goaway frames */
   grpc_chttp2_goaway_parser goaway_parser;
 
-  grpc_core::chttp2::TransportFlowControl flow_control;
+  grpc_core::PolymorphicManualConstructor<
+      grpc_core::chttp2::TransportFlowControlBase,
+      grpc_core::chttp2::TransportFlowControl,
+      grpc_core::chttp2::TransportFlowControlDisabled>
+      flow_control;
   /** initial window change. This is tracked as we parse settings frames from
    * the remote peer. If there is a positive delta, then we will make all
    * streams readable since they may have become unstalled */
   int64_t initial_window_update = 0;
 
   /* deframing */
   grpc_chttp2_deframe_transport_state deframe_state = GRPC_DTS_CLIENT_PREFIX_0;
   uint8_t incoming_frame_type = 0;
   uint8_t incoming_frame_flags = 0;
   uint8_t header_eof = 0;
   bool is_first_frame = true;
   uint32_t expect_continuation_stream_id = 0;
   uint32_t incoming_frame_size = 0;
   uint32_t incoming_stream_id = 0;
 
   /* active parser */
   void* parser_data = nullptr;
   grpc_chttp2_stream* incoming_stream = nullptr;
   grpc_error_handle (*parser)(void* parser_user_data, grpc_chttp2_transport* t,
                               grpc_chttp2_stream* s, const grpc_slice& slice,
                               int is_last);
 
   grpc_chttp2_write_cb* write_cb_pool = nullptr;
 
   /* bdp estimator */
   bool bdp_ping_blocked =
       false; /* Is the BDP blocked due to not receiving any data? */
   grpc_closure next_bdp_ping_timer_expired_locked;
   grpc_closure start_bdp_ping_locked;
   grpc_closure finish_bdp_ping_locked;
 
   /* if non-NULL, close the transport with this error when writes are finished
    */
   grpc_error_handle close_transport_on_writes_finished = GRPC_ERROR_NONE;
 
   /* a list of closures to run after writes are finished */
   grpc_closure_list run_after_write = GRPC_CLOSURE_LIST_INIT;
 
   /* buffer pool state */
   /** have we scheduled a benign cleanup? */
   bool benign_reclaimer_registered = false;
   /** have we scheduled a destructive cleanup? */
   bool destructive_reclaimer_registered = false;
   /** benign cleanup closure */
   grpc_closure benign_reclaimer_locked;
   /** destructive cleanup closure */
   grpc_closure destructive_reclaimer_locked;
 
   /* next bdp ping timer */
   bool have_next_bdp_ping_timer = false;
   /** If start_bdp_ping_locked has been called */
   bool bdp_ping_started = false;
   grpc_timer next_bdp_ping_timer;
 
   /* keep-alive ping support */
   /** Closure to initialize a keepalive ping */
   grpc_closure init_keepalive_ping_locked;
   /** Closure to run when the keepalive ping is sent */
   grpc_closure start_keepalive_ping_locked;
   /** Cousure to run when the keepalive ping ack is received */
   grpc_closure finish_keepalive_ping_locked;
   /** Closrue to run when the keepalive ping timeouts */
   grpc_closure keepalive_watchdog_fired_locked;
   /** timer to initiate ping events */
   grpc_timer keepalive_ping_timer;
   /** watchdog to kill the transport when waiting for the keepalive ping */
   grpc_timer keepalive_watchdog_timer;
   /** time duration in between pings */
   grpc_core::Duration keepalive_time;
   /** grace period for a ping to complete before watchdog kicks in */
   grpc_core::Duration keepalive_timeout;
   /** if keepalive pings are allowed when there's no outstanding streams */
   bool keepalive_permit_without_calls = false;
   /** If start_keepalive_ping_locked has been called */
   bool keepalive_ping_started = false;
   /** keep-alive state machine state */
   grpc_chttp2_keepalive_state keepalive_state;
   grpc_core::ContextList* cl = nullptr;
   grpc_core::RefCountedPtr<grpc_core::channelz::SocketNode> channelz_socket;
   uint32_t num_messages_in_next_write = 0;
   /** The number of pending induced frames (SETTINGS_ACK, PINGS_ACK and
    * RST_STREAM) in the outgoing buffer (t->qbuf). If this number goes beyond
    * DEFAULT_MAX_PENDING_INDUCED_FRAMES, we pause reading new frames. We would
    * only continue reading when we are able to write to the socket again,
    * thereby reducing the number of induced frames. */
   uint32_t num_pending_induced_frames = 0;
   bool reading_paused_on_pending_induced_frames = false;
 };
@@ -456,125 +532,152 @@ typedef enum {
 struct grpc_chttp2_stream {
   grpc_chttp2_stream(grpc_chttp2_transport* t, grpc_stream_refcount* refcount,
                      const void* server_data, grpc_core::Arena* arena);
   ~grpc_chttp2_stream();
 
   void* context;
   grpc_chttp2_transport* t;
   grpc_stream_refcount* refcount;
   // Reffer is a 0-len structure, simply reffing `t` and `refcount` in its ctor
   // before initializing the rest of the stream, to avoid cache misses. This
   // field MUST be right after `t` and `refcount`.
   struct Reffer {
     explicit Reffer(grpc_chttp2_stream* s);
   } reffer;
 
   grpc_closure destroy_stream;
   grpc_closure* destroy_stream_arg;
 
   grpc_chttp2_stream_link links[STREAM_LIST_COUNT];
   grpc_core::BitSet<STREAM_LIST_COUNT> included;
 
   /** HTTP2 stream id for this stream, or zero if one has not been assigned */
   uint32_t id = 0;
 
   /** things the upper layers would like to send */
   grpc_metadata_batch* send_initial_metadata = nullptr;
   grpc_closure* send_initial_metadata_finished = nullptr;
   grpc_metadata_batch* send_trailing_metadata = nullptr;
   // TODO(yashykt): Find a better name for the below field and others in this
   //                struct to betteer distinguish inputs, return values, and
   //                internal state.
   // sent_trailing_metadata_op allows the transport to fill in to the upper
   // layer whether this stream was able to send its trailing metadata (used for
   // detecting cancellation on the server-side)..
   bool* sent_trailing_metadata_op = nullptr;
   grpc_closure* send_trailing_metadata_finished = nullptr;
 
+  grpc_core::OrphanablePtr<grpc_core::ByteStream> fetching_send_message;
+  uint32_t fetched_send_message_length = 0;
+  grpc_slice fetching_slice = grpc_empty_slice();
   int64_t next_message_end_offset;
   int64_t flow_controlled_bytes_written = 0;
   int64_t flow_controlled_bytes_flowed = 0;
-  grpc_closure* send_message_finished = nullptr;
+  grpc_closure complete_fetch_locked;
+  grpc_closure* fetching_send_message_finished = nullptr;
 
   grpc_metadata_batch* recv_initial_metadata;
   grpc_closure* recv_initial_metadata_ready = nullptr;
   bool* trailing_metadata_available = nullptr;
-  absl::optional<grpc_core::SliceBuffer>* recv_message = nullptr;
-  uint32_t* recv_message_flags = nullptr;
+  grpc_core::OrphanablePtr<grpc_core::ByteStream>* recv_message = nullptr;
   bool* call_failed_before_recv_message = nullptr;
   grpc_closure* recv_message_ready = nullptr;
   grpc_metadata_batch* recv_trailing_metadata;
   grpc_closure* recv_trailing_metadata_finished = nullptr;
 
   grpc_transport_stream_stats* collecting_stats = nullptr;
   grpc_transport_stream_stats stats = grpc_transport_stream_stats();
 
   /** Is this stream closed for writing. */
   bool write_closed = false;
   /** Is this stream reading half-closed. */
   bool read_closed = false;
   /** Are all published incoming byte streams closed. */
   bool all_incoming_byte_streams_finished = false;
   /** Has this stream seen an error.
       If true, then pending incoming frames can be thrown away. */
   bool seen_error = false;
   /** Are we buffering writes on this stream? If yes, we won't become writable
       until there's enough queued up in the flow_controlled_buffer */
   bool write_buffering = false;
 
   /* have we sent or received the EOS bit? */
   bool eos_received = false;
   bool eos_sent = false;
 
   /** the error that resulted in this stream being read-closed */
   grpc_error_handle read_closed_error = GRPC_ERROR_NONE;
   /** the error that resulted in this stream being write-closed */
   grpc_error_handle write_closed_error = GRPC_ERROR_NONE;
 
   grpc_published_metadata_method published_metadata[2] = {};
   bool final_metadata_requested = false;
 
   grpc_metadata_batch initial_metadata_buffer;
   grpc_metadata_batch trailing_metadata_buffer;
 
-  grpc_slice_buffer frame_storage;  /* protected by t combiner */
+  grpc_slice_buffer frame_storage; /* protected by t combiner */
+
+  grpc_closure* on_next = nullptr;  /* protected by t combiner */
+  bool pending_byte_stream = false; /* protected by t combiner */
+  // cached length of buffer to be used by the transport thread in cases where
+  // stream->pending_byte_stream == true. The value is saved before
+  // application threads are allowed to modify
+  // unprocessed_incoming_frames_buffer
+  size_t unprocessed_incoming_frames_buffer_cached_length = 0;
+  /* Accessed only by transport thread when stream->pending_byte_stream == false
+   * Accessed only by application thread when stream->pending_byte_stream ==
+   * true */
+  grpc_slice_buffer unprocessed_incoming_frames_buffer;
+  grpc_closure reset_byte_stream;
+  grpc_error_handle byte_stream_error =
+      GRPC_ERROR_NONE;              /* protected by t combiner */
   bool received_last_frame = false; /* protected by t combiner */
 
   grpc_core::Timestamp deadline = grpc_core::Timestamp::InfFuture();
 
   /** saw some stream level error */
   grpc_error_handle forced_close_error = GRPC_ERROR_NONE;
   /** how many header frames have we received? */
   uint8_t header_frames_received = 0;
+  /** parsing state for data frames */
+  /* Accessed only by transport thread when stream->pending_byte_stream == false
+   * Accessed only by application thread when stream->pending_byte_stream ==
+   * true */
+  grpc_chttp2_data_parser data_parser;
   /** number of bytes received - reset at end of parse thread execution */
   int64_t received_bytes = 0;
 
   bool sent_initial_metadata = false;
   bool sent_trailing_metadata = false;
 
-  grpc_core::chttp2::StreamFlowControl flow_control;
+  grpc_core::PolymorphicManualConstructor<
+      grpc_core::chttp2::StreamFlowControlBase,
+      grpc_core::chttp2::StreamFlowControl,
+      grpc_core::chttp2::StreamFlowControlDisabled>
+      flow_control;
 
   grpc_slice_buffer flow_controlled_buffer;
 
   grpc_chttp2_write_cb* on_flow_controlled_cbs = nullptr;
   grpc_chttp2_write_cb* on_write_finished_cbs = nullptr;
   grpc_chttp2_write_cb* finish_after_write = nullptr;
   size_t sending_bytes = 0;
 
   /** Whether the bytes needs to be traced using Fathom */
   bool traced = false;
   /** Byte counter for number of bytes written */
   size_t byte_counter = 0;
 };
 
 /** Transport writing call flow:
     grpc_chttp2_initiate_write() is called anywhere that we know bytes need to
     go out on the wire.
     If no other write has been started, a task is enqueued onto our workqueue.
     When that task executes, it obtains the global lock, and gathers the data
     to write.
     The global lock is dropped and we do the syscall to write.
     After writing, a follow-up check is made to see if another round of writing
     should be performed.
 
     The actual call chain is documented in the implementation of this function.
     */
diff --git a/src/core/ext/transport/chttp2/transport/parsing.cc b/src/core/ext/transport/chttp2/transport/parsing.cc
index 3ffeee8128..2c6f06f319 100644
--- a/src/core/ext/transport/chttp2/transport/parsing.cc
+++ b/src/core/ext/transport/chttp2/transport/parsing.cc
@@ -1,57 +1,56 @@
 /*
  *
  * Copyright 2015 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #include <grpc/support/port_platform.h>
 
 #include <stdint.h>
 #include <string.h>
 
 #include <string>
 
 #include "absl/base/attributes.h"
-#include "absl/status/status.h"
 #include "absl/strings/str_cat.h"
 #include "absl/strings/str_format.h"
 
 #include <grpc/slice.h>
 #include <grpc/support/log.h>
 
 #include "src/core/ext/transport/chttp2/transport/flow_control.h"
 #include "src/core/ext/transport/chttp2/transport/frame.h"
 #include "src/core/ext/transport/chttp2/transport/frame_data.h"
 #include "src/core/ext/transport/chttp2/transport/frame_goaway.h"
 #include "src/core/ext/transport/chttp2/transport/frame_ping.h"
 #include "src/core/ext/transport/chttp2/transport/frame_rst_stream.h"
 #include "src/core/ext/transport/chttp2/transport/frame_settings.h"
 #include "src/core/ext/transport/chttp2/transport/frame_window_update.h"
 #include "src/core/ext/transport/chttp2/transport/hpack_encoder.h"
 #include "src/core/ext/transport/chttp2/transport/hpack_parser.h"
 #include "src/core/ext/transport/chttp2/transport/hpack_parser_table.h"
 #include "src/core/ext/transport/chttp2/transport/http2_settings.h"
 #include "src/core/ext/transport/chttp2/transport/internal.h"
 #include "src/core/ext/transport/chttp2/transport/stream_map.h"
 #include "src/core/lib/channel/channelz.h"
 #include "src/core/lib/debug/trace.h"
+#include "src/core/lib/gprpp/manual_constructor.h"
 #include "src/core/lib/gprpp/ref_counted_ptr.h"
 #include "src/core/lib/gprpp/time.h"
 #include "src/core/lib/iomgr/error.h"
 #include "src/core/lib/transport/bdp_estimator.h"
-#include "src/core/lib/transport/error_utils.h"
 #include "src/core/lib/transport/http2_errors.h"
 #include "src/core/lib/transport/metadata_batch.h"
 #include "src/core/lib/transport/transport.h"
@@ -82,196 +81,197 @@ static char get_utf8_safe_char(char c) {
 grpc_error_handle grpc_chttp2_perform_read(grpc_chttp2_transport* t,
                                            const grpc_slice& slice) {
   const uint8_t* beg = GRPC_SLICE_START_PTR(slice);
   const uint8_t* end = GRPC_SLICE_END_PTR(slice);
   const uint8_t* cur = beg;
   grpc_error_handle err;
 
   if (cur == end) return GRPC_ERROR_NONE;
 
   switch (t->deframe_state) {
     case GRPC_DTS_CLIENT_PREFIX_0:
     case GRPC_DTS_CLIENT_PREFIX_1:
     case GRPC_DTS_CLIENT_PREFIX_2:
     case GRPC_DTS_CLIENT_PREFIX_3:
     case GRPC_DTS_CLIENT_PREFIX_4:
     case GRPC_DTS_CLIENT_PREFIX_5:
     case GRPC_DTS_CLIENT_PREFIX_6:
     case GRPC_DTS_CLIENT_PREFIX_7:
     case GRPC_DTS_CLIENT_PREFIX_8:
     case GRPC_DTS_CLIENT_PREFIX_9:
     case GRPC_DTS_CLIENT_PREFIX_10:
     case GRPC_DTS_CLIENT_PREFIX_11:
     case GRPC_DTS_CLIENT_PREFIX_12:
     case GRPC_DTS_CLIENT_PREFIX_13:
     case GRPC_DTS_CLIENT_PREFIX_14:
     case GRPC_DTS_CLIENT_PREFIX_15:
     case GRPC_DTS_CLIENT_PREFIX_16:
     case GRPC_DTS_CLIENT_PREFIX_17:
     case GRPC_DTS_CLIENT_PREFIX_18:
     case GRPC_DTS_CLIENT_PREFIX_19:
     case GRPC_DTS_CLIENT_PREFIX_20:
     case GRPC_DTS_CLIENT_PREFIX_21:
     case GRPC_DTS_CLIENT_PREFIX_22:
     case GRPC_DTS_CLIENT_PREFIX_23:
       while (cur != end && t->deframe_state != GRPC_DTS_FH_0) {
         if (*cur != GRPC_CHTTP2_CLIENT_CONNECT_STRING[t->deframe_state]) {
           return GRPC_ERROR_CREATE_FROM_CPP_STRING(absl::StrFormat(
               "Connect string mismatch: expected '%c' (%d) got '%c' (%d) "
               "at byte %d",
               get_utf8_safe_char(
                   GRPC_CHTTP2_CLIENT_CONNECT_STRING[t->deframe_state]),
               static_cast<int>(static_cast<uint8_t>(
                   GRPC_CHTTP2_CLIENT_CONNECT_STRING[t->deframe_state])),
               get_utf8_safe_char(*cur), static_cast<int>(*cur),
               t->deframe_state));
         }
         ++cur;
         // NOLINTNEXTLINE(bugprone-misplaced-widening-cast)
         t->deframe_state = static_cast<grpc_chttp2_deframe_transport_state>(
             1 + static_cast<int>(t->deframe_state));
       }
       if (cur == end) {
         return GRPC_ERROR_NONE;
       }
     dts_fh_0:
       ABSL_FALLTHROUGH_INTENDED;
     case GRPC_DTS_FH_0:
       GPR_DEBUG_ASSERT(cur < end);
       t->incoming_frame_size = (static_cast<uint32_t>(*cur)) << 16;
       if (++cur == end) {
         t->deframe_state = GRPC_DTS_FH_1;
         return GRPC_ERROR_NONE;
       }
       ABSL_FALLTHROUGH_INTENDED;
     case GRPC_DTS_FH_1:
       GPR_DEBUG_ASSERT(cur < end);
       t->incoming_frame_size |= (static_cast<uint32_t>(*cur)) << 8;
       if (++cur == end) {
         t->deframe_state = GRPC_DTS_FH_2;
         return GRPC_ERROR_NONE;
       }
       ABSL_FALLTHROUGH_INTENDED;
     case GRPC_DTS_FH_2:
       GPR_DEBUG_ASSERT(cur < end);
       t->incoming_frame_size |= *cur;
       if (++cur == end) {
         t->deframe_state = GRPC_DTS_FH_3;
         return GRPC_ERROR_NONE;
       }
       ABSL_FALLTHROUGH_INTENDED;
     case GRPC_DTS_FH_3:
       GPR_DEBUG_ASSERT(cur < end);
       t->incoming_frame_type = *cur;
       if (++cur == end) {
         t->deframe_state = GRPC_DTS_FH_4;
         return GRPC_ERROR_NONE;
       }
       ABSL_FALLTHROUGH_INTENDED;
     case GRPC_DTS_FH_4:
       GPR_DEBUG_ASSERT(cur < end);
       t->incoming_frame_flags = *cur;
       if (++cur == end) {
         t->deframe_state = GRPC_DTS_FH_5;
         return GRPC_ERROR_NONE;
       }
       ABSL_FALLTHROUGH_INTENDED;
     case GRPC_DTS_FH_5:
       GPR_DEBUG_ASSERT(cur < end);
       t->incoming_stream_id = ((static_cast<uint32_t>(*cur)) & 0x7f) << 24;
       if (++cur == end) {
         t->deframe_state = GRPC_DTS_FH_6;
         return GRPC_ERROR_NONE;
       }
       ABSL_FALLTHROUGH_INTENDED;
     case GRPC_DTS_FH_6:
       GPR_DEBUG_ASSERT(cur < end);
       t->incoming_stream_id |= (static_cast<uint32_t>(*cur)) << 16;
       if (++cur == end) {
         t->deframe_state = GRPC_DTS_FH_7;
         return GRPC_ERROR_NONE;
       }
       ABSL_FALLTHROUGH_INTENDED;
     case GRPC_DTS_FH_7:
       GPR_DEBUG_ASSERT(cur < end);
       t->incoming_stream_id |= (static_cast<uint32_t>(*cur)) << 8;
       if (++cur == end) {
         t->deframe_state = GRPC_DTS_FH_8;
         return GRPC_ERROR_NONE;
       }
       ABSL_FALLTHROUGH_INTENDED;
     case GRPC_DTS_FH_8:
       GPR_DEBUG_ASSERT(cur < end);
       t->incoming_stream_id |= (static_cast<uint32_t>(*cur));
       t->deframe_state = GRPC_DTS_FRAME;
       err = init_frame_parser(t);
       if (err != GRPC_ERROR_NONE) {
         return err;
       }
       if (t->incoming_frame_size == 0) {
         err = parse_frame_slice(t, grpc_empty_slice(), 1);
         if (err != GRPC_ERROR_NONE) {
           return err;
         }
         t->incoming_stream = nullptr;
         if (++cur == end) {
           t->deframe_state = GRPC_DTS_FH_0;
           return GRPC_ERROR_NONE;
         }
         goto dts_fh_0; /* loop */
-      } else if (t->incoming_frame_size >
-                 t->settings[GRPC_ACKED_SETTINGS]
-                            [GRPC_CHTTP2_SETTINGS_MAX_FRAME_SIZE]) {
+      } else if (t->flow_control->flow_control_enabled() &&
+                 t->incoming_frame_size >
+                     t->settings[GRPC_ACKED_SETTINGS]
+                                [GRPC_CHTTP2_SETTINGS_MAX_FRAME_SIZE]) {
         return GRPC_ERROR_CREATE_FROM_CPP_STRING(
             absl::StrFormat("Frame size %d is larger than max frame size %d",
                             t->incoming_frame_size,
                             t->settings[GRPC_ACKED_SETTINGS]
                                        [GRPC_CHTTP2_SETTINGS_MAX_FRAME_SIZE]));
       }
       if (++cur == end) {
         return GRPC_ERROR_NONE;
       }
       ABSL_FALLTHROUGH_INTENDED;
     case GRPC_DTS_FRAME:
       GPR_DEBUG_ASSERT(cur < end);
       if (static_cast<uint32_t>(end - cur) == t->incoming_frame_size) {
         err = parse_frame_slice(
             t,
             grpc_slice_sub_no_ref(slice, static_cast<size_t>(cur - beg),
                                   static_cast<size_t>(end - beg)),
             1);
         if (err != GRPC_ERROR_NONE) {
           return err;
         }
         t->deframe_state = GRPC_DTS_FH_0;
         t->incoming_stream = nullptr;
         return GRPC_ERROR_NONE;
       } else if (static_cast<uint32_t>(end - cur) > t->incoming_frame_size) {
         size_t cur_offset = static_cast<size_t>(cur - beg);
         err = parse_frame_slice(
             t,
             grpc_slice_sub_no_ref(slice, cur_offset,
                                   cur_offset + t->incoming_frame_size),
             1);
         if (err != GRPC_ERROR_NONE) {
           return err;
         }
         cur += t->incoming_frame_size;
         t->incoming_stream = nullptr;
         goto dts_fh_0; /* loop */
       } else {
         err = parse_frame_slice(
             t,
             grpc_slice_sub_no_ref(slice, static_cast<size_t>(cur - beg),
                                   static_cast<size_t>(end - beg)),
             0);
         if (err != GRPC_ERROR_NONE) {
           return err;
         }
         t->incoming_frame_size -= static_cast<uint32_t>(end - cur);
         return GRPC_ERROR_NONE;
       }
       GPR_UNREACHABLE_CODE(return GRPC_ERROR_NONE);
   }
 
   GPR_UNREACHABLE_CODE(return GRPC_ERROR_NONE);
 }
@@ -384,195 +384,195 @@ void grpc_chttp2_parsing_become_skip_parser(grpc_chttp2_transport* t) {
 
 static grpc_error_handle init_data_frame_parser(grpc_chttp2_transport* t) {
   // Update BDP accounting since we have received a data frame.
-  grpc_core::BdpEstimator* bdp_est = t->flow_control.bdp_estimator();
+  grpc_core::BdpEstimator* bdp_est = t->flow_control->bdp_estimator();
   if (bdp_est) {
     if (t->bdp_ping_blocked) {
       t->bdp_ping_blocked = false;
       GRPC_CHTTP2_REF_TRANSPORT(t, "bdp_ping");
       schedule_bdp_ping_locked(t);
     }
     bdp_est->AddIncomingBytes(t->incoming_frame_size);
   }
   grpc_chttp2_stream* s =
       grpc_chttp2_parsing_lookup_stream(t, t->incoming_stream_id);
-  absl::Status status;
+  grpc_error_handle err = GRPC_ERROR_NONE;
   grpc_core::chttp2::FlowControlAction action;
   if (s == nullptr) {
-    status = t->flow_control.RecvData(t->incoming_frame_size);
-    action = t->flow_control.MakeAction();
+    err = t->flow_control->RecvData(t->incoming_frame_size);
+    action = t->flow_control->MakeAction();
   } else {
-    status = s->flow_control.RecvData(t->incoming_frame_size);
-    action = s->flow_control.MakeAction();
+    err = s->flow_control->RecvData(t->incoming_frame_size);
+    action = s->flow_control->MakeAction();
   }
   grpc_chttp2_act_on_flowctl_action(action, t, s);
-  if (!status.ok()) {
+  if (err != GRPC_ERROR_NONE) {
     goto error_handler;
   }
   if (s == nullptr) {
     return init_non_header_skip_frame_parser(t);
   }
   s->received_bytes += t->incoming_frame_size;
   s->stats.incoming.framing_bytes += 9;
-  if (s->read_closed) {
+  if (err == GRPC_ERROR_NONE && s->read_closed) {
     return init_non_header_skip_frame_parser(t);
   }
-  status =
-      grpc_chttp2_data_parser_begin_frame(t->incoming_frame_flags, s->id, s);
+  if (err == GRPC_ERROR_NONE) {
+    err = grpc_chttp2_data_parser_begin_frame(
+        &s->data_parser, t->incoming_frame_flags, s->id, s);
+  }
 error_handler:
-  if (status.ok()) {
+  intptr_t unused;
+  if (err == GRPC_ERROR_NONE) {
     t->incoming_stream = s;
     /* t->parser = grpc_chttp2_data_parser_parse;*/
     t->parser = grpc_chttp2_data_parser_parse;
-    t->parser_data = nullptr;
+    t->parser_data = &s->data_parser;
     t->ping_state.last_ping_sent_time = grpc_core::Timestamp::InfPast();
     return GRPC_ERROR_NONE;
-  } else if (s != nullptr) {
+  } else if (grpc_error_get_int(err, GRPC_ERROR_INT_STREAM_ID, &unused)) {
     /* handle stream errors by closing the stream */
-    grpc_chttp2_mark_stream_closed(t, s, true, false,
-                                   absl_status_to_grpc_error(status));
+    if (s != nullptr) {
+      grpc_chttp2_mark_stream_closed(t, s, true, false, err);
+    }
     grpc_chttp2_add_rst_stream_to_next_write(t, t->incoming_stream_id,
                                              GRPC_HTTP2_PROTOCOL_ERROR,
                                              &s->stats.outgoing);
     return init_non_header_skip_frame_parser(t);
   } else {
-    return absl_status_to_grpc_error(status);
+    return err;
   }
 }
 
 static grpc_error_handle init_header_frame_parser(grpc_chttp2_transport* t,
                                                   int is_continuation) {
   const bool is_eoh =
       (t->incoming_frame_flags & GRPC_CHTTP2_DATA_FLAG_END_HEADERS) != 0;
   grpc_chttp2_stream* s;
 
   /* TODO(ctiller): when to increment header_frames_received? */
 
   if (is_eoh) {
     t->expect_continuation_stream_id = 0;
   } else {
     t->expect_continuation_stream_id = t->incoming_stream_id;
   }
 
   if (!is_continuation) {
     t->header_eof =
         (t->incoming_frame_flags & GRPC_CHTTP2_DATA_FLAG_END_STREAM) != 0;
   }
 
   const auto priority_type = !is_continuation && (t->incoming_frame_flags &
                                                   GRPC_CHTTP2_FLAG_HAS_PRIORITY)
                                  ? HPackParser::Priority::Included
                                  : HPackParser::Priority::None;
 
   t->ping_state.last_ping_sent_time = grpc_core::Timestamp::InfPast();
 
   /* could be a new grpc_chttp2_stream or an existing grpc_chttp2_stream */
   s = grpc_chttp2_parsing_lookup_stream(t, t->incoming_stream_id);
   if (s == nullptr) {
     if (GPR_UNLIKELY(is_continuation)) {
       GRPC_CHTTP2_IF_TRACING(
           gpr_log(GPR_ERROR,
                   "grpc_chttp2_stream disbanded before CONTINUATION received"));
       return init_header_skip_frame_parser(t, priority_type);
     }
     if (t->is_client) {
       if (GPR_LIKELY((t->incoming_stream_id & 1) &&
                      t->incoming_stream_id < t->next_stream_id)) {
         /* this is an old (probably cancelled) grpc_chttp2_stream */
       } else {
         GRPC_CHTTP2_IF_TRACING(gpr_log(
             GPR_ERROR, "ignoring new grpc_chttp2_stream creation on client"));
       }
       return init_header_skip_frame_parser(t, priority_type);
     } else if (GPR_UNLIKELY(t->last_new_stream_id >= t->incoming_stream_id)) {
       GRPC_CHTTP2_IF_TRACING(gpr_log(
           GPR_ERROR,
           "ignoring out of order new grpc_chttp2_stream request on server; "
           "last grpc_chttp2_stream "
           "id=%d, new grpc_chttp2_stream id=%d",
           t->last_new_stream_id, t->incoming_stream_id));
       return init_header_skip_frame_parser(t, priority_type);
     } else if (GPR_UNLIKELY((t->incoming_stream_id & 1) == 0)) {
       GRPC_CHTTP2_IF_TRACING(gpr_log(
           GPR_ERROR,
           "ignoring grpc_chttp2_stream with non-client generated index %d",
           t->incoming_stream_id));
       return init_header_skip_frame_parser(t, priority_type);
     } else if (GPR_UNLIKELY(
                    grpc_chttp2_stream_map_size(&t->stream_map) >=
                    t->settings[GRPC_ACKED_SETTINGS]
                               [GRPC_CHTTP2_SETTINGS_MAX_CONCURRENT_STREAMS])) {
       return GRPC_ERROR_CREATE_FROM_STATIC_STRING("Max stream count exceeded");
     } else if (t->sent_goaway_state == GRPC_CHTTP2_FINAL_GOAWAY_SENT) {
       GRPC_CHTTP2_IF_TRACING(gpr_log(
           GPR_INFO,
           "transport:%p SERVER peer:%s Final GOAWAY sent. Ignoring new "
           "grpc_chttp2_stream request id=%d, last grpc_chttp2_stream id=%d",
           t, t->peer_string.c_str(), t->incoming_stream_id,
           t->last_new_stream_id));
       return init_header_skip_frame_parser(t, priority_type);
     }
     t->last_new_stream_id = t->incoming_stream_id;
     s = t->incoming_stream =
         grpc_chttp2_parsing_accept_stream(t, t->incoming_stream_id);
     if (GPR_UNLIKELY(s == nullptr)) {
       GRPC_CHTTP2_IF_TRACING(
           gpr_log(GPR_ERROR, "grpc_chttp2_stream not accepted"));
       return init_header_skip_frame_parser(t, priority_type);
     }
     if (t->channelz_socket != nullptr) {
       t->channelz_socket->RecordStreamStartedFromRemote();
     }
   } else {
     t->incoming_stream = s;
   }
   GPR_DEBUG_ASSERT(s != nullptr);
   s->stats.incoming.framing_bytes += 9;
   if (GPR_UNLIKELY(s->read_closed)) {
     GRPC_CHTTP2_IF_TRACING(gpr_log(
         GPR_ERROR, "skipping already closed grpc_chttp2_stream header"));
     t->incoming_stream = nullptr;
     return init_header_skip_frame_parser(t, priority_type);
   }
   t->parser = grpc_chttp2_header_parser_parse;
   t->parser_data = &t->hpack_parser;
   if (t->header_eof) {
     s->eos_received = true;
   }
   grpc_metadata_batch* incoming_metadata_buffer = nullptr;
   HPackParser::LogInfo::Type frame_type = HPackParser::LogInfo::kDontKnow;
   switch (s->header_frames_received) {
     case 0:
       if (t->is_client && t->header_eof) {
         GRPC_CHTTP2_IF_TRACING(gpr_log(GPR_INFO, "parsing Trailers-Only"));
         if (s->trailing_metadata_available != nullptr) {
           *s->trailing_metadata_available = true;
         }
         incoming_metadata_buffer = &s->trailing_metadata_buffer;
         frame_type = HPackParser::LogInfo::kTrailers;
       } else {
         GRPC_CHTTP2_IF_TRACING(gpr_log(GPR_INFO, "parsing initial_metadata"));
         incoming_metadata_buffer = &s->initial_metadata_buffer;
         frame_type = HPackParser::LogInfo::kHeaders;
       }
       break;
     case 1:
       GRPC_CHTTP2_IF_TRACING(gpr_log(GPR_INFO, "parsing trailing_metadata"));
       incoming_metadata_buffer = &s->trailing_metadata_buffer;
       frame_type = HPackParser::LogInfo::kTrailers;
       break;
     case 2:
       gpr_log(GPR_ERROR, "too many header frames received");
       return init_header_skip_frame_parser(t, priority_type);
   }
-  if (frame_type == HPackParser::LogInfo::kTrailers && !t->header_eof) {
-    return GRPC_ERROR_CREATE_FROM_STATIC_STRING(
-        "Trailing metadata frame received without an end-o-stream");
-  }
   t->hpack_parser.BeginFrame(
       incoming_metadata_buffer,
       t->settings[GRPC_ACKED_SETTINGS]
                  [GRPC_CHTTP2_SETTINGS_MAX_HEADER_LIST_SIZE],
       hpack_boundary_type(t, is_eoh), priority_type,
       hpack_parser_log_info(t, frame_type));
   return GRPC_ERROR_NONE;
 }
@@ -632,28 +632,24 @@ static grpc_error_handle init_goaway_parser(grpc_chttp2_transport* t) {
 static grpc_error_handle init_settings_frame_parser(grpc_chttp2_transport* t) {
   if (t->incoming_stream_id != 0) {
     return GRPC_ERROR_CREATE_FROM_STATIC_STRING(
         "Settings frame received for grpc_chttp2_stream");
   }
 
   grpc_error_handle err = grpc_chttp2_settings_parser_begin_frame(
       &t->simple.settings, t->incoming_frame_size, t->incoming_frame_flags,
       t->settings[GRPC_PEER_SETTINGS]);
   if (err != GRPC_ERROR_NONE) {
     return err;
   }
   if (t->incoming_frame_flags & GRPC_CHTTP2_FLAG_ACK) {
     memcpy(t->settings[GRPC_ACKED_SETTINGS], t->settings[GRPC_SENT_SETTINGS],
            GRPC_CHTTP2_NUM_SETTINGS * sizeof(uint32_t));
     t->hpack_parser.hpack_table()->SetMaxBytes(
         t->settings[GRPC_ACKED_SETTINGS]
                    [GRPC_CHTTP2_SETTINGS_HEADER_TABLE_SIZE]);
-    t->flow_control.SetAckedInitialWindow(
-        t->settings[GRPC_ACKED_SETTINGS]
-                   [GRPC_CHTTP2_SETTINGS_INITIAL_WINDOW_SIZE]);
-    grpc_chttp2_act_on_flowctl_action(t->flow_control.MakeAction(), t, nullptr);
     t->sent_local_settings = false;
   }
   t->parser = grpc_chttp2_settings_parser_parse;
   t->parser_data = &t->simple.settings;
   return GRPC_ERROR_NONE;
 }
diff --git a/src/core/ext/transport/chttp2/transport/stream_lists.cc b/src/core/ext/transport/chttp2/transport/stream_lists.cc
index 92c36a6093..aaa73975b5 100644
--- a/src/core/ext/transport/chttp2/transport/stream_lists.cc
+++ b/src/core/ext/transport/chttp2/transport/stream_lists.cc
@@ -1,29 +1,31 @@
 /*
  *
  * Copyright 2015 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #include <grpc/support/port_platform.h>
 
 #include <grpc/support/log.h>
 
+#include "src/core/ext/transport/chttp2/transport/flow_control.h"
 #include "src/core/ext/transport/chttp2/transport/frame.h"
 #include "src/core/ext/transport/chttp2/transport/internal.h"
 #include "src/core/lib/debug/trace.h"
 #include "src/core/lib/gprpp/bitset.h"
+#include "src/core/lib/gprpp/manual_constructor.h"
 
 static const char* stream_list_id_string(grpc_chttp2_stream_list_id id) {
   switch (id) {
@@ -187,6 +189,7 @@ void grpc_chttp2_list_remove_waiting_for_concurrency(grpc_chttp2_transport* t,
 
 void grpc_chttp2_list_add_stalled_by_transport(grpc_chttp2_transport* t,
                                                grpc_chttp2_stream* s) {
+  GPR_ASSERT(t->flow_control->flow_control_enabled());
   stream_list_add(t, s, GRPC_CHTTP2_LIST_STALLED_BY_TRANSPORT);
 }
 
@@ -202,6 +205,7 @@ void grpc_chttp2_list_remove_stalled_by_transport(grpc_chttp2_transport* t,
 
 void grpc_chttp2_list_add_stalled_by_stream(grpc_chttp2_transport* t,
                                             grpc_chttp2_stream* s) {
+  GPR_ASSERT(t->flow_control->flow_control_enabled());
   stream_list_add(t, s, GRPC_CHTTP2_LIST_STALLED_BY_STREAM);
 }
 
diff --git a/src/core/ext/transport/chttp2/transport/writing.cc b/src/core/ext/transport/chttp2/transport/writing.cc
index 82b6c101a8..0c0f59460f 100644
--- a/src/core/ext/transport/chttp2/transport/writing.cc
+++ b/src/core/ext/transport/chttp2/transport/writing.cc
@@ -1,66 +1,68 @@
 /*
  *
  * Copyright 2015 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #include <grpc/support/port_platform.h>
 
 #include <inttypes.h>
 #include <stddef.h>
 
 #include <algorithm>
+#include <memory>
 #include <string>
 
 #include "absl/types/optional.h"
 
 #include <grpc/slice.h>
 #include <grpc/slice_buffer.h>
 #include <grpc/support/log.h>
 
 // IWYU pragma: no_include "src/core/lib/gprpp/orphanable.h"
 
 #include "src/core/ext/transport/chttp2/transport/chttp2_transport.h"
 #include "src/core/ext/transport/chttp2/transport/context_list.h"
 #include "src/core/ext/transport/chttp2/transport/flow_control.h"
 #include "src/core/ext/transport/chttp2/transport/frame.h"
 #include "src/core/ext/transport/chttp2/transport/frame_data.h"
 #include "src/core/ext/transport/chttp2/transport/frame_ping.h"
 #include "src/core/ext/transport/chttp2/transport/frame_rst_stream.h"
 #include "src/core/ext/transport/chttp2/transport/frame_settings.h"
 #include "src/core/ext/transport/chttp2/transport/frame_window_update.h"
 #include "src/core/ext/transport/chttp2/transport/hpack_encoder.h"
 #include "src/core/ext/transport/chttp2/transport/http2_settings.h"
 #include "src/core/ext/transport/chttp2/transport/internal.h"
 #include "src/core/ext/transport/chttp2/transport/stream_map.h"
 #include "src/core/lib/channel/channelz.h"
 #include "src/core/lib/debug/stats.h"
 #include "src/core/lib/debug/trace.h"
 #include "src/core/lib/gprpp/debug_location.h"
+#include "src/core/lib/gprpp/manual_constructor.h"
 #include "src/core/lib/gprpp/ref_counted.h"
 #include "src/core/lib/gprpp/ref_counted_ptr.h"
 #include "src/core/lib/gprpp/time.h"
 #include "src/core/lib/iomgr/closure.h"
 #include "src/core/lib/iomgr/endpoint.h"
 #include "src/core/lib/iomgr/error.h"
 #include "src/core/lib/iomgr/exec_ctx.h"
 #include "src/core/lib/iomgr/timer.h"
 #include "src/core/lib/profiling/timers.h"
 #include "src/core/lib/slice/slice.h"
 #include "src/core/lib/slice/slice_internal.h"
 #include "src/core/lib/transport/bdp_estimator.h"
 #include "src/core/lib/transport/http2_errors.h"
 #include "src/core/lib/transport/metadata_batch.h"
 #include "src/core/lib/transport/transport.h"
@@ -207,26 +209,26 @@ static bool update_list(grpc_chttp2_transport* t, grpc_chttp2_stream* s,
 static void report_stall(grpc_chttp2_transport* t, grpc_chttp2_stream* s,
                          const char* staller) {
   if (GRPC_TRACE_FLAG_ENABLED(grpc_flowctl_trace)) {
     gpr_log(
         GPR_DEBUG,
         "%s:%p stream %d moved to stalled list by %s. This is FULLY expected "
         "to happen in a healthy program that is not seeing flow control stalls."
         " However, if you know that there are unwanted stalls, here is some "
         "helpful data: [fc:pending=%" PRIdPTR ":flowed=%" PRId64
         ":peer_initwin=%d:t_win=%" PRId64 ":s_win=%d:s_delta=%" PRId64 "]",
         t->peer_string.c_str(), t, s->id, staller,
         s->flow_controlled_buffer.length, s->flow_controlled_bytes_flowed,
         t->settings[GRPC_ACKED_SETTINGS]
                    [GRPC_CHTTP2_SETTINGS_INITIAL_WINDOW_SIZE],
-        t->flow_control.remote_window(),
+        t->flow_control->remote_window(),
         static_cast<uint32_t>(std::max(
             int64_t(0),
-            s->flow_control.remote_window_delta() +
+            s->flow_control->remote_window_delta() +
                 static_cast<int64_t>(
                     t->settings[GRPC_PEER_SETTINGS]
                                [GRPC_CHTTP2_SETTINGS_INITIAL_WINDOW_SIZE]))),
-        s->flow_control.remote_window_delta());
+        s->flow_control->remote_window_delta());
   }
 }
 
 /* How many bytes would we like to put on the wire during a single syscall */
@@ -265,120 +267,115 @@ namespace {
 class WriteContext {
  public:
   explicit WriteContext(grpc_chttp2_transport* t) : t_(t) {
     GRPC_STATS_INC_HTTP2_WRITES_BEGUN();
     GPR_TIMER_SCOPE("grpc_chttp2_begin_write", 0);
   }
 
   // TODO(ctiller): make this the destructor
   void FlushStats() {
     GRPC_STATS_INC_HTTP2_SEND_INITIAL_METADATA_PER_WRITE(
         initial_metadata_writes_);
     GRPC_STATS_INC_HTTP2_SEND_MESSAGE_PER_WRITE(message_writes_);
     GRPC_STATS_INC_HTTP2_SEND_TRAILING_METADATA_PER_WRITE(
         trailing_metadata_writes_);
     GRPC_STATS_INC_HTTP2_SEND_FLOWCTL_PER_WRITE(flow_control_writes_);
   }
 
   void FlushSettings() {
     if (t_->dirtied_local_settings && !t_->sent_local_settings) {
-      t_->flow_control.SetSentInitialWindow(
-          t_->settings[GRPC_LOCAL_SETTINGS]
-                      [GRPC_CHTTP2_SETTINGS_INITIAL_WINDOW_SIZE]);
-      grpc_chttp2_act_on_flowctl_action(t_->flow_control.MakeAction(), t_,
-                                        nullptr);
       grpc_slice_buffer_add(
           &t_->outbuf, grpc_chttp2_settings_create(
                            t_->settings[GRPC_SENT_SETTINGS],
                            t_->settings[GRPC_LOCAL_SETTINGS],
                            t_->force_send_settings, GRPC_CHTTP2_NUM_SETTINGS));
       t_->force_send_settings = false;
       t_->dirtied_local_settings = false;
       t_->sent_local_settings = true;
       GRPC_STATS_INC_HTTP2_SETTINGS_WRITES();
     }
   }
 
   void FlushQueuedBuffers() {
     /* simple writes are queued to qbuf, and flushed here */
     grpc_slice_buffer_move_into(&t_->qbuf, &t_->outbuf);
     t_->num_pending_induced_frames = 0;
     GPR_ASSERT(t_->qbuf.count == 0);
   }
 
   void FlushWindowUpdates() {
     uint32_t transport_announce =
-        t_->flow_control.MaybeSendUpdate(t_->outbuf.count > 0);
+        t_->flow_control->MaybeSendUpdate(t_->outbuf.count > 0);
     if (transport_announce) {
       grpc_transport_one_way_stats throwaway_stats;
       grpc_slice_buffer_add(
           &t_->outbuf, grpc_chttp2_window_update_create(0, transport_announce,
                                                         &throwaway_stats));
       grpc_chttp2_reset_ping_clock(t_);
     }
   }
 
   void FlushPingAcks() {
     for (size_t i = 0; i < t_->ping_ack_count; i++) {
       grpc_slice_buffer_add(&t_->outbuf,
                             grpc_chttp2_ping_create(true, t_->ping_acks[i]));
     }
     t_->ping_ack_count = 0;
   }
 
   void EnactHpackSettings() {
     t_->hpack_compressor.SetMaxTableSize(
         t_->settings[GRPC_PEER_SETTINGS]
                     [GRPC_CHTTP2_SETTINGS_HEADER_TABLE_SIZE]);
   }
 
   void UpdateStreamsNoLongerStalled() {
     grpc_chttp2_stream* s;
     while (grpc_chttp2_list_pop_stalled_by_transport(t_, &s)) {
       if (t_->closed_with_error == GRPC_ERROR_NONE &&
           grpc_chttp2_list_add_writable_stream(t_, s)) {
         if (!s->refcount->refs.RefIfNonZero()) {
           grpc_chttp2_list_remove_writable_stream(t_, s);
         }
       }
     }
   }
 
   grpc_chttp2_stream* NextStream() {
     if (t_->outbuf.length > target_write_size(t_)) {
       result_.partial = true;
       return nullptr;
     }
 
     grpc_chttp2_stream* s;
     if (!grpc_chttp2_list_pop_writable_stream(t_, &s)) {
       return nullptr;
     }
 
     return s;
   }
 
   void IncInitialMetadataWrites() { ++initial_metadata_writes_; }
   void IncWindowUpdateWrites() { ++flow_control_writes_; }
   void IncMessageWrites() { ++message_writes_; }
   void IncTrailingMetadataWrites() { ++trailing_metadata_writes_; }
 
   void NoteScheduledResults() { result_.early_results_scheduled = true; }
 
   grpc_chttp2_transport* transport() const { return t_; }
 
   grpc_chttp2_begin_write_result Result() {
     result_.writing = t_->outbuf.count > 0;
     return result_;
   }
 
  private:
   grpc_chttp2_transport* const t_;
 
   /* stats histogram counters: we increment these throughout this function,
      and at the end publish to the central stats histograms */
   int flow_control_writes_ = 0;
   int initial_metadata_writes_ = 0;
   int trailing_metadata_writes_ = 0;
   int message_writes_ = 0;
   grpc_chttp2_begin_write_result result_ = {false, false, false};
 };
@@ -386,58 +383,59 @@ class WriteContext {
 class DataSendContext {
  public:
   DataSendContext(WriteContext* write_context, grpc_chttp2_transport* t,
                   grpc_chttp2_stream* s)
       : write_context_(write_context),
         t_(t),
         s_(s),
         sending_bytes_before_(s_->sending_bytes) {}
 
   uint32_t stream_remote_window() const {
     return static_cast<uint32_t>(std::max(
         int64_t(0),
-        s_->flow_control.remote_window_delta() +
+        s_->flow_control->remote_window_delta() +
             static_cast<int64_t>(
                 t_->settings[GRPC_PEER_SETTINGS]
                             [GRPC_CHTTP2_SETTINGS_INITIAL_WINDOW_SIZE])));
   }
 
   uint32_t max_outgoing() const {
     return static_cast<uint32_t>(std::min(
         t_->settings[GRPC_PEER_SETTINGS][GRPC_CHTTP2_SETTINGS_MAX_FRAME_SIZE],
         static_cast<uint32_t>(std::min(int64_t(stream_remote_window()),
-                                       t_->flow_control.remote_window()))));
+                                       t_->flow_control->remote_window()))));
   }
 
   bool AnyOutgoing() const { return max_outgoing() > 0; }
 
   void FlushBytes() {
     uint32_t send_bytes = static_cast<uint32_t>(
         std::min(size_t(max_outgoing()), s_->flow_controlled_buffer.length));
     is_last_frame_ = send_bytes == s_->flow_controlled_buffer.length &&
+                     s_->fetching_send_message == nullptr &&
                      s_->send_trailing_metadata != nullptr &&
                      s_->send_trailing_metadata->empty();
     grpc_chttp2_encode_data(s_->id, &s_->flow_controlled_buffer, send_bytes,
                             is_last_frame_, &s_->stats.outgoing, &t_->outbuf);
-    s_->flow_control.SentData(send_bytes);
+    s_->flow_control->SentData(send_bytes);
     s_->sending_bytes += send_bytes;
   }
 
   bool is_last_frame() const { return is_last_frame_; }
 
   void CallCallbacks() {
     if (update_list(
             t_, s_,
             static_cast<int64_t>(s_->sending_bytes - sending_bytes_before_),
             &s_->on_flow_controlled_cbs, &s_->flow_controlled_bytes_flowed,
             GRPC_ERROR_NONE)) {
       write_context_->NoteScheduledResults();
     }
   }
 
  private:
   WriteContext* write_context_;
   grpc_chttp2_transport* t_;
   grpc_chttp2_stream* s_;
   const size_t sending_bytes_before_;
   bool is_last_frame_ = false;
 };
@@ -445,184 +443,186 @@ class DataSendContext {
 class StreamWriteContext {
  public:
   StreamWriteContext(WriteContext* write_context, grpc_chttp2_stream* s)
       : write_context_(write_context), t_(write_context->transport()), s_(s) {
     GRPC_CHTTP2_IF_TRACING(
         gpr_log(GPR_INFO, "W:%p %s[%d] im-(sent,send)=(%d,%d) announce=%d", t_,
                 t_->is_client ? "CLIENT" : "SERVER", s->id,
                 s->sent_initial_metadata, s->send_initial_metadata != nullptr,
-                (int)(s->flow_control.local_window_delta() -
-                      s->flow_control.announced_window_delta())));
+                (int)(s->flow_control->local_window_delta() -
+                      s->flow_control->announced_window_delta())));
   }
 
   void FlushInitialMetadata() {
     /* send initial metadata if it's available */
     if (s_->sent_initial_metadata) return;
     if (s_->send_initial_metadata == nullptr) return;
 
     // We skip this on the server side if there is no custom initial
     // metadata, there are no messages to send, and we are also sending
     // trailing metadata.  This results in a Trailers-Only response,
     // which is required for retries, as per:
     // https://github.com/grpc/proposal/blob/master/A6-client-retries.md#when-retries-are-valid
-    if (!t_->is_client && s_->flow_controlled_buffer.length == 0 &&
+    if (!t_->is_client && s_->fetching_send_message == nullptr &&
+        s_->flow_controlled_buffer.length == 0 &&
         s_->send_trailing_metadata != nullptr &&
         is_default_initial_metadata(s_->send_initial_metadata)) {
       ConvertInitialMetadataToTrailingMetadata();
     } else {
       t_->hpack_compressor.EncodeHeaders(
           grpc_core::HPackCompressor::EncodeHeaderOptions{
               s_->id,  // stream_id
               false,   // is_eof
               t_->settings
                       [GRPC_PEER_SETTINGS]
                       [GRPC_CHTTP2_SETTINGS_GRPC_ALLOW_TRUE_BINARY_METADATA] !=
                   0,  // use_true_binary_metadata
               t_->settings
                   [GRPC_PEER_SETTINGS]
                   [GRPC_CHTTP2_SETTINGS_MAX_FRAME_SIZE],  // max_frame_size
               &s_->stats.outgoing                         // stats
           },
           *s_->send_initial_metadata, &t_->outbuf);
       grpc_chttp2_reset_ping_clock(t_);
       write_context_->IncInitialMetadataWrites();
     }
 
     s_->send_initial_metadata = nullptr;
     s_->sent_initial_metadata = true;
     write_context_->NoteScheduledResults();
     grpc_chttp2_complete_closure_step(
         t_, s_, &s_->send_initial_metadata_finished, GRPC_ERROR_NONE,
         "send_initial_metadata_finished");
   }
 
   void FlushWindowUpdates() {
     /* send any window updates */
-    const uint32_t stream_announce = s_->flow_control.MaybeSendUpdate();
+    const uint32_t stream_announce = s_->flow_control->MaybeSendUpdate();
     if (stream_announce == 0) return;
 
     grpc_slice_buffer_add(
         &t_->outbuf, grpc_chttp2_window_update_create(s_->id, stream_announce,
                                                       &s_->stats.outgoing));
     grpc_chttp2_reset_ping_clock(t_);
     write_context_->IncWindowUpdateWrites();
   }
 
   void FlushData() {
     if (!s_->sent_initial_metadata) return;
 
     if (s_->flow_controlled_buffer.length == 0) {
       return;  // early out: nothing to do
     }
 
     DataSendContext data_send_context(write_context_, t_, s_);
 
     if (!data_send_context.AnyOutgoing()) {
-      if (t_->flow_control.remote_window() <= 0) {
+      if (t_->flow_control->remote_window() <= 0) {
         report_stall(t_, s_, "transport");
         grpc_chttp2_list_add_stalled_by_transport(t_, s_);
       } else if (data_send_context.stream_remote_window() <= 0) {
         report_stall(t_, s_, "stream");
         grpc_chttp2_list_add_stalled_by_stream(t_, s_);
       }
       return;  // early out: nothing to do
     }
 
     while (s_->flow_controlled_buffer.length > 0 &&
            data_send_context.max_outgoing() > 0) {
       data_send_context.FlushBytes();
     }
     grpc_chttp2_reset_ping_clock(t_);
     if (data_send_context.is_last_frame()) {
       SentLastFrame();
     }
     data_send_context.CallCallbacks();
     stream_became_writable_ = true;
     if (s_->flow_controlled_buffer.length > 0) {
       GRPC_CHTTP2_STREAM_REF(s_, "chttp2_writing:fork");
       grpc_chttp2_list_add_writable_stream(t_, s_);
     }
     write_context_->IncMessageWrites();
   }
 
   void FlushTrailingMetadata() {
     if (!s_->sent_initial_metadata) return;
 
     if (s_->send_trailing_metadata == nullptr) return;
+    if (s_->fetching_send_message != nullptr) return;
     if (s_->flow_controlled_buffer.length != 0) return;
 
     GRPC_CHTTP2_IF_TRACING(gpr_log(GPR_INFO, "sending trailing_metadata"));
     if (s_->send_trailing_metadata->empty()) {
       grpc_chttp2_encode_data(s_->id, &s_->flow_controlled_buffer, 0, true,
                               &s_->stats.outgoing, &t_->outbuf);
     } else {
       if (send_status_.has_value()) {
         s_->send_trailing_metadata->Set(grpc_core::HttpStatusMetadata(),
                                         *send_status_);
       }
       if (send_content_type_.has_value()) {
         s_->send_trailing_metadata->Set(grpc_core::ContentTypeMetadata(),
                                         *send_content_type_);
       }
       t_->hpack_compressor.EncodeHeaders(
           grpc_core::HPackCompressor::EncodeHeaderOptions{
               s_->id, true,
               t_->settings
                       [GRPC_PEER_SETTINGS]
                       [GRPC_CHTTP2_SETTINGS_GRPC_ALLOW_TRUE_BINARY_METADATA] !=
                   0,
               t_->settings[GRPC_PEER_SETTINGS]
                           [GRPC_CHTTP2_SETTINGS_MAX_FRAME_SIZE],
               &s_->stats.outgoing},
           *s_->send_trailing_metadata, &t_->outbuf);
     }
     write_context_->IncTrailingMetadataWrites();
     grpc_chttp2_reset_ping_clock(t_);
     SentLastFrame();
 
     write_context_->NoteScheduledResults();
     grpc_chttp2_complete_closure_step(
         t_, s_, &s_->send_trailing_metadata_finished, GRPC_ERROR_NONE,
         "send_trailing_metadata_finished");
   }
 
   bool stream_became_writable() { return stream_became_writable_; }
 
  private:
   void ConvertInitialMetadataToTrailingMetadata() {
     GRPC_CHTTP2_IF_TRACING(
         gpr_log(GPR_INFO, "not sending initial_metadata (Trailers-Only)"));
     // When sending Trailers-Only, we need to move the :status and
     // content-type headers to the trailers.
     send_status_ =
         s_->send_initial_metadata->get(grpc_core::HttpStatusMetadata());
     send_content_type_ =
         s_->send_initial_metadata->get(grpc_core::ContentTypeMetadata());
   }
 
   void SentLastFrame() {
     s_->send_trailing_metadata = nullptr;
     if (s_->sent_trailing_metadata_op) {
       *s_->sent_trailing_metadata_op = true;
       s_->sent_trailing_metadata_op = nullptr;
     }
     s_->sent_trailing_metadata = true;
     s_->eos_sent = true;
 
     if (!t_->is_client && !s_->read_closed) {
       grpc_slice_buffer_add(
           &t_->outbuf, grpc_chttp2_rst_stream_create(
                            s_->id, GRPC_HTTP2_NO_ERROR, &s_->stats.outgoing));
     }
     grpc_chttp2_mark_stream_closed(t_, s_, !t_->is_client, true,
                                    GRPC_ERROR_NONE);
   }
 
   WriteContext* const write_context_;
   grpc_chttp2_transport* const t_;
   grpc_chttp2_stream* const s_;
   bool stream_became_writable_ = false;
   absl::optional<uint32_t> send_status_;
   absl::optional<grpc_core::ContentTypeMetadata::ValueType> send_content_type_ =
       {};
 };
 }  // namespace
@@ -630,46 +630,46 @@ class StreamWriteContext {
 grpc_chttp2_begin_write_result grpc_chttp2_begin_write(
     grpc_chttp2_transport* t) {
   WriteContext ctx(t);
   ctx.FlushSettings();
   ctx.FlushPingAcks();
   ctx.FlushQueuedBuffers();
   ctx.EnactHpackSettings();
 
-  if (t->flow_control.remote_window() > 0) {
+  if (t->flow_control->remote_window() > 0) {
     ctx.UpdateStreamsNoLongerStalled();
   }
 
   /* for each grpc_chttp2_stream that's become writable, frame it's data
      (according to available window sizes) and add to the output buffer */
   while (grpc_chttp2_stream* s = ctx.NextStream()) {
     StreamWriteContext stream_ctx(&ctx, s);
     size_t orig_len = t->outbuf.length;
     stream_ctx.FlushInitialMetadata();
     stream_ctx.FlushWindowUpdates();
     stream_ctx.FlushData();
     stream_ctx.FlushTrailingMetadata();
     if (t->outbuf.length > orig_len) {
       /* Add this stream to the list of the contexts to be traced at TCP */
       s->byte_counter += t->outbuf.length - orig_len;
       if (s->traced && grpc_endpoint_can_track_err(t->ep)) {
         grpc_core::ContextList::Append(&t->cl, s);
       }
     }
     if (stream_ctx.stream_became_writable()) {
       if (!grpc_chttp2_list_add_writing_stream(t, s)) {
         /* already in writing list: drop ref */
         GRPC_CHTTP2_STREAM_UNREF(s, "chttp2_writing:already_writing");
       } else {
         /* ref will be dropped at end of write */
       }
     } else {
       GRPC_CHTTP2_STREAM_UNREF(s, "chttp2_writing:no_write");
     }
   }
 
   ctx.FlushWindowUpdates();
 
   maybe_initiate_ping(t);
 
   return ctx.Result();
 }
diff --git a/src/core/ext/transport/cronet/transport/cronet_transport.cc b/src/core/ext/transport/cronet/transport/cronet_transport.cc
index ccdf9b6b70..c9b7e12723 100644
--- a/src/core/ext/transport/cronet/transport/cronet_transport.cc
+++ b/src/core/ext/transport/cronet/transport/cronet_transport.cc
@@ -1,68 +1,70 @@
 /*
  *
  * Copyright 2016 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #include <grpc/support/port_platform.h>
 
 #include "src/core/ext/transport/cronet/transport/cronet_transport.h"
 
 #include <stdint.h>
 #include <stdlib.h>
 #include <string.h>
 
+#include <memory>
 #include <new>
 #include <string>
 #include <utility>
 
 #include "absl/strings/match.h"
 #include "absl/strings/str_cat.h"
 #include "absl/strings/str_format.h"
 #include "absl/strings/string_view.h"
-#include "absl/types/optional.h"
 #include "third_party/objective_c/Cronet/bidirectional_stream_c.h"
 
 #include <grpc/slice.h>
+#include <grpc/slice_buffer.h>
 #include <grpc/status.h>
 #include <grpc/support/alloc.h>
 #include <grpc/support/log.h>
 #include <grpc/support/sync.h>
 
 #include "src/core/ext/transport/chttp2/transport/bin_decoder.h"
 #include "src/core/ext/transport/chttp2/transport/bin_encoder.h"
 #include "src/core/ext/transport/cronet/transport/cronet_status.h"
 #include "src/core/lib/debug/trace.h"
 #include "src/core/lib/gprpp/debug_location.h"
+#include "src/core/lib/gprpp/manual_constructor.h"
+#include "src/core/lib/gprpp/orphanable.h"
 #include "src/core/lib/iomgr/closure.h"
 #include "src/core/lib/iomgr/endpoint.h"
 #include "src/core/lib/iomgr/error.h"
 #include "src/core/lib/iomgr/exec_ctx.h"
 #include "src/core/lib/iomgr/iomgr_fwd.h"
 #include "src/core/lib/iomgr/pollset.h"
 #include "src/core/lib/resource_quota/arena.h"
 #include "src/core/lib/slice/slice.h"
-#include "src/core/lib/slice/slice_buffer.h"
+#include "src/core/lib/slice/slice_internal.h"
 #include "src/core/lib/slice/slice_refcount.h"
 #include "src/core/lib/surface/validate_metadata.h"
+#include "src/core/lib/transport/byte_stream.h"
 #include "src/core/lib/transport/metadata_batch.h"
 #include "src/core/lib/transport/transport.h"
 #include "src/core/lib/transport/transport_impl.h"
 
-// IWYU pragma: no_include <type_traits>
-
 #define GRPC_HEADER_SIZE_IN_BYTES 5
 #define GRPC_FLUSH_READ_SIZE 4096
 
@@ -130,27 +132,30 @@ typedef struct grpc_cronet_transport grpc_cronet_transport;
 /* TODO (makdharma): reorder structure for memory efficiency per
    http://www.catb.org/esr/structure-packing/#_structure_reordering: */
 struct read_state {
   explicit read_state(grpc_core::Arena* arena)
-      : trailing_metadata(arena), initial_metadata(arena) {}
+      : trailing_metadata(arena), initial_metadata(arena) {
+    grpc_slice_buffer_init(&read_slice_buffer);
+  }
 
   /* vars to store data coming from server */
   char* read_buffer = nullptr;
   bool length_field_received = false;
   int received_bytes = 0;
   int remaining_bytes = 0;
   int length_field = 0;
   bool compressed = false;
   char grpc_header_bytes[GRPC_HEADER_SIZE_IN_BYTES] = {};
   char* payload_field = nullptr;
   bool read_stream_closed = false;
 
   /* vars for holding data destined for the application */
-  grpc_core::SliceBuffer read_slice_buffer;
+  grpc_core::ManualConstructor<grpc_core::SliceBufferByteStream> sbs;
+  grpc_slice_buffer read_slice_buffer;
 
   /* vars for trailing metadata */
   grpc_metadata_batch trailing_metadata;
   bool trailing_metadata_valid = false;
 
   /* vars for initial metadata */
   grpc_metadata_batch initial_metadata;
 };
@@ -1028,355 +1033,380 @@ static bool op_can_be_run(grpc_transport_stream_op_batch* curr_op,
 /*
   TODO (makdharma): Break down this function in smaller chunks for readability.
 */
 static enum e_op_result execute_stream_op(struct op_and_state* oas) {
   grpc_transport_stream_op_batch* stream_op = &oas->op;
   struct stream_obj* s = oas->s;
   grpc_cronet_transport* t = s->curr_ct;
   struct op_state* stream_state = &s->state;
   enum e_op_result result = NO_ACTION_POSSIBLE;
   if (stream_op->send_initial_metadata &&
       op_can_be_run(stream_op, s, &oas->state, OP_SEND_INITIAL_METADATA)) {
     CRONET_LOG(GPR_DEBUG, "running: %p OP_SEND_INITIAL_METADATA", oas);
     /* Start new cronet stream. It is destroyed in on_succeeded, on_canceled,
      * on_failed */
     GPR_ASSERT(s->cbs == nullptr);
     GPR_ASSERT(!stream_state->state_op_done[OP_SEND_INITIAL_METADATA]);
     s->cbs =
         bidirectional_stream_create(t->engine, s->curr_gs, &cronet_callbacks);
     CRONET_LOG(GPR_DEBUG, "%p = bidirectional_stream_create()", s->cbs);
     if (t->use_packet_coalescing) {
       bidirectional_stream_disable_auto_flush(s->cbs, true);
       bidirectional_stream_delay_request_headers_until_flush(s->cbs, true);
     }
     std::string url;
     const char* method = "POST";
     s->header_array.headers = nullptr;
     convert_metadata_to_cronet_headers(
         stream_op->payload->send_initial_metadata.send_initial_metadata,
         t->host, &url, &s->header_array.headers, &s->header_array.count,
         &method);
     s->header_array.capacity = s->header_array.count;
     CRONET_LOG(GPR_DEBUG, "bidirectional_stream_start(%p, %s)", s->cbs,
                url.c_str());
     bidirectional_stream_start(s->cbs, url.c_str(), 0, method, &s->header_array,
                                false);
     unsigned int header_index;
     for (header_index = 0; header_index < s->header_array.count;
          header_index++) {
       gpr_free(const_cast<char*>(s->header_array.headers[header_index].key));
       gpr_free(const_cast<char*>(s->header_array.headers[header_index].value));
     }
     stream_state->state_op_done[OP_SEND_INITIAL_METADATA] = true;
     if (t->use_packet_coalescing) {
       if (!stream_op->send_message && !stream_op->send_trailing_metadata) {
         s->state.flush_cronet_when_ready = true;
       }
     }
     result = ACTION_TAKEN_WITH_CALLBACK;
   } else if (stream_op->send_message &&
              op_can_be_run(stream_op, s, &oas->state, OP_SEND_MESSAGE)) {
     CRONET_LOG(GPR_DEBUG, "running: %p  OP_SEND_MESSAGE", oas);
     stream_state->pending_send_message = false;
     if (stream_state->state_op_done[OP_CANCEL_ERROR] ||
         stream_state->state_callback_received[OP_FAILED] ||
         stream_state->state_callback_received[OP_SUCCEEDED]) {
       result = NO_ACTION_POSSIBLE;
       CRONET_LOG(GPR_DEBUG, "Stream is either cancelled, failed or finished");
     } else {
+      grpc_slice_buffer write_slice_buffer;
+      grpc_slice slice;
+      grpc_slice_buffer_init(&write_slice_buffer);
+      while (write_slice_buffer.length <
+             stream_op->payload->send_message.send_message->length()) {
+        /* TODO(roth): When we add support for incremental sending,this code
+         * will need to be changed to support asynchronous delivery of the
+         * send_message payload. */
+        if (!stream_op->payload->send_message.send_message->Next(
+                stream_op->payload->send_message.send_message->length(),
+                nullptr)) {
+          /* Should never reach here */
+          GPR_ASSERT(false);
+        }
+        if (GRPC_ERROR_NONE !=
+            stream_op->payload->send_message.send_message->Pull(&slice)) {
+          /* Should never reach here */
+          GPR_ASSERT(false);
+        }
+        grpc_slice_buffer_add(&write_slice_buffer, slice);
+      }
       size_t write_buffer_size;
-      create_grpc_frame(
-          stream_op->payload->send_message.send_message->c_slice_buffer(),
-          &stream_state->ws.write_buffer, &write_buffer_size,
-          stream_op->payload->send_message.flags);
+      create_grpc_frame(&write_slice_buffer, &stream_state->ws.write_buffer,
+                        &write_buffer_size,
+                        stream_op->payload->send_message.send_message->flags());
       if (write_buffer_size > 0) {
         CRONET_LOG(GPR_DEBUG, "bidirectional_stream_write (%p, %p)", s->cbs,
                    stream_state->ws.write_buffer);
         stream_state->state_callback_received[OP_SEND_MESSAGE] = false;
         bidirectional_stream_write(s->cbs, stream_state->ws.write_buffer,
                                    static_cast<int>(write_buffer_size), false);
+        grpc_slice_buffer_destroy_internal(&write_slice_buffer);
         if (t->use_packet_coalescing) {
           if (!stream_op->send_trailing_metadata) {
             CRONET_LOG(GPR_DEBUG, "bidirectional_stream_flush (%p)", s->cbs);
             bidirectional_stream_flush(s->cbs);
             result = ACTION_TAKEN_WITH_CALLBACK;
           } else {
             stream_state->pending_write_for_trailer = true;
             result = ACTION_TAKEN_NO_CALLBACK;
           }
         } else {
           result = ACTION_TAKEN_WITH_CALLBACK;
         }
       } else {
         /* Should never reach here */
         GPR_ASSERT(false);
       }
     }
     stream_state->state_op_done[OP_SEND_MESSAGE] = true;
     oas->state.state_op_done[OP_SEND_MESSAGE] = true;
+    stream_op->payload->send_message.send_message.reset();
   } else if (stream_op->send_trailing_metadata &&
              op_can_be_run(stream_op, s, &oas->state,
                            OP_SEND_TRAILING_METADATA)) {
     CRONET_LOG(GPR_DEBUG, "running: %p  OP_SEND_TRAILING_METADATA", oas);
     if (stream_state->state_op_done[OP_CANCEL_ERROR] ||
         stream_state->state_callback_received[OP_FAILED] ||
         stream_state->state_callback_received[OP_SUCCEEDED]) {
       result = NO_ACTION_POSSIBLE;
       CRONET_LOG(GPR_DEBUG, "Stream is either cancelled, failed or finished");
     } else {
       CRONET_LOG(GPR_DEBUG, "bidirectional_stream_write (%p, 0)", s->cbs);
       stream_state->state_callback_received[OP_SEND_MESSAGE] = false;
       bidirectional_stream_write(s->cbs, "", 0, true);
       if (t->use_packet_coalescing) {
         CRONET_LOG(GPR_DEBUG, "bidirectional_stream_flush (%p)", s->cbs);
         bidirectional_stream_flush(s->cbs);
       }
       result = ACTION_TAKEN_WITH_CALLBACK;
     }
     stream_state->state_op_done[OP_SEND_TRAILING_METADATA] = true;
   } else if (stream_op->recv_initial_metadata &&
              op_can_be_run(stream_op, s, &oas->state,
                            OP_RECV_INITIAL_METADATA)) {
     CRONET_LOG(GPR_DEBUG, "running: %p  OP_RECV_INITIAL_METADATA", oas);
     if (stream_state->state_op_done[OP_CANCEL_ERROR]) {
       grpc_core::ExecCtx::Run(
           DEBUG_LOCATION,
           stream_op->payload->recv_initial_metadata.recv_initial_metadata_ready,
           GRPC_ERROR_NONE);
     } else if (stream_state->state_callback_received[OP_FAILED]) {
       grpc_core::ExecCtx::Run(
           DEBUG_LOCATION,
           stream_op->payload->recv_initial_metadata.recv_initial_metadata_ready,
           GRPC_ERROR_NONE);
     } else if (stream_state->state_op_done[OP_RECV_TRAILING_METADATA]) {
       grpc_core::ExecCtx::Run(
           DEBUG_LOCATION,
           stream_op->payload->recv_initial_metadata.recv_initial_metadata_ready,
           GRPC_ERROR_NONE);
     } else {
       *stream_op->payload->recv_initial_metadata.recv_initial_metadata =
           std::move(oas->s->state.rs.initial_metadata);
       grpc_core::ExecCtx::Run(
           DEBUG_LOCATION,
           stream_op->payload->recv_initial_metadata.recv_initial_metadata_ready,
           GRPC_ERROR_NONE);
     }
     stream_state->state_op_done[OP_RECV_INITIAL_METADATA] = true;
     result = ACTION_TAKEN_NO_CALLBACK;
   } else if (stream_op->recv_message &&
              op_can_be_run(stream_op, s, &oas->state, OP_RECV_MESSAGE)) {
     CRONET_LOG(GPR_DEBUG, "running: %p  OP_RECV_MESSAGE", oas);
     if (stream_state->state_op_done[OP_CANCEL_ERROR]) {
       CRONET_LOG(GPR_DEBUG, "Stream is cancelled.");
       grpc_core::ExecCtx::Run(
           DEBUG_LOCATION, stream_op->payload->recv_message.recv_message_ready,
           GRPC_ERROR_NONE);
       stream_state->state_op_done[OP_RECV_MESSAGE] = true;
       oas->state.state_op_done[OP_RECV_MESSAGE] = true;
       result = ACTION_TAKEN_NO_CALLBACK;
     } else if (stream_state->state_callback_received[OP_FAILED]) {
       CRONET_LOG(GPR_DEBUG, "Stream failed.");
       grpc_core::ExecCtx::Run(
           DEBUG_LOCATION, stream_op->payload->recv_message.recv_message_ready,
           GRPC_ERROR_NONE);
       stream_state->state_op_done[OP_RECV_MESSAGE] = true;
       oas->state.state_op_done[OP_RECV_MESSAGE] = true;
       result = ACTION_TAKEN_NO_CALLBACK;
     } else if (stream_state->rs.read_stream_closed) {
       /* No more data will be received */
       CRONET_LOG(GPR_DEBUG, "read stream closed");
       grpc_core::ExecCtx::Run(
           DEBUG_LOCATION, stream_op->payload->recv_message.recv_message_ready,
           GRPC_ERROR_NONE);
       stream_state->state_op_done[OP_RECV_MESSAGE] = true;
       oas->state.state_op_done[OP_RECV_MESSAGE] = true;
       result = ACTION_TAKEN_NO_CALLBACK;
     } else if (stream_state->flush_read) {
       CRONET_LOG(GPR_DEBUG, "flush read");
       grpc_core::ExecCtx::Run(
           DEBUG_LOCATION, stream_op->payload->recv_message.recv_message_ready,
           GRPC_ERROR_NONE);
       stream_state->state_op_done[OP_RECV_MESSAGE] = true;
       oas->state.state_op_done[OP_RECV_MESSAGE] = true;
       result = ACTION_TAKEN_NO_CALLBACK;
     } else if (!stream_state->rs.length_field_received) {
       if (stream_state->rs.received_bytes == GRPC_HEADER_SIZE_IN_BYTES &&
           stream_state->rs.remaining_bytes == 0) {
         /* Start a read operation for data */
         stream_state->rs.length_field_received = true;
         parse_grpc_header(
             reinterpret_cast<const uint8_t*>(stream_state->rs.read_buffer),
             &stream_state->rs.length_field, &stream_state->rs.compressed);
         CRONET_LOG(GPR_DEBUG, "length field = %d",
                    stream_state->rs.length_field);
         if (stream_state->rs.length_field > 0) {
           stream_state->rs.read_buffer = static_cast<char*>(
               gpr_malloc(static_cast<size_t>(stream_state->rs.length_field)));
           GPR_ASSERT(stream_state->rs.read_buffer);
           stream_state->rs.remaining_bytes = stream_state->rs.length_field;
           stream_state->rs.received_bytes = 0;
           CRONET_LOG(GPR_DEBUG, "bidirectional_stream_read(%p)", s->cbs);
           stream_state->state_op_done[OP_READ_REQ_MADE] =
               true; /* Indicates that at least one read request has been made */
           bidirectional_stream_read(s->cbs, stream_state->rs.read_buffer,
                                     stream_state->rs.remaining_bytes);
           result = ACTION_TAKEN_WITH_CALLBACK;
         } else {
           stream_state->rs.remaining_bytes = 0;
           CRONET_LOG(GPR_DEBUG, "read operation complete. Empty response.");
           /* Clean up read_slice_buffer in case there is unread data. */
-          stream_state->rs.read_slice_buffer.Clear();
+          grpc_slice_buffer_destroy_internal(
+              &stream_state->rs.read_slice_buffer);
+          grpc_slice_buffer_init(&stream_state->rs.read_slice_buffer);
           uint32_t flags = 0;
           if (stream_state->rs.compressed) {
             flags |= GRPC_WRITE_INTERNAL_COMPRESS;
           }
-          *stream_op->payload->recv_message.flags = flags;
-          *stream_op->payload->recv_message.recv_message =
-              std::move(stream_state->rs.read_slice_buffer);
+          stream_state->rs.sbs.Init(&stream_state->rs.read_slice_buffer, flags);
+          stream_op->payload->recv_message.recv_message->reset(
+              stream_state->rs.sbs.get());
           grpc_core::ExecCtx::Run(
               DEBUG_LOCATION,
               stream_op->payload->recv_message.recv_message_ready,
               GRPC_ERROR_NONE);
           stream_state->state_op_done[OP_RECV_MESSAGE] = true;
           oas->state.state_op_done[OP_RECV_MESSAGE] = true;
 
           /* Extra read to trigger on_succeed */
           stream_state->rs.length_field_received = false;
           stream_state->state_op_done[OP_READ_REQ_MADE] =
               true; /* Indicates that at least one read request has been made */
           read_grpc_header(s);
           result = ACTION_TAKEN_NO_CALLBACK;
         }
       } else if (stream_state->rs.remaining_bytes == 0) {
         /* Start a read operation for first 5 bytes (GRPC header) */
         stream_state->rs.read_buffer = stream_state->rs.grpc_header_bytes;
         stream_state->rs.remaining_bytes = GRPC_HEADER_SIZE_IN_BYTES;
         stream_state->rs.received_bytes = 0;
         stream_state->rs.compressed = false;
         CRONET_LOG(GPR_DEBUG, "bidirectional_stream_read(%p)", s->cbs);
         stream_state->state_op_done[OP_READ_REQ_MADE] =
             true; /* Indicates that at least one read request has been made */
         bidirectional_stream_read(s->cbs, stream_state->rs.read_buffer,
                                   stream_state->rs.remaining_bytes);
         result = ACTION_TAKEN_WITH_CALLBACK;
       } else {
         result = NO_ACTION_POSSIBLE;
       }
     } else if (stream_state->rs.remaining_bytes == 0) {
       CRONET_LOG(GPR_DEBUG, "read operation complete");
       grpc_slice read_data_slice =
           GRPC_SLICE_MALLOC((uint32_t)stream_state->rs.length_field);
       uint8_t* dst_p = GRPC_SLICE_START_PTR(read_data_slice);
       memcpy(dst_p, stream_state->rs.read_buffer,
              static_cast<size_t>(stream_state->rs.length_field));
       null_and_maybe_free_read_buffer(s);
       /* Clean up read_slice_buffer in case there is unread data. */
-      stream_state->rs.read_slice_buffer.Clear();
-      stream_state->rs.read_slice_buffer.Append(
-          grpc_core::Slice(read_data_slice));
+      grpc_slice_buffer_destroy_internal(&stream_state->rs.read_slice_buffer);
+      grpc_slice_buffer_init(&stream_state->rs.read_slice_buffer);
+      grpc_slice_buffer_add(&stream_state->rs.read_slice_buffer,
+                            read_data_slice);
       uint32_t flags = 0;
       if (stream_state->rs.compressed) {
         flags = GRPC_WRITE_INTERNAL_COMPRESS;
       }
-      *stream_op->payload->recv_message.flags = flags;
-      *stream_op->payload->recv_message.recv_message =
-          std::move(stream_state->rs.read_slice_buffer);
+      stream_state->rs.sbs.Init(&stream_state->rs.read_slice_buffer, flags);
+      stream_op->payload->recv_message.recv_message->reset(
+          stream_state->rs.sbs.get());
       grpc_core::ExecCtx::Run(
           DEBUG_LOCATION, stream_op->payload->recv_message.recv_message_ready,
           GRPC_ERROR_NONE);
       stream_state->state_op_done[OP_RECV_MESSAGE] = true;
       oas->state.state_op_done[OP_RECV_MESSAGE] = true;
       /* Do an extra read to trigger on_succeeded() callback in case connection
          is closed */
       stream_state->rs.length_field_received = false;
       read_grpc_header(s);
       result = ACTION_TAKEN_NO_CALLBACK;
     }
   } else if (stream_op->recv_trailing_metadata &&
              op_can_be_run(stream_op, s, &oas->state,
                            OP_RECV_TRAILING_METADATA)) {
     CRONET_LOG(GPR_DEBUG, "running: %p  OP_RECV_TRAILING_METADATA", oas);
     grpc_error_handle error = GRPC_ERROR_NONE;
     if (stream_state->state_op_done[OP_CANCEL_ERROR]) {
       error = GRPC_ERROR_REF(stream_state->cancel_error);
     } else if (stream_state->state_callback_received[OP_FAILED]) {
       grpc_status_code grpc_error_code =
           cronet_net_error_to_grpc_error(stream_state->net_error);
       const char* desc = cronet_net_error_as_string(stream_state->net_error);
       error =
           make_error_with_desc(grpc_error_code, stream_state->net_error, desc);
     } else if (oas->s->state.rs.trailing_metadata_valid) {
       *stream_op->payload->recv_trailing_metadata.recv_trailing_metadata =
           std::move(oas->s->state.rs.trailing_metadata);
       stream_state->rs.trailing_metadata_valid = false;
     }
     grpc_core::ExecCtx::Run(
         DEBUG_LOCATION,
         stream_op->payload->recv_trailing_metadata.recv_trailing_metadata_ready,
         error);
     stream_state->state_op_done[OP_RECV_TRAILING_METADATA] = true;
     result = ACTION_TAKEN_NO_CALLBACK;
   } else if (stream_op->cancel_stream &&
              op_can_be_run(stream_op, s, &oas->state, OP_CANCEL_ERROR)) {
     CRONET_LOG(GPR_DEBUG, "running: %p  OP_CANCEL_ERROR", oas);
     if (s->cbs) {
       CRONET_LOG(GPR_DEBUG, "W: bidirectional_stream_cancel(%p)", s->cbs);
       bidirectional_stream_cancel(s->cbs);
       result = ACTION_TAKEN_WITH_CALLBACK;
     } else {
       result = ACTION_TAKEN_NO_CALLBACK;
     }
     stream_state->state_op_done[OP_CANCEL_ERROR] = true;
     if (stream_state->cancel_error == GRPC_ERROR_NONE) {
       stream_state->cancel_error =
           GRPC_ERROR_REF(stream_op->payload->cancel_stream.cancel_error);
     }
   } else if (op_can_be_run(stream_op, s, &oas->state, OP_ON_COMPLETE)) {
     CRONET_LOG(GPR_DEBUG, "running: %p  OP_ON_COMPLETE", oas);
     if (stream_state->state_op_done[OP_CANCEL_ERROR]) {
       if (stream_op->on_complete) {
         grpc_core::ExecCtx::Run(DEBUG_LOCATION, stream_op->on_complete,
                                 GRPC_ERROR_REF(stream_state->cancel_error));
       }
     } else if (stream_state->state_callback_received[OP_FAILED]) {
       if (stream_op->on_complete) {
         const char* error_message =
             cronet_net_error_as_string(stream_state->net_error);
         grpc_status_code grpc_error_code =
             cronet_net_error_to_grpc_error(stream_state->net_error);
         grpc_core::ExecCtx::Run(
             DEBUG_LOCATION, stream_op->on_complete,
             make_error_with_desc(grpc_error_code, stream_state->net_error,
                                  error_message));
       }
     } else {
       /* All actions in this stream_op are complete. Call the on_complete
        * callback
        */
       if (stream_op->on_complete) {
         grpc_core::ExecCtx::Run(DEBUG_LOCATION, stream_op->on_complete,
                                 GRPC_ERROR_NONE);
       }
     }
     oas->state.state_op_done[OP_ON_COMPLETE] = true;
     oas->done = true;
     /* reset any send message state, only if this ON_COMPLETE is about a send.
      */
     if (stream_op->send_message) {
       stream_state->state_callback_received[OP_SEND_MESSAGE] = false;
       stream_state->state_op_done[OP_SEND_MESSAGE] = false;
     }
     result = ACTION_TAKEN_NO_CALLBACK;
     /* If this is the on_complete callback being called for a received message -
       make a note */
     if (stream_op->recv_message) {
       stream_state->state_op_done[OP_RECV_MESSAGE_AND_ON_COMPLETE] = true;
     }
   } else {
     result = NO_ACTION_POSSIBLE;
   }
   return result;
 }
 
 /*
   Functions used by upper layers to access transport functionality.
 */
@@ -1395,6 +1425,8 @@ inline stream_obj::stream_obj(grpc_transport* gt, grpc_stream* gs,
 
 inline stream_obj::~stream_obj() {
   null_and_maybe_free_read_buffer(this);
+  /* Clean up read_slice_buffer in case there is unread data. */
+  grpc_slice_buffer_destroy_internal(&state.rs.read_slice_buffer);
   GRPC_ERROR_UNREF(state.cancel_error);
 }
 
diff --git a/src/core/ext/transport/inproc/inproc_transport.cc b/src/core/ext/transport/inproc/inproc_transport.cc
index e472b98c2f..7b1146bab8 100644
--- a/src/core/ext/transport/inproc/inproc_transport.cc
+++ b/src/core/ext/transport/inproc/inproc_transport.cc
@@ -1,77 +1,82 @@
 /*
  *
  * Copyright 2017 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #include <grpc/support/port_platform.h>
 
 #include "src/core/ext/transport/inproc/inproc_transport.h"
 
 #include <stdint.h>
+#include <string.h>
 
 #include <algorithm>
 #include <memory>
 #include <new>
 #include <string>
 #include <utility>
 
 #include "absl/status/status.h"
 #include "absl/status/statusor.h"
 #include "absl/strings/str_cat.h"
 #include "absl/strings/string_view.h"
 #include "absl/types/optional.h"
-#include "absl/utility/utility.h"
 
 #include <grpc/grpc.h>
 #include <grpc/impl/codegen/connectivity_state.h>
+#include <grpc/slice.h>
+#include <grpc/slice_buffer.h>
 #include <grpc/status.h>
 #include <grpc/support/alloc.h>
 #include <grpc/support/log.h>
 #include <grpc/support/sync.h>
 
 #include "src/core/lib/channel/channel_args.h"
 #include "src/core/lib/channel/channel_args_preconditioning.h"
 #include "src/core/lib/channel/channelz.h"
 #include "src/core/lib/config/core_configuration.h"
 #include "src/core/lib/gpr/useful.h"
 #include "src/core/lib/gprpp/debug_location.h"
+#include "src/core/lib/gprpp/manual_constructor.h"
+#include "src/core/lib/gprpp/orphanable.h"
 #include "src/core/lib/gprpp/ref_counted_ptr.h"
 #include "src/core/lib/gprpp/time.h"
 #include "src/core/lib/iomgr/closure.h"
 #include "src/core/lib/iomgr/endpoint.h"
 #include "src/core/lib/iomgr/error.h"
 #include "src/core/lib/iomgr/exec_ctx.h"
 #include "src/core/lib/iomgr/iomgr_fwd.h"
 #include "src/core/lib/iomgr/pollset.h"
 #include "src/core/lib/resource_quota/arena.h"
 #include "src/core/lib/slice/slice.h"
-#include "src/core/lib/slice/slice_buffer.h"
+#include "src/core/lib/slice/slice_internal.h"
 #include "src/core/lib/surface/api_trace.h"
 #include "src/core/lib/surface/channel.h"
 #include "src/core/lib/surface/channel_stack_type.h"
 #include "src/core/lib/surface/server.h"
+#include "src/core/lib/transport/byte_stream.h"
 #include "src/core/lib/transport/connectivity_state.h"
 #include "src/core/lib/transport/metadata_batch.h"
 #include "src/core/lib/transport/transport.h"
 #include "src/core/lib/transport/transport_fwd.h"
 #include "src/core/lib/transport/transport_impl.h"
 
 #define INPROC_LOG(...)                               \
   do {                                                \
     if (GRPC_TRACE_FLAG_ENABLED(grpc_inproc_trace)) { \
       gpr_log(__VA_ARGS__);                           \
     }                                                 \
   } while (0)
@@ -87,10 +92,6 @@ void fill_in_metadata(inproc_stream* s, const grpc_metadata_batch* metadata,
                       uint32_t flags, grpc_metadata_batch* out_md,
                       uint32_t* outflags, bool* markfilled);
 
-void ResetSendMessage(grpc_transport_stream_op_batch* batch) {
-  absl::exchange(batch->payload->send_message.send_message, nullptr)->Clear();
-}
-
 struct shared_mu {
   shared_mu() {
     // Share one lock between both sides since both sides get affected
@@ -155,147 +156,155 @@ struct inproc_transport {
 struct inproc_stream {
   inproc_stream(inproc_transport* t, grpc_stream_refcount* refcount,
                 const void* server_data, grpc_core::Arena* arena)
       : t(t), refs(refcount), arena(arena) {
     // Ref this stream right now for ctor and list.
     ref("inproc_init_stream:init");
     ref("inproc_init_stream:list");
 
     stream_list_prev = nullptr;
     gpr_mu_lock(&t->mu->mu);
     stream_list_next = t->stream_list;
     if (t->stream_list) {
       t->stream_list->stream_list_prev = this;
     }
     t->stream_list = this;
     gpr_mu_unlock(&t->mu->mu);
 
     if (!server_data) {
       t->ref();
       inproc_transport* st = t->other_side;
       st->ref();
       other_side = nullptr;  // will get filled in soon
       // Pass the client-side stream address to the server-side for a ref
       ref("inproc_init_stream:clt");  // ref it now on behalf of server
                                       // side to avoid destruction
       INPROC_LOG(GPR_INFO, "calling accept stream cb %p %p",
                  st->accept_stream_cb, st->accept_stream_data);
       (*st->accept_stream_cb)(st->accept_stream_data, &st->base, this);
     } else {
       // This is the server-side and is being called through accept_stream_cb
       inproc_stream* cs = const_cast<inproc_stream*>(
           static_cast<const inproc_stream*>(server_data));
       other_side = cs;
       // Ref the server-side stream on behalf of the client now
       ref("inproc_init_stream:srv");
 
       // Now we are about to affect the other side, so lock the transport
       // to make sure that it doesn't get destroyed
       gpr_mu_lock(&t->mu->mu);
       cs->other_side = this;
       // Now transfer from the other side's write_buffer if any to the to_read
       // buffer
       if (cs->write_buffer_initial_md_filled) {
         (void)fill_in_metadata(this, &cs->write_buffer_initial_md,
                                cs->write_buffer_initial_md_flags,
                                &to_read_initial_md, &to_read_initial_md_flags,
                                &to_read_initial_md_filled);
         deadline = std::min(deadline, cs->write_buffer_deadline);
         cs->write_buffer_initial_md.Clear();
         cs->write_buffer_initial_md_filled = false;
       }
       if (cs->write_buffer_trailing_md_filled) {
         (void)fill_in_metadata(this, &cs->write_buffer_trailing_md, 0,
                                &to_read_trailing_md, nullptr,
                                &to_read_trailing_md_filled);
         cs->write_buffer_trailing_md.Clear();
         cs->write_buffer_trailing_md_filled = false;
       }
       if (cs->write_buffer_cancel_error != GRPC_ERROR_NONE) {
         cancel_other_error = cs->write_buffer_cancel_error;
         cs->write_buffer_cancel_error = GRPC_ERROR_NONE;
         maybe_process_ops_locked(this, cancel_other_error);
       }
 
       gpr_mu_unlock(&t->mu->mu);
     }
   }
 
   ~inproc_stream() {
     GRPC_ERROR_UNREF(write_buffer_cancel_error);
     GRPC_ERROR_UNREF(cancel_self_error);
     GRPC_ERROR_UNREF(cancel_other_error);
 
+    if (recv_inited) {
+      grpc_slice_buffer_destroy_internal(&recv_message);
+    }
+
     t->unref();
   }
 
 #ifndef NDEBUG
 #define STREAM_REF(refs, reason) grpc_stream_ref(refs, reason)
 #define STREAM_UNREF(refs, reason) grpc_stream_unref(refs, reason)
 #else
 #define STREAM_REF(refs, reason) grpc_stream_ref(refs)
 #define STREAM_UNREF(refs, reason) grpc_stream_unref(refs)
 #endif
   void ref(const char* reason) {
     INPROC_LOG(GPR_INFO, "ref_stream %p %s", this, reason);
     STREAM_REF(refs, reason);
   }
 
   void unref(const char* reason) {
     INPROC_LOG(GPR_INFO, "unref_stream %p %s", this, reason);
     STREAM_UNREF(refs, reason);
   }
 #undef STREAM_REF
 #undef STREAM_UNREF
 
   inproc_transport* t;
   grpc_stream_refcount* refs;
   grpc_core::Arena* arena;
 
   grpc_metadata_batch to_read_initial_md{arena};
   uint32_t to_read_initial_md_flags = 0;
   bool to_read_initial_md_filled = false;
   grpc_metadata_batch to_read_trailing_md{arena};
   bool to_read_trailing_md_filled = false;
   bool ops_needed = false;
   // Write buffer used only during gap at init time when client-side
   // stream is set up but server side stream is not yet set up
   grpc_metadata_batch write_buffer_initial_md{arena};
   bool write_buffer_initial_md_filled = false;
   uint32_t write_buffer_initial_md_flags = 0;
   grpc_core::Timestamp write_buffer_deadline =
       grpc_core::Timestamp::InfFuture();
   grpc_metadata_batch write_buffer_trailing_md{arena};
   bool write_buffer_trailing_md_filled = false;
   grpc_error_handle write_buffer_cancel_error = GRPC_ERROR_NONE;
 
   struct inproc_stream* other_side;
   bool other_side_closed = false;               // won't talk anymore
   bool write_buffer_other_side_closed = false;  // on hold
 
   grpc_transport_stream_op_batch* send_message_op = nullptr;
   grpc_transport_stream_op_batch* send_trailing_md_op = nullptr;
   grpc_transport_stream_op_batch* recv_initial_md_op = nullptr;
   grpc_transport_stream_op_batch* recv_message_op = nullptr;
   grpc_transport_stream_op_batch* recv_trailing_md_op = nullptr;
 
+  grpc_slice_buffer recv_message;
+  grpc_core::ManualConstructor<grpc_core::SliceBufferByteStream> recv_stream;
+  bool recv_inited = false;
+
   bool initial_md_sent = false;
   bool trailing_md_sent = false;
   bool initial_md_recvd = false;
   bool trailing_md_recvd = false;
   // The following tracks if the server-side only pretends to have received
   // trailing metadata since it no longer cares about the RPC. If that is the
   // case, it is still ok for the client to send trailing metadata (in which
   // case it will be ignored).
   bool trailing_md_recvd_implicit_only = false;
 
   bool closed = false;
 
   grpc_error_handle cancel_self_error = GRPC_ERROR_NONE;
   grpc_error_handle cancel_other_error = GRPC_ERROR_NONE;
 
   grpc_core::Timestamp deadline = grpc_core::Timestamp::InfFuture();
 
   bool listed = true;
   struct inproc_stream* stream_list_prev;
   struct inproc_stream* stream_list_next;
 };
@@ -339,21 +348,21 @@ class CopySink {
 void fill_in_metadata(inproc_stream* s, const grpc_metadata_batch* metadata,
                       uint32_t flags, grpc_metadata_batch* out_md,
                       uint32_t* outflags, bool* markfilled) {
   if (GRPC_TRACE_FLAG_ENABLED(grpc_inproc_trace)) {
     log_metadata(metadata, s->t->is_client, outflags != nullptr);
   }
 
   if (outflags != nullptr) {
     *outflags = flags;
   }
   if (markfilled != nullptr) {
     *markfilled = true;
   }
 
   // TODO(ctiller): copy the metadata batch, don't rely on a bespoke copy
-  // function. Can only do this once mdelems are out of the way though, too
-  // many edge cases otherwise.
+  // function. Can only do this once mdelems are out of the way though, too many
+  // edge cases otherwise.
   out_md->Clear();
   CopySink sink(out_md);
   metadata->Encode(&sink);
 }
@@ -442,152 +451,176 @@ void maybe_process_ops_locked(inproc_stream* s, grpc_error_handle error) {
 void fail_helper_locked(inproc_stream* s, grpc_error_handle error) {
   INPROC_LOG(GPR_INFO, "op_state_machine %p fail_helper", s);
   // If we're failing this side, we need to make sure that
   // we also send or have already sent trailing metadata
   if (!s->trailing_md_sent) {
     // Send trailing md to the other side indicating cancellation
     s->trailing_md_sent = true;
 
     grpc_metadata_batch fake_md(s->arena);
     inproc_stream* other = s->other_side;
     grpc_metadata_batch* dest = (other == nullptr)
                                     ? &s->write_buffer_trailing_md
                                     : &other->to_read_trailing_md;
     bool* destfilled = (other == nullptr) ? &s->write_buffer_trailing_md_filled
                                           : &other->to_read_trailing_md_filled;
     (void)fill_in_metadata(s, &fake_md, 0, dest, nullptr, destfilled);
 
     if (other != nullptr) {
       if (other->cancel_other_error == GRPC_ERROR_NONE) {
         other->cancel_other_error = GRPC_ERROR_REF(error);
       }
       maybe_process_ops_locked(other, error);
     } else if (s->write_buffer_cancel_error == GRPC_ERROR_NONE) {
       s->write_buffer_cancel_error = GRPC_ERROR_REF(error);
     }
   }
   if (s->recv_initial_md_op) {
     grpc_error_handle err;
     if (!s->t->is_client) {
-      // If this is a server, provide initial metadata with a path and
-      // authority since it expects that as well as no error yet
+      // If this is a server, provide initial metadata with a path and authority
+      // since it expects that as well as no error yet
       grpc_metadata_batch fake_md(s->arena);
       fake_md.Set(grpc_core::HttpPathMetadata(),
                   grpc_core::Slice::FromStaticString("/"));
       fake_md.Set(grpc_core::HttpAuthorityMetadata(),
                   grpc_core::Slice::FromStaticString("inproc-fail"));
 
       (void)fill_in_metadata(
           s, &fake_md, 0,
           s->recv_initial_md_op->payload->recv_initial_metadata
               .recv_initial_metadata,
           s->recv_initial_md_op->payload->recv_initial_metadata.recv_flags,
           nullptr);
       err = GRPC_ERROR_NONE;
     } else {
       err = GRPC_ERROR_REF(error);
     }
     if (s->recv_initial_md_op->payload->recv_initial_metadata
             .trailing_metadata_available != nullptr) {
       // Set to true unconditionally, because we're failing the call, so even
       // if we haven't actually seen the send_trailing_metadata op from the
       // other side, we're going to return trailing metadata anyway.
       *s->recv_initial_md_op->payload->recv_initial_metadata
            .trailing_metadata_available = true;
     }
     INPROC_LOG(GPR_INFO,
                "fail_helper %p scheduling initial-metadata-ready %s %s", s,
                grpc_error_std_string(error).c_str(),
                grpc_error_std_string(err).c_str());
     grpc_core::ExecCtx::Run(
         DEBUG_LOCATION,
         s->recv_initial_md_op->payload->recv_initial_metadata
             .recv_initial_metadata_ready,
         err);
     // Last use of err so no need to REF and then UNREF it
 
     complete_if_batch_end_locked(
         s, error, s->recv_initial_md_op,
         "fail_helper scheduling recv-initial-metadata-on-complete");
     s->recv_initial_md_op = nullptr;
   }
   if (s->recv_message_op) {
     INPROC_LOG(GPR_INFO, "fail_helper %p scheduling message-ready %s", s,
                grpc_error_std_string(error).c_str());
     if (s->recv_message_op->payload->recv_message
             .call_failed_before_recv_message != nullptr) {
       *s->recv_message_op->payload->recv_message
            .call_failed_before_recv_message = true;
     }
     grpc_core::ExecCtx::Run(
         DEBUG_LOCATION,
         s->recv_message_op->payload->recv_message.recv_message_ready,
         GRPC_ERROR_REF(error));
     complete_if_batch_end_locked(
         s, error, s->recv_message_op,
         "fail_helper scheduling recv-message-on-complete");
     s->recv_message_op = nullptr;
   }
   if (s->send_message_op) {
-    ResetSendMessage(s->send_message_op);
+    s->send_message_op->payload->send_message.send_message.reset();
     complete_if_batch_end_locked(
         s, error, s->send_message_op,
         "fail_helper scheduling send-message-on-complete");
     s->send_message_op = nullptr;
   }
   if (s->send_trailing_md_op) {
     complete_if_batch_end_locked(
         s, error, s->send_trailing_md_op,
         "fail_helper scheduling send-trailng-md-on-complete");
     s->send_trailing_md_op = nullptr;
   }
   if (s->recv_trailing_md_op) {
     INPROC_LOG(GPR_INFO, "fail_helper %p scheduling trailing-metadata-ready %s",
                s, grpc_error_std_string(error).c_str());
     grpc_core::ExecCtx::Run(
         DEBUG_LOCATION,
         s->recv_trailing_md_op->payload->recv_trailing_metadata
             .recv_trailing_metadata_ready,
         GRPC_ERROR_REF(error));
     INPROC_LOG(GPR_INFO, "fail_helper %p scheduling trailing-md-on-complete %s",
                s, grpc_error_std_string(error).c_str());
     complete_if_batch_end_locked(
         s, error, s->recv_trailing_md_op,
         "fail_helper scheduling recv-trailing-metadata-on-complete");
     s->recv_trailing_md_op = nullptr;
   }
   close_other_side_locked(s, "fail_helper:other_side");
   close_stream_locked(s);
 
   GRPC_ERROR_UNREF(error);
 }
 
 // TODO(vjpai): It should not be necessary to drain the incoming byte
 // stream and create a new one; instead, we should simply pass the byte
 // stream from the sender directly to the receiver as-is.
 //
 // Note that fixing this will also avoid the assumption in this code
 // that the incoming byte stream's next() call will always return
 // synchronously.  That assumption is true today but may not always be
 // true in the future.
 void message_transfer_locked(inproc_stream* sender, inproc_stream* receiver) {
-  *receiver->recv_message_op->payload->recv_message.recv_message =
-      std::move(*sender->send_message_op->payload->send_message.send_message);
-  *receiver->recv_message_op->payload->recv_message.flags =
-      sender->send_message_op->payload->send_message.flags;
-
+  size_t remaining =
+      sender->send_message_op->payload->send_message.send_message->length();
+  if (receiver->recv_inited) {
+    grpc_slice_buffer_destroy_internal(&receiver->recv_message);
+  }
+  grpc_slice_buffer_init(&receiver->recv_message);
+  receiver->recv_inited = true;
+  do {
+    grpc_slice message_slice;
+    grpc_closure unused;
+    GPR_ASSERT(
+        sender->send_message_op->payload->send_message.send_message->Next(
+            SIZE_MAX, &unused));
+    grpc_error_handle error =
+        sender->send_message_op->payload->send_message.send_message->Pull(
+            &message_slice);
+    if (error != GRPC_ERROR_NONE) {
+      cancel_stream_locked(sender, GRPC_ERROR_REF(error));
+      break;
+    }
+    GPR_ASSERT(error == GRPC_ERROR_NONE);
+    remaining -= GRPC_SLICE_LENGTH(message_slice);
+    grpc_slice_buffer_add(&receiver->recv_message, message_slice);
+  } while (remaining > 0);
+  sender->send_message_op->payload->send_message.send_message.reset();
+
+  receiver->recv_stream.Init(&receiver->recv_message, 0);
+  receiver->recv_message_op->payload->recv_message.recv_message->reset(
+      receiver->recv_stream.get());
   INPROC_LOG(GPR_INFO, "message_transfer_locked %p scheduling message-ready",
              receiver);
   grpc_core::ExecCtx::Run(
       DEBUG_LOCATION,
       receiver->recv_message_op->payload->recv_message.recv_message_ready,
       GRPC_ERROR_NONE);
   complete_if_batch_end_locked(
       sender, GRPC_ERROR_NONE, sender->send_message_op,
       "message_transfer scheduling sender on_complete");
   complete_if_batch_end_locked(
       receiver, GRPC_ERROR_NONE, receiver->recv_message_op,
       "message_transfer scheduling receiver on_complete");
 
   receiver->recv_message_op = nullptr;
   sender->send_message_op = nullptr;
 }
@@ -595,281 +628,280 @@ void message_transfer_locked(inproc_stream* sender, inproc_stream* receiver) {
 void op_state_machine_locked(inproc_stream* s, grpc_error_handle error) {
   // This function gets called when we have contents in the unprocessed reads
   // Get what we want based on our ops wanted
   // Schedule our appropriate closures
   // and then return to ops_needed state if still needed
 
   grpc_error_handle new_err = GRPC_ERROR_NONE;
 
   bool needs_close = false;
 
   INPROC_LOG(GPR_INFO, "op_state_machine %p", s);
   // cancellation takes precedence
   inproc_stream* other = s->other_side;
 
   if (s->cancel_self_error != GRPC_ERROR_NONE) {
     fail_helper_locked(s, GRPC_ERROR_REF(s->cancel_self_error));
     goto done;
   } else if (s->cancel_other_error != GRPC_ERROR_NONE) {
     fail_helper_locked(s, GRPC_ERROR_REF(s->cancel_other_error));
     goto done;
   } else if (error != GRPC_ERROR_NONE) {
     fail_helper_locked(s, GRPC_ERROR_REF(error));
     goto done;
   }
 
   if (s->send_message_op && other) {
     if (other->recv_message_op) {
       message_transfer_locked(s, other);
       maybe_process_ops_locked(other, GRPC_ERROR_NONE);
     } else if (!s->t->is_client && s->trailing_md_sent) {
       // A server send will never be matched if the server already sent status
-      ResetSendMessage(s->send_message_op);
+      s->send_message_op->payload->send_message.send_message.reset();
       complete_if_batch_end_locked(
           s, GRPC_ERROR_NONE, s->send_message_op,
           "op_state_machine scheduling send-message-on-complete case 1");
       s->send_message_op = nullptr;
     }
   }
   // Pause a send trailing metadata if there is still an outstanding
   // send message unless we know that the send message will never get
   // matched to a receive. This happens on the client if the server has
   // already sent status or on the server if the client has requested
   // status
   if (s->send_trailing_md_op &&
       (!s->send_message_op ||
        (s->t->is_client &&
         (s->trailing_md_recvd || s->to_read_trailing_md_filled)) ||
        (!s->t->is_client && other &&
         (other->trailing_md_recvd || other->to_read_trailing_md_filled ||
          other->recv_trailing_md_op)))) {
     grpc_metadata_batch* dest = (other == nullptr)
                                     ? &s->write_buffer_trailing_md
                                     : &other->to_read_trailing_md;
     bool* destfilled = (other == nullptr) ? &s->write_buffer_trailing_md_filled
                                           : &other->to_read_trailing_md_filled;
     if (*destfilled || s->trailing_md_sent) {
       // The buffer is already in use; that's an error!
       INPROC_LOG(GPR_INFO, "Extra trailing metadata %p", s);
       new_err = GRPC_ERROR_CREATE_FROM_STATIC_STRING("Extra trailing metadata");
       fail_helper_locked(s, GRPC_ERROR_REF(new_err));
       goto done;
     } else {
       if (!other || !other->closed) {
         (void)fill_in_metadata(
             s,
             s->send_trailing_md_op->payload->send_trailing_metadata
                 .send_trailing_metadata,
             0, dest, nullptr, destfilled);
       }
       s->trailing_md_sent = true;
       if (s->send_trailing_md_op->payload->send_trailing_metadata.sent) {
         *s->send_trailing_md_op->payload->send_trailing_metadata.sent = true;
       }
       if (!s->t->is_client && s->trailing_md_recvd && s->recv_trailing_md_op) {
         INPROC_LOG(GPR_INFO,
                    "op_state_machine %p scheduling trailing-metadata-ready", s);
         grpc_core::ExecCtx::Run(
             DEBUG_LOCATION,
             s->recv_trailing_md_op->payload->recv_trailing_metadata
                 .recv_trailing_metadata_ready,
             GRPC_ERROR_NONE);
         INPROC_LOG(GPR_INFO,
                    "op_state_machine %p scheduling trailing-md-on-complete", s);
         grpc_core::ExecCtx::Run(DEBUG_LOCATION,
                                 s->recv_trailing_md_op->on_complete,
                                 GRPC_ERROR_NONE);
         s->recv_trailing_md_op = nullptr;
         needs_close = true;
       }
     }
     maybe_process_ops_locked(other, GRPC_ERROR_NONE);
     complete_if_batch_end_locked(
         s, GRPC_ERROR_NONE, s->send_trailing_md_op,
         "op_state_machine scheduling send-trailing-metadata-on-complete");
     s->send_trailing_md_op = nullptr;
   }
   if (s->recv_initial_md_op) {
     if (s->initial_md_recvd) {
       new_err =
           GRPC_ERROR_CREATE_FROM_STATIC_STRING("Already recvd initial md");
       INPROC_LOG(
           GPR_INFO,
           "op_state_machine %p scheduling on_complete errors for already "
           "recvd initial md %s",
           s, grpc_error_std_string(new_err).c_str());
       fail_helper_locked(s, GRPC_ERROR_REF(new_err));
       goto done;
     }
 
     if (s->to_read_initial_md_filled) {
       s->initial_md_recvd = true;
       fill_in_metadata(
           s, &s->to_read_initial_md, s->to_read_initial_md_flags,
           s->recv_initial_md_op->payload->recv_initial_metadata
               .recv_initial_metadata,
           s->recv_initial_md_op->payload->recv_initial_metadata.recv_flags,
           nullptr);
       if (s->deadline != grpc_core::Timestamp::InfFuture()) {
         s->recv_initial_md_op->payload->recv_initial_metadata
             .recv_initial_metadata->Set(grpc_core::GrpcTimeoutMetadata(),
                                         s->deadline);
       }
       if (s->recv_initial_md_op->payload->recv_initial_metadata
               .trailing_metadata_available != nullptr) {
         *s->recv_initial_md_op->payload->recv_initial_metadata
              .trailing_metadata_available =
             (other != nullptr && other->send_trailing_md_op != nullptr);
       }
       s->to_read_initial_md.Clear();
       s->to_read_initial_md_filled = false;
       grpc_core::ExecCtx::Run(
           DEBUG_LOCATION,
           s->recv_initial_md_op->payload->recv_initial_metadata
               .recv_initial_metadata_ready,
           GRPC_ERROR_NONE);
       complete_if_batch_end_locked(
           s, GRPC_ERROR_NONE, s->recv_initial_md_op,
           "op_state_machine scheduling recv-initial-metadata-on-complete");
       s->recv_initial_md_op = nullptr;
     }
   }
   if (s->recv_message_op) {
     if (other && other->send_message_op) {
       message_transfer_locked(other, s);
       maybe_process_ops_locked(other, GRPC_ERROR_NONE);
     }
   }
   if (s->to_read_trailing_md_filled) {
     if (s->trailing_md_recvd) {
       if (s->trailing_md_recvd_implicit_only) {
         INPROC_LOG(GPR_INFO,
                    "op_state_machine %p already implicitly received trailing "
                    "metadata, so ignoring new trailing metadata from client",
                    s);
         s->to_read_trailing_md.Clear();
         s->to_read_trailing_md_filled = false;
         s->trailing_md_recvd_implicit_only = false;
       } else {
         new_err =
             GRPC_ERROR_CREATE_FROM_STATIC_STRING("Already recvd trailing md");
         INPROC_LOG(
             GPR_INFO,
             "op_state_machine %p scheduling on_complete errors for already "
             "recvd trailing md %s",
             s, grpc_error_std_string(new_err).c_str());
         fail_helper_locked(s, GRPC_ERROR_REF(new_err));
         goto done;
       }
     }
     if (s->recv_message_op != nullptr) {
       // This message needs to be wrapped up because it will never be
       // satisfied
-      s->recv_message_op->payload->recv_message.recv_message->reset();
+      *s->recv_message_op->payload->recv_message.recv_message = nullptr;
       INPROC_LOG(GPR_INFO, "op_state_machine %p scheduling message-ready", s);
       grpc_core::ExecCtx::Run(
           DEBUG_LOCATION,
           s->recv_message_op->payload->recv_message.recv_message_ready,
           GRPC_ERROR_NONE);
       complete_if_batch_end_locked(
           s, new_err, s->recv_message_op,
           "op_state_machine scheduling recv-message-on-complete");
       s->recv_message_op = nullptr;
     }
     if ((s->trailing_md_sent || s->t->is_client) && s->send_message_op) {
       // Nothing further will try to receive from this stream, so finish off
       // any outstanding send_message op
-      ResetSendMessage(s->send_message_op);
+      s->send_message_op->payload->send_message.send_message.reset();
       s->send_message_op->payload->send_message.stream_write_closed = true;
       complete_if_batch_end_locked(
           s, new_err, s->send_message_op,
           "op_state_machine scheduling send-message-on-complete case 2");
       s->send_message_op = nullptr;
     }
     if (s->recv_trailing_md_op != nullptr) {
       // We wanted trailing metadata and we got it
       s->trailing_md_recvd = true;
       fill_in_metadata(s, &s->to_read_trailing_md, 0,
                        s->recv_trailing_md_op->payload->recv_trailing_metadata
                            .recv_trailing_metadata,
                        nullptr, nullptr);
       s->to_read_trailing_md.Clear();
       s->to_read_trailing_md_filled = false;
 
       // We should schedule the recv_trailing_md_op completion if
       // 1. this stream is the client-side
       // 2. this stream is the server-side AND has already sent its trailing md
-      //    (If the server hasn't already sent its trailing md, it doesn't
-      //    have
+      //    (If the server hasn't already sent its trailing md, it doesn't have
       //     a final status, so don't mark this op complete)
       if (s->t->is_client || s->trailing_md_sent) {
         grpc_core::ExecCtx::Run(
             DEBUG_LOCATION,
             s->recv_trailing_md_op->payload->recv_trailing_metadata
                 .recv_trailing_metadata_ready,
             GRPC_ERROR_NONE);
         grpc_core::ExecCtx::Run(DEBUG_LOCATION,
                                 s->recv_trailing_md_op->on_complete,
                                 GRPC_ERROR_NONE);
         s->recv_trailing_md_op = nullptr;
         needs_close = s->trailing_md_sent;
       }
     } else if (!s->trailing_md_recvd) {
       INPROC_LOG(
           GPR_INFO,
           "op_state_machine %p has trailing md but not yet waiting for it", s);
     }
   }
   if (!s->t->is_client && s->trailing_md_sent &&
       (s->recv_trailing_md_op != nullptr)) {
     // In this case, we don't care to receive the write-close from the client
     // because we have already sent status and the RPC is over as far as we
     // are concerned.
     INPROC_LOG(GPR_INFO, "op_state_machine %p scheduling trailing-md-ready %s",
                s, grpc_error_std_string(new_err).c_str());
     grpc_core::ExecCtx::Run(
         DEBUG_LOCATION,
         s->recv_trailing_md_op->payload->recv_trailing_metadata
             .recv_trailing_metadata_ready,
         GRPC_ERROR_REF(new_err));
     complete_if_batch_end_locked(
         s, new_err, s->recv_trailing_md_op,
         "op_state_machine scheduling recv-trailing-md-on-complete");
     s->trailing_md_recvd = true;
     s->recv_trailing_md_op = nullptr;
     // Since we are only pretending to have received the trailing MD, it would
     // be ok (not an error) if the client actually sends it later.
     s->trailing_md_recvd_implicit_only = true;
   }
   if (s->trailing_md_recvd && s->recv_message_op) {
     // No further message will come on this stream, so finish off the
     // recv_message_op
     INPROC_LOG(GPR_INFO, "op_state_machine %p scheduling message-ready", s);
-    s->recv_message_op->payload->recv_message.recv_message->reset();
+    *s->recv_message_op->payload->recv_message.recv_message = nullptr;
     grpc_core::ExecCtx::Run(
         DEBUG_LOCATION,
         s->recv_message_op->payload->recv_message.recv_message_ready,
         GRPC_ERROR_NONE);
     complete_if_batch_end_locked(
         s, new_err, s->recv_message_op,
         "op_state_machine scheduling recv-message-on-complete");
     s->recv_message_op = nullptr;
   }
   if (s->trailing_md_recvd && s->send_message_op && s->t->is_client) {
     // Nothing further will try to receive from this stream, so finish off
     // any outstanding send_message op
-    ResetSendMessage(s->send_message_op);
+    s->send_message_op->payload->send_message.send_message.reset();
     complete_if_batch_end_locked(
         s, new_err, s->send_message_op,
         "op_state_machine scheduling send-message-on-complete case 3");
     s->send_message_op = nullptr;
   }
   if (s->send_message_op || s->send_trailing_md_op || s->recv_initial_md_op ||
       s->recv_message_op || s->recv_trailing_md_op) {
     // Didn't get the item we wanted so we still need to get
     // rescheduled
     INPROC_LOG(
         GPR_INFO, "op_state_machine %p still needs closure %p %p %p %p %p", s,
         s->send_message_op, s->send_trailing_md_op, s->recv_initial_md_op,
         s->recv_message_op, s->recv_trailing_md_op);
     s->ops_needed = true;
   }
@@ -941,185 +973,185 @@ void do_nothing(void* /*arg*/, grpc_error_handle /*error*/) {}
 void perform_stream_op(grpc_transport* gt, grpc_stream* gs,
                        grpc_transport_stream_op_batch* op) {
   INPROC_LOG(GPR_INFO, "perform_stream_op %p %p %p", gt, gs, op);
   inproc_stream* s = reinterpret_cast<inproc_stream*>(gs);
   gpr_mu* mu = &s->t->mu->mu;  // save aside in case s gets closed
   gpr_mu_lock(mu);
 
   if (GRPC_TRACE_FLAG_ENABLED(grpc_inproc_trace)) {
     if (op->send_initial_metadata) {
       log_metadata(op->payload->send_initial_metadata.send_initial_metadata,
                    s->t->is_client, true);
     }
     if (op->send_trailing_metadata) {
       log_metadata(op->payload->send_trailing_metadata.send_trailing_metadata,
                    s->t->is_client, false);
     }
   }
   grpc_error_handle error = GRPC_ERROR_NONE;
   grpc_closure* on_complete = op->on_complete;
   // TODO(roth): This is a hack needed because we use data inside of the
   // closure itself to do the barrier calculation (i.e., to ensure that
   // we don't schedule the closure until all ops in the batch have been
   // completed).  This can go away once we move to a new C++ closure API
   // that provides the ability to create a barrier closure.
   if (on_complete == nullptr) {
     on_complete = GRPC_CLOSURE_INIT(&op->handler_private.closure, do_nothing,
                                     nullptr, grpc_schedule_on_exec_ctx);
   }
 
   if (op->cancel_stream) {
     // Call cancel_stream_locked without ref'ing the cancel_error because
     // this function is responsible to make sure that that field gets unref'ed
     cancel_stream_locked(s, op->payload->cancel_stream.cancel_error);
     // this op can complete without an error
   } else if (s->cancel_self_error != GRPC_ERROR_NONE) {
     // already self-canceled so still give it an error
     error = GRPC_ERROR_REF(s->cancel_self_error);
   } else {
     INPROC_LOG(GPR_INFO, "perform_stream_op %p %s%s%s%s%s%s%s", s,
                s->t->is_client ? "client" : "server",
                op->send_initial_metadata ? " send_initial_metadata" : "",
                op->send_message ? " send_message" : "",
                op->send_trailing_metadata ? " send_trailing_metadata" : "",
                op->recv_initial_metadata ? " recv_initial_metadata" : "",
                op->recv_message ? " recv_message" : "",
                op->recv_trailing_metadata ? " recv_trailing_metadata" : "");
   }
 
   inproc_stream* other = s->other_side;
   if (error == GRPC_ERROR_NONE &&
       (op->send_initial_metadata || op->send_trailing_metadata)) {
     if (s->t->is_closed) {
       error = GRPC_ERROR_CREATE_FROM_STATIC_STRING("Endpoint already shutdown");
     }
     if (error == GRPC_ERROR_NONE && op->send_initial_metadata) {
       grpc_metadata_batch* dest = (other == nullptr)
                                       ? &s->write_buffer_initial_md
                                       : &other->to_read_initial_md;
       uint32_t* destflags = (other == nullptr)
                                 ? &s->write_buffer_initial_md_flags
                                 : &other->to_read_initial_md_flags;
       bool* destfilled = (other == nullptr) ? &s->write_buffer_initial_md_filled
                                             : &other->to_read_initial_md_filled;
       if (*destfilled || s->initial_md_sent) {
         // The buffer is already in use; that's an error!
         INPROC_LOG(GPR_INFO, "Extra initial metadata %p", s);
         error = GRPC_ERROR_CREATE_FROM_STATIC_STRING("Extra initial metadata");
       } else {
         if (!s->other_side_closed) {
           (void)fill_in_metadata(
               s, op->payload->send_initial_metadata.send_initial_metadata,
               op->payload->send_initial_metadata.send_initial_metadata_flags,
               dest, destflags, destfilled);
         }
         if (s->t->is_client) {
           grpc_core::Timestamp* dl =
               (other == nullptr) ? &s->write_buffer_deadline : &other->deadline;
           *dl = std::min(
               *dl, op->payload->send_initial_metadata.send_initial_metadata
                        ->get(grpc_core::GrpcTimeoutMetadata())
                        .value_or(grpc_core::Timestamp::InfFuture()));
           s->initial_md_sent = true;
         }
       }
       maybe_process_ops_locked(other, error);
     }
   }
 
   if (error == GRPC_ERROR_NONE &&
       (op->send_message || op->send_trailing_metadata ||
        op->recv_initial_metadata || op->recv_message ||
        op->recv_trailing_metadata)) {
     // Mark ops that need to be processed by the state machine
     if (op->send_message) {
       s->send_message_op = op;
     }
     if (op->send_trailing_metadata) {
       s->send_trailing_md_op = op;
     }
     if (op->recv_initial_metadata) {
       s->recv_initial_md_op = op;
     }
     if (op->recv_message) {
       s->recv_message_op = op;
     }
     if (op->recv_trailing_metadata) {
       s->recv_trailing_md_op = op;
     }
 
     // We want to initiate the state machine if:
     // 1. We want to send a message and the other side wants to receive
     // 2. We want to send trailing metadata and there isn't an unmatched send
     //    or the other side wants trailing metadata
     // 3. We want initial metadata and the other side has sent it
     // 4. We want to receive a message and there is a message ready
     // 5. There is trailing metadata, even if nothing specifically wants
     //    that because that can shut down the receive message as well
     if ((op->send_message && other && other->recv_message_op != nullptr) ||
         (op->send_trailing_metadata &&
          (!s->send_message_op || (other && other->recv_trailing_md_op))) ||
         (op->recv_initial_metadata && s->to_read_initial_md_filled) ||
         (op->recv_message && other && other->send_message_op != nullptr) ||
         (s->to_read_trailing_md_filled || s->trailing_md_recvd)) {
       op_state_machine_locked(s, error);
     } else {
       s->ops_needed = true;
     }
   } else {
     if (error != GRPC_ERROR_NONE) {
-      // Consume any send message that was sent here but that we are not
-      // pushing to the other side
+      // Consume any send message that was sent here but that we are not pushing
+      // to the other side
       if (op->send_message) {
-        ResetSendMessage(op);
+        op->payload->send_message.send_message.reset();
       }
       // Schedule op's closures that we didn't push to op state machine
       if (op->recv_initial_metadata) {
         if (op->payload->recv_initial_metadata.trailing_metadata_available !=
             nullptr) {
           // Set to true unconditionally, because we're failing the call, so
           // even if we haven't actually seen the send_trailing_metadata op
           // from the other side, we're going to return trailing metadata
           // anyway.
           *op->payload->recv_initial_metadata.trailing_metadata_available =
               true;
         }
         INPROC_LOG(
             GPR_INFO,
             "perform_stream_op error %p scheduling initial-metadata-ready %s",
             s, grpc_error_std_string(error).c_str());
         grpc_core::ExecCtx::Run(
             DEBUG_LOCATION,
             op->payload->recv_initial_metadata.recv_initial_metadata_ready,
             GRPC_ERROR_REF(error));
       }
       if (op->recv_message) {
         INPROC_LOG(
             GPR_INFO,
             "perform_stream_op error %p scheduling recv message-ready %s", s,
             grpc_error_std_string(error).c_str());
         if (op->payload->recv_message.call_failed_before_recv_message !=
             nullptr) {
           *op->payload->recv_message.call_failed_before_recv_message = true;
         }
         grpc_core::ExecCtx::Run(DEBUG_LOCATION,
                                 op->payload->recv_message.recv_message_ready,
                                 GRPC_ERROR_REF(error));
       }
       if (op->recv_trailing_metadata) {
-        INPROC_LOG(GPR_INFO,
-                   "perform_stream_op error %p scheduling "
-                   "trailing-metadata-ready %s",
-                   s, grpc_error_std_string(error).c_str());
+        INPROC_LOG(
+            GPR_INFO,
+            "perform_stream_op error %p scheduling trailing-metadata-ready %s",
+            s, grpc_error_std_string(error).c_str());
         grpc_core::ExecCtx::Run(
             DEBUG_LOCATION,
             op->payload->recv_trailing_metadata.recv_trailing_metadata_ready,
             GRPC_ERROR_REF(error));
       }
     }
     INPROC_LOG(GPR_INFO, "perform_stream_op %p scheduling on_complete %s", s,
                grpc_error_std_string(error).c_str());
     grpc_core::ExecCtx::Run(DEBUG_LOCATION, on_complete, GRPC_ERROR_REF(error));
   }
   gpr_mu_unlock(mu);
   GRPC_ERROR_UNREF(error);
 }
diff --git a/src/core/lib/channel/call_tracer.h b/src/core/lib/channel/call_tracer.h
index c473c354ba..58b4bd1d38 100644
--- a/src/core/lib/channel/call_tracer.h
+++ b/src/core/lib/channel/call_tracer.h
@@ -1,35 +1,35 @@
 //
 //
 // Copyright 2021 gRPC authors.
 //
 // Licensed under the Apache License, Version 2.0 (the "License");
 // you may not use this file except in compliance with the License.
 // You may obtain a copy of the License at
 //
 //     http://www.apache.org/licenses/LICENSE-2.0
 //
 // Unless required by applicable law or agreed to in writing, software
 // distributed under the License is distributed on an "AS IS" BASIS,
 // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 // See the License for the specific language governing permissions and
 // limitations under the License.
 //
 //
 
 #ifndef GRPC_CORE_LIB_CHANNEL_CALL_TRACER_H
 #define GRPC_CORE_LIB_CHANNEL_CALL_TRACER_H
 
 #include <grpc/support/port_platform.h>
 
 #include <stdint.h>
 
 #include "absl/status/status.h"
 
 #include <grpc/impl/codegen/gpr_types.h>
 #include <grpc/support/atm.h>
 
 #include "src/core/lib/iomgr/error.h"
-#include "src/core/lib/slice/slice_buffer.h"
+#include "src/core/lib/transport/byte_stream.h"
 #include "src/core/lib/transport/metadata_batch.h"
 #include "src/core/lib/transport/transport.h"
 
@@ -38,57 +38,57 @@ namespace grpc_core {
 // Interface for a tracer that records activities on a call. Actual attempts for
 // this call are traced with CallAttemptTracer after invoking RecordNewAttempt()
 // on the CallTracer object.
 class CallTracer {
  public:
   // Interface for a tracer that records activities on a particular call
   // attempt.
   // (A single RPC can have multiple attempts due to retry/hedging policies or
   // as transparent retry attempts.)
   class CallAttemptTracer {
    public:
     virtual ~CallAttemptTracer() {}
     // Please refer to `grpc_transport_stream_op_batch_payload` for details on
     // arguments.
     virtual void RecordSendInitialMetadata(
         grpc_metadata_batch* send_initial_metadata, uint32_t flags) = 0;
     // TODO(yashkt): We are using gpr_atm here instead of absl::string_view
     // since that's what the transport API uses, and performing an atomic load
     // is unnecessary if the census tracer does not need it at present. Fix this
     // when the transport API changes.
     virtual void RecordOnDoneSendInitialMetadata(gpr_atm* peer_string) = 0;
     virtual void RecordSendTrailingMetadata(
         grpc_metadata_batch* send_trailing_metadata) = 0;
-    virtual void RecordSendMessage(const SliceBuffer& send_message) = 0;
+    virtual void RecordSendMessage(const ByteStream& send_message) = 0;
     // The `RecordReceivedInitialMetadata()` and `RecordReceivedMessage()`
     // methods should only be invoked when the metadata/message was
     // successfully received, i.e., without any error.
     virtual void RecordReceivedInitialMetadata(
         grpc_metadata_batch* recv_initial_metadata, uint32_t flags) = 0;
-    virtual void RecordReceivedMessage(const SliceBuffer& recv_message) = 0;
+    virtual void RecordReceivedMessage(const ByteStream& recv_message) = 0;
     // If the call was cancelled before the recv_trailing_metadata op
     // was started, recv_trailing_metadata and transport_stream_stats
     // will be null.
     virtual void RecordReceivedTrailingMetadata(
         absl::Status status, grpc_metadata_batch* recv_trailing_metadata,
         const grpc_transport_stream_stats* transport_stream_stats) = 0;
     virtual void RecordCancel(grpc_error_handle cancel_error) = 0;
     // Should be the last API call to the object. Once invoked, the tracer
     // library is free to destroy the object.
     virtual void RecordEnd(const gpr_timespec& latency) = 0;
   };
 
   virtual ~CallTracer() {}
 
   // Records a new attempt for the associated call. \a transparent denotes
   // whether the attempt is being made as a transparent retry or as a
   // non-transparent retry/heding attempt. (There will be at least one attempt
   // even if the call is not being retried.) The `CallTracer` object retains
   // ownership to the newly created `CallAttemptTracer` object. RecordEnd()
   // serves as an indication that the call stack is done with all API calls, and
   // the tracer library is free to destroy it after that.
   virtual CallAttemptTracer* StartNewAttempt(bool is_transparent_retry) = 0;
 };
 
 }  // namespace grpc_core
 
 #endif  // GRPC_CORE_LIB_CHANNEL_CALL_TRACER_H
diff --git a/src/core/lib/gprpp/manual_constructor.h b/src/core/lib/gprpp/manual_constructor.h
index 95e57cd0e4..81c3031f02 100644
--- a/src/core/lib/gprpp/manual_constructor.h
+++ b/src/core/lib/gprpp/manual_constructor.h
@@ -1,33 +1,36 @@
 /*
  *
  * Copyright 2016 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #ifndef GRPC_CORE_LIB_GPRPP_MANUAL_CONSTRUCTOR_H
 #define GRPC_CORE_LIB_GPRPP_MANUAL_CONSTRUCTOR_H
 
 // manually construct a region of memory with some type
 
 #include <grpc/support/port_platform.h>
 
 #include <stddef.h>
 
+#include <new>
 #include <type_traits>
 #include <utility>
 
+#include <grpc/support/log.h>
+
 #include "src/core/lib/gprpp/construct_destruct.h"
 
 namespace grpc_core {
@@ -99,6 +102,70 @@ class max_align_of<A, B...> {
 
 }  // namespace manual_ctor_impl
 
+template <class BaseType, class... DerivedTypes>
+class PolymorphicManualConstructor {
+ public:
+  // No constructor or destructor because one of the most useful uses of
+  // this class is as part of a union, and members of a union could not have
+  // constructors or destructors till C++11.  And, anyway, the whole point of
+  // this class is to bypass constructor and destructor.
+
+  BaseType* get() { return reinterpret_cast<BaseType*>(&space_); }
+  const BaseType* get() const {
+    return reinterpret_cast<const BaseType*>(&space_);
+  }
+
+  BaseType* operator->() { return get(); }
+  const BaseType* operator->() const { return get(); }
+
+  BaseType& operator*() { return *get(); }
+  const BaseType& operator*() const { return *get(); }
+
+  template <class DerivedType>
+  void Init() {
+    FinishInit(new (&space_) DerivedType);
+  }
+
+  // Init() constructs the Type instance using the given arguments
+  // (which are forwarded to Type's constructor).
+  //
+  // Note that Init() with no arguments performs default-initialization,
+  // not zero-initialization (i.e it behaves the same as "new Type;", not
+  // "new Type();"), so it will leave non-class types uninitialized.
+  template <class DerivedType, typename... Ts>
+  void Init(Ts&&... args) {
+    FinishInit(new (&space_) DerivedType(std::forward<Ts>(args)...));
+  }
+
+  // Init() that is equivalent to copy and move construction.
+  // Enables usage like this:
+  //   ManualConstructor<std::vector<int>> v;
+  //   v.Init({1, 2, 3});
+  template <class DerivedType>
+  void Init(const DerivedType& x) {
+    FinishInit(new (&space_) DerivedType(x));
+  }
+  template <class DerivedType>
+  void Init(DerivedType&& x) {
+    FinishInit(new (&space_) DerivedType(std::forward<DerivedType>(x)));
+  }
+
+  void Destroy() { get()->~BaseType(); }
+
+ private:
+  template <class DerivedType>
+  void FinishInit(DerivedType* p) {
+    static_assert(
+        manual_ctor_impl::is_one_of<DerivedType, DerivedTypes...>::value,
+        "DerivedType must be one of the predeclared DerivedTypes");
+    GPR_ASSERT(static_cast<BaseType*>(p) == p);
+  }
+
+  typename std::aligned_storage<
+      manual_ctor_impl::max_size_of<DerivedTypes...>::value,
+      manual_ctor_impl::max_align_of<DerivedTypes...>::value>::type space_;
+};
+
 template <typename Type>
 class ManualConstructor {
  public:
diff --git a/src/core/lib/iomgr/tcp_posix.cc b/src/core/lib/iomgr/tcp_posix.cc
index a4b8a72e42..0526fc5370 100644
--- a/src/core/lib/iomgr/tcp_posix.cc
+++ b/src/core/lib/iomgr/tcp_posix.cc
@@ -946,20 +946,19 @@ static void tcp_read(grpc_endpoint* ep, grpc_slice_buffer* incoming_buffer,
 /* A wrapper around sendmsg. It sends \a msg over \a fd and returns the number
  * of bytes sent. */
 ssize_t tcp_send(int fd, const struct msghdr* msg, int additional_flags = 0) {
   GPR_TIMER_SCOPE("sendmsg", 1);
   ssize_t sent_length;
   do {
     /* TODO(klempner): Cork if this is a partial write */
-    errno = 0;
     GRPC_STATS_INC_SYSCALL_WRITE();
     sent_length = sendmsg(fd, msg, SENDMSG_FLAGS | additional_flags);
   } while (sent_length < 0 && errno == EINTR);
   return sent_length;
 }
 
 /** This is to be called if outgoing_buffer_arg is not null. On linux platforms,
  * this will call sendmsg with socket options set to collect timestamps inside
  * the kernel. On return, sent_length is set to the return value of the sendmsg
  * call. Returns false if setting the socket options failed. This is not
  * implemented for non-linux platforms currently, and crashes out.
  */
diff --git a/src/core/lib/slice/slice_buffer.cc b/src/core/lib/slice/slice_buffer.cc
index 2d2ee9fc99..b6f33237a8 100644
--- a/src/core/lib/slice/slice_buffer.cc
+++ b/src/core/lib/slice/slice_buffer.cc
@@ -51,27 +51,16 @@ void SliceBuffer::Prepend(Slice slice) {
   grpc_slice_buffer_undo_take_first(&slice_buffer_, slice.TakeCSlice());
 }
 
-Slice SliceBuffer::RefSlice(size_t index) const {
+Slice SliceBuffer::RefSlice(size_t index) {
   return Slice(grpc_slice_ref_internal(slice_buffer_.slices[index]));
 }
 
-std::string SliceBuffer::JoinIntoString() const {
-  std::string result;
-  result.reserve(slice_buffer_.length);
-  for (size_t i = 0; i < slice_buffer_.count; i++) {
-    result.append(reinterpret_cast<const char*>(
-                      GRPC_SLICE_START_PTR(slice_buffer_.slices[i])),
-                  GRPC_SLICE_LENGTH(slice_buffer_.slices[i]));
-  }
-  return result;
-}
-
 }  // namespace grpc_core
 
 /* grow a buffer; requires GRPC_SLICE_BUFFER_INLINE_ELEMENTS > 1 */
 #define GROW(x) (3 * (x) / 2)
 
 /* Typically, we do not actually need to embiggen (by calling
  * memmove/malloc/realloc) - only if we were up against the full capacity of the
  * slice buffer. If do_embiggen is inlined, the compiler clobbers multiple
  * registers pointlessly in the common case. */
@@ -381,24 +370,6 @@ void grpc_slice_buffer_move_first_into_buffer(grpc_slice_buffer* src, size_t n,
   }
 }
 
-void grpc_slice_buffer_copy_first_into_buffer(grpc_slice_buffer* src, size_t n,
-                                              void* dst) {
-  uint8_t* dstp = static_cast<uint8_t*>(dst);
-  GPR_ASSERT(src->length >= n);
-
-  for (size_t i = 0; i < src->count; i++) {
-    grpc_slice slice = src->slices[i];
-    size_t slice_len = GRPC_SLICE_LENGTH(slice);
-    if (slice_len >= n) {
-      memcpy(dstp, GRPC_SLICE_START_PTR(slice), n);
-      return;
-    }
-    memcpy(dstp, GRPC_SLICE_START_PTR(slice), slice_len);
-    dstp += slice_len;
-    n -= slice_len;
-  }
-}
-
 void grpc_slice_buffer_trim_end(grpc_slice_buffer* sb, size_t n,
                                 grpc_slice_buffer* garbage) {
   GPR_ASSERT(n <= sb->length);
diff --git a/src/core/lib/slice/slice_buffer.h b/src/core/lib/slice/slice_buffer.h
index d08b08cc1f..9effb828e8 100644
--- a/src/core/lib/slice/slice_buffer.h
+++ b/src/core/lib/slice/slice_buffer.h
@@ -1,27 +1,25 @@
 // Copyright 2022 gRPC authors.
 //
 // Licensed under the Apache License, Version 2.0 (the "License");
 // you may not use this file except in compliance with the License.
 // You may obtain a copy of the License at
 //
 //     http://www.apache.org/licenses/LICENSE-2.0
 //
 // Unless required by applicable law or agreed to in writing, software
 // distributed under the License is distributed on an "AS IS" BASIS,
 // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 // See the License for the specific language governing permissions and
 // limitations under the License.
 
 #ifndef GRPC_CORE_LIB_SLICE_SLICE_BUFFER_Habc_SLICE_BUFFER_H
 #define GRPC_CORE_LIB_SLICE_SLICE_BUFFER_Habc_SLICE_BUFFER_H
 
 #include <grpc/support/port_platform.h>
 
 #include <string.h>
 
-#include <string>
-
 #include <grpc/slice.h>
 #include <grpc/slice_buffer.h>
 
 #include "src/core/lib/slice/slice.h"
@@ -31,107 +29,78 @@ namespace grpc_core {
 /// A slice buffer holds the memory for a collection of slices.
 /// The SliceBuffer object itself is meant to only hide the C-style API,
 /// and won't hold the data itself. In terms of lifespan, the
 /// grpc_slice_buffer ought to be kept somewhere inside the caller's objects,
 /// like a transport or an endpoint.
 ///
 /// This lifespan rule is likely to change in the future, as we may
 /// collapse the grpc_slice_buffer structure straight into this class.
 ///
 /// The SliceBuffer API is basically a replica of the grpc_slice_buffer's,
 /// and its documentation will move here once we remove the C structure,
 /// which should happen before the Event Engine's API is no longer
 /// an experimental API.
 class SliceBuffer {
  public:
   explicit SliceBuffer() { grpc_slice_buffer_init(&slice_buffer_); }
   SliceBuffer(const SliceBuffer& other) = delete;
   SliceBuffer(SliceBuffer&& other) noexcept {
     grpc_slice_buffer_init(&slice_buffer_);
-    grpc_slice_buffer_swap(&slice_buffer_, &other.slice_buffer_);
+    grpc_slice_buffer_move_into(&slice_buffer_, &other.slice_buffer_);
   }
   /// Upon destruction, the underlying raw slice buffer is cleaned out and all
   /// slices are unreffed.
   ~SliceBuffer() { grpc_slice_buffer_destroy(&slice_buffer_); }
 
-  SliceBuffer& operator=(const SliceBuffer&) = delete;
   SliceBuffer& operator=(SliceBuffer&& other) noexcept {
-    grpc_slice_buffer_swap(&slice_buffer_, &other.slice_buffer_);
+    grpc_slice_buffer_move_into(&slice_buffer_, &other.slice_buffer_);
     return *this;
   }
 
   /// Appends a new slice into the SliceBuffer and makes an attempt to merge
   /// this slice with the last slice in the SliceBuffer.
   void Append(Slice slice);
 
   /// Adds a new slice into the SliceBuffer at the next available index.
   /// Returns the index at which the new slice is added.
   size_t AppendIndexed(Slice slice);
 
   /// Returns the number of slices held by the SliceBuffer.
-  size_t Count() const { return slice_buffer_.count; }
+  size_t Count() { return slice_buffer_.count; }
 
   /// Removes/deletes the last n bytes in the SliceBuffer.
   void RemoveLastNBytes(size_t n) {
     grpc_slice_buffer_trim_end(&slice_buffer_, n, nullptr);
   }
 
   /// Move the first n bytes of the SliceBuffer into a memory pointed to by dst.
   void MoveFirstNBytesIntoBuffer(size_t n, void* dst) {
     grpc_slice_buffer_move_first_into_buffer(&slice_buffer_, n, dst);
   }
 
   /// Removes and unrefs all slices in the SliceBuffer.
   void Clear() { grpc_slice_buffer_reset_and_unref(&slice_buffer_); }
 
   /// Removes the first slice in the SliceBuffer and returns it.
   Slice TakeFirst();
 
   /// Prepends the slice to the the front of the SliceBuffer.
   void Prepend(Slice slice);
 
   /// Increased the ref-count of slice at the specified index and returns the
   /// associated slice.
-  Slice RefSlice(size_t index) const;
+  Slice RefSlice(size_t index);
 
   /// The total number of bytes held by the SliceBuffer
-  size_t Length() const { return slice_buffer_.length; }
-
-  /// Swap with another slice buffer
-  void Swap(SliceBuffer* other) {
-    grpc_slice_buffer_swap(c_slice_buffer(), other->c_slice_buffer());
-  }
-
-  /// Concatenate all slices and return the resulting string.
-  std::string JoinIntoString() const;
-
-  // Return a copy of the slice buffer
-  SliceBuffer Copy() const {
-    SliceBuffer copy;
-    for (size_t i = 0; i < Count(); i++) {
-      copy.Append(RefSlice(i));
-    }
-    return copy;
-  }
+  size_t Length() { return slice_buffer_.length; }
 
   /// Return a pointer to the back raw grpc_slice_buffer
-  grpc_slice_buffer* c_slice_buffer() { return &slice_buffer_; }
-
-  /// Return a pointer to the back raw grpc_slice_buffer
-  const grpc_slice_buffer* c_slice_buffer() const { return &slice_buffer_; }
-
-  const grpc_slice& c_slice_at(size_t index) {
-    return slice_buffer_.slices[index];
-  }
+  grpc_slice_buffer* RawSliceBuffer() { return &slice_buffer_; }
 
  private:
   /// The backing raw slice buffer.
   grpc_slice_buffer slice_buffer_;
 };
 
 }  // namespace grpc_core
 
-// Copy the first n bytes of src into memory pointed to by dst.
-void grpc_slice_buffer_copy_first_into_buffer(grpc_slice_buffer* src, size_t n,
-                                              void* dst);
-
 #endif  // GRPC_CORE_LIB_SLICE_SLICE_BUFFER_H
diff --git a/src/core/lib/surface/call.cc b/src/core/lib/surface/call.cc
index 51085c70da..56c6c96ed6 100644
--- a/src/core/lib/surface/call.cc
+++ b/src/core/lib/surface/call.cc
@@ -1,79 +1,82 @@
 /*
  *
  * Copyright 2015 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #include <grpc/support/port_platform.h>
 
 #include "src/core/lib/surface/call.h"
 
 #include <limits.h>
 #include <stdlib.h>
 
 #include <algorithm>
 #include <atomic>
+#include <memory>
 #include <new>
 #include <string>
 #include <utility>
 
 #include "absl/base/thread_annotations.h"
 #include "absl/meta/type_traits.h"
 #include "absl/status/status.h"
 #include "absl/strings/str_cat.h"
 #include "absl/strings/str_format.h"
 #include "absl/strings/string_view.h"
 
 #include <grpc/byte_buffer.h>
 #include <grpc/compression.h>
 #include <grpc/grpc.h>
 #include <grpc/impl/codegen/gpr_types.h>
 #include <grpc/impl/codegen/propagation_bits.h>
 #include <grpc/slice.h>
 #include <grpc/slice_buffer.h>
 #include <grpc/status.h>
 #include <grpc/support/alloc.h>
 #include <grpc/support/atm.h>
 #include <grpc/support/log.h>
 #include <grpc/support/string_util.h>
 
 #include "src/core/lib/channel/channel_stack.h"
 #include "src/core/lib/channel/channelz.h"
 #include "src/core/lib/channel/context.h"
 #include "src/core/lib/compression/compression_internal.h"
 #include "src/core/lib/debug/stats.h"
 #include "src/core/lib/gpr/alloc.h"
 #include "src/core/lib/gpr/time_precise.h"
 #include "src/core/lib/gprpp/cpp_impl_of.h"
 #include "src/core/lib/gprpp/debug_location.h"
+#include "src/core/lib/gprpp/manual_constructor.h"
+#include "src/core/lib/gprpp/orphanable.h"
 #include "src/core/lib/gprpp/ref_counted.h"
 #include "src/core/lib/gprpp/sync.h"
 #include "src/core/lib/iomgr/call_combiner.h"
 #include "src/core/lib/iomgr/exec_ctx.h"
 #include "src/core/lib/iomgr/polling_entity.h"
 #include "src/core/lib/profiling/timers.h"
 #include "src/core/lib/resource_quota/arena.h"
-#include "src/core/lib/slice/slice_buffer.h"
 #include "src/core/lib/slice/slice_internal.h"
 #include "src/core/lib/slice/slice_refcount.h"
 #include "src/core/lib/surface/api_trace.h"
 #include "src/core/lib/surface/call_test_only.h"
 #include "src/core/lib/surface/channel.h"
 #include "src/core/lib/surface/completion_queue.h"
 #include "src/core/lib/surface/server.h"
 #include "src/core/lib/surface/validate_metadata.h"
+#include "src/core/lib/transport/byte_stream.h"
 #include "src/core/lib/transport/error_utils.h"
 #include "src/core/lib/transport/metadata_batch.h"
 #include "src/core/lib/transport/transport.h"
@@ -165,282 +168,284 @@ class Call : public CppImplOf<Call, grpc_call> {
 class FilterStackCall final : public Call {
  public:
   ~FilterStackCall() {
     for (int i = 0; i < GRPC_CONTEXT_COUNT; ++i) {
       if (context_[i].destroy) {
         context_[i].destroy(context_[i].value);
       }
     }
     gpr_free(static_cast<void*>(const_cast<char*>(final_info_.error_string)));
   }
 
   bool Completed() override {
     return gpr_atm_acq_load(&received_final_op_atm_) != 0;
   }
 
   // TODO(ctiller): return absl::StatusOr<SomeSmartPointer<Call>>?
   static grpc_error_handle Create(grpc_call_create_args* args,
                                   grpc_call** out_call);
 
   static Call* FromTopElem(grpc_call_element* elem) {
     return FromCallStack(grpc_call_stack_from_top_element(elem));
   }
 
   grpc_call_stack* call_stack() override {
     return reinterpret_cast<grpc_call_stack*>(
         reinterpret_cast<char*>(this) +
         GPR_ROUND_UP_TO_ALIGNMENT_SIZE(sizeof(*this)));
   }
 
   grpc_call_element* call_elem(size_t idx) {
     return grpc_call_stack_element(call_stack(), idx);
   }
 
   CallCombiner* call_combiner() { return &call_combiner_; }
 
   void CancelWithError(grpc_error_handle error) override;
   void SetCompletionQueue(grpc_completion_queue* cq) override;
   char* GetPeer() override;
   grpc_call_error StartBatch(const grpc_op* ops, size_t nops, void* notify_tag,
                              bool is_notify_tag_closure) override;
   void ExternalRef() override { ext_ref_.Ref(); }
   void ExternalUnref() override;
   void InternalRef(const char* reason) override {
     GRPC_CALL_STACK_REF(call_stack(), reason);
   }
   void InternalUnref(const char* reason) override {
     GRPC_CALL_STACK_UNREF(call_stack(), reason);
   }
 
   void ContextSet(grpc_context_index elem, void* value,
                   void (*destroy)(void* value)) override;
   void* ContextGet(grpc_context_index elem) const override {
     return context_[elem].value;
   }
 
   grpc_compression_algorithm compression_for_level(
       grpc_compression_level level) override {
     return encodings_accepted_by_peer_.CompressionAlgorithmForLevel(level);
   }
 
   bool is_trailers_only() const override {
     bool result = is_trailers_only_;
     GPR_DEBUG_ASSERT(!result || recv_initial_metadata_.TransportSize() == 0);
     return result;
   }
 
   bool failed_before_recv_message() const override {
     return call_failed_before_recv_message_;
   }
 
   absl::string_view GetServerAuthority() const override {
     const Slice* authority_metadata =
         recv_initial_metadata_.get_pointer(HttpAuthorityMetadata());
     if (authority_metadata == nullptr) return "";
     return authority_metadata->as_string_view();
   }
 
   grpc_compression_algorithm test_only_compression_algorithm() override {
     return incoming_compression_algorithm_;
   }
 
   uint32_t test_only_message_flags() override {
     return test_only_last_message_flags_;
   }
 
   uint32_t test_only_encodings_accepted_by_peer() override {
     return encodings_accepted_by_peer_.ToLegacyBitmask();
   }
 
   static size_t InitialSizeEstimate() {
     return sizeof(FilterStackCall) +
            sizeof(BatchControl) * kMaxConcurrentBatches;
   }
 
  private:
   // The maximum number of concurrent batches possible.
   // Based upon the maximum number of individually queueable ops in the batch
   // api:
   //    - initial metadata send
   //    - message send
   //    - status/close send (depending on client/server)
   //    - initial metadata recv
   //    - message recv
   //    - status/close recv (depending on client/server)
   static constexpr size_t kMaxConcurrentBatches = 6;
 
   static constexpr gpr_atm kRecvNone = 0;
   static constexpr gpr_atm kRecvInitialMetadataFirst = 1;
 
   struct BatchControl {
     FilterStackCall* call_ = nullptr;
     grpc_transport_stream_op_batch op_;
     /* Share memory for cq_completion and notify_tag as they are never needed
        simultaneously. Each byte used in this data structure count as six bytes
        per call, so any savings we can make are worthwhile,
 
        We use notify_tag to determine whether or not to send notification to the
        completion queue. Once we've made that determination, we can reuse the
        memory for cq_completion. */
     union {
       grpc_cq_completion cq_completion;
       struct {
         /* Any given op indicates completion by either (a) calling a closure or
            (b) sending a notification on the call's completion queue.  If
            \a is_closure is true, \a tag indicates a closure to be invoked;
            otherwise, \a tag indicates the tag to be used in the notification to
            be sent to the completion queue. */
         void* tag;
         bool is_closure;
       } notify_tag;
     } completion_data_;
     grpc_closure start_batch_;
     grpc_closure finish_batch_;
     std::atomic<intptr_t> steps_to_complete_{0};
     AtomicError batch_error_;
     void set_num_steps_to_complete(uintptr_t steps) {
       steps_to_complete_.store(steps, std::memory_order_release);
     }
     bool completed_batch_step() {
       return steps_to_complete_.fetch_sub(1, std::memory_order_acq_rel) == 1;
     }
 
     void PostCompletion();
     void FinishStep();
+    void ContinueReceivingSlices();
+    void ReceivingSliceReady(grpc_error_handle error);
     void ProcessDataAfterMetadata();
     void ReceivingStreamReady(grpc_error_handle error);
     void ValidateFilteredMetadata();
     void ReceivingInitialMetadataReady(grpc_error_handle error);
     void ReceivingTrailingMetadataReady(grpc_error_handle error);
     void FinishBatch(grpc_error_handle error);
   };
 
   FilterStackCall(Arena* arena, const grpc_call_create_args& args)
       : Call(arena, args.server_transport_data == nullptr, args.send_deadline),
         cq_(args.cq),
         channel_(args.channel->Ref()),
         stream_op_payload_(context_) {}
 
   static void ReleaseCall(void* call, grpc_error_handle);
   static void DestroyCall(void* call, grpc_error_handle);
 
   static FilterStackCall* FromCallStack(grpc_call_stack* call_stack) {
     return reinterpret_cast<FilterStackCall*>(
         reinterpret_cast<char*>(call_stack) -
         GPR_ROUND_UP_TO_ALIGNMENT_SIZE(sizeof(FilterStackCall)));
   }
 
   void ExecuteBatch(grpc_transport_stream_op_batch* batch,
                     grpc_closure* start_batch_closure);
   void SetFinalStatus(grpc_error_handle error);
   BatchControl* ReuseOrAllocateBatchControl(const grpc_op* ops);
   void HandleCompressionAlgorithmDisabled(
       grpc_compression_algorithm compression_algorithm) GPR_ATTRIBUTE_NOINLINE;
   void HandleCompressionAlgorithmNotAccepted(
       grpc_compression_algorithm compression_algorithm) GPR_ATTRIBUTE_NOINLINE;
   bool PrepareApplicationMetadata(size_t count, grpc_metadata* metadata,
                                   bool is_trailing);
   void PublishAppMetadata(grpc_metadata_batch* b, bool is_trailing);
   void RecvInitialFilter(grpc_metadata_batch* b);
   void RecvTrailingFilter(grpc_metadata_batch* b,
                           grpc_error_handle batch_error);
 
   RefCount ext_ref_;
   CallCombiner call_combiner_;
   grpc_completion_queue* cq_;
   grpc_polling_entity pollent_;
   RefCountedPtr<Channel> channel_;
   gpr_cycle_counter start_time_ = gpr_get_cycle_counter();
 
   /** has grpc_call_unref been called */
   bool destroy_called_ = false;
   // Trailers-only response status
   bool is_trailers_only_ = false;
   /** which ops are in-flight */
   bool sent_initial_metadata_ = false;
   bool sending_message_ = false;
   bool sent_final_op_ = false;
   bool received_initial_metadata_ = false;
   bool receiving_message_ = false;
   bool requested_final_op_ = false;
   gpr_atm any_ops_sent_atm_ = 0;
   gpr_atm received_final_op_atm_ = 0;
 
   BatchControl* active_batches_[kMaxConcurrentBatches] = {};
   grpc_transport_stream_op_batch_payload stream_op_payload_;
 
   /* first idx: is_receiving, second idx: is_trailing */
   grpc_metadata_batch send_initial_metadata_{arena()};
   grpc_metadata_batch send_trailing_metadata_{arena()};
   grpc_metadata_batch recv_initial_metadata_{arena()};
   grpc_metadata_batch recv_trailing_metadata_{arena()};
 
   /* Buffered read metadata waiting to be returned to the application.
      Element 0 is initial metadata, element 1 is trailing metadata. */
   grpc_metadata_array* buffered_metadata_[2] = {};
 
   // A char* indicating the peer name.
   gpr_atm peer_string_ = 0;
 
   /* Call data useful used for reporting. Only valid after the call has
    * completed */
   grpc_call_final_info final_info_;
 
   /* Compression algorithm for *incoming* data */
   grpc_compression_algorithm incoming_compression_algorithm_ =
       GRPC_COMPRESS_NONE;
   /* Supported encodings (compression algorithms), a bitset.
    * Always support no compression. */
   CompressionAlgorithmSet encodings_accepted_by_peer_{GRPC_COMPRESS_NONE};
 
   /* Contexts for various subsystems (security, tracing, ...). */
   grpc_call_context_element context_[GRPC_CONTEXT_COUNT] = {};
 
-  SliceBuffer send_slice_buffer_;
-  absl::optional<SliceBuffer> receiving_slice_buffer_;
-  uint32_t receiving_stream_flags_;
+  ManualConstructor<SliceBufferByteStream> sending_stream_;
 
+  OrphanablePtr<ByteStream> receiving_stream_;
   bool call_failed_before_recv_message_ = false;
   grpc_byte_buffer** receiving_buffer_ = nullptr;
   grpc_slice receiving_slice_ = grpc_empty_slice();
+  grpc_closure receiving_slice_ready_;
   grpc_closure receiving_stream_ready_;
   grpc_closure receiving_initial_metadata_ready_;
   grpc_closure receiving_trailing_metadata_ready_;
   uint32_t test_only_last_message_flags_ = 0;
   // Status about operation of call
   bool sent_server_trailing_metadata_ = false;
   gpr_atm cancelled_with_error_ = 0;
 
   grpc_closure release_call_;
 
   union {
     struct {
       grpc_status_code* status;
       grpc_slice* status_details;
       const char** error_string;
     } client;
     struct {
       int* cancelled;
       // backpointer to owning server if this is a server side call.
       Server* core_server;
     } server;
   } final_op_;
   AtomicError status_error_;
 
   /* recv_state can contain one of the following values:
      RECV_NONE :                 :  no initial metadata and messages received
      RECV_INITIAL_METADATA_FIRST :  received initial metadata first
      a batch_control*            :  received messages first
 
                  +------1------RECV_NONE------3-----+
                  |                                  |
                  |                                  |
                  v                                  v
      RECV_INITIAL_METADATA_FIRST        receiving_stream_ready_bctlp
            |           ^                      |           ^
            |           |                      |           |
            +-----2-----+                      +-----4-----+
 
     For 1, 4: See receiving_initial_metadata_ready() function
     For 2, 3: See receiving_stream_ready() function */
   gpr_atm recv_state_ = 0;
 };
@@ -646,25 +651,25 @@ void FilterStackCall::ReleaseCall(void* call, grpc_error_handle /*error*/) {
 void FilterStackCall::DestroyCall(void* call, grpc_error_handle /*error*/) {
   GPR_TIMER_SCOPE("destroy_call", 0);
   auto* c = static_cast<FilterStackCall*>(call);
   c->recv_initial_metadata_.Clear();
   c->recv_trailing_metadata_.Clear();
-  c->receiving_slice_buffer_.reset();
+  c->receiving_stream_.reset();
   ParentCall* pc = c->parent_call();
   if (pc != nullptr) {
     pc->~ParentCall();
   }
   if (c->cq_) {
     GRPC_CQ_INTERNAL_UNREF(c->cq_, "bind");
   }
 
   grpc_error_handle status_error = c->status_error_.get();
   grpc_error_get_status(status_error, c->send_deadline(),
                         &c->final_info_.final_status, nullptr, nullptr,
                         &(c->final_info_.error_string));
   c->status_error_.set(GRPC_ERROR_NONE);
   c->final_info_.stats.latency =
       gpr_cycle_counter_sub(gpr_get_cycle_counter(), c->start_time_);
   grpc_call_stack_destroy(c->call_stack(), &c->final_info_,
                           GRPC_CLOSURE_INIT(&c->release_call_, ReleaseCall, c,
                                             grpc_schedule_on_exec_ctx));
 }
@@ -1073,54 +1078,53 @@ void Call::PropagateCancellationToChildren() {
 void FilterStackCall::BatchControl::PostCompletion() {
   FilterStackCall* call = call_;
   grpc_error_handle error = GRPC_ERROR_REF(batch_error_.get());
 
   if (op_.send_initial_metadata) {
     call->send_initial_metadata_.Clear();
   }
   if (op_.send_message) {
     if (op_.payload->send_message.stream_write_closed &&
         error == GRPC_ERROR_NONE) {
       error = grpc_error_add_child(
           error, GRPC_ERROR_CREATE_FROM_STATIC_STRING(
                      "Attempt to send message after stream was closed."));
     }
     call->sending_message_ = false;
-    call->send_slice_buffer_.Clear();
   }
   if (op_.send_trailing_metadata) {
     call->send_trailing_metadata_.Clear();
   }
   if (op_.recv_trailing_metadata) {
     /* propagate cancellation to any interested children */
     gpr_atm_rel_store(&call->received_final_op_atm_, 1);
     call->PropagateCancellationToChildren();
     GRPC_ERROR_UNREF(error);
     error = GRPC_ERROR_NONE;
   }
   if (error != GRPC_ERROR_NONE && op_.recv_message &&
       *call->receiving_buffer_ != nullptr) {
     grpc_byte_buffer_destroy(*call->receiving_buffer_);
     *call->receiving_buffer_ = nullptr;
   }
   batch_error_.set(GRPC_ERROR_NONE);
 
   if (completion_data_.notify_tag.is_closure) {
     /* unrefs error */
     call_ = nullptr;
     Closure::Run(DEBUG_LOCATION,
                  static_cast<grpc_closure*>(completion_data_.notify_tag.tag),
                  error);
     call->InternalUnref("completion");
   } else {
     /* unrefs error */
     grpc_cq_end_op(
         call->cq_, completion_data_.notify_tag.tag, error,
         [](void* user_data, grpc_cq_completion* /*storage*/) {
           BatchControl* bctl = static_cast<BatchControl*>(user_data);
           Call* call = bctl->call_;
           bctl->call_ = nullptr;
           call->InternalUnref("completion");
         },
         this, &completion_data_.cq_completion);
   }
 }
@@ -1131,46 +1135,114 @@ void FilterStackCall::BatchControl::FinishStep() {
   }
 }
 
+void FilterStackCall::BatchControl::ContinueReceivingSlices() {
+  grpc_error_handle error;
+  FilterStackCall* call = call_;
+  for (;;) {
+    size_t remaining = call->receiving_stream_->length() -
+                       (*call->receiving_buffer_)->data.raw.slice_buffer.length;
+    if (remaining == 0) {
+      call->receiving_message_ = false;
+      call->receiving_stream_.reset();
+      FinishStep();
+      return;
+    }
+    if (call->receiving_stream_->Next(remaining,
+                                      &call->receiving_slice_ready_)) {
+      error = call->receiving_stream_->Pull(&call->receiving_slice_);
+      if (error == GRPC_ERROR_NONE) {
+        grpc_slice_buffer_add(
+            &(*call->receiving_buffer_)->data.raw.slice_buffer,
+            call->receiving_slice_);
+      } else {
+        call->receiving_stream_.reset();
+        grpc_byte_buffer_destroy(*call->receiving_buffer_);
+        *call->receiving_buffer_ = nullptr;
+        call->receiving_message_ = false;
+        FinishStep();
+        GRPC_ERROR_UNREF(error);
+        return;
+      }
+    } else {
+      return;
+    }
+  }
+}
+
+void FilterStackCall::BatchControl::ReceivingSliceReady(
+    grpc_error_handle error) {
+  FilterStackCall* call = call_;
+  bool release_error = false;
+
+  if (error == GRPC_ERROR_NONE) {
+    grpc_slice slice;
+    error = call->receiving_stream_->Pull(&slice);
+    if (error == GRPC_ERROR_NONE) {
+      grpc_slice_buffer_add(&(*call->receiving_buffer_)->data.raw.slice_buffer,
+                            slice);
+      ContinueReceivingSlices();
+    } else {
+      /* Error returned by ByteStream::Pull() needs to be released manually */
+      release_error = true;
+    }
+  }
+
+  if (error != GRPC_ERROR_NONE) {
+    if (GRPC_TRACE_FLAG_ENABLED(grpc_trace_operation_failures)) {
+      GRPC_LOG_IF_ERROR("receiving_slice_ready", GRPC_ERROR_REF(error));
+    }
+    call->receiving_stream_.reset();
+    grpc_byte_buffer_destroy(*call->receiving_buffer_);
+    *call->receiving_buffer_ = nullptr;
+    call->receiving_message_ = false;
+    FinishStep();
+    if (release_error) {
+      GRPC_ERROR_UNREF(error);
+    }
+  }
+}
+
 void FilterStackCall::BatchControl::ProcessDataAfterMetadata() {
   FilterStackCall* call = call_;
-  if (!call->receiving_slice_buffer_.has_value()) {
+  if (call->receiving_stream_ == nullptr) {
     *call->receiving_buffer_ = nullptr;
     call->receiving_message_ = false;
     FinishStep();
   } else {
-    call->test_only_last_message_flags_ = call->receiving_stream_flags_;
-    if ((call->receiving_stream_flags_ & GRPC_WRITE_INTERNAL_COMPRESS) &&
+    call->test_only_last_message_flags_ = call->receiving_stream_->flags();
+    if ((call->receiving_stream_->flags() & GRPC_WRITE_INTERNAL_COMPRESS) &&
         (call->incoming_compression_algorithm_ != GRPC_COMPRESS_NONE)) {
       *call->receiving_buffer_ = grpc_raw_compressed_byte_buffer_create(
           nullptr, 0, call->incoming_compression_algorithm_);
     } else {
       *call->receiving_buffer_ = grpc_raw_byte_buffer_create(nullptr, 0);
     }
-    grpc_slice_buffer_move_into(
-        call->receiving_slice_buffer_->c_slice_buffer(),
-        &(*call->receiving_buffer_)->data.raw.slice_buffer);
-    call->receiving_message_ = false;
-    call->receiving_slice_buffer_.reset();
-    FinishStep();
+    GRPC_CLOSURE_INIT(
+        &call->receiving_slice_ready_,
+        [](void* bctl, grpc_error_handle error) {
+          static_cast<BatchControl*>(bctl)->ReceivingSliceReady(error);
+        },
+        this, grpc_schedule_on_exec_ctx);
+    ContinueReceivingSlices();
   }
 }
 
 void FilterStackCall::BatchControl::ReceivingStreamReady(
     grpc_error_handle error) {
   FilterStackCall* call = call_;
   if (error != GRPC_ERROR_NONE) {
-    call->receiving_slice_buffer_.reset();
+    call->receiving_stream_.reset();
     if (batch_error_.ok()) {
       batch_error_.set(error);
     }
     call->CancelWithError(GRPC_ERROR_REF(error));
   }
   /* If recv_state is kRecvNone, we will save the batch_control
    * object with rel_cas, and will not use it after the cas. Its corresponding
    * acq_load is in receiving_initial_metadata_ready() */
-  if (error != GRPC_ERROR_NONE || !call->receiving_slice_buffer_.has_value() ||
+  if (error != GRPC_ERROR_NONE || call->receiving_stream_ == nullptr ||
       !gpr_atm_rel_cas(&call->recv_state_, kRecvNone,
                        reinterpret_cast<gpr_atm>(this))) {
     ProcessDataAfterMetadata();
   }
 }
@@ -1301,410 +1373,405 @@ void FilterStackCall::BatchControl::FinishBatch(grpc_error_handle error) {
 grpc_call_error FilterStackCall::StartBatch(const grpc_op* ops, size_t nops,
                                             void* notify_tag,
                                             bool is_notify_tag_closure) {
   GPR_TIMER_SCOPE("call_start_batch", 0);
 
   size_t i;
   const grpc_op* op;
   BatchControl* bctl;
   bool has_send_ops = false;
   int num_recv_ops = 0;
   grpc_call_error error = GRPC_CALL_OK;
   grpc_transport_stream_op_batch* stream_op;
   grpc_transport_stream_op_batch_payload* stream_op_payload;
   uint32_t seen_ops = 0;
 
   for (i = 0; i < nops; i++) {
     if (seen_ops & (1u << ops[i].op)) {
       return GRPC_CALL_ERROR_TOO_MANY_OPERATIONS;
     }
     seen_ops |= (1u << ops[i].op);
   }
 
   GRPC_CALL_LOG_BATCH(GPR_INFO, ops, nops);
 
   if (nops == 0) {
     if (!is_notify_tag_closure) {
       GPR_ASSERT(grpc_cq_begin_op(cq_, notify_tag));
       grpc_cq_end_op(
           cq_, notify_tag, GRPC_ERROR_NONE,
           [](void*, grpc_cq_completion* completion) { gpr_free(completion); },
           nullptr,
           static_cast<grpc_cq_completion*>(
               gpr_malloc(sizeof(grpc_cq_completion))));
     } else {
       Closure::Run(DEBUG_LOCATION, static_cast<grpc_closure*>(notify_tag),
                    GRPC_ERROR_NONE);
     }
     error = GRPC_CALL_OK;
     goto done;
   }
 
   bctl = ReuseOrAllocateBatchControl(ops);
   if (bctl == nullptr) {
     return GRPC_CALL_ERROR_TOO_MANY_OPERATIONS;
   }
   bctl->completion_data_.notify_tag.tag = notify_tag;
   bctl->completion_data_.notify_tag.is_closure =
       static_cast<uint8_t>(is_notify_tag_closure != 0);
 
   stream_op = &bctl->op_;
   stream_op_payload = &stream_op_payload_;
 
   /* rewrite batch ops into a transport op */
   for (i = 0; i < nops; i++) {
     op = &ops[i];
     if (op->reserved != nullptr) {
       error = GRPC_CALL_ERROR;
       goto done_with_error;
     }
     switch (op->op) {
       case GRPC_OP_SEND_INITIAL_METADATA: {
         /* Flag validation: currently allow no flags */
         if (!AreInitialMetadataFlagsValid(op->flags)) {
           error = GRPC_CALL_ERROR_INVALID_FLAGS;
           goto done_with_error;
         }
         if (sent_initial_metadata_) {
           error = GRPC_CALL_ERROR_TOO_MANY_OPERATIONS;
           goto done_with_error;
         }
         // TODO(juanlishen): If the user has already specified a compression
         // algorithm by setting the initial metadata with key of
         // GRPC_COMPRESSION_REQUEST_ALGORITHM_MD_KEY, we shouldn't override that
         // with the compression algorithm mapped from compression level.
         /* process compression level */
         grpc_compression_level effective_compression_level =
             GRPC_COMPRESS_LEVEL_NONE;
         bool level_set = false;
         if (op->data.send_initial_metadata.maybe_compression_level.is_set) {
           effective_compression_level =
               op->data.send_initial_metadata.maybe_compression_level.level;
           level_set = true;
         } else {
           const grpc_compression_options copts =
               channel_->compression_options();
           if (copts.default_level.is_set) {
             level_set = true;
             effective_compression_level = copts.default_level.level;
           }
         }
         // Currently, only server side supports compression level setting.
         if (level_set && !is_client()) {
           const grpc_compression_algorithm calgo =
               encodings_accepted_by_peer_.CompressionAlgorithmForLevel(
                   effective_compression_level);
           // The following metadata will be checked and removed by the message
           // compression filter. It will be used as the call's compression
           // algorithm.
           send_initial_metadata_.Set(GrpcInternalEncodingRequest(), calgo);
         }
         if (op->data.send_initial_metadata.count > INT_MAX) {
           error = GRPC_CALL_ERROR_INVALID_METADATA;
           goto done_with_error;
         }
         stream_op->send_initial_metadata = true;
         sent_initial_metadata_ = true;
         if (!PrepareApplicationMetadata(op->data.send_initial_metadata.count,
                                         op->data.send_initial_metadata.metadata,
                                         false)) {
           error = GRPC_CALL_ERROR_INVALID_METADATA;
           goto done_with_error;
         }
         // Ignore any te metadata key value pairs specified.
         send_initial_metadata_.Remove(TeMetadata());
         /* TODO(ctiller): just make these the same variable? */
         if (is_client() && send_deadline() != Timestamp::InfFuture()) {
           send_initial_metadata_.Set(GrpcTimeoutMetadata(), send_deadline());
         }
         stream_op_payload->send_initial_metadata.send_initial_metadata =
             &send_initial_metadata_;
         stream_op_payload->send_initial_metadata.send_initial_metadata_flags =
             op->flags;
         if (is_client()) {
           stream_op_payload->send_initial_metadata.peer_string = &peer_string_;
         }
         has_send_ops = true;
         break;
       }
       case GRPC_OP_SEND_MESSAGE: {
         if (!AreWriteFlagsValid(op->flags)) {
           error = GRPC_CALL_ERROR_INVALID_FLAGS;
           goto done_with_error;
         }
         if (op->data.send_message.send_message == nullptr) {
           error = GRPC_CALL_ERROR_INVALID_MESSAGE;
           goto done_with_error;
         }
         if (sending_message_) {
           error = GRPC_CALL_ERROR_TOO_MANY_OPERATIONS;
           goto done_with_error;
         }
         uint32_t flags = op->flags;
         /* If the outgoing buffer is already compressed, mark it as so in the
            flags. These will be picked up by the compression filter and further
            (wasteful) attempts at compression skipped. */
         if (op->data.send_message.send_message->data.raw.compression >
             GRPC_COMPRESS_NONE) {
           flags |= GRPC_WRITE_INTERNAL_COMPRESS;
         }
         stream_op->send_message = true;
         sending_message_ = true;
-        send_slice_buffer_.Clear();
-        grpc_slice_buffer_move_into(
-            &op->data.send_message.send_message->data.raw.slice_buffer,
-            send_slice_buffer_.c_slice_buffer());
-        stream_op_payload->send_message.flags = flags;
-        stream_op_payload->send_message.send_message = &send_slice_buffer_;
+        sending_stream_.Init(
+            &op->data.send_message.send_message->data.raw.slice_buffer, flags);
+        stream_op_payload->send_message.send_message.reset(
+            sending_stream_.get());
         has_send_ops = true;
         break;
       }
       case GRPC_OP_SEND_CLOSE_FROM_CLIENT: {
         /* Flag validation: currently allow no flags */
         if (op->flags != 0) {
           error = GRPC_CALL_ERROR_INVALID_FLAGS;
           goto done_with_error;
         }
         if (!is_client()) {
           error = GRPC_CALL_ERROR_NOT_ON_SERVER;
           goto done_with_error;
         }
         if (sent_final_op_) {
           error = GRPC_CALL_ERROR_TOO_MANY_OPERATIONS;
           goto done_with_error;
         }
         stream_op->send_trailing_metadata = true;
         sent_final_op_ = true;
         stream_op_payload->send_trailing_metadata.send_trailing_metadata =
             &send_trailing_metadata_;
         has_send_ops = true;
         break;
       }
       case GRPC_OP_SEND_STATUS_FROM_SERVER: {
         /* Flag validation: currently allow no flags */
         if (op->flags != 0) {
           error = GRPC_CALL_ERROR_INVALID_FLAGS;
           goto done_with_error;
         }
         if (is_client()) {
           error = GRPC_CALL_ERROR_NOT_ON_CLIENT;
           goto done_with_error;
         }
         if (sent_final_op_) {
           error = GRPC_CALL_ERROR_TOO_MANY_OPERATIONS;
           goto done_with_error;
         }
         if (op->data.send_status_from_server.trailing_metadata_count >
             INT_MAX) {
           error = GRPC_CALL_ERROR_INVALID_METADATA;
           goto done_with_error;
         }
         stream_op->send_trailing_metadata = true;
         sent_final_op_ = true;
 
         if (!PrepareApplicationMetadata(
                 op->data.send_status_from_server.trailing_metadata_count,
                 op->data.send_status_from_server.trailing_metadata, true)) {
           error = GRPC_CALL_ERROR_INVALID_METADATA;
           goto done_with_error;
         }
 
         grpc_error_handle status_error =
             op->data.send_status_from_server.status == GRPC_STATUS_OK
                 ? GRPC_ERROR_NONE
                 : grpc_error_set_int(
                       GRPC_ERROR_CREATE_FROM_STATIC_STRING(
                           "Server returned error"),
                       GRPC_ERROR_INT_GRPC_STATUS,
                       static_cast<intptr_t>(
                           op->data.send_status_from_server.status));
         if (op->data.send_status_from_server.status_details != nullptr) {
           send_trailing_metadata_.Set(
               GrpcMessageMetadata(),
               Slice(grpc_slice_copy(
                   *op->data.send_status_from_server.status_details)));
           if (status_error != GRPC_ERROR_NONE) {
             status_error = grpc_error_set_str(
                 status_error, GRPC_ERROR_STR_GRPC_MESSAGE,
                 StringViewFromSlice(
                     *op->data.send_status_from_server.status_details));
           }
         }
 
         status_error_.set(status_error);
         GRPC_ERROR_UNREF(status_error);
 
         send_trailing_metadata_.Set(GrpcStatusMetadata(),
                                     op->data.send_status_from_server.status);
 
         // Ignore any te metadata key value pairs specified.
         send_trailing_metadata_.Remove(TeMetadata());
         stream_op_payload->send_trailing_metadata.send_trailing_metadata =
             &send_trailing_metadata_;
         stream_op_payload->send_trailing_metadata.sent =
             &sent_server_trailing_metadata_;
         has_send_ops = true;
         break;
       }
       case GRPC_OP_RECV_INITIAL_METADATA: {
         /* Flag validation: currently allow no flags */
         if (op->flags != 0) {
           error = GRPC_CALL_ERROR_INVALID_FLAGS;
           goto done_with_error;
         }
         if (received_initial_metadata_) {
           error = GRPC_CALL_ERROR_TOO_MANY_OPERATIONS;
           goto done_with_error;
         }
         received_initial_metadata_ = true;
         buffered_metadata_[0] =
             op->data.recv_initial_metadata.recv_initial_metadata;
         GRPC_CLOSURE_INIT(
             &receiving_initial_metadata_ready_,
             [](void* bctl, grpc_error_handle error) {
               static_cast<BatchControl*>(bctl)->ReceivingInitialMetadataReady(
                   error);
             },
             bctl, grpc_schedule_on_exec_ctx);
         stream_op->recv_initial_metadata = true;
         stream_op_payload->recv_initial_metadata.recv_initial_metadata =
             &recv_initial_metadata_;
         stream_op_payload->recv_initial_metadata.recv_initial_metadata_ready =
             &receiving_initial_metadata_ready_;
         if (is_client()) {
           stream_op_payload->recv_initial_metadata.trailing_metadata_available =
               &is_trailers_only_;
         } else {
           stream_op_payload->recv_initial_metadata.peer_string = &peer_string_;
         }
         ++num_recv_ops;
         break;
       }
       case GRPC_OP_RECV_MESSAGE: {
         /* Flag validation: currently allow no flags */
         if (op->flags != 0) {
           error = GRPC_CALL_ERROR_INVALID_FLAGS;
           goto done_with_error;
         }
         if (receiving_message_) {
           error = GRPC_CALL_ERROR_TOO_MANY_OPERATIONS;
           goto done_with_error;
         }
         receiving_message_ = true;
         stream_op->recv_message = true;
-        receiving_slice_buffer_.reset();
         receiving_buffer_ = op->data.recv_message.recv_message;
-        stream_op_payload->recv_message.recv_message = &receiving_slice_buffer_;
-        receiving_stream_flags_ = 0;
-        stream_op_payload->recv_message.flags = &receiving_stream_flags_;
+        stream_op_payload->recv_message.recv_message = &receiving_stream_;
         stream_op_payload->recv_message.call_failed_before_recv_message =
             &call_failed_before_recv_message_;
         GRPC_CLOSURE_INIT(
             &receiving_stream_ready_,
             [](void* bctlp, grpc_error_handle error) {
               auto* bctl = static_cast<BatchControl*>(bctlp);
               auto* call = bctl->call_;
               //  Yields the call combiner before processing the received
               //  message.
               GRPC_CALL_COMBINER_STOP(call->call_combiner(),
                                       "recv_message_ready");
               bctl->ReceivingStreamReady(error);
             },
             bctl, grpc_schedule_on_exec_ctx);
         stream_op_payload->recv_message.recv_message_ready =
             &receiving_stream_ready_;
         ++num_recv_ops;
         break;
       }
       case GRPC_OP_RECV_STATUS_ON_CLIENT: {
         /* Flag validation: currently allow no flags */
         if (op->flags != 0) {
           error = GRPC_CALL_ERROR_INVALID_FLAGS;
           goto done_with_error;
         }
         if (!is_client()) {
           error = GRPC_CALL_ERROR_NOT_ON_SERVER;
           goto done_with_error;
         }
         if (requested_final_op_) {
           error = GRPC_CALL_ERROR_TOO_MANY_OPERATIONS;
           goto done_with_error;
         }
         requested_final_op_ = true;
         buffered_metadata_[1] =
             op->data.recv_status_on_client.trailing_metadata;
         final_op_.client.status = op->data.recv_status_on_client.status;
         final_op_.client.status_details =
             op->data.recv_status_on_client.status_details;
         final_op_.client.error_string =
             op->data.recv_status_on_client.error_string;
         stream_op->recv_trailing_metadata = true;
         stream_op_payload->recv_trailing_metadata.recv_trailing_metadata =
             &recv_trailing_metadata_;
         stream_op_payload->recv_trailing_metadata.collect_stats =
             &final_info_.stats.transport_stream_stats;
         GRPC_CLOSURE_INIT(
             &receiving_trailing_metadata_ready_,
             [](void* bctl, grpc_error_handle error) {
               static_cast<BatchControl*>(bctl)->ReceivingTrailingMetadataReady(
                   error);
             },
             bctl, grpc_schedule_on_exec_ctx);
         stream_op_payload->recv_trailing_metadata.recv_trailing_metadata_ready =
             &receiving_trailing_metadata_ready_;
         ++num_recv_ops;
         break;
       }
       case GRPC_OP_RECV_CLOSE_ON_SERVER: {
         /* Flag validation: currently allow no flags */
         if (op->flags != 0) {
           error = GRPC_CALL_ERROR_INVALID_FLAGS;
           goto done_with_error;
         }
         if (is_client()) {
           error = GRPC_CALL_ERROR_NOT_ON_CLIENT;
           goto done_with_error;
         }
         if (requested_final_op_) {
           error = GRPC_CALL_ERROR_TOO_MANY_OPERATIONS;
           goto done_with_error;
         }
         requested_final_op_ = true;
         final_op_.server.cancelled = op->data.recv_close_on_server.cancelled;
         stream_op->recv_trailing_metadata = true;
         stream_op_payload->recv_trailing_metadata.recv_trailing_metadata =
             &recv_trailing_metadata_;
         stream_op_payload->recv_trailing_metadata.collect_stats =
             &final_info_.stats.transport_stream_stats;
         GRPC_CLOSURE_INIT(
             &receiving_trailing_metadata_ready_,
             [](void* bctl, grpc_error_handle error) {
               static_cast<BatchControl*>(bctl)->ReceivingTrailingMetadataReady(
                   error);
             },
             bctl, grpc_schedule_on_exec_ctx);
         stream_op_payload->recv_trailing_metadata.recv_trailing_metadata_ready =
             &receiving_trailing_metadata_ready_;
         ++num_recv_ops;
         break;
       }
     }
   }
 
   InternalRef("completion");
   if (!is_notify_tag_closure) {
     GPR_ASSERT(grpc_cq_begin_op(cq_, notify_tag));
   }
   bctl->set_num_steps_to_complete((has_send_ops ? 1 : 0) + num_recv_ops);
 
   if (has_send_ops) {
     GRPC_CLOSURE_INIT(
         &bctl->finish_batch_,
         [](void* bctl, grpc_error_handle error) {
           static_cast<BatchControl*>(bctl)->FinishBatch(error);
         },
         bctl, grpc_schedule_on_exec_ctx);
     stream_op->on_complete = &bctl->finish_batch_;
   }
 
   gpr_atm_rel_store(&any_ops_sent_atm_, 1);
   ExecuteBatch(stream_op, &bctl->start_batch_);
@@ -1715,24 +1782,28 @@ done:
 done_with_error:
   /* reverse any mutations that occurred */
   if (stream_op->send_initial_metadata) {
     sent_initial_metadata_ = false;
     send_initial_metadata_.Clear();
   }
   if (stream_op->send_message) {
     sending_message_ = false;
+    // No need to invoke call->sending_stream->Orphan() explicitly.
+    // stream_op_payload->send_message.send_message.reset() calls Deletor
+    // of call->sending_stream which in-turn invokes the Orphan() method.
+    stream_op_payload->send_message.send_message.reset();
   }
   if (stream_op->send_trailing_metadata) {
     sent_final_op_ = false;
     send_trailing_metadata_.Clear();
   }
   if (stream_op->recv_initial_metadata) {
     received_initial_metadata_ = false;
   }
   if (stream_op->recv_message) {
     receiving_message_ = false;
   }
   if (stream_op->recv_trailing_metadata) {
     requested_final_op_ = false;
   }
   goto done;
 }
diff --git a/src/core/lib/transport/byte_stream.cc b/src/core/lib/transport/byte_stream.cc
new file mode 100644
index 0000000000..3b909182f6
--- /dev/null
+++ b/src/core/lib/transport/byte_stream.cc
@@ -0,0 +1,165 @@
+/*
+ *
+ * Copyright 2015 gRPC authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ */
+
+#include <grpc/support/port_platform.h>
+
+#include "src/core/lib/transport/byte_stream.h"
+
+#include <memory>
+#include <utility>
+
+#include <grpc/slice_buffer.h>
+#include <grpc/support/log.h>
+
+#include "src/core/lib/slice/slice_internal.h"
+#include "src/core/lib/slice/slice_refcount.h"
+
+namespace grpc_core {
+
+//
+// SliceBufferByteStream
+//
+
+SliceBufferByteStream::SliceBufferByteStream(grpc_slice_buffer* slice_buffer,
+                                             uint32_t flags)
+    : ByteStream(static_cast<uint32_t>(slice_buffer->length), flags) {
+  GPR_ASSERT(slice_buffer->length <= UINT32_MAX);
+  grpc_slice_buffer_init(&backing_buffer_);
+  grpc_slice_buffer_swap(slice_buffer, &backing_buffer_);
+  if (backing_buffer_.count == 0) {
+    grpc_slice_buffer_add_indexed(&backing_buffer_, grpc_empty_slice());
+    GPR_ASSERT(backing_buffer_.count > 0);
+  }
+}
+
+SliceBufferByteStream::~SliceBufferByteStream() {}
+
+void SliceBufferByteStream::Orphan() {
+  grpc_slice_buffer_destroy_internal(&backing_buffer_);
+  GRPC_ERROR_UNREF(shutdown_error_);
+  shutdown_error_ = GRPC_ERROR_NONE;
+  // Note: We do not actually delete the object here, since
+  // SliceBufferByteStream is usually allocated as part of a larger
+  // object and has an OrphanablePtr of itself passed down through the
+  // filter stack.
+}
+
+bool SliceBufferByteStream::Next(size_t /*max_size_hint*/,
+                                 grpc_closure* /*on_complete*/) {
+  GPR_DEBUG_ASSERT(backing_buffer_.count > 0);
+  return true;
+}
+
+grpc_error_handle SliceBufferByteStream::Pull(grpc_slice* slice) {
+  if (GPR_UNLIKELY(shutdown_error_ != GRPC_ERROR_NONE)) {
+    return GRPC_ERROR_REF(shutdown_error_);
+  }
+  *slice = grpc_slice_buffer_take_first(&backing_buffer_);
+  return GRPC_ERROR_NONE;
+}
+
+void SliceBufferByteStream::Shutdown(grpc_error_handle error) {
+  GRPC_ERROR_UNREF(shutdown_error_);
+  shutdown_error_ = error;
+}
+
+//
+// ByteStreamCache
+//
+
+ByteStreamCache::ByteStreamCache(OrphanablePtr<ByteStream> underlying_stream)
+    : underlying_stream_(std::move(underlying_stream)),
+      length_(underlying_stream_->length()),
+      flags_(underlying_stream_->flags()) {
+  grpc_slice_buffer_init(&cache_buffer_);
+}
+
+ByteStreamCache::~ByteStreamCache() { Destroy(); }
+
+void ByteStreamCache::Destroy() {
+  underlying_stream_.reset();
+  if (cache_buffer_.length > 0) {
+    grpc_slice_buffer_destroy_internal(&cache_buffer_);
+  }
+}
+
+//
+// ByteStreamCache::CachingByteStream
+//
+
+ByteStreamCache::CachingByteStream::CachingByteStream(ByteStreamCache* cache)
+    : ByteStream(cache->length_, cache->flags_), cache_(cache) {}
+
+ByteStreamCache::CachingByteStream::~CachingByteStream() {}
+
+void ByteStreamCache::CachingByteStream::Orphan() {
+  GRPC_ERROR_UNREF(shutdown_error_);
+  shutdown_error_ = GRPC_ERROR_NONE;
+  // Note: We do not actually delete the object here, since
+  // CachingByteStream is usually allocated as part of a larger
+  // object and has an OrphanablePtr of itself passed down through the
+  // filter stack.
+}
+
+bool ByteStreamCache::CachingByteStream::Next(size_t max_size_hint,
+                                              grpc_closure* on_complete) {
+  if (shutdown_error_ != GRPC_ERROR_NONE) return true;
+  if (cursor_ < cache_->cache_buffer_.count) return true;
+  GPR_ASSERT(cache_->underlying_stream_ != nullptr);
+  return cache_->underlying_stream_->Next(max_size_hint, on_complete);
+}
+
+grpc_error_handle ByteStreamCache::CachingByteStream::Pull(grpc_slice* slice) {
+  if (shutdown_error_ != GRPC_ERROR_NONE) {
+    return GRPC_ERROR_REF(shutdown_error_);
+  }
+  if (cursor_ < cache_->cache_buffer_.count) {
+    *slice = grpc_slice_ref_internal(cache_->cache_buffer_.slices[cursor_]);
+    ++cursor_;
+    offset_ += GRPC_SLICE_LENGTH(*slice);
+    return GRPC_ERROR_NONE;
+  }
+  GPR_ASSERT(cache_->underlying_stream_ != nullptr);
+  grpc_error_handle error = cache_->underlying_stream_->Pull(slice);
+  if (error == GRPC_ERROR_NONE) {
+    grpc_slice_buffer_add(&cache_->cache_buffer_,
+                          grpc_slice_ref_internal(*slice));
+    ++cursor_;
+    offset_ += GRPC_SLICE_LENGTH(*slice);
+    // Orphan the underlying stream if it's been drained.
+    if (offset_ == cache_->underlying_stream_->length()) {
+      cache_->underlying_stream_.reset();
+    }
+  }
+  return error;
+}
+
+void ByteStreamCache::CachingByteStream::Shutdown(grpc_error_handle error) {
+  GRPC_ERROR_UNREF(shutdown_error_);
+  shutdown_error_ = GRPC_ERROR_REF(error);
+  if (cache_->underlying_stream_ != nullptr) {
+    cache_->underlying_stream_->Shutdown(error);
+  }
+}
+
+void ByteStreamCache::CachingByteStream::Reset() {
+  cursor_ = 0;
+  offset_ = 0;
+}
+
+}  // namespace grpc_core
diff --git a/src/core/lib/transport/byte_stream.h b/src/core/lib/transport/byte_stream.h
new file mode 100644
index 0000000000..6c5d6e4d23
--- /dev/null
+++ b/src/core/lib/transport/byte_stream.h
@@ -0,0 +1,170 @@
+/*
+ *
+ * Copyright 2015 gRPC authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ */
+
+#ifndef GRPC_CORE_LIB_TRANSPORT_BYTE_STREAM_H
+#define GRPC_CORE_LIB_TRANSPORT_BYTE_STREAM_H
+
+#include <grpc/support/port_platform.h>
+
+#include <stddef.h>
+#include <stdint.h>
+
+#include <grpc/slice.h>
+
+#include "src/core/lib/gprpp/orphanable.h"
+#include "src/core/lib/iomgr/closure.h"
+#include "src/core/lib/iomgr/error.h"
+
+/** Internal bit flag for grpc_begin_message's \a flags signaling the use of
+ * compression for the message. (Does not apply for stream compression.) */
+#define GRPC_WRITE_INTERNAL_COMPRESS (0x80000000u)
+/** Internal bit flag for determining whether the message was compressed and had
+ * to be decompressed by the message_decompress filter. (Does not apply for
+ * stream compression.) */
+#define GRPC_WRITE_INTERNAL_TEST_ONLY_WAS_COMPRESSED (0x40000000u)
+/** Mask of all valid internal flags. */
+#define GRPC_WRITE_INTERNAL_USED_MASK \
+  (GRPC_WRITE_INTERNAL_COMPRESS | GRPC_WRITE_INTERNAL_TEST_ONLY_WAS_COMPRESSED)
+
+namespace grpc_core {
+
+class ByteStream : public Orphanable {
+ public:
+  ~ByteStream() override {}
+
+  // Returns true if the bytes are available immediately (in which case
+  // on_complete will not be called), or false if the bytes will be available
+  // asynchronously (in which case on_complete will be called when they
+  // are available). Should not be called if there is no data left on the
+  // stream.
+  //
+  // max_size_hint can be set as a hint as to the maximum number
+  // of bytes that would be acceptable to read.
+  virtual bool Next(size_t max_size_hint, grpc_closure* on_complete) = 0;
+
+  // Returns the next slice in the byte stream when it is available, as
+  // indicated by Next().
+  //
+  // Once a slice is returned into *slice, it is owned by the caller.
+  virtual grpc_error_handle Pull(grpc_slice* slice) = 0;
+
+  // Shuts down the byte stream.
+  //
+  // If there is a pending call to on_complete from Next(), it will be
+  // invoked with the error passed to Shutdown().
+  //
+  // The next call to Pull() (if any) will return the error passed to
+  // Shutdown().
+  virtual void Shutdown(grpc_error_handle error) = 0;
+
+  uint32_t length() const { return length_; }
+  uint32_t flags() const { return flags_; }
+
+  void set_flags(uint32_t flags) { flags_ = flags; }
+
+ protected:
+  ByteStream(uint32_t length, uint32_t flags)
+      : length_(length), flags_(flags) {}
+
+ private:
+  const uint32_t length_;
+  uint32_t flags_;
+};
+
+//
+// SliceBufferByteStream
+//
+// A ByteStream that wraps a slice buffer.
+//
+
+class SliceBufferByteStream : public ByteStream {
+ public:
+  // Removes all slices in slice_buffer, leaving it empty.
+  SliceBufferByteStream(grpc_slice_buffer* slice_buffer, uint32_t flags);
+
+  ~SliceBufferByteStream() override;
+
+  void Orphan() override;
+
+  bool Next(size_t max_size_hint, grpc_closure* on_complete) override;
+  grpc_error_handle Pull(grpc_slice* slice) override;
+  void Shutdown(grpc_error_handle error) override;
+
+ private:
+  grpc_error_handle shutdown_error_ = GRPC_ERROR_NONE;
+  grpc_slice_buffer backing_buffer_;
+};
+
+//
+// CachingByteStream
+//
+// A ByteStream that that wraps an underlying byte stream but caches
+// the resulting slices in a slice buffer.  If an initial attempt fails
+// without fully draining the underlying stream, a new caching stream
+// can be created from the same underlying cache, in which case it will
+// return whatever is in the backing buffer before continuing to read the
+// underlying stream.
+//
+// NOTE: No synchronization is done, so it is not safe to have multiple
+// CachingByteStreams simultaneously drawing from the same underlying
+// ByteStreamCache at the same time.
+//
+
+class ByteStreamCache {
+ public:
+  class CachingByteStream : public ByteStream {
+   public:
+    explicit CachingByteStream(ByteStreamCache* cache);
+
+    ~CachingByteStream() override;
+
+    void Orphan() override;
+
+    bool Next(size_t max_size_hint, grpc_closure* on_complete) override;
+    grpc_error_handle Pull(grpc_slice* slice) override;
+    void Shutdown(grpc_error_handle error) override;
+
+    // Resets the byte stream to the start of the underlying stream.
+    void Reset();
+
+   private:
+    ByteStreamCache* cache_;
+    size_t cursor_ = 0;
+    size_t offset_ = 0;
+    grpc_error_handle shutdown_error_ = GRPC_ERROR_NONE;
+  };
+
+  explicit ByteStreamCache(OrphanablePtr<ByteStream> underlying_stream);
+
+  ~ByteStreamCache();
+
+  // Must not be destroyed while still in use by a CachingByteStream.
+  void Destroy();
+
+  grpc_slice_buffer* cache_buffer() { return &cache_buffer_; }
+
+ private:
+  OrphanablePtr<ByteStream> underlying_stream_;
+  uint32_t length_;
+  uint32_t flags_;
+  grpc_slice_buffer cache_buffer_;
+};
+
+}  // namespace grpc_core
+
+#endif /* GRPC_CORE_LIB_TRANSPORT_BYTE_STREAM_H */
diff --git a/src/core/lib/transport/transport.cc b/src/core/lib/transport/transport.cc
index 35e28349ae..b7c4950acb 100644
--- a/src/core/lib/transport/transport.cc
+++ b/src/core/lib/transport/transport.cc
@@ -161,27 +161,30 @@ void grpc_transport_stream_op_batch_finish_with_failure(
 void grpc_transport_stream_op_batch_queue_finish_with_failure(
     grpc_transport_stream_op_batch* batch, grpc_error_handle error,
     grpc_core::CallCombinerClosureList* closures) {
+  if (batch->send_message) {
+    batch->payload->send_message.send_message.reset();
+  }
   if (batch->cancel_stream) {
     GRPC_ERROR_UNREF(batch->payload->cancel_stream.cancel_error);
   }
   // Construct a list of closures to execute.
   if (batch->recv_initial_metadata) {
     closures->Add(
         batch->payload->recv_initial_metadata.recv_initial_metadata_ready,
         GRPC_ERROR_REF(error), "failing recv_initial_metadata_ready");
   }
   if (batch->recv_message) {
     closures->Add(batch->payload->recv_message.recv_message_ready,
                   GRPC_ERROR_REF(error), "failing recv_message_ready");
   }
   if (batch->recv_trailing_metadata) {
     closures->Add(
         batch->payload->recv_trailing_metadata.recv_trailing_metadata_ready,
         GRPC_ERROR_REF(error), "failing recv_trailing_metadata_ready");
   }
   if (batch->on_complete != nullptr) {
     closures->Add(batch->on_complete, GRPC_ERROR_REF(error),
                   "failing on_complete");
   }
   GRPC_ERROR_UNREF(error);
 }
diff --git a/src/core/lib/transport/transport.h b/src/core/lib/transport/transport.h
index c9b4bc96f8..069c53df87 100644
--- a/src/core/lib/transport/transport.h
+++ b/src/core/lib/transport/transport.h
@@ -1,61 +1,61 @@
 /*
  *
  * Copyright 2015 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #ifndef GRPC_CORE_LIB_TRANSPORT_TRANSPORT_H
 #define GRPC_CORE_LIB_TRANSPORT_TRANSPORT_H
 
 #include <grpc/support/port_platform.h>
 
 #include <stddef.h>
 #include <stdint.h>
 #include <string.h>
 
 #include <functional>
 #include <string>
 
 #include "absl/status/status.h"
 #include "absl/strings/string_view.h"
 #include "absl/types/optional.h"
 
 #include <grpc/impl/codegen/connectivity_state.h>
 #include <grpc/slice.h>
 #include <grpc/status.h>
 #include <grpc/support/atm.h>
 #include <grpc/support/log.h>
 
 #include "src/core/lib/channel/context.h"
 #include "src/core/lib/debug/trace.h"
 #include "src/core/lib/gprpp/debug_location.h"
 #include "src/core/lib/gprpp/orphanable.h"
 #include "src/core/lib/gprpp/ref_counted.h"
 #include "src/core/lib/iomgr/call_combiner.h"
 #include "src/core/lib/iomgr/closure.h"
 #include "src/core/lib/iomgr/endpoint.h"
 #include "src/core/lib/iomgr/error.h"
 #include "src/core/lib/iomgr/iomgr_fwd.h"
 #include "src/core/lib/iomgr/polling_entity.h"
 #include "src/core/lib/iomgr/pollset.h"
 #include "src/core/lib/promise/arena_promise.h"
 #include "src/core/lib/promise/context.h"
 #include "src/core/lib/promise/latch.h"
 #include "src/core/lib/resource_quota/arena.h"
 #include "src/core/lib/slice/slice.h"
-#include "src/core/lib/slice/slice_buffer.h"
+#include "src/core/lib/transport/byte_stream.h"
 #include "src/core/lib/transport/connectivity_state.h"
 #include "src/core/lib/transport/metadata_batch.h"
 #include "src/core/lib/transport/transport_fwd.h"
@@ -63,24 +63,13 @@
 struct grpc_transport_stream_op_batch_payload;
 
 /* Minimum and maximum protocol accepted versions. */
 #define GRPC_PROTOCOL_VERSION_MAX_MAJOR 2
 #define GRPC_PROTOCOL_VERSION_MAX_MINOR 1
 #define GRPC_PROTOCOL_VERSION_MIN_MAJOR 2
 #define GRPC_PROTOCOL_VERSION_MIN_MINOR 1
 
 #define GRPC_ARG_TRANSPORT "grpc.internal.transport"
 
-/** Internal bit flag for grpc_begin_message's \a flags signaling the use of
- * compression for the message. (Does not apply for stream compression.) */
-#define GRPC_WRITE_INTERNAL_COMPRESS (0x80000000u)
-/** Internal bit flag for determining whether the message was compressed and had
- * to be decompressed by the message_decompress filter. (Does not apply for
- * stream compression.) */
-#define GRPC_WRITE_INTERNAL_TEST_ONLY_WAS_COMPRESSED (0x40000000u)
-/** Mask of all valid internal flags. */
-#define GRPC_WRITE_INTERNAL_USED_MASK \
-  (GRPC_WRITE_INTERNAL_COMPRESS | GRPC_WRITE_INTERNAL_TEST_ONLY_WAS_COMPRESSED)
-
 namespace grpc_core {
 // TODO(ctiller): eliminate once MetadataHandle is constructable directly.
 namespace promise_filter_detail {
@@ -341,111 +330,115 @@ struct grpc_transport_stream_op_batch {
 struct grpc_transport_stream_op_batch_payload {
   explicit grpc_transport_stream_op_batch_payload(
       grpc_call_context_element* context)
       : context(context) {}
+  ~grpc_transport_stream_op_batch_payload() {
+    // We don't really own `send_message`, so release ownership and let the
+    // owner clean the data.
+    (void)send_message.send_message.release();
+  }
+
   struct {
     grpc_metadata_batch* send_initial_metadata = nullptr;
     /** Iff send_initial_metadata != NULL, flags associated with
         send_initial_metadata: a bitfield of GRPC_INITIAL_METADATA_xxx */
     uint32_t send_initial_metadata_flags = 0;
     // If non-NULL, will be set by the transport to the peer string (a char*).
     // The transport retains ownership of the string.
     // Note: This pointer may be used by the transport after the
     // send_initial_metadata op is completed.  It must remain valid
     // until the call is destroyed.
     gpr_atm* peer_string = nullptr;
   } send_initial_metadata;
 
   struct {
     grpc_metadata_batch* send_trailing_metadata = nullptr;
     // Set by the transport to true if the stream successfully wrote the
     // trailing metadata. If this is not set but there was a send trailing
     // metadata op present, this can indicate that a server call can be marked
     // as  a cancellation (since the stream was write-closed before status could
     // be delivered).
     bool* sent = nullptr;
   } send_trailing_metadata;
 
   struct {
     // The transport (or a filter that decides to return a failure before
     // the op gets down to the transport) takes ownership.
     // The batch's on_complete will not be called until after the byte
     // stream is orphaned.
-    grpc_core::SliceBuffer* send_message;
-    uint32_t flags = 0;
+    grpc_core::OrphanablePtr<grpc_core::ByteStream> send_message;
     // Set by the transport if the stream has been closed for writes. If this
     // is set and send message op is present, we set the operation to be a
     // failure without sending a cancel OP down the stack. This is so that the
     // status of the call does not get overwritten by the Cancel OP, which would
     // be especially problematic if we had received a valid status from the
     // server.
     // For send_initial_metadata, it is fine for the status to be overwritten
     // because at that point, the client will not have received a status.
     // For send_trailing_metadata, we might overwrite the status if we have
     // non-zero metadata to send. This is fine because the API does not allow
     // the client to send trailing metadata.
     bool stream_write_closed = false;
   } send_message;
 
   struct {
     grpc_metadata_batch* recv_initial_metadata = nullptr;
     // Flags are used only on the server side.  If non-null, will be set to
     // a bitfield of the GRPC_INITIAL_METADATA_xxx macros (e.g., to
     // indicate if the call is idempotent).
     uint32_t* recv_flags = nullptr;
     /** Should be enqueued when initial metadata is ready to be processed. */
     grpc_closure* recv_initial_metadata_ready = nullptr;
     // If not NULL, will be set to true if trailing metadata is
     // immediately available. This may be a signal that we received a
     // Trailers-Only response. The retry filter checks this to know whether to
     // defer the decision to commit the call or not. The C++ callback API also
     // uses this to set the success flag of OnReadInitialMetadataDone()
     // callback.
     bool* trailing_metadata_available = nullptr;
     // If non-NULL, will be set by the transport to the peer string (a char*).
     // The transport retains ownership of the string.
     // Note: This pointer may be used by the transport after the
     // recv_initial_metadata op is completed.  It must remain valid
     // until the call is destroyed.
     gpr_atm* peer_string = nullptr;
   } recv_initial_metadata;
 
   struct {
-    // Will be set by the transport to point to the byte stream containing a
-    // received message. Will be nullopt if trailing metadata is received
-    // instead of a message.
-    absl::optional<grpc_core::SliceBuffer>* recv_message = nullptr;
-    uint32_t* flags = nullptr;
+    // Will be set by the transport to point to the byte stream
+    // containing a received message.
+    // Will be NULL if trailing metadata is received instead of a message.
+    grpc_core::OrphanablePtr<grpc_core::ByteStream>* recv_message = nullptr;
     // Was this recv_message failed for reasons other than a clean end-of-stream
     bool* call_failed_before_recv_message = nullptr;
     /** Should be enqueued when one message is ready to be processed. */
     grpc_closure* recv_message_ready = nullptr;
   } recv_message;
 
   struct {
     grpc_metadata_batch* recv_trailing_metadata = nullptr;
     grpc_transport_stream_stats* collect_stats = nullptr;
     /** Should be enqueued when trailing metadata is ready to be processed. */
     grpc_closure* recv_trailing_metadata_ready = nullptr;
   } recv_trailing_metadata;
 
   /** Forcefully close this stream.
       The HTTP2 semantics should be:
       - server side: if cancel_error has GRPC_ERROR_INT_GRPC_STATUS, and
         trailing metadata has not been sent, send trailing metadata with status
         and message from cancel_error (use grpc_error_get_status) followed by
         a RST_STREAM with error=GRPC_CHTTP2_NO_ERROR to force a full close
       - at all other times: use grpc_error_get_status to get a status code, and
         convert to a HTTP2 error code using
         grpc_chttp2_grpc_status_to_http2_error. Send a RST_STREAM with this
         error. */
   struct {
     // Error contract: the transport that gets this op must cause cancel_error
     //                 to be unref'ed after processing it
     grpc_error_handle cancel_error = GRPC_ERROR_NONE;
   } cancel_stream;
 
   /* Indexes correspond to grpc_context_index enum values */
   grpc_call_context_element* context;
 };
 
 /** Transport op: a set of operations to perform on a transport as a whole */
diff --git a/src/core/lib/transport/transport_op_string.cc b/src/core/lib/transport/transport_op_string.cc
index ae2459e57f..685c2d8010 100644
--- a/src/core/lib/transport/transport_op_string.cc
+++ b/src/core/lib/transport/transport_op_string.cc
@@ -1,42 +1,42 @@
 /*
  *
  * Copyright 2015 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #include <grpc/support/port_platform.h>
 
 #include <algorithm>
 #include <memory>
 #include <string>
 #include <vector>
 
 #include "absl/strings/str_cat.h"
 #include "absl/strings/str_format.h"
 #include "absl/strings/str_join.h"
 
 #include <grpc/support/log.h>
 
 #include "src/core/lib/channel/channel_fwd.h"
 #include "src/core/lib/channel/channel_stack.h"
 #include "src/core/lib/gprpp/orphanable.h"
 #include "src/core/lib/iomgr/error.h"
-#include "src/core/lib/slice/slice_buffer.h"
+#include "src/core/lib/transport/byte_stream.h"
 #include "src/core/lib/transport/connectivity_state.h"
 #include "src/core/lib/transport/metadata_batch.h"
 #include "src/core/lib/transport/transport.h"
 
 /* These routines are here to facilitate debugging - they produce string
    representations of various transport data structures */
@@ -44,50 +44,51 @@
 std::string grpc_transport_stream_op_batch_string(
     grpc_transport_stream_op_batch* op) {
   std::vector<std::string> out;
 
   if (op->send_initial_metadata) {
     out.push_back(" SEND_INITIAL_METADATA{");
     out.push_back(op->payload->send_initial_metadata.send_initial_metadata
                       ->DebugString());
     out.push_back("}");
   }
 
   if (op->send_message) {
     if (op->payload->send_message.send_message != nullptr) {
-      out.push_back(absl::StrFormat(
-          " SEND_MESSAGE:flags=0x%08x:len=%d", op->payload->send_message.flags,
-          op->payload->send_message.send_message->Length()));
+      out.push_back(
+          absl::StrFormat(" SEND_MESSAGE:flags=0x%08x:len=%d",
+                          op->payload->send_message.send_message->flags(),
+                          op->payload->send_message.send_message->length()));
     } else {
       // This can happen when we check a batch after the transport has
       // processed and cleared the send_message op.
       out.push_back(" SEND_MESSAGE(flag and length unknown, already orphaned)");
     }
   }
 
   if (op->send_trailing_metadata) {
     out.push_back(" SEND_TRAILING_METADATA{");
     out.push_back(op->payload->send_trailing_metadata.send_trailing_metadata
                       ->DebugString());
     out.push_back("}");
   }
 
   if (op->recv_initial_metadata) {
     out.push_back(" RECV_INITIAL_METADATA");
   }
 
   if (op->recv_message) {
     out.push_back(" RECV_MESSAGE");
   }
 
   if (op->recv_trailing_metadata) {
     out.push_back(" RECV_TRAILING_METADATA");
   }
 
   if (op->cancel_stream) {
     out.push_back(absl::StrCat(
         " CANCEL:",
         grpc_error_std_string(op->payload->cancel_stream.cancel_error)));
   }
 
   return absl::StrJoin(out, "");
 }
diff --git a/src/cpp/common/channel_filter.h b/src/cpp/common/channel_filter.h
index 6667992f5a..fc10c2cac6 100644
--- a/src/cpp/common/channel_filter.h
+++ b/src/cpp/common/channel_filter.h
@@ -1,55 +1,54 @@
 /*
  *
  * Copyright 2016 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #ifndef GRPCXX_CHANNEL_FILTER_H
 #define GRPCXX_CHANNEL_FILTER_H
 
 #include <stddef.h>
 #include <stdint.h>
 
 #include <functional>
 #include <new>
 #include <string>
 #include <utility>
 
-#include "absl/types/optional.h"
-
 #include <grpc/grpc.h>
 #include <grpc/impl/codegen/grpc_types.h>
 #include <grpc/support/atm.h>
 #include <grpcpp/support/config.h>
 
 #include "src/core/lib/channel/channel_fwd.h"
 #include "src/core/lib/channel/channel_stack.h"
 #include "src/core/lib/channel/context.h"
+#include "src/core/lib/gprpp/orphanable.h"
 #include "src/core/lib/iomgr/closure.h"
 #include "src/core/lib/iomgr/error.h"
 #include "src/core/lib/iomgr/polling_entity.h"
-#include "src/core/lib/slice/slice_buffer.h"
 #include "src/core/lib/surface/channel_stack_type.h"
+#include "src/core/lib/transport/byte_stream.h"
 #include "src/core/lib/transport/metadata_batch.h"
 #include "src/core/lib/transport/transport.h"
 
 /// An interface to define filters.
 ///
 /// To define a filter, implement a subclass of each of \c CallData and
 /// \c ChannelData. Then register the filter using something like this:
 /// \code{.cpp}
 ///   RegisterChannelFilter<MyChannelDataSubclass, MyCallDataSubclass>(
 ///       "name-of-filter", GRPC_SERVER_CHANNEL, INT_MAX, nullptr);
 /// \endcode
@@ -98,103 +97,104 @@ class TransportOp {
 /// A C++ wrapper for the \c grpc_transport_stream_op_batch struct.
 class TransportStreamOpBatch {
  public:
   /// Borrows a pointer to \a op, but does NOT take ownership.
   /// The caller must ensure that \a op continues to exist for as
   /// long as the TransportStreamOpBatch object does.
   explicit TransportStreamOpBatch(grpc_transport_stream_op_batch* op)
       : op_(op),
         send_initial_metadata_(
             op->send_initial_metadata
                 ? op->payload->send_initial_metadata.send_initial_metadata
                 : nullptr),
         send_trailing_metadata_(
             op->send_trailing_metadata
                 ? op->payload->send_trailing_metadata.send_trailing_metadata
                 : nullptr),
         recv_initial_metadata_(
             op->recv_initial_metadata
                 ? op->payload->recv_initial_metadata.recv_initial_metadata
                 : nullptr),
         recv_trailing_metadata_(
             op->recv_trailing_metadata
                 ? op->payload->recv_trailing_metadata.recv_trailing_metadata
                 : nullptr) {}
 
   grpc_transport_stream_op_batch* op() const { return op_; }
 
   grpc_closure* on_complete() const { return op_->on_complete; }
   void set_on_complete(grpc_closure* closure) { op_->on_complete = closure; }
 
   MetadataBatch* send_initial_metadata() {
     return op_->send_initial_metadata ? &send_initial_metadata_ : nullptr;
   }
   MetadataBatch* send_trailing_metadata() {
     return op_->send_trailing_metadata ? &send_trailing_metadata_ : nullptr;
   }
   MetadataBatch* recv_initial_metadata() {
     return op_->recv_initial_metadata ? &recv_initial_metadata_ : nullptr;
   }
   MetadataBatch* recv_trailing_metadata() {
     return op_->recv_trailing_metadata ? &recv_trailing_metadata_ : nullptr;
   }
 
   uint32_t* send_initial_metadata_flags() const {
     return op_->send_initial_metadata ? &op_->payload->send_initial_metadata
                                              .send_initial_metadata_flags
                                       : nullptr;
   }
 
   grpc_closure* recv_initial_metadata_ready() const {
     return op_->recv_initial_metadata
                ? op_->payload->recv_initial_metadata.recv_initial_metadata_ready
                : nullptr;
   }
   void set_recv_initial_metadata_ready(grpc_closure* closure) {
     op_->payload->recv_initial_metadata.recv_initial_metadata_ready = closure;
   }
 
-  grpc_core::SliceBuffer* send_message() const {
-    return op_->send_message ? op_->payload->send_message.send_message
+  grpc_core::OrphanablePtr<grpc_core::ByteStream>* send_message() const {
+    return op_->send_message ? &op_->payload->send_message.send_message
                              : nullptr;
   }
-
-  void set_send_message(grpc_core::SliceBuffer* send_message) {
+  void set_send_message(
+      grpc_core::OrphanablePtr<grpc_core::ByteStream> send_message) {
     op_->send_message = true;
-    op_->payload->send_message.send_message = send_message;
+    op_->payload->send_message.send_message = std::move(send_message);
   }
 
-  absl::optional<grpc_core::SliceBuffer>* recv_message() const {
+  grpc_core::OrphanablePtr<grpc_core::ByteStream>* recv_message() const {
     return op_->recv_message ? op_->payload->recv_message.recv_message
                              : nullptr;
   }
-  void set_recv_message(absl::optional<grpc_core::SliceBuffer>* recv_message) {
+  void set_recv_message(
+      grpc_core::OrphanablePtr<grpc_core::ByteStream>* recv_message) {
     op_->recv_message = true;
     op_->payload->recv_message.recv_message = recv_message;
   }
 
   census_context* get_census_context() const {
     return static_cast<census_context*>(
         op_->payload->context[GRPC_CONTEXT_TRACING].value);
   }
 
   const gpr_atm* get_peer_string() const {
     if (op_->send_initial_metadata &&
         op_->payload->send_initial_metadata.peer_string != nullptr) {
       return op_->payload->send_initial_metadata.peer_string;
     } else if (op_->recv_initial_metadata &&
                op_->payload->recv_initial_metadata.peer_string != nullptr) {
       return op_->payload->recv_initial_metadata.peer_string;
     } else {
       return nullptr;
     }
   }
 
  private:
   grpc_transport_stream_op_batch* op_;  // Not owned.
   MetadataBatch send_initial_metadata_;
   MetadataBatch send_trailing_metadata_;
   MetadataBatch recv_initial_metadata_;
   MetadataBatch recv_trailing_metadata_;
 };
 
 /// Represents channel data.
diff --git a/src/cpp/ext/filters/census/client_filter.cc b/src/cpp/ext/filters/census/client_filter.cc
index 410d739980..9ad447b423 100644
--- a/src/cpp/ext/filters/census/client_filter.cc
+++ b/src/cpp/ext/filters/census/client_filter.cc
@@ -1,59 +1,59 @@
 /*
  *
  * Copyright 2018 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #include <grpc/support/port_platform.h>
 
 #include "src/cpp/ext/filters/census/client_filter.h"
 
 #include <stddef.h>
 #include <stdint.h>
 
 #include <algorithm>
 #include <string>
 #include <utility>
 #include <vector>
 
 #include "absl/status/status.h"
 #include "absl/strings/str_cat.h"
 #include "absl/strings/string_view.h"
 #include "absl/time/clock.h"
 #include "absl/time/time.h"
 #include "absl/types/optional.h"
 #include "opencensus/stats/stats.h"
 #include "opencensus/tags/tag_key.h"
 #include "opencensus/tags/tag_map.h"
 #include "opencensus/trace/span.h"
 #include "opencensus/trace/span_context.h"
 #include "opencensus/trace/status_code.h"
 
 #include <grpc/impl/codegen/gpr_types.h>
 #include <grpc/slice.h>
 #include <grpc/support/log.h>
 #include <grpcpp/support/config.h>
 
 #include "src/core/lib/channel/context.h"
 #include "src/core/lib/gprpp/sync.h"
 #include "src/core/lib/resource_quota/arena.h"
 #include "src/core/lib/slice/slice.h"
-#include "src/core/lib/slice/slice_buffer.h"
 #include "src/core/lib/slice/slice_refcount.h"
+#include "src/core/lib/transport/byte_stream.h"
 #include "src/core/lib/transport/metadata_batch.h"
 #include "src/core/lib/transport/transport.h"
 #include "src/cpp/ext/filters/census/context.h"
 #include "src/cpp/ext/filters/census/grpc_plugin.h"
 #include "src/cpp/ext/filters/census/measures.h"
@@ -137,12 +137,12 @@ void OpenCensusCallTracer::OpenCensusCallAttemptTracer::
 }
 
 void OpenCensusCallTracer::OpenCensusCallAttemptTracer::RecordSendMessage(
-    const grpc_core::SliceBuffer& /*send_message*/) {
+    const grpc_core::ByteStream& /*send_message*/) {
   ++sent_message_count_;
 }
 
 void OpenCensusCallTracer::OpenCensusCallAttemptTracer::RecordReceivedMessage(
-    const grpc_core::SliceBuffer& /*recv_message*/) {
+    const grpc_core::ByteStream& /*recv_message*/) {
   ++recv_message_count_;
 }
 
diff --git a/src/cpp/ext/filters/census/open_census_call_tracer.h b/src/cpp/ext/filters/census/open_census_call_tracer.h
index f2f297f860..990630c17e 100644
--- a/src/cpp/ext/filters/census/open_census_call_tracer.h
+++ b/src/cpp/ext/filters/census/open_census_call_tracer.h
@@ -1,44 +1,44 @@
 //
 //
 // Copyright 2021 gRPC authors.
 //
 // Licensed under the Apache License, Version 2.0 (the "License");
 // you may not use this file except in compliance with the License.
 // You may obtain a copy of the License at
 //
 //     http://www.apache.org/licenses/LICENSE-2.0
 //
 // Unless required by applicable law or agreed to in writing, software
 // distributed under the License is distributed on an "AS IS" BASIS,
 // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 // See the License for the specific language governing permissions and
 // limitations under the License.
 //
 //
 
 #ifndef GRPC_INTERNAL_CPP_EXT_FILTERS_OPEN_CENSUS_CALL_TRACER_H
 #define GRPC_INTERNAL_CPP_EXT_FILTERS_OPEN_CENSUS_CALL_TRACER_H
 
 #include <grpc/support/port_platform.h>
 
 #include <stdint.h>
 
 #include "absl/base/thread_annotations.h"
 #include "absl/status/status.h"
 #include "absl/strings/string_view.h"
 #include "absl/time/time.h"
 
 #include <grpc/impl/codegen/gpr_types.h>
 #include <grpc/support/atm.h>
 
 #include "src/core/lib/channel/call_tracer.h"
 #include "src/core/lib/channel/channel_stack.h"
 #include "src/core/lib/channel/context.h"
 #include "src/core/lib/gprpp/sync.h"
 #include "src/core/lib/iomgr/error.h"
 #include "src/core/lib/resource_quota/arena.h"
 #include "src/core/lib/slice/slice.h"
-#include "src/core/lib/slice/slice_buffer.h"
+#include "src/core/lib/transport/byte_stream.h"
 #include "src/core/lib/transport/metadata_batch.h"
 #include "src/core/lib/transport/transport.h"
 #include "src/cpp/ext/filters/census/context.h"
@@ -48,72 +48,72 @@ namespace grpc {
 class OpenCensusCallTracer : public grpc_core::CallTracer {
  public:
   class OpenCensusCallAttemptTracer : public CallAttemptTracer {
    public:
     OpenCensusCallAttemptTracer(OpenCensusCallTracer* parent,
                                 uint64_t attempt_num, bool is_transparent_retry,
                                 bool arena_allocated);
     void RecordSendInitialMetadata(grpc_metadata_batch* send_initial_metadata,
                                    uint32_t /*flags*/) override;
     void RecordOnDoneSendInitialMetadata(gpr_atm* /*peer_string*/) override {}
     void RecordSendTrailingMetadata(
         grpc_metadata_batch* /*send_trailing_metadata*/) override {}
     void RecordSendMessage(
-        const grpc_core::SliceBuffer& /*send_message*/) override;
+        const grpc_core::ByteStream& /*send_message*/) override;
     void RecordReceivedInitialMetadata(
         grpc_metadata_batch* /*recv_initial_metadata*/,
         uint32_t /*flags*/) override {}
     void RecordReceivedMessage(
-        const grpc_core::SliceBuffer& /*recv_message*/) override;
+        const grpc_core::ByteStream& /*recv_message*/) override;
     void RecordReceivedTrailingMetadata(
         absl::Status status, grpc_metadata_batch* recv_trailing_metadata,
         const grpc_transport_stream_stats* transport_stream_stats) override;
     void RecordCancel(grpc_error_handle cancel_error) override;
     void RecordEnd(const gpr_timespec& /*latency*/) override;
 
     CensusContext* context() { return &context_; }
 
    private:
     // Maximum size of trace context is sent on the wire.
     static constexpr uint32_t kMaxTraceContextLen = 64;
     // Maximum size of tags that are sent on the wire.
     static constexpr uint32_t kMaxTagsLen = 2048;
     OpenCensusCallTracer* parent_;
     const bool arena_allocated_;
     CensusContext context_;
     // Start time (for measuring latency).
     absl::Time start_time_;
     // Number of messages in this RPC.
     uint64_t recv_message_count_ = 0;
     uint64_t sent_message_count_ = 0;
     // End status code
     absl::StatusCode status_code_;
   };
 
   explicit OpenCensusCallTracer(const grpc_call_element_args* args);
   ~OpenCensusCallTracer() override;
 
   void GenerateContext();
   OpenCensusCallAttemptTracer* StartNewAttempt(
       bool is_transparent_retry) override;
 
  private:
   const grpc_call_context_element* call_context_;
   // Client method.
   grpc_core::Slice path_;
   absl::string_view method_;
   CensusContext context_;
   grpc_core::Arena* arena_;
   grpc_core::Mutex mu_;
   // Non-transparent attempts per call
   uint64_t retries_ ABSL_GUARDED_BY(&mu_) = 0;
   // Transparent retries per call
   uint64_t transparent_retries_ ABSL_GUARDED_BY(&mu_) = 0;
   // Retry delay
   absl::Duration retry_delay_ ABSL_GUARDED_BY(&mu_);
   absl::Time time_at_last_attempt_end_ ABSL_GUARDED_BY(&mu_);
   uint64_t num_active_rpcs_ ABSL_GUARDED_BY(&mu_) = 0;
 };
 
 };  // namespace grpc
 
 #endif  // GRPC_INTERNAL_CPP_EXT_FILTERS_OPEN_CENSUS_CALL_TRACER_H
diff --git a/src/cpp/ext/filters/census/server_filter.cc b/src/cpp/ext/filters/census/server_filter.cc
index e3586e14dc..fe6d013d8a 100644
--- a/src/cpp/ext/filters/census/server_filter.cc
+++ b/src/cpp/ext/filters/census/server_filter.cc
@@ -1,41 +1,42 @@
 /*
  *
  * Copyright 2018 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #include <grpc/support/port_platform.h>
 
 #include "src/cpp/ext/filters/census/server_filter.h"
 
+#include <memory>
 #include <utility>
 
 #include "absl/strings/str_cat.h"
 #include "absl/strings/string_view.h"
 #include "absl/time/clock.h"
 #include "absl/time/time.h"
 #include "absl/types/optional.h"
 #include "opencensus/stats/stats.h"
 #include "opencensus/tags/tag_key.h"
 
 #include <grpc/grpc.h>
 #include <grpc/support/log.h>
 
 #include "src/core/lib/gprpp/debug_location.h"
 #include "src/core/lib/surface/call.h"
 #include "src/core/lib/transport/transport.h"
 #include "src/cpp/ext/filters/census/channel_filter.h"
 #include "src/cpp/ext/filters/census/grpc_plugin.h"
 #include "src/cpp/ext/filters/census/measures.h"
@@ -74,16 +75,16 @@ void FilterInitialMetadata(grpc_metadata_batch* b,
 void CensusServerCallData::OnDoneRecvMessageCb(void* user_data,
                                                grpc_error_handle error) {
   grpc_call_element* elem = reinterpret_cast<grpc_call_element*>(user_data);
   CensusServerCallData* calld =
       reinterpret_cast<CensusServerCallData*>(elem->call_data);
   CensusChannelData* channeld =
       reinterpret_cast<CensusChannelData*>(elem->channel_data);
   GPR_ASSERT(calld != nullptr);
   GPR_ASSERT(channeld != nullptr);
   // Stream messages are no longer valid after receiving trailing metadata.
-  if (calld->recv_message_->has_value()) {
+  if ((*calld->recv_message_) != nullptr) {
     ++calld->recv_message_count_;
   }
   grpc_core::Closure::Run(DEBUG_LOCATION, calld->initial_on_done_recv_message_,
                           GRPC_ERROR_REF(error));
 }
diff --git a/src/cpp/ext/filters/census/server_filter.h b/src/cpp/ext/filters/census/server_filter.h
index 55e542cb5d..d5cf021d61 100644
--- a/src/cpp/ext/filters/census/server_filter.h
+++ b/src/cpp/ext/filters/census/server_filter.h
@@ -1,45 +1,45 @@
 /*
  *
  * Copyright 2018 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #ifndef GRPC_INTERNAL_CPP_EXT_FILTERS_CENSUS_SERVER_FILTER_H
 #define GRPC_INTERNAL_CPP_EXT_FILTERS_CENSUS_SERVER_FILTER_H
 
 #include <grpc/support/port_platform.h>
 
 #include <stdint.h>
 #include <string.h>
 
 #include <string>
 
 #include "absl/strings/string_view.h"
 #include "absl/time/time.h"
-#include "absl/types/optional.h"
 
 #include <grpc/grpc_security.h>
 #include <grpc/impl/codegen/grpc_types.h>
 #include <grpcpp/support/config.h>
 
 #include "src/core/lib/channel/channel_fwd.h"
 #include "src/core/lib/channel/channel_stack.h"
+#include "src/core/lib/gprpp/orphanable.h"
 #include "src/core/lib/iomgr/closure.h"
 #include "src/core/lib/iomgr/error.h"
 #include "src/core/lib/slice/slice.h"
-#include "src/core/lib/slice/slice_buffer.h"
+#include "src/core/lib/transport/byte_stream.h"
 #include "src/core/lib/transport/metadata_batch.h"
 #include "src/cpp/common/channel_filter.h"
 #include "src/cpp/ext/filters/census/context.h"
@@ -49,66 +49,66 @@ namespace grpc {
 // A CallData class will be created for every grpc call within a channel. It is
 // used to store data and methods specific to that call. CensusServerCallData is
 // thread-compatible, however typically only 1 thread should be interacting with
 // a call at a time.
 class CensusServerCallData : public CallData {
  public:
   // Maximum size of server stats that are sent on the wire.
   static constexpr uint32_t kMaxServerStatsLen = 16;
 
   CensusServerCallData()
       : gc_(nullptr),
         auth_context_(nullptr),
         recv_initial_metadata_(nullptr),
         initial_on_done_recv_initial_metadata_(nullptr),
         initial_on_done_recv_message_(nullptr),
         recv_message_(nullptr),
         recv_message_count_(0),
         sent_message_count_(0) {
     memset(&on_done_recv_initial_metadata_, 0, sizeof(grpc_closure));
     memset(&on_done_recv_message_, 0, sizeof(grpc_closure));
   }
 
   grpc_error_handle Init(grpc_call_element* elem,
                          const grpc_call_element_args* args) override;
 
   void Destroy(grpc_call_element* elem, const grpc_call_final_info* final_info,
                grpc_closure* then_call_closure) override;
 
   void StartTransportStreamOpBatch(grpc_call_element* elem,
                                    TransportStreamOpBatch* op) override;
 
   static void OnDoneRecvInitialMetadataCb(void* user_data,
                                           grpc_error_handle error);
 
   static void OnDoneRecvMessageCb(void* user_data, grpc_error_handle error);
 
  private:
   CensusContext context_;
   // server method
   absl::string_view method_;
   std::string qualified_method_;
   grpc_core::Slice path_;
   // Pointer to the grpc_call element
   grpc_call* gc_;
   // Authorization context for the call.
   grpc_auth_context* auth_context_;
   // recv callback
   grpc_metadata_batch* recv_initial_metadata_;
   grpc_closure* initial_on_done_recv_initial_metadata_;
   grpc_closure on_done_recv_initial_metadata_;
   // recv message
   grpc_closure* initial_on_done_recv_message_;
   grpc_closure on_done_recv_message_;
   absl::Time start_time_;
   absl::Duration elapsed_time_;
-  absl::optional<grpc_core::SliceBuffer>* recv_message_;
+  grpc_core::OrphanablePtr<grpc_core::ByteStream>* recv_message_;
   uint64_t recv_message_count_;
   uint64_t sent_message_count_;
   // Buffer needed for grpc_slice to reference it when adding metatdata to
   // response.
   char stats_buf_[kMaxServerStatsLen];
 };
 
 }  // namespace grpc
 
 #endif /* GRPC_INTERNAL_CPP_EXT_FILTERS_CENSUS_SERVER_FILTER_H */
diff --git a/src/python/grpcio/grpc_core_dependencies.py b/src/python/grpcio/grpc_core_dependencies.py
index 3a6b25838d..df1e41a52b 100644
--- a/src/python/grpcio/grpc_core_dependencies.py
+++ b/src/python/grpcio/grpc_core_dependencies.py
@@ -17,1181 +17,1182 @@
 CORE_SOURCE_FILES = [
     'src/core/ext/filters/census/grpc_context.cc',
     'src/core/ext/filters/channel_idle/channel_idle_filter.cc',
     'src/core/ext/filters/channel_idle/idle_filter_state.cc',
     'src/core/ext/filters/client_channel/backend_metric.cc',
     'src/core/ext/filters/client_channel/backup_poller.cc',
     'src/core/ext/filters/client_channel/channel_connectivity.cc',
     'src/core/ext/filters/client_channel/client_channel.cc',
     'src/core/ext/filters/client_channel/client_channel_channelz.cc',
     'src/core/ext/filters/client_channel/client_channel_factory.cc',
     'src/core/ext/filters/client_channel/client_channel_plugin.cc',
     'src/core/ext/filters/client_channel/config_selector.cc',
     'src/core/ext/filters/client_channel/dynamic_filters.cc',
     'src/core/ext/filters/client_channel/global_subchannel_pool.cc',
     'src/core/ext/filters/client_channel/health/health_check_client.cc',
     'src/core/ext/filters/client_channel/http_proxy.cc',
     'src/core/ext/filters/client_channel/lb_policy.cc',
     'src/core/ext/filters/client_channel/lb_policy/address_filtering.cc',
     'src/core/ext/filters/client_channel/lb_policy/child_policy_handler.cc',
     'src/core/ext/filters/client_channel/lb_policy/grpclb/client_load_reporting_filter.cc',
     'src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc',
     'src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_balancer_addresses.cc',
     'src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_client_stats.cc',
     'src/core/ext/filters/client_channel/lb_policy/grpclb/load_balancer_api.cc',
     'src/core/ext/filters/client_channel/lb_policy/oob_backend_metric.cc',
     'src/core/ext/filters/client_channel/lb_policy/outlier_detection/outlier_detection.cc',
     'src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc',
     'src/core/ext/filters/client_channel/lb_policy/priority/priority.cc',
     'src/core/ext/filters/client_channel/lb_policy/ring_hash/ring_hash.cc',
     'src/core/ext/filters/client_channel/lb_policy/rls/rls.cc',
     'src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc',
     'src/core/ext/filters/client_channel/lb_policy/weighted_target/weighted_target.cc',
     'src/core/ext/filters/client_channel/lb_policy/xds/cds.cc',
     'src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_impl.cc',
     'src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_manager.cc',
     'src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_resolver.cc',
     'src/core/ext/filters/client_channel/lb_policy_registry.cc',
     'src/core/ext/filters/client_channel/local_subchannel_pool.cc',
     'src/core/ext/filters/client_channel/proxy_mapper_registry.cc',
     'src/core/ext/filters/client_channel/resolver/binder/binder_resolver.cc',
     'src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc',
     'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_posix.cc',
     'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_windows.cc',
     'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.cc',
     'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_posix.cc',
     'src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_windows.cc',
     'src/core/ext/filters/client_channel/resolver/dns/dns_resolver_selection.cc',
     'src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc',
     'src/core/ext/filters/client_channel/resolver/fake/fake_resolver.cc',
     'src/core/ext/filters/client_channel/resolver/google_c2p/google_c2p_resolver.cc',
     'src/core/ext/filters/client_channel/resolver/polling_resolver.cc',
     'src/core/ext/filters/client_channel/resolver/sockaddr/sockaddr_resolver.cc',
     'src/core/ext/filters/client_channel/resolver/xds/xds_resolver.cc',
     'src/core/ext/filters/client_channel/resolver_result_parsing.cc',
     'src/core/ext/filters/client_channel/retry_filter.cc',
     'src/core/ext/filters/client_channel/retry_service_config.cc',
     'src/core/ext/filters/client_channel/retry_throttle.cc',
     'src/core/ext/filters/client_channel/service_config_channel_arg_filter.cc',
     'src/core/ext/filters/client_channel/subchannel.cc',
     'src/core/ext/filters/client_channel/subchannel_pool_interface.cc',
     'src/core/ext/filters/client_channel/subchannel_stream_client.cc',
     'src/core/ext/filters/deadline/deadline_filter.cc',
     'src/core/ext/filters/fault_injection/fault_injection_filter.cc',
     'src/core/ext/filters/fault_injection/service_config_parser.cc',
     'src/core/ext/filters/http/client/http_client_filter.cc',
     'src/core/ext/filters/http/client_authority_filter.cc',
     'src/core/ext/filters/http/http_filters_plugin.cc',
     'src/core/ext/filters/http/message_compress/message_compress_filter.cc',
     'src/core/ext/filters/http/message_compress/message_decompress_filter.cc',
     'src/core/ext/filters/http/server/http_server_filter.cc',
     'src/core/ext/filters/message_size/message_size_filter.cc',
     'src/core/ext/filters/rbac/rbac_filter.cc',
     'src/core/ext/filters/rbac/rbac_service_config_parser.cc',
     'src/core/ext/filters/server_config_selector/server_config_selector.cc',
     'src/core/ext/filters/server_config_selector/server_config_selector_filter.cc',
     'src/core/ext/transport/chttp2/alpn/alpn.cc',
     'src/core/ext/transport/chttp2/client/chttp2_connector.cc',
     'src/core/ext/transport/chttp2/server/chttp2_server.cc',
     'src/core/ext/transport/chttp2/transport/bin_decoder.cc',
     'src/core/ext/transport/chttp2/transport/bin_encoder.cc',
     'src/core/ext/transport/chttp2/transport/chttp2_transport.cc',
     'src/core/ext/transport/chttp2/transport/context_list.cc',
     'src/core/ext/transport/chttp2/transport/flow_control.cc',
     'src/core/ext/transport/chttp2/transport/frame_data.cc',
     'src/core/ext/transport/chttp2/transport/frame_goaway.cc',
     'src/core/ext/transport/chttp2/transport/frame_ping.cc',
     'src/core/ext/transport/chttp2/transport/frame_rst_stream.cc',
     'src/core/ext/transport/chttp2/transport/frame_settings.cc',
     'src/core/ext/transport/chttp2/transport/frame_window_update.cc',
     'src/core/ext/transport/chttp2/transport/hpack_encoder.cc',
     'src/core/ext/transport/chttp2/transport/hpack_encoder_table.cc',
     'src/core/ext/transport/chttp2/transport/hpack_parser.cc',
     'src/core/ext/transport/chttp2/transport/hpack_parser_table.cc',
     'src/core/ext/transport/chttp2/transport/http2_settings.cc',
     'src/core/ext/transport/chttp2/transport/huffsyms.cc',
     'src/core/ext/transport/chttp2/transport/parsing.cc',
     'src/core/ext/transport/chttp2/transport/stream_lists.cc',
     'src/core/ext/transport/chttp2/transport/stream_map.cc',
     'src/core/ext/transport/chttp2/transport/varint.cc',
     'src/core/ext/transport/chttp2/transport/writing.cc',
     'src/core/ext/transport/inproc/inproc_plugin.cc',
     'src/core/ext/transport/inproc/inproc_transport.cc',
     'src/core/ext/upb-generated/envoy/admin/v3/certs.upb.c',
     'src/core/ext/upb-generated/envoy/admin/v3/clusters.upb.c',
     'src/core/ext/upb-generated/envoy/admin/v3/config_dump.upb.c',
     'src/core/ext/upb-generated/envoy/admin/v3/init_dump.upb.c',
     'src/core/ext/upb-generated/envoy/admin/v3/listeners.upb.c',
     'src/core/ext/upb-generated/envoy/admin/v3/memory.upb.c',
     'src/core/ext/upb-generated/envoy/admin/v3/metrics.upb.c',
     'src/core/ext/upb-generated/envoy/admin/v3/mutex_stats.upb.c',
     'src/core/ext/upb-generated/envoy/admin/v3/server_info.upb.c',
     'src/core/ext/upb-generated/envoy/admin/v3/tap.upb.c',
     'src/core/ext/upb-generated/envoy/annotations/deprecation.upb.c',
     'src/core/ext/upb-generated/envoy/annotations/resource.upb.c',
     'src/core/ext/upb-generated/envoy/config/accesslog/v3/accesslog.upb.c',
     'src/core/ext/upb-generated/envoy/config/bootstrap/v3/bootstrap.upb.c',
     'src/core/ext/upb-generated/envoy/config/cluster/v3/circuit_breaker.upb.c',
     'src/core/ext/upb-generated/envoy/config/cluster/v3/cluster.upb.c',
     'src/core/ext/upb-generated/envoy/config/cluster/v3/filter.upb.c',
     'src/core/ext/upb-generated/envoy/config/cluster/v3/outlier_detection.upb.c',
     'src/core/ext/upb-generated/envoy/config/common/matcher/v3/matcher.upb.c',
     'src/core/ext/upb-generated/envoy/config/core/v3/address.upb.c',
     'src/core/ext/upb-generated/envoy/config/core/v3/backoff.upb.c',
     'src/core/ext/upb-generated/envoy/config/core/v3/base.upb.c',
     'src/core/ext/upb-generated/envoy/config/core/v3/config_source.upb.c',
     'src/core/ext/upb-generated/envoy/config/core/v3/event_service_config.upb.c',
     'src/core/ext/upb-generated/envoy/config/core/v3/extension.upb.c',
     'src/core/ext/upb-generated/envoy/config/core/v3/grpc_method_list.upb.c',
     'src/core/ext/upb-generated/envoy/config/core/v3/grpc_service.upb.c',
     'src/core/ext/upb-generated/envoy/config/core/v3/health_check.upb.c',
     'src/core/ext/upb-generated/envoy/config/core/v3/http_uri.upb.c',
     'src/core/ext/upb-generated/envoy/config/core/v3/protocol.upb.c',
     'src/core/ext/upb-generated/envoy/config/core/v3/proxy_protocol.upb.c',
     'src/core/ext/upb-generated/envoy/config/core/v3/resolver.upb.c',
     'src/core/ext/upb-generated/envoy/config/core/v3/socket_option.upb.c',
     'src/core/ext/upb-generated/envoy/config/core/v3/substitution_format_string.upb.c',
     'src/core/ext/upb-generated/envoy/config/core/v3/udp_socket_config.upb.c',
     'src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint.upb.c',
     'src/core/ext/upb-generated/envoy/config/endpoint/v3/endpoint_components.upb.c',
     'src/core/ext/upb-generated/envoy/config/endpoint/v3/load_report.upb.c',
     'src/core/ext/upb-generated/envoy/config/listener/v3/api_listener.upb.c',
     'src/core/ext/upb-generated/envoy/config/listener/v3/listener.upb.c',
     'src/core/ext/upb-generated/envoy/config/listener/v3/listener_components.upb.c',
     'src/core/ext/upb-generated/envoy/config/listener/v3/quic_config.upb.c',
     'src/core/ext/upb-generated/envoy/config/listener/v3/udp_listener_config.upb.c',
     'src/core/ext/upb-generated/envoy/config/metrics/v3/metrics_service.upb.c',
     'src/core/ext/upb-generated/envoy/config/metrics/v3/stats.upb.c',
     'src/core/ext/upb-generated/envoy/config/overload/v3/overload.upb.c',
     'src/core/ext/upb-generated/envoy/config/rbac/v3/rbac.upb.c',
     'src/core/ext/upb-generated/envoy/config/route/v3/route.upb.c',
     'src/core/ext/upb-generated/envoy/config/route/v3/route_components.upb.c',
     'src/core/ext/upb-generated/envoy/config/route/v3/scoped_route.upb.c',
     'src/core/ext/upb-generated/envoy/config/tap/v3/common.upb.c',
     'src/core/ext/upb-generated/envoy/config/trace/v3/datadog.upb.c',
     'src/core/ext/upb-generated/envoy/config/trace/v3/dynamic_ot.upb.c',
     'src/core/ext/upb-generated/envoy/config/trace/v3/http_tracer.upb.c',
     'src/core/ext/upb-generated/envoy/config/trace/v3/lightstep.upb.c',
     'src/core/ext/upb-generated/envoy/config/trace/v3/opencensus.upb.c',
     'src/core/ext/upb-generated/envoy/config/trace/v3/service.upb.c',
     'src/core/ext/upb-generated/envoy/config/trace/v3/skywalking.upb.c',
     'src/core/ext/upb-generated/envoy/config/trace/v3/trace.upb.c',
     'src/core/ext/upb-generated/envoy/config/trace/v3/xray.upb.c',
     'src/core/ext/upb-generated/envoy/config/trace/v3/zipkin.upb.c',
     'src/core/ext/upb-generated/envoy/extensions/clusters/aggregate/v3/cluster.upb.c',
     'src/core/ext/upb-generated/envoy/extensions/filters/common/fault/v3/fault.upb.c',
     'src/core/ext/upb-generated/envoy/extensions/filters/http/fault/v3/fault.upb.c',
     'src/core/ext/upb-generated/envoy/extensions/filters/http/rbac/v3/rbac.upb.c',
     'src/core/ext/upb-generated/envoy/extensions/filters/http/router/v3/router.upb.c',
     'src/core/ext/upb-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upb.c',
     'src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/ring_hash/v3/ring_hash.upb.c',
     'src/core/ext/upb-generated/envoy/extensions/load_balancing_policies/wrr_locality/v3/wrr_locality.upb.c',
     'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/cert.upb.c',
     'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/common.upb.c',
     'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/secret.upb.c',
     'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls.upb.c',
     'src/core/ext/upb-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upb.c',
     'src/core/ext/upb-generated/envoy/service/discovery/v3/ads.upb.c',
     'src/core/ext/upb-generated/envoy/service/discovery/v3/discovery.upb.c',
     'src/core/ext/upb-generated/envoy/service/load_stats/v3/lrs.upb.c',
     'src/core/ext/upb-generated/envoy/service/status/v3/csds.upb.c',
     'src/core/ext/upb-generated/envoy/type/http/v3/cookie.upb.c',
     'src/core/ext/upb-generated/envoy/type/http/v3/path_transformation.upb.c',
     'src/core/ext/upb-generated/envoy/type/matcher/v3/http_inputs.upb.c',
     'src/core/ext/upb-generated/envoy/type/matcher/v3/metadata.upb.c',
     'src/core/ext/upb-generated/envoy/type/matcher/v3/node.upb.c',
     'src/core/ext/upb-generated/envoy/type/matcher/v3/number.upb.c',
     'src/core/ext/upb-generated/envoy/type/matcher/v3/path.upb.c',
     'src/core/ext/upb-generated/envoy/type/matcher/v3/regex.upb.c',
     'src/core/ext/upb-generated/envoy/type/matcher/v3/string.upb.c',
     'src/core/ext/upb-generated/envoy/type/matcher/v3/struct.upb.c',
     'src/core/ext/upb-generated/envoy/type/matcher/v3/value.upb.c',
     'src/core/ext/upb-generated/envoy/type/metadata/v3/metadata.upb.c',
     'src/core/ext/upb-generated/envoy/type/tracing/v3/custom_tag.upb.c',
     'src/core/ext/upb-generated/envoy/type/v3/hash_policy.upb.c',
     'src/core/ext/upb-generated/envoy/type/v3/http.upb.c',
     'src/core/ext/upb-generated/envoy/type/v3/http_status.upb.c',
     'src/core/ext/upb-generated/envoy/type/v3/percent.upb.c',
     'src/core/ext/upb-generated/envoy/type/v3/range.upb.c',
     'src/core/ext/upb-generated/envoy/type/v3/ratelimit_unit.upb.c',
     'src/core/ext/upb-generated/envoy/type/v3/semantic_version.upb.c',
     'src/core/ext/upb-generated/envoy/type/v3/token_bucket.upb.c',
     'src/core/ext/upb-generated/google/api/annotations.upb.c',
     'src/core/ext/upb-generated/google/api/expr/v1alpha1/checked.upb.c',
     'src/core/ext/upb-generated/google/api/expr/v1alpha1/syntax.upb.c',
     'src/core/ext/upb-generated/google/api/http.upb.c',
     'src/core/ext/upb-generated/google/api/httpbody.upb.c',
     'src/core/ext/upb-generated/google/protobuf/any.upb.c',
     'src/core/ext/upb-generated/google/protobuf/descriptor.upb.c',
     'src/core/ext/upb-generated/google/protobuf/duration.upb.c',
     'src/core/ext/upb-generated/google/protobuf/empty.upb.c',
     'src/core/ext/upb-generated/google/protobuf/struct.upb.c',
     'src/core/ext/upb-generated/google/protobuf/timestamp.upb.c',
     'src/core/ext/upb-generated/google/protobuf/wrappers.upb.c',
     'src/core/ext/upb-generated/google/rpc/status.upb.c',
     'src/core/ext/upb-generated/opencensus/proto/trace/v1/trace_config.upb.c',
     'src/core/ext/upb-generated/src/proto/grpc/gcp/altscontext.upb.c',
     'src/core/ext/upb-generated/src/proto/grpc/gcp/handshaker.upb.c',
     'src/core/ext/upb-generated/src/proto/grpc/gcp/transport_security_common.upb.c',
     'src/core/ext/upb-generated/src/proto/grpc/health/v1/health.upb.c',
     'src/core/ext/upb-generated/src/proto/grpc/lb/v1/load_balancer.upb.c',
     'src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls.upb.c',
     'src/core/ext/upb-generated/src/proto/grpc/lookup/v1/rls_config.upb.c',
     'src/core/ext/upb-generated/udpa/annotations/migrate.upb.c',
     'src/core/ext/upb-generated/udpa/annotations/security.upb.c',
     'src/core/ext/upb-generated/udpa/annotations/sensitive.upb.c',
     'src/core/ext/upb-generated/udpa/annotations/status.upb.c',
     'src/core/ext/upb-generated/udpa/annotations/versioning.upb.c',
     'src/core/ext/upb-generated/validate/validate.upb.c',
     'src/core/ext/upb-generated/xds/annotations/v3/migrate.upb.c',
     'src/core/ext/upb-generated/xds/annotations/v3/security.upb.c',
     'src/core/ext/upb-generated/xds/annotations/v3/sensitive.upb.c',
     'src/core/ext/upb-generated/xds/annotations/v3/status.upb.c',
     'src/core/ext/upb-generated/xds/annotations/v3/versioning.upb.c',
     'src/core/ext/upb-generated/xds/core/v3/authority.upb.c',
     'src/core/ext/upb-generated/xds/core/v3/collection_entry.upb.c',
     'src/core/ext/upb-generated/xds/core/v3/context_params.upb.c',
     'src/core/ext/upb-generated/xds/core/v3/extension.upb.c',
     'src/core/ext/upb-generated/xds/core/v3/resource.upb.c',
     'src/core/ext/upb-generated/xds/core/v3/resource_locator.upb.c',
     'src/core/ext/upb-generated/xds/core/v3/resource_name.upb.c',
     'src/core/ext/upb-generated/xds/data/orca/v3/orca_load_report.upb.c',
     'src/core/ext/upb-generated/xds/service/orca/v3/orca.upb.c',
     'src/core/ext/upb-generated/xds/type/matcher/v3/matcher.upb.c',
     'src/core/ext/upb-generated/xds/type/matcher/v3/regex.upb.c',
     'src/core/ext/upb-generated/xds/type/matcher/v3/string.upb.c',
     'src/core/ext/upb-generated/xds/type/v3/typed_struct.upb.c',
     'src/core/ext/upbdefs-generated/envoy/admin/v3/certs.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/admin/v3/clusters.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/admin/v3/config_dump.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/admin/v3/init_dump.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/admin/v3/listeners.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/admin/v3/memory.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/admin/v3/metrics.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/admin/v3/mutex_stats.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/admin/v3/server_info.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/admin/v3/tap.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/annotations/deprecation.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/annotations/resource.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/accesslog/v3/accesslog.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/bootstrap/v3/bootstrap.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/circuit_breaker.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/cluster.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/filter.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/cluster/v3/outlier_detection.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/common/matcher/v3/matcher.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/core/v3/address.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/core/v3/backoff.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/core/v3/base.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/core/v3/config_source.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/core/v3/event_service_config.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/core/v3/extension.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_method_list.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/core/v3/grpc_service.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/core/v3/health_check.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/core/v3/http_uri.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/core/v3/protocol.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/core/v3/proxy_protocol.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/core/v3/resolver.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/core/v3/socket_option.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/core/v3/substitution_format_string.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/core/v3/udp_socket_config.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/endpoint_components.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/endpoint/v3/load_report.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/listener/v3/api_listener.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/listener/v3/listener_components.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/listener/v3/quic_config.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/listener/v3/udp_listener_config.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/metrics/v3/metrics_service.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/metrics/v3/stats.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/overload/v3/overload.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/rbac/v3/rbac.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/route/v3/route.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/route/v3/route_components.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/route/v3/scoped_route.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/tap/v3/common.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/trace/v3/datadog.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/trace/v3/dynamic_ot.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/trace/v3/http_tracer.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/trace/v3/lightstep.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/trace/v3/opencensus.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/trace/v3/service.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/trace/v3/skywalking.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/trace/v3/trace.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/trace/v3/xray.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/config/trace/v3/zipkin.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/extensions/clusters/aggregate/v3/cluster.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/extensions/filters/common/fault/v3/fault.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/extensions/filters/http/fault/v3/fault.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/extensions/filters/http/rbac/v3/rbac.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/extensions/filters/http/router/v3/router.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/cert.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/common.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/secret.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/extensions/transport_sockets/tls/v3/tls_spiffe_validator_config.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/service/discovery/v3/ads.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/service/discovery/v3/discovery.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/service/load_stats/v3/lrs.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/service/status/v3/csds.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/type/http/v3/cookie.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/type/http/v3/path_transformation.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/http_inputs.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/metadata.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/node.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/number.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/path.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/regex.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/string.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/struct.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/type/matcher/v3/value.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/type/metadata/v3/metadata.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/type/tracing/v3/custom_tag.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/type/v3/hash_policy.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/type/v3/http.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/type/v3/http_status.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/type/v3/percent.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/type/v3/range.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/type/v3/ratelimit_unit.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/type/v3/semantic_version.upbdefs.c',
     'src/core/ext/upbdefs-generated/envoy/type/v3/token_bucket.upbdefs.c',
     'src/core/ext/upbdefs-generated/google/api/annotations.upbdefs.c',
     'src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/checked.upbdefs.c',
     'src/core/ext/upbdefs-generated/google/api/expr/v1alpha1/syntax.upbdefs.c',
     'src/core/ext/upbdefs-generated/google/api/http.upbdefs.c',
     'src/core/ext/upbdefs-generated/google/api/httpbody.upbdefs.c',
     'src/core/ext/upbdefs-generated/google/protobuf/any.upbdefs.c',
     'src/core/ext/upbdefs-generated/google/protobuf/descriptor.upbdefs.c',
     'src/core/ext/upbdefs-generated/google/protobuf/duration.upbdefs.c',
     'src/core/ext/upbdefs-generated/google/protobuf/empty.upbdefs.c',
     'src/core/ext/upbdefs-generated/google/protobuf/struct.upbdefs.c',
     'src/core/ext/upbdefs-generated/google/protobuf/timestamp.upbdefs.c',
     'src/core/ext/upbdefs-generated/google/protobuf/wrappers.upbdefs.c',
     'src/core/ext/upbdefs-generated/google/rpc/status.upbdefs.c',
     'src/core/ext/upbdefs-generated/opencensus/proto/trace/v1/trace_config.upbdefs.c',
     'src/core/ext/upbdefs-generated/src/proto/grpc/lookup/v1/rls_config.upbdefs.c',
     'src/core/ext/upbdefs-generated/udpa/annotations/migrate.upbdefs.c',
     'src/core/ext/upbdefs-generated/udpa/annotations/security.upbdefs.c',
     'src/core/ext/upbdefs-generated/udpa/annotations/sensitive.upbdefs.c',
     'src/core/ext/upbdefs-generated/udpa/annotations/status.upbdefs.c',
     'src/core/ext/upbdefs-generated/udpa/annotations/versioning.upbdefs.c',
     'src/core/ext/upbdefs-generated/validate/validate.upbdefs.c',
     'src/core/ext/upbdefs-generated/xds/annotations/v3/migrate.upbdefs.c',
     'src/core/ext/upbdefs-generated/xds/annotations/v3/security.upbdefs.c',
     'src/core/ext/upbdefs-generated/xds/annotations/v3/sensitive.upbdefs.c',
     'src/core/ext/upbdefs-generated/xds/annotations/v3/status.upbdefs.c',
     'src/core/ext/upbdefs-generated/xds/annotations/v3/versioning.upbdefs.c',
     'src/core/ext/upbdefs-generated/xds/core/v3/authority.upbdefs.c',
     'src/core/ext/upbdefs-generated/xds/core/v3/collection_entry.upbdefs.c',
     'src/core/ext/upbdefs-generated/xds/core/v3/context_params.upbdefs.c',
     'src/core/ext/upbdefs-generated/xds/core/v3/extension.upbdefs.c',
     'src/core/ext/upbdefs-generated/xds/core/v3/resource.upbdefs.c',
     'src/core/ext/upbdefs-generated/xds/core/v3/resource_locator.upbdefs.c',
     'src/core/ext/upbdefs-generated/xds/core/v3/resource_name.upbdefs.c',
     'src/core/ext/upbdefs-generated/xds/type/matcher/v3/matcher.upbdefs.c',
     'src/core/ext/upbdefs-generated/xds/type/matcher/v3/regex.upbdefs.c',
     'src/core/ext/upbdefs-generated/xds/type/matcher/v3/string.upbdefs.c',
     'src/core/ext/upbdefs-generated/xds/type/v3/typed_struct.upbdefs.c',
     'src/core/ext/xds/certificate_provider_registry.cc',
     'src/core/ext/xds/certificate_provider_store.cc',
     'src/core/ext/xds/file_watcher_certificate_provider_factory.cc',
     'src/core/ext/xds/xds_api.cc',
     'src/core/ext/xds/xds_bootstrap.cc',
     'src/core/ext/xds/xds_certificate_provider.cc',
     'src/core/ext/xds/xds_channel_stack_modifier.cc',
     'src/core/ext/xds/xds_client.cc',
     'src/core/ext/xds/xds_client_stats.cc',
     'src/core/ext/xds/xds_cluster.cc',
     'src/core/ext/xds/xds_cluster_specifier_plugin.cc',
     'src/core/ext/xds/xds_common_types.cc',
     'src/core/ext/xds/xds_endpoint.cc',
     'src/core/ext/xds/xds_http_fault_filter.cc',
     'src/core/ext/xds/xds_http_filters.cc',
     'src/core/ext/xds/xds_http_rbac_filter.cc',
     'src/core/ext/xds/xds_lb_policy_registry.cc',
     'src/core/ext/xds/xds_listener.cc',
     'src/core/ext/xds/xds_resource_type.cc',
     'src/core/ext/xds/xds_route_config.cc',
     'src/core/ext/xds/xds_routing.cc',
     'src/core/ext/xds/xds_server_config_fetcher.cc',
     'src/core/lib/address_utils/parse_address.cc',
     'src/core/lib/address_utils/sockaddr_utils.cc',
     'src/core/lib/backoff/backoff.cc',
     'src/core/lib/channel/channel_args.cc',
     'src/core/lib/channel/channel_args_preconditioning.cc',
     'src/core/lib/channel/channel_stack.cc',
     'src/core/lib/channel/channel_stack_builder.cc',
     'src/core/lib/channel/channel_stack_builder_impl.cc',
     'src/core/lib/channel/channel_trace.cc',
     'src/core/lib/channel/channelz.cc',
     'src/core/lib/channel/channelz_registry.cc',
     'src/core/lib/channel/connected_channel.cc',
     'src/core/lib/channel/promise_based_filter.cc',
     'src/core/lib/channel/status_util.cc',
     'src/core/lib/compression/compression.cc',
     'src/core/lib/compression/compression_internal.cc',
     'src/core/lib/compression/message_compress.cc',
     'src/core/lib/config/core_configuration.cc',
     'src/core/lib/debug/stats.cc',
     'src/core/lib/debug/stats_data.cc',
     'src/core/lib/debug/trace.cc',
     'src/core/lib/event_engine/channel_args_endpoint_config.cc',
     'src/core/lib/event_engine/default_event_engine_factory.cc',
     'src/core/lib/event_engine/event_engine.cc',
     'src/core/lib/event_engine/iomgr_engine.cc',
     'src/core/lib/event_engine/memory_allocator.cc',
     'src/core/lib/event_engine/resolved_address.cc',
     'src/core/lib/event_engine/slice.cc',
     'src/core/lib/event_engine/slice_buffer.cc',
     'src/core/lib/event_engine/trace.cc',
     'src/core/lib/gpr/alloc.cc',
     'src/core/lib/gpr/atm.cc',
     'src/core/lib/gpr/cpu_iphone.cc',
     'src/core/lib/gpr/cpu_linux.cc',
     'src/core/lib/gpr/cpu_posix.cc',
     'src/core/lib/gpr/cpu_windows.cc',
     'src/core/lib/gpr/env_linux.cc',
     'src/core/lib/gpr/env_posix.cc',
     'src/core/lib/gpr/env_windows.cc',
     'src/core/lib/gpr/log.cc',
     'src/core/lib/gpr/log_android.cc',
     'src/core/lib/gpr/log_linux.cc',
     'src/core/lib/gpr/log_posix.cc',
     'src/core/lib/gpr/log_windows.cc',
     'src/core/lib/gpr/murmur_hash.cc',
     'src/core/lib/gpr/string.cc',
     'src/core/lib/gpr/string_posix.cc',
     'src/core/lib/gpr/string_util_windows.cc',
     'src/core/lib/gpr/string_windows.cc',
     'src/core/lib/gpr/sync.cc',
     'src/core/lib/gpr/sync_abseil.cc',
     'src/core/lib/gpr/sync_posix.cc',
     'src/core/lib/gpr/sync_windows.cc',
     'src/core/lib/gpr/time.cc',
     'src/core/lib/gpr/time_posix.cc',
     'src/core/lib/gpr/time_precise.cc',
     'src/core/lib/gpr/time_windows.cc',
     'src/core/lib/gpr/tmpfile_msys.cc',
     'src/core/lib/gpr/tmpfile_posix.cc',
     'src/core/lib/gpr/tmpfile_windows.cc',
     'src/core/lib/gpr/wrap_memcpy.cc',
     'src/core/lib/gprpp/examine_stack.cc',
     'src/core/lib/gprpp/fork.cc',
     'src/core/lib/gprpp/global_config_env.cc',
     'src/core/lib/gprpp/host_port.cc',
     'src/core/lib/gprpp/mpscq.cc',
     'src/core/lib/gprpp/stat_posix.cc',
     'src/core/lib/gprpp/stat_windows.cc',
     'src/core/lib/gprpp/status_helper.cc',
     'src/core/lib/gprpp/thd_posix.cc',
     'src/core/lib/gprpp/thd_windows.cc',
     'src/core/lib/gprpp/time.cc',
     'src/core/lib/gprpp/time_util.cc',
     'src/core/lib/http/format_request.cc',
     'src/core/lib/http/httpcli.cc',
     'src/core/lib/http/httpcli_security_connector.cc',
     'src/core/lib/http/parser.cc',
     'src/core/lib/iomgr/buffer_list.cc',
     'src/core/lib/iomgr/call_combiner.cc',
     'src/core/lib/iomgr/cfstream_handle.cc',
     'src/core/lib/iomgr/combiner.cc',
     'src/core/lib/iomgr/dualstack_socket_posix.cc',
     'src/core/lib/iomgr/endpoint.cc',
     'src/core/lib/iomgr/endpoint_cfstream.cc',
     'src/core/lib/iomgr/endpoint_pair_posix.cc',
     'src/core/lib/iomgr/endpoint_pair_windows.cc',
     'src/core/lib/iomgr/error.cc',
     'src/core/lib/iomgr/error_cfstream.cc',
     'src/core/lib/iomgr/ev_apple.cc',
     'src/core/lib/iomgr/ev_epoll1_linux.cc',
     'src/core/lib/iomgr/ev_poll_posix.cc',
     'src/core/lib/iomgr/ev_posix.cc',
     'src/core/lib/iomgr/ev_windows.cc',
     'src/core/lib/iomgr/exec_ctx.cc',
     'src/core/lib/iomgr/executor.cc',
     'src/core/lib/iomgr/executor/mpmcqueue.cc',
     'src/core/lib/iomgr/executor/threadpool.cc',
     'src/core/lib/iomgr/fork_posix.cc',
     'src/core/lib/iomgr/fork_windows.cc',
     'src/core/lib/iomgr/gethostname_fallback.cc',
     'src/core/lib/iomgr/gethostname_host_name_max.cc',
     'src/core/lib/iomgr/gethostname_sysconf.cc',
     'src/core/lib/iomgr/grpc_if_nametoindex_posix.cc',
     'src/core/lib/iomgr/grpc_if_nametoindex_unsupported.cc',
     'src/core/lib/iomgr/internal_errqueue.cc',
     'src/core/lib/iomgr/iocp_windows.cc',
     'src/core/lib/iomgr/iomgr.cc',
     'src/core/lib/iomgr/iomgr_internal.cc',
     'src/core/lib/iomgr/iomgr_posix.cc',
     'src/core/lib/iomgr/iomgr_posix_cfstream.cc',
     'src/core/lib/iomgr/iomgr_windows.cc',
     'src/core/lib/iomgr/load_file.cc',
     'src/core/lib/iomgr/lockfree_event.cc',
     'src/core/lib/iomgr/polling_entity.cc',
     'src/core/lib/iomgr/pollset.cc',
     'src/core/lib/iomgr/pollset_set.cc',
     'src/core/lib/iomgr/pollset_set_windows.cc',
     'src/core/lib/iomgr/pollset_windows.cc',
     'src/core/lib/iomgr/resolve_address.cc',
     'src/core/lib/iomgr/resolve_address_posix.cc',
     'src/core/lib/iomgr/resolve_address_windows.cc',
     'src/core/lib/iomgr/sockaddr_utils_posix.cc',
     'src/core/lib/iomgr/socket_factory_posix.cc',
     'src/core/lib/iomgr/socket_mutator.cc',
     'src/core/lib/iomgr/socket_utils_common_posix.cc',
     'src/core/lib/iomgr/socket_utils_linux.cc',
     'src/core/lib/iomgr/socket_utils_posix.cc',
     'src/core/lib/iomgr/socket_utils_windows.cc',
     'src/core/lib/iomgr/socket_windows.cc',
     'src/core/lib/iomgr/tcp_client.cc',
     'src/core/lib/iomgr/tcp_client_cfstream.cc',
     'src/core/lib/iomgr/tcp_client_posix.cc',
     'src/core/lib/iomgr/tcp_client_windows.cc',
     'src/core/lib/iomgr/tcp_posix.cc',
     'src/core/lib/iomgr/tcp_server.cc',
     'src/core/lib/iomgr/tcp_server_posix.cc',
     'src/core/lib/iomgr/tcp_server_utils_posix_common.cc',
     'src/core/lib/iomgr/tcp_server_utils_posix_ifaddrs.cc',
     'src/core/lib/iomgr/tcp_server_utils_posix_noifaddrs.cc',
     'src/core/lib/iomgr/tcp_server_windows.cc',
     'src/core/lib/iomgr/tcp_windows.cc',
     'src/core/lib/iomgr/time_averaged_stats.cc',
     'src/core/lib/iomgr/timer.cc',
     'src/core/lib/iomgr/timer_generic.cc',
     'src/core/lib/iomgr/timer_heap.cc',
     'src/core/lib/iomgr/timer_manager.cc',
     'src/core/lib/iomgr/unix_sockets_posix.cc',
     'src/core/lib/iomgr/unix_sockets_posix_noop.cc',
     'src/core/lib/iomgr/wakeup_fd_eventfd.cc',
     'src/core/lib/iomgr/wakeup_fd_nospecial.cc',
     'src/core/lib/iomgr/wakeup_fd_pipe.cc',
     'src/core/lib/iomgr/wakeup_fd_posix.cc',
     'src/core/lib/iomgr/work_serializer.cc',
     'src/core/lib/json/json_reader.cc',
     'src/core/lib/json/json_util.cc',
     'src/core/lib/json/json_writer.cc',
     'src/core/lib/matchers/matchers.cc',
     'src/core/lib/profiling/basic_timers.cc',
     'src/core/lib/profiling/stap_timers.cc',
     'src/core/lib/promise/activity.cc',
     'src/core/lib/promise/sleep.cc',
     'src/core/lib/resolver/resolver.cc',
     'src/core/lib/resolver/resolver_registry.cc',
     'src/core/lib/resolver/server_address.cc',
     'src/core/lib/resource_quota/api.cc',
     'src/core/lib/resource_quota/arena.cc',
     'src/core/lib/resource_quota/memory_quota.cc',
     'src/core/lib/resource_quota/resource_quota.cc',
     'src/core/lib/resource_quota/thread_quota.cc',
     'src/core/lib/resource_quota/trace.cc',
     'src/core/lib/security/authorization/authorization_policy_provider_vtable.cc',
     'src/core/lib/security/authorization/evaluate_args.cc',
     'src/core/lib/security/authorization/grpc_authorization_engine.cc',
     'src/core/lib/security/authorization/grpc_server_authz_filter.cc',
     'src/core/lib/security/authorization/matchers.cc',
     'src/core/lib/security/authorization/rbac_policy.cc',
     'src/core/lib/security/context/security_context.cc',
     'src/core/lib/security/credentials/alts/alts_credentials.cc',
     'src/core/lib/security/credentials/alts/check_gcp_environment.cc',
     'src/core/lib/security/credentials/alts/check_gcp_environment_linux.cc',
     'src/core/lib/security/credentials/alts/check_gcp_environment_no_op.cc',
     'src/core/lib/security/credentials/alts/check_gcp_environment_windows.cc',
     'src/core/lib/security/credentials/alts/grpc_alts_credentials_client_options.cc',
     'src/core/lib/security/credentials/alts/grpc_alts_credentials_options.cc',
     'src/core/lib/security/credentials/alts/grpc_alts_credentials_server_options.cc',
     'src/core/lib/security/credentials/call_creds_util.cc',
     'src/core/lib/security/credentials/channel_creds_registry_init.cc',
     'src/core/lib/security/credentials/composite/composite_credentials.cc',
     'src/core/lib/security/credentials/credentials.cc',
     'src/core/lib/security/credentials/external/aws_external_account_credentials.cc',
     'src/core/lib/security/credentials/external/aws_request_signer.cc',
     'src/core/lib/security/credentials/external/external_account_credentials.cc',
     'src/core/lib/security/credentials/external/file_external_account_credentials.cc',
     'src/core/lib/security/credentials/external/url_external_account_credentials.cc',
     'src/core/lib/security/credentials/fake/fake_credentials.cc',
     'src/core/lib/security/credentials/google_default/credentials_generic.cc',
     'src/core/lib/security/credentials/google_default/google_default_credentials.cc',
     'src/core/lib/security/credentials/iam/iam_credentials.cc',
     'src/core/lib/security/credentials/insecure/insecure_credentials.cc',
     'src/core/lib/security/credentials/jwt/json_token.cc',
     'src/core/lib/security/credentials/jwt/jwt_credentials.cc',
     'src/core/lib/security/credentials/jwt/jwt_verifier.cc',
     'src/core/lib/security/credentials/local/local_credentials.cc',
     'src/core/lib/security/credentials/oauth2/oauth2_credentials.cc',
     'src/core/lib/security/credentials/plugin/plugin_credentials.cc',
     'src/core/lib/security/credentials/ssl/ssl_credentials.cc',
     'src/core/lib/security/credentials/tls/grpc_tls_certificate_distributor.cc',
     'src/core/lib/security/credentials/tls/grpc_tls_certificate_provider.cc',
     'src/core/lib/security/credentials/tls/grpc_tls_certificate_verifier.cc',
     'src/core/lib/security/credentials/tls/grpc_tls_credentials_options.cc',
     'src/core/lib/security/credentials/tls/tls_credentials.cc',
     'src/core/lib/security/credentials/tls/tls_utils.cc',
     'src/core/lib/security/credentials/xds/xds_credentials.cc',
     'src/core/lib/security/security_connector/alts/alts_security_connector.cc',
     'src/core/lib/security/security_connector/fake/fake_security_connector.cc',
     'src/core/lib/security/security_connector/insecure/insecure_security_connector.cc',
     'src/core/lib/security/security_connector/load_system_roots_fallback.cc',
     'src/core/lib/security/security_connector/load_system_roots_linux.cc',
     'src/core/lib/security/security_connector/local/local_security_connector.cc',
     'src/core/lib/security/security_connector/security_connector.cc',
     'src/core/lib/security/security_connector/ssl/ssl_security_connector.cc',
     'src/core/lib/security/security_connector/ssl_utils.cc',
     'src/core/lib/security/security_connector/ssl_utils_config.cc',
     'src/core/lib/security/security_connector/tls/tls_security_connector.cc',
     'src/core/lib/security/transport/client_auth_filter.cc',
     'src/core/lib/security/transport/secure_endpoint.cc',
     'src/core/lib/security/transport/security_handshaker.cc',
     'src/core/lib/security/transport/server_auth_filter.cc',
     'src/core/lib/security/transport/tsi_error.cc',
     'src/core/lib/security/util/json_util.cc',
     'src/core/lib/service_config/service_config_impl.cc',
     'src/core/lib/service_config/service_config_parser.cc',
     'src/core/lib/slice/b64.cc',
     'src/core/lib/slice/percent_encoding.cc',
     'src/core/lib/slice/slice.cc',
     'src/core/lib/slice/slice_api.cc',
     'src/core/lib/slice/slice_buffer.cc',
     'src/core/lib/slice/slice_buffer_api.cc',
     'src/core/lib/slice/slice_refcount.cc',
     'src/core/lib/slice/slice_split.cc',
     'src/core/lib/slice/slice_string_helpers.cc',
     'src/core/lib/surface/api_trace.cc',
     'src/core/lib/surface/builtins.cc',
     'src/core/lib/surface/byte_buffer.cc',
     'src/core/lib/surface/byte_buffer_reader.cc',
     'src/core/lib/surface/call.cc',
     'src/core/lib/surface/call_details.cc',
     'src/core/lib/surface/call_log_batch.cc',
     'src/core/lib/surface/channel.cc',
     'src/core/lib/surface/channel_init.cc',
     'src/core/lib/surface/channel_ping.cc',
     'src/core/lib/surface/channel_stack_type.cc',
     'src/core/lib/surface/completion_queue.cc',
     'src/core/lib/surface/completion_queue_factory.cc',
     'src/core/lib/surface/event_string.cc',
     'src/core/lib/surface/init.cc',
     'src/core/lib/surface/lame_client.cc',
     'src/core/lib/surface/metadata_array.cc',
     'src/core/lib/surface/server.cc',
     'src/core/lib/surface/validate_metadata.cc',
     'src/core/lib/surface/version.cc',
     'src/core/lib/transport/bdp_estimator.cc',
+    'src/core/lib/transport/byte_stream.cc',
     'src/core/lib/transport/connectivity_state.cc',
     'src/core/lib/transport/error_utils.cc',
     'src/core/lib/transport/handshaker.cc',
     'src/core/lib/transport/handshaker_registry.cc',
     'src/core/lib/transport/http_connect_handshaker.cc',
     'src/core/lib/transport/metadata_batch.cc',
     'src/core/lib/transport/parsed_metadata.cc',
     'src/core/lib/transport/pid_controller.cc',
     'src/core/lib/transport/status_conversion.cc',
     'src/core/lib/transport/tcp_connect_handshaker.cc',
     'src/core/lib/transport/timeout_encoding.cc',
     'src/core/lib/transport/transport.cc',
     'src/core/lib/transport/transport_op_string.cc',
     'src/core/lib/uri/uri_parser.cc',
     'src/core/plugin_registry/grpc_plugin_registry.cc',
     'src/core/plugin_registry/grpc_plugin_registry_extra.cc',
     'src/core/tsi/alts/crypt/aes_gcm.cc',
     'src/core/tsi/alts/crypt/gsec.cc',
     'src/core/tsi/alts/frame_protector/alts_counter.cc',
     'src/core/tsi/alts/frame_protector/alts_crypter.cc',
     'src/core/tsi/alts/frame_protector/alts_frame_protector.cc',
     'src/core/tsi/alts/frame_protector/alts_record_protocol_crypter_common.cc',
     'src/core/tsi/alts/frame_protector/alts_seal_privacy_integrity_crypter.cc',
     'src/core/tsi/alts/frame_protector/alts_unseal_privacy_integrity_crypter.cc',
     'src/core/tsi/alts/frame_protector/frame_handler.cc',
     'src/core/tsi/alts/handshaker/alts_handshaker_client.cc',
     'src/core/tsi/alts/handshaker/alts_shared_resource.cc',
     'src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc',
     'src/core/tsi/alts/handshaker/alts_tsi_utils.cc',
     'src/core/tsi/alts/handshaker/transport_security_common_api.cc',
     'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_integrity_only_record_protocol.cc',
     'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_privacy_integrity_record_protocol.cc',
     'src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol_common.cc',
     'src/core/tsi/alts/zero_copy_frame_protector/alts_iovec_record_protocol.cc',
     'src/core/tsi/alts/zero_copy_frame_protector/alts_zero_copy_grpc_protector.cc',
     'src/core/tsi/fake_transport_security.cc',
     'src/core/tsi/local_transport_security.cc',
     'src/core/tsi/ssl/key_logging/ssl_key_logging.cc',
     'src/core/tsi/ssl/session_cache/ssl_session_boringssl.cc',
     'src/core/tsi/ssl/session_cache/ssl_session_cache.cc',
     'src/core/tsi/ssl/session_cache/ssl_session_openssl.cc',
     'src/core/tsi/ssl_transport_security.cc',
     'src/core/tsi/transport_security.cc',
     'src/core/tsi/transport_security_grpc.cc',
     'third_party/abseil-cpp/absl/base/internal/cycleclock.cc',
     'third_party/abseil-cpp/absl/base/internal/low_level_alloc.cc',
     'third_party/abseil-cpp/absl/base/internal/raw_logging.cc',
     'third_party/abseil-cpp/absl/base/internal/spinlock.cc',
     'third_party/abseil-cpp/absl/base/internal/spinlock_wait.cc',
     'third_party/abseil-cpp/absl/base/internal/sysinfo.cc',
     'third_party/abseil-cpp/absl/base/internal/thread_identity.cc',
     'third_party/abseil-cpp/absl/base/internal/throw_delegate.cc',
     'third_party/abseil-cpp/absl/base/internal/unscaledcycleclock.cc',
     'third_party/abseil-cpp/absl/base/log_severity.cc',
     'third_party/abseil-cpp/absl/container/internal/hashtablez_sampler.cc',
     'third_party/abseil-cpp/absl/container/internal/hashtablez_sampler_force_weak_definition.cc',
     'third_party/abseil-cpp/absl/container/internal/raw_hash_set.cc',
     'third_party/abseil-cpp/absl/debugging/internal/address_is_readable.cc',
     'third_party/abseil-cpp/absl/debugging/internal/demangle.cc',
     'third_party/abseil-cpp/absl/debugging/internal/elf_mem_image.cc',
     'third_party/abseil-cpp/absl/debugging/internal/vdso_support.cc',
     'third_party/abseil-cpp/absl/debugging/stacktrace.cc',
     'third_party/abseil-cpp/absl/debugging/symbolize.cc',
     'third_party/abseil-cpp/absl/hash/internal/city.cc',
     'third_party/abseil-cpp/absl/hash/internal/hash.cc',
     'third_party/abseil-cpp/absl/hash/internal/low_level_hash.cc',
     'third_party/abseil-cpp/absl/numeric/int128.cc',
     'third_party/abseil-cpp/absl/profiling/internal/exponential_biased.cc',
     'third_party/abseil-cpp/absl/random/discrete_distribution.cc',
     'third_party/abseil-cpp/absl/random/gaussian_distribution.cc',
     'third_party/abseil-cpp/absl/random/internal/pool_urbg.cc',
     'third_party/abseil-cpp/absl/random/internal/randen.cc',
     'third_party/abseil-cpp/absl/random/internal/randen_detect.cc',
     'third_party/abseil-cpp/absl/random/internal/randen_hwaes.cc',
     'third_party/abseil-cpp/absl/random/internal/randen_round_keys.cc',
     'third_party/abseil-cpp/absl/random/internal/randen_slow.cc',
     'third_party/abseil-cpp/absl/random/internal/seed_material.cc',
     'third_party/abseil-cpp/absl/random/seed_gen_exception.cc',
     'third_party/abseil-cpp/absl/random/seed_sequences.cc',
     'third_party/abseil-cpp/absl/status/status.cc',
     'third_party/abseil-cpp/absl/status/status_payload_printer.cc',
     'third_party/abseil-cpp/absl/status/statusor.cc',
     'third_party/abseil-cpp/absl/strings/ascii.cc',
     'third_party/abseil-cpp/absl/strings/charconv.cc',
     'third_party/abseil-cpp/absl/strings/cord.cc',
     'third_party/abseil-cpp/absl/strings/escaping.cc',
     'third_party/abseil-cpp/absl/strings/internal/charconv_bigint.cc',
     'third_party/abseil-cpp/absl/strings/internal/charconv_parse.cc',
     'third_party/abseil-cpp/absl/strings/internal/cord_internal.cc',
     'third_party/abseil-cpp/absl/strings/internal/cord_rep_btree.cc',
     'third_party/abseil-cpp/absl/strings/internal/cord_rep_btree_navigator.cc',
     'third_party/abseil-cpp/absl/strings/internal/cord_rep_btree_reader.cc',
     'third_party/abseil-cpp/absl/strings/internal/cord_rep_consume.cc',
     'third_party/abseil-cpp/absl/strings/internal/cord_rep_ring.cc',
     'third_party/abseil-cpp/absl/strings/internal/cordz_functions.cc',
     'third_party/abseil-cpp/absl/strings/internal/cordz_handle.cc',
     'third_party/abseil-cpp/absl/strings/internal/cordz_info.cc',
     'third_party/abseil-cpp/absl/strings/internal/escaping.cc',
     'third_party/abseil-cpp/absl/strings/internal/memutil.cc',
     'third_party/abseil-cpp/absl/strings/internal/ostringstream.cc',
     'third_party/abseil-cpp/absl/strings/internal/str_format/arg.cc',
     'third_party/abseil-cpp/absl/strings/internal/str_format/bind.cc',
     'third_party/abseil-cpp/absl/strings/internal/str_format/extension.cc',
     'third_party/abseil-cpp/absl/strings/internal/str_format/float_conversion.cc',
     'third_party/abseil-cpp/absl/strings/internal/str_format/output.cc',
     'third_party/abseil-cpp/absl/strings/internal/str_format/parser.cc',
     'third_party/abseil-cpp/absl/strings/internal/utf8.cc',
     'third_party/abseil-cpp/absl/strings/match.cc',
     'third_party/abseil-cpp/absl/strings/numbers.cc',
     'third_party/abseil-cpp/absl/strings/str_cat.cc',
     'third_party/abseil-cpp/absl/strings/str_replace.cc',
     'third_party/abseil-cpp/absl/strings/str_split.cc',
     'third_party/abseil-cpp/absl/strings/string_view.cc',
     'third_party/abseil-cpp/absl/strings/substitute.cc',
     'third_party/abseil-cpp/absl/synchronization/barrier.cc',
     'third_party/abseil-cpp/absl/synchronization/blocking_counter.cc',
     'third_party/abseil-cpp/absl/synchronization/internal/create_thread_identity.cc',
     'third_party/abseil-cpp/absl/synchronization/internal/graphcycles.cc',
     'third_party/abseil-cpp/absl/synchronization/internal/per_thread_sem.cc',
     'third_party/abseil-cpp/absl/synchronization/internal/waiter.cc',
     'third_party/abseil-cpp/absl/synchronization/mutex.cc',
     'third_party/abseil-cpp/absl/synchronization/notification.cc',
     'third_party/abseil-cpp/absl/time/civil_time.cc',
     'third_party/abseil-cpp/absl/time/clock.cc',
     'third_party/abseil-cpp/absl/time/duration.cc',
     'third_party/abseil-cpp/absl/time/format.cc',
     'third_party/abseil-cpp/absl/time/internal/cctz/src/civil_time_detail.cc',
     'third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_fixed.cc',
     'third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_format.cc',
     'third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_if.cc',
     'third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_impl.cc',
     'third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_info.cc',
     'third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_libc.cc',
     'third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_lookup.cc',
     'third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_posix.cc',
     'third_party/abseil-cpp/absl/time/internal/cctz/src/zone_info_source.cc',
     'third_party/abseil-cpp/absl/time/time.cc',
     'third_party/abseil-cpp/absl/types/bad_optional_access.cc',
     'third_party/abseil-cpp/absl/types/bad_variant_access.cc',
     'third_party/address_sorting/address_sorting.c',
     'third_party/address_sorting/address_sorting_posix.c',
     'third_party/address_sorting/address_sorting_windows.c',
     'third_party/boringssl-with-bazel/err_data.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/a_bitstr.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/a_bool.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/a_d2i_fp.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/a_dup.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/a_enum.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/a_gentm.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/a_i2d_fp.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/a_int.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/a_mbstr.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/a_object.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/a_octet.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/a_print.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/a_strex.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/a_strnid.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/a_time.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/a_type.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/a_utctm.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/a_utf8.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/asn1_lib.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/asn1_par.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/asn_pack.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/f_int.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/f_string.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/tasn_dec.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/tasn_enc.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/tasn_fre.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/tasn_new.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/tasn_typ.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/tasn_utl.c',
     'third_party/boringssl-with-bazel/src/crypto/asn1/time_support.c',
     'third_party/boringssl-with-bazel/src/crypto/base64/base64.c',
     'third_party/boringssl-with-bazel/src/crypto/bio/bio.c',
     'third_party/boringssl-with-bazel/src/crypto/bio/bio_mem.c',
     'third_party/boringssl-with-bazel/src/crypto/bio/connect.c',
     'third_party/boringssl-with-bazel/src/crypto/bio/fd.c',
     'third_party/boringssl-with-bazel/src/crypto/bio/file.c',
     'third_party/boringssl-with-bazel/src/crypto/bio/hexdump.c',
     'third_party/boringssl-with-bazel/src/crypto/bio/pair.c',
     'third_party/boringssl-with-bazel/src/crypto/bio/printf.c',
     'third_party/boringssl-with-bazel/src/crypto/bio/socket.c',
     'third_party/boringssl-with-bazel/src/crypto/bio/socket_helper.c',
     'third_party/boringssl-with-bazel/src/crypto/blake2/blake2.c',
     'third_party/boringssl-with-bazel/src/crypto/bn_extra/bn_asn1.c',
     'third_party/boringssl-with-bazel/src/crypto/bn_extra/convert.c',
     'third_party/boringssl-with-bazel/src/crypto/buf/buf.c',
     'third_party/boringssl-with-bazel/src/crypto/bytestring/asn1_compat.c',
     'third_party/boringssl-with-bazel/src/crypto/bytestring/ber.c',
     'third_party/boringssl-with-bazel/src/crypto/bytestring/cbb.c',
     'third_party/boringssl-with-bazel/src/crypto/bytestring/cbs.c',
     'third_party/boringssl-with-bazel/src/crypto/bytestring/unicode.c',
     'third_party/boringssl-with-bazel/src/crypto/chacha/chacha.c',
     'third_party/boringssl-with-bazel/src/crypto/cipher_extra/cipher_extra.c',
     'third_party/boringssl-with-bazel/src/crypto/cipher_extra/derive_key.c',
     'third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_aesccm.c',
     'third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_aesctrhmac.c',
     'third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_aesgcmsiv.c',
     'third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_chacha20poly1305.c',
     'third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_null.c',
     'third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_rc2.c',
     'third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_rc4.c',
     'third_party/boringssl-with-bazel/src/crypto/cipher_extra/e_tls.c',
     'third_party/boringssl-with-bazel/src/crypto/cipher_extra/tls_cbc.c',
     'third_party/boringssl-with-bazel/src/crypto/cmac/cmac.c',
     'third_party/boringssl-with-bazel/src/crypto/conf/conf.c',
     'third_party/boringssl-with-bazel/src/crypto/cpu-aarch64-fuchsia.c',
     'third_party/boringssl-with-bazel/src/crypto/cpu-aarch64-linux.c',
     'third_party/boringssl-with-bazel/src/crypto/cpu-aarch64-win.c',
     'third_party/boringssl-with-bazel/src/crypto/cpu-arm-linux.c',
     'third_party/boringssl-with-bazel/src/crypto/cpu-arm.c',
     'third_party/boringssl-with-bazel/src/crypto/cpu-intel.c',
     'third_party/boringssl-with-bazel/src/crypto/cpu-ppc64le.c',
     'third_party/boringssl-with-bazel/src/crypto/crypto.c',
     'third_party/boringssl-with-bazel/src/crypto/curve25519/curve25519.c',
     'third_party/boringssl-with-bazel/src/crypto/curve25519/spake25519.c',
     'third_party/boringssl-with-bazel/src/crypto/dh_extra/dh_asn1.c',
     'third_party/boringssl-with-bazel/src/crypto/dh_extra/params.c',
     'third_party/boringssl-with-bazel/src/crypto/digest_extra/digest_extra.c',
     'third_party/boringssl-with-bazel/src/crypto/dsa/dsa.c',
     'third_party/boringssl-with-bazel/src/crypto/dsa/dsa_asn1.c',
     'third_party/boringssl-with-bazel/src/crypto/ec_extra/ec_asn1.c',
     'third_party/boringssl-with-bazel/src/crypto/ec_extra/ec_derive.c',
     'third_party/boringssl-with-bazel/src/crypto/ec_extra/hash_to_curve.c',
     'third_party/boringssl-with-bazel/src/crypto/ecdh_extra/ecdh_extra.c',
     'third_party/boringssl-with-bazel/src/crypto/ecdsa_extra/ecdsa_asn1.c',
     'third_party/boringssl-with-bazel/src/crypto/engine/engine.c',
     'third_party/boringssl-with-bazel/src/crypto/err/err.c',
     'third_party/boringssl-with-bazel/src/crypto/evp/digestsign.c',
     'third_party/boringssl-with-bazel/src/crypto/evp/evp.c',
     'third_party/boringssl-with-bazel/src/crypto/evp/evp_asn1.c',
     'third_party/boringssl-with-bazel/src/crypto/evp/evp_ctx.c',
     'third_party/boringssl-with-bazel/src/crypto/evp/p_dsa_asn1.c',
     'third_party/boringssl-with-bazel/src/crypto/evp/p_ec.c',
     'third_party/boringssl-with-bazel/src/crypto/evp/p_ec_asn1.c',
     'third_party/boringssl-with-bazel/src/crypto/evp/p_ed25519.c',
     'third_party/boringssl-with-bazel/src/crypto/evp/p_ed25519_asn1.c',
     'third_party/boringssl-with-bazel/src/crypto/evp/p_rsa.c',
     'third_party/boringssl-with-bazel/src/crypto/evp/p_rsa_asn1.c',
     'third_party/boringssl-with-bazel/src/crypto/evp/p_x25519.c',
     'third_party/boringssl-with-bazel/src/crypto/evp/p_x25519_asn1.c',
     'third_party/boringssl-with-bazel/src/crypto/evp/pbkdf.c',
     'third_party/boringssl-with-bazel/src/crypto/evp/print.c',
     'third_party/boringssl-with-bazel/src/crypto/evp/scrypt.c',
     'third_party/boringssl-with-bazel/src/crypto/evp/sign.c',
     'third_party/boringssl-with-bazel/src/crypto/ex_data.c',
     'third_party/boringssl-with-bazel/src/crypto/fipsmodule/bcm.c',
     'third_party/boringssl-with-bazel/src/crypto/fipsmodule/fips_shared_support.c',
     'third_party/boringssl-with-bazel/src/crypto/hkdf/hkdf.c',
     'third_party/boringssl-with-bazel/src/crypto/hpke/hpke.c',
     'third_party/boringssl-with-bazel/src/crypto/hrss/hrss.c',
     'third_party/boringssl-with-bazel/src/crypto/lhash/lhash.c',
     'third_party/boringssl-with-bazel/src/crypto/mem.c',
     'third_party/boringssl-with-bazel/src/crypto/obj/obj.c',
     'third_party/boringssl-with-bazel/src/crypto/obj/obj_xref.c',
     'third_party/boringssl-with-bazel/src/crypto/pem/pem_all.c',
     'third_party/boringssl-with-bazel/src/crypto/pem/pem_info.c',
     'third_party/boringssl-with-bazel/src/crypto/pem/pem_lib.c',
     'third_party/boringssl-with-bazel/src/crypto/pem/pem_oth.c',
     'third_party/boringssl-with-bazel/src/crypto/pem/pem_pk8.c',
     'third_party/boringssl-with-bazel/src/crypto/pem/pem_pkey.c',
     'third_party/boringssl-with-bazel/src/crypto/pem/pem_x509.c',
     'third_party/boringssl-with-bazel/src/crypto/pem/pem_xaux.c',
     'third_party/boringssl-with-bazel/src/crypto/pkcs7/pkcs7.c',
     'third_party/boringssl-with-bazel/src/crypto/pkcs7/pkcs7_x509.c',
     'third_party/boringssl-with-bazel/src/crypto/pkcs8/p5_pbev2.c',
     'third_party/boringssl-with-bazel/src/crypto/pkcs8/pkcs8.c',
     'third_party/boringssl-with-bazel/src/crypto/pkcs8/pkcs8_x509.c',
     'third_party/boringssl-with-bazel/src/crypto/poly1305/poly1305.c',
     'third_party/boringssl-with-bazel/src/crypto/poly1305/poly1305_arm.c',
     'third_party/boringssl-with-bazel/src/crypto/poly1305/poly1305_vec.c',
     'third_party/boringssl-with-bazel/src/crypto/pool/pool.c',
     'third_party/boringssl-with-bazel/src/crypto/rand_extra/deterministic.c',
     'third_party/boringssl-with-bazel/src/crypto/rand_extra/forkunsafe.c',
     'third_party/boringssl-with-bazel/src/crypto/rand_extra/fuchsia.c',
     'third_party/boringssl-with-bazel/src/crypto/rand_extra/passive.c',
     'third_party/boringssl-with-bazel/src/crypto/rand_extra/rand_extra.c',
     'third_party/boringssl-with-bazel/src/crypto/rand_extra/windows.c',
     'third_party/boringssl-with-bazel/src/crypto/rc4/rc4.c',
     'third_party/boringssl-with-bazel/src/crypto/refcount_c11.c',
     'third_party/boringssl-with-bazel/src/crypto/refcount_lock.c',
     'third_party/boringssl-with-bazel/src/crypto/rsa_extra/rsa_asn1.c',
     'third_party/boringssl-with-bazel/src/crypto/rsa_extra/rsa_print.c',
     'third_party/boringssl-with-bazel/src/crypto/siphash/siphash.c',
     'third_party/boringssl-with-bazel/src/crypto/stack/stack.c',
     'third_party/boringssl-with-bazel/src/crypto/thread.c',
     'third_party/boringssl-with-bazel/src/crypto/thread_none.c',
     'third_party/boringssl-with-bazel/src/crypto/thread_pthread.c',
     'third_party/boringssl-with-bazel/src/crypto/thread_win.c',
     'third_party/boringssl-with-bazel/src/crypto/trust_token/pmbtoken.c',
     'third_party/boringssl-with-bazel/src/crypto/trust_token/trust_token.c',
     'third_party/boringssl-with-bazel/src/crypto/trust_token/voprf.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/a_digest.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/a_sign.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/a_verify.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/algorithm.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/asn1_gen.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/by_dir.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/by_file.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/i2d_pr.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/name_print.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/rsa_pss.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/t_crl.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/t_req.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/t_x509.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/t_x509a.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x509.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x509_att.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x509_cmp.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x509_d2.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x509_def.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x509_ext.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x509_lu.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x509_obj.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x509_req.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x509_set.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x509_trs.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x509_txt.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x509_v3.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x509_vfy.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x509_vpm.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x509cset.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x509name.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x509rset.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x509spki.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x_algor.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x_all.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x_attrib.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x_crl.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x_exten.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x_info.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x_name.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x_pkey.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x_pubkey.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x_req.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x_sig.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x_spki.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x_val.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x_x509.c',
     'third_party/boringssl-with-bazel/src/crypto/x509/x_x509a.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_cache.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_data.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_lib.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_map.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_node.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/pcy_tree.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_akey.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_akeya.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_alt.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_bcons.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_bitst.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_conf.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_cpols.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_crld.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_enum.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_extku.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_genn.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_ia5.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_info.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_int.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_lib.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_ncons.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_ocsp.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_pci.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_pcia.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_pcons.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_pmaps.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_prn.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_purp.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_skey.c',
     'third_party/boringssl-with-bazel/src/crypto/x509v3/v3_utl.c',
     'third_party/boringssl-with-bazel/src/ssl/bio_ssl.cc',
     'third_party/boringssl-with-bazel/src/ssl/d1_both.cc',
     'third_party/boringssl-with-bazel/src/ssl/d1_lib.cc',
     'third_party/boringssl-with-bazel/src/ssl/d1_pkt.cc',
     'third_party/boringssl-with-bazel/src/ssl/d1_srtp.cc',
     'third_party/boringssl-with-bazel/src/ssl/dtls_method.cc',
     'third_party/boringssl-with-bazel/src/ssl/dtls_record.cc',
     'third_party/boringssl-with-bazel/src/ssl/encrypted_client_hello.cc',
     'third_party/boringssl-with-bazel/src/ssl/extensions.cc',
     'third_party/boringssl-with-bazel/src/ssl/handoff.cc',
     'third_party/boringssl-with-bazel/src/ssl/handshake.cc',
     'third_party/boringssl-with-bazel/src/ssl/handshake_client.cc',
     'third_party/boringssl-with-bazel/src/ssl/handshake_server.cc',
     'third_party/boringssl-with-bazel/src/ssl/s3_both.cc',
     'third_party/boringssl-with-bazel/src/ssl/s3_lib.cc',
     'third_party/boringssl-with-bazel/src/ssl/s3_pkt.cc',
     'third_party/boringssl-with-bazel/src/ssl/ssl_aead_ctx.cc',
     'third_party/boringssl-with-bazel/src/ssl/ssl_asn1.cc',
     'third_party/boringssl-with-bazel/src/ssl/ssl_buffer.cc',
     'third_party/boringssl-with-bazel/src/ssl/ssl_cert.cc',
     'third_party/boringssl-with-bazel/src/ssl/ssl_cipher.cc',
     'third_party/boringssl-with-bazel/src/ssl/ssl_file.cc',
     'third_party/boringssl-with-bazel/src/ssl/ssl_key_share.cc',
     'third_party/boringssl-with-bazel/src/ssl/ssl_lib.cc',
     'third_party/boringssl-with-bazel/src/ssl/ssl_privkey.cc',
     'third_party/boringssl-with-bazel/src/ssl/ssl_session.cc',
     'third_party/boringssl-with-bazel/src/ssl/ssl_stat.cc',
     'third_party/boringssl-with-bazel/src/ssl/ssl_transcript.cc',
     'third_party/boringssl-with-bazel/src/ssl/ssl_versions.cc',
     'third_party/boringssl-with-bazel/src/ssl/ssl_x509.cc',
     'third_party/boringssl-with-bazel/src/ssl/t1_enc.cc',
     'third_party/boringssl-with-bazel/src/ssl/tls13_both.cc',
     'third_party/boringssl-with-bazel/src/ssl/tls13_client.cc',
     'third_party/boringssl-with-bazel/src/ssl/tls13_enc.cc',
     'third_party/boringssl-with-bazel/src/ssl/tls13_server.cc',
     'third_party/boringssl-with-bazel/src/ssl/tls_method.cc',
     'third_party/boringssl-with-bazel/src/ssl/tls_record.cc',
     'third_party/cares/cares/src/lib/ares__close_sockets.c',
     'third_party/cares/cares/src/lib/ares__get_hostent.c',
     'third_party/cares/cares/src/lib/ares__parse_into_addrinfo.c',
     'third_party/cares/cares/src/lib/ares__read_line.c',
     'third_party/cares/cares/src/lib/ares__readaddrinfo.c',
     'third_party/cares/cares/src/lib/ares__sortaddrinfo.c',
     'third_party/cares/cares/src/lib/ares__timeval.c',
     'third_party/cares/cares/src/lib/ares_android.c',
     'third_party/cares/cares/src/lib/ares_cancel.c',
     'third_party/cares/cares/src/lib/ares_create_query.c',
     'third_party/cares/cares/src/lib/ares_data.c',
     'third_party/cares/cares/src/lib/ares_destroy.c',
     'third_party/cares/cares/src/lib/ares_expand_name.c',
     'third_party/cares/cares/src/lib/ares_expand_string.c',
     'third_party/cares/cares/src/lib/ares_fds.c',
     'third_party/cares/cares/src/lib/ares_free_hostent.c',
     'third_party/cares/cares/src/lib/ares_free_string.c',
     'third_party/cares/cares/src/lib/ares_freeaddrinfo.c',
     'third_party/cares/cares/src/lib/ares_getaddrinfo.c',
     'third_party/cares/cares/src/lib/ares_getenv.c',
     'third_party/cares/cares/src/lib/ares_gethostbyaddr.c',
     'third_party/cares/cares/src/lib/ares_gethostbyname.c',
     'third_party/cares/cares/src/lib/ares_getnameinfo.c',
     'third_party/cares/cares/src/lib/ares_getsock.c',
     'third_party/cares/cares/src/lib/ares_init.c',
     'third_party/cares/cares/src/lib/ares_library_init.c',
     'third_party/cares/cares/src/lib/ares_llist.c',
     'third_party/cares/cares/src/lib/ares_mkquery.c',
     'third_party/cares/cares/src/lib/ares_nowarn.c',
     'third_party/cares/cares/src/lib/ares_options.c',
     'third_party/cares/cares/src/lib/ares_parse_a_reply.c',
     'third_party/cares/cares/src/lib/ares_parse_aaaa_reply.c',
     'third_party/cares/cares/src/lib/ares_parse_caa_reply.c',
     'third_party/cares/cares/src/lib/ares_parse_mx_reply.c',
     'third_party/cares/cares/src/lib/ares_parse_naptr_reply.c',
     'third_party/cares/cares/src/lib/ares_parse_ns_reply.c',
     'third_party/cares/cares/src/lib/ares_parse_ptr_reply.c',
     'third_party/cares/cares/src/lib/ares_parse_soa_reply.c',
     'third_party/cares/cares/src/lib/ares_parse_srv_reply.c',
     'third_party/cares/cares/src/lib/ares_parse_txt_reply.c',
     'third_party/cares/cares/src/lib/ares_platform.c',
     'third_party/cares/cares/src/lib/ares_process.c',
     'third_party/cares/cares/src/lib/ares_query.c',
     'third_party/cares/cares/src/lib/ares_search.c',
     'third_party/cares/cares/src/lib/ares_send.c',
     'third_party/cares/cares/src/lib/ares_strcasecmp.c',
     'third_party/cares/cares/src/lib/ares_strdup.c',
     'third_party/cares/cares/src/lib/ares_strerror.c',
     'third_party/cares/cares/src/lib/ares_strsplit.c',
     'third_party/cares/cares/src/lib/ares_timeout.c',
     'third_party/cares/cares/src/lib/ares_version.c',
     'third_party/cares/cares/src/lib/ares_writev.c',
     'third_party/cares/cares/src/lib/bitncmp.c',
     'third_party/cares/cares/src/lib/inet_net_pton.c',
     'third_party/cares/cares/src/lib/inet_ntop.c',
     'third_party/cares/cares/src/lib/windows_port.c',
     'third_party/re2/re2/bitstate.cc',
     'third_party/re2/re2/compile.cc',
     'third_party/re2/re2/dfa.cc',
     'third_party/re2/re2/filtered_re2.cc',
     'third_party/re2/re2/mimics_pcre.cc',
     'third_party/re2/re2/nfa.cc',
     'third_party/re2/re2/onepass.cc',
     'third_party/re2/re2/parse.cc',
     'third_party/re2/re2/perl_groups.cc',
     'third_party/re2/re2/prefilter.cc',
     'third_party/re2/re2/prefilter_tree.cc',
     'third_party/re2/re2/prog.cc',
     'third_party/re2/re2/re2.cc',
     'third_party/re2/re2/regexp.cc',
     'third_party/re2/re2/set.cc',
     'third_party/re2/re2/simplify.cc',
     'third_party/re2/re2/stringpiece.cc',
     'third_party/re2/re2/tostring.cc',
     'third_party/re2/re2/unicode_casefold.cc',
     'third_party/re2/re2/unicode_groups.cc',
     'third_party/re2/util/pcre.cc',
     'third_party/re2/util/rune.cc',
     'third_party/re2/util/strutil.cc',
     'third_party/upb/third_party/utf8_range/naive.c',
     'third_party/upb/third_party/utf8_range/range2-neon.c',
     'third_party/upb/third_party/utf8_range/range2-sse.c',
     'third_party/upb/upb/decode.c',
     'third_party/upb/upb/decode_fast.c',
     'third_party/upb/upb/def.c',
     'third_party/upb/upb/encode.c',
     'third_party/upb/upb/json_encode.c',
     'third_party/upb/upb/msg.c',
     'third_party/upb/upb/reflection.c',
     'third_party/upb/upb/table.c',
     'third_party/upb/upb/text_encode.c',
     'third_party/upb/upb/upb.c',
     'third_party/zlib/adler32.c',
     'third_party/zlib/compress.c',
     'third_party/zlib/crc32.c',
     'third_party/zlib/deflate.c',
     'third_party/zlib/gzclose.c',
     'third_party/zlib/gzlib.c',
     'third_party/zlib/gzread.c',
     'third_party/zlib/gzwrite.c',
     'third_party/zlib/infback.c',
     'third_party/zlib/inffast.c',
     'third_party/zlib/inflate.c',
     'third_party/zlib/inftrees.c',
     'third_party/zlib/trees.c',
     'third_party/zlib/uncompr.c',
     'third_party/zlib/zutil.c',
 ]
diff --git a/src/python/grpcio_tests/tests/unit/_compression_test.py b/src/python/grpcio_tests/tests/unit/_compression_test.py
index 30a5d6bf68..d58f4dc06b 100644
--- a/src/python/grpcio_tests/tests/unit/_compression_test.py
+++ b/src/python/grpcio_tests/tests/unit/_compression_test.py
@@ -198,17 +198,26 @@ def _get_byte_counts(channel_kwargs, multicallable_kwargs, client_function,
 def _get_compression_ratios(client_function, first_channel_kwargs,
                             first_multicallable_kwargs, first_server_kwargs,
                             first_server_handler, second_channel_kwargs,
                             second_multicallable_kwargs, second_server_kwargs,
                             second_server_handler, message):
-    first_bytes_sent, first_bytes_received = _get_byte_counts(
-        first_channel_kwargs, first_multicallable_kwargs, client_function,
-        first_server_kwargs, first_server_handler, message)
-    second_bytes_sent, second_bytes_received = _get_byte_counts(
-        second_channel_kwargs, second_multicallable_kwargs, client_function,
-        second_server_kwargs, second_server_handler, message)
-    return ((second_bytes_sent - first_bytes_sent) / float(first_bytes_sent),
-            (second_bytes_received - first_bytes_received) /
-            float(first_bytes_received))
+    try:
+        # This test requires the byte length of each connection to be deterministic. As
+        # it turns out, flow control puts bytes on the wire in a nondeterministic
+        # manner. We disable it here in order to measure compression ratios
+        # deterministically.
+        os.environ['GRPC_EXPERIMENTAL_DISABLE_FLOW_CONTROL'] = 'true'
+        first_bytes_sent, first_bytes_received = _get_byte_counts(
+            first_channel_kwargs, first_multicallable_kwargs, client_function,
+            first_server_kwargs, first_server_handler, message)
+        second_bytes_sent, second_bytes_received = _get_byte_counts(
+            second_channel_kwargs, second_multicallable_kwargs, client_function,
+            second_server_kwargs, second_server_handler, message)
+        return ((second_bytes_sent - first_bytes_sent) /
+                float(first_bytes_sent),
+                (second_bytes_received - first_bytes_received) /
+                float(first_bytes_received))
+    finally:
+        del os.environ['GRPC_EXPERIMENTAL_DISABLE_FLOW_CONTROL']
 
 
 def _unary_unary_client(channel, multicallable_kwargs, message):
@@ -252,69 +261,78 @@ def _stream_stream_client(channel, multicallable_kwargs, message):
 class CompressionTest(unittest.TestCase):
 
     def assertCompressed(self, compression_ratio):
         self.assertLess(
             compression_ratio,
             -1.0 * _COMPRESSION_RATIO_THRESHOLD,
             msg='Actual compression ratio: {}'.format(compression_ratio))
 
     def assertNotCompressed(self, compression_ratio):
         self.assertGreaterEqual(
             compression_ratio,
             -1.0 * _COMPRESSION_RATIO_THRESHOLD,
             msg='Actual compession ratio: {}'.format(compression_ratio))
 
     def assertConfigurationCompressed(self, client_streaming, server_streaming,
                                       channel_compression,
                                       multicallable_compression,
                                       server_compression,
                                       server_call_compression):
         client_side_compressed = channel_compression or multicallable_compression
         server_side_compressed = server_compression or server_call_compression
         channel_kwargs = {
             'compression': channel_compression,
         } if channel_compression else {}
         multicallable_kwargs = {
             'compression': multicallable_compression,
         } if multicallable_compression else {}
 
         client_function = None
         if not client_streaming and not server_streaming:
             client_function = _unary_unary_client
         elif not client_streaming and server_streaming:
             client_function = _unary_stream_client
         elif client_streaming and not server_streaming:
             client_function = _stream_unary_client
         else:
             client_function = _stream_stream_client
 
         server_kwargs = {
             'compression': server_compression,
         } if server_compression else {}
         server_handler = _GenericHandler(
             functools.partial(set_call_compression, grpc.Compression.Gzip)
         ) if server_call_compression else _GenericHandler(None)
-        _get_compression_ratios(client_function, {}, {}, {},
-                                _GenericHandler(None), channel_kwargs,
-                                multicallable_kwargs, server_kwargs,
-                                server_handler, _REQUEST)
+        sent_ratio, received_ratio = _get_compression_ratios(
+            client_function, {}, {}, {}, _GenericHandler(None), channel_kwargs,
+            multicallable_kwargs, server_kwargs, server_handler, _REQUEST)
+
+        if client_side_compressed:
+            self.assertCompressed(sent_ratio)
+        else:
+            self.assertNotCompressed(sent_ratio)
+
+        if server_side_compressed:
+            self.assertCompressed(received_ratio)
+        else:
+            self.assertNotCompressed(received_ratio)
 
     def testDisableNextCompressionStreaming(self):
         server_kwargs = {
             'compression': grpc.Compression.Deflate,
         }
-        _get_compression_ratios(_stream_stream_client, {}, {}, {},
-                                _GenericHandler(None), {}, {}, server_kwargs,
-                                _GenericHandler(disable_next_compression),
-                                _REQUEST)
+        _, received_ratio = _get_compression_ratios(
+            _stream_stream_client, {}, {}, {}, _GenericHandler(None), {}, {},
+            server_kwargs, _GenericHandler(disable_next_compression), _REQUEST)
+        self.assertNotCompressed(received_ratio)
 
     def testDisableNextCompressionStreamingResets(self):
         server_kwargs = {
             'compression': grpc.Compression.Deflate,
         }
-        _get_compression_ratios(_stream_stream_client, {}, {}, {},
-                                _GenericHandler(None), {}, {}, server_kwargs,
-                                _GenericHandler(disable_first_compression),
-                                _REQUEST)
+        _, received_ratio = _get_compression_ratios(
+            _stream_stream_client, {}, {}, {}, _GenericHandler(None), {}, {},
+            server_kwargs, _GenericHandler(disable_first_compression), _REQUEST)
+        self.assertCompressed(received_ratio)
 
 
 def _get_compression_str(name, value):
diff --git a/test/core/bad_client/tests/duplicate_header.cc b/test/core/bad_client/tests/duplicate_header.cc
index 09c5cfc62d..28c5f310e4 100644
--- a/test/core/bad_client/tests/duplicate_header.cc
+++ b/test/core/bad_client/tests/duplicate_header.cc
@@ -53,69 +53,69 @@ static void* tag(intptr_t t) { return reinterpret_cast<void*>(t); }
 static void verifier(grpc_server* server, grpc_completion_queue* cq,
                      void* /*registered_method*/) {
   grpc_call_error error;
   grpc_call* s;
   grpc_call_details call_details;
   grpc_byte_buffer* request_payload_recv = nullptr;
   grpc_op* op;
   grpc_op ops[6];
   cq_verifier* cqv = cq_verifier_create(cq);
   grpc_metadata_array request_metadata_recv;
   int was_cancelled = 2;
 
   grpc_call_details_init(&call_details);
   grpc_metadata_array_init(&request_metadata_recv);
 
   error = grpc_server_request_call(server, &s, &call_details,
                                    &request_metadata_recv, cq, cq, tag(101));
   GPR_ASSERT(GRPC_CALL_OK == error);
   CQ_EXPECT_COMPLETION(cqv, tag(101), 1);
   cq_verify(cqv);
 
   GPR_ASSERT(0 == grpc_slice_str_cmp(call_details.host, "localhost"));
   GPR_ASSERT(0 == grpc_slice_str_cmp(call_details.method, "/foo/bar"));
 
   memset(ops, 0, sizeof(ops));
   op = ops;
   op->op = GRPC_OP_SEND_INITIAL_METADATA;
   op->data.send_initial_metadata.count = 0;
   op->flags = 0;
   op->reserved = nullptr;
   op++;
   op->op = GRPC_OP_RECV_MESSAGE;
   op->data.recv_message.recv_message = &request_payload_recv;
   op->flags = 0;
   op->reserved = nullptr;
   op++;
   error = grpc_call_start_batch(s, ops, static_cast<size_t>(op - ops), tag(102),
                                 nullptr);
   GPR_ASSERT(GRPC_CALL_OK == error);
 
-  CQ_EXPECT_COMPLETION_ANY_STATUS(cqv, tag(102));
+  CQ_EXPECT_COMPLETION(cqv, tag(102), 1);
   cq_verify(cqv);
 
   memset(ops, 0, sizeof(ops));
   op = ops;
   op->op = GRPC_OP_RECV_CLOSE_ON_SERVER;
   op->data.recv_close_on_server.cancelled = &was_cancelled;
   op->flags = 0;
   op->reserved = nullptr;
   op++;
   op->op = GRPC_OP_SEND_STATUS_FROM_SERVER;
   op->data.send_status_from_server.trailing_metadata_count = 0;
   op->data.send_status_from_server.status = GRPC_STATUS_UNIMPLEMENTED;
   grpc_slice status_details = grpc_slice_from_static_string("xyz");
   op->data.send_status_from_server.status_details = &status_details;
   op->flags = 0;
   op->reserved = nullptr;
   op++;
   error = grpc_call_start_batch(s, ops, static_cast<size_t>(op - ops), tag(103),
                                 nullptr);
   GPR_ASSERT(GRPC_CALL_OK == error);
 
   CQ_EXPECT_COMPLETION(cqv, tag(103), 1);
 
   grpc_metadata_array_destroy(&request_metadata_recv);
   grpc_call_details_destroy(&call_details);
   grpc_call_unref(s);
   cq_verifier_destroy(cqv);
 }
diff --git a/test/core/end2end/fixtures/h2_full_no_retry.cc b/test/core/end2end/fixtures/h2_full_no_retry.cc
deleted file mode 100644
index d69f502f27..0000000000
--- a/test/core/end2end/fixtures/h2_full_no_retry.cc
+++ /dev/null
@@ -1,118 +0,0 @@
-/*
- *
- * Copyright 2015 gRPC authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-#include <string.h>
-
-#include <grpc/grpc_security.h>
-#include <grpc/support/alloc.h>
-#include <grpc/support/log.h>
-#include <grpc/support/sync.h>
-
-#include "src/core/ext/filters/client_channel/client_channel.h"
-#include "src/core/ext/filters/http/server/http_server_filter.h"
-#include "src/core/ext/transport/chttp2/transport/chttp2_transport.h"
-#include "src/core/lib/channel/connected_channel.h"
-#include "src/core/lib/gprpp/host_port.h"
-#include "src/core/lib/surface/channel.h"
-#include "src/core/lib/surface/server.h"
-#include "test/core/end2end/end2end_tests.h"
-#include "test/core/util/port.h"
-#include "test/core/util/test_config.h"
-
-struct fullstack_fixture_data {
-  std::string localaddr;
-};
-
-static grpc_end2end_test_fixture chttp2_create_fixture_fullstack(
-    const grpc_channel_args* /*client_args*/,
-    const grpc_channel_args* /*server_args*/) {
-  grpc_end2end_test_fixture f;
-  int port = grpc_pick_unused_port_or_die();
-  fullstack_fixture_data* ffd = new fullstack_fixture_data();
-  memset(&f, 0, sizeof(f));
-
-  ffd->localaddr = grpc_core::JoinHostPort("localhost", port);
-
-  f.fixture_data = ffd;
-  f.cq = grpc_completion_queue_create_for_next(nullptr);
-
-  return f;
-}
-
-void chttp2_init_client_fullstack(grpc_end2end_test_fixture* f,
-                                  const grpc_channel_args* client_args) {
-  fullstack_fixture_data* ffd =
-      static_cast<fullstack_fixture_data*>(f->fixture_data);
-  grpc_channel_credentials* creds = grpc_insecure_credentials_create();
-  grpc_arg no_retry = grpc_channel_arg_integer_create(
-      const_cast<char*>(GRPC_ARG_ENABLE_RETRIES), 0);
-  client_args = grpc_channel_args_copy_and_add(client_args, &no_retry, 1);
-  f->client = grpc_channel_create(ffd->localaddr.c_str(), creds, client_args);
-  grpc_channel_args_destroy(client_args);
-  grpc_channel_credentials_release(creds);
-  GPR_ASSERT(f->client);
-}
-
-void chttp2_init_server_fullstack(grpc_end2end_test_fixture* f,
-                                  const grpc_channel_args* server_args) {
-  fullstack_fixture_data* ffd =
-      static_cast<fullstack_fixture_data*>(f->fixture_data);
-  if (f->server) {
-    grpc_server_destroy(f->server);
-  }
-  f->server = grpc_server_create(server_args, nullptr);
-  grpc_server_register_completion_queue(f->server, f->cq, nullptr);
-  grpc_server_credentials* server_creds =
-      grpc_insecure_server_credentials_create();
-  GPR_ASSERT(grpc_server_add_http2_port(f->server, ffd->localaddr.c_str(),
-                                        server_creds));
-  grpc_server_credentials_release(server_creds);
-  grpc_server_start(f->server);
-}
-
-void chttp2_tear_down_fullstack(grpc_end2end_test_fixture* f) {
-  fullstack_fixture_data* ffd =
-      static_cast<fullstack_fixture_data*>(f->fixture_data);
-  delete ffd;
-}
-
-/* All test configurations */
-static grpc_end2end_test_config configs[] = {
-    {"chttp2/fullstack",
-     FEATURE_MASK_SUPPORTS_DELAYED_CONNECTION |
-         FEATURE_MASK_SUPPORTS_CLIENT_CHANNEL |
-         FEATURE_MASK_SUPPORTS_AUTHORITY_HEADER,
-     nullptr, chttp2_create_fixture_fullstack, chttp2_init_client_fullstack,
-     chttp2_init_server_fullstack, chttp2_tear_down_fullstack},
-};
-
-int main(int argc, char** argv) {
-  size_t i;
-
-  grpc::testing::TestEnvironment env(&argc, argv);
-  grpc_end2end_tests_pre_init();
-  grpc_init();
-
-  for (i = 0; i < sizeof(configs) / sizeof(*configs); i++) {
-    grpc_end2end_tests(argc, argv, configs[i]);
-  }
-
-  grpc_shutdown();
-
-  return 0;
-}
diff --git a/test/core/end2end/generate_tests.bzl b/test/core/end2end/generate_tests.bzl
index a50d22cce8..e585de0aff 100755
--- a/test/core/end2end/generate_tests.bzl
+++ b/test/core/end2end/generate_tests.bzl
@@ -24,125 +24,120 @@ load(
 def _fixture_options(
         fullstack = True,
         includes_proxy = False,
         dns_resolver = True,
         name_resolution = True,
         secure = True,
         tracing = False,
         _platforms = ["windows", "linux", "mac", "posix"],
         is_inproc = False,
         is_1byte = False,
         is_http2 = True,
         supports_proxy_auth = False,
         supports_write_buffering = True,
         client_channel = True,
         supports_msvc = True,
-        supports_retry = None,
         flaky_tests = [],
         tags = []):
-    if supports_retry == None:
-        supports_retry = client_channel
     return struct(
         fullstack = fullstack,
         includes_proxy = includes_proxy,
         dns_resolver = dns_resolver,
         name_resolution = name_resolution,
         secure = secure,
         tracing = tracing,
         is_inproc = is_inproc,
         is_1byte = is_1byte,
         is_http2 = is_http2,
         supports_proxy_auth = supports_proxy_auth,
         supports_write_buffering = supports_write_buffering,
         client_channel = client_channel,
         supports_msvc = supports_msvc,
         _platforms = _platforms,
         flaky_tests = flaky_tests,
-        supports_retry = supports_retry,
         tags = tags,
     )
 
 # maps fixture name to whether it requires the security library
 END2END_FIXTURES = {
     "h2_compress": _fixture_options(),
     "h2_census": _fixture_options(),
     # TODO(juanlishen): This is disabled for now, but should be considered to re-enable once we have
     # decided how the load reporting service should be enabled.
     #'h2_load_reporting': _fixture_options(),
     "h2_fakesec": _fixture_options(),
     "h2_fd": _fixture_options(
         dns_resolver = False,
         fullstack = False,
         client_channel = False,
         _platforms = ["linux", "mac", "posix"],
         tags = ["no_test_ios"],
     ),
     "h2_full": _fixture_options(),
-    "h2_full_no_retry": _fixture_options(supports_retry = False),
     "h2_full+pipe": _fixture_options(_platforms = ["linux"]),
     "h2_full+trace": _fixture_options(tracing = True),
     "h2_http_proxy": _fixture_options(supports_proxy_auth = True),
     "h2_insecure": _fixture_options(secure = True),
     "h2_oauth2": _fixture_options(),
     "h2_proxy": _fixture_options(includes_proxy = True),
     "h2_sockpair_1byte": _fixture_options(
         fullstack = False,
         dns_resolver = False,
         client_channel = False,
         is_1byte = True,
     ),
     "h2_sockpair": _fixture_options(
         fullstack = False,
         dns_resolver = False,
         client_channel = False,
     ),
     "h2_sockpair+trace": _fixture_options(
         fullstack = False,
         dns_resolver = False,
         tracing = True,
         client_channel = False,
     ),
     "h2_ssl": _fixture_options(secure = True),
     "h2_ssl_cred_reload": _fixture_options(secure = True),
     "h2_tls": _fixture_options(secure = True),
     "h2_local_abstract_uds_percent_encoded": _fixture_options(
         secure = True,
         dns_resolver = False,
         _platforms = ["linux", "posix"],
     ),
     "h2_local_uds": _fixture_options(
         secure = True,
         dns_resolver = False,
         _platforms = ["linux", "mac", "posix"],
     ),
     "h2_local_uds_percent_encoded": _fixture_options(
         secure = True,
         dns_resolver = False,
         _platforms = ["linux", "mac", "posix"],
     ),
     "h2_local_ipv4": _fixture_options(
         secure = True,
         dns_resolver = False,
         _platforms = ["linux", "mac", "posix"],
         tags = ["requires-net:ipv4", "requires-net:loopback"],
     ),
     "h2_local_ipv6": _fixture_options(
         secure = True,
         dns_resolver = False,
         _platforms = ["linux", "mac", "posix"],
     ),
     "h2_ssl_proxy": _fixture_options(includes_proxy = True, secure = True),
     "h2_uds": _fixture_options(
         dns_resolver = False,
         _platforms = ["linux", "mac", "posix"],
     ),
     "inproc": _fixture_options(
         secure = True,
         fullstack = False,
         dns_resolver = False,
         name_resolution = False,
         is_inproc = True,
         is_http2 = False,
         supports_write_buffering = False,
         client_channel = False,
     ),
 }
@@ -150,208 +145,198 @@ END2END_FIXTURES = {
 def _test_options(
         needs_fullstack = False,
         needs_dns = False,
         needs_names = False,
         proxyable = True,
         secure = False,
         traceable = False,
         exclude_inproc = False,
         exclude_1byte = False,
         needs_http2 = False,
         needs_proxy_auth = False,
         needs_write_buffering = False,
         needs_client_channel = False,
-        needs_retry = False,
         short_name = None,
         exclude_pollers = []):
     return struct(
         needs_fullstack = needs_fullstack,
         needs_dns = needs_dns,
         needs_names = needs_names,
         proxyable = proxyable,
         secure = secure,
         traceable = traceable,
         exclude_inproc = exclude_inproc,
         exclude_1byte = exclude_1byte,
         needs_http2 = needs_http2,
         needs_proxy_auth = needs_proxy_auth,
         needs_write_buffering = needs_write_buffering,
         needs_client_channel = needs_client_channel,
-        needs_retry = needs_retry,
         short_name = short_name,
         exclude_pollers = exclude_pollers,
     )
 
 # maps test names to options
 END2END_TESTS = {
     "bad_hostname": _test_options(needs_names = True),
     "bad_ping": _test_options(needs_fullstack = True, proxyable = False),
     "binary_metadata": _test_options(),
     "resource_quota_server": _test_options(
         proxyable = False,
         # TODO(b/151212019): Test case known to be flaky under epoll1.
         exclude_pollers = ["epoll1"],
         exclude_1byte = True,
     ),
     "call_creds": _test_options(secure = True),
     "call_host_override": _test_options(
         needs_fullstack = True,
         needs_dns = True,
         needs_names = True,
     ),
     "cancel_after_accept": _test_options(),
     "cancel_after_client_done": _test_options(),
     "cancel_after_invoke": _test_options(),
     "cancel_after_round_trip": _test_options(),
     "cancel_before_invoke": _test_options(),
     "cancel_in_a_vacuum": _test_options(),
     "cancel_with_status": _test_options(),
     "client_streaming": _test_options(),
     "compressed_payload": _test_options(proxyable = False, exclude_inproc = True),
     "connectivity": _test_options(
         needs_fullstack = True,
         needs_names = True,
         proxyable = False,
     ),
     "channelz": _test_options(),
     "default_host": _test_options(
         needs_fullstack = True,
         needs_dns = True,
         needs_names = True,
     ),
     "disappearing_server": _test_options(needs_fullstack = True, needs_names = True),
     "empty_batch": _test_options(),
     "filter_causes_close": _test_options(),
     "filter_init_fails": _test_options(),
     "filter_context": _test_options(),
     "filtered_metadata": _test_options(),
     "graceful_server_shutdown": _test_options(exclude_inproc = True),
     "grpc_authz": _test_options(secure = True),
     "hpack_size": _test_options(
         proxyable = False,
         traceable = False,
         exclude_inproc = True,
     ),
     "high_initial_seqno": _test_options(),
     "invoke_large_request": _test_options(exclude_1byte = True),
     "keepalive_timeout": _test_options(proxyable = False, needs_http2 = True),
     "large_metadata": _test_options(exclude_1byte = True),
     "max_concurrent_streams": _test_options(
         proxyable = False,
         exclude_inproc = True,
     ),
     "max_connection_age": _test_options(exclude_inproc = True),
     "max_connection_idle": _test_options(needs_fullstack = True, proxyable = False),
     "max_message_length": _test_options(),
     "negative_deadline": _test_options(),
     "no_error_on_hotpath": _test_options(proxyable = False),
     "no_logging": _test_options(traceable = False),
     "no_op": _test_options(),
     "payload": _test_options(exclude_1byte = True),
     # TODO(juanlishen): This is disabled for now because it depends on some generated functions in
     # end2end_tests.cc, which are not generated because they would depend on OpenCensus while
     # OpenCensus can only be built via Bazel so far.
     # 'load_reporting_hook': _test_options(),
     "ping_pong_streaming": _test_options(),
     "ping": _test_options(needs_fullstack = True, proxyable = False),
     "proxy_auth": _test_options(needs_proxy_auth = True),
     "registered_call": _test_options(),
     "request_with_flags": _test_options(proxyable = False),
     "request_with_payload": _test_options(),
-    "retry": _test_options(needs_client_channel = True, needs_retry = True),
-    "retry_cancellation": _test_options(needs_client_channel = True, needs_retry = True),
-    "retry_cancel_during_delay": _test_options(needs_client_channel = True, needs_retry = True),
+    "retry": _test_options(needs_client_channel = True),
+    "retry_cancellation": _test_options(needs_client_channel = True),
+    "retry_cancel_during_delay": _test_options(needs_client_channel = True),
     "retry_cancel_with_multiple_send_batches": _test_options(
         # TODO(jtattermusch): too long bazel test name makes the test flaky on Windows RBE
         # See b/151617965
         short_name = "retry_cancel3",
         needs_client_channel = True,
-        needs_retry = True,
     ),
     "retry_cancel_after_first_attempt_starts": _test_options(
         # TODO(jtattermusch): too long bazel test name makes the test flaky on Windows RBE
         # See b/151617965
         short_name = "retry_cancel4",
         needs_client_channel = True,
-        needs_retry = True,
     ),
-    "retry_disabled": _test_options(needs_client_channel = True, needs_retry = True),
-    "retry_exceeds_buffer_size_in_delay": _test_options(needs_client_channel = True, needs_retry = True),
+    "retry_disabled": _test_options(needs_client_channel = True),
+    "retry_exceeds_buffer_size_in_delay": _test_options(needs_client_channel = True),
     "retry_exceeds_buffer_size_in_initial_batch": _test_options(
         needs_client_channel = True,
         # TODO(jtattermusch): too long bazel test name makes the test flaky on Windows RBE
         # See b/151617965
         short_name = "retry_exceeds_buffer_size_in_init",
-        needs_retry = True,
     ),
     "retry_exceeds_buffer_size_in_subsequent_batch": _test_options(
         needs_client_channel = True,
         # TODO(jtattermusch): too long bazel test name makes the test flaky on Windows RBE
         # See b/151617965
         short_name = "retry_exceeds_buffer_size_in_subseq",
-        needs_retry = True,
     ),
-    "retry_lb_drop": _test_options(needs_client_channel = True, needs_retry = True),
-    "retry_lb_fail": _test_options(needs_client_channel = True, needs_retry = True),
-    "retry_non_retriable_status": _test_options(needs_client_channel = True, needs_retry = True),
+    "retry_lb_drop": _test_options(needs_client_channel = True),
+    "retry_lb_fail": _test_options(needs_client_channel = True),
+    "retry_non_retriable_status": _test_options(needs_client_channel = True),
     "retry_non_retriable_status_before_recv_trailing_metadata_started": _test_options(
         needs_client_channel = True,
         # TODO(jtattermusch): too long bazel test name makes the test flaky on Windows RBE
         # See b/151617965
         short_name = "retry_non_retriable_status2",
-        needs_retry = True,
     ),
-    "retry_per_attempt_recv_timeout": _test_options(needs_client_channel = True, needs_retry = True),
+    "retry_per_attempt_recv_timeout": _test_options(needs_client_channel = True),
     "retry_per_attempt_recv_timeout_on_last_attempt": _test_options(
         needs_client_channel = True,
         # TODO(jtattermusch): too long bazel test name makes the test flaky on Windows RBE
         # See b/151617965
         short_name = "retry_per_attempt_recv_timeout2",
-        needs_retry = True,
     ),
-    "retry_recv_initial_metadata": _test_options(needs_client_channel = True, needs_retry = True),
-    "retry_recv_message": _test_options(needs_client_channel = True, needs_retry = True),
-    "retry_recv_message_replay": _test_options(needs_client_channel = True, needs_retry = True),
-    "retry_recv_trailing_metadata_error": _test_options(needs_client_channel = True, needs_retry = True),
-    "retry_send_initial_metadata_refs": _test_options(needs_client_channel = True, needs_retry = True),
-    "retry_send_op_fails": _test_options(needs_client_channel = True, needs_retry = True),
-    "retry_send_recv_batch": _test_options(needs_client_channel = True, needs_retry = True),
-    "retry_server_pushback_delay": _test_options(needs_client_channel = True, needs_retry = True),
-    "retry_server_pushback_disabled": _test_options(needs_client_channel = True, needs_retry = True),
-    "retry_streaming": _test_options(needs_client_channel = True, needs_retry = True),
-    "retry_streaming_after_commit": _test_options(needs_client_channel = True, needs_retry = True),
+    "retry_recv_initial_metadata": _test_options(needs_client_channel = True),
+    "retry_recv_message": _test_options(needs_client_channel = True),
+    "retry_recv_message_replay": _test_options(needs_client_channel = True),
+    "retry_recv_trailing_metadata_error": _test_options(needs_client_channel = True),
+    "retry_send_initial_metadata_refs": _test_options(needs_client_channel = True),
+    "retry_send_op_fails": _test_options(needs_client_channel = True),
+    "retry_send_recv_batch": _test_options(needs_client_channel = True),
+    "retry_server_pushback_delay": _test_options(needs_client_channel = True),
+    "retry_server_pushback_disabled": _test_options(needs_client_channel = True),
+    "retry_streaming": _test_options(needs_client_channel = True),
+    "retry_streaming_after_commit": _test_options(needs_client_channel = True),
     "retry_streaming_succeeds_before_replay_finished": _test_options(
         needs_client_channel = True,
         # TODO(jtattermusch): too long bazel test name makes the test flaky on Windows RBE
         # See b/151617965
         short_name = "retry_streaming2",
-        needs_retry = True,
     ),
-    "retry_throttled": _test_options(needs_client_channel = True, needs_retry = True),
-    "retry_too_many_attempts": _test_options(needs_client_channel = True, needs_retry = True),
-    "retry_transparent_goaway": _test_options(needs_client_channel = True, needs_retry = True),
-    "retry_transparent_not_sent_on_wire": _test_options(needs_client_channel = True, needs_retry = True),
+    "retry_throttled": _test_options(needs_client_channel = True),
+    "retry_too_many_attempts": _test_options(needs_client_channel = True),
+    "retry_transparent_goaway": _test_options(needs_client_channel = True),
+    "retry_transparent_not_sent_on_wire": _test_options(needs_client_channel = True),
     "retry_transparent_max_concurrent_streams": _test_options(
         needs_client_channel = True,
         proxyable = False,
         # TODO(jtattermusch): too long bazel test name makes the test flaky on Windows RBE
         # See b/151617965
         short_name = "retry_transparent_mcs",
-        needs_retry = True,
     ),
-    "retry_unref_before_finish": _test_options(needs_client_channel = True, needs_retry = True),
-    "retry_unref_before_recv": _test_options(needs_client_channel = True, needs_retry = True),
+    "retry_unref_before_finish": _test_options(needs_client_channel = True),
+    "retry_unref_before_recv": _test_options(needs_client_channel = True),
     "server_finishes_request": _test_options(),
     "server_streaming": _test_options(needs_http2 = True),
     "shutdown_finishes_calls": _test_options(),
     "shutdown_finishes_tags": _test_options(),
     "simple_delayed_request": _test_options(needs_fullstack = True),
     "simple_metadata": _test_options(),
     "simple_request": _test_options(),
     "streaming_error_response": _test_options(),
     "trailing_metadata": _test_options(),
     "authority_not_supported": _test_options(),
     "filter_latency": _test_options(),
     "filter_status_code": _test_options(),
     "write_buffering": _test_options(needs_write_buffering = True),
     "write_buffering_at_end": _test_options(needs_write_buffering = True),
 }
@@ -359,40 +344,37 @@ END2END_TESTS = {
 def _compatible(fopt, topt):
     if topt.needs_fullstack:
         if not fopt.fullstack:
             return False
     if topt.needs_dns:
         if not fopt.dns_resolver:
             return False
     if topt.needs_names:
         if not fopt.name_resolution:
             return False
     if not topt.proxyable:
         if fopt.includes_proxy:
             return False
     if not topt.traceable:
         if fopt.tracing:
             return False
     if topt.exclude_inproc:
         if fopt.is_inproc:
             return False
     if topt.exclude_1byte:
         if fopt.is_1byte:
             return False
     if topt.needs_http2:
         if not fopt.is_http2:
             return False
     if topt.needs_proxy_auth:
         if not fopt.supports_proxy_auth:
             return False
     if topt.needs_write_buffering:
         if not fopt.supports_write_buffering:
             return False
     if topt.needs_client_channel:
         if not fopt.client_channel:
             return False
-    if topt.needs_retry:
-        if not fopt.supports_retry:
-            return False
     return True
 
 def _platform_support_tags(fopt):
diff --git a/test/core/end2end/tests/request_with_flags.cc b/test/core/end2end/tests/request_with_flags.cc
index b277036dff..59e137aeca 100644
--- a/test/core/end2end/tests/request_with_flags.cc
+++ b/test/core/end2end/tests/request_with_flags.cc
@@ -1,31 +1,31 @@
 /*
  *
  * Copyright 2015 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #include <stdio.h>
 #include <string.h>
 
 #include <grpc/byte_buffer.h>
 #include <grpc/support/alloc.h>
 #include <grpc/support/log.h>
 #include <grpc/support/time.h>
 
 #include "src/core/lib/gpr/useful.h"
-#include "src/core/lib/transport/transport.h"
+#include "src/core/lib/transport/byte_stream.h"
 #include "test/core/end2end/cq_verifier.h"
 #include "test/core/end2end/end2end_tests.h"
 
diff --git a/test/core/gprpp/BUILD b/test/core/gprpp/BUILD
index b5f48b9887..b61ac9f6e9 100644
--- a/test/core/gprpp/BUILD
+++ b/test/core/gprpp/BUILD
@@ -84,6 +84,18 @@ grpc_cc_test(
     ],
 )
 
+grpc_cc_test(
+    name = "manual_constructor_test",
+    srcs = ["manual_constructor_test.cc"],
+    language = "C++",
+    uses_event_engine = False,
+    uses_polling = False,
+    deps = [
+        "//:gpr",
+        "//test/core/util:grpc_test_util",
+    ],
+)
+
 grpc_cc_test(
     name = "bitset_test",
     srcs = ["bitset_test.cc"],
diff --git a/test/core/gprpp/manual_constructor_test.cc b/test/core/gprpp/manual_constructor_test.cc
new file mode 100644
index 0000000000..b5e5873bf3
--- /dev/null
+++ b/test/core/gprpp/manual_constructor_test.cc
@@ -0,0 +1,100 @@
+/*
+ *
+ * Copyright 2017 gRPC authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ */
+
+/* Test of gpr synchronization support. */
+
+#include "src/core/lib/gprpp/manual_constructor.h"
+
+#include <stdio.h>
+#include <stdlib.h>
+
+#include <cstring>
+
+#include <grpc/support/alloc.h>
+#include <grpc/support/log.h>
+#include <grpc/support/sync.h>
+
+#include "test/core/util/test_config.h"
+
+class A {
+ public:
+  A() {}
+  virtual ~A() {}
+  virtual const char* foo() { return "A_foo"; }
+  virtual const char* bar() { return "A_bar"; }
+};
+
+class B : public A {
+ public:
+  B() {}
+  ~B() override {}
+  const char* foo() override { return "B_foo"; }
+  char get_junk() { return junk[0]; }
+
+ private:
+  char junk[1000];
+};
+
+class C : public B {
+ public:
+  C() {}
+  ~C() override {}
+  const char* bar() override { return "C_bar"; }
+  char get_more_junk() { return more_junk[0]; }
+
+ private:
+  char more_junk[1000];
+};
+
+class D : public A {
+ public:
+  const char* bar() override { return "D_bar"; }
+};
+
+static void basic_test() {
+  grpc_core::PolymorphicManualConstructor<A, B> poly;
+  poly.Init<B>();
+  GPR_ASSERT(!strcmp(poly->foo(), "B_foo"));
+  GPR_ASSERT(!strcmp(poly->bar(), "A_bar"));
+}
+
+static void complex_test() {
+  grpc_core::PolymorphicManualConstructor<A, B, C, D> polyB;
+  polyB.Init<B>();
+  GPR_ASSERT(!strcmp(polyB->foo(), "B_foo"));
+  GPR_ASSERT(!strcmp(polyB->bar(), "A_bar"));
+
+  grpc_core::PolymorphicManualConstructor<A, B, C, D> polyC;
+  polyC.Init<C>();
+  GPR_ASSERT(!strcmp(polyC->foo(), "B_foo"));
+  GPR_ASSERT(!strcmp(polyC->bar(), "C_bar"));
+
+  grpc_core::PolymorphicManualConstructor<A, B, C, D> polyD;
+  polyD.Init<D>();
+  GPR_ASSERT(!strcmp(polyD->foo(), "A_foo"));
+  GPR_ASSERT(!strcmp(polyD->bar(), "D_bar"));
+}
+
+/* ------------------------------------------------- */
+
+int main(int argc, char* argv[]) {
+  grpc::testing::TestEnvironment env(&argc, argv);
+  basic_test();
+  complex_test();
+  return 0;
+}
diff --git a/test/core/transport/BUILD b/test/core/transport/BUILD
index 9426423797..4909a1ec4e 100644
--- a/test/core/transport/BUILD
+++ b/test/core/transport/BUILD
@@ -35,6 +35,22 @@ grpc_cc_test(
     ],
 )
 
+grpc_cc_test(
+    name = "byte_stream_test",
+    srcs = ["byte_stream_test.cc"],
+    external_deps = [
+        "gtest",
+    ],
+    language = "C++",
+    uses_event_engine = False,
+    uses_polling = False,
+    deps = [
+        "//:gpr",
+        "//:grpc",
+        "//test/core/util:grpc_test_util",
+    ],
+)
+
 grpc_cc_test(
     name = "connectivity_state_test",
     srcs = ["connectivity_state_test.cc"],
diff --git a/test/core/transport/binder/binder_transport_test.cc b/test/core/transport/binder/binder_transport_test.cc
index fabbc15576..b61f55c9d7 100644
--- a/test/core/transport/binder/binder_transport_test.cc
+++ b/test/core/transport/binder/binder_transport_test.cc
@@ -242,13 +242,19 @@ struct MakeSendInitialMetadata {
 struct MakeSendMessage {
   MakeSendMessage(const std::string& message,
                   grpc_transport_stream_op_batch* op) {
-    send_stream.Append(grpc_core::Slice::FromCopiedString(message));
+    grpc_slice_buffer send_buffer;
+    grpc_slice_buffer_init(&send_buffer);
+    grpc_slice send_slice = grpc_slice_from_cpp_string(message);
+    grpc_slice_buffer_add(&send_buffer, send_slice);
+
+    send_stream.Init(&send_buffer, 0);
+    grpc_slice_buffer_destroy(&send_buffer);
 
     op->send_message = true;
-    op->payload->send_message.send_message = &send_stream;
+    op->payload->send_message.send_message.reset(send_stream.get());
   }
 
-  grpc_core::SliceBuffer send_stream;
+  grpc_core::ManualConstructor<grpc_core::SliceBufferByteStream> send_stream;
 };
 
 struct MakeSendTrailingMetadata {
@@ -294,20 +300,20 @@ struct MakeRecvInitialMetadata {
 struct MakeRecvMessage {
   explicit MakeRecvMessage(grpc_transport_stream_op_batch* op,
                            Expectation* call_before = nullptr)
       : ready(&notification) {
     op->recv_message = true;
     op->payload->recv_message.recv_message = &grpc_message;
     op->payload->recv_message.recv_message_ready = ready.GetGrpcClosure();
     if (call_before) {
       EXPECT_CALL(ready, Callback).After(*call_before);
     } else {
       EXPECT_CALL(ready, Callback);
     }
   }
 
   MockGrpcClosure ready;
   absl::Notification notification;
-  absl::optional<grpc_core::SliceBuffer> grpc_message;
+  grpc_core::OrphanablePtr<grpc_core::ByteStream> grpc_message;
 };
 
 struct MakeRecvTrailingMetadata {
@@ -545,21 +551,27 @@ TEST_F(BinderTransportTest, PerformRecvInitialMetadataWithMethodRef) {
 TEST_F(BinderTransportTest, PerformRecvMessage) {
   grpc_core::ExecCtx exec_ctx;
   grpc_binder_stream* gbs = InitNewBinderStream();
   grpc_transport_stream_op_batch op{};
   grpc_transport_stream_op_batch_payload payload(nullptr);
   op.payload = &payload;
 
   MakeRecvMessage recv_message(&op);
 
   auto* gbt = reinterpret_cast<grpc_binder_transport*>(transport_);
   const std::string kMessage = kDefaultMessage;
   gbt->transport_stream_receiver->NotifyRecvMessage(gbs->tx_code, kMessage);
 
   PerformStreamOp(gbs, &op);
   grpc_core::ExecCtx::Get()->Flush();
   recv_message.notification.WaitForNotification();
 
-  EXPECT_EQ(kMessage, recv_message.grpc_message->JoinIntoString());
+  EXPECT_TRUE(recv_message.grpc_message->Next(SIZE_MAX, nullptr));
+  grpc_slice slice;
+  EXPECT_EQ(recv_message.grpc_message->Pull(&slice), GRPC_ERROR_NONE);
+  EXPECT_EQ(kMessage,
+            std::string(reinterpret_cast<char*>(GRPC_SLICE_START_PTR(slice)),
+                        GRPC_SLICE_LENGTH(slice)));
+  grpc_slice_unref_internal(slice);
 }
 
 TEST_F(BinderTransportTest, PerformRecvTrailingMetadata) {
@@ -587,108 +599,120 @@ TEST_F(BinderTransportTest, PerformRecvTrailingMetadata) {
 TEST_F(BinderTransportTest, PerformRecvAll) {
   grpc_core::ExecCtx exec_ctx;
   grpc_binder_stream* gbs = InitNewBinderStream();
   grpc_transport_stream_op_batch op{};
   grpc_transport_stream_op_batch_payload payload(nullptr);
   op.payload = &payload;
 
   MakeRecvInitialMetadata recv_initial_metadata(&op);
   MakeRecvMessage recv_message(&op);
   MakeRecvTrailingMetadata recv_trailing_metadata(&op);
 
   auto* gbt = reinterpret_cast<grpc_binder_transport*>(transport_);
   const Metadata kInitialMetadataWithMethodRef =
       AppendMethodRef(kDefaultMetadata, kDefaultMethodRef);
   gbt->transport_stream_receiver->NotifyRecvInitialMetadata(
       gbs->tx_code, kInitialMetadataWithMethodRef);
 
   const std::string kMessage = kDefaultMessage;
   gbt->transport_stream_receiver->NotifyRecvMessage(gbs->tx_code, kMessage);
 
   Metadata trailing_metadata = kDefaultMetadata;
   constexpr int kStatus = kDefaultStatus;
   gbt->transport_stream_receiver->NotifyRecvTrailingMetadata(
       gbs->tx_code, trailing_metadata, kStatus);
   PerformStreamOp(gbs, &op);
   grpc_core::ExecCtx::Get()->Flush();
   recv_trailing_metadata.notification.WaitForNotification();
 
   VerifyMetadataEqual(kInitialMetadataWithMethodRef,
                       recv_initial_metadata.grpc_initial_metadata);
   trailing_metadata.emplace_back("grpc-status", std::to_string(kStatus));
   VerifyMetadataEqual(trailing_metadata,
                       recv_trailing_metadata.grpc_trailing_metadata);
-  EXPECT_EQ(kMessage, recv_message.grpc_message->JoinIntoString());
+  EXPECT_TRUE(recv_message.grpc_message->Next(SIZE_MAX, nullptr));
+  grpc_slice slice;
+  EXPECT_EQ(recv_message.grpc_message->Pull(&slice), GRPC_ERROR_NONE);
+  EXPECT_EQ(kMessage,
+            std::string(reinterpret_cast<char*>(GRPC_SLICE_START_PTR(slice)),
+                        GRPC_SLICE_LENGTH(slice)));
+  grpc_slice_unref_internal(slice);
 }
 
 TEST_F(BinderTransportTest, PerformAllOps) {
   grpc_core::ExecCtx exec_ctx;
   grpc_binder_stream* gbs = InitNewBinderStream();
   grpc_transport_stream_op_batch op{};
   grpc_transport_stream_op_batch_payload payload(nullptr);
   op.payload = &payload;
 
   const Metadata kSendInitialMetadata = kDefaultMetadata;
   const std::string kMethodRef = kDefaultMethodRef;
   MakeSendInitialMetadata send_initial_metadata(kSendInitialMetadata,
                                                 kMethodRef, &op);
 
   const std::string kSendMessage = kDefaultMessage;
   MakeSendMessage send_message(kSendMessage, &op);
 
   // The wireformat guarantees that suffix metadata will always be empty.
   // TODO(waynetu): Check whether gRPC can internally add extra trailing
   // metadata.
   const Metadata kSendTrailingMetadata = {};
   MakeSendTrailingMetadata send_trailing_metadata(kSendTrailingMetadata, &op);
 
   MockGrpcClosure mock_on_complete;
   op.on_complete = mock_on_complete.GetGrpcClosure();
 
   // TODO(waynetu): Currently, we simply drop the prefix '/' from the :path
   // argument to obtain the method name. Update the test if this turns out to be
   // incorrect.
   EXPECT_CALL(GetWireWriter(),
               RpcCall(TransactionMatches(
                   kFlagPrefix | kFlagMessageData | kFlagSuffix,
                   kMethodRef.substr(1), kSendInitialMetadata, kSendMessage)));
   Expectation on_complete = EXPECT_CALL(mock_on_complete, Callback);
 
   // Recv callbacks can happen after the on_complete callback.
   MakeRecvInitialMetadata recv_initial_metadata(
       &op, /* call_before = */ &on_complete);
   MakeRecvMessage recv_message(&op, /* call_before = */ &on_complete);
   MakeRecvTrailingMetadata recv_trailing_metadata(
       &op, /* call_before = */ &on_complete);
 
   PerformStreamOp(gbs, &op);
 
   // Flush the execution context to force on_complete to run before recv
   // callbacks get scheduled.
   grpc_core::ExecCtx::Get()->Flush();
 
   auto* gbt = reinterpret_cast<grpc_binder_transport*>(transport_);
   const Metadata kRecvInitialMetadata =
       AppendMethodRef(kDefaultMetadata, kDefaultMethodRef);
   gbt->transport_stream_receiver->NotifyRecvInitialMetadata(
       gbs->tx_code, kRecvInitialMetadata);
   const std::string kRecvMessage = kDefaultMessage;
   gbt->transport_stream_receiver->NotifyRecvMessage(gbs->tx_code, kRecvMessage);
   const Metadata kRecvTrailingMetadata = kDefaultMetadata;
   constexpr int kStatus = 0x1234;
   gbt->transport_stream_receiver->NotifyRecvTrailingMetadata(
       gbs->tx_code, kRecvTrailingMetadata, kStatus);
 
   grpc_core::ExecCtx::Get()->Flush();
   recv_initial_metadata.notification.WaitForNotification();
   recv_message.notification.WaitForNotification();
   recv_trailing_metadata.notification.WaitForNotification();
 
   VerifyMetadataEqual(kRecvInitialMetadata,
                       recv_initial_metadata.grpc_initial_metadata);
   VerifyMetadataEqual(AppendStatus(kRecvTrailingMetadata, kStatus),
                       recv_trailing_metadata.grpc_trailing_metadata);
 
-  EXPECT_EQ(kRecvMessage, recv_message.grpc_message->JoinIntoString());
+  EXPECT_TRUE(recv_message.grpc_message->Next(SIZE_MAX, nullptr));
+  grpc_slice slice;
+  EXPECT_EQ(recv_message.grpc_message->Pull(&slice), GRPC_ERROR_NONE);
+  EXPECT_EQ(kRecvMessage,
+            std::string(reinterpret_cast<char*>(GRPC_SLICE_START_PTR(slice)),
+                        GRPC_SLICE_LENGTH(slice)));
+  grpc_slice_unref_internal(slice);
 }
 
 TEST_F(BinderTransportTest, WireWriterRpcCallErrorPropagates) {
diff --git a/test/core/transport/byte_stream_test.cc b/test/core/transport/byte_stream_test.cc
new file mode 100644
index 0000000000..3b3ff74348
--- /dev/null
+++ b/test/core/transport/byte_stream_test.cc
@@ -0,0 +1,254 @@
+/*
+ *
+ * Copyright 2017 gRPC authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ */
+
+#include "src/core/lib/transport/byte_stream.h"
+
+#include <gtest/gtest.h>
+
+#include <grpc/grpc.h>
+#include <grpc/support/alloc.h>
+#include <grpc/support/log.h>
+
+#include "src/core/lib/gpr/useful.h"
+#include "src/core/lib/iomgr/exec_ctx.h"
+#include "src/core/lib/slice/slice_internal.h"
+#include "test/core/util/test_config.h"
+
+namespace grpc_core {
+namespace {
+
+//
+// SliceBufferByteStream tests
+//
+
+void NotCalledClosure(void* /*arg*/, grpc_error_handle /*error*/) {
+  GPR_ASSERT(false);
+}
+
+TEST(SliceBufferByteStream, Basic) {
+  ExecCtx exec_ctx;
+  // Create and populate slice buffer.
+  grpc_slice_buffer buffer;
+  grpc_slice_buffer_init(&buffer);
+  grpc_slice input[] = {
+      grpc_slice_from_static_string("foo"),
+      grpc_slice_from_static_string("bar"),
+  };
+  for (size_t i = 0; i < GPR_ARRAY_SIZE(input); ++i) {
+    grpc_slice_buffer_add(&buffer, input[i]);
+  }
+  // Create byte stream.
+  SliceBufferByteStream stream(&buffer, 0);
+  grpc_slice_buffer_destroy_internal(&buffer);
+  EXPECT_EQ(6U, stream.length());
+  grpc_closure closure;
+  GRPC_CLOSURE_INIT(&closure, NotCalledClosure, nullptr,
+                    grpc_schedule_on_exec_ctx);
+  // Read each slice.  Note that Next() always returns synchronously.
+  for (size_t i = 0; i < GPR_ARRAY_SIZE(input); ++i) {
+    ASSERT_TRUE(stream.Next(~(size_t)0, &closure));
+    grpc_slice output;
+    grpc_error_handle error = stream.Pull(&output);
+    EXPECT_TRUE(error == GRPC_ERROR_NONE);
+    EXPECT_TRUE(grpc_slice_eq(input[i], output));
+    grpc_slice_unref_internal(output);
+  }
+  // Clean up.
+  stream.Orphan();
+}
+
+TEST(SliceBufferByteStream, Shutdown) {
+  ExecCtx exec_ctx;
+  // Create and populate slice buffer.
+  grpc_slice_buffer buffer;
+  grpc_slice_buffer_init(&buffer);
+  grpc_slice input[] = {
+      grpc_slice_from_static_string("foo"),
+      grpc_slice_from_static_string("bar"),
+  };
+  for (size_t i = 0; i < GPR_ARRAY_SIZE(input); ++i) {
+    grpc_slice_buffer_add(&buffer, input[i]);
+  }
+  // Create byte stream.
+  SliceBufferByteStream stream(&buffer, 0);
+  grpc_slice_buffer_destroy_internal(&buffer);
+  EXPECT_EQ(6U, stream.length());
+  grpc_closure closure;
+  GRPC_CLOSURE_INIT(&closure, NotCalledClosure, nullptr,
+                    grpc_schedule_on_exec_ctx);
+  // Read the first slice.
+  ASSERT_TRUE(stream.Next(~(size_t)0, &closure));
+  grpc_slice output;
+  grpc_error_handle error = stream.Pull(&output);
+  EXPECT_TRUE(error == GRPC_ERROR_NONE);
+  EXPECT_TRUE(grpc_slice_eq(input[0], output));
+  grpc_slice_unref_internal(output);
+  // Now shutdown.
+  grpc_error_handle shutdown_error =
+      GRPC_ERROR_CREATE_FROM_STATIC_STRING("shutdown error");
+  stream.Shutdown(GRPC_ERROR_REF(shutdown_error));
+  // After shutdown, the next pull() should return the error.
+  ASSERT_TRUE(stream.Next(~(size_t)0, &closure));
+  error = stream.Pull(&output);
+  EXPECT_TRUE(error == shutdown_error);
+  GRPC_ERROR_UNREF(error);
+  GRPC_ERROR_UNREF(shutdown_error);
+  // Clean up.
+  stream.Orphan();
+}
+
+//
+// CachingByteStream tests
+//
+
+TEST(CachingByteStream, Basic) {
+  ExecCtx exec_ctx;
+  // Create and populate slice buffer byte stream.
+  grpc_slice_buffer buffer;
+  grpc_slice_buffer_init(&buffer);
+  grpc_slice input[] = {
+      grpc_slice_from_static_string("foo"),
+      grpc_slice_from_static_string("bar"),
+  };
+  for (size_t i = 0; i < GPR_ARRAY_SIZE(input); ++i) {
+    grpc_slice_buffer_add(&buffer, input[i]);
+  }
+  SliceBufferByteStream underlying_stream(&buffer, 0);
+  grpc_slice_buffer_destroy_internal(&buffer);
+  // Create cache and caching stream.
+  ByteStreamCache cache((OrphanablePtr<ByteStream>(&underlying_stream)));
+  ByteStreamCache::CachingByteStream stream(&cache);
+  grpc_closure closure;
+  GRPC_CLOSURE_INIT(&closure, NotCalledClosure, nullptr,
+                    grpc_schedule_on_exec_ctx);
+  // Read each slice.  Note that next() always returns synchronously,
+  // because the underlying byte stream always does.
+  for (size_t i = 0; i < GPR_ARRAY_SIZE(input); ++i) {
+    ASSERT_TRUE(stream.Next(~(size_t)0, &closure));
+    grpc_slice output;
+    grpc_error_handle error = stream.Pull(&output);
+    EXPECT_TRUE(error == GRPC_ERROR_NONE);
+    EXPECT_TRUE(grpc_slice_eq(input[i], output));
+    grpc_slice_unref_internal(output);
+  }
+  // Clean up.
+  stream.Orphan();
+  cache.Destroy();
+}
+
+TEST(CachingByteStream, Reset) {
+  ExecCtx exec_ctx;
+  // Create and populate slice buffer byte stream.
+  grpc_slice_buffer buffer;
+  grpc_slice_buffer_init(&buffer);
+  grpc_slice input[] = {
+      grpc_slice_from_static_string("foo"),
+      grpc_slice_from_static_string("bar"),
+  };
+  for (size_t i = 0; i < GPR_ARRAY_SIZE(input); ++i) {
+    grpc_slice_buffer_add(&buffer, input[i]);
+  }
+  SliceBufferByteStream underlying_stream(&buffer, 0);
+  grpc_slice_buffer_destroy_internal(&buffer);
+  // Create cache and caching stream.
+  ByteStreamCache cache((OrphanablePtr<ByteStream>(&underlying_stream)));
+  ByteStreamCache::CachingByteStream stream(&cache);
+  grpc_closure closure;
+  GRPC_CLOSURE_INIT(&closure, NotCalledClosure, nullptr,
+                    grpc_schedule_on_exec_ctx);
+  // Read one slice.
+  ASSERT_TRUE(stream.Next(~(size_t)0, &closure));
+  grpc_slice output;
+  grpc_error_handle error = stream.Pull(&output);
+  EXPECT_TRUE(error == GRPC_ERROR_NONE);
+  EXPECT_TRUE(grpc_slice_eq(input[0], output));
+  grpc_slice_unref_internal(output);
+  // Reset the caching stream.  The reads should start over from the
+  // first slice.
+  stream.Reset();
+  for (size_t i = 0; i < GPR_ARRAY_SIZE(input); ++i) {
+    ASSERT_TRUE(stream.Next(~(size_t)0, &closure));
+    error = stream.Pull(&output);
+    EXPECT_TRUE(error == GRPC_ERROR_NONE);
+    EXPECT_TRUE(grpc_slice_eq(input[i], output));
+    grpc_slice_unref_internal(output);
+  }
+  // Clean up.
+  stream.Orphan();
+  cache.Destroy();
+}
+
+TEST(CachingByteStream, SharedCache) {
+  ExecCtx exec_ctx;
+  // Create and populate slice buffer byte stream.
+  grpc_slice_buffer buffer;
+  grpc_slice_buffer_init(&buffer);
+  grpc_slice input[] = {
+      grpc_slice_from_static_string("foo"),
+      grpc_slice_from_static_string("bar"),
+  };
+  for (size_t i = 0; i < GPR_ARRAY_SIZE(input); ++i) {
+    grpc_slice_buffer_add(&buffer, input[i]);
+  }
+  SliceBufferByteStream underlying_stream(&buffer, 0);
+  grpc_slice_buffer_destroy_internal(&buffer);
+  // Create cache and two caching streams.
+  ByteStreamCache cache((OrphanablePtr<ByteStream>(&underlying_stream)));
+  ByteStreamCache::CachingByteStream stream1(&cache);
+  ByteStreamCache::CachingByteStream stream2(&cache);
+  grpc_closure closure;
+  GRPC_CLOSURE_INIT(&closure, NotCalledClosure, nullptr,
+                    grpc_schedule_on_exec_ctx);
+  // Read one slice from stream1.
+  EXPECT_TRUE(stream1.Next(~(size_t)0, &closure));
+  grpc_slice output;
+  grpc_error_handle error = stream1.Pull(&output);
+  EXPECT_TRUE(error == GRPC_ERROR_NONE);
+  EXPECT_TRUE(grpc_slice_eq(input[0], output));
+  grpc_slice_unref_internal(output);
+  // Read all slices from stream2.
+  for (size_t i = 0; i < GPR_ARRAY_SIZE(input); ++i) {
+    EXPECT_TRUE(stream2.Next(~(size_t)0, &closure));
+    error = stream2.Pull(&output);
+    EXPECT_TRUE(error == GRPC_ERROR_NONE);
+    EXPECT_TRUE(grpc_slice_eq(input[i], output));
+    grpc_slice_unref_internal(output);
+  }
+  // Now read the second slice from stream1.
+  EXPECT_TRUE(stream1.Next(~(size_t)0, &closure));
+  error = stream1.Pull(&output);
+  EXPECT_TRUE(error == GRPC_ERROR_NONE);
+  EXPECT_TRUE(grpc_slice_eq(input[1], output));
+  grpc_slice_unref_internal(output);
+  // Clean up.
+  stream1.Orphan();
+  stream2.Orphan();
+  cache.Destroy();
+}
+
+}  // namespace
+}  // namespace grpc_core
+
+int main(int argc, char** argv) {
+  grpc::testing::TestEnvironment env(&argc, argv);
+  ::testing::InitGoogleTest(&argc, argv);
+  grpc_init();
+  int retval = RUN_ALL_TESTS();
+  grpc_shutdown();
+  return retval;
+}
diff --git a/test/core/transport/chttp2/BUILD b/test/core/transport/chttp2/BUILD
index 1adf32651d..7721baa823 100644
--- a/test/core/transport/chttp2/BUILD
+++ b/test/core/transport/chttp2/BUILD
@@ -86,35 +86,21 @@ grpc_cc_test(
 )
 
 grpc_cc_test(
-    name = "flow_control_end2end_test",
+    name = "flow_control_test",
     size = "large",
-    srcs = ["flow_control_end2end_test.cc"],
+    srcs = ["flow_control_test.cc"],
     external_deps = [
         "gtest",
     ],
     language = "C++",
     deps = [
         "//:gpr",
         "//:grpc",
         "//test/core/end2end:cq_verifier",
         "//test/core/util:grpc_test_util",
     ],
 )
 
-grpc_cc_test(
-    name = "flow_control_test",
-    srcs = ["flow_control_test.cc"],
-    external_deps = [
-        "gtest",
-    ],
-    language = "C++",
-    deps = [
-        "//:chttp2_flow_control",
-        "//:resource_quota",
-        "//test/core/util:grpc_suppressions",
-    ],
-)
-
 grpc_cc_test(
     name = "graceful_shutdown_test",
     srcs = ["graceful_shutdown_test.cc"],
diff --git a/test/core/transport/chttp2/flow_control_end2end_test.cc b/test/core/transport/chttp2/flow_control_end2end_test.cc
deleted file mode 100644
index 9d0e52ac53..0000000000
--- a/test/core/transport/chttp2/flow_control_end2end_test.cc
+++ /dev/null
@@ -1,379 +0,0 @@
-/*
- *
- * Copyright 2021 gRPC authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-#include <grpc/support/port_platform.h>
-
-#include <stdlib.h>
-#include <string.h>
-
-#include <functional>
-#include <set>
-#include <thread>
-
-#include <gmock/gmock.h>
-
-#include <grpc/grpc.h>
-#include <grpc/grpc_security.h>
-#include <grpc/impl/codegen/grpc_types.h>
-#include <grpc/slice.h>
-#include <grpc/support/alloc.h>
-#include <grpc/support/log.h>
-#include <grpc/support/string_util.h>
-#include <grpc/support/time.h>
-
-#include "src/core/ext/filters/client_channel/backup_poller.h"
-#include "src/core/ext/transport/chttp2/transport/flow_control.h"
-#include "src/core/lib/channel/channel_args.h"
-#include "src/core/lib/gprpp/host_port.h"
-#include "src/core/lib/surface/channel.h"
-#include "test/core/end2end/cq_verifier.h"
-#include "test/core/util/port.h"
-#include "test/core/util/test_config.h"
-
-namespace {
-
-class TransportTargetWindowSizeMocker
-    : public grpc_core::chttp2::TestOnlyTransportTargetWindowEstimatesMocker {
- public:
-  static constexpr uint32_t kLargeInitialWindowSize = 1u << 31;
-  static constexpr uint32_t kSmallInitialWindowSize = 0;
-
-  double ComputeNextTargetInitialWindowSizeFromPeriodicUpdate(
-      double /* current_target */) override {
-    // Protecting access to variable window_size_ shared between client and
-    // server.
-    grpc_core::MutexLock lock(&mu_);
-    if (alternating_initial_window_sizes_) {
-      window_size_ = (window_size_ == kLargeInitialWindowSize)
-                         ? kSmallInitialWindowSize
-                         : kLargeInitialWindowSize;
-    }
-    return window_size_;
-  }
-
-  // Alternates the initial window size targets. Computes a low values if it was
-  // previously high, or a high value if it was previously low.
-  void AlternateTargetInitialWindowSizes() {
-    grpc_core::MutexLock lock(&mu_);
-    alternating_initial_window_sizes_ = true;
-  }
-
-  void Reset() {
-    // Protecting access to variable window_size_ shared between client and
-    // server.
-    grpc_core::MutexLock lock(&mu_);
-    alternating_initial_window_sizes_ = false;
-    window_size_ = kLargeInitialWindowSize;
-  }
-
- private:
-  grpc_core::Mutex mu_;
-  bool alternating_initial_window_sizes_ ABSL_GUARDED_BY(mu_) = false;
-  double window_size_ ABSL_GUARDED_BY(mu_) = kLargeInitialWindowSize;
-};
-
-TransportTargetWindowSizeMocker* g_target_initial_window_size_mocker;
-
-void* tag(intptr_t t) { return reinterpret_cast<void*>(t); }
-
-void VerifyChannelReady(grpc_channel* channel, grpc_completion_queue* cq) {
-  grpc_connectivity_state state =
-      grpc_channel_check_connectivity_state(channel, 1 /* try_to_connect */);
-  while (state != GRPC_CHANNEL_READY) {
-    grpc_channel_watch_connectivity_state(
-        channel, state, grpc_timeout_seconds_to_deadline(5), cq, nullptr);
-    grpc_completion_queue_next(cq, grpc_timeout_seconds_to_deadline(5),
-                               nullptr);
-    state = grpc_channel_check_connectivity_state(channel, 0);
-  }
-}
-
-void VerifyChannelConnected(grpc_channel* channel, grpc_completion_queue* cq) {
-  // Verify channel is connected. Use a ping to make sure that clients
-  // tries sending/receiving bytes if the channel is connected.
-  grpc_channel_ping(channel, cq, reinterpret_cast<void*>(2000), nullptr);
-  grpc_event ev = grpc_completion_queue_next(
-      cq, grpc_timeout_seconds_to_deadline(5), nullptr);
-  GPR_ASSERT(ev.type == GRPC_OP_COMPLETE);
-  GPR_ASSERT(ev.tag == reinterpret_cast<void*>(2000));
-  GPR_ASSERT(ev.success == 1);
-  GPR_ASSERT(grpc_channel_check_connectivity_state(channel, 0) ==
-             GRPC_CHANNEL_READY);
-}
-
-// Shuts down and destroys the server.
-void ServerShutdownAndDestroy(grpc_server* server, grpc_completion_queue* cq) {
-  // Shutdown and destroy server
-  grpc_server_shutdown_and_notify(server, cq, reinterpret_cast<void*>(1000));
-  while (grpc_completion_queue_next(cq, gpr_inf_future(GPR_CLOCK_REALTIME),
-                                    nullptr)
-             .tag != reinterpret_cast<void*>(1000)) {
-  }
-  grpc_server_destroy(server);
-}
-
-grpc_slice LargeSlice(void) {
-  grpc_slice slice = grpc_slice_malloc(10000000);  // ~10MB
-  memset(GRPC_SLICE_START_PTR(slice), 'x', GRPC_SLICE_LENGTH(slice));
-  return slice;
-}
-
-void PerformCallWithLargePayload(grpc_channel* channel, grpc_server* server,
-                                 grpc_completion_queue* cq) {
-  grpc_slice request_payload_slice = LargeSlice();
-  grpc_slice response_payload_slice = LargeSlice();
-  grpc_call* c;
-  grpc_call* s;
-  grpc_byte_buffer* request_payload =
-      grpc_raw_byte_buffer_create(&request_payload_slice, 1);
-  grpc_byte_buffer* response_payload =
-      grpc_raw_byte_buffer_create(&response_payload_slice, 1);
-  cq_verifier* cqv = cq_verifier_create(cq);
-  grpc_op ops[6];
-  grpc_op* op;
-  grpc_metadata_array initial_metadata_recv;
-  grpc_metadata_array trailing_metadata_recv;
-  grpc_metadata_array request_metadata_recv;
-  grpc_byte_buffer* request_payload_recv = nullptr;
-  grpc_byte_buffer* response_payload_recv = nullptr;
-  grpc_call_details call_details;
-  grpc_status_code status;
-  grpc_call_error error;
-  grpc_slice details;
-  int was_cancelled = 2;
-
-  gpr_timespec deadline = grpc_timeout_seconds_to_deadline(30);
-  c = grpc_channel_create_call(channel, nullptr, GRPC_PROPAGATE_DEFAULTS, cq,
-                               grpc_slice_from_static_string("/foo"), nullptr,
-                               deadline, nullptr);
-  GPR_ASSERT(c);
-
-  grpc_metadata_array_init(&initial_metadata_recv);
-  grpc_metadata_array_init(&trailing_metadata_recv);
-  grpc_metadata_array_init(&request_metadata_recv);
-  grpc_call_details_init(&call_details);
-
-  memset(ops, 0, sizeof(ops));
-  op = ops;
-  op->op = GRPC_OP_SEND_INITIAL_METADATA;
-  op->data.send_initial_metadata.count = 0;
-  op->flags = 0;
-  op->reserved = nullptr;
-  op++;
-  op->op = GRPC_OP_SEND_MESSAGE;
-  op->data.send_message.send_message = request_payload;
-  op->flags = 0;
-  op->reserved = nullptr;
-  op++;
-  op->op = GRPC_OP_SEND_CLOSE_FROM_CLIENT;
-  op->flags = 0;
-  op->reserved = nullptr;
-  op++;
-  op->op = GRPC_OP_RECV_INITIAL_METADATA;
-  op->data.recv_initial_metadata.recv_initial_metadata = &initial_metadata_recv;
-  op->flags = 0;
-  op->reserved = nullptr;
-  op++;
-  op->op = GRPC_OP_RECV_MESSAGE;
-  op->data.recv_message.recv_message = &response_payload_recv;
-  op->flags = 0;
-  op->reserved = nullptr;
-  op++;
-  op->op = GRPC_OP_RECV_STATUS_ON_CLIENT;
-  op->data.recv_status_on_client.trailing_metadata = &trailing_metadata_recv;
-  op->data.recv_status_on_client.status = &status;
-  op->data.recv_status_on_client.status_details = &details;
-  op->flags = 0;
-  op->reserved = nullptr;
-  op++;
-  error = grpc_call_start_batch(c, ops, static_cast<size_t>(op - ops), tag(1),
-                                nullptr);
-  GPR_ASSERT(GRPC_CALL_OK == error);
-
-  error = grpc_server_request_call(server, &s, &call_details,
-                                   &request_metadata_recv, cq, cq, tag(101));
-  GPR_ASSERT(GRPC_CALL_OK == error);
-  CQ_EXPECT_COMPLETION(cqv, tag(101), 1);
-  cq_verify(cqv);
-
-  memset(ops, 0, sizeof(ops));
-  op = ops;
-  op->op = GRPC_OP_SEND_INITIAL_METADATA;
-  op->data.send_initial_metadata.count = 0;
-  op->flags = 0;
-  op->reserved = nullptr;
-  op++;
-  op->op = GRPC_OP_RECV_MESSAGE;
-  op->data.recv_message.recv_message = &request_payload_recv;
-  op->flags = 0;
-  op->reserved = nullptr;
-  op++;
-  error = grpc_call_start_batch(s, ops, static_cast<size_t>(op - ops), tag(102),
-                                nullptr);
-  GPR_ASSERT(GRPC_CALL_OK == error);
-
-  CQ_EXPECT_COMPLETION(cqv, tag(102), 1);
-  cq_verify(cqv);
-
-  memset(ops, 0, sizeof(ops));
-  op = ops;
-  op->op = GRPC_OP_RECV_CLOSE_ON_SERVER;
-  op->data.recv_close_on_server.cancelled = &was_cancelled;
-  op->flags = 0;
-  op->reserved = nullptr;
-  op++;
-  op->op = GRPC_OP_SEND_MESSAGE;
-  op->data.send_message.send_message = response_payload;
-  op->flags = 0;
-  op->reserved = nullptr;
-  op++;
-  op->op = GRPC_OP_SEND_STATUS_FROM_SERVER;
-  op->data.send_status_from_server.trailing_metadata_count = 0;
-  op->data.send_status_from_server.status = GRPC_STATUS_UNIMPLEMENTED;
-  grpc_slice status_details = grpc_slice_from_static_string("xyz");
-  op->data.send_status_from_server.status_details = &status_details;
-  op->flags = 0;
-  op->reserved = nullptr;
-  op++;
-  error = grpc_call_start_batch(s, ops, static_cast<size_t>(op - ops), tag(103),
-                                nullptr);
-  GPR_ASSERT(GRPC_CALL_OK == error);
-
-  CQ_EXPECT_COMPLETION(cqv, tag(103), 1);
-  CQ_EXPECT_COMPLETION(cqv, tag(1), 1);
-  cq_verify(cqv);
-
-  GPR_ASSERT(status == GRPC_STATUS_UNIMPLEMENTED);
-  GPR_ASSERT(0 == grpc_slice_str_cmp(details, "xyz"));
-  GPR_ASSERT(0 == grpc_slice_str_cmp(call_details.method, "/foo"));
-  GPR_ASSERT(was_cancelled == 0);
-
-  grpc_slice_unref(details);
-  grpc_metadata_array_destroy(&initial_metadata_recv);
-  grpc_metadata_array_destroy(&trailing_metadata_recv);
-  grpc_metadata_array_destroy(&request_metadata_recv);
-  grpc_call_details_destroy(&call_details);
-
-  grpc_call_unref(c);
-  grpc_call_unref(s);
-
-  cq_verifier_destroy(cqv);
-
-  grpc_byte_buffer_destroy(request_payload);
-  grpc_byte_buffer_destroy(response_payload);
-  grpc_byte_buffer_destroy(request_payload_recv);
-  grpc_byte_buffer_destroy(response_payload_recv);
-  grpc_slice_unref(request_payload_slice);
-  grpc_slice_unref(response_payload_slice);
-}
-
-class FlowControlTest : public ::testing::Test {
- protected:
-  void SetUp() override {
-    cq_ = grpc_completion_queue_create_for_next(nullptr);
-    // create the server
-    std::string server_address =
-        grpc_core::JoinHostPort("localhost", grpc_pick_unused_port_or_die());
-    grpc_arg server_args[] = {
-        grpc_channel_arg_integer_create(
-            const_cast<char*>(GRPC_ARG_HTTP2_MAX_PING_STRIKES), 0),
-        grpc_channel_arg_integer_create(
-            const_cast<char*>(GRPC_ARG_MAX_RECEIVE_MESSAGE_LENGTH), -1),
-        grpc_channel_arg_integer_create(
-            const_cast<char*>(GRPC_ARG_MAX_SEND_MESSAGE_LENGTH), -1)};
-    grpc_channel_args server_channel_args = {GPR_ARRAY_SIZE(server_args),
-                                             server_args};
-    server_ = grpc_server_create(&server_channel_args, nullptr);
-    grpc_server_register_completion_queue(server_, cq_, nullptr);
-    grpc_server_credentials* server_creds =
-        grpc_insecure_server_credentials_create();
-    GPR_ASSERT(grpc_server_add_http2_port(server_, server_address.c_str(),
-                                          server_creds));
-    grpc_server_credentials_release(server_creds);
-    grpc_server_start(server_);
-    // create the channel (bdp pings are enabled by default)
-    grpc_arg client_args[] = {
-        grpc_channel_arg_integer_create(
-            const_cast<char*>(GRPC_ARG_HTTP2_MAX_PINGS_WITHOUT_DATA), 0),
-        grpc_channel_arg_integer_create(
-            const_cast<char*>(GRPC_ARG_KEEPALIVE_PERMIT_WITHOUT_CALLS), 1),
-        grpc_channel_arg_integer_create(
-            const_cast<char*>(GRPC_ARG_MAX_RECEIVE_MESSAGE_LENGTH), -1),
-        grpc_channel_arg_integer_create(
-            const_cast<char*>(GRPC_ARG_MAX_SEND_MESSAGE_LENGTH), -1)};
-    grpc_channel_args client_channel_args = {GPR_ARRAY_SIZE(client_args),
-                                             client_args};
-    grpc_channel_credentials* creds = grpc_insecure_credentials_create();
-    channel_ = grpc_channel_create(server_address.c_str(), creds,
-                                   &client_channel_args);
-    grpc_channel_credentials_release(creds);
-    VerifyChannelReady(channel_, cq_);
-    g_target_initial_window_size_mocker->Reset();
-  }
-
-  void TearDown() override {
-    // shutdown and destroy the client and server
-    grpc_channel_destroy(channel_);
-    ServerShutdownAndDestroy(server_, cq_);
-    grpc_completion_queue_shutdown(cq_);
-    while (grpc_completion_queue_next(cq_, gpr_inf_future(GPR_CLOCK_REALTIME),
-                                      nullptr)
-               .type != GRPC_QUEUE_SHUTDOWN) {
-    }
-    grpc_completion_queue_destroy(cq_);
-  }
-
-  grpc_server* server_ = nullptr;
-  grpc_channel* channel_ = nullptr;
-  grpc_completion_queue* cq_ = nullptr;
-};
-
-TEST_F(FlowControlTest,
-       TestLargeWindowSizeUpdatesDoNotCauseIllegalFlowControlWindows) {
-  for (int i = 0; i < 10; ++i) {
-    PerformCallWithLargePayload(channel_, server_, cq_);
-    VerifyChannelConnected(channel_, cq_);
-  }
-}
-
-TEST_F(FlowControlTest, TestWindowSizeUpdatesDoNotCauseStalledStreams) {
-  g_target_initial_window_size_mocker->AlternateTargetInitialWindowSizes();
-  for (int i = 0; i < 100; ++i) {
-    PerformCallWithLargePayload(channel_, server_, cq_);
-    VerifyChannelConnected(channel_, cq_);
-  }
-}
-
-}  // namespace
-
-int main(int argc, char** argv) {
-  ::testing::InitGoogleTest(&argc, argv);
-  // Make sure that we will have an active poller on all client-side fd's that
-  // are capable of sending and receiving even in the case that we don't have an
-  // active RPC operation on the fd.
-  GPR_GLOBAL_CONFIG_SET(grpc_client_channel_backup_poll_interval_ms, 1);
-  grpc_core::chttp2::g_test_only_transport_flow_control_window_check = true;
-  g_target_initial_window_size_mocker = new TransportTargetWindowSizeMocker();
-  grpc_core::chttp2::g_test_only_transport_target_window_estimates_mocker =
-      g_target_initial_window_size_mocker;
-  grpc::testing::TestEnvironment env(&argc, argv);
-  grpc_init();
-  auto result = RUN_ALL_TESTS();
-  grpc_shutdown();
-  return result;
-}
diff --git a/test/core/transport/chttp2/flow_control_test.cc b/test/core/transport/chttp2/flow_control_test.cc
index 7bada64a46..a4c22b2c65 100644
--- a/test/core/transport/chttp2/flow_control_test.cc
+++ b/test/core/transport/chttp2/flow_control_test.cc
@@ -1,115 +1,380 @@
-// Copyright 2022 gRPC authors.
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
+/*
+ *
+ * Copyright 2021 gRPC authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ */
+
+#include <grpc/support/port_platform.h>
 
 #include "src/core/ext/transport/chttp2/transport/flow_control.h"
 
-#include <gtest/gtest.h>
+#include <stdlib.h>
+#include <string.h>
+
+#include <functional>
+#include <set>
+#include <thread>
+
+#include <gmock/gmock.h>
 
-#include "src/core/lib/iomgr/exec_ctx.h"
-#include "src/core/lib/resource_quota/resource_quota.h"
+#include <grpc/grpc.h>
+#include <grpc/grpc_security.h>
+#include <grpc/impl/codegen/grpc_types.h>
+#include <grpc/slice.h>
+#include <grpc/support/alloc.h>
+#include <grpc/support/log.h>
+#include <grpc/support/string_util.h>
+#include <grpc/support/time.h>
 
-namespace grpc_core {
-namespace chttp2 {
+#include "src/core/ext/filters/client_channel/backup_poller.h"
+#include "src/core/lib/channel/channel_args.h"
+#include "src/core/lib/gprpp/host_port.h"
+#include "src/core/lib/surface/channel.h"
+#include "test/core/end2end/cq_verifier.h"
+#include "test/core/util/port.h"
+#include "test/core/util/test_config.h"
 
 namespace {
-auto* g_memory_owner = new MemoryOwner(
-    ResourceQuota::Default()->memory_quota()->CreateMemoryOwner("test"));
-}
 
-TEST(FlowControl, NoOp) {
-  ExecCtx exec_ctx;
-  TransportFlowControl tfc("test", true, g_memory_owner);
-  StreamFlowControl sfc(&tfc);
-  // Check initial values are per http2 spec
-  EXPECT_EQ(tfc.sent_init_window(), 65535);
-  EXPECT_EQ(tfc.acked_init_window(), 65535);
-  EXPECT_EQ(tfc.remote_window(), 65535);
-  EXPECT_EQ(tfc.target_frame_size(), 16384);
-  EXPECT_EQ(sfc.remote_window_delta(), 0);
-  EXPECT_EQ(sfc.min_progress_size(), 0);
-  EXPECT_EQ(sfc.local_window_delta(), 0);
-  EXPECT_EQ(sfc.announced_window_delta(), 0);
+class TransportTargetWindowSizeMocker
+    : public grpc_core::chttp2::TestOnlyTransportTargetWindowEstimatesMocker {
+ public:
+  static constexpr uint32_t kLargeInitialWindowSize = 1u << 31;
+  static constexpr uint32_t kSmallInitialWindowSize = 0;
+
+  double ComputeNextTargetInitialWindowSizeFromPeriodicUpdate(
+      double /* current_target */) override {
+    // Protecting access to variable window_size_ shared between client and
+    // server.
+    grpc_core::MutexLock lock(&mu_);
+    if (alternating_initial_window_sizes_) {
+      window_size_ = (window_size_ == kLargeInitialWindowSize)
+                         ? kSmallInitialWindowSize
+                         : kLargeInitialWindowSize;
+    }
+    return window_size_;
+  }
+
+  // Alternates the initial window size targets. Computes a low values if it was
+  // previously high, or a high value if it was previously low.
+  void AlternateTargetInitialWindowSizes() {
+    grpc_core::MutexLock lock(&mu_);
+    alternating_initial_window_sizes_ = true;
+  }
+
+  void Reset() {
+    // Protecting access to variable window_size_ shared between client and
+    // server.
+    grpc_core::MutexLock lock(&mu_);
+    alternating_initial_window_sizes_ = false;
+    window_size_ = kLargeInitialWindowSize;
+  }
+
+ private:
+  grpc_core::Mutex mu_;
+  bool alternating_initial_window_sizes_ ABSL_GUARDED_BY(mu_) = false;
+  double window_size_ ABSL_GUARDED_BY(mu_) = kLargeInitialWindowSize;
+};
+
+TransportTargetWindowSizeMocker* g_target_initial_window_size_mocker;
+
+void* tag(intptr_t t) { return reinterpret_cast<void*>(t); }
+
+void VerifyChannelReady(grpc_channel* channel, grpc_completion_queue* cq) {
+  grpc_connectivity_state state =
+      grpc_channel_check_connectivity_state(channel, 1 /* try_to_connect */);
+  while (state != GRPC_CHANNEL_READY) {
+    grpc_channel_watch_connectivity_state(
+        channel, state, grpc_timeout_seconds_to_deadline(5), cq, nullptr);
+    grpc_completion_queue_next(cq, grpc_timeout_seconds_to_deadline(5),
+                               nullptr);
+    state = grpc_channel_check_connectivity_state(channel, 0);
+  }
 }
 
-TEST(FlowControl, SendData) {
-  ExecCtx exec_ctx;
-  TransportFlowControl tfc("test", true, g_memory_owner);
-  StreamFlowControl sfc(&tfc);
-  sfc.SentData(1024);
-  EXPECT_EQ(sfc.remote_window_delta(), -1024);
-  EXPECT_EQ(tfc.remote_window(), 65535 - 1024);
+void VerifyChannelConnected(grpc_channel* channel, grpc_completion_queue* cq) {
+  // Verify channel is connected. Use a ping to make sure that clients
+  // tries sending/receiving bytes if the channel is connected.
+  grpc_channel_ping(channel, cq, reinterpret_cast<void*>(2000), nullptr);
+  grpc_event ev = grpc_completion_queue_next(
+      cq, grpc_timeout_seconds_to_deadline(5), nullptr);
+  GPR_ASSERT(ev.type == GRPC_OP_COMPLETE);
+  GPR_ASSERT(ev.tag == reinterpret_cast<void*>(2000));
+  GPR_ASSERT(ev.success == 1);
+  GPR_ASSERT(grpc_channel_check_connectivity_state(channel, 0) ==
+             GRPC_CHANNEL_READY);
 }
 
-TEST(FlowControl, InitialTransportUpdate) {
-  ExecCtx exec_ctx;
-  TransportFlowControl tfc("test", true, g_memory_owner);
-  EXPECT_EQ(tfc.MakeAction(), FlowControlAction());
+// Shuts down and destroys the server.
+void ServerShutdownAndDestroy(grpc_server* server, grpc_completion_queue* cq) {
+  // Shutdown and destroy server
+  grpc_server_shutdown_and_notify(server, cq, reinterpret_cast<void*>(1000));
+  while (grpc_completion_queue_next(cq, gpr_inf_future(GPR_CLOCK_REALTIME),
+                                    nullptr)
+             .tag != reinterpret_cast<void*>(1000)) {
+  }
+  grpc_server_destroy(server);
 }
 
-TEST(FlowControl, InitialStreamUpdate) {
-  ExecCtx exec_ctx;
-  TransportFlowControl tfc("test", true, g_memory_owner);
-  StreamFlowControl sfc(&tfc);
-  EXPECT_EQ(sfc.MakeAction(), FlowControlAction());
+grpc_slice LargeSlice(void) {
+  grpc_slice slice = grpc_slice_malloc(10000000);  // ~10MB
+  memset(GRPC_SLICE_START_PTR(slice), 'x', GRPC_SLICE_LENGTH(slice));
+  return slice;
 }
 
-TEST(FlowControl, RecvData) {
-  ExecCtx exec_ctx;
-  TransportFlowControl tfc("test", true, g_memory_owner);
-  StreamFlowControl sfc(&tfc);
-  EXPECT_EQ(absl::OkStatus(), sfc.RecvData(1024));
-  EXPECT_EQ(tfc.announced_window(), 65535 - 1024);
-  EXPECT_EQ(sfc.local_window_delta(), -1024);
+void PerformCallWithLargePayload(grpc_channel* channel, grpc_server* server,
+                                 grpc_completion_queue* cq) {
+  grpc_slice request_payload_slice = LargeSlice();
+  grpc_slice response_payload_slice = LargeSlice();
+  grpc_call* c;
+  grpc_call* s;
+  grpc_byte_buffer* request_payload =
+      grpc_raw_byte_buffer_create(&request_payload_slice, 1);
+  grpc_byte_buffer* response_payload =
+      grpc_raw_byte_buffer_create(&response_payload_slice, 1);
+  cq_verifier* cqv = cq_verifier_create(cq);
+  grpc_op ops[6];
+  grpc_op* op;
+  grpc_metadata_array initial_metadata_recv;
+  grpc_metadata_array trailing_metadata_recv;
+  grpc_metadata_array request_metadata_recv;
+  grpc_byte_buffer* request_payload_recv = nullptr;
+  grpc_byte_buffer* response_payload_recv = nullptr;
+  grpc_call_details call_details;
+  grpc_status_code status;
+  grpc_call_error error;
+  grpc_slice details;
+  int was_cancelled = 2;
+
+  gpr_timespec deadline = grpc_timeout_seconds_to_deadline(30);
+  c = grpc_channel_create_call(channel, nullptr, GRPC_PROPAGATE_DEFAULTS, cq,
+                               grpc_slice_from_static_string("/foo"), nullptr,
+                               deadline, nullptr);
+  GPR_ASSERT(c);
+
+  grpc_metadata_array_init(&initial_metadata_recv);
+  grpc_metadata_array_init(&trailing_metadata_recv);
+  grpc_metadata_array_init(&request_metadata_recv);
+  grpc_call_details_init(&call_details);
+
+  memset(ops, 0, sizeof(ops));
+  op = ops;
+  op->op = GRPC_OP_SEND_INITIAL_METADATA;
+  op->data.send_initial_metadata.count = 0;
+  op->flags = 0;
+  op->reserved = nullptr;
+  op++;
+  op->op = GRPC_OP_SEND_MESSAGE;
+  op->data.send_message.send_message = request_payload;
+  op->flags = 0;
+  op->reserved = nullptr;
+  op++;
+  op->op = GRPC_OP_SEND_CLOSE_FROM_CLIENT;
+  op->flags = 0;
+  op->reserved = nullptr;
+  op++;
+  op->op = GRPC_OP_RECV_INITIAL_METADATA;
+  op->data.recv_initial_metadata.recv_initial_metadata = &initial_metadata_recv;
+  op->flags = 0;
+  op->reserved = nullptr;
+  op++;
+  op->op = GRPC_OP_RECV_MESSAGE;
+  op->data.recv_message.recv_message = &response_payload_recv;
+  op->flags = 0;
+  op->reserved = nullptr;
+  op++;
+  op->op = GRPC_OP_RECV_STATUS_ON_CLIENT;
+  op->data.recv_status_on_client.trailing_metadata = &trailing_metadata_recv;
+  op->data.recv_status_on_client.status = &status;
+  op->data.recv_status_on_client.status_details = &details;
+  op->flags = 0;
+  op->reserved = nullptr;
+  op++;
+  error = grpc_call_start_batch(c, ops, static_cast<size_t>(op - ops), tag(1),
+                                nullptr);
+  GPR_ASSERT(GRPC_CALL_OK == error);
+
+  error = grpc_server_request_call(server, &s, &call_details,
+                                   &request_metadata_recv, cq, cq, tag(101));
+  GPR_ASSERT(GRPC_CALL_OK == error);
+  CQ_EXPECT_COMPLETION(cqv, tag(101), 1);
+  cq_verify(cqv);
+
+  memset(ops, 0, sizeof(ops));
+  op = ops;
+  op->op = GRPC_OP_SEND_INITIAL_METADATA;
+  op->data.send_initial_metadata.count = 0;
+  op->flags = 0;
+  op->reserved = nullptr;
+  op++;
+  op->op = GRPC_OP_RECV_MESSAGE;
+  op->data.recv_message.recv_message = &request_payload_recv;
+  op->flags = 0;
+  op->reserved = nullptr;
+  op++;
+  error = grpc_call_start_batch(s, ops, static_cast<size_t>(op - ops), tag(102),
+                                nullptr);
+  GPR_ASSERT(GRPC_CALL_OK == error);
+
+  CQ_EXPECT_COMPLETION(cqv, tag(102), 1);
+  cq_verify(cqv);
+
+  memset(ops, 0, sizeof(ops));
+  op = ops;
+  op->op = GRPC_OP_RECV_CLOSE_ON_SERVER;
+  op->data.recv_close_on_server.cancelled = &was_cancelled;
+  op->flags = 0;
+  op->reserved = nullptr;
+  op++;
+  op->op = GRPC_OP_SEND_MESSAGE;
+  op->data.send_message.send_message = response_payload;
+  op->flags = 0;
+  op->reserved = nullptr;
+  op++;
+  op->op = GRPC_OP_SEND_STATUS_FROM_SERVER;
+  op->data.send_status_from_server.trailing_metadata_count = 0;
+  op->data.send_status_from_server.status = GRPC_STATUS_UNIMPLEMENTED;
+  grpc_slice status_details = grpc_slice_from_static_string("xyz");
+  op->data.send_status_from_server.status_details = &status_details;
+  op->flags = 0;
+  op->reserved = nullptr;
+  op++;
+  error = grpc_call_start_batch(s, ops, static_cast<size_t>(op - ops), tag(103),
+                                nullptr);
+  GPR_ASSERT(GRPC_CALL_OK == error);
+
+  CQ_EXPECT_COMPLETION(cqv, tag(103), 1);
+  CQ_EXPECT_COMPLETION(cqv, tag(1), 1);
+  cq_verify(cqv);
+
+  GPR_ASSERT(status == GRPC_STATUS_UNIMPLEMENTED);
+  GPR_ASSERT(0 == grpc_slice_str_cmp(details, "xyz"));
+  GPR_ASSERT(0 == grpc_slice_str_cmp(call_details.method, "/foo"));
+  GPR_ASSERT(was_cancelled == 0);
+
+  grpc_slice_unref(details);
+  grpc_metadata_array_destroy(&initial_metadata_recv);
+  grpc_metadata_array_destroy(&trailing_metadata_recv);
+  grpc_metadata_array_destroy(&request_metadata_recv);
+  grpc_call_details_destroy(&call_details);
+
+  grpc_call_unref(c);
+  grpc_call_unref(s);
+
+  cq_verifier_destroy(cqv);
+
+  grpc_byte_buffer_destroy(request_payload);
+  grpc_byte_buffer_destroy(response_payload);
+  grpc_byte_buffer_destroy(request_payload_recv);
+  grpc_byte_buffer_destroy(response_payload_recv);
+  grpc_slice_unref(request_payload_slice);
+  grpc_slice_unref(response_payload_slice);
 }
 
-TEST(FlowControl, TrackMinProgressSize) {
-  ExecCtx exec_ctx;
-  TransportFlowControl tfc("test", true, g_memory_owner);
-  StreamFlowControl sfc(&tfc);
-  sfc.UpdateProgress(5);
-  EXPECT_EQ(sfc.min_progress_size(), 5);
-  sfc.UpdateProgress(10);
-  EXPECT_EQ(sfc.min_progress_size(), 10);
-  EXPECT_EQ(absl::OkStatus(), sfc.RecvData(5));
-  EXPECT_EQ(sfc.min_progress_size(), 5);
-  EXPECT_EQ(absl::OkStatus(), sfc.RecvData(5));
-  EXPECT_EQ(sfc.min_progress_size(), 0);
-  EXPECT_EQ(absl::OkStatus(), sfc.RecvData(5));
-  EXPECT_EQ(sfc.min_progress_size(), 0);
+class FlowControlTest : public ::testing::Test {
+ protected:
+  void SetUp() override {
+    cq_ = grpc_completion_queue_create_for_next(nullptr);
+    // create the server
+    std::string server_address =
+        grpc_core::JoinHostPort("localhost", grpc_pick_unused_port_or_die());
+    grpc_arg server_args[] = {
+        grpc_channel_arg_integer_create(
+            const_cast<char*>(GRPC_ARG_HTTP2_MAX_PING_STRIKES), 0),
+        grpc_channel_arg_integer_create(
+            const_cast<char*>(GRPC_ARG_MAX_RECEIVE_MESSAGE_LENGTH), -1),
+        grpc_channel_arg_integer_create(
+            const_cast<char*>(GRPC_ARG_MAX_SEND_MESSAGE_LENGTH), -1)};
+    grpc_channel_args server_channel_args = {GPR_ARRAY_SIZE(server_args),
+                                             server_args};
+    server_ = grpc_server_create(&server_channel_args, nullptr);
+    grpc_server_register_completion_queue(server_, cq_, nullptr);
+    grpc_server_credentials* server_creds =
+        grpc_insecure_server_credentials_create();
+    GPR_ASSERT(grpc_server_add_http2_port(server_, server_address.c_str(),
+                                          server_creds));
+    grpc_server_credentials_release(server_creds);
+    grpc_server_start(server_);
+    // create the channel (bdp pings are enabled by default)
+    grpc_arg client_args[] = {
+        grpc_channel_arg_integer_create(
+            const_cast<char*>(GRPC_ARG_HTTP2_MAX_PINGS_WITHOUT_DATA), 0),
+        grpc_channel_arg_integer_create(
+            const_cast<char*>(GRPC_ARG_KEEPALIVE_PERMIT_WITHOUT_CALLS), 1),
+        grpc_channel_arg_integer_create(
+            const_cast<char*>(GRPC_ARG_MAX_RECEIVE_MESSAGE_LENGTH), -1),
+        grpc_channel_arg_integer_create(
+            const_cast<char*>(GRPC_ARG_MAX_SEND_MESSAGE_LENGTH), -1)};
+    grpc_channel_args client_channel_args = {GPR_ARRAY_SIZE(client_args),
+                                             client_args};
+    grpc_channel_credentials* creds = grpc_insecure_credentials_create();
+    channel_ = grpc_channel_create(server_address.c_str(), creds,
+                                   &client_channel_args);
+    grpc_channel_credentials_release(creds);
+    VerifyChannelReady(channel_, cq_);
+    g_target_initial_window_size_mocker->Reset();
+  }
+
+  void TearDown() override {
+    // shutdown and destroy the client and server
+    grpc_channel_destroy(channel_);
+    ServerShutdownAndDestroy(server_, cq_);
+    grpc_completion_queue_shutdown(cq_);
+    while (grpc_completion_queue_next(cq_, gpr_inf_future(GPR_CLOCK_REALTIME),
+                                      nullptr)
+               .type != GRPC_QUEUE_SHUTDOWN) {
+    }
+    grpc_completion_queue_destroy(cq_);
+  }
+
+  grpc_server* server_ = nullptr;
+  grpc_channel* channel_ = nullptr;
+  grpc_completion_queue* cq_ = nullptr;
+};
+
+TEST_F(FlowControlTest,
+       TestLargeWindowSizeUpdatesDoNotCauseIllegalFlowControlWindows) {
+  for (int i = 0; i < 10; ++i) {
+    PerformCallWithLargePayload(channel_, server_, cq_);
+    VerifyChannelConnected(channel_, cq_);
+  }
 }
 
-TEST(FlowControl, NoUpdateWithoutReader) {
-  ExecCtx exec_ctx;
-  TransportFlowControl tfc("test", true, g_memory_owner);
-  StreamFlowControl sfc(&tfc);
-  for (int i = 0; i < 65535; i++) {
-    EXPECT_EQ(sfc.RecvData(1), absl::OkStatus());
-    EXPECT_EQ(sfc.MakeAction().send_stream_update(),
-              FlowControlAction::Urgency::NO_ACTION_NEEDED);
+TEST_F(FlowControlTest, TestWindowSizeUpdatesDoNotCauseStalledStreams) {
+  g_target_initial_window_size_mocker->AlternateTargetInitialWindowSizes();
+  for (int i = 0; i < 100; ++i) {
+    PerformCallWithLargePayload(channel_, server_, cq_);
+    VerifyChannelConnected(channel_, cq_);
   }
-  // Empty window needing 1 byte to progress should trigger an immediate read.
-  sfc.UpdateProgress(1);
-  EXPECT_EQ(sfc.min_progress_size(), 1);
-  EXPECT_EQ(sfc.MakeAction().send_stream_update(),
-            FlowControlAction::Urgency::UPDATE_IMMEDIATELY);
-  EXPECT_GT(sfc.MaybeSendUpdate(), 0);
 }
 
-}  // namespace chttp2
-}  // namespace grpc_core
+}  // namespace
 
 int main(int argc, char** argv) {
   ::testing::InitGoogleTest(&argc, argv);
-  return RUN_ALL_TESTS();
+  // Make sure that we will have an active poller on all client-side fd's that
+  // are capable of sending and receiving even in the case that we don't have an
+  // active RPC operation on the fd.
+  GPR_GLOBAL_CONFIG_SET(grpc_client_channel_backup_poll_interval_ms, 1);
+  grpc_core::chttp2::g_test_only_transport_flow_control_window_check = true;
+  g_target_initial_window_size_mocker = new TransportTargetWindowSizeMocker();
+  grpc_core::chttp2::g_test_only_transport_target_window_estimates_mocker =
+      g_target_initial_window_size_mocker;
+  grpc::testing::TestEnvironment env(&argc, argv);
+  grpc_init();
+  auto result = RUN_ALL_TESTS();
+  grpc_shutdown();
+  return result;
 }
diff --git a/test/core/transport/chttp2/remove_stream_from_stalled_lists_test.cc b/test/core/transport/chttp2/remove_stream_from_stalled_lists_test.cc
index ea381c3a47..7731c1eb0d 100644
--- a/test/core/transport/chttp2/remove_stream_from_stalled_lists_test.cc
+++ b/test/core/transport/chttp2/remove_stream_from_stalled_lists_test.cc
@@ -143,141 +143,144 @@ void FinishCall(grpc_call* call, grpc_completion_queue* cq) {
 class TestServer {
  public:
   explicit TestServer() {
     cq_ = grpc_completion_queue_create_for_next(nullptr);
     server_ = grpc_server_create(nullptr, nullptr);
     address_ = grpc_core::JoinHostPort("[::1]", grpc_pick_unused_port_or_die());
     grpc_server_register_completion_queue(server_, cq_, nullptr);
     grpc_server_credentials* server_creds =
         grpc_insecure_server_credentials_create();
     GPR_ASSERT(
         grpc_server_add_http2_port(server_, address_.c_str(), server_creds));
     grpc_server_credentials_release(server_creds);
     grpc_server_start(server_);
     accept_thread_ = std::thread(std::bind(&TestServer::AcceptThread, this));
   }
 
   int ShutdownAndGetNumCallsHandled() {
     {
       // prevent the server from requesting any more calls
       grpc_core::MutexLock lock(&shutdown_mu_);
       shutdown_ = true;
     }
     grpc_server_shutdown_and_notify(server_, cq_, this /* tag */);
     accept_thread_.join();
     grpc_server_destroy(server_);
     grpc_completion_queue_shutdown(cq_);
     while (grpc_completion_queue_next(cq_, gpr_inf_future(GPR_CLOCK_REALTIME),
                                       nullptr)
                .type != GRPC_QUEUE_SHUTDOWN) {
     }
     grpc_completion_queue_destroy(cq_);
     return num_calls_handled_;
   }
 
   std::string address() const { return address_; }
 
  private:
   void AcceptThread() {
     std::vector<std::thread> rpc_threads;
     bool got_shutdown_and_notify_tag = false;
     while (!got_shutdown_and_notify_tag) {
       void* request_call_tag = &rpc_threads;
       grpc_call_details call_details;
       grpc_call_details_init(&call_details);
       grpc_call* call = nullptr;
       grpc_completion_queue* call_cq = nullptr;
       grpc_metadata_array request_metadata_recv;
       grpc_metadata_array_init(&request_metadata_recv);
       {
         grpc_core::MutexLock lock(&shutdown_mu_);
         if (!shutdown_) {
           call_cq = grpc_completion_queue_create_for_next(nullptr);
           grpc_call_error error = grpc_server_request_call(
               server_, &call, &call_details, &request_metadata_recv, call_cq,
               cq_, request_call_tag);
           GPR_ASSERT(error == GRPC_CALL_OK);
         }
       }
       grpc_event event = grpc_completion_queue_next(
           cq_, gpr_inf_future(GPR_CLOCK_REALTIME), nullptr);
       GPR_ASSERT(event.type == GRPC_OP_COMPLETE);
       grpc_call_details_destroy(&call_details);
       grpc_metadata_array_destroy(&request_metadata_recv);
       if (event.success) {
         if (event.tag == request_call_tag) {
           // HandleOneRpc takes ownership of its parameters
           num_calls_handled_++;
           rpc_threads.push_back(
               std::thread(std::bind(&TestServer::HandleOneRpc, call, call_cq)));
         } else if (event.tag == this /* shutdown_and_notify tag */) {
           grpc_core::MutexLock lock(&shutdown_mu_);
           GPR_ASSERT(shutdown_);
           GPR_ASSERT(call_cq == nullptr);
           got_shutdown_and_notify_tag = true;
         } else {
           GPR_ASSERT(0);
         }
       } else {
         grpc_core::MutexLock lock(&shutdown_mu_);
         GPR_ASSERT(shutdown_);
         grpc_completion_queue_destroy(call_cq);
       }
     }
     gpr_log(GPR_INFO, "test server shutdown, joining RPC threads...");
     for (auto& t : rpc_threads) {
       t.join();
     }
     gpr_log(GPR_INFO, "test server threads all finished!");
   }
 
   static void HandleOneRpc(grpc_call* call, grpc_completion_queue* call_cq) {
     // Send a large enough payload to get us stalled on outgoing flow control
-    std::string send_payload(4 * 1024 * 1024, 'a');
+    std::string send_payload = "";
+    for (int i = 0; i < 4 * 1e6; i++) {
+      send_payload += "a";
+    }
     grpc_slice request_payload_slice =
         grpc_slice_from_copied_string(send_payload.c_str());
     grpc_byte_buffer* request_payload =
         grpc_raw_byte_buffer_create(&request_payload_slice, 1);
     void* tag = call_cq;
     grpc_op ops[2];
     grpc_op* op;
     memset(ops, 0, sizeof(ops));
     op = ops;
     op->op = GRPC_OP_SEND_INITIAL_METADATA;
     op->data.send_initial_metadata.count = 0;
     op->reserved = nullptr;
     op++;
     op->op = GRPC_OP_SEND_MESSAGE;
     op->data.send_message.send_message = request_payload;
     op->reserved = nullptr;
     op++;
     grpc_call_error error = grpc_call_start_batch(
         call, ops, static_cast<size_t>(op - ops), tag, nullptr);
     GPR_ASSERT(GRPC_CALL_OK == error);
     std::thread poller([call_cq]() {
       // poll the connection so that we actively pick up bytes off the wire,
       // including settings frames with window size increases
       while (grpc_completion_queue_next(
                  call_cq, gpr_inf_future(GPR_CLOCK_REALTIME), nullptr)
                  .type != GRPC_QUEUE_SHUTDOWN) {
       }
     });
     grpc_call_cancel(call, nullptr);
     grpc_call_unref(call);
     grpc_completion_queue_shutdown(call_cq);
     poller.join();
     grpc_completion_queue_destroy(call_cq);
     grpc_byte_buffer_destroy(request_payload);
     grpc_slice_unref(request_payload_slice);
   }
 
   grpc_server* server_;
   grpc_completion_queue* cq_;
   std::string address_;
   std::thread accept_thread_;
   int num_calls_handled_ = 0;
   grpc_core::Mutex shutdown_mu_;
   bool shutdown_ = false;
 };
 
 // Perform a simple RPC where the server cancels the request with
 // grpc_call_cancel_with_status
diff --git a/test/cpp/interop/client_helper.h b/test/cpp/interop/client_helper.h
index 3b7ec7a540..f361ca767a 100644
--- a/test/cpp/interop/client_helper.h
+++ b/test/cpp/interop/client_helper.h
@@ -1,33 +1,33 @@
 /*
  *
  * Copyright 2015 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #ifndef GRPC_TEST_CPP_INTEROP_CLIENT_HELPER_H
 #define GRPC_TEST_CPP_INTEROP_CLIENT_HELPER_H
 
 #include <functional>
 #include <memory>
 #include <unordered_map>
 
 #include <grpcpp/channel.h>
 #include <grpcpp/client_context.h>
 
 #include "src/core/lib/surface/call_test_only.h"
-#include "src/core/lib/transport/transport.h"
+#include "src/core/lib/transport/byte_stream.h"
 
 namespace grpc {
 namespace testing {
diff --git a/test/cpp/interop/http2_client.cc b/test/cpp/interop/http2_client.cc
index dc1a558143..d890d6a3ac 100644
--- a/test/cpp/interop/http2_client.cc
+++ b/test/cpp/interop/http2_client.cc
@@ -1,35 +1,36 @@
 /*
  *
  * Copyright 2016 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #include "test/cpp/interop/http2_client.h"
 
 #include <thread>
 
 #include "absl/flags/flag.h"
 
 #include <grpc/support/alloc.h>
 #include <grpc/support/log.h>
 #include <grpcpp/channel.h>
 #include <grpcpp/client_context.h>
 
 #include "src/core/lib/gpr/string.h"
 #include "src/core/lib/gpr/useful.h"
+#include "src/core/lib/transport/byte_stream.h"
 #include "src/proto/grpc/testing/messages.pb.h"
 #include "src/proto/grpc/testing/test.grpc.pb.h"
 #include "test/cpp/util/create_test_channel.h"
 #include "test/cpp/util/test_config.h"
diff --git a/test/cpp/interop/server_helper.cc b/test/cpp/interop/server_helper.cc
index b6f9faaff1..5f1dcd5c16 100644
--- a/test/cpp/interop/server_helper.cc
+++ b/test/cpp/interop/server_helper.cc
@@ -1,32 +1,32 @@
 /*
  *
  * Copyright 2015 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #include "test/cpp/interop/server_helper.h"
 
 #include <memory>
 
 #include "absl/flags/declare.h"
 #include "absl/flags/flag.h"
 
 #include <grpcpp/security/server_credentials.h>
 
 #include "src/core/lib/surface/call_test_only.h"
-#include "src/core/lib/transport/transport.h"
+#include "src/core/lib/transport/byte_stream.h"
 #include "test/cpp/util/test_credentials_provider.h"
 
 ABSL_DECLARE_FLAG(bool, use_alts);
diff --git a/test/cpp/interop/xds_interop_server.cc b/test/cpp/interop/xds_interop_server.cc
index 1b3724bd47..9d278c67ca 100644
--- a/test/cpp/interop/xds_interop_server.cc
+++ b/test/cpp/interop/xds_interop_server.cc
@@ -1,44 +1,44 @@
 /*
  *
  * Copyright 2020 gRPC authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 
 #include <sstream>
 
 #include "absl/flags/flag.h"
 #include "absl/strings/str_cat.h"
 #include "absl/synchronization/mutex.h"
 
 #include <grpc/grpc.h>
 #include <grpc/support/log.h>
 #include <grpc/support/time.h>
 #include <grpcpp/ext/admin_services.h>
 #include <grpcpp/ext/proto_server_reflection_plugin.h>
 #include <grpcpp/health_check_service_interface.h>
 #include <grpcpp/server.h>
 #include <grpcpp/server_builder.h>
 #include <grpcpp/server_context.h>
 #include <grpcpp/xds_server_builder.h>
 
 #include "src/core/lib/gpr/string.h"
 #include "src/core/lib/iomgr/gethostname.h"
-#include "src/core/lib/transport/transport.h"
+#include "src/core/lib/transport/byte_stream.h"
 #include "src/proto/grpc/testing/empty.pb.h"
 #include "src/proto/grpc/testing/messages.pb.h"
 #include "src/proto/grpc/testing/test.grpc.pb.h"
 #include "test/core/util/test_config.h"
 #include "test/cpp/end2end/test_health_check_service_impl.h"
 #include "test/cpp/util/test_config.h"
diff --git a/test/cpp/microbenchmarks/bm_chttp2_transport.cc b/test/cpp/microbenchmarks/bm_chttp2_transport.cc
index 921b289d41..8af3529505 100644
--- a/test/cpp/microbenchmarks/bm_chttp2_transport.cc
+++ b/test/cpp/microbenchmarks/bm_chttp2_transport.cc
@@ -415,75 +415,78 @@ BENCHMARK(BM_TransportEmptyOp);
 static void BM_TransportStreamSend(benchmark::State& state) {
   TrackCounters track_counters;
   grpc_core::ExecCtx exec_ctx;
   Fixture f(grpc::ChannelArguments(), true);
   auto* s = new Stream(&f);
   s->Init(state);
   grpc_transport_stream_op_batch op;
   grpc_transport_stream_op_batch_payload op_payload(nullptr);
   auto reset_op = [&]() {
     op = {};
     op.payload = &op_payload;
   };
   // Create the send_message payload slice.
   // Note: We use grpc_slice_malloc_large() instead of grpc_slice_malloc()
   // to force the slice to be refcounted, so that it remains alive when it
   // is unreffed after each send_message op.
   grpc_slice send_slice = grpc_slice_malloc_large(state.range(0));
   memset(GRPC_SLICE_START_PTR(send_slice), 0, GRPC_SLICE_LENGTH(send_slice));
-  grpc_core::SliceBuffer send_stream;
+  grpc_core::ManualConstructor<grpc_core::SliceBufferByteStream> send_stream;
   auto arena = grpc_core::MakeScopedArena(1024, g_memory_allocator);
   grpc_metadata_batch b(arena.get());
   RepresentativeClientInitialMetadata::Prepare(&b);
 
   gpr_event* bm_done = new gpr_event;
   gpr_event_init(bm_done);
 
   std::unique_ptr<TestClosure> c =
       MakeTestClosure([&](grpc_error_handle /*error*/) {
         if (!state.KeepRunning()) {
           gpr_event_set(bm_done, reinterpret_cast<void*>(1));
           return;
         }
-        send_stream.Clear();
-        send_stream.Append(grpc_core::Slice(grpc_slice_ref(send_slice)));
+        grpc_slice_buffer send_buffer;
+        grpc_slice_buffer_init(&send_buffer);
+        grpc_slice_buffer_add(&send_buffer, grpc_slice_ref(send_slice));
+        send_stream.Init(&send_buffer, 0);
+        grpc_slice_buffer_destroy(&send_buffer);
         // force outgoing window to be yuge
-        s->chttp2_stream()->flow_control.TestOnlyForceHugeWindow();
-        f.chttp2_transport()->flow_control.TestOnlyForceHugeWindow();
+        s->chttp2_stream()->flow_control->TestOnlyForceHugeWindow();
+        f.chttp2_transport()->flow_control->TestOnlyForceHugeWindow();
         reset_op();
         op.on_complete = c.get();
         op.send_message = true;
-        op.payload->send_message.send_message = &send_stream;
+        op.payload->send_message.send_message.reset(send_stream.get());
         s->Op(&op);
       });
 
   reset_op();
   op.send_initial_metadata = true;
   op.payload->send_initial_metadata.send_initial_metadata = &b;
   op.on_complete = c.get();
   s->Op(&op);
 
   f.FlushExecCtx();
   gpr_event_wait(bm_done, gpr_inf_future(GPR_CLOCK_REALTIME));
   done_events.emplace_back(bm_done);
 
   reset_op();
   op.cancel_stream = true;
   op.payload->cancel_stream.cancel_error = GRPC_ERROR_CANCELLED;
   gpr_event* stream_cancel_done = new gpr_event;
   gpr_event_init(stream_cancel_done);
   std::unique_ptr<TestClosure> stream_cancel_closure =
       MakeTestClosure([&](grpc_error_handle error) {
         GPR_ASSERT(error == GRPC_ERROR_NONE);
         gpr_event_set(stream_cancel_done, reinterpret_cast<void*>(1));
       });
   op.on_complete = stream_cancel_closure.get();
   s->Op(&op);
   f.FlushExecCtx();
   gpr_event_wait(stream_cancel_done, gpr_inf_future(GPR_CLOCK_REALTIME));
   done_events.emplace_back(stream_cancel_done);
   s->DestroyThen(
       MakeOnceClosure([s](grpc_error_handle /*error*/) { delete s; }));
   f.FlushExecCtx();
   track_counters.Finish(state);
   grpc_slice_unref(send_slice);
 }
@@ -549,89 +552,123 @@ static grpc_slice CreateIncomingDataSlice(size_t length, size_t frame_size) {
 static void BM_TransportStreamRecv(benchmark::State& state) {
   TrackCounters track_counters;
   grpc_core::ExecCtx exec_ctx;
   Fixture f(grpc::ChannelArguments(), true);
   auto* s = new Stream(&f);
   s->Init(state);
   grpc_transport_stream_op_batch_payload op_payload(nullptr);
   grpc_transport_stream_op_batch op;
-  absl::optional<grpc_core::SliceBuffer> recv_stream;
+  grpc_core::OrphanablePtr<grpc_core::ByteStream> recv_stream;
   grpc_slice incoming_data = CreateIncomingDataSlice(state.range(0), 16384);
 
   auto reset_op = [&]() {
     op = {};
     op.payload = &op_payload;
   };
 
   auto arena = grpc_core::MakeScopedArena(1024, g_memory_allocator);
   grpc_metadata_batch b(arena.get());
   RepresentativeClientInitialMetadata::Prepare(&b);
 
   std::unique_ptr<TestClosure> do_nothing =
       MakeTestClosure([](grpc_error_handle /*error*/) {});
 
   uint32_t received;
 
+  std::unique_ptr<TestClosure> drain_start;
+  std::unique_ptr<TestClosure> drain;
+  std::unique_ptr<TestClosure> drain_continue;
+  grpc_slice recv_slice;
+
   std::unique_ptr<TestClosure> c =
       MakeTestClosure([&](grpc_error_handle /*error*/) {
         if (!state.KeepRunning()) return;
         // force outgoing window to be yuge
-        s->chttp2_stream()->flow_control.TestOnlyForceHugeWindow();
-        f.chttp2_transport()->flow_control.TestOnlyForceHugeWindow();
+        s->chttp2_stream()->flow_control->TestOnlyForceHugeWindow();
+        f.chttp2_transport()->flow_control->TestOnlyForceHugeWindow();
         received = 0;
         reset_op();
         op.on_complete = do_nothing.get();
         op.recv_message = true;
         op.payload->recv_message.recv_message = &recv_stream;
         op.payload->recv_message.call_failed_before_recv_message = nullptr;
-        op.payload->recv_message.recv_message_ready = c.get();
+        op.payload->recv_message.recv_message_ready = drain_start.get();
         s->Op(&op);
         f.PushInput(grpc_slice_ref(incoming_data));
       });
 
+  drain_start = MakeTestClosure([&](grpc_error_handle /*error*/) {
+    if (recv_stream == nullptr) {
+      GPR_ASSERT(!state.KeepRunning());
+      return;
+    }
+    grpc_core::Closure::Run(DEBUG_LOCATION, drain.get(), GRPC_ERROR_NONE);
+  });
+
+  drain = MakeTestClosure([&](grpc_error_handle /*error*/) {
+    do {
+      if (received == recv_stream->length()) {
+        recv_stream.reset();
+        grpc_core::ExecCtx::Run(DEBUG_LOCATION, c.get(), GRPC_ERROR_NONE);
+        return;
+      }
+    } while (recv_stream->Next(recv_stream->length() - received,
+                               drain_continue.get()) &&
+             GRPC_ERROR_NONE == recv_stream->Pull(&recv_slice) &&
+             (received += GRPC_SLICE_LENGTH(recv_slice),
+              grpc_slice_unref_internal(recv_slice), true));
+  });
+
+  drain_continue = MakeTestClosure([&](grpc_error_handle /*error*/) {
+    GPR_ASSERT(GRPC_LOG_IF_ERROR("Pull", recv_stream->Pull(&recv_slice)));
+    received += GRPC_SLICE_LENGTH(recv_slice);
+    grpc_slice_unref_internal(recv_slice);
+    grpc_core::Closure::Run(DEBUG_LOCATION, drain.get(), GRPC_ERROR_NONE);
+  });
+
   reset_op();
   auto b_recv = absl::make_unique<grpc_metadata_batch>(arena.get());
   op.send_initial_metadata = true;
   op.payload->send_initial_metadata.send_initial_metadata = &b;
   op.recv_initial_metadata = true;
   op.payload->recv_initial_metadata.recv_initial_metadata = b_recv.get();
   op.payload->recv_initial_metadata.recv_initial_metadata_ready =
       do_nothing.get();
   op.on_complete = c.get();
   s->Op(&op);
   f.PushInput(SLICE_FROM_BUFFER(
       "\x00\x00\x00\x04\x00\x00\x00\x00\x00"
       // Generated using:
       // tools/codegen/core/gen_header_frame.py <
       // test/cpp/microbenchmarks/representative_server_initial_metadata.headers
       "\x00\x00X\x01\x04\x00\x00\x00\x01"
       "\x10\x07:status\x03"
       "200"
       "\x10\x0c"
       "content-type\x10"
       "application/grpc"
       "\x10\x14grpc-accept-encoding\x15identity,deflate,gzip"));
 
   f.FlushExecCtx();
   reset_op();
   op.cancel_stream = true;
   op.payload->cancel_stream.cancel_error = GRPC_ERROR_CANCELLED;
   gpr_event* stream_cancel_done = new gpr_event;
   gpr_event_init(stream_cancel_done);
   std::unique_ptr<TestClosure> stream_cancel_closure =
       MakeTestClosure([&](grpc_error_handle error) {
         GPR_ASSERT(error == GRPC_ERROR_NONE);
         gpr_event_set(stream_cancel_done, reinterpret_cast<void*>(1));
       });
   op.on_complete = stream_cancel_closure.get();
   s->Op(&op);
   f.FlushExecCtx();
   gpr_event_wait(stream_cancel_done, gpr_inf_future(GPR_CLOCK_REALTIME));
   done_events.emplace_back(stream_cancel_done);
   s->DestroyThen(MakeOnceClosure([s, &b_recv](grpc_error_handle /*error*/) {
     b_recv.reset();
     delete s;
   }));
   f.FlushExecCtx();
   track_counters.Finish(state);
   grpc_slice_unref(incoming_data);
 }
diff --git a/tools/doxygen/Doxyfile.c++.internal b/tools/doxygen/Doxyfile.c++.internal
index 4f4f38203b..a30c23a5a1 100644
--- a/tools/doxygen/Doxyfile.c++.internal
+++ b/tools/doxygen/Doxyfile.c++.internal
@@ -2403,6 +2403,8 @@ src/core/lib/surface/validate_metadata.h \
 src/core/lib/surface/version.cc \
 src/core/lib/transport/bdp_estimator.cc \
 src/core/lib/transport/bdp_estimator.h \
+src/core/lib/transport/byte_stream.cc \
+src/core/lib/transport/byte_stream.h \
 src/core/lib/transport/connectivity_state.cc \
 src/core/lib/transport/connectivity_state.h \
 src/core/lib/transport/error_utils.cc \
diff --git a/tools/doxygen/Doxyfile.core.internal b/tools/doxygen/Doxyfile.core.internal
index 18d1b78c77..6d42d7425c 100644
--- a/tools/doxygen/Doxyfile.core.internal
+++ b/tools/doxygen/Doxyfile.core.internal
@@ -2199,6 +2199,8 @@ src/core/lib/surface/version.cc \
 src/core/lib/transport/README.md \
 src/core/lib/transport/bdp_estimator.cc \
 src/core/lib/transport/bdp_estimator.h \
+src/core/lib/transport/byte_stream.cc \
+src/core/lib/transport/byte_stream.h \
 src/core/lib/transport/connectivity_state.cc \
 src/core/lib/transport/connectivity_state.h \
 src/core/lib/transport/error_utils.cc \
diff --git a/tools/run_tests/generated/tests.json b/tools/run_tests/generated/tests.json
index b89085a9b2..011754afce 100644
--- a/tools/run_tests/generated/tests.json
+++ b/tools/run_tests/generated/tests.json
@@ -1,7900 +1,7924 @@
 
 
 [
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "alloc_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "alpn_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "alts_counter_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "alts_crypt_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "alts_crypter_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "alts_frame_protector_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "alts_grpc_record_protocol_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "alts_handshaker_client_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "alts_iovec_record_protocol_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "alts_security_connector_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "alts_tsi_handshaker_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "alts_tsi_utils_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "alts_zero_copy_grpc_protector_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "arena_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "auth_context_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "b64_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "bad_server_response_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "bad_ssl_alpn_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "bad_ssl_cert_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "bin_decoder_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "bin_encoder_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "buffer_list_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "c_slice_buffer_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "channel_stack_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "check_gcp_environment_linux_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "check_gcp_environment_windows_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "client_ssl_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "cmdline_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "combiner_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "compression_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "concurrent_connectivity_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "connection_refused_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "cpu_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "dns_resolver_cooldown_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "dns_resolver_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "dualstack_socket_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "endpoint_pair_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "env_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "fake_resolver_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "fake_transport_security_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "fd_conservation_posix_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "fd_posix_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "fling_stream_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "fling_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "fork_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "format_request_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "frame_handler_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "goaway_server_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "grpc_alts_credentials_options_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "grpc_byte_buffer_reader_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "grpc_completion_queue_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "grpc_ipv6_loopback_available_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "handshake_server_with_readahead_handshaker_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "histogram_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "host_port_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "hpack_encoder_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "inproc_callback_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "invalid_call_argument_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "json_token_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "jwt_verifier_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "lame_client_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "load_file_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
+  {
+    "args": [],
+    "benchmark": false,
+    "ci_platforms": [
+      "linux",
+      "mac",
+      "posix",
+      "windows"
+    ],
+    "cpu_cost": 1.0,
+    "exclude_configs": [],
+    "exclude_iomgrs": [],
+    "flaky": false,
+    "gtest": false,
+    "language": "c",
+    "name": "manual_constructor_test",
+    "platforms": [
+      "linux",
+      "mac",
+      "posix",
+      "windows"
+    ],
+    "uses_polling": false
+  },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "memory_quota_stress_test",
     "platforms": [
       "linux",
       "posix"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "message_compress_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "minimal_stack_is_minimal_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "mpmcqueue_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "mpscq_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "multiple_server_queues_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "murmur_hash_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "no_server_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "num_external_connectivity_watchers_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "parse_address_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "parse_address_with_named_scope_id_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "parser_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "percent_encoding_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "public_headers_must_be_c89",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [
       "--resolver=ares"
     ],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "resolve_address_using_ares_resolver_posix_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [
       "--resolver=native"
     ],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "resolve_address_using_native_resolver_posix_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "secure_channel_create_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "secure_endpoint_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "security_connector_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "server_ssl_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "server_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "slice_split_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "slice_string_helpers_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "sockaddr_resolver_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "socket_utils_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "spinlock_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "ssl_credentials_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "ssl_transport_security_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "status_conversion_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "stream_map_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "string_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "sync_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "tcp_client_posix_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "tcp_posix_test",
     "platforms": [
       "linux",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "tcp_server_posix_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "test_core_gpr_time_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "thd_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "threadpool_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "time_averaged_stats_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "timer_heap_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "timer_list_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "transport_security_common_api_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "transport_security_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": false,
     "language": "c",
     "name": "varint_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "activity_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "address_sorting_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "address_sorting_test_unsecure",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "admin_services_end2end_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "alarm_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "alts_concurrent_connectivity_test",
     "platforms": [
       "linux",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "alts_util_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "arena_promise_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "async_end2end_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "auth_property_iterator_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "authorization_matchers_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "authorization_policy_provider_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "avl_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "aws_request_signer_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "backoff_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "bad_streaming_id_bad_client_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "badreq_bad_client_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "bdp_estimator_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "binder_resolver_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "binder_server_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "binder_transport_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "bitset_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "byte_buffer_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
+  {
+    "args": [],
+    "benchmark": false,
+    "ci_platforms": [
+      "linux",
+      "mac",
+      "posix",
+      "windows"
+    ],
+    "cpu_cost": 1.0,
+    "exclude_configs": [],
+    "exclude_iomgrs": [],
+    "flaky": false,
+    "gtest": true,
+    "language": "c++",
+    "name": "byte_stream_test",
+    "platforms": [
+      "linux",
+      "mac",
+      "posix",
+      "windows"
+    ],
+    "uses_polling": false
+  },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "call_finalization_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "call_push_pull_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "cancel_ares_query_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "cel_authorization_engine_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "certificate_provider_registry_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "certificate_provider_store_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "channel_args_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "channel_arguments_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "channel_creds_registry_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "channel_filter_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "channel_stack_builder_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "channel_trace_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "channelz_registry_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "channelz_service_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "channelz_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "chunked_vector_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "cli_call_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "client_authority_filter_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "client_callback_end2end_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "client_context_test_peer_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "client_interceptors_end2end_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "codegen_test_full",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "codegen_test_minimal",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "connection_prefix_bad_client_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "connectivity_state_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "context_allocator_end2end_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "context_list_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "context_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "core_configuration_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "cpp_impl_of_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "crl_ssl_transport_security_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "delegating_channel_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "destroy_grpclb_channel_with_active_connect_stress_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "dual_ref_counted_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "duplicate_header_bad_client_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "end2end_binder_transport_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "endpoint_binder_pool_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "endpoint_config_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "error_details_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "error_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "error_utils_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "evaluate_args_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "examine_stack_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "exception_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "exec_ctx_wakeup_scheduler_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "fake_binder_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "file_watcher_certificate_provider_factory_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "filter_end2end_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
-  {
-    "args": [],
-    "benchmark": false,
-    "ci_platforms": [
-      "linux",
-      "mac",
-      "posix",
-      "windows"
-    ],
-    "cpu_cost": 1.0,
-    "exclude_configs": [],
-    "exclude_iomgrs": [],
-    "flaky": false,
-    "gtest": true,
-    "language": "c++",
-    "name": "flow_control_end2end_test",
-    "platforms": [
-      "linux",
-      "mac",
-      "posix",
-      "windows"
-    ],
-    "uses_polling": true
-  },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "flow_control_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "for_each_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "generic_end2end_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "global_config_env_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "global_config_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "google_c2p_resolver_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "google_mesh_ca_certificate_provider_factory_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "graceful_shutdown_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "grpc_authorization_engine_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "grpc_authorization_policy_provider_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "grpc_authz_end2end_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "grpc_tls_certificate_distributor_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "grpc_tls_certificate_provider_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "grpc_tls_certificate_verifier_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "grpc_tls_credentials_options_comparator_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "grpc_tls_credentials_options_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "grpc_tool_test",
     "platforms": [
       "linux",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "grpclb_api_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "h2_ssl_session_reuse_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "head_of_line_blocking_bad_client_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "headers_bad_client_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "health_service_end2end_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "hpack_parser_table_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "hpack_parser_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "http_proxy_mapper_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "httpcli_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "httpscli_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "hybrid_end2end_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "idle_filter_state_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "if_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "init_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "initial_settings_frame_bad_client_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "insecure_security_connector_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "iomgr_event_engine_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "join_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "json_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "large_metadata_bad_client_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "latch_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "lb_get_cpu_stats_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "lb_load_data_store_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "linux_system_roots_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "log_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "loop_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "match_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "matchers_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "memory_quota_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "message_allocator_end2end_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "metadata_map_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "miscompile_with_no_unique_address_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "mock_stream_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "mock_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "nonblocking_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "observable_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "orca_service_end2end_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "orphanable_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "out_of_bounds_bad_client_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "overload_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "parsed_metadata_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "pid_controller_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "pipe_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "poll_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "port_sharing_end2end_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "promise_factory_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "promise_map_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "promise_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "proto_server_reflection_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "proto_utils_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "race_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "raw_end2end_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "rbac_service_config_parser_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "rbac_translator_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "ref_counted_ptr_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "ref_counted_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "remove_stream_from_stalled_lists_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "resolve_address_using_ares_resolver_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "resolve_address_using_native_resolver_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "resource_quota_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "retry_throttle_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "rls_end2end_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "rls_lb_config_parser_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "secure_auth_context_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "seq_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "server_builder_plugin_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "server_builder_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "server_builder_with_socket_mutator_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "server_chttp2_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "server_config_selector_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "server_context_test_spouse_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "server_early_return_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "server_interceptors_end2end_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "server_registered_method_bad_client_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "server_request_call_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "service_config_end2end_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "service_config_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "shutdown_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "simple_request_bad_client_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "single_set_ptr_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "sleep_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "smoke_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "sockaddr_utils_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "stack_tracer_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "stat_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "stats_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "status_helper_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "status_util_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "stranded_event_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "streaming_throughput_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "streams_not_seen_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "string_ref_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "table_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "test_core_event_engine_slice_buffer_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "test_core_gprpp_time_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "test_core_security_credentials_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "test_core_slice_slice_buffer_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "test_core_slice_slice_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "test_cpp_client_credentials_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "test_cpp_server_credentials_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "test_cpp_util_slice_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "test_cpp_util_time_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "thread_manager_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "thread_quota_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "thread_stress_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "time_util_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "timeout_encoding_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "timer_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "tls_certificate_verifier_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "tls_key_export_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "tls_security_connector_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "tls_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "too_many_pings_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "transport_stream_receiver_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "try_join_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "try_seq_metadata_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "try_seq_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "unique_type_name_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "unknown_frame_bad_client_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "uri_parser_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "useful_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "window_overflow_bad_client_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "wire_reader_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "wire_writer_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "work_serializer_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "writes_per_rpc_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "xds_bootstrap_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "xds_certificate_provider_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "xds_core_end2end_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "xds_credentials_end2end_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "xds_credentials_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "xds_csds_end2end_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "xds_fault_injection_end2end_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "xds_lb_policy_registry_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "uses_polling": false
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "xds_outlier_detection_end2end_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "benchmark": false,
     "ci_platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "cpu_cost": 1.0,
     "exclude_configs": [],
     "exclude_iomgrs": [],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "xds_rls_end2end_test",
     "platforms": [
       "linux",
       "mac",
       "posix"
     ],
     "uses_polling": true
   },
   {
     "args": [],
     "boringssl": true,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "defaults": "boringssl",
     "exclude_configs": [
       "asan",
       "ubsan"
     ],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "boringssl_ssl_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ]
   },
   {
     "args": [],
     "boringssl": true,
     "ci_platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ],
     "cpu_cost": 1.0,
     "defaults": "boringssl",
     "exclude_configs": [
       "asan",
       "ubsan"
     ],
     "flaky": false,
     "gtest": true,
     "language": "c++",
     "name": "boringssl_crypto_test",
     "platforms": [
       "linux",
       "mac",
       "posix",
       "windows"
     ]
   }
 ]
