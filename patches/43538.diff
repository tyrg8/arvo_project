commit a8ccbafa6e0e86e319cd7439b725b0c692fc1ac1
Merge: 72cdb0af55 d136799ebf
Author: Dmitry Stogov <dmitry@zend.com>
Date:   Tue Jan 11 22:27:33 2022 +0300

    Merge branch 'PHP-8.1'
    
    * PHP-8.1:
      JIT: Fix incorrect flag check

diff --git a/ext/opcache/jit/zend_jit_x86.dasc b/ext/opcache/jit/zend_jit_x86.dasc
index 62395640ff..5bf0275944 100644
--- a/ext/opcache/jit/zend_jit_x86.dasc
+++ b/ext/opcache/jit/zend_jit_x86.dasc
@@ -6028,163 +6028,163 @@ static int zend_jit_fetch_dimension_address_inner(dasm_State **Dst, const zend_o
 static int zend_jit_simple_assign(dasm_State    **Dst,
                                   const zend_op  *opline,
                                   zend_jit_addr   var_addr,
                                   uint32_t        var_info,
                                   uint32_t        var_def_info,
                                   zend_uchar      val_type,
                                   zend_jit_addr   val_addr,
                                   uint32_t        val_info,
                                   zend_jit_addr   res_addr,
                                   int             in_cold,
                                   int             save_r1)
 /* Labels: 1,2,3 */
 {
 	zend_reg tmp_reg;
 
 	if (Z_MODE(var_addr) == IS_REG || Z_REG(var_addr) != ZREG_R0) {
 		tmp_reg = ZREG_R0;
 	} else {
 		/* ASSIGN_DIM */
 		tmp_reg = ZREG_FCARG1;
 	}
 
 	if (Z_MODE(val_addr) == IS_CONST_ZVAL) {
 		zval *zv = Z_ZV(val_addr);
 
 		if (!res_addr) {
 			|	ZVAL_COPY_CONST var_addr, var_info, var_def_info, zv, tmp_reg
 		} else {
 			|	ZVAL_COPY_CONST_2 var_addr, res_addr, var_info, var_def_info, zv, tmp_reg
 		}
 		if (Z_REFCOUNTED_P(zv)) {
 			if (!res_addr) {
 				|	ADDREF_CONST zv, Ra(tmp_reg)
 			} else {
 				|	ADDREF_CONST_2 zv, Ra(tmp_reg)
 			}
 		}
 	} else {
 		if (val_info & MAY_BE_UNDEF) {
 			if (in_cold) {
 				|	IF_NOT_ZVAL_TYPE val_addr, IS_UNDEF, >2
 			} else {
 				|	IF_ZVAL_TYPE val_addr, IS_UNDEF, >1
 				|.cold_code
 				|1:
 			}
 			|	// zend_error(E_WARNING, "Undefined variable $%s", ZSTR_VAL(CV_DEF_OF(EX_VAR_TO_NUM(opline->op1.var))));
 			if (save_r1) {
 				|	mov aword T1, FCARG1a // save
 			}
 			|	SET_ZVAL_TYPE_INFO var_addr, IS_NULL
 			if (res_addr) {
 				|	SET_ZVAL_TYPE_INFO res_addr, IS_NULL
 			}
 			if (opline) {
 				|	SET_EX_OPLINE opline, Ra(tmp_reg)
 			}
 			ZEND_ASSERT(Z_MODE(val_addr) == IS_MEM_ZVAL && Z_REG(val_addr) == ZREG_FP);
 			|	mov FCARG1d, Z_OFFSET(val_addr)
 			|	EXT_CALL zend_jit_undefined_op_helper, r0
 			|	test r0, r0
 			|	jz ->exception_handler_undef
 			if (save_r1) {
 				|	mov FCARG1a, aword T1 // restore
 			}
 			|	jmp >3
 			if (in_cold) {
 				|2:
 			} else {
 				|.code
 			}
 		}
 		if (val_info & MAY_BE_REF) {
 			if (val_type == IS_CV) {
 				ZEND_ASSERT(Z_REG(var_addr) != ZREG_R2);
 				if (Z_MODE(val_addr) != IS_MEM_ZVAL || Z_REG(val_addr) != ZREG_R2 || Z_OFFSET(val_addr) != 0) {
 					|	LOAD_ZVAL_ADDR r2, val_addr
 				}
 				|	ZVAL_DEREF r2, val_info
 				val_addr = ZEND_ADDR_MEM_ZVAL(ZREG_R2, 0);
 			} else {
 				zend_jit_addr ref_addr;
 				zend_reg type_reg = tmp_reg;
 
 				if (in_cold) {
 					|	IF_NOT_ZVAL_TYPE val_addr, IS_REFERENCE, >1
 				} else {
 					|	IF_ZVAL_TYPE val_addr, IS_REFERENCE, >1
 					|.cold_code
 					|1:
 				}
 				|	// zend_refcounted *ref = Z_COUNTED_P(retval_ptr);
 				|	GET_ZVAL_PTR r2, val_addr
 				|	GC_DELREF r2
 				|	// ZVAL_COPY_VALUE(return_value, &ref->value);
 				ref_addr = ZEND_ADDR_MEM_ZVAL(ZREG_R2, 8);
 				if (!res_addr) {
 					|	ZVAL_COPY_VALUE var_addr, var_info, ref_addr, val_info, type_reg, tmp_reg
 				} else {
 					|	ZVAL_COPY_VALUE_2 var_addr, var_info, res_addr, ref_addr, val_info, type_reg, tmp_reg
 				}
 				|	je >2
 				if (tmp_reg == ZREG_R0) {
 					|	IF_NOT_REFCOUNTED ah, >3
 				} else {
-					|	IF_NOT_FLAGS Rd(tmp_reg), IS_TYPE_REFCOUNTED, >3
+					|	IF_NOT_FLAGS Rd(tmp_reg), (IS_TYPE_REFCOUNTED << Z_TYPE_FLAGS_SHIFT), >3
 				}
 				|	GET_ZVAL_PTR Ra(tmp_reg), var_addr
 
 				if (!res_addr) {
 					|	GC_ADDREF Ra(tmp_reg)
 				} else {
 					|	add dword [Ra(tmp_reg)], 2
 				}
 				|	jmp >3
 				|2:
 				if (res_addr) {
 					if (tmp_reg == ZREG_R0) {
 						|	IF_NOT_REFCOUNTED ah, >2
 					} else {
-						|	IF_NOT_FLAGS Rd(tmp_reg), IS_TYPE_REFCOUNTED, >2
+						|	IF_NOT_FLAGS Rd(tmp_reg), (IS_TYPE_REFCOUNTED << Z_TYPE_FLAGS_SHIFT), >2
 					}
 					|	GET_ZVAL_PTR Ra(tmp_reg), var_addr
 					|	GC_ADDREF Ra(tmp_reg)
 					|2:
 				}
 				if (save_r1) {
 					|	mov aword T1, FCARG1a // save
 				}
 				|	EFREE_REFERENCE r2
 				if (save_r1) {
 					|	mov FCARG1a, aword T1 // restore
 				}
 				|	jmp >3
 				if (in_cold) {
 					|1:
 				} else {
 					|.code
 				}
 			}
 		}
 
 		if (!res_addr) {
 			|	ZVAL_COPY_VALUE var_addr, var_info, val_addr, val_info, ZREG_R2, tmp_reg
 		} else {
 			|	ZVAL_COPY_VALUE_2 var_addr, var_info, res_addr, val_addr, val_info, ZREG_R2, tmp_reg
 		}
 
 		if (val_type == IS_CV) {
 			if (!res_addr) {
 				|	TRY_ADDREF val_info, dh, Ra(tmp_reg)
 			} else {
 				|	TRY_ADDREF_2 val_info, dh, Ra(tmp_reg)
 			}
 		} else {
 			if (res_addr) {
 				|	TRY_ADDREF val_info, dh, Ra(tmp_reg)
 			}
 		}
 		|3:
 	}
 	return 1;
 }
diff --git a/ext/opcache/tests/jit/assign_dim_009.phpt b/ext/opcache/tests/jit/assign_dim_009.phpt
new file mode 100644
index 0000000000..bea28098a5
--- /dev/null
+++ b/ext/opcache/tests/jit/assign_dim_009.phpt
@@ -0,0 +1,14 @@
+--TEST--
+JIT ASSIGN_DIM: 009
+--INI--
+opcache.enable=1
+opcache.enable_cli=1
+opcache.file_update_protection=0
+opcache.jit_buffer_size=1M
+--FILE--
+<?php
+$y[] = $r = &$G;
+?>
+DONE
+--EXPECT--
+DONE
