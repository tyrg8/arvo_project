commit bb965094dfdd8e00fc56d7abc47e5a1a323a9773
Author: Even Rouault <even.rouault@mines-paris.org>
Date:   Thu Jun 1 09:16:32 2017 +0000

    NTF: fix heap-buffer-overflow reads. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=1996. Credit to OSS Fuzz
    
    git-svn-id: https://svn.osgeo.org/gdal/trunk@38759 f0d54148-0727-0410-94bb-9a71ac55c965

diff --git a/gdal/ogr/ogrsf_frmts/ntf/ntffilereader.cpp b/gdal/ogr/ogrsf_frmts/ntf/ntffilereader.cpp
index 0ea1b5c54a..056dd2fe88 100644
--- a/gdal/ogr/ogrsf_frmts/ntf/ntffilereader.cpp
+++ b/gdal/ogr/ogrsf_frmts/ntf/ntffilereader.cpp
@@ -1697,251 +1697,259 @@ static void AddToIndexGroup( NTFRecord **papoGroup, NTFRecord * poRecord )
 NTFRecord **NTFFileReader::GetNextIndexedRecordGroup( NTFRecord **
                                                       papoPrevGroup )
 
 {
     int         nPrevType, nPrevId;
 
 /* -------------------------------------------------------------------- */
 /*      What was the identify of our previous anchor record?            */
 /* -------------------------------------------------------------------- */
     if( papoPrevGroup == NULL || papoPrevGroup[0] == NULL )
     {
         nPrevType = NRT_POINTREC;
         nPrevId = 0;
         FreshenIndex();
     }
     else
     {
         nPrevType = papoPrevGroup[0]->GetType();
         nPrevId = atoi(papoPrevGroup[0]->GetField(3,8));
+        if( nPrevId < 0 )
+            return NULL;
     }
 
 /* -------------------------------------------------------------------- */
 /*      Find the next anchor record.                                    */
 /* -------------------------------------------------------------------- */
     NTFRecord   *poAnchor = NULL;
 
     while( nPrevType != 99 && poAnchor == NULL )
     {
         nPrevId++;
         if( nPrevId >= anIndexSize[nPrevType] )
         {
             do
             {
                 nPrevType++;
             }
             while( nPrevType != NRT_VTR
                    && nPrevType != NRT_NODEREC
                    && nPrevType != NRT_TEXTREC
                    && nPrevType != NRT_NAMEREC
                    && nPrevType != NRT_COLLECT
                    && nPrevType != NRT_POLYGON
                    && nPrevType != NRT_CPOLY
                    && nPrevType != NRT_POINTREC
                    && nPrevType != NRT_LINEREC );
 
             nPrevId = 0;
         }
         else
         {
             poAnchor = (apapoRecordIndex[nPrevType])[nPrevId];
         }
     }
 
     if( poAnchor == NULL )
     {
         return NULL;
     }
 
 /* -------------------------------------------------------------------- */
 /*      Build record group depending on type of anchor and what it      */
 /*      refers to.                                                      */
 /* -------------------------------------------------------------------- */
     apoCGroup[0] = NULL;
     apoCGroup[1] = poAnchor;
     apoCGroup[2] = NULL;
 
 /* -------------------------------------------------------------------- */
 /*      Handle POINTREC/LINEREC                                         */
 /* -------------------------------------------------------------------- */
     if( poAnchor->GetType() == NRT_POINTREC
          || poAnchor->GetType() == NRT_LINEREC )
     {
         int             l_nAttCount = 0;
 
         AddToIndexGroup( apoCGroup,
                          GetIndexedRecord( NRT_GEOMETRY,
                                            atoi(poAnchor->GetField(9,14)) ) );
 
         if( poAnchor->GetLength() >= 16 )
             l_nAttCount = atoi(poAnchor->GetField(15,16));
 
         for( int iAtt = 0; iAtt < l_nAttCount; iAtt++ )
         {
             AddToIndexGroup(
                 apoCGroup,
                 GetIndexedRecord( NRT_ATTREC,
                                   atoi(poAnchor->GetField(17+6*iAtt,
                                                           22+6*iAtt)) ) );
         }
     }
 
 /* -------------------------------------------------------------------- */
 /*      Handle TEXTREC                                                  */
 /* -------------------------------------------------------------------- */
     else if( poAnchor->GetType() == NRT_TEXTREC )
     {
         int             l_nAttCount = 0;
         int             nSelCount = 0;
 
         // Add all the text position records.
         nSelCount = atoi(poAnchor->GetField(9,10));
+        if( nSelCount < 0 )
+            return NULL;
 
         for( int iSel = 0; iSel < nSelCount; iSel++ )
         {
             int iStart = 11 + 12*iSel + 6;
 
             AddToIndexGroup(
                 apoCGroup,
                 GetIndexedRecord( NRT_TEXTPOS,
                                   atoi(poAnchor->GetField(iStart,iStart+5)) ));
         }
 
         // Add all geometry and TEXR records pointed to by text position
         // records.
         for( int iRec = 1; apoCGroup[iRec] != NULL; iRec++ )
         {
             NTFRecord  *poRecord = apoCGroup[iRec];
 
             if( poRecord->GetType() != NRT_TEXTPOS )
                 continue;
 
             const int nNumTEXR = atoi(poRecord->GetField(9,10));
             for( int iTEXR = 0; iTEXR < nNumTEXR; iTEXR++ )
             {
                 AddToIndexGroup(
                     apoCGroup,
                     GetIndexedRecord( NRT_TEXTREP,
                                       atoi(poRecord->GetField(11+iTEXR*12,
                                                               16+iTEXR*12))));
                 AddToIndexGroup(
                     apoCGroup,
                     GetIndexedRecord( NRT_GEOMETRY,
                                       atoi(poRecord->GetField(17+iTEXR*12,
                                                               22+iTEXR*12))));
             }
         }
 
         // Add all the attribute records.
         if( poAnchor->GetLength() >= 10 + nSelCount*12 + 2 )
             l_nAttCount = atoi(poAnchor->GetField(11+nSelCount*12,
                                                 12+nSelCount*12));
 
         for( int iAtt = 0; iAtt < l_nAttCount; iAtt++ )
         {
             int iStart = 13 + nSelCount*12 + 6 * iAtt;
 
             AddToIndexGroup(
                 apoCGroup,
                 GetIndexedRecord( NRT_ATTREC,
                                   atoi(poAnchor->GetField(iStart,iStart+5)) ));
         }
     }
 
 /* -------------------------------------------------------------------- */
 /*      Handle NODEREC.                                                 */
 /* -------------------------------------------------------------------- */
     else if( poAnchor->GetType() == NRT_NODEREC )
     {
         AddToIndexGroup( apoCGroup,
                          GetIndexedRecord( NRT_GEOMETRY,
                                            atoi(poAnchor->GetField(9,14)) ) );
     }
 
 /* -------------------------------------------------------------------- */
 /*      Handle COLLECT.                                                 */
 /* -------------------------------------------------------------------- */
     else if( poAnchor->GetType() == NRT_COLLECT )
     {
         const int nParts = atoi(poAnchor->GetField(9,12));
+        if( nParts < 0 )
+            return NULL;
         const int nAttOffset = 13 + nParts * 8;
         int l_nAttCount = 0;
 
         if( poAnchor->GetLength() > nAttOffset + 2 )
             l_nAttCount = atoi(poAnchor->GetField(nAttOffset,nAttOffset+1));
 
         for( int iAtt = 0; iAtt < l_nAttCount; iAtt++ )
         {
             const int iStart = nAttOffset + 2 + iAtt * 6;
 
             AddToIndexGroup(
                 apoCGroup,
                 GetIndexedRecord( NRT_ATTREC,
                                   atoi(poAnchor->GetField(iStart,iStart+5)) ));
         }
     }
 
 /* -------------------------------------------------------------------- */
 /*      Handle POLYGON                                                  */
 /* -------------------------------------------------------------------- */
     else if( poAnchor->GetType() == NRT_POLYGON )
     {
         AddToIndexGroup( apoCGroup,
                          GetIndexedRecord( NRT_CHAIN,
                                            atoi(poAnchor->GetField(9,14)) ) );
 
         if( poAnchor->GetLength() >= 20 )
             AddToIndexGroup( apoCGroup,
                         GetIndexedRecord( NRT_GEOMETRY,
                                           atoi(poAnchor->GetField(15,20)) ) );
 
         // Attributes
         int l_nAttCount = 0;
 
         if( poAnchor->GetLength() >= 22 )
             l_nAttCount = atoi(poAnchor->GetField(21,22));
 
         for( int iAtt = 0; iAtt < l_nAttCount; iAtt++ )
         {
             AddToIndexGroup(
                 apoCGroup,
                 GetIndexedRecord( NRT_ATTREC,
                                   atoi(poAnchor->GetField(23+6*iAtt,
                                                           28+6*iAtt)) ) );
         }
     }
 /* -------------------------------------------------------------------- */
 /*      Handle CPOLY                                                    */
 /* -------------------------------------------------------------------- */
     else if( poAnchor->GetType() == NRT_CPOLY )
     {
         int nPolyCount = atoi(poAnchor->GetField(9,12));
+        if( nPolyCount < 0 )
+            return NULL;
         int nPostPoly = nPolyCount*7 + 12;
 
         if( poAnchor->GetLength() >= nPostPoly + 6 )
         {
             int  nGeomId = atoi(poAnchor->GetField(nPostPoly+1,nPostPoly+6));
 
             AddToIndexGroup( apoCGroup,
                              GetIndexedRecord( NRT_GEOMETRY, nGeomId) );
         }
 
         if( poAnchor->GetLength() >= nPostPoly + 8 )
         {
             int l_nAttCount = atoi(poAnchor->GetField(nPostPoly+7,nPostPoly+8));
 
             for( int iAtt = 0; iAtt < l_nAttCount; iAtt++ )
             {
                 int nAttId = atoi(poAnchor->GetField(nPostPoly+9+iAtt*6,
                                                      nPostPoly+14+iAtt*6));
                 AddToIndexGroup( apoCGroup,
                                  GetIndexedRecord( NRT_ATTREC, nAttId) );
             }
         }
     }
 
     return apoCGroup + 1;
 }
 
 /************************************************************************/
 /*                          OverrideTileName()                          */
 /************************************************************************/
