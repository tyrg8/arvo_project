commit 2d8507d1909829e9151fac73ffc0d20f691f558c
Author: Roman Lebedev <lebedev.ri@gmail.com>
Date:   Wed Dec 27 17:33:18 2017 +0300

    FujiDecompressor: don't forget to sanitize cpp/bpp

diff --git a/src/librawspeed/decompressors/FujiDecompressor.cpp b/src/librawspeed/decompressors/FujiDecompressor.cpp
index ba21635d..013dc2a0 100644
--- a/src/librawspeed/decompressors/FujiDecompressor.cpp
+++ b/src/librawspeed/decompressors/FujiDecompressor.cpp
@@ -37,24 +37,28 @@ namespace rawspeed {
 
 FujiDecompressor::FujiDecompressor(const RawImage& img, ByteStream input_)
     : AbstractParallelizedDecompressor(img), input(std::move(input_)) {
+  if (mRaw->getCpp() != 1 || mRaw->getDataType() != TYPE_USHORT16 ||
+      mRaw->getBpp() != 2)
+    ThrowRDE("Unexpected component count / data type");
+
   input.setByteOrder(Endianness::big);
 
   header = FujiHeader(&input);
   if (!header)
     ThrowRDE("compressed RAF header check");
 
   if (mRaw->dim != iPoint2D(header.raw_width, header.raw_height))
     ThrowRDE("RAF header specifies different dimensions!");
 
   if (12 == header.raw_bits) {
     ThrowRDE("Aha, finally, a 12-bit compressed RAF! Please consider providing "
              "samples on <https://raw.pixls.us/>, thanks!");
   }
 
   for (int i = 0; i < 6; i++) {
     for (int j = 0; j < 6; j++)
       CFA[i][j] = mRaw->cfa.getColorAt(j, i);
   }
 
   fuji_compressed_load_raw();
 }
