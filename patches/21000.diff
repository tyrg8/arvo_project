commit 4976d93d4e7ce5e63cb562fb7f0f916c3103e2de
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Mar 12 14:03:31 2020 +0100

    Fix buffer overread in ndpi_search_setup_capwap

diff --git a/src/lib/protocols/capwap.c b/src/lib/protocols/capwap.c
index bfad1a59..33b20fca 100644
--- a/src/lib/protocols/capwap.c
+++ b/src/lib/protocols/capwap.c
@@ -39,63 +39,65 @@ static void ndpi_int_capwap_add_connection(struct ndpi_detection_module_struct *
 static void ndpi_search_setup_capwap(struct ndpi_detection_module_struct *ndpi_struct,
 				     struct ndpi_flow_struct *flow) {
   struct ndpi_packet_struct *packet = &flow->packet;
   u_int16_t sport, dport;
    
   if(!packet->iph) {
     NDPI_EXCLUDE_PROTO(ndpi_struct, flow);
     return;
   }
 
   sport = ntohs(packet->udp->source), dport = ntohs(packet->udp->dest);
   
   if((dport == NDPI_CAPWAP_CONTROL_PORT)
      && (packet->iph->daddr == 0xFFFFFFFF)
      && (packet->payload_packet_len >= 16)
      && (packet->payload[0] == 0x0)
      && (packet->payload[8] == 6 /* Mac len */)
      )
     goto capwap_found;
   
   if(((sport == NDPI_CAPWAP_CONTROL_PORT) || (dport == NDPI_CAPWAP_CONTROL_PORT))
      && ((packet->payload[0] == 0x0) || (packet->payload[0] == 0x1))
      ) {
     u_int16_t msg_len, offset, to_add;
 
     if(packet->payload[0] == 0x0)
       offset = 13, to_add = 13;
     else
       offset = 15, to_add = 17;
 
-    msg_len = ntohs(*(u_int16_t*)&packet->payload[offset]);
+    if (packet->payload_packet_len >= offset + sizeof(u_int16_t)) {
+      msg_len = ntohs(*(u_int16_t*)&packet->payload[offset]);
 
-    if((msg_len+to_add) == packet->payload_packet_len)
-      goto capwap_found;
+      if((msg_len+to_add) == packet->payload_packet_len)
+        goto capwap_found;
+    }
   }
   
   if(
      (((dport == NDPI_CAPWAP_DATA_PORT) && (packet->iph->daddr != 0xFFFFFFFF)) || (sport == NDPI_CAPWAP_DATA_PORT))
      && (packet->payload_packet_len >= 16)
      && (packet->payload[0] == 0x0)
      ) {
     u_int8_t is_80211_data = (packet->payload[9] & 0x0C) >> 2;
 
       
     if((sport == NDPI_CAPWAP_DATA_PORT) && (is_80211_data == 2 /* IEEE 802.11 Data */))
       goto capwap_found;
     else if(dport == NDPI_CAPWAP_DATA_PORT) {
       u_int16_t msg_len = ntohs(*(u_int16_t*)&packet->payload[13]);
       
       if((packet->payload[8] == 1 /* Mac len */)
 	 || (packet->payload[8] == 6 /* Mac len */)
 	 || (packet->payload[8] == 4 /* Wireless len */)
 	 || ((msg_len+15) == packet->payload_packet_len))
 	goto capwap_found;	 
     }
   }
   
   NDPI_EXCLUDE_PROTO(ndpi_struct, flow);
   return;
 
  capwap_found:
   ndpi_int_capwap_add_connection(ndpi_struct, flow);
 }
