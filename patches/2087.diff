commit a33916fe4a206e06e9f043a19e604a515ee2322c
Author: Even Rouault <even.rouault@mines-paris.org>
Date:   Sun Jun 4 18:13:57 2017 +0000

    AIG: fix heap-buffer-overflow. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=2087. Credit to OSS Fuzz
    
    git-svn-id: https://svn.osgeo.org/gdal/trunk@38863 f0d54148-0727-0410-94bb-9a71ac55c965

diff --git a/gdal/frmts/aigrid/aigccitt.c b/gdal/frmts/aigrid/aigccitt.c
index 5f76adac33..4da0fa27e7 100644
--- a/gdal/frmts/aigrid/aigccitt.c
+++ b/gdal/frmts/aigrid/aigccitt.c
@@ -1870,73 +1870,68 @@ Fax3DecodeRLE(Fax3BaseState* tif, unsigned char *buf, int occ,
 CPLErr DecompressCCITTRLETile( unsigned char *pabySrcData, int nSrcBytes,
                                unsigned char *pabyDstData, int nDstBytes,
                                int nBlockXSize,
                                CPL_UNUSED int nBlockYSize )
 {
     Fax3DecodeState  sDecoderState;
     Fax3BaseState* sp = (Fax3BaseState *) &sDecoderState;
     unsigned char runs_buf[4000];
     long rowbytes, rowpixels;
 
     memset( &sDecoderState, 0, sizeof(sDecoderState) );
 
     sp->groupoptions = 0;
     sp->recvparams = 0;
     sp->subaddress = NULL;
 
     DecoderState(sp)->runs = NULL;
     DecoderState(sp)->fill = aig_TIFFFax3fillruns;
 
     if( sizeof(runs_buf) < (size_t)(nBlockXSize * 2 + 3) )
     {
         CPLError(CE_Failure, CPLE_AppDefined, "Run buffer too small");
         return CE_Failure;
     }
 
 /* -------------------------------------------------------------------- */
 /*                                                                      */
 /* -------------------------------------------------------------------- */
     /*
      * Calculate the scanline/tile widths.
      */
-    rowbytes = nBlockXSize / 8;
-	if( rowbytes == 0 )
-	{
-        CPLError(CE_Failure, CPLE_AppDefined, "rowbytes == 0");
-        return CE_Failure;
-	}
+    rowbytes = (nBlockXSize + 7) / 8;
     rowpixels = nBlockXSize;
 
     sp->rowbytes = (GUInt32) rowbytes;
     sp->rowpixels = (GUInt32) rowpixels;
     sp->mode |= FAXMODE_BYTEALIGN;
     /*
      * Allocate any additional space required for decoding/encoding.
      */
     {
         Fax3DecodeState* dsp = DecoderState(sp);
 
         dsp->runs = (GUInt32*) runs_buf;
         dsp->curruns = dsp->runs;
         dsp->refruns = NULL;
     }
 
 /* -------------------------------------------------------------------- */
 /*                                                                      */
 /* -------------------------------------------------------------------- */
     DecoderState(sp)->bit = 0;		/* force initial read */
     DecoderState(sp)->data = 0;
     DecoderState(sp)->EOLcnt = 0;	/* force initial scan for EOL */
 
     DecoderState(sp)->bitmap = aig_TIFFBitRevTable;
 
     if (DecoderState(sp)->refruns) {	/* init reference line to white */
         DecoderState(sp)->refruns[0] = (GUInt32) DecoderState(sp)->b.rowpixels;
         DecoderState(sp)->refruns[1] = 0;
     }
 
     if( Fax3DecodeRLE( sp, pabyDstData, nDstBytes,
                        pabySrcData, nSrcBytes ) == 1 )
         return CE_None;
     else
         return CE_Failure;
 }
