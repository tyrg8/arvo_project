commit f9e544672e24d349f0c69074495f14427b5c8f4e
Author: Alex Rebert <alexandre.rebert@gmail.com>
Date:   Mon Jan 3 22:24:37 2022 -0500

    ucl_expand_variable: fix out-of-bounds read
    
    If the input ends in '$', calling ucl_check_variable will result in an
    out-of-bounds read.
    
    Fix https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=34755

diff --git a/src/ucl_parser.c b/src/ucl_parser.c
index 5c4f9df..c8c5a1e 100644
--- a/src/ucl_parser.c
+++ b/src/ucl_parser.c
@@ -508,64 +508,64 @@ static ssize_t
 ucl_expand_variable (struct ucl_parser *parser, unsigned char **dst,
 		const char *src, size_t in_len)
 {
 	const char *p, *end = src + in_len;
 	unsigned char *d;
 	size_t out_len = 0;
 	bool vars_found = false;
 
 	if (parser->flags & UCL_PARSER_DISABLE_MACRO) {
 		*dst = NULL;
 		return in_len;
 	}
 
 	p = src;
 	while (p != end) {
-		if (*p == '$') {
+		if (*p == '$' && p + 1 != end) {
 			p = ucl_check_variable (parser, p + 1, end - p - 1, &out_len, &vars_found);
 		}
 		else {
 			p ++;
 			out_len ++;
 		}
 	}
 
 	if (!vars_found) {
 		/* Trivial case */
 		*dst = NULL;
 		return in_len;
 	}
 
 	*dst = UCL_ALLOC (out_len + 1);
 	if (*dst == NULL) {
 		return in_len;
 	}
 
 	d = *dst;
 	p = src;
 	while (p != end) {
 		if (*p == '$') {
 			p = ucl_expand_single_variable (parser, p, end - p, &d);
 		}
 		else {
 			*d++ = *p++;
 		}
 	}
 
 	*d = '\0';
 
 	return out_len;
 }
 
 /**
  * Store or copy pointer to the trash stack
  * @param parser parser object
  * @param src src string
  * @param dst destination buffer (trash stack pointer)
  * @param dst_const const destination pointer (e.g. value of object)
  * @param in_len input length
  * @param need_unescape need to unescape source (and copy it)
  * @param need_lowercase need to lowercase value (and copy)
  * @param need_expand need to expand variables (and copy as well)
  * @param unescape_squote unescape single quoted string
  * @return output length (excluding \0 symbol)
  */
