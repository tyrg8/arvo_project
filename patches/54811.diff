commit fa2b98f9579c5b9069753ae390a05d16fb5526f9
Author: Sebastian Dr√∂ge <sebastian@centricular.com>
Date:   Fri Jan 6 18:09:02 2023 +0200

    typefindfunctions: Add missing length check to XML typefinder
    
    Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=54811
    
    Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/3690>

diff --git a/subprojects/gst-plugins-base/gst/typefind/gsttypefindfunctions.c b/subprojects/gst-plugins-base/gst/typefind/gsttypefindfunctions.c
index 121a9a5192..c732f31237 100644
--- a/subprojects/gst-plugins-base/gst/typefind/gsttypefindfunctions.c
+++ b/subprojects/gst-plugins-base/gst/typefind/gsttypefindfunctions.c
@@ -538,112 +538,115 @@ static gboolean
 xml_check_first_element_from_data (const guint8 * data, guint length,
     const gchar * element, guint elen, gboolean strict)
 {
   gboolean got_xmldec;
   const guint8 *ptr;
 
   g_return_val_if_fail (data != NULL, FALSE);
 
   /* search for an opening tag */
   ptr = memchr (data, '<', length);
   if (!ptr)
     return FALSE;
 
   length -= (ptr - data);
   data = ptr;
 
   if (length < 5)
     return FALSE;
 
   /* look for the XMLDec
    * see XML spec 2.8, Prolog and Document Type Declaration
    * http://www.w3.org/TR/2004/REC-xml-20040204/#sec-prolog-dtd */
   got_xmldec = (memcmp (data, "<?xml", 5) == 0);
   if (got_xmldec) {
     /* look for ending ?> */
     data += 5;
     length -= 5;
 
     ptr = memchr (data, '?', length);
     if (!ptr)
       return FALSE;
 
     length -= (ptr - data);
     data = ptr;
 
+    if (length < 2)
+      return FALSE;
+
     got_xmldec = (memcmp (data, "?>", 2) == 0);
     if (!got_xmldec)
       return FALSE;
 
     data += 2;
     length -= 2;
   }
   if (strict && !got_xmldec)
     return FALSE;
 
   if (got_xmldec) {
     /* search for the next opening tag */
     ptr = memchr (data, '<', length);
     if (!ptr)
       return FALSE;
 
     length -= (ptr - data);
     data = ptr;
   }
 
   /* skip XML comments */
   while (length >= 4 && memcmp (data, "<!--", 4) == 0) {
     data += 4;
     length -= 4;
 
     ptr = (const guint8 *) g_strstr_len ((const gchar *) data, length, "-->");
     if (!ptr)
       return FALSE;
     ptr += 3;
 
     length -= (ptr - data);
     data = ptr;
 
     /* search for the next opening tag */
     ptr = memchr (data, '<', length);
     if (!ptr)
       return FALSE;
 
     length -= (ptr - data);
     data = ptr;
   }
 
   if (elen == 0)
     return TRUE;
 
   /* look for the first element, it has to be the requested element. Bail
    * out otherwise. */
   if (length < elen + 1)
     return FALSE;
 
   data += 1;
   length -= 1;
   if (memcmp (data, element, elen) != 0)
     return FALSE;
 
   data += elen;
   length -= elen;
 
   /* check if there's a closing `>` following */
   ptr = memchr (data, '>', length);
   if (!ptr)
     return FALSE;
 
   /* between `<elem` and `>`, there should only be spaces, alphanum or `:`
    * until the first `=` for an attribute value */
   while (data < ptr) {
     if (*data == '>' || *data == '=')
       return TRUE;
 
     if (!g_ascii_isprint (*data) && *data != '\n' && *data != '\r')
       return FALSE;
 
     data++;
   }
 
   return FALSE;
 }
