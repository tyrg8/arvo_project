commit 47b6696dcdfe7c5cb6e58ac6586ba45d39c39cc6
Author: Jo Sutton <josutton@catalyst.net.nz>
Date:   Thu Jul 6 10:50:05 2023 +1200

    librpc:ndr: Fix overflow in ndr_push_expand
    
    If ‘size’ was equal to UINT32_MAX, the expression ‘size+1’ could
    overflow to zero.
    
    This could result in inadequate memory being allocated, which could
    cause ndr_pull_compression_xpress_huff_raw_chunk() to overflow memory
    with zero bytes.
    
    Credit to OSS-Fuzz.
    
    REF: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=57728
    
    BUG: https://bugzilla.samba.org/show_bug.cgi?id=15415
    
    Signed-off-by: Joseph Sutton <josephsutton@catalyst.net.nz>
    Reviewed-by: Douglas Bagnall <douglas.bagnall@catalyst.net.nz>

diff --git a/librpc/ndr/ndr.c b/librpc/ndr/ndr.c
index 44cf524867d..d187a0d0110 100644
--- a/librpc/ndr/ndr.c
+++ b/librpc/ndr/ndr.c
@@ -260,40 +260,43 @@ _PUBLIC_ DATA_BLOB ndr_push_blob(struct ndr_push *ndr)
 /*
   expand the available space in the buffer to ndr->offset + extra_size
 */
 _PUBLIC_ enum ndr_err_code ndr_push_expand(struct ndr_push *ndr, uint32_t extra_size)
 {
 	uint32_t size = extra_size + ndr->offset;
 
 	if (size < ndr->offset) {
 		/* extra_size overflowed the offset */
 		return ndr_push_error(ndr, NDR_ERR_BUFSIZE, "Overflow in push_expand to %u",
 				      size);
 	}
 
 	if (ndr->fixed_buf_size) {
 		if (ndr->alloc_size >= size) {
 			return NDR_ERR_SUCCESS;
 		}
 		return ndr_push_error(ndr,
 				      NDR_ERR_BUFSIZE,
 				      "Overflow of fixed buffer in "
 				      "push_expand to %u",
 				      size);
 	}
 
 	if (ndr->alloc_size > size) {
 		return NDR_ERR_SUCCESS;
 	}
 
 	ndr->alloc_size += NDR_BASE_MARSHALL_SIZE;
+	if (size == UINT32_MAX) {
+		return ndr_push_error(ndr, NDR_ERR_BUFSIZE, "Overflow in push_expand");
+	}
 	if (size+1 > ndr->alloc_size) {
 		ndr->alloc_size = size+1;
 	}
 	ndr->data = talloc_realloc(ndr, ndr->data, uint8_t, ndr->alloc_size);
 	if (!ndr->data) {
 		return ndr_push_error(ndr, NDR_ERR_ALLOC, "Failed to push_expand to %u",
 				      ndr->alloc_size);
 	}
 
 	return NDR_ERR_SUCCESS;
 }
