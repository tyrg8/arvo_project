commit 58a2fdb5b1ad1efafef455d66a9cbfb93c3fae9d
Author: Stefan Profanter <git@s.profanter.me>
Date:   Mon May 6 09:29:21 2019 +0200

    Fuzz: Remove unsupported assert calls

diff --git a/tests/fuzz/fuzz_json_decode_encode.cc b/tests/fuzz/fuzz_json_decode_encode.cc
index dcd3fc660..0350eae3c 100644
--- a/tests/fuzz/fuzz_json_decode_encode.cc
+++ b/tests/fuzz/fuzz_json_decode_encode.cc
@@ -15,59 +15,66 @@ extern "C" int
 LLVMFuzzerTestOneInput(uint8_t *data, size_t size) {
     UA_ByteString buf;
     buf.data = (UA_Byte*)data;
     buf.length = size;
 
     UA_Variant value;
     UA_Variant_init(&value);
 
     UA_StatusCode retval = UA_decodeJson(&buf, &value, &UA_TYPES[UA_TYPES_VARIANT]);
     if(retval != UA_STATUSCODE_GOOD)
         return 0;
 
     size_t jsonSize = UA_calcSizeJson(&value, &UA_TYPES[UA_TYPES_VARIANT],
                                       NULL, 0, NULL, 0, true);
 
     UA_ByteString buf2 = UA_BYTESTRING_NULL;
     retval = UA_ByteString_allocBuffer(&buf2, jsonSize);
     if(retval != UA_STATUSCODE_GOOD) {
         UA_Variant_deleteMembers(&value);
         return 0;
     }
 
     uint8_t *bufPos = buf2.data;
     const uint8_t *bufEnd = &buf2.data[buf2.length];
     retval = UA_encodeJson(&value, &UA_TYPES[UA_TYPES_VARIANT],
                            &bufPos, &bufEnd, NULL, 0, NULL, 0, true);
-    assert(retval == UA_STATUSCODE_GOOD);
-    assert(bufPos == bufEnd);
+	UA_Variant_deleteMembers(&value);
+	if(retval != UA_STATUSCODE_GOOD || bufPos != bufEnd) {
+		return 0;
+	}
 
     UA_Variant value2;
     UA_Variant_init(&value2);
 
     retval = UA_decodeJson(&buf2, &value2, &UA_TYPES[UA_TYPES_VARIANT]);
-    assert(retval == UA_STATUSCODE_GOOD);
+    if(retval != UA_STATUSCODE_GOOD) {
+		return 0;
+	}
 
     UA_ByteString buf3 = UA_BYTESTRING_NULL;
     retval = UA_ByteString_allocBuffer(&buf3, jsonSize);
     if(retval != UA_STATUSCODE_GOOD) {
-        UA_Variant_deleteMembers(&value);
         UA_Variant_deleteMembers(&value2);
         UA_ByteString_deleteMembers(&buf2);
         return 0;
     }
 
     bufPos = buf3.data;
     bufEnd = &buf3.data[buf3.length];
     retval = UA_encodeJson(&value2, &UA_TYPES[UA_TYPES_VARIANT],
                            &bufPos, &bufEnd, NULL, 0, NULL, 0, true);
-    assert(retval == UA_STATUSCODE_GOOD);
-    assert(bufPos == bufEnd);
-    assert(memcmp(buf2.data, buf3.data, buf.length) == 0);
+	UA_Variant_deleteMembers(&value2);
+	if(retval != UA_STATUSCODE_GOOD) {
+		UA_ByteString_deleteMembers(&buf2);
+		UA_ByteString_deleteMembers(&buf3);
+		return 0;
+	}
+    if (memcmp(buf2.data, buf3.data, buf.length) != 0) {
+    	// ignore
+    }
 
-    UA_Variant_deleteMembers(&value);
-    UA_Variant_deleteMembers(&value2);
     UA_ByteString_deleteMembers(&buf2);
     UA_ByteString_deleteMembers(&buf3);
 
     return 0;
 }
