commit 71c2ab509a8628dbbad4bc7b3f98a64aa90d3297
Author: Emanuele Torre <torreemanuele6@gmail.com>
Date:   Wed Dec 13 20:20:22 2023 +0100

    Merge pull request from GHSA-686w-5m7m-54vc
    
    decNumberToString calls for a buffer that can hold a string of digits+14
    characters, not a buffer of size digits+14.
    We need to allocate an extra byte for the NUL byte.
    
    -10E-1000010001, for example, will be stringified as -1.0E-1000010000
    and decNumberToString will currently write an extra NUL byte after the
    allocated buffer in the heap.
    
    Originally reported by @SEU-SSL on GitHub.
    
    Ref: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=64574
    
    Fixes GHSA-686w-5m7m-54vc

diff --git a/NEWS.md b/NEWS.md
index 913be89..14a594b 100644
--- a/NEWS.md
+++ b/NEWS.md
@@ -1,49 +1,49 @@
 # 1.7.1
 
 ## Security
 
-- CVE-2023-50246: ....
+- CVE-2023-50246: Fix heap buffer overflow in jvp\_literal\_number\_literal
 - CVE-2023-50268: fix stack-buffer-overflow if comparing nan with payload
 
 ## CLI changes
 
 - Make the default background color more suitable for bright backgrounds. @mjarosie @taoky @nicowilliams @itchyny #2904
 - Allow passing the inline jq script after `--`. @emanuele6 #2919
 - Restrict systems operations on OpenBSD and remove unused `mkstemp`. @klemensn #2934
 - Fix possible uninitialised value dereference if `jq_init()` fails. @emanuele6 @nicowilliams #2935
 
 ## Language changes
 
 - Simplify `paths/0` and `paths/1`. @asheiduk @emanuele6 #2946
 - Reject `U+001F` in string literals. @torsten-schenk @itchyny @wader #2911
 - Remove unused nref accumulator in `block_bind_library`. @emanuele6 #2914
 - Remove a bunch of unused variables, and useless assignments. @emanuele6 #2914
 - main.c: Remove unused EXIT\_STATUS\_EXACT option. @emanuele6 #2915
 - Actually use the number correctly casted from double to int as index. @emanuele6 #2916
 - src/builtin.c: remove unnecessary jv\_copy-s in type\_error/type\_error2. @emanuele6 #2937
 - Remove undefined behavior caught by LLVM 10 UBSAN. @Gaelan @emanuele6 #2926
 - Convert decnum to binary64 (double) instead of decimal64. This makes jq behave like the JSON specification suggests and more similar to other languages. @wader @leonid-s-usov #2949
 - Fix memory leaks on invalid input for `ltrimstr/1` and `rtrimstr/1`. @emanuele6 #2977
 - Fix memory leak on failed get for `setpath/2`. @emanuele6 #2970
 - Fix nan from json parsing also for nans with payload that start with 'n'. @emanuele6 #2985
 - Allow carriage return characters in comments. @emanuele6 #2942 #2984
 
 ## Documentation changes
 
 - Generate links in the man page. @emanuele6 #2931
 - Standardize arch types to AMD64 & ARM64 from index page download dropdown. @owenthereal #2884
 
 ## libjq
 
 - Add extern C for C++. @rockwotj #2953
 
 ## Build and test changes
 
 - Fix incorrect syntax for checksum file. @kamontat @wader #2899
 - Remove `-dirty` version suffix for windows release build. @itchyny #2888
 - Make use of `od` in tests more compatible. @nabijaczleweli @emanuele6 @nicowilliams #2922
 - Add dependabot. @yeikel #2889
 - Extend fuzzing setup to fuzz parser and and JSON serializer. @DavidKorczynski @emanuele6 #2952
 - Keep releasing executables with legacy names. @itchyny #2951
 
 # 1.7
diff --git a/src/jv.c b/src/jv.c
index 6ca1e1d..e23d8ec 100644
--- a/src/jv.c
+++ b/src/jv.c
@@ -619,30 +619,30 @@ static double jvp_literal_number_to_double(jv j) {
 static const char* jvp_literal_number_literal(jv n) {
   assert(JVP_HAS_FLAGS(n, JVP_FLAGS_NUMBER_LITERAL));
   decNumber *pdec = jvp_dec_number_ptr(n);
   jvp_literal_number* plit = jvp_literal_number_ptr(n);
 
   if (decNumberIsNaN(pdec)) {
     return "null";
   }
 
   if (decNumberIsInfinite(pdec)) {
     // We cannot preserve the literal data of numbers outside the limited
     // range of exponent. Since `decNumberToString` returns "Infinity"
     // (or "-Infinity"), and to reduce stack allocations as possible, we
     // normalize infinities in the callers instead of printing the maximum
     // (or minimum) double here.
     return NULL;
   }
 
   if (plit->literal_data == NULL) {
-    int len = jvp_dec_number_ptr(n)->digits + 14;
+    int len = jvp_dec_number_ptr(n)->digits + 15 /* 14 + NUL */;
     plit->literal_data = jv_mem_alloc(len);
 
     // Preserve the actual precision as we have parsed it
     // don't do decNumberTrim(pdec);
 
     decNumberToString(pdec, plit->literal_data);
   }
 
   return plit->literal_data;
 }
diff --git a/tests/shtest b/tests/shtest
index a426c79..14aafbf 100755
--- a/tests/shtest
+++ b/tests/shtest
@@ -609,4 +609,9 @@ if ! r=$($JQ --args -rn 1 -- '$ARGS.positional[0]' bar) || [ "$r" != 1 ]; then
     exit 1
 fi
 
+# CVE-2023-50246: No heap overflow for '-10E-1000000001'
+$VALGRIND $Q $JQ . <<\NUM
+-10E-1000000001
+NUM
+
 exit 0
