commit c43455749b914feef56b178b256f29b3016146eb
Author: Norbert Runge <nrunge@google.com>
Date:   Wed Jun 26 13:41:59 2019 -0700

    ICU-20652 Corrects calculation of byte sequence length to prevent buffer
    overflow.
    
    ICU-20652 Add parenthesis, improve readability.

diff --git a/icu4c/source/test/fuzzer/collator_compare_fuzzer.cpp b/icu4c/source/test/fuzzer/collator_compare_fuzzer.cpp
index b42b124e71e..87b2ea98c2c 100644
--- a/icu4c/source/test/fuzzer/collator_compare_fuzzer.cpp
+++ b/icu4c/source/test/fuzzer/collator_compare_fuzzer.cpp
@@ -13,23 +13,23 @@ IcuEnvironment* env = new IcuEnvironment();
 extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
   UErrorCode status = U_ZERO_ERROR;
 
   if (size < 2)
     return 0;
 
   std::unique_ptr<char16_t> compbuff1(new char16_t[size/4]);
-  std::memcpy(compbuff1.get(), data, size/2);
+  std::memcpy(compbuff1.get(), data, (size/4)*2);
   data = data + size/2;
   std::unique_ptr<char16_t> compbuff2(new char16_t[size/4]);
-  std::memcpy(compbuff2.get(), data, size/2);
+  std::memcpy(compbuff2.get(), data, (size/4)*2);
 
   icu::LocalPointer<icu::Collator> fuzzCollator(
       icu::Collator::createInstance(icu::Locale::getUS(), status), status);
   if (U_FAILURE(status))
     return 0;
   fuzzCollator->setStrength(icu::Collator::TERTIARY);
 
   fuzzCollator->compare(compbuff1.get(), size/4,
                         compbuff2.get(), size/4);
 
   return 0;
 }
