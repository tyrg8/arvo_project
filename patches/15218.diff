commit 2ec8d3c9f2103c7da8bcb7d864db000b9e93a05a
Author: pancake <pancake@nopcode.org>
Date:   Thu Jun 13 12:38:32 2019 +0200

    Fix crash in macho parser with bin with md5=0e32e7e3b8c2895bbdeb986eedda3dd6

diff --git a/libr/bin/format/mach0/mach0.c b/libr/bin/format/mach0/mach0.c
index 63d157d36c..2b9a0480e9 100644
--- a/libr/bin/format/mach0/mach0.c
+++ b/libr/bin/format/mach0/mach0.c
@@ -1003,46 +1003,50 @@ wrong_read:
 static int parse_function_starts (struct MACH0_(obj_t) *bin, ut64 off) {
 	struct linkedit_data_command fc;
 	ut8 sfc[sizeof (struct linkedit_data_command)] = {0};
-	ut8 *buf;
 	int len;
 
 	if (off > bin->size || off + sizeof (struct linkedit_data_command) > bin->size) {
 		bprintf ("Likely overflow while parsing"
 			" LC_FUNCTION_STARTS command\n");
 	}
 	bin->func_start = NULL;
 	len = r_buf_read_at (bin->b, off, sfc, sizeof (struct linkedit_data_command));
 	if (len < 1) {
 		bprintf ("Failed to get data while parsing"
 			" LC_FUNCTION_STARTS command\n");
 	}
 	fc.cmd = r_read_ble32 (&sfc[0], bin->big_endian);
 	fc.cmdsize = r_read_ble32 (&sfc[4], bin->big_endian);
 	fc.dataoff = r_read_ble32 (&sfc[8], bin->big_endian);
 	fc.datasize = r_read_ble32 (&sfc[12], bin->big_endian);
 
-	buf = calloc (1, fc.datasize + 1);
-	if (!buf) {
-		bprintf ("Failed to allocate buffer\n");
-		return false;
-	}
-	bin->func_size = fc.datasize;
-	if (fc.dataoff > bin->size || fc.dataoff + fc.datasize > bin->size) {
-		free (buf);
-		bprintf ("Likely overflow while parsing "
-			"LC_FUNCTION_STARTS command\n");
-		return false;
-	}
-	len = r_buf_read_at (bin->b, fc.dataoff, buf, fc.datasize);
-	if (len != fc.datasize) {
-		free (buf);
-		bprintf ("Failed to get data while parsing"
-			" LC_FUNCTION_STARTS\n");
-		return false;
+	if ((int)fc.datasize > 0) {
+		ut8 *buf = calloc (1, fc.datasize + 1);
+		if (!buf) {
+			bprintf ("Failed to allocate buffer\n");
+			return false;
+		}
+		bin->func_size = fc.datasize;
+		if (fc.dataoff > bin->size || fc.dataoff + fc.datasize > bin->size) {
+			free (buf);
+			bprintf ("Likely overflow while parsing "
+				"LC_FUNCTION_STARTS command\n");
+			return false;
+		}
+		len = r_buf_read_at (bin->b, fc.dataoff, buf, fc.datasize);
+		if (len != fc.datasize) {
+			free (buf);
+			bprintf ("Failed to get data while parsing"
+				" LC_FUNCTION_STARTS\n");
+			return false;
+		}
+		buf[fc.datasize] = 0; // null-terminated buffer
+		bin->func_start = buf;
+		return true;
 	}
-	buf[fc.datasize] = 0; // null-terminated buffer
-	bin->func_start = buf;
-	return true;
+	bin->func_start = NULL;
+	return false;
+
 }
 
 static int parse_dylib(struct MACH0_(obj_t) *bin, ut64 off) {
