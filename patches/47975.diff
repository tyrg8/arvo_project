commit 633de7089179f455d94d0fef54c68c298f545242
Author: Alan Modra <amodra@gmail.com>
Date:   Thu Jun 16 16:20:05 2022 +0930

    use of uninitialised value in input_file_open
    
    Triggered by a file containing just "#N" or "#A".  fgets when hitting
    EOF before reading anything returns NULL and does not write to buf.
    strchr (buf, '\n') then is reading from uninitialised memory.
    
            * input-file.c (input_file_open): Don't assume buf contains
            zero string terminator when fgets returns NULL.

diff --git a/gas/input-file.c b/gas/input-file.c
index f1085c1f0f1..d7cf56cc09a 100644
--- a/gas/input-file.c
+++ b/gas/input-file.c
@@ -117,84 +117,84 @@ void
 input_file_open (const char *filename,
 		 int pre)
 {
   int c;
   char buf[80];
 
   preprocess = pre;
 
   gas_assert (filename != 0);	/* Filename may not be NULL.  */
   if (filename[0])
     {
       f_in = fopen (filename, FOPEN_RT);
       file_name = filename;
     }
   else
     {
       /* Use stdin for the input file.  */
       f_in = stdin;
       /* For error messages.  */
       file_name = _("{standard input}");
     }
 
   if (f_in == NULL)
     {
       as_bad (_("can't open %s for reading: %s"),
 	      file_name, xstrerror (errno));
       return;
     }
 
   c = getc (f_in);
 
   if (ferror (f_in))
     {
       as_bad (_("can't read from %s: %s"),
 	      file_name, xstrerror (errno));
 
       fclose (f_in);
       f_in = NULL;
       return;
     }
 
   /* Check for an empty input file.  */
   if (feof (f_in))
     {
       fclose (f_in);
       f_in = NULL;
       return;
     }
   gas_assert (c != EOF);
 
   if (c == '#')
     {
       /* Begins with comment, may not want to preprocess.  */
       c = getc (f_in);
       if (c == 'N')
 	{
-	  if (fgets (buf, sizeof (buf), f_in)
-	      && startswith (buf, "O_APP") && ISSPACE (buf[5]))
+	  char *p = fgets (buf, sizeof (buf), f_in);
+	  if (p && startswith (p, "O_APP") && ISSPACE (p[5]))
 	    preprocess = 0;
-	  if (!strchr (buf, '\n'))
-	    ungetc ('#', f_in);	/* It was longer.  */
+	  if (!p || !strchr (p, '\n'))
+	    ungetc ('#', f_in);
 	  else
 	    ungetc ('\n', f_in);
 	}
       else if (c == 'A')
 	{
-	  if (fgets (buf, sizeof (buf), f_in)
-	      && startswith (buf, "PP") && ISSPACE (buf[2]))
+	  char *p = fgets (buf, sizeof (buf), f_in);
+	  if (p && startswith (p, "PP") && ISSPACE (p[2]))
 	    preprocess = 1;
-	  if (!strchr (buf, '\n'))
+	  if (!p || !strchr (p, '\n'))
 	    ungetc ('#', f_in);
 	  else
 	    ungetc ('\n', f_in);
 	}
       else if (c == '\n')
 	ungetc ('\n', f_in);
       else
 	ungetc ('#', f_in);
     }
   else
     ungetc (c, f_in);
 }
 
 /* Close input file.  */
