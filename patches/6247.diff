commit 7570d162477dc8efe67f4c31e93ed21bf8a3fd80
Author: Sebastian Rasmussen <sebras@gmail.com>
Date:   Tue Feb 13 02:33:32 2018 +0100

    Bug 699018: Null terminate buffer in fz_snprintf() even if too short.
    
    Previously the trailing null terminator would not be written if the
    formatted string ended up longer than the buffer.

diff --git a/source/fitz/printf.c b/source/fitz/printf.c
index bbdda93ff..95131ed12 100644
--- a/source/fitz/printf.c
+++ b/source/fitz/printf.c
@@ -473,32 +473,35 @@ size_t
 fz_vsnprintf(char *buffer, size_t space, const char *fmt, va_list args)
 {
 	struct snprintf_buffer out;
 	out.p = buffer;
-	out.s = space;
+	out.s = space > 0 ? space - 1 : 0;
 	out.n = 0;
 
 	/* Note: using a NULL context is safe here */
 	fz_format_string(NULL, &out, snprintf_emit, fmt, args);
-	snprintf_emit(NULL, &out, 0);
-	return out.n - 1;
+	if (space > 0)
+		out.p[out.n < space ? out.n : space - 1] = '\0';
+
+	return out.n;
 }
 
 size_t
 fz_snprintf(char *buffer, size_t space, const char *fmt, ...)
 {
 	va_list ap;
 	struct snprintf_buffer out;
 	out.p = buffer;
-	out.s = space;
+	out.s = space > 0 ? space - 1 : 0;
 	out.n = 0;
 
 	va_start(ap, fmt);
 	/* Note: using a NULL context is safe here */
 	fz_format_string(NULL, &out, snprintf_emit, fmt, ap);
-	snprintf_emit(NULL, &out, 0);
+	if (space > 0)
+		out.p[out.n < space ? out.n : space - 1] = '\0';
 	va_end(ap);
 
-	return out.n - 1;
+	return out.n;
 }
 
 char *
