commit 947272febe24a8f0ea828b5b2f35f13c3821901e
Author: Jouni Malinen <jouni@codeaurora.org>
Date:   Mon Nov 9 11:43:12 2020 +0200

    P2P: Fix copying of secondary device types for P2P group client
    
    Parsing and copying of WPS secondary device types list was verifying
    that the contents is not too long for the internal maximum in the case
    of WPS messages, but similar validation was missing from the case of P2P
    group information which encodes this information in a different
    attribute. This could result in writing beyond the memory area assigned
    for these entries and corrupting memory within an instance of struct
    p2p_device. This could result in invalid operations and unexpected
    behavior when trying to free pointers from that corrupted memory.
    
    Credit to OSS-Fuzz: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=27269
    Fixes: e57ae6e19edf ("P2P: Keep track of secondary device types for peers")
    Signed-off-by: Jouni Malinen <jouni@codeaurora.org>

diff --git a/src/p2p/p2p.c b/src/p2p/p2p.c
index 74b7b52ae..5cbfc217f 100644
--- a/src/p2p/p2p.c
+++ b/src/p2p/p2p.c
@@ -446,13 +446,15 @@ static struct p2p_device * p2p_create_device(struct p2p_data *p2p,
 static void p2p_copy_client_info(struct p2p_device *dev,
 				 struct p2p_client_info *cli)
 {
 	p2p_copy_filter_devname(dev->info.device_name,
 				sizeof(dev->info.device_name),
 				cli->dev_name, cli->dev_name_len);
 	dev->info.dev_capab = cli->dev_capab;
 	dev->info.config_methods = cli->config_methods;
 	os_memcpy(dev->info.pri_dev_type, cli->pri_dev_type, 8);
 	dev->info.wps_sec_dev_type_list_len = 8 * cli->num_sec_dev_types;
+	if (dev->info.wps_sec_dev_type_list_len > WPS_SEC_DEV_TYPE_MAX_LEN)
+		dev->info.wps_sec_dev_type_list_len = WPS_SEC_DEV_TYPE_MAX_LEN;
 	os_memcpy(dev->info.wps_sec_dev_type_list, cli->sec_dev_types,
 		  dev->info.wps_sec_dev_type_list_len);
 }
