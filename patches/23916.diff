commit 52afc10adc0c65e3c999665fad28ce78944e23b0
Author: Antoine Pitrou <antoine@python.org>
Date:   Wed Jul 8 09:08:06 2020 -0500

    ARROW-9330: [C++] Fix crash and undefined behaviour on corrupt IPC input
    
    Should fix the following issues:
    * https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=23910
    * https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=23916
    * https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=23921
    
    Closes #7644 from pitrou/ARROW-9330-oss-fuzz-ipc
    
    Authored-by: Antoine Pitrou <antoine@python.org>
    Signed-off-by: Wes McKinney <wesm@apache.org>

diff --git a/cpp/src/arrow/array/concatenate.cc b/cpp/src/arrow/array/concatenate.cc
index bcb7843d9..c5ae78985 100644
--- a/cpp/src/arrow/array/concatenate.cc
+++ b/cpp/src/arrow/array/concatenate.cc
@@ -1,41 +1,42 @@
 // Licensed to the Apache Software Foundation (ASF) under one
 // or more contributor license agreements.  See the NOTICE file
 // distributed with this work for additional information
 // regarding copyright ownership.  The ASF licenses this file
 // to you under the Apache License, Version 2.0 (the
 // "License"); you may not use this file except in compliance
 // with the License.  You may obtain a copy of the License at
 //
 //   http://www.apache.org/licenses/LICENSE-2.0
 //
 // Unless required by applicable law or agreed to in writing,
 // software distributed under the License is distributed on an
 // "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 // KIND, either express or implied.  See the License for the
 // specific language governing permissions and limitations
 // under the License.
 
 #include "arrow/array/concatenate.h"
 
 #include <algorithm>
 #include <cstddef>
 #include <cstdint>
 #include <limits>
 #include <memory>
 #include <utility>
 #include <vector>
 
 #include "arrow/array/array_base.h"
 #include "arrow/array/data.h"
 #include "arrow/array/util.h"
 #include "arrow/buffer.h"
 #include "arrow/result.h"
 #include "arrow/status.h"
 #include "arrow/type.h"
 #include "arrow/type_fwd.h"
 #include "arrow/util/bit_util.h"
 #include "arrow/util/bitmap_ops.h"
 #include "arrow/util/checked_cast.h"
+#include "arrow/util/int_util.h"
 #include "arrow/util/logging.h"
 #include "arrow/visitor_inline.h"
 
@@ -131,22 +132,34 @@ static Status ConcatenateOffsets(const BufferVector& buffers, MemoryPool* pool,
 template <typename Offset>
 static Status PutOffsets(const std::shared_ptr<Buffer>& src, Offset first_offset,
                          Offset* dst, Range* values_range) {
+  if (src->size() == 0) {
+    // It's allowed to have an empty offsets buffer for a 0-length array
+    // (see Array::Validate)
+    values_range->offset = 0;
+    values_range->length = 0;
+    return Status::OK();
+  }
+
   // Get the range of offsets to transfer from src
   auto src_begin = reinterpret_cast<const Offset*>(src->data());
   auto src_end = reinterpret_cast<const Offset*>(src->data() + src->size());
 
   // Compute the range of values which is spanned by this range of offsets
   values_range->offset = src_begin[0];
   values_range->length = *src_end - values_range->offset;
   if (first_offset > std::numeric_limits<Offset>::max() - values_range->length) {
     return Status::Invalid("offset overflow while concatenating arrays");
   }
 
   // Write offsets into dst, ensuring that the first offset written is
   // first_offset
   auto adjustment = first_offset - src_begin[0];
-  std::transform(src_begin, src_end, dst,
-                 [adjustment](Offset offset) { return offset + adjustment; });
+  // NOTE: Concatenate can be called during IPC reads to append delta dictionaries.
+  // Avoid UB on non-validated input by doing the addition in the unsigned domain.
+  // (the result can later be validated using Array::ValidateFull)
+  std::transform(src_begin, src_end, dst, [adjustment](Offset offset) {
+    return internal::SafeSignedAdd(offset, adjustment);
+  });
   return Status::OK();
 }
 
diff --git a/testing b/testing
index 10ab9dd6d..90b987c4f 160000
--- a/testing
+++ b/testing
@@ -1 +1 @@
-Subproject commit 10ab9dd6d4bd8276574d9efe55b759c1ad1a27a4
+Subproject commit 90b987c4fd696ca7fabcf53fdbb49c62cd39c47c
