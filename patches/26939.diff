commit 965bd3b69ff5dc1b6e3653114fe3147cac8c5138
Author: Dirk Lemstra <dirk@lemstra.org>
Date:   Tue Nov 3 23:05:49 2020 +0100

    Reverted changes and fixed OSS-fuzz issue.

diff --git a/MagickCore/profile.c b/MagickCore/profile.c
index 6834dd346..c6dde368d 100644
--- a/MagickCore/profile.c
+++ b/MagickCore/profile.c
@@ -1840,65 +1840,62 @@ static void GetProfilesFromResourceBlock(Image *image,
   }
 }
 
-static MagickBooleanType IsProfileCorrupt(const char *name,StringInfo *profile)
+static void PatchCorruptProfile(const char *name,StringInfo *profile)
 {
   register unsigned char
     *p;
 
   size_t
     length;
 
   /*
     Detect corrupt profiles and if discovered, repair.
   */
   if (LocaleCompare(name,"xmp") == 0)
     {
       /*
         Remove garbage after xpacket end.
       */
       p=GetStringInfoDatum(profile);
       p=(unsigned char *) strstr((const char *) p,"<?xpacket end=\"w\"?>");
       if (p != (unsigned char *) NULL)
         {
           p+=19;
           length=p-GetStringInfoDatum(profile);
           if (length != GetStringInfoLength(profile))
             {
               *p='\0';
               SetStringInfoLength(profile,length);
-              return(MagickTrue);
             }
         }
-      return(MagickFalse);
+      return;
     }
   if (LocaleCompare(name,"exif") == 0)
     {
       /*
         Check if profile starts with byte order marker instead of Exif.
       */
       p=GetStringInfoDatum(profile);
       if ((LocaleNCompare((const char *) p,"MM",2) == 0) ||
           (LocaleNCompare((const char *) p,"II",2) == 0))
         {
           const unsigned char
             profile_start[] = "Exif\0\0";
 
           StringInfo
             *exif_profile;
 
-          exif_profile=AcquireStringInfo(GetStringInfoLength(profile)+6);
+          exif_profile=AcquireStringInfo(6);
           if (exif_profile != (StringInfo *) NULL)
             {
               SetStringInfoDatum(exif_profile,profile_start);
               ConcatenateStringInfo(exif_profile,profile);
               SetStringInfoLength(profile,GetStringInfoLength(exif_profile));
               SetStringInfo(profile,exif_profile);
               exif_profile=DestroyStringInfo(exif_profile);
-              return(MagickTrue);
             }
         }
     }
-  return(MagickFalse);
 }
 
 #if defined(MAGICKCORE_XML_DELEGATE)
@@ -1936,44 +1933,42 @@ static MagickBooleanType ValidateXMPProfile(Image *image,
 static MagickBooleanType SetImageProfileInternal(Image *image,const char *name,
   const StringInfo *profile,const MagickBooleanType recursive,
   ExceptionInfo *exception)
 {
   char
     key[MagickPathExtent];
 
   MagickBooleanType
     status;
 
   StringInfo
     *clone_profile;
 
   assert(image != (Image *) NULL);
   assert(image->signature == MagickCoreSignature);
   if (image->debug != MagickFalse)
     (void) LogMagickEvent(TraceEvent,GetMagickModule(),"%s",image->filename);
   clone_profile=CloneStringInfo(profile);
-  if (IsProfileCorrupt(name,clone_profile) != MagickFalse)
-    (void) ThrowMagickException(exception,GetMagickModule(),ImageWarning,
-      "CorruptImageProfile","`%s' (%s)",image->filename,name);
+  PatchCorruptProfile(name,clone_profile);
   if ((LocaleCompare(name,"xmp") == 0) &&
       (ValidateXMPProfile(image,clone_profile,exception) == MagickFalse))
     {
       clone_profile=DestroyStringInfo(clone_profile);
       return(MagickTrue);
     }
   if (image->profiles == (SplayTreeInfo *) NULL)
     image->profiles=NewSplayTree(CompareSplayTreeString,RelinquishMagickMemory,
       DestroyProfile);
   (void) CopyMagickString(key,name,MagickPathExtent);
   LocaleLower(key);
   status=AddValueToSplayTree((SplayTreeInfo *) image->profiles,
     ConstantString(key),clone_profile);
   if (status != MagickFalse)
     {
       if (LocaleCompare(name,"8bim") == 0)
         GetProfilesFromResourceBlock(image,clone_profile,exception);
       else
         if (recursive == MagickFalse)
           WriteTo8BimProfile(image,name,clone_profile);
     }
   return(status);
 }
