commit 228c06d97a8a33b60b89ded17acbd0e92cca9cfe
Author: Nicolas Iooss <nicolas.iooss@m4x.org>
Date:   Wed Dec 30 11:07:45 2020 +0100

    libsepol/cil: fix out-of-bound read in cil_print_recursive_blockinherit
    
    OSS-Fuzz found a heap buffer overflow (out-of-bound reads) when the CIL
    compiler tries to report a recursive blockinherit with an optional
    block:
    
        $ echo '(block b (optional o (blockinherit b)))' > tmp.cil
        $ secilc tmp.cil
        Segmentation fault (core dumped)
    
    This is because cil_print_recursive_blockinherit() assumes that all
    nodes are either CIL_BLOCK or CIL_BLOCKINHERIT. Add support for other
    block kinds, using cil_node_to_string() to show them.
    
    Fixes: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=28462
    Signed-off-by: Nicolas Iooss <nicolas.iooss@m4x.org>

diff --git a/libsepol/cil/src/cil_resolve_ast.c b/libsepol/cil/src/cil_resolve_ast.c
index affa7657..68b590bc 100644
--- a/libsepol/cil/src/cil_resolve_ast.c
+++ b/libsepol/cil/src/cil_resolve_ast.c
@@ -2339,31 +2339,37 @@ exit:
 void cil_print_recursive_blockinherit(struct cil_tree_node *bi_node, struct cil_tree_node *terminating_node)
 {
 	struct cil_list *trace = NULL;
 	struct cil_list_item *item = NULL;
 	struct cil_tree_node *curr = NULL;
 
 	cil_list_init(&trace, CIL_NODE);
 
 	for (curr = bi_node; curr != terminating_node; curr = curr->parent) {
 		if (curr->flavor == CIL_BLOCK) {
 			cil_list_prepend(trace, CIL_NODE, curr);
-		} else {
+		} else if (curr->flavor == CIL_BLOCKINHERIT) {
 			if (curr != bi_node) {
 				cil_list_prepend(trace, CIL_NODE, NODE(((struct cil_blockinherit *)curr->data)->block));
 			}
 			cil_list_prepend(trace, CIL_NODE, curr);
+		} else {
+			cil_list_prepend(trace, CIL_NODE, curr);
 		}
 	}
 	cil_list_prepend(trace, CIL_NODE, terminating_node);
 
 	cil_list_for_each(item, trace) {
 		curr = item->data;
 		if (curr->flavor == CIL_BLOCK) {
 			cil_tree_log(curr, CIL_ERR, "block %s", DATUM(curr->data)->name);
-		} else {
+		} else if (curr->flavor == CIL_BLOCKINHERIT) {
 			cil_tree_log(curr, CIL_ERR, "blockinherit %s", ((struct cil_blockinherit *)curr->data)->block_str);
+		} else if (curr->flavor == CIL_OPTIONAL) {
+			cil_tree_log(curr, CIL_ERR, "optional %s", DATUM(curr->data)->name);
+		} else {
+			cil_tree_log(curr, CIL_ERR, "%s", cil_node_to_string(curr));
 		}
 	}
 
 	cil_list_destroy(&trace, CIL_FALSE);
 }
