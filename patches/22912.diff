commit 241af016e9e2a43d24cbdc2378d813ba523f5126
Author: Luca Deri <deri@ntop.org>
Date:   Mon Jun 1 16:36:12 2020 +0200

    Added check for spotify payload lenght

diff --git a/src/lib/protocols/spotify.c b/src/lib/protocols/spotify.c
index a180a1ea..d6610901 100644
--- a/src/lib/protocols/spotify.c
+++ b/src/lib/protocols/spotify.c
@@ -39,82 +39,82 @@ static void ndpi_int_spotify_add_connection(struct ndpi_detection_module_struct
 static void ndpi_check_spotify(struct ndpi_detection_module_struct *ndpi_struct, struct ndpi_flow_struct *flow)
 {
   struct ndpi_packet_struct *packet = &flow->packet;
   // const u_int8_t *packet_payload = packet->payload;
   u_int32_t payload_len = packet->payload_packet_len;
 
   if(packet->udp != NULL) {
     u_int16_t spotify_port = htons(57621);
 
     if((packet->udp->source == spotify_port)
        && (packet->udp->dest == spotify_port)) {
-      if(payload_len > 2) {
+      if(payload_len >= 7) {
 	if(memcmp(packet->payload, "SpotUdp", 7) == 0) {
 	  NDPI_LOG_INFO(ndpi_struct, "found spotify udp dissector\n");
 	  ndpi_int_spotify_add_connection(ndpi_struct, flow, 0);
 	  return;
 	}
       }
     }
   } else if(packet->tcp != NULL) {
 
     if(payload_len >= 9 && packet->payload[0] == 0x00 && packet->payload[1] == 0x04 &&
        packet->payload[2] == 0x00 && packet->payload[3] == 0x00&&
        packet->payload[6] == 0x52 && (packet->payload[7] == 0x0e || packet->payload[7] == 0x0f) &&
        packet->payload[8] == 0x50 ) {
       NDPI_LOG_INFO(ndpi_struct, "found spotify tcp dissector\n");
       ndpi_set_detected_protocol(ndpi_struct, flow, NDPI_PROTOCOL_SPOTIFY, NDPI_PROTOCOL_UNKNOWN);
     }
 
 
     if(packet->iph /* IPv4 Only: we need to support packet->iphv6 at some point */) {
       /* if(packet->detected_protocol_stack[0] == NDPI_PROTOCOL_UNKNOWN) */ {
 	/*
 	Spotify
 
 	78.31.8.0 - 78.31.15.255 (78.31.8.0/22)
 	AS29017
 
 	193.235.232.0 - 193.235.235.255 (193.235.232.0/22)
 	AS29017
 
       194.132.196.0 - 194.132.199.255 (194.132.198.147/22)
       AS43650
 
       194.132.176.0 - 194.132.179.255  (194.132.176.0/22)
       AS43650
 
       194.132.162.0 - 194.132.163.255   (194.132.162.0/24)
       AS43650
       */
 
 	//printf("%08X - %08X\n", ntohl(packet->iph->saddr), ntohl(packet->iph->daddr));
 
     long src_addr = ntohl(packet->iph->saddr);
     long dst_addr = ntohl(packet->iph->daddr);
     long src_addr_masked_22 = src_addr & 0xFFFFFC00; // */22
     long dst_addr_masked_22 = dst_addr & 0xFFFFFC00; // */22
     long src_addr_masked_24 = src_addr & 0xFFFFFF00; // */24
     long dst_addr_masked_24 = dst_addr & 0xFFFFFF00; // */24
 
 	if(   src_addr_masked_22 == 0x4E1F0800 /* 78.31.8.0 */
 	   || dst_addr_masked_22 == 0x4E1F0800 /* 78.31.8.0 */
 	   /* **** */
 	   || src_addr_masked_22 == 0xC1EBE800 /* 193.235.232.0 */
 	   || dst_addr_masked_22 == 0xC1EBE800 /* 193.235.232.0 */
        /* **** */
        || src_addr_masked_22 == 0xC284C400 /* 194.132.196.0 */
        || dst_addr_masked_22 == 0xC284C400 /* 194.132.196.0 */
        /* **** */
        || src_addr_masked_24 == 0xC284A200 /* 194.132.162.0 */
        || dst_addr_masked_24 == 0xC284A200 /* 194.132.162.0 */
 	   ) {
         NDPI_LOG_INFO(ndpi_struct, "found spotify via ip range\n");
 	ndpi_set_detected_protocol(ndpi_struct, flow, NDPI_PROTOCOL_SPOTIFY, NDPI_PROTOCOL_UNKNOWN);
 	  return;
 	}
       }
     }
   }
 
   NDPI_EXCLUDE_PROTO(ndpi_struct, flow);
 }
