commit e323cd0c6ebdeeb42c267a5fe28cec87ae2f00a0
Author: Yukihiro "Matz" Matsumoto <matz@ruby.or.jp>
Date:   Mon May 24 07:05:57 2021 +0900

    class.c: add write barrier for aliases.

diff --git a/src/class.c b/src/class.c
index cd4e160ac..046e99f26 100644
--- a/src/class.c
+++ b/src/class.c
@@ -2198,33 +2198,34 @@ MRB_API void
 mrb_alias_method(mrb_state *mrb, struct RClass *c, mrb_sym a, mrb_sym b)
 {
   mrb_method_t m = mrb_method_search(mrb, c, b);
 
   if (!MRB_METHOD_CFUNC_P(m)) {
     struct RProc *p = MRB_METHOD_PROC(m);
 
     if (MRB_PROC_ENV_P(p)) {
       MRB_PROC_ENV(p)->mid = b;
     }
     else if (p->color != MRB_GC_RED) {
       struct RClass *tc = MRB_PROC_TARGET_CLASS(p);
       struct REnv *e = (struct REnv*)mrb_obj_alloc(mrb, MRB_TT_ENV, NULL);
 
       e->mid = b;
       if (tc) {
         e->c = tc;
         mrb_field_write_barrier(mrb, (struct RBasic*)e, (struct RBasic*)tc);
       }
       p->e.env = e;
       p->flags |= MRB_PROC_ENVSET;
+      mrb_field_write_barrier(mrb, (struct RBasic*)p, (struct RBasic*)e);
     }
   }
   mrb_define_method_raw(mrb, c, a, m);
 }
 
 /*!
  * Defines an alias of a method.
  * \param mrb    the mruby state
  * \param klass  the class which the original method belongs to
  * \param name1  a new name for the method
  * \param name2  the original name of the method
  */
