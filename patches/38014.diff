commit 1ce81b6bcded096e8bca25465fda8a439880edda
Author: Máté Kocsis <kocsismate@woohoolabs.com>
Date:   Fri Aug 27 13:11:57 2021 +0200

    Generate optimizer func info from stubs for ext/standard - part 1 (#7413)

diff --git a/Zend/Optimizer/zend_func_info.c b/Zend/Optimizer/zend_func_info.c
index 681fdd5e22..ce87610705 100644
--- a/Zend/Optimizer/zend_func_info.c
+++ b/Zend/Optimizer/zend_func_info.c
@@ -90,266 +90,178 @@ static uint32_t zend_range_info(const zend_call_info *call_info, const zend_ssa
 static const func_info_t old_func_infos[] = {
 	/* zend */
 	F1("get_class_vars",          MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_STRING | MAY_BE_ARRAY_OF_ANY | MAY_BE_ARRAY_OF_REF),
 	F1("get_defined_vars",        MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_STRING | MAY_BE_ARRAY_OF_ANY | MAY_BE_ARRAY_OF_REF),
 
 	/* ext/standard */
-	F1("bin2hex",                      MAY_BE_STRING),
-	F1("hex2bin",                      MAY_BE_FALSE | MAY_BE_STRING),
-#if HAVE_STRPTIME
-	F1("strptime",                     MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_STRING | MAY_BE_ARRAY_OF_LONG | MAY_BE_ARRAY_OF_STRING),
-#endif
-	F1("wordwrap",                     MAY_BE_STRING),
-	F1("htmlspecialchars",             MAY_BE_STRING),
-	F1("htmlentities",                 MAY_BE_STRING),
-	F1("get_html_translation_table",   MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_STRING | MAY_BE_ARRAY_OF_STRING),
-	F1("sha1",                         MAY_BE_STRING),
-	F1("sha1_file",                    MAY_BE_FALSE | MAY_BE_STRING),
-	F1("md5",                          MAY_BE_STRING),
-	F1("md5_file",                     MAY_BE_FALSE | MAY_BE_STRING),
-	F1("iptcparse",                    MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_STRING | MAY_BE_ARRAY_OF_ARRAY),
-	F1("iptcembed",                    MAY_BE_FALSE | MAY_BE_TRUE | MAY_BE_STRING),
-	F1("getimagesize",                 MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_LONG | MAY_BE_ARRAY_OF_STRING),
-	F1("getimagesizefromstring",       MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_LONG | MAY_BE_ARRAY_OF_STRING),
-	F1("image_type_to_mime_type",      MAY_BE_STRING),
-	F1("image_type_to_extension",      MAY_BE_FALSE | MAY_BE_STRING),
-	F0("phpinfo",                      MAY_BE_TRUE),
-	F1("phpversion",                   MAY_BE_FALSE | MAY_BE_STRING),
-	F0("phpcredits",                   MAY_BE_TRUE),
-	F1("php_sapi_name",                MAY_BE_FALSE | MAY_BE_STRING),
-	F1("php_uname",                    MAY_BE_STRING),
-	F1("php_ini_scanned_files",        MAY_BE_FALSE | MAY_BE_STRING),
-	F1("php_ini_loaded_file",          MAY_BE_FALSE | MAY_BE_STRING),
-	F1("strtok",                       MAY_BE_FALSE | MAY_BE_STRING),
-	F1("strrev",                       MAY_BE_STRING),
-	F1("hebrev",                       MAY_BE_STRING),
-	F1("basename",                     MAY_BE_STRING),
-	F1("dirname",                      MAY_BE_STRING),
-	F1("pathinfo",                     MAY_BE_STRING | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_STRING | MAY_BE_ARRAY_OF_STRING),
-	F1("stripslashes",                 MAY_BE_STRING),
-	F1("stripcslashes",                MAY_BE_STRING),
-	F1("strstr",                       MAY_BE_FALSE | MAY_BE_STRING),
-	F1("stristr",                      MAY_BE_FALSE | MAY_BE_STRING),
-	F1("strrchr",                      MAY_BE_FALSE | MAY_BE_STRING),
-	F1("str_shuffle",                  MAY_BE_STRING),
-	F1("str_word_count",               MAY_BE_LONG | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_LONG | MAY_BE_ARRAY_OF_STRING),
-	F1("str_split",                    MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_LONG | MAY_BE_ARRAY_OF_STRING),
-	F1("strpbrk",                      MAY_BE_FALSE | MAY_BE_STRING),
-	FN("substr_replace",               MAY_BE_STRING | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_STRING),
-	F1("quotemeta",                    MAY_BE_STRING),
-	F1("ucwords",                      MAY_BE_STRING),
-	FN("str_replace",                  MAY_BE_STRING | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_STRING),
-	FN("str_ireplace",                 MAY_BE_STRING | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_STRING),
-	F1("str_repeat",                   MAY_BE_STRING),
-	F1("count_chars",                  MAY_BE_STRING | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_LONG | MAY_BE_ARRAY_OF_LONG),
-	F1("chunk_split",                  MAY_BE_STRING),
-	F1("strip_tags",                   MAY_BE_STRING),
-	F1("explode",                      MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_LONG | MAY_BE_ARRAY_OF_STRING),
-	F1("localeconv",                   MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_STRING | MAY_BE_ARRAY_OF_LONG | MAY_BE_ARRAY_OF_STRING | MAY_BE_ARRAY_OF_ARRAY),
-#if HAVE_NL_LANGINFO
-	F1("nl_langinfo",                  MAY_BE_FALSE | MAY_BE_STRING),
-#endif
-	F1("soundex",                      MAY_BE_STRING),
-	F1("chr",                          MAY_BE_STRING),
-	F1("str_getcsv",                   MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_LONG | MAY_BE_ARRAY_OF_NULL | MAY_BE_ARRAY_OF_STRING),
-	F1("strchr",                       MAY_BE_FALSE | MAY_BE_STRING),
-	F1("sprintf",                      MAY_BE_STRING),
-	F1("vsprintf",                     MAY_BE_STRING),
-	F1("sscanf",                       MAY_BE_NULL | MAY_BE_LONG | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_LONG | MAY_BE_ARRAY_OF_ANY),
-	F1("fscanf",                       MAY_BE_NULL | MAY_BE_FALSE | MAY_BE_LONG | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_LONG | MAY_BE_ARRAY_OF_ANY),
-	F1("parse_url",                    MAY_BE_NULL | MAY_BE_FALSE | MAY_BE_LONG | MAY_BE_STRING | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_STRING | MAY_BE_ARRAY_OF_STRING | MAY_BE_ARRAY_OF_LONG),
-	F1("urlencode",                    MAY_BE_STRING),
-	F1("urldecode",                    MAY_BE_STRING),
-	F1("rawurlencode",                 MAY_BE_STRING),
-	F1("rawurldecode",                 MAY_BE_STRING),
-	F1("http_build_query",             MAY_BE_STRING),
-#if defined(HAVE_SYMLINK) || defined(PHP_WIN32)
-	F1("readlink",                     MAY_BE_FALSE | MAY_BE_STRING),
-#endif
-	F1("exec",                         MAY_BE_FALSE | MAY_BE_STRING),
-	F1("system",                       MAY_BE_FALSE | MAY_BE_STRING),
-	F1("escapeshellcmd",               MAY_BE_STRING),
-	F1("escapeshellarg",               MAY_BE_STRING),
-	F0("passthru",                     MAY_BE_NULL | MAY_BE_FALSE),
-	F1("shell_exec",                   MAY_BE_NULL | MAY_BE_FALSE | MAY_BE_STRING),
-#ifdef PHP_CAN_SUPPORT_PROC_OPEN
-	F1("proc_get_status",              MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_STRING | MAY_BE_ARRAY_OF_FALSE | MAY_BE_ARRAY_OF_TRUE | MAY_BE_ARRAY_OF_LONG | MAY_BE_ARRAY_OF_STRING),
-#endif
-	F1("random_bytes",                 MAY_BE_STRING),
-#if HAVE_GETSERVBYPORT
-	F1("getservbyport",                MAY_BE_FALSE | MAY_BE_STRING),
-#endif
-#if HAVE_GETPROTOBYNUMBER
-	F1("getprotobynumber",             MAY_BE_FALSE | MAY_BE_STRING),
-#endif
 	F1("base64_decode",                MAY_BE_FALSE | MAY_BE_STRING),
 	F1("base64_encode",                MAY_BE_STRING),
 	F1("password_hash",                MAY_BE_STRING),
 	F1("password_get_info",            MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_STRING | MAY_BE_ARRAY_OF_NULL | MAY_BE_ARRAY_OF_LONG | MAY_BE_ARRAY_OF_STRING | MAY_BE_ARRAY_OF_ARRAY),
 	F1("convert_uuencode",             MAY_BE_STRING),
 	F1("convert_uudecode",             MAY_BE_FALSE | MAY_BE_STRING),
 	F1("pow",                          MAY_BE_LONG | MAY_BE_DOUBLE | MAY_BE_OBJECT),
 	F1("decbin",                       MAY_BE_STRING),
 	F1("decoct",                       MAY_BE_STRING),
 	F1("dechex",                       MAY_BE_STRING),
 	F1("base_convert",                 MAY_BE_STRING),
 	F1("number_format",                MAY_BE_STRING),
 #ifdef HAVE_INET_NTOP
 	F1("inet_ntop",                    MAY_BE_FALSE | MAY_BE_STRING),
 #endif
 #ifdef HAVE_INET_PTON
 	F1("inet_pton",                    MAY_BE_FALSE | MAY_BE_STRING),
 #endif
 	F1("long2ip",                      MAY_BE_FALSE | MAY_BE_STRING),
 	F1("getenv",                       MAY_BE_FALSE | MAY_BE_STRING | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_STRING | MAY_BE_ARRAY_OF_STRING),
 #ifdef HAVE_PUTENV
 #endif
 	F1("getopt",                       MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_FALSE | MAY_BE_ARRAY_OF_TRUE | MAY_BE_ARRAY_OF_STRING | MAY_BE_ARRAY_OF_ARRAY),
 #ifdef HAVE_GETLOADAVG
 	F1("sys_getloadavg",               MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_LONG | MAY_BE_ARRAY_OF_DOUBLE),
 #endif
 #ifdef HAVE_GETTIMEOFDAY
 	F1("microtime",                    MAY_BE_DOUBLE | MAY_BE_STRING),
 	F1("gettimeofday",                 MAY_BE_DOUBLE | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_STRING | MAY_BE_ARRAY_OF_LONG),
 #endif
 #ifdef HAVE_GETRUSAGE
 	F1("getrusage",                    MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_STRING | MAY_BE_ARRAY_OF_LONG),
 #endif
 #ifdef HAVE_GETTIMEOFDAY
 	F1("uniqid",                       MAY_BE_STRING),
 #endif
 	F1("quoted_printable_decode",      MAY_BE_STRING),
 	F1("quoted_printable_encode",      MAY_BE_STRING),
 	F1("get_current_user",             MAY_BE_STRING),
 	F1("get_cfg_var",                  MAY_BE_FALSE | MAY_BE_STRING | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_STRING | MAY_BE_ARRAY_OF_ARRAY),
 	F1("error_get_last",               MAY_BE_NULL | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_STRING | MAY_BE_ARRAY_OF_LONG | MAY_BE_ARRAY_OF_STRING),
 	F1("serialize",                    MAY_BE_STRING),
 	F1("var_export",                   MAY_BE_NULL | MAY_BE_STRING),
 	F1("print_r",                      MAY_BE_TRUE | MAY_BE_STRING),
 	F0("register_shutdown_function",   MAY_BE_NULL | MAY_BE_FALSE),
 	F1("highlight_file",               MAY_BE_FALSE | MAY_BE_TRUE | MAY_BE_STRING),
 	F1("show_source",                  MAY_BE_FALSE | MAY_BE_TRUE | MAY_BE_STRING),
 	F1("highlight_string",             MAY_BE_FALSE | MAY_BE_TRUE | MAY_BE_STRING),
 	F1("php_strip_whitespace",         MAY_BE_STRING),
 	F1("ini_get_all",                  MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_STRING | MAY_BE_ARRAY_OF_NULL | MAY_BE_ARRAY_OF_STRING | MAY_BE_ARRAY_OF_ARRAY),
 	F1("ini_alter",                    MAY_BE_FALSE | MAY_BE_STRING),
 	F1("get_include_path",             MAY_BE_FALSE | MAY_BE_STRING),
 	F1("set_include_path",             MAY_BE_FALSE | MAY_BE_STRING),
 	F1("headers_list",                 MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_LONG | MAY_BE_ARRAY_OF_STRING),
 	F1("parse_ini_file",               MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_NULL | MAY_BE_ARRAY_OF_FALSE | MAY_BE_ARRAY_OF_TRUE | MAY_BE_ARRAY_OF_LONG | MAY_BE_ARRAY_OF_DOUBLE | MAY_BE_ARRAY_OF_STRING | MAY_BE_ARRAY_OF_ARRAY),
 	F1("parse_ini_string",             MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_NULL | MAY_BE_ARRAY_OF_FALSE | MAY_BE_ARRAY_OF_TRUE | MAY_BE_ARRAY_OF_LONG | MAY_BE_ARRAY_OF_DOUBLE | MAY_BE_ARRAY_OF_STRING | MAY_BE_ARRAY_OF_ARRAY),
 #if ZEND_DEBUG
 	F1("config_get_hash",              MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_STRING | MAY_BE_ARRAY_OF_STRING | MAY_BE_ARRAY_OF_ARRAY),
 #endif
 	F1("gethostbyaddr",                MAY_BE_FALSE | MAY_BE_STRING),
 	F1("gethostbyname",                MAY_BE_STRING),
 	F1("gethostbynamel",               MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_LONG | MAY_BE_ARRAY_OF_STRING),
 #ifdef HAVE_GETHOSTNAME
 	F1("gethostname",                  MAY_BE_FALSE | MAY_BE_STRING),
 #endif
 	F1("fgets",                        MAY_BE_FALSE | MAY_BE_STRING),
 	F1("fread",                        MAY_BE_FALSE | MAY_BE_STRING),
 	F1("fstat",                        MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_LONG),
 	F1("tempnam",                      MAY_BE_FALSE | MAY_BE_STRING),
 	F1("file",                         MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_LONG | MAY_BE_ARRAY_OF_STRING),
 	F1("file_get_contents",            MAY_BE_FALSE | MAY_BE_STRING),
 	F1("stream_context_get_params",    MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_STRING | MAY_BE_ARRAY_OF_ANY),
 	FN("stream_context_get_options",   MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_STRING | MAY_BE_ARRAY_OF_ANY),
 	F1("stream_socket_get_name",       MAY_BE_FALSE | MAY_BE_STRING),
 	F1("stream_socket_recvfrom",       MAY_BE_FALSE | MAY_BE_STRING),
 #if HAVE_SOCKETPAIR
 	F1("stream_socket_pair",           MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_LONG | MAY_BE_ARRAY_OF_RESOURCE),
 #endif
 	F1("stream_get_contents",          MAY_BE_FALSE | MAY_BE_STRING),
 	F1("fgetcsv",                      MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_LONG | MAY_BE_ARRAY_OF_NULL | MAY_BE_ARRAY_OF_STRING),
 	F1("get_meta_tags",                MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_STRING | MAY_BE_ARRAY_OF_STRING),
 	F1("stream_get_meta_data",         MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_STRING | MAY_BE_ARRAY_OF_ANY),
 	F1("stream_get_line",              MAY_BE_FALSE | MAY_BE_STRING),
 	F1("stream_get_wrappers",          MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_LONG | MAY_BE_ARRAY_OF_STRING),
 	F1("stream_get_transports",        MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_LONG | MAY_BE_ARRAY_OF_STRING),
 	F1("stream_resolve_include_path",  MAY_BE_FALSE | MAY_BE_STRING),
 	F1("get_headers",                  MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_STRING | MAY_BE_ARRAY_OF_ARRAY),
 	F1("socket_get_status",            MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_STRING | MAY_BE_ARRAY_OF_ANY),
 	F1("realpath",                     MAY_BE_FALSE | MAY_BE_STRING),
 	F1("pack",                         MAY_BE_STRING),
 	F1("unpack",                       MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_ANY),
 	F1("get_browser",                  MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_OBJECT | MAY_BE_ARRAY_KEY_STRING | MAY_BE_ARRAY_OF_ANY),
 	F1("crypt",                        MAY_BE_STRING),
 	F1("getcwd",                       MAY_BE_FALSE | MAY_BE_STRING),
 	F1("readdir",                      MAY_BE_FALSE | MAY_BE_STRING),
 	F1("dir",                          MAY_BE_FALSE | MAY_BE_OBJECT),
 	F1("scandir",                      MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_LONG | MAY_BE_ARRAY_OF_STRING),
 #ifdef HAVE_GLOB
 	F1("glob",                         MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_LONG | MAY_BE_ARRAY_OF_STRING),
 #endif
 	F1("filetype",                     MAY_BE_FALSE | MAY_BE_STRING),
 	F1("stat",                         MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_FALSE | MAY_BE_ARRAY_OF_TRUE | MAY_BE_ARRAY_OF_LONG | MAY_BE_ARRAY_OF_STRING),
 	F1("lstat",                        MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_FALSE | MAY_BE_ARRAY_OF_TRUE | MAY_BE_ARRAY_OF_LONG | MAY_BE_ARRAY_OF_STRING),
 	F1("realpath_cache_get",           MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_STRING | MAY_BE_ARRAY_OF_ARRAY),
 #ifdef HAVE_SYSLOG_H
 	F0("syslog",                       MAY_BE_TRUE),
 	F0("closelog",                     MAY_BE_TRUE),
 #endif
 	F1("metaphone",                    MAY_BE_STRING),
 	F1("ob_get_flush",                 MAY_BE_FALSE | MAY_BE_STRING),
 	F1("ob_get_clean",                 MAY_BE_FALSE | MAY_BE_STRING),
 	F1("ob_get_status",                MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_LONG | MAY_BE_ARRAY_OF_STRING | MAY_BE_ARRAY_OF_ARRAY),
 	F1("ob_list_handlers",             MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_LONG | MAY_BE_ARRAY_OF_STRING),
 	F0("array_walk",                   MAY_BE_TRUE),
 	F0("array_walk_recursive",         MAY_BE_TRUE),
 	F0("arsort",                       MAY_BE_TRUE),
 	F0("asort",                        MAY_BE_TRUE),
 	F0("krsort",                       MAY_BE_TRUE),
 	F0("ksort",                        MAY_BE_TRUE),
 	F0("shuffle",                      MAY_BE_TRUE),
 	F0("sort",                         MAY_BE_TRUE),
 	F0("usort",                        MAY_BE_TRUE),
 	F0("uasort",                       MAY_BE_TRUE),
 	F0("uksort",                       MAY_BE_TRUE),
 	F1("compact",                      MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_STRING | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 	FN("array_fill",                   MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_LONG | MAY_BE_ARRAY_OF_ANY),
 	F1("array_fill_keys",              MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 	FC("range",                        zend_range_info),
 	F1("array_replace",                MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 	F1("array_replace_recursive",      MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 	FN("array_keys",                   MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_LONG | MAY_BE_ARRAY_OF_LONG | MAY_BE_ARRAY_OF_STRING),
 	FN("array_values",                 MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_LONG | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 	F1("array_count_values",           MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_LONG),
 	F1("array_column",                 MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 	F1("array_reverse",                MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 	F1("array_flip",                   MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_LONG | MAY_BE_ARRAY_OF_STRING),
 	F1("array_change_key_case",        MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 	FN("array_rand",                   MAY_BE_LONG | MAY_BE_STRING | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_LONG | MAY_BE_ARRAY_OF_LONG | MAY_BE_ARRAY_OF_STRING),
 	F1("array_intersect",              MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 	F1("array_intersect_key",          MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 	F1("array_intersect_ukey",         MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 	F1("array_uintersect",             MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 	F1("array_intersect_assoc",        MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 	F1("array_uintersect_assoc",       MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 	F1("array_intersect_uassoc",       MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 	F1("array_uintersect_uassoc",      MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 	F1("array_diff_key",               MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 	F1("array_diff_ukey",              MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 	F1("array_udiff",                  MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 	F1("array_diff_assoc",             MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 	F1("array_udiff_assoc",            MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 	F1("array_diff_uassoc",            MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 	F1("array_udiff_uassoc",           MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 	F1("str_rot13",                    MAY_BE_STRING),
 	F1("stream_get_filters",           MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_LONG | MAY_BE_ARRAY_OF_STRING),
 	F1("stream_bucket_make_writeable", MAY_BE_NULL | MAY_BE_OBJECT),
 	F1("stream_bucket_new",            MAY_BE_OBJECT),
 	F1("sys_get_temp_dir",             MAY_BE_STRING),
 
 	/* ext/preg */
 	F1("preg_grep",				                MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 
 	F1("utf8_encode",                           MAY_BE_STRING),
 	F1("utf8_decode",                           MAY_BE_STRING),
 
 	/* ext/filter */
 	F1("filter_var_array",						MAY_BE_NULL | MAY_BE_FALSE | MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_ANY | MAY_BE_ARRAY_OF_REF),
 
 	/* ext/spl */
 	F1("iterator_to_array",						MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY | MAY_BE_ARRAY_OF_REF | MAY_BE_ARRAY_OF_ANY),
 
 };
diff --git a/Zend/Optimizer/zend_func_infos.h b/Zend/Optimizer/zend_func_infos.h
index 7b931e98b6..2a787770c8 100644
--- a/Zend/Optimizer/zend_func_infos.h
+++ b/Zend/Optimizer/zend_func_infos.h
@@ -3,427 +3,514 @@
 static const func_info_t func_infos[] = {
     F1("zend_version", MAY_BE_STRING),
     FN("func_get_args", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_ANY),
     F1("get_class_methods", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING),
     F1("get_included_files", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING),
     FN("set_error_handler", MAY_BE_STRING|MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING|MAY_BE_ARRAY_OF_OBJECT|MAY_BE_OBJECT|MAY_BE_NULL),
     F0("restore_error_handler", MAY_BE_TRUE),
     FN("set_exception_handler", MAY_BE_STRING|MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING|MAY_BE_ARRAY_OF_OBJECT|MAY_BE_OBJECT|MAY_BE_NULL),
     F0("restore_exception_handler", MAY_BE_TRUE),
     F1("get_declared_classes", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING),
     F1("get_declared_traits", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING),
     F1("get_declared_interfaces", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING),
     F1("get_defined_functions", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_ARRAY),
     F1("get_resource_type", MAY_BE_STRING),
     F1("get_loaded_extensions", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING),
     F1("get_defined_constants", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_ANY),
     F1("debug_backtrace", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_ARRAY),
     F1("get_extension_funcs", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING|MAY_BE_FALSE),
     F1("gc_status", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_LONG),
     F1("class_implements", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_STRING|MAY_BE_FALSE),
     F1("class_parents", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_STRING|MAY_BE_FALSE),
     F1("class_uses", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_STRING|MAY_BE_FALSE),
     F1("spl_classes", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_STRING),
     F1("spl_object_hash", MAY_BE_STRING),
     FN("socket_export_stream", MAY_BE_RESOURCE|MAY_BE_FALSE),
     F1("iconv_substr", MAY_BE_STRING|MAY_BE_FALSE),
     F1("iconv_mime_encode", MAY_BE_STRING|MAY_BE_FALSE),
     F1("iconv_mime_decode", MAY_BE_STRING|MAY_BE_FALSE),
     F1("iconv_mime_decode_headers", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_STRING|MAY_BE_ARRAY_OF_ARRAY|MAY_BE_FALSE),
     F1("iconv", MAY_BE_STRING|MAY_BE_FALSE),
     F1("iconv_get_encoding", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_STRING|MAY_BE_STRING|MAY_BE_FALSE),
     F1("hash", MAY_BE_STRING|MAY_BE_FALSE),
     F1("hash_file", MAY_BE_STRING|MAY_BE_FALSE),
     F1("hash_hmac", MAY_BE_STRING|MAY_BE_FALSE),
     F1("hash_hmac_file", MAY_BE_STRING|MAY_BE_FALSE),
     F1("hash_init", MAY_BE_OBJECT),
     F1("hash_final", MAY_BE_STRING),
     F1("hash_copy", MAY_BE_OBJECT),
     F1("hash_algos", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING),
     F1("hash_hmac_algos", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING),
     F1("hash_pbkdf2", MAY_BE_STRING),
     F1("hash_hkdf", MAY_BE_STRING),
 #if defined(PHP_MHASH_BC)
     F1("mhash_get_hash_name", MAY_BE_STRING|MAY_BE_FALSE),
 #endif
 #if defined(PHP_MHASH_BC)
     F1("mhash_keygen_s2k", MAY_BE_STRING|MAY_BE_FALSE),
 #endif
 #if defined(PHP_MHASH_BC)
     F1("mhash", MAY_BE_STRING|MAY_BE_FALSE),
 #endif
     FN("dba_popen", MAY_BE_RESOURCE|MAY_BE_FALSE),
     FN("dba_open", MAY_BE_RESOURCE|MAY_BE_FALSE),
     F1("date", MAY_BE_STRING),
     F1("gmdate", MAY_BE_STRING),
     F1("strftime", MAY_BE_STRING|MAY_BE_FALSE),
     F1("gmstrftime", MAY_BE_STRING|MAY_BE_FALSE),
     F1("localtime", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_LONG),
     F1("getdate", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_LONG|MAY_BE_ARRAY_OF_STRING),
     F1("date_create", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("date_create_immutable", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("date_create_from_format", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("date_create_immutable_from_format", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("date_parse", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_ANY),
     F1("date_parse_from_format", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_ANY),
     F1("date_get_last_errors", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_LONG|MAY_BE_ARRAY_OF_ARRAY|MAY_BE_FALSE),
     F1("date_format", MAY_BE_STRING),
     F1("date_timezone_get", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("date_diff", MAY_BE_OBJECT),
     F1("timezone_open", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("timezone_name_get", MAY_BE_STRING),
     F1("timezone_name_from_abbr", MAY_BE_STRING|MAY_BE_FALSE),
     F1("timezone_transitions_get", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_ANY|MAY_BE_FALSE),
     F1("timezone_location_get", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_DOUBLE|MAY_BE_ARRAY_OF_STRING|MAY_BE_FALSE),
     F1("timezone_identifiers_list", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING),
     F1("timezone_abbreviations_list", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_ARRAY),
     F1("timezone_version_get", MAY_BE_STRING),
     F1("date_interval_create_from_date_string", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("date_interval_format", MAY_BE_STRING),
     F1("date_default_timezone_get", MAY_BE_STRING),
     F1("date_sunrise", MAY_BE_STRING|MAY_BE_LONG|MAY_BE_DOUBLE|MAY_BE_FALSE),
     F1("date_sunset", MAY_BE_STRING|MAY_BE_LONG|MAY_BE_DOUBLE|MAY_BE_FALSE),
     F1("date_sun_info", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_FALSE|MAY_BE_ARRAY_OF_TRUE|MAY_BE_ARRAY_OF_LONG),
     FN("bzopen", MAY_BE_RESOURCE|MAY_BE_FALSE),
     F1("ob_gzhandler", MAY_BE_STRING|MAY_BE_FALSE),
     F1("zlib_get_coding_type", MAY_BE_STRING|MAY_BE_FALSE),
     F1("gzfile", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING|MAY_BE_FALSE),
     F1("gzopen", MAY_BE_RESOURCE|MAY_BE_FALSE),
     F1("zlib_encode", MAY_BE_STRING|MAY_BE_FALSE),
     F1("zlib_decode", MAY_BE_STRING|MAY_BE_FALSE),
     F1("gzdeflate", MAY_BE_STRING|MAY_BE_FALSE),
     F1("gzencode", MAY_BE_STRING|MAY_BE_FALSE),
     F1("gzcompress", MAY_BE_STRING|MAY_BE_FALSE),
     F1("gzinflate", MAY_BE_STRING|MAY_BE_FALSE),
     F1("gzdecode", MAY_BE_STRING|MAY_BE_FALSE),
     F1("gzuncompress", MAY_BE_STRING|MAY_BE_FALSE),
     F1("xml_error_string", MAY_BE_STRING|MAY_BE_NULL),
     F1("xml_parser_get_option", MAY_BE_STRING|MAY_BE_LONG),
 #if HAVE_NANOSLEEP
     F1("time_nanosleep", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_LONG|MAY_BE_BOOL),
 #endif
+#if HAVE_GETSERVBYPORT
+    F1("getservbyport", MAY_BE_STRING|MAY_BE_FALSE),
+#endif
+#if HAVE_GETPROTOBYNUMBER
+    F1("getprotobynumber", MAY_BE_STRING|MAY_BE_FALSE),
+#endif
+#if HAVE_STRPTIME
+    F1("strptime", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_LONG|MAY_BE_ARRAY_OF_STRING|MAY_BE_FALSE),
+#endif
 #if defined(PHP_WIN32) || HAVE_DNS_SEARCH_FUNC
     F1("dns_get_record", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_ARRAY|MAY_BE_FALSE),
 #endif
+    F1("md5", MAY_BE_STRING),
+    F1("md5_file", MAY_BE_STRING|MAY_BE_FALSE),
+    F1("sha1", MAY_BE_STRING),
+    F1("sha1_file", MAY_BE_STRING|MAY_BE_FALSE),
+    F1("htmlspecialchars", MAY_BE_STRING),
+    F1("htmlentities", MAY_BE_STRING),
+    F1("get_html_translation_table", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_STRING),
+    F1("bin2hex", MAY_BE_STRING),
+    F1("hex2bin", MAY_BE_STRING|MAY_BE_FALSE),
+#if HAVE_NL_LANGINFO
+    F1("nl_langinfo", MAY_BE_STRING|MAY_BE_FALSE),
+#endif
+    F1("wordwrap", MAY_BE_STRING),
+    F1("explode", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING),
+    F1("strtok", MAY_BE_STRING|MAY_BE_FALSE),
+    F1("basename", MAY_BE_STRING),
+    F1("dirname", MAY_BE_STRING),
+    F1("pathinfo", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_STRING|MAY_BE_STRING),
+    F1("stristr", MAY_BE_STRING|MAY_BE_FALSE),
+    F1("strstr", MAY_BE_STRING|MAY_BE_FALSE),
+    F1("strrchr", MAY_BE_STRING|MAY_BE_FALSE),
+    F1("chunk_split", MAY_BE_STRING),
+    FN("substr_replace", MAY_BE_STRING|MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_STRING),
+    F1("quotemeta", MAY_BE_STRING),
+    F1("chr", MAY_BE_STRING),
+    F1("ucwords", MAY_BE_STRING),
+    F1("strrev", MAY_BE_STRING),
+    F1("stripcslashes", MAY_BE_STRING),
+    F1("stripslashes", MAY_BE_STRING),
+    F1("str_replace", MAY_BE_STRING|MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_STRING),
+    F1("str_ireplace", MAY_BE_STRING|MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_STRING),
+    F1("hebrev", MAY_BE_STRING),
+    F1("strip_tags", MAY_BE_STRING),
+    F1("str_getcsv", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING|MAY_BE_ARRAY_OF_NULL),
+    F1("str_repeat", MAY_BE_STRING),
+    F1("count_chars", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_LONG|MAY_BE_STRING),
+    F1("localeconv", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_LONG|MAY_BE_ARRAY_OF_STRING|MAY_BE_ARRAY_OF_ARRAY),
+    F1("sscanf", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_ANY|MAY_BE_LONG|MAY_BE_NULL),
+    F1("str_shuffle", MAY_BE_STRING),
+    F1("str_word_count", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING|MAY_BE_LONG),
+    F1("str_split", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING),
+    F1("strpbrk", MAY_BE_STRING|MAY_BE_FALSE),
     FN("opendir", MAY_BE_RESOURCE|MAY_BE_FALSE),
+    F1("exec", MAY_BE_STRING|MAY_BE_FALSE),
+    F1("system", MAY_BE_STRING|MAY_BE_FALSE),
+    F0("passthru", MAY_BE_FALSE|MAY_BE_NULL),
+    F1("escapeshellcmd", MAY_BE_STRING),
+    F1("escapeshellarg", MAY_BE_STRING),
+    F1("shell_exec", MAY_BE_STRING|MAY_BE_FALSE|MAY_BE_NULL),
     F1("popen", MAY_BE_RESOURCE|MAY_BE_FALSE),
     F1("fopen", MAY_BE_RESOURCE|MAY_BE_FALSE),
+    F1("fscanf", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_ANY|MAY_BE_LONG|MAY_BE_FALSE|MAY_BE_NULL),
     F1("tmpfile", MAY_BE_RESOURCE|MAY_BE_FALSE),
+    F1("sprintf", MAY_BE_STRING),
+    F1("vsprintf", MAY_BE_STRING),
     F1("fsockopen", MAY_BE_RESOURCE|MAY_BE_FALSE),
     FN("pfsockopen", MAY_BE_RESOURCE|MAY_BE_FALSE),
+    F1("http_build_query", MAY_BE_STRING),
+    F1("image_type_to_mime_type", MAY_BE_STRING),
+    F1("image_type_to_extension", MAY_BE_STRING|MAY_BE_FALSE),
+    F1("getimagesize", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_LONG|MAY_BE_ARRAY_OF_STRING|MAY_BE_FALSE),
+    F1("getimagesizefromstring", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_LONG|MAY_BE_ARRAY_OF_STRING|MAY_BE_FALSE),
+    F0("phpinfo", MAY_BE_TRUE),
+    F1("phpversion", MAY_BE_STRING|MAY_BE_FALSE),
+    F0("phpcredits", MAY_BE_TRUE),
+    F1("php_sapi_name", MAY_BE_STRING|MAY_BE_FALSE),
+    F1("php_uname", MAY_BE_STRING),
+    F1("php_ini_scanned_files", MAY_BE_STRING|MAY_BE_FALSE),
+    F1("php_ini_loaded_file", MAY_BE_STRING|MAY_BE_FALSE),
+    F1("iptcembed", MAY_BE_STRING|MAY_BE_BOOL),
+    F1("iptcparse", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_ARRAY|MAY_BE_FALSE),
+#if defined(HAVE_SYMLINK) || defined(PHP_WIN32)
+    F1("readlink", MAY_BE_STRING|MAY_BE_FALSE),
+#endif
 #if defined(PHP_CAN_SUPPORT_PROC_OPEN)
     F1("proc_open", MAY_BE_RESOURCE|MAY_BE_FALSE),
 #endif
+#if defined(PHP_CAN_SUPPORT_PROC_OPEN)
+    F1("proc_get_status", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_FALSE|MAY_BE_ARRAY_OF_TRUE|MAY_BE_ARRAY_OF_LONG|MAY_BE_ARRAY_OF_STRING),
+#endif
+    F1("random_bytes", MAY_BE_STRING),
+    F1("soundex", MAY_BE_STRING),
     F1("stream_context_create", MAY_BE_RESOURCE),
     FN("stream_context_get_default", MAY_BE_RESOURCE),
     FN("stream_context_set_default", MAY_BE_RESOURCE),
     FN("stream_filter_prepend", MAY_BE_RESOURCE|MAY_BE_FALSE),
     FN("stream_filter_append", MAY_BE_RESOURCE|MAY_BE_FALSE),
     F1("stream_socket_client", MAY_BE_RESOURCE|MAY_BE_FALSE),
     F1("stream_socket_server", MAY_BE_RESOURCE|MAY_BE_FALSE),
     F1("stream_socket_accept", MAY_BE_RESOURCE|MAY_BE_FALSE),
+    F1("parse_url", MAY_BE_LONG|MAY_BE_STRING|MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_LONG|MAY_BE_ARRAY_OF_STRING|MAY_BE_NULL|MAY_BE_FALSE),
+    F1("urlencode", MAY_BE_STRING),
+    F1("urldecode", MAY_BE_STRING),
+    F1("rawurlencode", MAY_BE_STRING),
+    F1("rawurldecode", MAY_BE_STRING),
     FN("zip_open", MAY_BE_RESOURCE|MAY_BE_LONG|MAY_BE_FALSE),
     FN("zip_read", MAY_BE_RESOURCE|MAY_BE_FALSE),
     F1("curl_copy_handle", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("curl_error", MAY_BE_STRING),
     F1("curl_escape", MAY_BE_STRING|MAY_BE_FALSE),
     F1("curl_unescape", MAY_BE_STRING|MAY_BE_FALSE),
     F1("curl_file_create", MAY_BE_OBJECT),
     F1("curl_init", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("curl_multi_info_read", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_LONG|MAY_BE_ARRAY_OF_OBJECT|MAY_BE_FALSE),
     F1("curl_multi_init", MAY_BE_OBJECT),
     F1("curl_multi_strerror", MAY_BE_STRING|MAY_BE_NULL),
     F1("curl_share_init", MAY_BE_OBJECT),
     F1("curl_share_strerror", MAY_BE_STRING|MAY_BE_NULL),
     F1("curl_strerror", MAY_BE_STRING|MAY_BE_NULL),
     F1("curl_version", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_LONG|MAY_BE_ARRAY_OF_STRING|MAY_BE_ARRAY_OF_ARRAY|MAY_BE_FALSE),
     F1("json_encode", MAY_BE_STRING|MAY_BE_FALSE),
     F1("json_last_error_msg", MAY_BE_STRING),
     F1("finfo_open", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("finfo_file", MAY_BE_STRING|MAY_BE_FALSE),
     F1("finfo_buffer", MAY_BE_STRING|MAY_BE_FALSE),
     F1("mime_content_type", MAY_BE_STRING|MAY_BE_FALSE),
     FN("oci_new_connect", MAY_BE_RESOURCE|MAY_BE_FALSE),
     FN("oci_connect", MAY_BE_RESOURCE|MAY_BE_FALSE),
     FN("oci_pconnect", MAY_BE_RESOURCE|MAY_BE_FALSE),
     FN("oci_parse", MAY_BE_RESOURCE|MAY_BE_FALSE),
     FN("oci_get_implicit_resultset", MAY_BE_RESOURCE|MAY_BE_FALSE),
     FN("oci_password_change", MAY_BE_RESOURCE|MAY_BE_BOOL),
     FN("oci_new_cursor", MAY_BE_RESOURCE|MAY_BE_FALSE),
     FN("odbc_prepare", MAY_BE_RESOURCE|MAY_BE_FALSE),
     FN("odbc_exec", MAY_BE_RESOURCE|MAY_BE_FALSE),
     FN("odbc_connect", MAY_BE_RESOURCE|MAY_BE_FALSE),
     FN("odbc_pconnect", MAY_BE_RESOURCE|MAY_BE_FALSE),
     FN("odbc_tables", MAY_BE_RESOURCE|MAY_BE_FALSE),
     FN("odbc_columns", MAY_BE_RESOURCE|MAY_BE_FALSE),
     FN("odbc_gettypeinfo", MAY_BE_RESOURCE|MAY_BE_FALSE),
     FN("odbc_primarykeys", MAY_BE_RESOURCE|MAY_BE_FALSE),
 #if !defined(HAVE_SOLID) && !defined(HAVE_SOLID_30) && !defined(HAVE_SOLID_35)
     FN("odbc_procedurecolumns", MAY_BE_RESOURCE|MAY_BE_FALSE),
 #endif
 #if !defined(HAVE_SOLID) && !defined(HAVE_SOLID_30) && !defined(HAVE_SOLID_35)
     FN("odbc_procedures", MAY_BE_RESOURCE|MAY_BE_FALSE),
 #endif
 #if !defined(HAVE_SOLID) && !defined(HAVE_SOLID_30) && !defined(HAVE_SOLID_35)
     FN("odbc_foreignkeys", MAY_BE_RESOURCE|MAY_BE_FALSE),
 #endif
     FN("odbc_specialcolumns", MAY_BE_RESOURCE|MAY_BE_FALSE),
     FN("odbc_statistics", MAY_BE_RESOURCE|MAY_BE_FALSE),
 #if !defined(HAVE_DBMAKER) && !defined(HAVE_SOLID) && !defined(HAVE_SOLID_30) &&!defined(HAVE_SOLID_35)
     FN("odbc_tableprivileges", MAY_BE_RESOURCE|MAY_BE_FALSE),
 #endif
 #if !defined(HAVE_DBMAKER) && !defined(HAVE_SOLID) && !defined(HAVE_SOLID_30) &&!defined(HAVE_SOLID_35)
     FN("odbc_columnprivileges", MAY_BE_RESOURCE|MAY_BE_FALSE),
 #endif
     F1("textdomain", MAY_BE_STRING),
     F1("gettext", MAY_BE_STRING),
     F1("dgettext", MAY_BE_STRING),
     F1("dcgettext", MAY_BE_STRING),
     F1("bindtextdomain", MAY_BE_STRING|MAY_BE_FALSE),
 #if defined(HAVE_NGETTEXT)
     F1("ngettext", MAY_BE_STRING),
 #endif
 #if defined(HAVE_DNGETTEXT)
     F1("dngettext", MAY_BE_STRING),
 #endif
 #if defined(HAVE_DCNGETTEXT)
     F1("dcngettext", MAY_BE_STRING),
 #endif
 #if defined(HAVE_BIND_TEXTDOMAIN_CODESET)
     F1("bind_textdomain_codeset", MAY_BE_STRING|MAY_BE_FALSE),
 #endif
     F1("mysqli_affected_rows", MAY_BE_LONG|MAY_BE_STRING),
     F1("mysqli_character_set_name", MAY_BE_STRING),
     F0("mysqli_close", MAY_BE_TRUE),
     F1("mysqli_connect", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("mysqli_connect_error", MAY_BE_STRING|MAY_BE_NULL),
     F0("mysqli_debug", MAY_BE_TRUE),
     F1("mysqli_error", MAY_BE_STRING),
     F1("mysqli_error_list", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_ARRAY),
     F1("mysqli_fetch_field", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("mysqli_fetch_fields", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_OBJECT),
     F1("mysqli_fetch_field_direct", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("mysqli_fetch_lengths", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_LONG|MAY_BE_FALSE),
     F1("mysqli_fetch_all", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_ANY),
     F1("mysqli_fetch_array", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_ANY|MAY_BE_NULL|MAY_BE_FALSE),
     F1("mysqli_fetch_assoc", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_ANY|MAY_BE_NULL|MAY_BE_FALSE),
     F1("mysqli_fetch_object", MAY_BE_OBJECT|MAY_BE_NULL|MAY_BE_FALSE),
     F1("mysqli_fetch_row", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_ANY|MAY_BE_NULL|MAY_BE_FALSE),
 #if defined(MYSQLI_USE_MYSQLND)
     F1("mysqli_get_connection_stats", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_ANY),
 #endif
 #if defined(MYSQLI_USE_MYSQLND)
     F1("mysqli_get_client_stats", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_STRING),
 #endif
     F1("mysqli_get_charset", MAY_BE_OBJECT|MAY_BE_NULL),
     F1("mysqli_get_client_info", MAY_BE_STRING),
     F1("mysqli_get_links_stats", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_LONG),
     F1("mysqli_get_host_info", MAY_BE_STRING),
     F1("mysqli_get_server_info", MAY_BE_STRING),
     F1("mysqli_get_warnings", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("mysqli_init", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("mysqli_info", MAY_BE_STRING|MAY_BE_NULL),
     F1("mysqli_insert_id", MAY_BE_LONG|MAY_BE_STRING),
     F1("mysqli_num_rows", MAY_BE_LONG|MAY_BE_STRING),
     F1("mysqli_prepare", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("mysqli_query", MAY_BE_OBJECT|MAY_BE_BOOL),
     F1("mysqli_real_escape_string", MAY_BE_STRING),
 #if defined(MYSQLI_USE_MYSQLND)
     F1("mysqli_reap_async_query", MAY_BE_OBJECT|MAY_BE_BOOL),
 #endif
     F1("mysqli_stmt_affected_rows", MAY_BE_LONG|MAY_BE_STRING),
     F0("mysqli_stmt_close", MAY_BE_TRUE),
     F1("mysqli_stmt_error", MAY_BE_STRING),
     F1("mysqli_stmt_error_list", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_ARRAY),
 #if defined(MYSQLI_USE_MYSQLND)
     F1("mysqli_stmt_get_result", MAY_BE_OBJECT|MAY_BE_FALSE),
 #endif
     F1("mysqli_stmt_get_warnings", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("mysqli_stmt_init", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("mysqli_stmt_insert_id", MAY_BE_LONG|MAY_BE_STRING),
     F1("mysqli_stmt_num_rows", MAY_BE_LONG|MAY_BE_STRING),
     F1("mysqli_stmt_result_metadata", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("mysqli_stmt_sqlstate", MAY_BE_STRING),
     F1("mysqli_sqlstate", MAY_BE_STRING),
     F0("mysqli_ssl_set", MAY_BE_TRUE),
     F1("mysqli_stat", MAY_BE_STRING|MAY_BE_FALSE),
     F1("mysqli_store_result", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("mysqli_use_result", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("exif_tagname", MAY_BE_STRING|MAY_BE_FALSE),
     F1("exif_read_data", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_ANY|MAY_BE_FALSE),
     F1("exif_thumbnail", MAY_BE_STRING|MAY_BE_FALSE),
     F1("pg_dbname", MAY_BE_STRING),
     F1("pg_options", MAY_BE_STRING),
     F1("pg_port", MAY_BE_STRING),
     F1("pg_tty", MAY_BE_STRING),
     F1("pg_host", MAY_BE_STRING),
     F1("pg_version", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_LONG|MAY_BE_ARRAY_OF_STRING|MAY_BE_ARRAY_OF_NULL),
     F1("pg_parameter_status", MAY_BE_STRING|MAY_BE_FALSE),
     F1("pg_query", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("pg_query_params", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("pg_prepare", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("pg_execute", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("pg_field_name", MAY_BE_STRING),
     F1("pg_field_type_oid", MAY_BE_STRING|MAY_BE_LONG),
     F1("pg_fetch_result", MAY_BE_STRING|MAY_BE_FALSE|MAY_BE_NULL),
     F1("pg_fetch_row", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_STRING|MAY_BE_ARRAY_OF_NULL|MAY_BE_FALSE),
     F1("pg_fetch_assoc", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_STRING|MAY_BE_ARRAY_OF_NULL|MAY_BE_FALSE),
     F1("pg_fetch_array", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_STRING|MAY_BE_ARRAY_OF_NULL|MAY_BE_FALSE),
     F1("pg_fetch_object", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("pg_fetch_all", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_ARRAY),
     F1("pg_fetch_all_columns", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING|MAY_BE_ARRAY_OF_NULL),
     F1("pg_last_oid", MAY_BE_STRING|MAY_BE_LONG|MAY_BE_FALSE),
     F1("pg_lo_create", MAY_BE_STRING|MAY_BE_LONG|MAY_BE_FALSE),
     F1("pg_lo_open", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("pg_lo_read", MAY_BE_STRING|MAY_BE_FALSE),
     F1("pg_lo_import", MAY_BE_STRING|MAY_BE_LONG|MAY_BE_FALSE),
     F1("pg_copy_to", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING|MAY_BE_FALSE),
     F1("pg_escape_string", MAY_BE_STRING),
     F1("pg_escape_bytea", MAY_BE_STRING),
     F1("pg_unescape_bytea", MAY_BE_STRING),
     F1("pg_escape_literal", MAY_BE_STRING|MAY_BE_FALSE),
     F1("pg_escape_identifier", MAY_BE_STRING|MAY_BE_FALSE),
     F1("pg_result_error", MAY_BE_STRING|MAY_BE_FALSE),
     F1("pg_result_error_field", MAY_BE_STRING|MAY_BE_FALSE|MAY_BE_NULL),
     F1("pg_get_result", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("pg_result_status", MAY_BE_STRING|MAY_BE_LONG),
     F1("pg_get_notify", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_ANY|MAY_BE_FALSE),
     F1("pg_socket", MAY_BE_RESOURCE|MAY_BE_FALSE),
     F1("pg_meta_data", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_ARRAY|MAY_BE_FALSE),
     F1("pg_convert", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_ANY|MAY_BE_FALSE),
     F1("pg_insert", MAY_BE_OBJECT|MAY_BE_STRING|MAY_BE_BOOL),
     F1("pg_update", MAY_BE_STRING|MAY_BE_BOOL),
     F1("pg_delete", MAY_BE_STRING|MAY_BE_BOOL),
     F1("pg_select", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_ARRAY|MAY_BE_STRING|MAY_BE_FALSE),
     F1("gd_info", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_STRING|MAY_BE_ARRAY_OF_FALSE|MAY_BE_ARRAY_OF_TRUE),
     F1("imagecreatetruecolor", MAY_BE_OBJECT|MAY_BE_FALSE),
 #if defined(PHP_WIN32)
     F1("imagegrabwindow", MAY_BE_OBJECT|MAY_BE_FALSE),
 #endif
 #if defined(PHP_WIN32)
     F1("imagegrabscreen", MAY_BE_OBJECT|MAY_BE_FALSE),
 #endif
     F1("imagerotate", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("imagecreate", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("imagecreatefromstring", MAY_BE_OBJECT|MAY_BE_FALSE),
 #if defined(HAVE_GD_AVIF)
     F1("imagecreatefromavif", MAY_BE_OBJECT|MAY_BE_FALSE),
 #endif
     F1("imagecreatefromgif", MAY_BE_OBJECT|MAY_BE_FALSE),
 #if defined(HAVE_GD_JPG)
     F1("imagecreatefromjpeg", MAY_BE_OBJECT|MAY_BE_FALSE),
 #endif
 #if defined(HAVE_GD_PNG)
     F1("imagecreatefrompng", MAY_BE_OBJECT|MAY_BE_FALSE),
 #endif
 #if defined(HAVE_GD_WEBP)
     F1("imagecreatefromwebp", MAY_BE_OBJECT|MAY_BE_FALSE),
 #endif
     F1("imagecreatefromxbm", MAY_BE_OBJECT|MAY_BE_FALSE),
 #if defined(HAVE_GD_XPM)
     F1("imagecreatefromxpm", MAY_BE_OBJECT|MAY_BE_FALSE),
 #endif
     F1("imagecreatefromwbmp", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("imagecreatefromgd", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("imagecreatefromgd2", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("imagecreatefromgd2part", MAY_BE_OBJECT|MAY_BE_FALSE),
 #if defined(HAVE_GD_BMP)
     F1("imagecreatefrombmp", MAY_BE_OBJECT|MAY_BE_FALSE),
 #endif
     F0("imagecolorset", MAY_BE_FALSE|MAY_BE_NULL),
     F1("imagecolorsforindex", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_LONG),
     F1("imagegetclip", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_LONG),
 #if defined(HAVE_GD_FREETYPE)
     F1("imageftbbox", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_LONG|MAY_BE_FALSE),
 #endif
 #if defined(HAVE_GD_FREETYPE)
     F1("imagefttext", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_LONG|MAY_BE_FALSE),
 #endif
     F1("imagecrop", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("imagecropauto", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("imagescale", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("imageaffine", MAY_BE_OBJECT|MAY_BE_FALSE),
     F1("imageaffinematrixget", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_DOUBLE|MAY_BE_FALSE),
     F1("imageaffinematrixconcat", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_DOUBLE|MAY_BE_FALSE),
     F1("imageresolution", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_LONG|MAY_BE_TRUE),
     FN("preg_replace", MAY_BE_STRING|MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_STRING|MAY_BE_NULL),
     FN("preg_filter", MAY_BE_STRING|MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_STRING|MAY_BE_NULL),
     FN("preg_replace_callback", MAY_BE_STRING|MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_STRING|MAY_BE_NULL),
     F1("preg_split", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_STRING|MAY_BE_ARRAY_OF_ARRAY|MAY_BE_FALSE),
     FN("sodium_crypto_kx_client_session_keys", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING),
     FN("sodium_crypto_kx_server_session_keys", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING),
     F0("sodium_crypto_generichash_update", MAY_BE_TRUE),
     F1("filter_input_array", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_ANY|MAY_BE_FALSE|MAY_BE_NULL),
     F1("filter_list", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING),
     FN("pcntl_signal_get_handler", MAY_BE_STRING|MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING|MAY_BE_ARRAY_OF_OBJECT|MAY_BE_OBJECT|MAY_BE_LONG),
     F1("bcadd", MAY_BE_STRING),
     F1("bcsub", MAY_BE_STRING),
     F1("bcmul", MAY_BE_STRING),
     F1("bcdiv", MAY_BE_STRING),
     F1("bcmod", MAY_BE_STRING),
     F1("bcpowmod", MAY_BE_STRING),
     F1("bcpow", MAY_BE_STRING),
     F1("bcsqrt", MAY_BE_STRING),
     F1("mb_language", MAY_BE_STRING|MAY_BE_BOOL),
     F1("mb_internal_encoding", MAY_BE_STRING|MAY_BE_BOOL),
     F1("mb_http_input", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING|MAY_BE_STRING|MAY_BE_FALSE),
     F1("mb_http_output", MAY_BE_STRING|MAY_BE_BOOL),
     F1("mb_detect_order", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING|MAY_BE_TRUE),
     F1("mb_substitute_character", MAY_BE_STRING|MAY_BE_LONG|MAY_BE_BOOL),
     F1("mb_preferred_mime_name", MAY_BE_STRING|MAY_BE_FALSE),
     F1("mb_output_handler", MAY_BE_STRING),
     F1("mb_strstr", MAY_BE_STRING|MAY_BE_FALSE),
     F1("mb_strrchr", MAY_BE_STRING|MAY_BE_FALSE),
     F1("mb_stristr", MAY_BE_STRING|MAY_BE_FALSE),
     F1("mb_strrichr", MAY_BE_STRING|MAY_BE_FALSE),
     F1("mb_substr", MAY_BE_STRING),
     F1("mb_strcut", MAY_BE_STRING),
     F1("mb_strimwidth", MAY_BE_STRING),
     F1("mb_convert_encoding", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_ANY|MAY_BE_STRING|MAY_BE_FALSE),
     F1("mb_convert_case", MAY_BE_STRING),
     F1("mb_strtoupper", MAY_BE_STRING),
     F1("mb_strtolower", MAY_BE_STRING),
     F1("mb_detect_encoding", MAY_BE_STRING|MAY_BE_FALSE),
     F1("mb_list_encodings", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING),
     F1("mb_encoding_aliases", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING),
     F1("mb_encode_mimeheader", MAY_BE_STRING),
     F1("mb_decode_mimeheader", MAY_BE_STRING),
     F1("mb_convert_kana", MAY_BE_STRING),
     F1("mb_convert_variables", MAY_BE_STRING|MAY_BE_FALSE),
     F1("mb_encode_numericentity", MAY_BE_STRING),
     F1("mb_decode_numericentity", MAY_BE_STRING),
     F1("mb_get_info", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_LONG|MAY_BE_ARRAY_OF_STRING|MAY_BE_ARRAY_OF_ARRAY|MAY_BE_STRING|MAY_BE_LONG|MAY_BE_FALSE),
 #if defined(HAVE_MBREGEX)
     F1("mb_regex_encoding", MAY_BE_STRING|MAY_BE_BOOL),
 #endif
 #if defined(HAVE_MBREGEX)
     F1("mb_ereg_replace", MAY_BE_STRING|MAY_BE_FALSE|MAY_BE_NULL),
 #endif
 #if defined(HAVE_MBREGEX)
     F1("mb_eregi_replace", MAY_BE_STRING|MAY_BE_FALSE|MAY_BE_NULL),
 #endif
 #if defined(HAVE_MBREGEX)
     F1("mb_ereg_replace_callback", MAY_BE_STRING|MAY_BE_FALSE|MAY_BE_NULL),
 #endif
 #if defined(HAVE_MBREGEX)
     F1("mb_split", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_STRING|MAY_BE_FALSE),
 #endif
 #if defined(HAVE_MBREGEX)
     F1("mb_ereg_search_pos", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_OF_LONG|MAY_BE_FALSE),
 #endif
 #if defined(HAVE_MBREGEX)
     F1("mb_ereg_search_regs", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_STRING|MAY_BE_ARRAY_OF_FALSE|MAY_BE_FALSE),
 #endif
 #if defined(HAVE_MBREGEX)
     F1("mb_ereg_search_getregs", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_LONG|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_STRING|MAY_BE_ARRAY_OF_FALSE|MAY_BE_FALSE),
 #endif
 #if defined(HAVE_MBREGEX)
     F1("mb_regex_set_options", MAY_BE_STRING),
 #endif
     F1("session_name", MAY_BE_STRING|MAY_BE_FALSE),
     F1("session_module_name", MAY_BE_STRING|MAY_BE_FALSE),
     F1("session_save_path", MAY_BE_STRING|MAY_BE_FALSE),
     F1("session_create_id", MAY_BE_STRING|MAY_BE_FALSE),
     F1("session_encode", MAY_BE_STRING|MAY_BE_FALSE),
     F1("session_get_cookie_params", MAY_BE_ARRAY|MAY_BE_ARRAY_KEY_STRING|MAY_BE_ARRAY_OF_ANY),
     F1("session_cache_limiter", MAY_BE_STRING|MAY_BE_FALSE),
 };
diff --git a/ext/standard/basic_functions.stub.php b/ext/standard/basic_functions.stub.php
index b658f5dbc6..69ef7d8b6c 100755
--- a/ext/standard/basic_functions.stub.php
+++ b/ext/standard/basic_functions.stub.php
@@ -354,6 +354,7 @@ function getservbyname(string $service, string $protocol): int|false {}
 #endif
 
 #if HAVE_GETSERVBYPORT
+/** @refcount 1 */
 function getservbyport(int $port, string $protocol): string|false {}
 #endif
 
@@ -362,6 +363,7 @@ function getprotobyname(string $protocol): int|false {}
 #endif
 
 #if HAVE_GETPROTOBYNUMBER
+/** @refcount 1 */
 function getprotobynumber(int $protocol): string|false {}
 #endif
 
@@ -398,9 +400,13 @@ function crc32(string $string): int {}
 function crypt(string $string, string $salt): string {}
 
 /* datetime.c */
 
 #if HAVE_STRPTIME
-/** @deprecated */
+/**
+ * @return array<string, int|string>|false
+ * @deprecated
+ * @refcount 1
+ */
 function strptime(string $timestamp, string $format): array|false {}
 #endif
 
@@ -466,8 +472,10 @@ function lcg_value(): float {}
 
 /* md5.c */
 
+/** @refcount 1 */
 function md5(string $string, bool $binary = false): string {}
 
+/** @refcount 1 */
 function md5_file(string $filename, bool $binary = false): string|false {}
 
 /* pageinfo.c */
@@ -484,8 +492,10 @@ function getlastmod(): int|false {}
 
 /* sha1.c */
 
+/** @refcount 1 */
 function sha1(string $string, bool $binary = false): string {}
 
+/** @refcount 1 */
 function sha1_file(string $filename, bool $binary = false): string|false {}
 
 /* syslog.c */
@@ -531,14 +541,20 @@ function headers_list(): array {}
 
 /* {{{ html.c */
 
+/** @refcount 1 */
 function htmlspecialchars(string $string, int $flags = ENT_QUOTES | ENT_SUBSTITUTE, ?string $encoding = null, bool $double_encode = true): string {}
 
 function htmlspecialchars_decode(string $string, int $flags = ENT_QUOTES | ENT_SUBSTITUTE): string {}
 
 function html_entity_decode(string $string, int $flags = ENT_QUOTES | ENT_SUBSTITUTE, ?string $encoding = null): string {}
 
+/** @refcount 1 */
 function htmlentities(string $string, int $flags = ENT_QUOTES | ENT_SUBSTITUTE, ?string $encoding = null, bool $double_encode = true): string {}
 
+/**
+ * @return array<string, string>
+ * @refcount 1
+ */
 function get_html_translation_table(int $table = HTML_SPECIALCHARS, int $flags = ENT_QUOTES | ENT_SUBSTITUTE, string $encoding = "UTF-8"): array {}
 
 /* }}} */
@@ -551,8 +567,10 @@ function assert_options(int $option, mixed $value = UNKNOWN): mixed {}
 
 /* string.c */
 
+/** @refcount 1 */
 function bin2hex(string $string): string {}
 
+/** @refcount 1 */
 function hex2bin(string $string): string|false {}
 
 function strspn(string $string, string $characters, int $offset = 0, ?int $length = null): int {}
@@ -560,6 +578,7 @@ function strspn(string $string, string $characters, int $offset = 0, ?int $lengt
 function strcspn(string $string, string $characters, int $offset = 0, ?int $length = null): int {}
 
 #if HAVE_NL_LANGINFO
+/** @refcount 1 */
 function nl_langinfo(int $item): string|false {}
 #endif
 
@@ -574,8 +593,13 @@ function chop(string $string, string $characters = " \n\r\t\v\0"): string {}
 
 function ltrim(string $string, string $characters = " \n\r\t\v\0"): string {}
 
+/** @refcount 1 */
 function wordwrap(string $string, int $width = 75, string $break = "\n", bool $cut_long_words = false): string {}
 
+/**
+ * @return array<int, string>
+ * @refcount 1
+ */
 function explode(string $separator, string $string, int $limit = PHP_INT_MAX): array {}
 
 function implode(string|array $separator, ?array $array = null): string {}
@@ -583,20 +607,29 @@ function implode(string|array $separator, ?array $array = null): string {}
 /** @alias implode */
 function join(string|array $separator, ?array $array = null): string {}
 
+/** @refcount 1 */
 function strtok(string $string, ?string $token = null): string|false {}
 
 function strtoupper(string $string): string {}
 
 function strtolower(string $string): string {}
 
+/** @refcount 1 */
 function basename(string $path, string $suffix = ""): string {}
 
+/** @refcount 1 */
 function dirname(string $path, int $levels = 1): string {}
 
+/**
+ * @return array<string, string>|string
+ * @refcount 1
+ */
 function pathinfo(string $path, int $flags = PATHINFO_ALL): array|string {}
 
+/** @refcount 1 */
 function stristr(string $haystack, string $needle, bool $before_needle = false): string|false {}
 
+/** @refcount 1 */
 function strstr(string $haystack, string $needle, bool $before_needle = false): string|false {}
 
 /** @alias strstr */
@@ -610,6 +643,7 @@ function strrpos(string $haystack, string $needle, int $offset = 0): int|false {
 
 function strripos(string $haystack, string $needle, int $offset = 0): int|false {}
 
+/** @refcount 1 */
 function strrchr(string $haystack, string $needle): string|false {}
 
 function str_contains(string $haystack, string $needle): bool {}
@@ -618,26 +652,32 @@ function str_starts_with(string $haystack, string $needle): bool {}
 
 function str_ends_with(string $haystack, string $needle): bool {}
 
+/** @refcount 1 */
 function chunk_split(string $string, int $length = 76, string $separator = "\r\n"): string {}
 
 function substr(string $string, int $offset, ?int $length = null): string {}
 
+/** @return string|array<int|string, string> */
 function substr_replace(array|string $string, array|string $replace, array|int $offset, array|int|null $length = null): string|array {}
 
+/** @refcount 1 */
 function quotemeta(string $string): string {}
 
 function ord(string $character): int {}
 
+/** @refcount 1 */
 function chr(int $codepoint): string {}
 
 function ucfirst(string $string): string {}
 
 function lcfirst(string $string): string {}
 
+/** @refcount 1 */
 function ucwords(string $string, string $separators = " \t\r\n\f\v"): string {}
 
 function strtr(string $string, string|array $from, ?string $to = null): string {}
 
+/** @refcount 1 */
 function strrev(string $string): string {}
 
 /** @param float $percent */
@@ -647,20 +687,32 @@ function addcslashes(string $string, string $characters): string {}
 
 function addslashes(string $string): string {}
 
+/** @refcount 1 */
 function stripcslashes(string $string): string {}
 
+/** @refcount 1 */
 function stripslashes(string $string): string {}
 
-/** @param int $count */
+/**
+ * @param int $count
+ * @return string|array<int|string, string>
+ * @refcount 1
+ */
 function str_replace(array|string $search, array|string $replace, string|array $subject, &$count = null): string|array {}
 
-/** @param int $count */
+/**
+ * @param int $count
+ * @return string|array<int|string, string>
+ * @refcount 1
+ */
 function str_ireplace(array|string $search, array|string $replace, string|array $subject, &$count = null): string|array {}
 
+/** @refcount 1 */
 function hebrev(string $string, int $max_chars_per_line = 0): string {}
 
 function nl2br(string $string, bool $use_xhtml = true): string {}
 
+/** @refcount 1 */
 function strip_tags(string $string, array|string|null $allowed_tags = null): string {}
 
 /**
@@ -672,14 +724,27 @@ function setlocale(int $category, $locales, ...$rest): string|false {}
 /** @param array $result */
 function parse_str(string $string, &$result): void {}
 
+/**
+ * @return array<int, string|null>
+ * @refcount 1
+ */
 function str_getcsv(string $string, string $separator = ",", string $enclosure = "\"", string $escape = '\\'): array {}
 
+/** @refcount 1 */
 function str_repeat(string $string, int $times): string {}
 
+/**
+ * @return array<int, int>|string
+ * @refcount 1
+ */
 function count_chars(string $string, int $mode = 0): array|string {}
 
 function strnatcmp(string $string1, string $string2): int {}
 
+/**
+ * @return array<string, int|string|array>
+ * @refcount 1
+ */
 function localeconv(): array {}
 
 function strnatcasecmp(string $string1, string $string2): int {}
@@ -688,16 +753,30 @@ function substr_count(string $haystack, string $needle, int $offset = 0, ?int $l
 
 function str_pad(string $string, int $length, string $pad_string = " ", int $pad_type = STR_PAD_RIGHT): string {}
 
+/**
+ * @return array<int, mixed>|int|null
+ * @refcount 1
+ */
 function sscanf(string $string, string $format, mixed &...$vars): array|int|null {}
 
 function str_rot13(string $string): string {}
 
+/** @refcount 1 */
 function str_shuffle(string $string): string {}
 
+/**
+ * @return array<int, string>|int
+ * @refcount 1
+ */
 function str_word_count(string $string, int $format = 0, ?string $characters = null): array|int {}
 
+/**
+ * @return array<int, string>
+ * @refcount 1
+ */
 function str_split(string $string, int $length = 1): array {}
 
+/** @refcount 1 */
 function strpbrk(string $string, string $characters): string|false {}
 
 function substr_compare(string $haystack, string $needle, int $offset, ?int $length = null, bool $case_insensitive = false): int {}
@@ -740,25 +819,35 @@ function scandir(string $directory, int $sorting_order = SCANDIR_SORT_ASCENDING,
 #ifdef HAVE_GLOB
 function glob(string $pattern, int $flags = 0): array|false {}
 #endif
 
 /* exec.c */
 
 /**
  * @param array $output
  * @param int $result_code
+ * @refcount 1
  */
 function exec(string $command, &$output = null, &$result_code = null): string|false {}
 
-/** @param int $result_code */
+/**
+ * @param int $result_code
+ * @refcount 1
+ */
 function system(string $command, &$result_code = null): string|false {}
 
-/** @param int $result_code */
+/**
+ * @param int $result_code
+ * @return false|null
+ */
 function passthru(string $command, &$result_code = null): ?bool {}
 
+/** @refcount 1 */
 function escapeshellcmd(string $command): string {}
 
+/** @refcount 1 */
 function escapeshellarg(string $arg): string {}
 
+/** @refcount 1 */
 function shell_exec(string $command): string|false|null {}
 
 #ifdef HAVE_NICE
@@ -813,11 +902,15 @@ function fread($stream, int $length): string|false {}
 /**
  * @param resource|null $context
  * @return resource|false
  * @refcount 1
  */
 function fopen(string $filename, string $mode, bool $use_include_path = false, $context = null) {}
 
-/** @param resource $stream */
+/**
+ * @param resource $stream
+ * @return array<int, mixed>|int|false|null
+ * @refcount 1
+ */
 function fscanf($stream, string $format, mixed &...$vars): array|int|false|null {}
 
 /** @param resource $stream */
@@ -968,12 +1061,14 @@ function realpath_cache_size(): int {}
 
 /* formatted_print.c */
 
+/** @refcount 1 */
 function sprintf(string $format, mixed ...$values): string {}
 
 function printf(string $format, mixed ...$values): int {}
 
 function vprintf(string $format, array $values): int {}
 
+/** @refcount 1 */
 function vsprintf(string $format, array $values): string {}
 
 /** @param resource $stream */
@@ -1001,40 +1096,63 @@ function pfsockopen(string $hostname, int $port = -1, &$error_code = null, &$err
 
 /* http.c */
 
+/** @refcount 1 */
 function http_build_query(array|object $data, string $numeric_prefix = "", ?string $arg_separator = null, int $encoding_type = PHP_QUERY_RFC1738): string {}
 
 /* image.c */
 
+/** @refcount 1 */
 function image_type_to_mime_type(int $image_type): string {}
 
+/** @refcount 1 */
 function image_type_to_extension(int $image_type, bool $include_dot = true): string|false {}
 
-/** @param array $image_info */
+/**
+ * @param array $image_info
+ * @return array<int|string, int|string>|false
+ * @refcount 1
+ */
 function getimagesize(string $filename, &$image_info = null): array|false {}
 
-/** @param array $image_info */
+/**
+ * @param array $image_info
+ * @return array<int|string, int|string>|false
+ * @refcount 1
+ */
 function getimagesizefromstring(string $string, &$image_info = null): array|false {}
 
 /* info.c */
 
-function phpinfo(int $flags = INFO_ALL): bool {}
+/** @return true */
+function phpinfo(int $flags = INFO_ALL): bool {} // make return type void
 
+/** @refcount 1 */
 function phpversion(?string $extension = null): string|false {}
 
-function phpcredits(int $flags = CREDITS_ALL): bool {}
+/** @return true */
+function phpcredits(int $flags = CREDITS_ALL): bool {} // make return type void
 
+/** @refcount 1 */
 function php_sapi_name(): string|false {}
 
+/** @refcount 1 */
 function php_uname(string $mode = "a"): string {}
 
+/** @refcount 1 */
 function php_ini_scanned_files(): string|false {}
 
+/** @refcount 1 */
 function php_ini_loaded_file(): string|false {}
 
 /* iptc.c */
 
+/** @refcount 1 */
 function iptcembed(string $iptc_data, string $filename, int $spool = 0): string|bool {}
 
+/**
+ * @return array<string, array>|false
+ * @refcount 1
+ */
 function iptcparse(string $iptc_block): array|false {}
 
 /* levenshtein.c */
@@ -1044,6 +1162,7 @@ function levenshtein(string $string1, string $string2, int $insertion_cost = 1,
 /* link.c */
 
 #if defined(HAVE_SYMLINK) || defined(PHP_WIN32)
+/** @refcount 1 */
 function readlink(string $path): string|false {}
 
 function linkinfo(string $path): int|false {}
@@ -1189,7 +1308,11 @@ function proc_close($process): int {}
 /** @param resource $process */
 function proc_terminate($process, int $signal = 15): bool {}
 
-/** @param resource $process */
+/**
+ * @param resource $process
+ * @return array<string, bool|int|string>
+ * @refcount 1
+ */
 function proc_get_status($process): array {}
 #endif
 
@@ -1217,12 +1340,14 @@ function getrandmax(): int {}
 
 /* random.c */
 
+/** @refcount 1 */
 function random_bytes(int $length): string {}
 
 function random_int(int $min, int $max): int {}
 
 /* soundex.c */
 
+/** @refcount 1 */
 function soundex(string $string): string {}
 
 /* streamsfuncs.c */
@@ -1460,14 +1585,22 @@ function uniqid(string $prefix = "", bool $more_entropy = false): string {}
 
 /* url.c */
 
+/**
+ * @return int|string|array<string, int|string>|null|false
+ * @refcount 1
+ */
 function parse_url(string $url, int $component = -1): int|string|array|null|false {}
 
+/** @refcount 1 */
 function urlencode(string $string): string {}
 
+/** @refcount 1 */
 function urldecode(string $string): string {}
 
+/** @refcount 1 */
 function rawurlencode(string $string): string {}
 
+/** @refcount 1 */
 function rawurldecode(string $string): string {}
 
 /** @param resource $context */
diff --git a/ext/standard/basic_functions_arginfo.h b/ext/standard/basic_functions_arginfo.h
index 78c00cccbb..1daab40de5 100644
Binary files a/ext/standard/basic_functions_arginfo.h and b/ext/standard/basic_functions_arginfo.h differ
