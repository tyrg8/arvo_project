commit dd82c3a88a99359821c2505fadbb2e015140fc81
Author: Catena cyber <35799796+catenacyber@users.noreply.github.com>
Date:   Sat Jun 16 23:35:02 2018 +0200

    EVM fuzz fixes (#1181)
    
    Sets id to instruction
    Completes missing set and enforces number of instructions

diff --git a/arch/EVM/EVMDisassembler.c b/arch/EVM/EVMDisassembler.c
index 6fde18b4..f9a99157 100644
--- a/arch/EVM/EVMDisassembler.c
+++ b/arch/EVM/EVMDisassembler.c
@@ -6,261 +6,261 @@
 #include "EVMDisassembler.h"
 #include "EVMMapping.h"
 
-static short opcodes[] = {
+static short opcodes[256] = {
 	EVM_INS_STOP,
 	EVM_INS_ADD,
 	EVM_INS_MUL,
 	EVM_INS_SUB,
 	EVM_INS_DIV,
 	EVM_INS_SDIV,
 	EVM_INS_MOD,
 	EVM_INS_SMOD,
 	EVM_INS_ADDMOD,
 	EVM_INS_MULMOD,
 	EVM_INS_EXP,
 	EVM_INS_SIGNEXTEND,
 	-1,
 	-1,
 	-1,
 	-1,
 	EVM_INS_LT,
 	EVM_INS_GT,
 	EVM_INS_SLT,
 	EVM_INS_SGT,
 	EVM_INS_EQ,
 	EVM_INS_ISZERO,
 	EVM_INS_AND,
 	EVM_INS_OR,
 	EVM_INS_XOR,
 	EVM_INS_NOT,
 	EVM_INS_BYTE,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	EVM_INS_SHA3,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	EVM_INS_ADDRESS,
 	EVM_INS_BALANCE,
 	EVM_INS_ORIGIN,
 	EVM_INS_CALLER,
 	EVM_INS_CALLVALUE,
 	EVM_INS_CALLDATALOAD,
 	EVM_INS_CALLDATASIZE,
 	EVM_INS_CALLDATACOPY,
 	EVM_INS_CODESIZE,
 	EVM_INS_CODECOPY,
 	EVM_INS_GASPRICE,
 	EVM_INS_EXTCODESIZE,
 	EVM_INS_EXTCODECOPY,
 	EVM_INS_RETURNDATASIZE,
 	EVM_INS_RETURNDATACOPY,
 	-1,
 	EVM_INS_BLOCKHASH,
 	EVM_INS_COINBASE,
 	EVM_INS_TIMESTAMP,
 	EVM_INS_NUMBER,
 	EVM_INS_DIFFICULTY,
 	EVM_INS_GASLIMIT,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	EVM_INS_POP,
 	EVM_INS_MLOAD,
 	EVM_INS_MSTORE,
 	EVM_INS_MSTORE8,
 	EVM_INS_SLOAD,
 	EVM_INS_SSTORE,
 	EVM_INS_JUMP,
 	EVM_INS_JUMPI,
 	EVM_INS_PC,
 	EVM_INS_MSIZE,
 	EVM_INS_GAS,
 	EVM_INS_JUMPDEST,
 	-1,
 	-1,
 	-1,
 	-1,
 	EVM_INS_PUSH1,
 	EVM_INS_PUSH2,
 	EVM_INS_PUSH3,
 	EVM_INS_PUSH4,
 	EVM_INS_PUSH5,
 	EVM_INS_PUSH6,
 	EVM_INS_PUSH7,
 	EVM_INS_PUSH8,
 	EVM_INS_PUSH9,
 	EVM_INS_PUSH10,
 	EVM_INS_PUSH11,
 	EVM_INS_PUSH12,
 	EVM_INS_PUSH13,
 	EVM_INS_PUSH14,
 	EVM_INS_PUSH15,
 	EVM_INS_PUSH16,
 	EVM_INS_PUSH17,
 	EVM_INS_PUSH18,
 	EVM_INS_PUSH19,
 	EVM_INS_PUSH20,
 	EVM_INS_PUSH21,
 	EVM_INS_PUSH22,
 	EVM_INS_PUSH23,
 	EVM_INS_PUSH24,
 	EVM_INS_PUSH25,
 	EVM_INS_PUSH26,
 	EVM_INS_PUSH27,
 	EVM_INS_PUSH28,
 	EVM_INS_PUSH29,
 	EVM_INS_PUSH30,
 	EVM_INS_PUSH31,
 	EVM_INS_PUSH32,
 	EVM_INS_DUP1,
 	EVM_INS_DUP2,
 	EVM_INS_DUP3,
 	EVM_INS_DUP4,
 	EVM_INS_DUP5,
 	EVM_INS_DUP6,
 	EVM_INS_DUP7,
 	EVM_INS_DUP8,
 	EVM_INS_DUP9,
 	EVM_INS_DUP10,
 	EVM_INS_DUP11,
 	EVM_INS_DUP12,
 	EVM_INS_DUP13,
 	EVM_INS_DUP14,
 	EVM_INS_DUP15,
 	EVM_INS_DUP16,
 	EVM_INS_SWAP1,
 	EVM_INS_SWAP2,
 	EVM_INS_SWAP3,
 	EVM_INS_SWAP4,
 	EVM_INS_SWAP5,
 	EVM_INS_SWAP6,
 	EVM_INS_SWAP7,
 	EVM_INS_SWAP8,
 	EVM_INS_SWAP9,
 	EVM_INS_SWAP10,
 	EVM_INS_SWAP11,
 	EVM_INS_SWAP12,
 	EVM_INS_SWAP13,
 	EVM_INS_SWAP14,
 	EVM_INS_SWAP15,
 	EVM_INS_SWAP16,
 	EVM_INS_LOG0,
 	EVM_INS_LOG1,
 	EVM_INS_LOG2,
 	EVM_INS_LOG3,
 	EVM_INS_LOG4,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	-1,
 	EVM_INS_CREATE,
 	EVM_INS_CALL,
 	EVM_INS_CALLCODE,
 	EVM_INS_RETURN,
 	EVM_INS_DELEGATECALL,
 	EVM_INS_CALLBLACKBOX,
 	-1,
 	-1,
 	-1,
 	-1,
 	EVM_INS_STATICCALL,
 	-1,
 	-1,
 	EVM_INS_REVERT,
 	-1,
 	EVM_INS_SUICIDE,
 };
diff --git a/arch/EVM/EVMMapping.c b/arch/EVM/EVMMapping.c
index 212a815b..1e0881c6 100644
--- a/arch/EVM/EVMMapping.c
+++ b/arch/EVM/EVMMapping.c
@@ -11,40 +11,41 @@
 #include "EVMMapping.h"
 
 #ifndef CAPSTONE_DIET
-static cs_evm insns[] = {
+static cs_evm insns[256] = {
 #include "EVMMappingInsn.inc"
 };
 #endif
 
 // look for @id in @insns, given its size in @max. first time call will update @cache.
 // return 0 if not found
 static int evm_insn_find(cs_evm *insns, unsigned int max, unsigned int id)
 {
-	if (id > max)
+	if (id >= max)
 		return -1;
 
 	if (insns[id].fee == 0xffffffff)
 		// unused opcode
 		return -1;
 
 	return (int)id;
 }
 
 // fill in details
 void EVM_get_insn_id(cs_struct *h, cs_insn *insn, unsigned int id)
 {
+	insn->id = id;
 #ifndef CAPSTONE_DIET
 	int i = evm_insn_find(insns, ARR_SIZE(insns), id);
 	//printf(">> id = %u\n", id);
 	if (i >= 0) {
 		if (h->detail) {
 			cs_struct handle;
 			handle.detail = h->detail;
 
 			memcpy(&insn->detail->evm, &insns[i], sizeof(insns[i]));
 		}
 	}
 #endif
 }
 
 #ifndef CAPSTONE_DIET
diff --git a/arch/EVM/EVMMappingInsn.inc b/arch/EVM/EVMMappingInsn.inc
index 64f072fe..148b8844 100644
--- a/arch/EVM/EVMMappingInsn.inc
+++ b/arch/EVM/EVMMappingInsn.inc
@@ -1,258 +1,259 @@
 /* Capstone Disassembly Engine */
 /* By Nguyen Anh Quynh, 2018 */
 
 { 0, 0, 0 }, // STOP
 { 2, 1, 3 }, // ADD
 { 2, 1, 5 }, // MUL
 { 2, 1, 3 }, // SUB
 { 2, 1, 5 }, // DIV
 { 2, 1, 5 }, // SDIV
 { 2, 1, 5 }, // MOD
 { 2, 1, 5 }, // SMOD
 { 3, 1, 8 }, // ADDMOD
 { 3, 1, 8 }, // MULMOD
 { 2, 1, 10 }, // EXP
 { 2, 1, 5 }, // SIGNEXTEND
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 2, 1, 3 }, // LT
 { 2, 1, 3 }, // GT
 { 2, 1, 3 }, // SLT
 { 2, 1, 3 }, // SGT
 { 2, 1, 3 }, // EQ
 { 1, 1, 3 }, // ISZERO
 { 2, 1, 3 }, // AND
 { 2, 1, 3 }, // OR
 { 2, 1, 3 }, // XOR
 { 1, 1, 3 }, // NOT
 { 2, 1, 3 }, // BYTE
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 2, 1, 30 }, // SHA3
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 1, 2 }, // ADDRESS
 { 1, 1, 20 }, // BALANCE
 { 0, 1, 2 }, // ORIGIN
 { 0, 1, 2 }, // CALLER
 { 0, 1, 2 }, // CALLVALUE
 { 1, 1, 3 }, // CALLDATALOAD
 { 0, 1, 2 }, // CALLDATASIZE
 { 3, 0, 3 }, // CALLDATACOPY
 { 0, 1, 2 }, // CODESIZE
 { 3, 0, 3 }, // CODECOPY
 { 0, 1, 2 }, // GASPRICE
 { 1, 1, 20 }, // EXTCODESIZE
 { 4, 0, 20 }, // EXTCODECOPY
 { 0, 1, 2 }, // RETURNDATASIZE
 { 3, 0, 3 }, // RETURNDATACOPY
 { 0, 0, 0xffffffff }, // unused
 { 1, 1, 20 }, // BLOCKHASH
 { 0, 1, 2 }, // COINBASE
 { 0, 1, 2 }, // TIMESTAMP
 { 0, 1, 2 }, // NUMBER
 { 0, 1, 2 }, // DIFFICULTY
 { 0, 1, 2 }, // GASLIMIT
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 1, 0, 2 }, // POP
 { 1, 1, 3 }, // MLOAD
 { 2, 0, 3 }, // MSTORE
 { 2, 0, 3 }, // MSTORE8
 { 1, 1, 50 }, // SLOAD
 { 2, 0, 0 }, // SSTORE
 { 1, 0, 8 }, // JUMP
 { 2, 0, 10 }, // JUMPI
 { 0, 1, 2 }, // GETPC
 { 0, 1, 2 }, // MSIZE
 { 0, 1, 2 }, // GAS
 { 0, 0, 1 }, // JUMPDEST
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 1, 3 }, // PUSH1
 { 0, 1, 3 }, // PUSH2
 { 0, 1, 3 }, // PUSH3
 { 0, 1, 3 }, // PUSH4
 { 0, 1, 3 }, // PUSH5
 { 0, 1, 3 }, // PUSH6
 { 0, 1, 3 }, // PUSH7
 { 0, 1, 3 }, // PUSH8
 { 0, 1, 3 }, // PUSH9
 { 0, 1, 3 }, // PUSH10
 { 0, 1, 3 }, // PUSH11
 { 0, 1, 3 }, // PUSH12
 { 0, 1, 3 }, // PUSH13
 { 0, 1, 3 }, // PUSH14
 { 0, 1, 3 }, // PUSH15
 { 0, 1, 3 }, // PUSH16
 { 0, 1, 3 }, // PUSH17
 { 0, 1, 3 }, // PUSH18
 { 0, 1, 3 }, // PUSH19
 { 0, 1, 3 }, // PUSH20
 { 0, 1, 3 }, // PUSH21
 { 0, 1, 3 }, // PUSH22
 { 0, 1, 3 }, // PUSH23
 { 0, 1, 3 }, // PUSH24
 { 0, 1, 3 }, // PUSH25
 { 0, 1, 3 }, // PUSH26
 { 0, 1, 3 }, // PUSH27
 { 0, 1, 3 }, // PUSH28
 { 0, 1, 3 }, // PUSH29
 { 0, 1, 3 }, // PUSH30
 { 0, 1, 3 }, // PUSH31
 { 0, 1, 3 }, // PUSH32
 { 1, 2, 3 }, // DUP1
 { 2, 3, 3 }, // DUP2
 { 3, 4, 3 }, // DUP3
 { 4, 5, 3 }, // DUP4
 { 5, 6, 3 }, // DUP5
 { 6, 7, 3 }, // DUP6
 { 7, 8, 3 }, // DUP7
 { 8, 9, 3 }, // DUP8
 { 9, 10, 3 }, // DUP9
 { 10, 11, 3 }, // DUP10
 { 11, 12, 3 }, // DUP11
 { 12, 13, 3 }, // DUP12
 { 13, 14, 3 }, // DUP13
 { 14, 15, 3 }, // DUP14
 { 15, 16, 3 }, // DUP15
 { 16, 17, 3 }, // DUP16
 { 2, 2, 3 }, // SWAP1
 { 3, 3, 3 }, // SWAP2
 { 4, 4, 3 }, // SWAP3
 { 5, 5, 3 }, // SWAP4
 { 6, 6, 3 }, // SWAP5
 { 7, 7, 3 }, // SWAP6
 { 8, 8, 3 }, // SWAP7
 { 9, 9, 3 }, // SWAP8
 { 10, 10, 3 }, // SWAP9
 { 11, 11, 3 }, // SWAP10
 { 12, 12, 3 }, // SWAP11
 { 13, 13, 3 }, // SWAP12
 { 14, 14, 3 }, // SWAP13
 { 15, 15, 3 }, // SWAP14
 { 16, 16, 3 }, // SWAP15
 { 17, 17, 3 }, // SWAP16
 { 2, 0, 375 }, // LOG0
 { 3, 0, 750 }, // LOG1
 { 4, 0, 1125 }, // LOG2
 { 5, 0, 1500 }, // LOG3
 { 6, 0, 1875 }, // LOG4
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
+{ 0, 0, 0xffffffff }, // unused
 { 3, 1, 32000 }, // CREATE
 { 7, 1, 40 }, // CALL
 { 7, 1, 40 }, // CALLCODE
 { 2, 0, 0 }, // RETURN
 { 6, 1, 40 }, // DELEGATECALL
 { 7, 1, 40 }, // CALLBLACKBOX
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 6, 1, 40 }, // STATICCALL
 { 0, 0, 0xffffffff }, // unused
 { 0, 0, 0xffffffff }, // unused
 { 2, 0, 0 }, // REVERT
 { 0, 0, 0xffffffff }, // unused
 { 1, 0, 0 }, // SUICIDE
