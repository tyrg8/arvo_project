commit c9ebd3917e59192a9b8655c3dd150064a4ae98b4
Author: Volker Krause <vkrause@kde.org>
Date:   Tue Mar 3 19:46:12 2020 +0100

    Support NDK r20 and Qt 5.14
    
    Summary:
    This changes from using the toolchain file provided by CMake to using the
    one provided by the NDK, as even recent CMake can't build successfully
    with r20. However this is a rather invasive change, the interface and
    variable names differ.
    
    The Qt 5.14 changes are less risky, as most of this is parallel to the
    support for older versions.
    
    Test Plan: Local builds with 5.14/r20, 5.14/r18 work, the Docker SDK isn't tested yet, and there's some remaining issues with 5.13 and older NDKs I don't fully understand yet. The resulting apks with 5.14 install, and work for QQC2 content, but fail to start Kirigami apps.
    
    Reviewers: apol
    
    Reviewed By: apol
    
    Subscribers: flherne, apol, kde-frameworks-devel, kde-buildsystem
    
    Tags: #frameworks, #build_system
    
    Maniphest Tasks: T12520
    
    Differential Revision: https://phabricator.kde.org/D26749

diff --git a/toolchain/Android.cmake b/toolchain/Android.cmake
index 5c27db29..63b40e70 100644
--- a/toolchain/Android.cmake
+++ b/toolchain/Android.cmake
@@ -167,18 +167,24 @@ if (NOT CMAKE_ANDROID_STL_TYPE)
     set(CMAKE_ANDROID_STL_TYPE c++_shared)
 endif()
 
-include(${CMAKE_ROOT}/Modules/Platform/Android-Clang.cmake REQUIRED)
-include(${CMAKE_ROOT}/Modules/Platform/Android-Initialize.cmake REQUIRED)
+# let the Android NDK toolchain file do the actual work
+set(ANDROID_PLATFORM "android-${CMAKE_ANDROID_API}")
+set(ANDROID_STL ${CMAKE_ANDROID_STL_TYPE})
+include(${CMAKE_ANDROID_NDK}/build/cmake/android.toolchain.cmake REQUIRED)
+
+# these aren't set yet at this point by the Android toolchain, but without
+# those the find_package() call in ECMAndroidDeployQt will fail
+set(CMAKE_FIND_LIBRARY_PREFIXES "lib")
+set(CMAKE_FIND_LIBRARY_SUFFIXES ".so" ".a")
+
+# determine STL architecture, which is using a different format than ANDROID_ARCH_ABI
+string(REGEX REPLACE "-(clang)?([0-9].[0-9])?$" "" ECM_ANDROID_STL_ARCH ${ANDROID_TOOLCHAIN_NAME})
 
 if (NOT DEFINED ECM_ADDITIONAL_FIND_ROOT_PATH)
     SET(ECM_ADDITIONAL_FIND_ROOT_PATH ${CMAKE_PREFIX_PATH})
 endif()
 
-SET(CMAKE_FIND_ROOT_PATH ${CMAKE_ANDROID_NDK} ${CMAKE_ANDROID_NDK}/sysroot ${CMAKE_SYSROOT} ${ECM_ADDITIONAL_FIND_ROOT_PATH})
-SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
-set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
-set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
-set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
+LIST(APPEND CMAKE_FIND_ROOT_PATH ${ECM_ADDITIONAL_FIND_ROOT_PATH})
 
 #we want executables to be shared libraries, hooks will invoke the exported cmake function
 set(CMAKE_CXX_LINK_EXECUTABLE
diff --git a/toolchain/ECMAndroidDeployQt.cmake b/toolchain/ECMAndroidDeployQt.cmake
index e565fac4..1121dbfd 100644
--- a/toolchain/ECMAndroidDeployQt.cmake
+++ b/toolchain/ECMAndroidDeployQt.cmake
@@ -3,71 +3,81 @@ find_package(Qt5Core REQUIRED)
 
 function(ecm_androiddeployqt QTANDROID_EXPORTED_TARGET ECM_ADDITIONAL_FIND_ROOT_PATH)
     set(EXPORT_DIR "${CMAKE_BINARY_DIR}/${QTANDROID_EXPORTED_TARGET}_build_apk/")
-    set(EXECUTABLE_DESTINATION_PATH "${EXPORT_DIR}/libs/${CMAKE_ANDROID_ARCH_ABI}/lib${QTANDROID_EXPORTED_TARGET}.so")
+    if (Qt5Core_VERSION VERSION_LESS 5.14.0)
+        set(EXECUTABLE_DESTINATION_PATH "${EXPORT_DIR}/libs/${CMAKE_ANDROID_ARCH_ABI}/lib${QTANDROID_EXPORTED_TARGET}.so")
+    else()
+        set(EXECUTABLE_DESTINATION_PATH "${EXPORT_DIR}/libs/${CMAKE_ANDROID_ARCH_ABI}/lib${QTANDROID_EXPORTED_TARGET}_${CMAKE_ANDROID_ARCH_ABI}.so")
+    endif()
     set(QML_IMPORT_PATHS "")
     foreach(prefix ${ECM_ADDITIONAL_FIND_ROOT_PATH})
         # qmlimportscanner chokes on symlinks, so we need to resolve those first
         get_filename_component(qml_path "${prefix}/lib/qml" REALPATH)
         if(EXISTS ${qml_path})
             if (QML_IMPORT_PATHS)
                 set(QML_IMPORT_PATHS "${QML_IMPORT_PATHS},${qml_path}")
             else()
                 set(QML_IMPORT_PATHS "${qml_path}")
             endif()
         endif()
     endforeach()
     if (QML_IMPORT_PATHS)
         set(DEFINE_QML_IMPORT_PATHS "\"qml-import-paths\": \"${QML_IMPORT_PATHS}\",")
     endif()
 
     set(EXTRA_PREFIX_DIRS "")
     foreach(prefix ${ECM_ADDITIONAL_FIND_ROOT_PATH})
         if (EXTRA_PREFIX_DIRS)
             set(EXTRA_PREFIX_DIRS "${EXTRA_PREFIX_DIRS}, \"${prefix}\"")
         else()
             set(EXTRA_PREFIX_DIRS "\"${prefix}\"")
         endif()
     endforeach()
+
+    if (Qt5Core_VERSION VERSION_LESS 5.14.0)
+        set(_deployment_file_template "${_CMAKE_ANDROID_DIR}/deployment-file.json.in")
+    else()
+        set(_deployment_file_template "${_CMAKE_ANDROID_DIR}/deployment-file-qt514.json.in")
+    endif()
     string(TOLOWER "${CMAKE_HOST_SYSTEM_NAME}" _LOWER_CMAKE_HOST_SYSTEM_NAME)
-    configure_file("${_CMAKE_ANDROID_DIR}/deployment-file.json.in" "${CMAKE_BINARY_DIR}/${QTANDROID_EXPORTED_TARGET}-deployment.json.in1")
+    configure_file("${_deployment_file_template}" "${CMAKE_BINARY_DIR}/${QTANDROID_EXPORTED_TARGET}-deployment.json.in1")
     file(GENERATE OUTPUT "${CMAKE_BINARY_DIR}/${QTANDROID_EXPORTED_TARGET}-deployment.json.in2"
                   INPUT  "${CMAKE_BINARY_DIR}/${QTANDROID_EXPORTED_TARGET}-deployment.json.in1")
 
     if (CMAKE_GENERATOR STREQUAL "Unix Makefiles")
         set(arguments "\\$(ARGS)")
     endif()
 
     function(havestl var access VALUE)
         if (NOT VALUE STREQUAL "")
             # look for ++ and .so as in libc++.so
             string (REGEX MATCH "\"[^ ]+\\+\\+[^ ]*\.so\"" OUT ${VALUE})
             file(WRITE ${CMAKE_BINARY_DIR}/stl "${OUT}")
         endif()
     endfunction()
     function(haveranlib var access VALUE)
         if (NOT VALUE STREQUAL "")
             file(WRITE ${CMAKE_BINARY_DIR}/ranlib "${VALUE}")
         endif()
     endfunction()
     variable_watch(CMAKE_CXX_STANDARD_LIBRARIES havestl)
     variable_watch(CMAKE_RANLIB haveranlib)
 
     if (NOT TARGET create-apk)
         add_custom_target(create-apk)
     endif()
 
     set(CREATEAPK_TARGET_NAME "create-apk-${QTANDROID_EXPORTED_TARGET}")
     add_custom_target(${CREATEAPK_TARGET_NAME}
         COMMAND cmake -E echo "Generating $<TARGET_NAME:${QTANDROID_EXPORTED_TARGET}> with $<TARGET_FILE_DIR:Qt5::qmake>/androiddeployqt"
         COMMAND cmake -E remove_directory "${EXPORT_DIR}"
         COMMAND cmake -E copy_directory "$<TARGET_PROPERTY:create-apk-${QTANDROID_EXPORTED_TARGET},ANDROID_APK_DIR>" "${EXPORT_DIR}"
         COMMAND cmake -E copy "$<TARGET_FILE:${QTANDROID_EXPORTED_TARGET}>" "${EXECUTABLE_DESTINATION_PATH}"
         COMMAND LANG=C cmake "-DTARGET=$<TARGET_FILE:${QTANDROID_EXPORTED_TARGET}>" -P ${_CMAKE_ANDROID_DIR}/hasMainSymbol.cmake
         COMMAND LANG=C cmake -DINPUT_FILE="${QTANDROID_EXPORTED_TARGET}-deployment.json.in2" -DOUTPUT_FILE="${QTANDROID_EXPORTED_TARGET}-deployment.json" "-DTARGET=$<TARGET_FILE:${QTANDROID_EXPORTED_TARGET}>" "-DOUTPUT_DIR=$<TARGET_FILE_DIR:${QTANDROID_EXPORTED_TARGET}>" "-DEXPORT_DIR=${CMAKE_INSTALL_PREFIX}" "-DECM_ADDITIONAL_FIND_ROOT_PATH=\"${ECM_ADDITIONAL_FIND_ROOT_PATH}\"" "-DANDROID_EXTRA_LIBS=\"${ANDROID_EXTRA_LIBS}\"" -P ${_CMAKE_ANDROID_DIR}/specifydependencies.cmake
         COMMAND $<TARGET_FILE_DIR:Qt5::qmake>/androiddeployqt --gradle --input "${QTANDROID_EXPORTED_TARGET}-deployment.json" --output "${EXPORT_DIR}" --deployment bundled ${arguments}
     )
 
     add_custom_target(install-apk-${QTANDROID_EXPORTED_TARGET}
         COMMAND adb install -r "${EXPORT_DIR}/build/outputs/apk/debug/${QTANDROID_EXPORTED_TARGET}_build_apk-debug.apk"
     )
     add_dependencies(create-apk ${CREATEAPK_TARGET_NAME})
diff --git a/toolchain/deployment-file-qt514.json.in b/toolchain/deployment-file-qt514.json.in
new file mode 100644
index 00000000..ac069c4d
--- /dev/null
+++ b/toolchain/deployment-file-qt514.json.in
@@ -0,0 +1,18 @@
+{
+   "qt": "@_qt5Core_install_prefix@",
+   "sdk": "@ANDROID_SDK_ROOT@",
+   "ndk": "@CMAKE_ANDROID_NDK@",
+   "toolchain-prefix": "llvm",
+   "tool-prefix": "llvm",
+   "ndk-host": "@_LOWER_CMAKE_HOST_SYSTEM_NAME@-@CMAKE_HOST_SYSTEM_PROCESSOR@",
+   "application-binary": "@QTANDROID_EXPORTED_TARGET@",
+   "qml-root-path": "@CMAKE_SOURCE_DIR@",
+   @DEFINE_QML_IMPORT_PATHS@
+   ##EXTRALIBS##
+   ##EXTRAPLUGINS##
+   "android-package-source-directory": "$<TARGET_PROPERTY:create-apk-${QTANDROID_EXPORTED_TARGET},ANDROID_APK_DIR>",
+   "stdcpp-path": "@CMAKE_SYSROOT@/usr/lib",
+   "sdkBuildToolsRevision": "@ANDROID_SDK_BUILD_TOOLS_REVISION@",
+   "extraPrefixDirs": [ @EXTRA_PREFIX_DIRS@ ],
+   "architectures": { "@CMAKE_ANDROID_ARCH_ABI@": "@ECM_ANDROID_STL_ARCH@" }
+}
