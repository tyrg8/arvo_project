commit ef861421e2bc467e01eafc3d13864d931cf5014d
Author: Sean Barrett <seanb@radgametools.com>
Date:   Sat Aug 28 03:20:04 2021 -0700

    stb.h: stb_splitpath correctly handles relative paths with explicit drive specifiers

diff --git a/deprecated/stb.h b/deprecated/stb.h
index 80fa202..1633c3b 100644
--- a/deprecated/stb.h
+++ b/deprecated/stb.h
@@ -2420,43 +2420,49 @@ char * stb_shorten_path_readable(char *path, int len)
 static char *stb__splitpath_raw(char *buffer, char *path, int flag)
 {
    ptrdiff_t len=0,x,y, n = (int) strlen(path), f1,f2;
    char *s = stb_strrchr2(path, '/', '\\');
    char *t = strrchr(path, '.');
    if (s && t && t < s) t = NULL;
+
+   if (!s) {
+      // check for drive
+      if (isalpha(path[0]) && path[1] == ':')
+         s = &path[1];
+   }
    if (s) ++s;
 
    if (flag == STB_EXT_NO_PERIOD)
       flag |= STB_EXT;
 
    if (!(flag & (STB_PATH | STB_FILE | STB_EXT))) return NULL;
 
    f1 = s == NULL ? 0 : s-path; // start of filename
    f2 = t == NULL ? n : t-path; // just past end of filename
 
    if (flag & STB_PATH) {
       x = 0; if (f1 == 0 && flag == STB_PATH) len=2;
    } else if (flag & STB_FILE) {
       x = f1;
    } else {
       x = f2;
       if (flag & STB_EXT_NO_PERIOD)
          if (path[x] == '.')
             ++x;
    }
 
    if (flag & STB_EXT)
       y = n;
    else if (flag & STB_FILE)
       y = f2;
    else
       y = f1;
 
    if (buffer == NULL) {
       buffer = (char *) malloc(y-x + len + 1);
       if (!buffer) return NULL;
    }
 
    if (len) { stb_p_strcpy_s(buffer, 3, "./"); return buffer; }
    stb_strncpy(buffer, path+(int)x, (int)(y-x));
    return buffer;
 }
