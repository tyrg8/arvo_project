commit c2d84bfa74212bf97405429225b88944d1377c69
Author: Ethan Nicholas <ethannicholas@google.com>
Date:   Mon Sep 9 10:49:15 2019 -0400

    fixed byte/ubyte types in SPIR-V output
    
    Bug: oss-fuzz:15313
    Change-Id: Id694413b5c4de41b4e64ed45b732aaa4c52b5f1e
    Reviewed-on: https://skia-review.googlesource.com/c/skia/+/240198
    Reviewed-by: Brian Osman <brianosman@google.com>
    Commit-Queue: Ethan Nicholas <ethannicholas@google.com>

diff --git a/src/sksl/SkSLSPIRVCodeGenerator.cpp b/src/sksl/SkSLSPIRVCodeGenerator.cpp
index d74ae2ef52..7342e20950 100644
--- a/src/sksl/SkSLSPIRVCodeGenerator.cpp
+++ b/src/sksl/SkSLSPIRVCodeGenerator.cpp
@@ -2475,22 +2475,24 @@ SpvId SPIRVCodeGenerator::writeBoolLiteral(const BoolLiteral& b) {
 SpvId SPIRVCodeGenerator::writeIntLiteral(const IntLiteral& i) {
     ConstantType type;
     if (i.fType == *fContext.fInt_Type) {
         type = ConstantType::kInt;
     } else if (i.fType == *fContext.fUInt_Type) {
         type = ConstantType::kUInt;
-    } else if (i.fType == *fContext.fShort_Type) {
+    } else if (i.fType == *fContext.fShort_Type || i.fType == *fContext.fByte_Type) {
         type = ConstantType::kShort;
-    } else if (i.fType == *fContext.fUShort_Type) {
+    } else if (i.fType == *fContext.fUShort_Type || i.fType == *fContext.fUByte_Type) {
         type = ConstantType::kUShort;
+    } else {
+        SkASSERT(false);
     }
     std::pair<ConstantValue, ConstantType> key(i.fValue, type);
     auto entry = fNumberConstants.find(key);
     if (entry == fNumberConstants.end()) {
         SpvId result = this->nextId();
         this->writeInstruction(SpvOpConstant, this->getType(i.fType), result, (SpvId) i.fValue,
                                fConstantBuffer);
         fNumberConstants[key] = result;
         return result;
     }
     return entry->second;
 }
