commit c45833e39c85c5e16270aa4122b1929dd086127a
Author: Christian Brauner <christian.brauner@ubuntu.com>
Date:   Sat Mar 27 07:14:56 2021 +0100

    string_utils: always memset buf in lxc_safe_int64_residual()
    
    Link: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=32482
    Signed-off-by: Christian Brauner <christian.brauner@ubuntu.com>

diff --git a/src/lxc/string_utils.c b/src/lxc/string_utils.c
index 793fd2ca1..1d408b977 100644
--- a/src/lxc/string_utils.c
+++ b/src/lxc/string_utils.c
@@ -668,39 +668,39 @@ int lxc_safe_uint64(const char *numstr, uint64_t *converted, int base)
 int lxc_safe_int64_residual(const char *numstr, int64_t *converted, int base, char *residual,
 			    size_t residual_len)
 {
 	char *remaining = NULL;
 	int64_t u;
 
 	if (residual && residual_len == 0)
 		return ret_errno(EINVAL);
 
 	if (!residual && residual_len != 0)
 		return ret_errno(EINVAL);
 
+	memset(residual, 0, residual_len);
+
 	while (isspace(*numstr))
 		numstr++;
 
 	errno = 0;
 	u = strtoll(numstr, &remaining, base);
 	if (errno == ERANGE && u == INT64_MAX)
 		return -ERANGE;
 
 	if (remaining == numstr)
 		return -EINVAL;
 
 	if (residual) {
 		size_t len = 0;
 
-		if (*remaining == '\0') {
-			memset(residual, 0, residual_len);
+		if (*remaining == '\0')
 			goto out;
-		}
 
 		len = strlen(remaining);
 		if (len >= residual_len)
 			return -EINVAL;
 
 		memcpy(residual, remaining, len);
 	} else if (*remaining != '\0') {
 		return -EINVAL;
 	}
