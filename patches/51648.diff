commit 81b927a53bafd51b3874ae7c36c6948cc632c267
Author: Andreas Rheinhardt <andreas.rheinhardt@outlook.com>
Date:   Mon Oct 3 22:27:13 2022 +0200

    avcodec/opus: Move remaining celt declarations to opus_celt.h
    
    Reviewed-by: Lynne <dev@lynne.ee>
    Signed-off-by: Andreas Rheinhardt <andreas.rheinhardt@outlook.com>

diff --git a/libavcodec/opus.h b/libavcodec/opus.h
index a7dbe7ea8a..2dc6085207 100644
--- a/libavcodec/opus.h
+++ b/libavcodec/opus.h
@@ -73,8 +73,6 @@ enum OpusBandwidth {
 
 typedef struct SilkContext SilkContext;
 
-typedef struct CeltFrame CeltFrame;
-
 int ff_silk_init(AVCodecContext *avctx, SilkContext **ps, int output_channels);
 void ff_silk_free(SilkContext **ps);
 void ff_silk_flush(SilkContext *s);
@@ -82,16 +80,10 @@ void ff_silk_flush(SilkContext *s);
 /**
  * Decode the LP layer of one Opus frame (which may correspond to several SILK
  * frames).
  */
 int ff_silk_decode_superframe(SilkContext *s, OpusRangeCoder *rc,
                               float *output[2],
                               enum OpusBandwidth bandwidth, int coded_channels,
                               int duration_ms);
 
-/* Encode or decode CELT bands */
-void ff_celt_quant_bands(CeltFrame *f, OpusRangeCoder *rc);
-
-/* Encode or decode CELT bitallocation */
-void ff_celt_bitalloc(CeltFrame *f, OpusRangeCoder *rc, int encode);
-
 #endif /* AVCODEC_OPUS_H */
diff --git a/libavcodec/opus_celt.h b/libavcodec/opus_celt.h
index c812b6645c..3dbf197160 100644
--- a/libavcodec/opus_celt.h
+++ b/libavcodec/opus_celt.h
@@ -1,45 +1,46 @@
 /*
- * Opus decoder/demuxer common functions
+ * Opus decoder/encoder CELT functions
  * Copyright (c) 2012 Andrew D'Addesio
  * Copyright (c) 2013-2014 Mozilla Corporation
  * Copyright (c) 2016 Rostislav Pehlivanov <atomnuker@gmail.com>
  *
  * This file is part of FFmpeg.
  *
  * FFmpeg is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
  * License as published by the Free Software Foundation; either
  * version 2.1 of the License, or (at your option) any later version.
  *
  * FFmpeg is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  * Lesser General Public License for more details.
  *
  * You should have received a copy of the GNU Lesser General Public
  * License along with FFmpeg; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
  */
 
 #ifndef AVCODEC_OPUS_CELT_H
 #define AVCODEC_OPUS_CELT_H
 
 #include <float.h>
 
 #include "opus.h"
 #include "opusdsp.h"
+#include "opus_rc.h"
 
 #include "libavutil/float_dsp.h"
 #include "libavutil/libm.h"
 #include "libavutil/mem_internal.h"
 #include "libavutil/tx.h"
 
 #define CELT_VECTORS                 11
 #define CELT_ALLOC_STEPS             6
 #define CELT_FINE_OFFSET             21
 #define CELT_MAX_FINE_BITS           8
 #define CELT_NORM_SCALE              16384
 #define CELT_QTHETA_OFFSET           4
 #define CELT_QTHETA_OFFSET_TWOPHASE  16
 #define CELT_POSTFILTER_MINPERIOD    15
 #define CELT_ENERGY_SILENCE          (-28.0f)
@@ -87,56 +88,56 @@ typedef struct CeltBlock {
     float emph_coeff;
 } CeltBlock;
 
-struct CeltFrame {
+typedef struct CeltFrame {
     // constant values that do not change during context lifetime
     AVCodecContext      *avctx;
     AVTXContext        *tx[4];
     av_tx_fn            tx_fn[4];
     AVFloatDSPContext   *dsp;
     CeltBlock           block[2];
     struct CeltPVQ      *pvq;
     OpusDSP             opusdsp;
     int channels;
     int output_channels;
     int apply_phase_inv;
 
     enum CeltBlockSize size;
     int start_band;
     int end_band;
     int coded_bands;
     int transient;
     int pfilter;
     int skip_band_floor;
     int tf_select;
     int alloc_trim;
     int alloc_boost[CELT_MAX_BANDS];
     int blocks;        /* number of iMDCT blocks in the frame, depends on transient */
     int blocksize;     /* size of each block */
     int silence;       /* Frame is filled with silence */
     int anticollapse_needed; /* Whether to expect an anticollapse bit */
     int anticollapse;  /* Encoded anticollapse bit */
     int intensity_stereo;
     int dual_stereo;
     int flushed;
     uint32_t seed;
     enum CeltSpread spread;
 
     /* Encoder PF coeffs */
     int pf_octave;
     int pf_period;
     int pf_tapset;
     float pf_gain;
 
     /* Bit allocation */
     int framebits;
     int remaining;
     int remaining2;
     int caps         [CELT_MAX_BANDS];
     int fine_bits    [CELT_MAX_BANDS];
     int fine_priority[CELT_MAX_BANDS];
     int pulses       [CELT_MAX_BANDS];
     int tf_change    [CELT_MAX_BANDS];
-};
+} CeltFrame;
 
 /* LCG for noise generation */
 static av_always_inline uint32_t celt_rng(CeltFrame *f)
@@ -167,4 +168,10 @@ void ff_celt_flush(CeltFrame *f);
 int ff_celt_decode_frame(CeltFrame *f, OpusRangeCoder *rc, float **output,
                          int coded_channels, int frame_size, int startband, int endband);
 
+/* Encode or decode CELT bands */
+void ff_celt_quant_bands(CeltFrame *f, OpusRangeCoder *rc);
+
+/* Encode or decode CELT bitallocation */
+void ff_celt_bitalloc(CeltFrame *f, OpusRangeCoder *rc, int encode);
+
 #endif /* AVCODEC_OPUS_CELT_H */
