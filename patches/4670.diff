commit a1a415052fc3632b50b576891cab04b66451255b
Author: Roman Lebedev <lebedev.ri@gmail.com>
Date:   Sat Dec 16 23:46:14 2017 +0300

    LJpegDecompressor::decodeScan(): do ensure that LJpeg frame is large-enough
    
    Otherwise, if it contains less pixels than the DNG tile/slice,
    we may end up with uninitialized pixels.

diff --git a/src/librawspeed/decompressors/LJpegDecompressor.cpp b/src/librawspeed/decompressors/LJpegDecompressor.cpp
index 56257530..91845e95 100644
--- a/src/librawspeed/decompressors/LJpegDecompressor.cpp
+++ b/src/librawspeed/decompressors/LJpegDecompressor.cpp
@@ -71,29 +71,35 @@ void LJpegDecompressor::decode(uint32 offsetX, uint32 offsetY, uint32 width,
 void LJpegDecompressor::decodeScan()
 {
   if (predictorMode != 1)
     ThrowRDE("Unsupported predictor mode: %u", predictorMode);
 
   for (uint32 i = 0; i < frame.cps;  i++)
     if (frame.compInfo[i].superH != 1 || frame.compInfo[i].superV != 1)
       ThrowRDE("Unsupported subsampling");
 
   assert(static_cast<unsigned>(mRaw->dim.x) > offX);
   if ((mRaw->getCpp() * (mRaw->dim.x - offX)) < frame.cps)
     ThrowRDE("Got less pixels than the components per sample");
 
+  const auto frameWidth = frame.cps * frame.w;
+  if (frameWidth < w || frame.h < h) {
+    ThrowRDE("LJpeg frame (%u, %u) is smaller than expected (%u, %u)",
+             frameWidth, frame.h, w, h);
+  }
+
   switch (frame.cps) {
   case 2:
     decodeN<2>();
     break;
   case 3:
     decodeN<3>();
     break;
   case 4:
     decodeN<4>();
     break;
   default:
     ThrowRDE("Unsupported number of components: %u", frame.cps);
   }
 }
 
 // N_COMP == number of components (2, 3 or 4)
