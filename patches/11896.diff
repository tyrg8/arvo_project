changeset:   15889:c85ced189946
user:        Bob Friesenhahn <bfriesen@GraphicsMagick.org>
date:        Sun Feb 10 13:48:13 2019 -0600
summary:     ReadTIFFImage(): Assure that opacity channel is initialized in the RGBAStrippedMethod case.

diff -r c7d1e7850490 -r c85ced189946 ChangeLog
--- a/ChangeLog	Sun Feb 10 13:46:50 2019 -0600
+++ b/ChangeLog	Sun Feb 10 13:48:13 2019 -0600
@@ -1,5 +1,13 @@
 2019-02-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>
 
+	* coders/tiff.c (ReadTIFFImage): Assure that opacity channel is
+	initialized in the RGBAStrippedMethod case.  Convert
+	'CorruptImageError' encountered while testing for more frames to
+	'CorruptImageWarning' so we return the frames already read.
+	Second try at fixing oss-fuzz 11896
+	"graphicsmagick/coder_PTIF_fuzzer: Use-of-uninitialized-value in
+	VerticalFilter".
+
 	* coders/dpx.c (AttributeToString): Eliminate clang
 	"-Wstring-plus-int" warning observed in oss-fuzz build.
 
diff -r c7d1e7850490 -r c85ced189946 coders/tiff.c
--- a/coders/tiff.c	Sun Feb 10 13:46:50 2019 -0600
+++ b/coders/tiff.c	Sun Feb 10 13:48:13 2019 -0600
@@ -1616,7 +1616,7 @@
 
   if ((image->logging) && (*quantum_samples == 0))
     (void) LogMagickEvent(CoderEvent,GetMagickModule(),
-                          "Reporting failure");
+                          "QuantumTransferMode reports failure");
 
   return (*quantum_samples != 0 ? MagickPass : MagickFail);
 }
@@ -3187,6 +3187,9 @@
                   {
                     if (!TIFFReadRGBAStrip(tiff,y,strip_pixels))
                       {
+                        if (logging)
+                          (void) LogMagickEvent(CoderEvent,GetMagickModule(),
+                                                "TIFFReadRGBAStrip reports failure");
                         status=MagickFail;
                         break;
                       }
@@ -3201,6 +3204,8 @@
                     q->blue=ScaleCharToQuantum(TIFFGetB(*p));
                     if (image->matte)
                       q->opacity=(Quantum) ScaleCharToQuantum(TIFFGetA(*p));
+                    else
+                      q->opacity=OpaqueOpacity;
                     p++;
                     q++;
                   }
@@ -3380,6 +3385,7 @@
                               q->red=ScaleCharToQuantum(TIFFGetR(*p));
                               q->green=ScaleCharToQuantum(TIFFGetG(*p));
                               q->blue=ScaleCharToQuantum(TIFFGetB(*p));
+                              q->opacity=OpaqueOpacity;
                               q++;
                               p++;
                             }
@@ -3512,6 +3518,7 @@
                       q->red=ScaleCharToQuantum(TIFFGetR(*p));
                       q->green=ScaleCharToQuantum(TIFFGetG(*p));
                       q->blue=ScaleCharToQuantum(TIFFGetB(*p));
+                      q->opacity=OpaqueOpacity;
                       p--;
                       q--;
                     }
@@ -3561,6 +3568,18 @@
             if (image->scene >= (image_info->subimage+image_info->subrange-1))
               break;
           more_frames=TIFFReadDirectory(tiff);
+          if (logging)
+            (void) LogMagickEvent(CoderEvent,GetMagickModule(),
+                                  "TIFFReadDirectory() returned %d",more_frames);
+          if ((more_frames == 0) && (exception->severity == CorruptImageError))
+            {
+              if (logging)
+                (void) LogMagickEvent(CoderEvent,GetMagickModule(),
+                                      "Re-casting 'CorruptImageError' to"
+                                      " 'CorruptImageWarning' due to"
+                                      " TIFFReadDirectory() error");
+              exception->severity=CorruptImageWarning;
+            }
           if (more_frames)
             {
               /*
@@ -3586,7 +3605,13 @@
     } while ((status == MagickPass) && (more_frames));
   TIFFClose(tiff);
   if (status == MagickFail)
+    {
+      if (logging)
+        (void) LogMagickEvent(CoderEvent,GetMagickModule(),
+                              "Delete image %ld from list due to error",
+                              image->scene);
       DeleteImageFromList(&image);
+    }
   return GetFirstImageInList(image);
 }
 #endif
diff -r c7d1e7850490 -r c85ced189946 www/Changelog.html
--- a/www/Changelog.html	Sun Feb 10 13:46:50 2019 -0600
+++ b/www/Changelog.html	Sun Feb 10 13:48:13 2019 -0600
@@ -38,6 +38,13 @@
 <p>2019-02-10  Bob Friesenhahn  &lt;<a class="reference external" href="mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>
 <blockquote>
 <ul class="simple">
+<li>coders/tiff.c (ReadTIFFImage): Assure that opacity channel is
+initialized in the RGBAStrippedMethod case.  Convert
+'CorruptImageError' encountered while testing for more frames to
+'CorruptImageWarning' so we return the frames already read.
+Second try at fixing oss-fuzz 11896
+&quot;graphicsmagick/coder_PTIF_fuzzer: Use-of-uninitialized-value in
+VerticalFilter&quot;.</li>
 <li>coders/dpx.c (AttributeToString): Eliminate clang
 &quot;-Wstring-plus-int&quot; warning observed in oss-fuzz build.</li>
 <li>coders/cineon.c (AttributeToString): Eliminate clang

