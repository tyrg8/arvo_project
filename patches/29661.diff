commit e8a0ae186ffaa71ff70170ccd9c2e5e444b1a8ba
Author: Nikita Popov <nikita.ppv@gmail.com>
Date:   Mon Jan 18 10:35:01 2021 +0100

    Fix memsize check for xxh32
    
    Copy-paste mistake: The memsize limit for xxh32 should be 16,
    rather than 32 (which is correct for xxh64).
    
    Probably fixes oss-fuzz #29661.

diff --git a/ext/hash/hash_xxhash.c b/ext/hash/hash_xxhash.c
index 3edcdfc963..8ce5fcfc7f 100644
--- a/ext/hash/hash_xxhash.c
+++ b/ext/hash/hash_xxhash.c
@@ -80,13 +80,13 @@ PHP_HASH_API int PHP_XXH32Copy(const php_hash_ops *ops, PHP_XXH32_CTX *orig_cont
 static int php_hash_xxh32_unserialize(
 		php_hashcontext_object *hash, zend_long magic, const zval *zv)
 {
 	PHP_XXH32_CTX *ctx = (PHP_XXH32_CTX *) hash->context;
 	int r = FAILURE;
 	if (magic == PHP_HASH_SERIALIZE_MAGIC_SPEC
 		&& (r = php_hash_unserialize_spec(hash, zv, PHP_XXH32_SPEC)) == SUCCESS
-		&& ctx->s.memsize < 32) {
+		&& ctx->s.memsize < 16) {
 		return SUCCESS;
 	} else {
 		return r != SUCCESS ? r : -2000;
 	}
 }
diff --git a/ext/hash/tests/xxhash_unserialize_memsize.phpt b/ext/hash/tests/xxhash_unserialize_memsize.phpt
index 36750505c9..6de78ee071 100644
--- a/ext/hash/tests/xxhash_unserialize_memsize.phpt
+++ b/ext/hash/tests/xxhash_unserialize_memsize.phpt
@@ -1,27 +1,27 @@
 --TEST--
 xxhash memsize must be in range when unserializing
 --FILE--
 <?php
 try {
     $str = <<<'STR'
-    O:11:"HashContext":5:{i:0;s:5:"xxh32";i:1;i:0;i:2;a:12:{i:0;i:0;i:1;i:0;i:2;i:606290984;i:3;i:-2048144777;i:4;i:0;i:5;i:1640531535;i:6;i:0;i:7;i:0;i:8;i:0;i:9;i:0;i:10;i:80;i:11;i:0;}i:3;i:2;i:4;a:0:{}}
+    O:11:"HashContext":5:{i:0;s:5:"xxh32";i:1;i:0;i:2;a:12:{i:0;i:0;i:1;i:0;i:2;i:606290984;i:3;i:-2048144777;i:4;i:0;i:5;i:1640531535;i:6;i:0;i:7;i:0;i:8;i:0;i:9;i:0;i:10;i:30;i:11;i:0;}i:3;i:2;i:4;a:0:{}}
     STR;
     $hash = unserialize($str);
     hash_update($hash, '');
 } catch (Exception $e) {
     echo $e->getMessage(), "\n";
 }
 
 try {
     $str = <<<'STR'
     O:11:"HashContext":5:{i:0;s:5:"xxh64";i:1;i:0;i:2;a:22:{i:0;i:0;i:1;i:0;i:2;i:6;i:3;i:2;i:4;i:8;i:5;i:9;i:6;i:0;i:7;i:0;i:8;i:1;i:9;i:5;i:10;i:0;i:11;i:0;i:12;i:0;i:13;i:0;i:14;i:0;i:15;i:0;i:16;i:0;i:17;i:0;i:18;i:70;i:19;i:0;i:20;i:0;i:21;i:0;}i:3;i:2;i:4;a:0:{}}
     STR;
     $hash = unserialize($str);
     hash_update($hash, '');
 } catch (Exception $e) {
     echo $e->getMessage(), "\n";
 }
 ?>
 --EXPECT--
 Incomplete or ill-formed serialization data ("xxh32" code -2000)
 Incomplete or ill-formed serialization data ("xxh64" code -2000)
