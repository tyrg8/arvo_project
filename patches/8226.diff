commit e57462cd7b08df2794b1c81e7bb15ed96afef1f1
Author: Michael Stahl <Michael.Stahl@cib.de>
Date:   Thu May 10 15:45:30 2018 +0200

    test: force EnableHeadlessMode() for PythonTest
    
    Clearly this should be on, but we can't easily pass in a command line
    argument like is done in CppunitTest because that doesn't end up in
    rtl_getAppCommandArg(), which is empty since it's the python.bin process,
    so we'd have to find a way to get the argv from python first...
    
    Change-Id: I9321a9f933f388a659643898e0dc38f295f2068c
    Reviewed-on: https://gerrit.libreoffice.org/54083
    Tested-by: Jenkins <ci@libreoffice.org>
    Reviewed-by: Michael Stahl <Michael.Stahl@cib.de>

diff --git a/include/test/setupvcl.hxx b/include/test/setupvcl.hxx
index e7a1d08bba2c..78d4683e50ce 100644
--- a/include/test/setupvcl.hxx
+++ b/include/test/setupvcl.hxx
@@ -17,10 +17,10 @@
 namespace test {
 
 // Calls InitVCL etc.; needed from multiple places in the test infrastructure:
-OOO_DLLPUBLIC_TEST_SETUPVCL void setUpVcl();
+OOO_DLLPUBLIC_TEST_SETUPVCL void setUpVcl(bool forceHeadless = false);
 
 }
 
 #endif
 
 /* vim:set shiftwidth=4 softtabstop=4 expandtab cinoptions=b1,g0,N-s cinkeys+=0=break: */
diff --git a/test/source/bootstrapfixture.cxx b/test/source/bootstrapfixture.cxx
index 99fd73151dfb..0808a6d4f9e7 100644
--- a/test/source/bootstrapfixture.cxx
+++ b/test/source/bootstrapfixture.cxx
@@ -89,13 +89,13 @@ void test_init_impl(bool bAssertOnDialog, bool bNeedUCB,
 // this is called from pyuno
 SAL_DLLPUBLIC_EXPORT void test_init(lang::XMultiServiceFactory *pFactory)
 {
     try
     {
         ::comphelper::setProcessServiceFactory(pFactory);
-        test::setUpVcl();
+        test::setUpVcl(true); // hard-code python tests to headless
         test_init_impl(false, true, pFactory);
     }
     catch (...) { abort(); }
 }
 
 } // extern "C"
diff --git a/test/source/setupvcl.cxx b/test/source/setupvcl.cxx
index 99f17b7fb056..ff6eec8b8605 100644
--- a/test/source/setupvcl.cxx
+++ b/test/source/setupvcl.cxx
@@ -57,25 +57,25 @@ IMPL_STATIC_LINK_NOARG(Hook, deinitHook, LinkParamNone *, void) {
 
 }
 
-void test::setUpVcl() {
+void test::setUpVcl(bool const forceHeadless) {
     // Force locale (and resource files loaded):
     OUString locale;
     if (getenv("LO_TEST_LOCALE") != nullptr)
         locale = OUString::fromUtf8(getenv("LO_TEST_LOCALE"));
     else
         locale = "en-US";
 
     SvtSysLocaleOptions localOptions;
     localOptions.SetLocaleConfigString(locale);
     localOptions.SetUILocaleConfigString(locale);
     LanguageTag tag(locale);
     MsLangId::setConfiguredSystemUILanguage(tag.getLanguageType(false));
     LanguageTag::setConfiguredSystemLanguage(tag.getLanguageType(false));
     InitVCL();
-    if (isHeadless()) {
+    if (forceHeadless || isHeadless()) {
         Application::EnableHeadlessMode(false);
     }
     Application::setDeInitHook(LINK(nullptr, Hook, deinitHook));
 }
 
 /* vim:set shiftwidth=4 softtabstop=4 expandtab cinoptions=b1,g0,N-s cinkeys+=0=break: */
