commit 3d4b8666b02ecea0045c2ba8ae4c46a3f766c765
Author: Stefan Profanter <git@s.profanter.me>
Date:   Tue Jan 23 10:47:49 2018 +0100

    Do not allow to activate session multiple times
    
    Otherwise it will add the session to the channel multiple times
    which leads to an infinite loop during cleanup.
    
    See https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=5576
    
    Credit to oss-fuzz

diff --git a/src/server/ua_services_session.c b/src/server/ua_services_session.c
index 8dc9532f8..a37e97ed8 100644
--- a/src/server/ua_services_session.c
+++ b/src/server/ua_services_session.c
@@ -233,39 +233,50 @@ void
 Service_ActivateSession(UA_Server *server, UA_SecureChannel *channel,
                         UA_Session *session, const UA_ActivateSessionRequest *request,
                         UA_ActivateSessionResponse *response) {
     if(session->validTill < UA_DateTime_nowMonotonic()) {
         UA_LOG_INFO_SESSION(server->config.logger, session,
                             "ActivateSession: SecureChannel %i wants "
                             "to activate, but the session has timed out",
                             channel->securityToken.channelId);
         response->responseHeader.serviceResult =
             UA_STATUSCODE_BADSESSIONIDINVALID;
         return;
     }
 
     checkSignature(server, channel, session, request, response);
     if(response->responseHeader.serviceResult != UA_STATUSCODE_GOOD)
         return;
 
     /* Callback into userland access control */
     response->responseHeader.serviceResult =
         server->config.accessControl.activateSession(&session->sessionId,
                                                      &request->userIdentityToken,
                                                      &session->sessionHandle);
     if(response->responseHeader.serviceResult != UA_STATUSCODE_GOOD)
         return;
 
     /* Detach the old SecureChannel */
     if(session->header.channel && session->header.channel != channel) {
         UA_LOG_INFO_SESSION(server->config.logger, session,
                             "ActivateSession: Detach from old channel");
         UA_Session_detachFromSecureChannel(session);
+        session->activated = false;
     }
 
+    if (session->activated) {
+        UA_LOG_INFO_SESSION(server->config.logger, session,
+                            "ActivateSession: SecureChannel %i wants "
+                                    "to activate, but the session is already activated",
+                            channel->securityToken.channelId);
+        response->responseHeader.serviceResult =
+                UA_STATUSCODE_BADSESSIONIDINVALID;
+        return;
+
+    }
     /* Attach to the SecureChannel and activate */
     UA_Session_attachToSecureChannel(session, channel);
     session->activated = true;
     UA_Session_updateLifetime(session);
     UA_LOG_INFO_SESSION(server->config.logger, session,
                         "ActivateSession: Session activated");
 }
