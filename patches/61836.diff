commit 8397540abaf6906979da66b718195d6ed5587861
Author: Luca Deri <deri@ntop.org>
Date:   Tue Nov 21 12:54:19 2023 +0100

    Fixes in Heap-buffer-overflow in ICMPinfo::dissectICMP

diff --git a/src/ICMPinfo.cpp b/src/ICMPinfo.cpp
index f7f234fb1..f6ccfdeb8 100644
--- a/src/ICMPinfo.cpp
+++ b/src/ICMPinfo.cpp
@@ -95,54 +95,49 @@ u_int32_t ICMPinfo::key() const {
 void ICMPinfo::dissectICMP(u_int16_t const payload_len,
                            const u_int8_t *const payload_data) {
   reset();
 
   if (payload_len > 2) {
     icmp_type = payload_data[0], icmp_code = payload_data[1];
 
     if (icmp_type == ICMP_DEST_UNREACH && icmp_code == ICMP_PORT_UNREACH &&
-        payload_len >= sizeof(struct ndpi_iphdr)) {
-      struct ndpi_iphdr *icmp_port_unreach_ip =
-          (struct ndpi_iphdr *)&payload_data[8];
-      u_short icmp_port_unreach_iph_len =
-          (u_short)(icmp_port_unreach_ip->ihl * 4);
-
-      if (payload_len >=
-              icmp_port_unreach_iph_len + sizeof(struct ndpi_udphdr) &&
-          icmp_port_unreach_ip->protocol == IPPROTO_UDP &&
-          (unreach ||
-           (unreach = (unreachable_t *)calloc(1, sizeof(*unreach))))) {
-        struct ndpi_udphdr *icmp_port_unreach_udp =
-            (struct ndpi_udphdr *)&payload_data[8 + icmp_port_unreach_iph_len];
-
+        payload_len >= (sizeof(struct ndpi_iphdr) + 8)) {
+      struct ndpi_iphdr *icmp_port_unreach_ip = (struct ndpi_iphdr *)&payload_data[8];
+      u_short icmp_port_unreach_iph_len = (u_short)(icmp_port_unreach_ip->ihl * 4);
+
+      if ((payload_len >= (8 + icmp_port_unreach_iph_len + sizeof(struct ndpi_udphdr)))
+	  && (icmp_port_unreach_ip->protocol == IPPROTO_UDP)
+	  && (unreach || (unreach = (unreachable_t *)calloc(1, sizeof(*unreach))))) {
+        struct ndpi_udphdr *icmp_port_unreach_udp = (struct ndpi_udphdr *)&payload_data[8 + icmp_port_unreach_iph_len];
+	
         unreach->src_ip.set(icmp_port_unreach_ip->saddr),
-            unreach->dst_ip.set(icmp_port_unreach_ip->daddr),
-            unreach->src_port = icmp_port_unreach_udp->source,
-            unreach->dst_port = icmp_port_unreach_udp->dest,
-            unreach->protocol = icmp_port_unreach_ip->protocol;
+	  unreach->dst_ip.set(icmp_port_unreach_ip->daddr),
+	  unreach->src_port = icmp_port_unreach_udp->source,
+	  unreach->dst_port = icmp_port_unreach_udp->dest,
+	  unreach->protocol = icmp_port_unreach_ip->protocol;
       }
     } else if ((icmp_type == ICMP_ECHO || icmp_type == ICMP_ECHOREPLY ||
                 icmp_type == ICMP_TIMESTAMP ||
                 icmp_type == ICMP_TIMESTAMPREPLY ||
                 icmp_type == ICMP_INFO_REQUEST ||
                 icmp_type == ICMP_INFO_REPLY) &&
                icmp_code == 0 && payload_len > 5) {
       /* https://tools.ietf.org/html/rfc792
 
          Echo or Echo Reply Message
          Timestamp or Timestamp Reply Message
          Information Request or Information Reply Message
 
          Identifier
 
          If code = 0, an identifier to aid in matching echos and replies,
          may be zero.
       */
 
       icmp_identifier = ntohs(*(u_int16_t *)&payload_data[4]);
       // ntop->getTrace()->traceEvent(TRACE_NORMAL, "identifier: 0x%X [0x%x%x]",
       // icmp_identifier, payload_data[4], payload_data[5]);
     }
   }
 }
 
 /* *************************************** */
