commit 764ab7b702142762bfa9c4e93427c6e494ff7940
Author: Mallikarjun Kamble <mallikarjun.kamble@ittiam.com>
Date:   Wed Feb 15 10:24:59 2023 +0530

    Resolve the issue of non-vcl buffer overflow in nal_parse
    
    BUG=oss-fuzz:55964
    Test: svc_dec_fuzzer

diff --git a/decoder/svc/isvcd_nal_parse.c b/decoder/svc/isvcd_nal_parse.c
index c79f36d..6bad007 100644
--- a/decoder/svc/isvcd_nal_parse.c
+++ b/decoder/svc/isvcd_nal_parse.c
@@ -336,102 +336,104 @@ WORD32 isvcd_nal_reset_ctxt(nal_parse_ctxt_t *ps_nal_parse_ctxt)
 /*****************************************************************************/
 /*                                                                           */
 /*  Function Name : isvcd_pic_reset_ctxt                                      */
 /*                                                                           */
 /*  Description   : This routine performs the picture level initialization.  */
 /*                  This routine shall be called before parsing a access unit*/
 /*                                                                           */
 /*  Inputs        : pv_nal_parse_ctxt - Pointer to context structure         */
 /*                                                                           */
 /*  Globals       : None                                                     */
 /*                                                                           */
 /*  Processing    : 1. Resets the varaibles                                  */
 /*                                                                           */
 /*  Outputs       : Updated context structure                                */
 /*                                                                           */
 /*  Returns       : none                                                     */
 /*                                                                           */
 /*  Issues        : None                                                     */
 /*                                                                           */
 /*  Revision History:                                                        */
 /*          DD MM YYYY   Author(s)       Changes                             */
 /*          06 09 2021   Vijay           Draft                               */
 /*                                                                           */
 /*****************************************************************************/
 void isvcd_pic_reset_ctxt(nal_parse_ctxt_t *ps_nal_parse_ctxt)
 {
     WORD32 i4_status;
 
     /*-----------------------------------------------------------------------*/
     /*! Reset NAL boundary detetction logic                                  */
     /*-----------------------------------------------------------------------*/
     i4_status = isvcd_nal_reset_ctxt(ps_nal_parse_ctxt);
 
     UNUSED(i4_status);
 
     /*-----------------------------------------------------------------------*/
     /*! Reset picture boundary detctetion logic                              */
     /*-----------------------------------------------------------------------*/
     ps_nal_parse_ctxt->i4_is_frst_vcl_nal_in_au = SVCD_TRUE;
 
     /*-----------------------------------------------------------------------*/
     /*! Reset VCL and non VCL NAL buffer tracking variables                  */
     /*-----------------------------------------------------------------------*/
     ps_nal_parse_ctxt->pu1_non_vcl_nal_buf = ps_nal_parse_ctxt->pv_non_vcl_nal_buf;
     ps_nal_parse_ctxt->pu1_vcl_nal_buf = ps_nal_parse_ctxt->pv_vcl_nal_buf;
 
     /* reset the bytes left to buffer size */
     ps_nal_parse_ctxt->u4_bytes_left_vcl = MAX_VCL_NAL_BUFF_SIZE;
-    ps_nal_parse_ctxt->u4_bytes_left_non_vcl = MAX_NON_VCL_NAL_BUFF_SIZE;
+
+    /* 85% of the buffer is used. 15% is used to handle error cases*/
+    ps_nal_parse_ctxt->u4_bytes_left_non_vcl = (MAX_NON_VCL_NAL_BUFF_SIZE * 0.85);
 
     /* Offset the buffer to start of vcl data */
     UPDATE_NAL_BUF_PTR(&ps_nal_parse_ctxt->pu1_non_vcl_nal_buf, NON_VCL_NAL,
                        &ps_nal_parse_ctxt->u4_bytes_left_non_vcl);
 
     UPDATE_NAL_BUF_PTR(&ps_nal_parse_ctxt->pu1_vcl_nal_buf, VCL_NAL,
                        &ps_nal_parse_ctxt->u4_bytes_left_vcl);
 
     /* Reset previous field */
     ps_nal_parse_ctxt->ps_prev_non_vcl_buf = NULL;
     ps_nal_parse_ctxt->i4_idr_pic_err_flag = 0;
 
     /*-----------------------------------------------------------------------*/
     /*! Reset other NAL related tracking variables                           */
     /*-----------------------------------------------------------------------*/
     ps_nal_parse_ctxt->i4_num_non_vcl_nals = 0;
 
     /* Reset the vcl nal node buffer context */
     i4_status = isvcd_dqid_ctxt_reset(&ps_nal_parse_ctxt->s_dqid_ctxt);
 
     /* Reset target layer update flag */
     ps_nal_parse_ctxt->i4_tgt_lyr_update = SVCD_TRUE;
 }
 
 /*****************************************************************************/
 /*                                                                           */
 /*  Function Name : isvcd_get_nal_prms                                        */
 /*                                                                           */
 /*  Description   : This routine will update the nal prms                    */
 /*  Inputs        : 1. Start of bitstream buffer containing NAL header       */
 /*                  2. Size of the buffer                                    */
 /*                  3. NAL prms structure                                    */
 /*                  4. Place holder for error code                           */
 /*                  5. Place holder for nal discard flag                     */
 /*                  6. NAL parse context structure                           */
 /*  Globals       : None                                                     */
 /*  Processing    : 1. Parses the NAL header                                 */
 /*                  2. Sets the discard flag                                 */
 /*                  3. If NAL is not discarded and nal is VCL NAL unit then  */
 /*                     decodes the slice prms (prefix nal units are excluded)*/
 /*  Outputs       : Updated NAL prms structure                               */
 /*                  Updated NAL discrd flag                                  */
 /*                  Updates the error code if encountered with error         */
 /*  Returns       : status                                                   */
 /*                                                                           */
 /*  Issues        : None                                                     */
 /*                                                                           */
 /*  Revision History:                                                        */
 /*                                                                           */
 /*         DD MM YYYY   Author(s)       Changes (Describe the changes made)  */
 /*         06 09 2021   Vijay           Draft                                */
 /*                                                                           */
 /*****************************************************************************/
