commit 3c630f9b0af097663a64e5c875c580aa9808a92b
Author: Daniel Stenberg <daniel@haxx.se>
Date:   Wed Apr 25 07:56:01 2018 +0200

    strcpy_url: only %-encode values >= 0x80
    
    OSS-Fuzz detected
    
    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8000
    
    Broke in dd7521bcc1b7

diff --git a/lib/transfer.c b/lib/transfer.c
index c586c727d..9712a7f7e 100644
--- a/lib/transfer.c
+++ b/lib/transfer.c
@@ -1492,55 +1492,55 @@ static size_t strlen_url(const char *url, bool relative)
 /* strcpy_url() copies a url to a output buffer and URL-encodes the spaces in
  * the source URL accordingly.
  * URL encoding should be skipped for host names, otherwise IDN resolution
  * will fail.
  */
 static void strcpy_url(char *output, const char *url, bool relative)
 {
   /* we must add this with whitespace-replacing */
   bool left = TRUE;
   const unsigned char *iptr;
   char *optr = output;
   const unsigned char *host_sep = (const unsigned char *) url;
 
   if(!relative)
     host_sep = (const unsigned char *) find_host_sep(url);
 
   for(iptr = (unsigned char *)url;    /* read from here */
       *iptr;         /* until zero byte */
       iptr++) {
 
     if(iptr < host_sep) {
       *optr++ = *iptr;
       continue;
     }
 
     switch(*iptr) {
     case '?':
       left = FALSE;
       /* fall through */
     default:
-      if(!ISPRINT(*iptr)) {
+      if(*iptr >= 0x80) {
         snprintf(optr, 4, "%%%02x", *iptr);
         optr += 3;
       }
       else
         *optr++=*iptr;
       break;
     case ' ':
       if(left) {
         *optr++='%'; /* add a '%' */
         *optr++='2'; /* add a '2' */
         *optr++='0'; /* add a '0' */
       }
       else
         *optr++='+'; /* add a '+' here */
       break;
     }
   }
   *optr = 0; /* zero terminate output buffer */
 
 }
 
 /*
  * Returns true if the given URL is absolute (as opposed to relative)
  */
