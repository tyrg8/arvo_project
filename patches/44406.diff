commit a07b2982ac60f0e563e6a282bf2f8fdc81ae3c1c
Author: Chris Liddell <chris.liddell@artifex.com>
Date:   Mon Feb 7 12:55:17 2022 +0000

    oss-fuzz 44406: Extra bounds check for eexec decoding
    
    Augment a previous buffer bounds check to check for a zero length buffer, as
    well as the existing negatively buffer size.

diff --git a/pdf/pdf_fontps.c b/pdf/pdf_fontps.c
index 02384ab24..7d90120c5 100644
--- a/pdf/pdf_fontps.c
+++ b/pdf/pdf_fontps.c
@@ -977,27 +977,27 @@ static int
 ps_font_eexec_func(gs_memory_t *mem, pdf_ps_ctx_t *s, byte *buf, byte *bufend)
 {
     stream *strm;
     int c;
 
-    if (bufend < buf) {
+    if (bufend <= buf) {
         return_error(gs_error_invalidfont);
     }
 
     strm = push_eexec_filter(mem, buf, bufend);
     while (1) {
         c = sgetc(strm);
         if (c < 0)
             break;
         *buf = (byte) c;
         buf++;
     }
     pop_eexec_filter(mem, strm);
 
     return 0;
 }
 
 /* Normally, for us, "array" is a NULL op.
  *The exception is when the name /Subrs is two objects
  *down from the top of the stack, then we can use this call
  *to record how many subrs we expect, and allocate space for them
  */
