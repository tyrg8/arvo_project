commit df5a176bfdf8c52ba89c7fef1f82f6f3b9312bc1
Author: Veronika Hanulikova <xhanulik@fi.muni.cz>
Date:   Fri Feb 10 11:47:34 2023 +0100

    Check array bounds
    
    Thanks OSS-Fuzz
    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=54312

diff --git a/src/libopensc/muscle.c b/src/libopensc/muscle.c
index 61a4ec24..9d01e0c1 100644
--- a/src/libopensc/muscle.c
+++ b/src/libopensc/muscle.c
@@ -177,40 +177,43 @@ int msc_create_object(sc_card_t *card, msc_id objectId, size_t objectSize, unsig
 /* Update up to MSC_MAX_READ - 9 bytes */
 int msc_partial_update_object(sc_card_t *card, msc_id objectId, int offset, const u8 *data, size_t dataLength)
 {
 	u8 buffer[MSC_MAX_APDU];
 	sc_apdu_t apdu;
 	int r;
 
+	if (dataLength + 9 > MSC_MAX_APDU)
+		return SC_ERROR_INVALID_ARGUMENTS;
+
 	sc_format_apdu(card, &apdu, SC_APDU_CASE_3_SHORT, 0x54, 0x00, 0x00);
 	apdu.lc = dataLength + 9;
 	if (card->ctx->debug >= 2)
 		sc_log(card->ctx, 
 			 "WRITE: Offset: %x\tLength: %"SC_FORMAT_LEN_SIZE_T"u\n",
 			 offset, dataLength);
 	
 	memcpy(buffer, objectId.id, 4);
 	ulong2bebytes(buffer + 4, offset);
 	buffer[8] = (u8)dataLength;
 	memcpy(buffer + 9, data, dataLength);
 	apdu.data = buffer;
 	apdu.datalen = apdu.lc;
 	r = sc_transmit_apdu(card, &apdu);
 	LOG_TEST_RET(card->ctx, r, "APDU transmit failed");
 	if(apdu.sw1 == 0x90 && apdu.sw2 == 0x00)
 		return dataLength;
 	if(apdu.sw1 == 0x9C) {
 		if(apdu.sw2 == 0x07) {
 			SC_FUNC_RETURN(card->ctx, SC_LOG_DEBUG_VERBOSE, SC_ERROR_FILE_NOT_FOUND);
 		} else if(apdu.sw2 == 0x06) {
 			SC_FUNC_RETURN(card->ctx, SC_LOG_DEBUG_VERBOSE, SC_ERROR_NOT_ALLOWED);
 		} else if(apdu.sw2 == 0x0F) {
 			/* GUESSED */
 			SC_FUNC_RETURN(card->ctx, SC_LOG_DEBUG_VERBOSE, SC_ERROR_INVALID_ARGUMENTS);
 		}
 	}
 	if (card->ctx->debug >= 2) {
 		sc_log(card->ctx,  "got strange SWs: 0x%02X 0x%02X\n",
 		     apdu.sw1, apdu.sw2);
 	}
 	return dataLength;
 }
