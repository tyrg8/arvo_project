commit d0bbf97edb4c3e2374ead19a0ecd9143983f2ddf
Merge: 45eb1aa3 34a12c83
Author: Valdis Vitolins <valdis.vitolins@odo.lv>
Date:   Wed Mar 16 21:31:33 2022 +0200

    Merge pull request #1109

diff --git a/src/libespeak-ng/dictionary.c b/src/libespeak-ng/dictionary.c
index cc1cd33d..3ff8e52e 100644
--- a/src/libespeak-ng/dictionary.c
+++ b/src/libespeak-ng/dictionary.c
@@ -672,59 +672,66 @@ static int LetterGroupNo(char *rule)
 static int IsLetterGroup(Translator *tr, char *word, int group, int pre)
 {
 	/* Match the word against a list of utf-8 strings.
 	 * returns length of matching letter group or -1
 	 *
 	 * How this works:
 	 *
 	 *       +-+
 	 *       |c|<-(tr->letterGroups[group])
 	 *       |0|
 	 *   *p->|c|<-len+              +-+
 	 *       |s|<----+              |a|<-(Actual word to be tested)
 	 *       |0|            *word-> |t|<-*w=word-len+1 (for pre-rule)
 	 *       |~|                    |a|<-*w=word       (for post-rule)
 	 *       |7|                    |s|
 	 *       +-+                    +-+
 	 *
 	 *     7=RULE_GROUP_END
 	 *     0=null terminator
 	 *     pre==1 — pre-rule
 	 *     pre==0 — post-rule
 	 */
 	char *p; // group counter
 	char *w; // word counter
-	int len = 0;
+	int len = 0, i;
 
 	p = tr->letterGroups[group];
 	if (p == NULL)
 		return -1;
 
 	while (*p != RULE_GROUP_END) {
 		if (pre) {
 			len = strlen(p);
-			w = word - len + 1;
+			w = word;
+			for (i = 0; i < len-1; i++)
+			{
+				w--;
+				if (*w == 0)
+					// Not found
+					return -1;
+			}
 		} else
 			w = word;
 
 		// If '~' (no character) is allowed in group, return 0.
 		if (*p == '~')
 			return 0;
 
 		//  Check current group
 		while ((*p == *w) && (*w != 0)) {
 			w++;
 			p++;
 		}
 		if (*p == 0) { // Matched the current group.
 			if (pre)
 				return len;
 			return w - word;
 		}
 
 		// No match, so skip the rest of this group.
 		while (*p++ != 0)
 			;
 	}
 	// Not found
 	return -1;
 }
