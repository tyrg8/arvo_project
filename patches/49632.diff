commit f0bc4c1db5836b63528fdb2225e4a62c6435f28e
Merge: 140cc706df 2544b71691
Author: Mark <mark.raasveldt@gmail.com>
Date:   Fri Sep 16 10:42:22 2022 +0200

    Merge pull request #4731 from Mytherin/issue4562
    
    Fix #4562: generate table index for dummy scan generated from VALUES clause

diff --git a/src/planner/binder/tableref/plan_expressionlistref.cpp b/src/planner/binder/tableref/plan_expressionlistref.cpp
index a2c84110f6..d067876998 100644
--- a/src/planner/binder/tableref/plan_expressionlistref.cpp
+++ b/src/planner/binder/tableref/plan_expressionlistref.cpp
@@ -6,22 +6,22 @@
 namespace duckdb {
 
 unique_ptr<LogicalOperator> Binder::CreatePlan(BoundExpressionListRef &ref) {
-	auto root = make_unique_base<LogicalOperator, LogicalDummyScan>(0);
+	auto root = make_unique_base<LogicalOperator, LogicalDummyScan>(GenerateTableIndex());
 	// values list, first plan any subqueries in the list
 	for (auto &expr_list : ref.values) {
 		for (auto &expr : expr_list) {
 			PlanSubqueries(&expr, &root);
 		}
 	}
 	// now create a LogicalExpressionGet from the set of expressions
 	// fetch the types
 	vector<LogicalType> types;
 	for (auto &expr : ref.values[0]) {
 		types.push_back(expr->return_type);
 	}
 	auto expr_get = make_unique<LogicalExpressionGet>(ref.bind_index, types, move(ref.values));
 	expr_get->AddChild(move(root));
 	return move(expr_get);
 }
 
 } // namespace duckdb
diff --git a/test/fuzzer/pedro/subquery_assertion_error.test b/test/fuzzer/pedro/subquery_assertion_error.test
new file mode 100644
index 0000000000..5b145d12fc
--- /dev/null
+++ b/test/fuzzer/pedro/subquery_assertion_error.test
@@ -0,0 +1,11 @@
+# name: test/fuzzer/pedro/subquery_assertion_error.test
+# description: Issue #4562: Subquery error
+# group: [pedro]
+
+statement ok
+PRAGMA enable_verification
+
+query I
+SELECT (VALUES(1 != ALL(SELECT 2)));
+----
+true
