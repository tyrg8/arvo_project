commit 0d1eeb16dd0a574d81ba0eaeea430f1be105a038
Author: Kristian Evers <kristianevers@gmail.com>
Date:   Tue Oct 31 13:05:15 2017 +0100

    Fix heap-buffer-overflow in proj_hgrid_init.
    
    Resolves https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=3940
    
    Credit to OSS-Fuzz.

diff --git a/src/pj_apply_gridshift.c b/src/pj_apply_gridshift.c
index 45887abd..7d9ac94b 100644
--- a/src/pj_apply_gridshift.c
+++ b/src/pj_apply_gridshift.c
@@ -259,46 +259,46 @@ int pj_apply_gridshift_3( projCtx ctx, PJ_GRIDINFO **tables, int grid_count,
 /**********************************************/
 int proj_hgrid_init(PJ* P, const char *grids) {
 /**********************************************
 
   Initizalize and populate list of horizontal
   grids.
 
     Takes a PJ-object and the plus-parameter
     name that is used in the proj-string to
     specify the grids to load, e.g. "+grids".
     The + should be left out here.
 
     Returns the number of loaded grids.
 
 ***********************************************/
 
     /* prepend "s" to the "grids" string to allow usage with pj_param */
-    char *sgrids = (char *) pj_malloc( (strlen(grids)+1) *sizeof(char) );
+    char *sgrids = (char *) pj_malloc( (strlen(grids)+1+1) *sizeof(char) );
     sprintf(sgrids, "%s%s", "s", grids);
 
     if (P->gridlist == NULL) {
         P->gridlist = pj_gridlist_from_nadgrids(
             P->ctx,
             pj_param(P->ctx, P->params, sgrids).s,
             &(P->gridlist_count)
         );
 
         if( P->gridlist == NULL || P->gridlist_count == 0 ) {
             pj_dealloc(sgrids);
             return 0;
         }
     }
 
     if (P->gridlist_count == 0) {
         proj_errno_set(P, PJD_ERR_FAILED_TO_LOAD_GRID);
     }
 
     pj_dealloc(sgrids);
     return P->gridlist_count;
 }
 
 /********************************************/
 /*           proj_hgrid_value()             */
 /*                                          */
 /*    Return coordinate offset in grid      */
 /********************************************/
