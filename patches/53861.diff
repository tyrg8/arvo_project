commit ca0f2fee1da855fcb7f97d04811745ff4d8e1edf
Author: Guido Vranken <guidovranken@gmail.com>
Date:   Mon Dec 5 01:18:26 2022 +0100

    wolfCrypt: Disable mp_rshd with SP math
    
    Closes https://github.com/wolfSSL/wolfssl/issues/5837

diff --git a/modules/wolfcrypt/bn_ops.cpp b/modules/wolfcrypt/bn_ops.cpp
index 05228cd..20f183a 100644
--- a/modules/wolfcrypt/bn_ops.cpp
+++ b/modules/wolfcrypt/bn_ops.cpp
@@ -497,44 +497,46 @@ end:
 bool RShift::Run(Datasource& ds, Bignum& res, BignumCluster& bn) const {
     bool ret = false;
 
     std::optional<uint64_t> _numBits;
     int numBits;
 
     GET_WHICH(2);
     CF_CHECK_NE(_numBits = bn[1].AsUint64(), std::nullopt);
     CF_CHECK_LTE(_numBits, 2147483647);
 
     numBits = *_numBits;
 
     switch ( which ) {
         case    0:
             MP_CHECK_EQ(mp_copy(bn[0].GetPtr(), res.GetPtr()), MP_OKAY);
 #if LIBWOLFSSL_VERSION_HEX < 0x05005000
             CF_NORET(mp_rshb(res.GetPtr(), numBits));
 #else
             MP_CHECK_EQ(mp_rshb(res.GetPtr(), numBits), MP_OKAY);
 #endif
             ret = true;
             break;
 #if !defined(WOLFSSL_SP_MATH)
         case    1:
             MP_CHECK_EQ(mp_div_2d(bn[0].GetPtr(), numBits, res.GetPtr(), GET_OPTIONAL_BN()), MP_OKAY);
             ret = true;
             break;
 #endif
+#if !defined(WOLFSSL_SP_MATH)
         case    2:
             {
                 /* Check if number of bits to shift is a multiple of a full digit */
                 CF_CHECK_EQ(numBits % (sizeof(mp_digit) * 8), 0);
 
                 MP_CHECK_EQ(mp_copy(bn[0].GetPtr(), res.GetPtr()), MP_OKAY);
 
                 const auto numDigits = numBits / (sizeof(mp_digit) * 8);
                 CF_NORET(mp_rshd(res.GetPtr(), numDigits));
 
                 ret = true;
             }
             break;
+#endif
     }
 
 end:
