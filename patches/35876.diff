commit 62ecf54f35e227d09d19ec40920f7bb8d29e9356
Author: Nikita Popov <nikita.ppv@gmail.com>
Date:   Wed Jul 7 09:36:30 2021 +0200

    Fix use after free on compound division by zero
    
    We can't destroy the result operand early, because the division
    might fail, in which case we need to preserve the original value.
    Place the division result in a temporary zval, and only copy it
    on success.
    
    Fixes oss-fuzz #35876.

diff --git a/Zend/tests/div_by_zero_compound_refcounted.phpt b/Zend/tests/div_by_zero_compound_refcounted.phpt
new file mode 100644
index 0000000000..7f0f59622b
--- /dev/null
+++ b/Zend/tests/div_by_zero_compound_refcounted.phpt
@@ -0,0 +1,16 @@
+--TEST--
+Division by zero in compound assignment with refcounted operand
+--FILE--
+<?php
+$h = "1";
+$h .= "2";
+try {
+    $h /= 0;
+} catch (DivisionByZeroError $e) {
+    echo $e->getMessage(), "\n";
+}
+var_dump($h);
+?>
+--EXPECT--
+Division by zero
+string(2) "12"
diff --git a/Zend/zend_operators.c b/Zend/zend_operators.c
index 193aade5fb..b4fe753a07 100644
--- a/Zend/zend_operators.c
+++ b/Zend/zend_operators.c
@@ -1301,44 +1301,44 @@ static int ZEND_FASTCALL div_function_base(zval *result, zval *op1, zval *op2) /
 ZEND_API zend_result ZEND_FASTCALL div_function(zval *result, zval *op1, zval *op2) /* {{{ */
 {
 	ZVAL_DEREF(op1);
 	ZVAL_DEREF(op2);
 
 	int retval = div_function_base(result, op1, op2);
 	if (EXPECTED(retval == SUCCESS)) {
 		return SUCCESS;
 	}
 
 	if (UNEXPECTED(retval == DIV_BY_ZERO)) {
 		goto div_by_zero;
 	}
 
 	ZEND_TRY_BINARY_OBJECT_OPERATION(ZEND_DIV);
 
-	zval op1_copy, op2_copy;
+	zval result_copy, op1_copy, op2_copy;
 	if (UNEXPECTED(zendi_try_convert_scalar_to_number(op1, &op1_copy) == FAILURE)
 			|| UNEXPECTED(zendi_try_convert_scalar_to_number(op2, &op2_copy) == FAILURE)) {
 		zend_binop_error("/", op1, op2);
 		if (result != op1) {
 			ZVAL_UNDEF(result);
 		}
 		return FAILURE;
 	}
 
-	if (result == op1) {
-		zval_ptr_dtor(result);
-	}
-
-	retval = div_function_base(result, &op1_copy, &op2_copy);
+	retval = div_function_base(&result_copy, &op1_copy, &op2_copy);
 	if (retval == SUCCESS) {
+		if (result == op1) {
+			zval_ptr_dtor(result);
+		}
+		ZVAL_COPY_VALUE(result, &result_copy);
 		return SUCCESS;
 	}
 
 div_by_zero:
 	ZEND_ASSERT(retval == DIV_BY_ZERO && "TYPES_NOT_HANDLED should not occur here");
 	if (result != op1) {
 		ZVAL_UNDEF(result);
 	}
 	zend_throw_error(zend_ce_division_by_zero_error, "Division by zero");
 	return FAILURE;
 }
 /* }}} */
