commit 0045f7f670077d948125a52d76a145dc878a9033
Author: Alex Gaynor <alex.gaynor@gmail.com>
Date:   Sun Nov 3 23:44:22 2019 -0500

    Attempt to fix types in webp decoder to protect against overflow

diff --git a/coders/webp.c b/coders/webp.c
index e2a434583..015bba0a4 100644
--- a/coders/webp.c
+++ b/coders/webp.c
@@ -165,46 +165,46 @@ static inline uint32_t ReadWebPLSBWord(
 static MagickBooleanType IsWEBPImageLossless(const unsigned char *stream,
   const size_t length)
 {
 #define VP8_CHUNK_INDEX  15
 #define LOSSLESS_FLAG  'L'
 #define EXTENDED_HEADER  'X'
 #define VP8_CHUNK_HEADER  "VP8"
 #define VP8_CHUNK_HEADER_SIZE  3
 #define RIFF_HEADER_SIZE  12
 #define VP8X_CHUNK_SIZE  10
 #define TAG_SIZE  4
 #define CHUNK_SIZE_BYTES  4
 #define CHUNK_HEADER_SIZE  8
 #define MAX_CHUNK_PAYLOAD  (~0U-CHUNK_HEADER_SIZE-1)
 
-  ssize_t
+  size_t
     offset;
 
   /*
     Read simple header.
   */
   if (length <= VP8_CHUNK_INDEX)
     return(MagickFalse);
   if (stream[VP8_CHUNK_INDEX] != EXTENDED_HEADER)
     return(stream[VP8_CHUNK_INDEX] == LOSSLESS_FLAG ? MagickTrue : MagickFalse);
   /*
     Read extended header.
   */
   offset=RIFF_HEADER_SIZE+TAG_SIZE+CHUNK_SIZE_BYTES+VP8X_CHUNK_SIZE;
-  while ((offset+TAG_SIZE+4) <= (ssize_t) (length-TAG_SIZE))
+  while ((offset+TAG_SIZE+4) <= (length-TAG_SIZE))
   {
     uint32_t
       chunk_size,
       chunk_size_pad;
 
     chunk_size=ReadWebPLSBWord(stream+offset+TAG_SIZE);
     if (chunk_size > MAX_CHUNK_PAYLOAD)
       break;
     chunk_size_pad=(CHUNK_HEADER_SIZE+chunk_size+1) & ~1;
     if (memcmp(stream+offset,VP8_CHUNK_HEADER,VP8_CHUNK_HEADER_SIZE) == 0)
       return(*(stream+offset+VP8_CHUNK_HEADER_SIZE) == LOSSLESS_FLAG ?
         MagickTrue : MagickFalse);
     offset+=chunk_size_pad;
   }
   return(MagickFalse);
 }
