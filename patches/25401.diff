commit 107371657b39c8cd4bcc8d8865d9071ff17049d2
Author: Alex Rebert <alexandre.rebert@gmail.com>
Date:   Thu Oct 28 23:12:54 2021 -0400

    Fix out-of-bounds read in ReadFirstSkin
    
    Fix https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=25401

diff --git a/code/AssetLib/HMP/HMPLoader.cpp b/code/AssetLib/HMP/HMPLoader.cpp
index 97c1858fb..661e4d1b2 100644
--- a/code/AssetLib/HMP/HMPLoader.cpp
+++ b/code/AssetLib/HMP/HMPLoader.cpp
@@ -422,53 +422,54 @@ void HMPImporter::CreateOutputFaceList(unsigned int width, unsigned int height)
 // ------------------------------------------------------------------------------------------------
 void HMPImporter::ReadFirstSkin(unsigned int iNumSkins, const unsigned char *szCursor,
         const unsigned char **szCursorOut) {
     ai_assert(0 != iNumSkins);
     ai_assert(nullptr != szCursor);
 
     // read the type of the skin ...
     // sometimes we need to skip 12 bytes here, I don't know why ...
     uint32_t iType = *((uint32_t *)szCursor);
     szCursor += sizeof(uint32_t);
     if (0 == iType) {
         szCursor += sizeof(uint32_t) * 2;
         iType = *((uint32_t *)szCursor);
         szCursor += sizeof(uint32_t);
         if (!iType)
             throw DeadlyImportError("Unable to read HMP7 skin chunk");
     }
     // read width and height
     uint32_t iWidth = *((uint32_t *)szCursor);
     szCursor += sizeof(uint32_t);
     uint32_t iHeight = *((uint32_t *)szCursor);
     szCursor += sizeof(uint32_t);
 
     // allocate an output material
     aiMaterial *pcMat = new aiMaterial();
 
     // read the skin, this works exactly as for MDL7
     ParseSkinLump_3DGS_MDL7(szCursor, &szCursor,
             pcMat, iType, iWidth, iHeight);
 
     // now we need to skip any other skins ...
     for (unsigned int i = 1; i < iNumSkins; ++i) {
+        SizeCheck(szCursor + 3 * sizeof(uint32_t));
         iType = *((uint32_t *)szCursor);
         szCursor += sizeof(uint32_t);
         iWidth = *((uint32_t *)szCursor);
         szCursor += sizeof(uint32_t);
         iHeight = *((uint32_t *)szCursor);
         szCursor += sizeof(uint32_t);
 
         SkipSkinLump_3DGS_MDL7(szCursor, &szCursor, iType, iWidth, iHeight);
         SizeCheck(szCursor);
     }
 
     // setup the material ...
     pScene->mNumMaterials = 1;
     pScene->mMaterials = new aiMaterial *[1];
     pScene->mMaterials[0] = pcMat;
 
     *szCursorOut = szCursor;
 }
 
 // ------------------------------------------------------------------------------------------------
 // Generate proepr texture coords
