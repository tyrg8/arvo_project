commit 7ba427ef40301d199bcd5c0f9a9d41244c495bd6
Author: Mike Reed <reed@google.com>
Date:   Fri Mar 16 11:25:29 2018 -0400

    handle bad xform in drawTextRSXform
    
    Bug: oss-fuzz:6955
    Change-Id: Ide1f57459a611980a86afea577eb4c2425e49e63
    Reviewed-on: https://skia-review.googlesource.com/114782
    Reviewed-by: Mike Reed <reed@google.com>
    Commit-Queue: Mike Reed <reed@google.com>

diff --git a/src/core/SkDevice.cpp b/src/core/SkDevice.cpp
index 210af808c9..96a7e8dbfe 100644
--- a/src/core/SkDevice.cpp
+++ b/src/core/SkDevice.cpp
@@ -481,44 +481,47 @@ static int return_2(const char* text) { return 2; }
 void SkBaseDevice::drawTextRSXform(const void* text, size_t len,
                                    const SkRSXform xform[], const SkPaint& paint) {
     CountTextProc proc = nullptr;
     switch (paint.getTextEncoding()) {
         case SkPaint::kUTF8_TextEncoding:
             proc = SkUTF8_CountUTF8Bytes;
             break;
         case SkPaint::kUTF16_TextEncoding:
             proc = count_utf16;
             break;
         case SkPaint::kUTF32_TextEncoding:
             proc = return_4;
             break;
         case SkPaint::kGlyphID_TextEncoding:
             proc = return_2;
             break;
     }
 
     SkPaint localPaint(paint);
     SkShader* shader = paint.getShader();
 
     SkMatrix localM, currM;
     const void* stopText = (const char*)text + len;
     while ((const char*)text < (const char*)stopText) {
         localM.setRSXform(*xform++);
         currM.setConcat(this->ctm(), localM);
         SkAutoDeviceCTMRestore adc(this, currM);
 
         // We want to rotate each glyph by the rsxform, but we don't want to rotate "space"
         // (i.e. the shader that cares about the ctm) so we have to undo our little ctm trick
         // with a localmatrixshader so that the shader draws as if there was no change to the ctm.
         if (shader) {
             SkMatrix inverse;
-            SkAssertResult(localM.invert(&inverse));
-            localPaint.setShader(shader->makeWithLocalMatrix(inverse));
+            if (localM.invert(&inverse)) {
+                localPaint.setShader(shader->makeWithLocalMatrix(inverse));
+            } else {
+                localPaint.setShader(nullptr);  // can't handle this xform
+            }
         }
 
         int subLen = proc((const char*)text);
         this->drawText(text, subLen, 0, 0, localPaint);
         text = (const char*)text + subLen;
     }
 }
 
 //////////////////////////////////////////////////////////////////////////////////////////
