commit 03667195a3333f1aedb6f2452e20bf4f6d2ef138
Author: evpobr <evpobr@gmail.com>
Date:   Sun Nov 15 18:44:19 2020 +0500

    Fix use of uninitialized value in exif_subchunk_parse
    
    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=26712
    
    Credit to OSS-Fuzz.

diff --git a/src/wavlike.c b/src/wavlike.c
index 8c87d3bc..b59c6847 100644
--- a/src/wavlike.c
+++ b/src/wavlike.c
@@ -1269,72 +1269,72 @@ exif_fill_and_sink (SF_PRIVATE *psf, char* buf, size_t bufsz, size_t toread)
 */
 static int
 exif_subchunk_parse (SF_PRIVATE *psf, uint32_t length)
-{	uint32_t marker, dword, vmajor = -1, vminor = -1, bytesread = 0 ;
+{	uint32_t marker, dword = 0, vmajor = -1, vminor = -1, bytesread = 0 ;
 	char buf [4096] ;
 	int thisread ;
 
 	while (bytesread < length)
 	{
 		if ((thisread = psf_binheader_readf (psf, "m", &marker)) == 0)
 			break ;
 		bytesread += thisread ;
 
 		switch (marker)
 		{
 			case 0 : /* camera padding? */
 				break ;
 
 			case ever_MARKER :
 				bytesread += psf_binheader_readf (psf, "j4", 4, &dword) ;
 				vmajor = 10 * (((dword >> 24) & 0xff) - '0') + (((dword >> 16) & 0xff) - '0') ;
 				vminor = 10 * (((dword >> 8) & 0xff) - '0') + ((dword & 0xff) - '0') ;
 				psf_log_printf (psf, "    EXIF Version : %u.%02u\n", vmajor, vminor) ;
 				break ;
 
 			case olym_MARKER :
 				bytesread += psf_binheader_readf (psf, "4", &dword) ;
 				psf_log_printf (psf, "%M : %u\n", marker, dword) ;
 				if (dword > length || bytesread + dword > length)
 					break ;
 				dword += (dword & 1) ;
 				bytesread += psf_binheader_readf (psf, "j", dword) ;
 				break ;
 
 			case emnt_MARKER : /* design information: null-terminated string */
 			case emdl_MARKER : /* model name ; null-terminated string */
 			case ecor_MARKER : /* manufacturer: null-terminated string */
 			case etim_MARKER : /* creation time: null-terminated string in the format "hour:minute:second.subsecond" */
 			case erel_MARKER : /* relation info: null-terminated string (filename) */
 			case eucm_MARKER : /* user comment: 4-byte size follows, then possibly unicode data */
 				bytesread += psf_binheader_readf (psf, "4", &dword) ;
 				bytesread += sizeof (dword) ;
 				dword += (dword & 1) ;
 
 				if (dword >= sizeof (buf))
 				{	psf_log_printf (psf, "*** Marker '%M' is too big %u\n\n", marker, dword) ;
 					return bytesread ;
 					} ;
 
 				bytesread += exif_fill_and_sink (psf, buf, sizeof (buf), dword) ;
 
 				/* BAD - don't know what's going on here -- maybe a bug in the camera */
 				/* field should be NULL-terminated but there's no room for it with the reported number */
 				/*  example output:     emdl : 8 (EX-Z1050) */
 				if (marker == emdl_MARKER && dword == strlen (buf) /* should be >= strlen+1*/)
 				{	psf_log_printf (psf, "    *** field size too small for string (sinking 2 bytes)\n") ;
 					bytesread += psf_binheader_readf (psf, "j", 2) ;
 					} ;
 
 				psf_log_printf (psf, "    %M : %u (%s)\n", marker, dword, buf) ;
 				if (dword > length)
 					return bytesread ;
 				break ;
 
 			default :
 				psf_log_printf (psf, "    *** %M (%u): -- ignored --\n", marker, marker) ;
 				break ;
 			} ;
 		} ;
 
 	return bytesread ;
 } /* exif_subchunk_parse */
