commit c14eccefaf0ba0286d2e9f3ae7b8dd1f3e055a27
Author: Jonas Karlsson <jonaskarlsson@fripost.org>
Date:   Wed Mar 9 22:19:10 2022 +0100

    Fix 'i >= 0' always true bug
    
    If 'disk_filename' does not contain a dot (.) then 'i' would overflow.
    Making 'i' an int makes sure the for loop works as intended.

diff --git a/code/Common/ZipArchiveIOSystem.cpp b/code/Common/ZipArchiveIOSystem.cpp
index c322b140f..ba90ae9b3 100644
--- a/code/Common/ZipArchiveIOSystem.cpp
+++ b/code/Common/ZipArchiveIOSystem.cpp
@@ -122,21 +122,21 @@ voidpf IOSystem2Unzip::open(voidpf opaque, const char *filename, int mode) {
 voidpf IOSystem2Unzip::opendisk(voidpf opaque, voidpf stream, uint32_t number_disk, int mode) {
     ZipFile *io_stream = (ZipFile *)stream;
     voidpf ret = NULL;
-    size_t i;
+    int i;
 
     char *disk_filename = (char*)malloc(io_stream->m_Filename.length() + 1);
     strncpy(disk_filename, io_stream->m_Filename.c_str(), io_stream->m_Filename.length() + 1);
     for (i = io_stream->m_Filename.length() - 1; i >= 0; i -= 1)
     {
         if (disk_filename[i] != '.')
             continue;
-        snprintf(&disk_filename[i], io_stream->m_Filename.length() - i, ".z%02u", number_disk + 1);
+        snprintf(&disk_filename[i], io_stream->m_Filename.length() - size_t(i), ".z%02u", number_disk + 1);
         break;
     }
 
     if (i >= 0)
         ret = open(opaque, disk_filename, mode);
 
     free(disk_filename);
     return ret;
 }
