commit 4ca58d440d83124f47ee28d7a84084543ff80a9d
Author: Jonathan Hui <jonhui@nestlabs.com>
Date:   Wed Jan 23 21:50:56 2019 -0800

    [cli-uart] save space for NULL terminator in rx buffer (#3500)

diff --git a/src/cli/cli_uart.cpp b/src/cli/cli_uart.cpp
index c6496f2dd..854b4b273 100644
--- a/src/cli/cli_uart.cpp
+++ b/src/cli/cli_uart.cpp
@@ -143,71 +143,71 @@ extern "C" void otPlatUartReceived(const uint8_t *aBuf, uint16_t aBufLength)
 void Uart::ReceiveTask(const uint8_t *aBuf, uint16_t aBufLength)
 {
     static const char sCommandPrompt[] = {'>', ' '};
 
 #if OPENTHREAD_CONFIG_UART_CLI_RAW
     if (aBufLength > 0)
     {
         memcpy(mRxBuffer + mRxLength, aBuf, aBufLength);
         mRxLength += aBufLength;
     }
 
     if (aBuf[aBufLength - 1] == '\r' || aBuf[aBufLength - 1] == '\n')
     {
         mRxBuffer[mRxLength] = '\0';
         ProcessCommand();
         Output(sCommandPrompt, sizeof(sCommandPrompt));
     }
 #else // OPENTHREAD_CONFIG_UART_CLI_RAW
     static const char sEraseString[] = {'\b', ' ', '\b'};
     static const char CRNL[]         = {'\r', '\n'};
     const uint8_t *   end;
 
     end = aBuf + aBufLength;
 
     for (; aBuf < end; aBuf++)
     {
         switch (*aBuf)
         {
         case '\r':
         case '\n':
             Output(CRNL, sizeof(CRNL));
 
             if (mRxLength > 0)
             {
                 mRxBuffer[mRxLength] = '\0';
                 ProcessCommand();
             }
 
             Output(sCommandPrompt, sizeof(sCommandPrompt));
 
             break;
 
 #if OPENTHREAD_POSIX
 
         case 0x04: // ASCII for Ctrl-D
             exit(EXIT_SUCCESS);
             break;
 #endif
 
         case '\b':
         case 127:
             if (mRxLength > 0)
             {
                 Output(sEraseString, sizeof(sEraseString));
                 mRxBuffer[--mRxLength] = '\0';
             }
 
             break;
 
         default:
-            if (mRxLength < kRxBufferSize)
+            if (mRxLength < kRxBufferSize - 1)
             {
                 Output(reinterpret_cast<const char *>(aBuf), 1);
                 mRxBuffer[mRxLength++] = static_cast<char>(*aBuf);
             }
 
             break;
         }
     }
 #endif // OPENTHREAD_CONFIG_UART_CLI_RAW
 }
