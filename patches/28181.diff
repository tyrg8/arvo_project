commit 86c6d11824cbb094b97cd5a60998168b68598b85
Author: Stefan Weil <sw@weilnetz.de>
Date:   Sun Apr 11 08:40:11 2021 +0200

    Fix OSS-Fuzz issue 28181 (Use-of-uninitialized-value)
    
    The written data was not terminated with '\0' if HAVE_FMEMOPEN was defined,
    so using strlen on it caused a buffer overrun.
    
    Signed-off-by: Stefan Weil <sw@weilnetz.de>

diff --git a/src/boxbasic.c b/src/boxbasic.c
index 83a5bc4..83a11bb 100644
--- a/src/boxbasic.c
+++ b/src/boxbasic.c
@@ -2080,44 +2080,47 @@ l_int32  ret;
 FILE    *fp;
 
     PROCNAME("boxaaWriteMem");
 
     if (pdata) *pdata = NULL;
     if (psize) *psize = 0;
     if (!pdata)
         return ERROR_INT("&data not defined", procName, 1);
     if (!psize)
         return ERROR_INT("&size not defined", procName, 1);
     if (!baa)
         return ERROR_INT("baa not defined", procName, 1);
 
 #if HAVE_FMEMOPEN
     if ((fp = open_memstream((char **)pdata, psize)) == NULL)
         return ERROR_INT("stream not opened", procName, 1);
     ret = boxaaWriteStream(fp, baa);
+    fputc('\0', fp);
+    fclose(fp);
+    *psize = *psize - 1;
 #else
     L_INFO("work-around: writing to a temp file\n", procName);
   #ifdef _WIN32
     if ((fp = fopenWriteWinTempfile()) == NULL)
         return ERROR_INT("tmpfile stream not opened", procName, 1);
   #else
     if ((fp = tmpfile()) == NULL)
         return ERROR_INT("tmpfile stream not opened", procName, 1);
   #endif  /* _WIN32 */
     ret = boxaaWriteStream(fp, baa);
     rewind(fp);
     *pdata = l_binaryReadStream(fp, psize);
-#endif  /* HAVE_FMEMOPEN */
     fclose(fp);
+#endif  /* HAVE_FMEMOPEN */
     return ret;
 }
 
 
 /*---------------------------------------------------------------------*
  *                         Boxa serialized I/O                         *
  *---------------------------------------------------------------------*/
 /*!
  * \brief   boxaRead()
  *
  * \param[in]    filename
  * \return  boxa, or NULL on error
  */
@@ -2372,51 +2375,54 @@ l_int32  ret;
 FILE    *fp;
 
     PROCNAME("boxaWriteMem");
 
     if (pdata) *pdata = NULL;
     if (psize) *psize = 0;
     if (!pdata)
         return ERROR_INT("&data not defined", procName, 1);
     if (!psize)
         return ERROR_INT("&size not defined", procName, 1);
     if (!boxa)
         return ERROR_INT("boxa not defined", procName, 1);
 
 #if HAVE_FMEMOPEN
     if ((fp = open_memstream((char **)pdata, psize)) == NULL)
         return ERROR_INT("stream not opened", procName, 1);
     ret = boxaWriteStream(fp, boxa);
+    fputc('\0', fp);
+    fclose(fp);
+    *psize = *psize - 1;
 #else
     L_INFO("work-around: writing to a temp file\n", procName);
   #ifdef _WIN32
     if ((fp = fopenWriteWinTempfile()) == NULL)
         return ERROR_INT("tmpfile stream not opened", procName, 1);
   #else
     if ((fp = tmpfile()) == NULL)
         return ERROR_INT("tmpfile stream not opened", procName, 1);
   #endif  /* _WIN32 */
     ret = boxaWriteStream(fp, boxa);
     rewind(fp);
     *pdata = l_binaryReadStream(fp, psize);
-#endif  /* HAVE_FMEMOPEN */
     fclose(fp);
+#endif  /* HAVE_FMEMOPEN */
     return ret;
 }
 
 
 /*---------------------------------------------------------------------*
  *                            Debug printing                           *
  *---------------------------------------------------------------------*/
 /*!
  * \brief   boxPrintStreamInfo()
  *
  * \param[in]    fp    file stream; use NULL for stderr
  * \param[in]    box
  * \return  0 if OK, 1 on error
  *
  * <pre>
  * Notes:
  *      (1) This outputs debug info.  Use serialization functions to
  *          write to file if you want to read the data back.
  * </pre>
  */
