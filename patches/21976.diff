commit 3d919c5301957d3a78db6466b37af43a088cc7d8
Author: Michael Ludwig <michaelludwig@google.com>
Date:   Mon May 4 09:24:57 2020 -0400

    Fix uninitialized read in simplifyRect()
    
    Bug: oss-fuzz:21976
    Change-Id: I635b9092bc4a30bb6a23ddcf1430a3ec06b9d598
    Reviewed-on: https://skia-review.googlesource.com/c/skia/+/287377
    Commit-Queue: Michael Ludwig <michaelludwig@google.com>
    Commit-Queue: Robert Phillips <robertphillips@google.com>
    Auto-Submit: Michael Ludwig <michaelludwig@google.com>
    Reviewed-by: Robert Phillips <robertphillips@google.com>
    Reviewed-by: Brian Salomon <bsalomon@google.com>

diff --git a/src/gpu/geometry/GrShape.cpp b/src/gpu/geometry/GrShape.cpp
index d6560219fb..a013cf1eb9 100644
--- a/src/gpu/geometry/GrShape.cpp
+++ b/src/gpu/geometry/GrShape.cpp
@@ -169,33 +169,33 @@ void GrShape::simplifyRRect(const SkRRect& rrect, SkPathDirection dir, unsigned
 void GrShape::simplifyRect(const SkRect& rect, SkPathDirection dir, unsigned start,
                            unsigned flags) {
     if (!rect.width() || !rect.height()) {
         if (flags & kSimpleFill_Flag) {
             // A zero area, filled shape so go straight to empty
             this->setType(Type::kEmpty);
-        } else if (!fRect.width() ^ !fRect.height()) {
+        } else if (!rect.width() ^ !rect.height()) {
             // A line, choose the first point that best matches the starting index
             SkPoint p1 = {rect.fLeft, rect.fTop};
             SkPoint p2 = {rect.fRight, rect.fBottom};
             if (start >= 2 && !(flags & kIgnoreWinding_Flag)) {
                 using std::swap;
                 swap(p1, p2);
             }
             this->simplifyLine(p1, p2, flags);
         } else {
             // A point (all edges are equal, so start+dir doesn't affect choice)
             this->simplifyPoint({rect.fLeft, rect.fTop}, flags);
         }
     } else {
         if (!this->isRect()) {
             this->setType(Type::kRect);
             fRect = rect;
             this->setPathWindingParams(dir, start);
         } else {
             // If starting as a rect, the provided rect/winding params should already be set
             SkASSERT(fRect == rect && this->dir() == dir && this->startIndex() == start);
         }
         if (flags & kMakeCanonical_Flag) {
             fRect.sort();
         }
     }
 }
