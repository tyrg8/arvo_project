commit d1b917201d91aa13955460097e85716ab8752b0c
Author: Arran Cudbard-Bell <a.cudbardb@freeradius.org>
Date:   Tue Oct 26 14:33:37 2021 -0400

    Typo

diff --git a/src/lib/util/sbuff.h b/src/lib/util/sbuff.h
index cb6619b679..ea5d253adb 100644
--- a/src/lib/util/sbuff.h
+++ b/src/lib/util/sbuff.h
@@ -1476,49 +1476,48 @@ fr_slen_t fr_sbuff_out_float32(fr_sbuff_parse_error_t *err, float *out, fr_sbuff
 fr_slen_t fr_sbuff_out_float64(fr_sbuff_parse_error_t *err, double *out, fr_sbuff_t *sbuff, bool no_trailing);
 
 #ifndef SIZE_SAME_AS_UINT64
 #  define _fr_sbuff_out_size(_err, _out, _in)	size_t *	: fr_sbuff_out_size(_err, (size_t *)_out, _in, true),
 #else
 #  define _fr_sbuff_out_size(_err, _out, _in)
 #endif
 
 #ifndef SSIZE_SAME_AS_INT64
 #  define _fr_sbuff_out_ssize(_err, _out, _in)	ssize_t *	: fr_sbuff_out_ssize(err, (ssize_t *)_out, _in, true),
 #else
 #  define _fr_sbuff_out_ssize(_err, _out, _in)
 #endif
 
 /** Parse a value based on the output type
  *
  * @param[out] _err	If not NULL a value describing the parse error
  *			will be written to err.
  * @param[out] _out	Pointer to an integer type.
  * @param[in] _in	Sbuff to parse integer from.
  * @return The number of bytes parsed (even on error).
  */
 #define fr_sbuff_out(_err, _out, _in) \
 	_Generic((_out), \
 		 bool *		: fr_sbuff_out_bool((bool *)_out, _in), \
 		 int8_t *	: fr_sbuff_out_int8(_err, (int8_t *)_out, _in, true), \
 		 int16_t *	: fr_sbuff_out_int16(_err, (int16_t *)_out, _in, true), \
 		 int32_t *	: fr_sbuff_out_int32(_err, (int32_t *)_out, _in, true), \
 		 int64_t *	: fr_sbuff_out_int64(_err, (int64_t *)_out, _in, true), \
-		 ssize_t *	: fr_sbuff_out_ssize(_err, (ssize_t *)_out, _in, true), \
+		 _fr_sbuff_out_ssize(_err, _out, _in) \
 		 uint8_t *	: fr_sbuff_out_uint8(_err, (uint8_t *)_out, _in, true), \
 		 uint16_t *	: fr_sbuff_out_uint16(_err, (uint16_t *)_out, _in, true), \
 		 uint32_t *	: fr_sbuff_out_uint32(_err, (uint32_t *)_out, _in, true), \
 		 uint64_t *	: fr_sbuff_out_uint64(_err, (uint64_t *)_out, _in, true), \
 		 _fr_sbuff_out_size(_err, _out, _in) \
-		 _fr_sbuff_out_ssize(_err, _out, _in) \
 		 float *	: fr_sbuff_out_float32(_err, (float *)_out, _in, true), \
 		 double *	: fr_sbuff_out_float64(_err, (double *)_out, _in, true) \
 	)
 /** @} */
 
 
 /** @name Conditional advancement
  *
  * These functions are typically used for parsing when trying to locate
  * a sequence of characters in the sbuff.
  *
  * @{
  */
