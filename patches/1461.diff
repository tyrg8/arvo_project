commit 474967241cdcce6d3a2fd356079571eee794ec12
Author: Nick Wellnhofer <wellnhofer@aevum.de>
Date:   Wed May 31 16:46:39 2017 +0200

    Avoid spurious UBSan errors in parser.c
    
    If available, use a C99 flexible array member to avoid spurious UBSan
    errors.

diff --git a/parser.c b/parser.c
index fd242aa0..7d8da4f4 100644
--- a/parser.c
+++ b/parser.c
@@ -1087,23 +1087,28 @@ typedef xmlDefAttrs *xmlDefAttrsPtr;
 struct _xmlDefAttrs {
     int nbAttrs;	/* number of defaulted attributes on that element */
     int maxAttrs;       /* the size of the array */
-    const xmlChar *values[5]; /* array of localname/prefix/values/external */
+#if __STDC_VERSION__ >= 199901L
+    /* Using a C99 flexible array member avoids UBSan errors. */
+    const xmlChar *values[]; /* array of localname/prefix/values/external */
+#else
+    const xmlChar *values[5];
+#endif
 };
 
 /**
  * xmlAttrNormalizeSpace:
  * @src: the source string
  * @dst: the target string
  *
  * Normalize the space in non CDATA attribute values:
  * If the attribute type is not CDATA, then the XML processor MUST further
  * process the normalized attribute value by discarding any leading and
  * trailing space (#x20) characters, and by replacing sequences of space
  * (#x20) characters by a single space (#x20) character.
  * Note that the size of dst need to be at least src, and if one doesn't need
  * to preserve dst (and it doesn't come from a dictionary or read-only) then
  * passing src as dst is just fine.
  *
  * Returns a pointer to the normalized value (dst) or NULL if no conversion
  *         is needed.
  */
