commit 411ec5bf0708dcd5ec99e4d0961740fca30a6bc7
Author: Christos Zoulas <christos@zoulas.com>
Date:   Tue Sep 20 20:36:11 2022 +0000

    fix out of bounds read (clusterfuzz)

diff --git a/src/compress.c b/src/compress.c
index c0a29416..e7812a25 100644
--- a/src/compress.c
+++ b/src/compress.c
@@ -35,20 +35,20 @@
 #include "file.h"
 
 #ifndef lint
-FILE_RCSID("@(#)$File: compress.c,v 1.140 2022/09/19 19:54:01 christos Exp $")
+FILE_RCSID("@(#)$File: compress.c,v 1.141 2022/09/20 20:36:11 christos Exp $")
 #endif
 
 #include "magic.h"
 #include <stdlib.h>
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>
 #endif
 #ifdef HAVE_SPAWN_H
 #include <spawn.h>
 #endif
 #include <string.h>
 #include <errno.h>
 #include <ctype.h>
 #include <stdarg.h>
 #include <signal.h>
 #ifndef HAVE_SIG_T
@@ -562,30 +562,36 @@ private int
 uncompressgzipped(const unsigned char *old, unsigned char **newch,
     size_t bytes_max, size_t *n)
 {
-	unsigned char flg = old[3];
+	unsigned char flg;
 	size_t data_start = 10;
 
+	if (*n < 4) {
+		goto err;	
+	}
+
+	flg = old[3];
+
 	if (flg & FEXTRA) {
 		if (data_start + 1 >= *n)
 			goto err;
 		data_start += 2 + old[data_start] + old[data_start + 1] * 256;
 	}
 	if (flg & FNAME) {
 		while(data_start < *n && old[data_start])
 			data_start++;
 		data_start++;
 	}
 	if (flg & FCOMMENT) {
 		while(data_start < *n && old[data_start])
 			data_start++;
 		data_start++;
 	}
 	if (flg & FHCRC)
 		data_start += 2;
 
 	if (data_start >= *n)
 		goto err;
 
 	*n -= data_start;
 	old += data_start;
 	return uncompresszlib(old, newch, bytes_max, n, 0);
