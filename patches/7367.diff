commit e7cc5e1de83302579bc6aabcf132a9d269f7e5f8
Author: Sebastian Rasmussen <sebras@gmail.com>
Date:   Sun Apr 8 16:25:48 2018 +0800

    Set pointers to NULL so they can be safely dropped.
    
    Previously these were not set to NULL, which caused
    spurious segmentation errors.

diff --git a/source/pdf/pdf-stream.c b/source/pdf/pdf-stream.c
index bf828bd01..e8ce2fabb 100644
--- a/source/pdf/pdf-stream.c
+++ b/source/pdf/pdf-stream.c
@@ -362,41 +362,41 @@ pdf_open_inline_stream(fz_context *ctx, pdf_document *doc, pdf_obj *stmobj, int
 void
 pdf_load_compressed_inline_image(fz_context *ctx, pdf_document *doc, pdf_obj *dict, int length, fz_stream *file_stm, int indexed, fz_compressed_image *image)
 {
-	fz_stream *istm, *leech, *decomp;
-	fz_pixmap *pixmap;
+	fz_stream *istm = NULL, *leech = NULL, *decomp = NULL;
+	fz_pixmap *pixmap = NULL;
 	fz_compressed_buffer *bc;
 	int dummy_l2factor = 0;
 
 	fz_var(istm);
 	fz_var(leech);
 	fz_var(decomp);
 	fz_var(pixmap);
 
 	bc = fz_malloc_struct(ctx, fz_compressed_buffer);
 	fz_try(ctx)
 	{
 		bc->buffer = fz_new_buffer(ctx, 1024);
 		istm = pdf_open_inline_stream(ctx, doc, dict, length, file_stm, &bc->params);
 		leech = fz_open_leecher(ctx, istm, bc->buffer);
 		decomp = fz_open_image_decomp_stream(ctx, leech, &bc->params, &dummy_l2factor);
 		pixmap = fz_decomp_image_from_stream(ctx, decomp, image, NULL, indexed, 0);
 		fz_set_compressed_image_tile(ctx, image, pixmap);
 		fz_set_compressed_image_buffer(ctx, image, bc);
 	}
 	fz_always(ctx)
 	{
 		fz_drop_stream(ctx, istm);
 		fz_drop_stream(ctx, leech);
 		fz_drop_stream(ctx, decomp);
 		fz_drop_pixmap(ctx, pixmap);
 	}
 	fz_catch(ctx)
 	{
 		fz_drop_compressed_buffer(ctx, bc);
 		fz_rethrow(ctx);
 	}
 }
 
 /*
  * Open a stream for reading the raw (compressed but decrypted) data.
  */
