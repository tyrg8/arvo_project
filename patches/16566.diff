commit 19a80e4efbcf67ac8703f1c0d25820dd13d6f071
Merge: 8f28fa625 b5e8e9974
Author: John Cupitt <jcupitt@gmail.com>
Date:   Wed Aug 21 17:37:16 2019 +0100

    Merge branch '8.8'

diff --git a/ChangeLog b/ChangeLog
index 162ba56fd..442271319 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,394 +1,396 @@
 20/6/19 started 8.9.0
 - add vips_image_get/set_array_int()
 - disable webp alpha output if all frame fill the canvas and are solid
 - support arrays of delays for animated images [deftomat]
 - add "unlimited" flag to svgload
 - disable webp alpha output if all frames fill the canvas and are solid
 - add "compression" option to heifsave [lovell]
 - support webp and zstd compression in tiff
 - loaders use "minimise" to close input files earlier
 - integrate support for oss-fuzz [omira-sch]
 - add vips_switch() / vips_case() ... fast many-way ifthenelse
 - better const handling for arithmetic operators fixes comparisons against out
   of range values
 
 9/7/19 started 8.8.2
 - better early shutdown in readers
 - don't attempt to save large XMP to jpeg [tnextday]
 - always fetch HEIC metadata from the main image [zhoux2016]
 - fix loop in malformed ppm [Kyle-Kyle]
 - better support for PNGs with long comment names
 - fix build with GM
 - add locks for pdfium load
 - fix build with MSVC 
+- fix a problem with shinkv tail processing [angelmixu]
+- fix a read one byte beyond buffer bug in jpegload
 
 24/5/19 started 8.8.1
 - improve realpath() use on older libc
 - better magickload error messages
 - more consistent behaviour for page-height metadata
 - fix for composite with many small images and some combinations of blend modes
 - fix memleak in tiff pyr save to memory [scossu]
 - istiff attempts to read the first directory rather than just testing the
   magic number [przemyslawpluta]
 - much faster ismagick() [jcupitt]
 - better behaviour for vips_region_fetch() if request lies partly ouside image
 - remove 256 band limit in arithmetic.c [erdmann]
 - disable Orc if building with CET [lovell]
 - fix vipsthumbnail with pyr tiff [kleisauke]
 - text autofit could occasionally terminate early [levmorozov]
 - fewer warnings on tiffload [chregu]
 - vips_resize() breaks aspect ratio and limits shrink to prevent <1px 
   dimensions [lovell]
 
 21/9/18 started 8.8.0
 - much faster smartcrop [lovell]
 - add low/high to smartcrop [jcupitt]
 - add XMP support to png read/write [jcupitt]
 - deprecate thumbnail auto_rotate, add no_rotate [jcupitt]
 - implement thumbnail shrink-on-load for openslide images [jcupitt]
 - add animated webp support [jcupitt]
 - revise vips_cast() to improve behaviour with uint images [erdmann]
 - add bandand()/or()/eor() to cplusplus binding [clcaalu]
 - implement shrink-on-load for tiff pyramids [jcupitt]
 - added vips_image_set_blob_copy() [jcupitt]
 - don't stop composite on first non-transparent image [felixbuenemann, GDmac]
 - add vips_rect_overlapsrect()
 - composite is much faster at positioning subimages
 - stop tiff pyr layers if width or height drop to 1 [gvincke]
 - dzsave has a new skip_blanks option
 - add vips_CMYK2XYZ() and vips_XYZ2CMYK(), plus associated routes 
 - include cmyk and srgb fallback profiles
 - add vips_profile_load() and use it everywhere
 - fix race in temp filename creation [lhecker]
 - add @reduction_effort param to webpsave [lovell]
 - add @option_string param to thumbnail_buffer [kleisauke]
 - add XMP, IPCT, ICC, EXIF etc. support to magickload/magicksave
 - much lower memuse for gifload
 - tilecache speedups
 - add vips_heifload(), vips_heifsave()
 - add heif thumbnail support to vips_thumbnail()
 - free threadpool earlier, reducing mem growth for some long-running 
   processes [jtorresfabra]
 - add vips_region_fetch() / _width() / _height() for language bindings
 - vips_text() supports justification
 - move vips_image_set_kill() and iskilled() to the public API
 - dzsave to szi sets suffix correctly [martinweihrauch]
 - dzsave szi writes "scan-properties.xml"
 - add vips_image_(get|set)_image()
 - add openslideload option to attach all associated images as metadata
 - dzsave to szi will write all associated images
 - remove old c++ and python interfaces
 - vipsthumbnail can thumbnail animated and multipage images
 - deprecate webpload @shrink, use @scale instead
 
 31/3/19 started 8.7.5
 - better buffer sizing in tiff reader [omira-sch]
 
 4/1/19 started 8.7.4
 - magickload with magick6 API did not chain exceptions correctly causing a
   memory leak under some conditions [kleisauke]
 - zero memory on allocate to prevent write of uninitialized memory under some 
   error conditions [Balint Varga-Perke]
 
 21/11/18 started 8.7.3
 - fix infinite loop for autofit with non-scaleable font 
 - mapim was not offsetting by window offset [erdmann]
 - better rounding for scale [kleisauke]
 - fix a memleak in magick6load [kleisauke]
 
 21/11/18 started 8.7.2
 - more info output for temp files to help diagnose problems
 - vips_text() could set the wrong DPI
 - vips_text() leaked in autofit mode
 
 23/9/18 started 8.7.1
 - update function list in docs [janko-m] 
 - test for g_str_to_ascii() [jcupitt]
 - fix temp file open on Windows and fallback on linux [lovell]
 
 23/12/17 started 8.7.0
 - add magicksave, save image with libMagick [dlemstra]
 - remove jpeg thumbnail from EXIF if "jpeg-thumbnail-data" has been removed by
   user
 - hough_line scales width to 0 - 180, not 0 - 360
 - hough_line is 4x faster
 - hough_circle is 2x faster
 - add vips_sobel() and vips_canny() edge detectors
 - add vips_rotate() ... a convenience method for vips_similarity()
 - svgload was missing is_a [lovell]
 - better header sniffing for small files
 - drop incompatible ICC profiles before save
 - better hasalpha rules
 - create funcs always make MULTIBAND (ie. no alpha)
 - use O_TMPFILE, if available [Alexander--]
 - set "interlaced=1" for interlaced JPG and PNG images
 - add PDFium PDF loader
 - jpegload adds a jpeg-chroma-subsample field with eg. 4:4:4 for no
   chrominance subsampling. 
 - tiffload, pdfload, magickload set VIPS_META_N_PAGES "n-pages" metadata item
 - add fontfile option to vips_text() [fangqiao]
 - add vips_transpose3d() -- swap major dimensions in a volumetric image
 - remove vips7 stuff from default API ... you must now #include it explicitly
 - added vips_argument_get_id() to fix derived classes on win32 [angelmixu]
 - fix compile with MSVC 2017 [angelmixu]
 - pdfload has a option for background 
 - vips7 C++ interface defaults off
 - make members, getters and operators "const" in cpp API
 - composite has params for x/y position of sub-images [medakk]
 - add Mitchell kernel
 - pyramid builders have a choice of 2x2 shrinkers [harukizaemon]
 - add `palette` option to pngsave [felixbuenemann]
 - add basic nifti load/save support
 - support writing string-valued fields via libexif
 - paste in the test suite from pyvips
 - get EXIF tag names from tag plus ifd [@Nan619]
 - escape ASCII control characters in XML
 - magickload now sniffs some file types itself
 - update radiance load from upstream
 - add region_shrink to tiffsave
 - mapim could fail for float index images with coordinates out of int range
 - scale openexr alpha to 0 - 255
 - close input earlier, when we can [kleisauke]
 - add vips_object_get_args() for language bindings [kleisauke]
 
 12/3/18 started 8.6.4
 - better fitting of fonts with overhanging edges [AdriÃ ]
 - revise C++ example [fangqiao]
 - strict round down on jpeg shrink on load [davidwood]
 - configure test for g++ 7.2 and composite.cpp
 - don't Ping in magickload, too unreliable
 - ensure WebP can add metadata when compiled with libwebpmux [lovell]
 - improve accuracy of vector path convolution [felixbuenemann]
 
 12/2/18 started 8.6.3
 - use pkg-config to find libjpeg, if we can
 - better clean of output image in vips_image_write() fixes a crash 
   writing twice to memory
 - better rounding behaviour in convolution means we hit the vector path more
   often
 - fix a crash if a delayed load failed [gsharpsh00ter]
 - icc_import attaches the fallback profile if it used it
 
 5/1/18 started 8.6.2
 - vips_sink_screen() keeps a ref to the input image ... stops a rare race
 - fix a minor accidental ABI break in 8.6.0 -> 8.6.1 [remicollet]
 - fix read of plane-separate TIFFs with large strips [remicollet]
 - fix a C++ warning in composite.cpp [lovell]
 - remove number of images limit in composite
 - composite allows 1 mode ... reused for all joins
 - fix race in vips_sink() for seq read 
 
 10/12/17 started 8.6.1
 - fix mmap window new/free cycling 
 - fix some compiler warnings
 - remove the 64-image limit on bandary operations
 - better version date [bmwiedemann]
 - bump wrapper script version [bgilbert]
 - fix a memleak on error during jpeg buffer write [lovell]
 - fix misspelling of IPTC as IPCT [lovell]
 - seq could be set on small images opened in random-access mode [aferrero2707]
 - fix small memleak in dzsave [lovell]
 - small speedup for rgb->g [lovell]
 
 15/4/17 started 8.6.0
 - supports fits images with leading non-image HDUs, thanks benepo
 - add vips_image_new_from_image() and vips_image_new_from_image1() ... make a
   constant image
 - add new_from_image() to Python as well
 - slight change to cpp new_from_image() to match py/C behaviour
 - vips_conv(), vips_compass(), vips_convsep() default to FLOAT precision
 - add FORCE resize mode to break aspect ratio
 - add vips_thumbnail_image()
 - better prefix guessing on Windows, thanks tumagonx
 - savers support a "page_height" option for multipage save
 - rename 'disc' as 'memory' and default off
 - add vips_find_trim(), search for non-background areas 
 - remove lcms1 support, it had bitrotted
 - `join` tagged as seq
 - support tiffsave_buffer for pyramids, thanks bubba
 - thumbnail and vipsthumbnail have an option for rendering intent, thanks 
   kleisauke 
 - set file create time on Windows, thanks dlong500
 - remove python tests ... moved to pyvips test suite
 - vips7 and vips8 python bindings default to off ... use the new pyvips
   binding instead
 - better svgload: larger output, handle missing width/height, thanks lovell
 - add vips_gravity() ... embed, but with direction rather than position
 - vips_text() can autofit text to a box, thanks gargsms
 - add vips_composite() / vips_composite2(): merge a set of images with 
   a set of blend modes
 - better gobject-introspection annotations, thanks astavale 
 - vips_image_write() severs all links between images, when it can ... thanks
   Warren and Nakilon
 - vector path for convolution is more accurate and can handle larger masks
 - linear and cubic kernels for reduce are higher quality
 - added vips_value_set_blob_free()
 - "--size Nx" to vipsthumbnail was broken, thanks jrochkind 
 - fix build with gcc 7
 - add vips_fill_nearest() ... fill pixels with nearest colour
 - add VIPS_COMBINE_MIN, a new combining mode for vips_compass()
 - vips_hist_find_indexed() now has a @combine parameter
 - vips_affine() and vips_similarity() have a "background" parameter
 - fix nasty jaggies on the edges of affine output, thanks chregu
 - add gif-delay, gif-comment and gif-loop metadata
 - add dispose handling to gifload
 - dzsave outputs extra right and bottom overlap-only tiles, for closer spec
   adherence
 - deprecate the "centre" option for vips_resize(): it's now always on
 - setting the EXIF data block automatically sets other image tags
 - add "extend" option to affine; resize uses it to stop black edges
 
 29/8/17 started 8.5.9
 - make --fail stop jpeg read on any libjpeg warning, thanks @mceachen
 - don't build enumtypes so often, removing perl as a compile dependency
 - fix a crash with heavy use of draw operations from language bindings, 
   thanks @Nakilon 
 
 2/8/17 started 8.5.8
 - fix transparency detection in merge, thanks Haida
 - define env var VIPS_WARNING to hide warning messages
 - shut down dzsave output earlier to help mark-sweep bindings
 - fix webp thumbnail upscale, thanks Kleis
 
 9/6/17 started 8.5.7
 - better smartcrop
 - transform cmyk->rgb automatically on write if there's an embedded profile
   and the saver does not support cmyk
 - fix DPI mixup in svgload ... we were writing images about 20% too large,
   thanks Fosk
 
 19/5/17 started 8.5.6
 - tiff read with start page > 0 could break edge tiles or strips
 - raise b64 limit to allow for huge profiles (thanks jaume)
 - fix error return in blob save (thanks jaume)
 - tag vipsprofile as py2 (thanks ioquatix)
 - don't cache thumbnail (thanks tomasc)
 
 23/4/17 started 8.5.5
 - doc polishing
 - more improvements for truncated PNG files, thanks juyunsang 
 - improve corrupted jpg handling, thanks juyunsang
 - fix small test suite issues on os x
 
 23/4/17 started 8.5.4
 - don't depend on image width when setting n_lines, thanks kleisauke
 
 7/4/17 started 8.5.3
 - more link fixing in docs 
 - revise cache sizing again to help out of order errors under heavy load, thanks
   kleisauke
 
 25/3/17 started 8.5.2
 - better behaviour for truncated PNG files, thanks Yury
 - missing proto for vips_tiffsave_buffer(), thanks greut
 - move some docs from the wiki and blog into core libvips docs
 - add support for markdown in docs
 
 25/3/17 started 8.5.1
 - init more classes earlier, thanks David
 
 13/10/16 started 8.5.0
 - rewritten buffer system is safer and frees memory earlier
 - added tiff save to buffer
 - added dzsave save to buffer (zip only)
 - revise header get/set functions
 - better vipsheader behaviour with complex field types
 - added vips_image_hasalpha()
 - added vips_thumbnail() / vips_thumbnail_buffer()
 - webpload/webpsave read and write icc, xmp, exif metadata
 - better >4gb detect for zip dzsave output [Felix BÃ¼nemann]
 - all loaders have a @fail option, meaning fail on first warning, though it
   only does anything for jpg and csv
 - add vips_image_get_fields() to help bindings
 - add tiff multi-page read/write
 - add VIPS_META_PAGE_HEIGHT metadata
 - IM6/IM7 magickload supports page/n/page-height, all_frames deprecated
 - gifload supports n/page-height
 - added #defines for VIPS_SONAME, VIPS_LIBRARY_CURRENT, VIPS_LIBRARY_REVISION,
   VIPS_LIBRARY_AGE
 - better support for bscale / bzero in fits images
 - deprecate vips_warn() / vips_info(); use g_warning() / g_info() instead
 - vipsthumbnail supports much fancier geometry strings, thanks tomasc
 - vips_thumbnail() has new @size option
 - fix --vips-cache-max etc. 
 - add compute reordering, plus some new API to support it:
   vips_reorder_margin_hint() and vips_reorder_prepare_many(), thanks
   aferrero2707
 - kick load operations from cache on read error, thanks gaillard 
 - fix return from C++ assignment operator overloads (+=, -= etc) 
 - add @max_slope to vips_hist_local() to implement CLAHE, thanks hunter-87
 - vips_gaussnoise() pixels are reproducible on recalc, thanks MvGulik
 - max/min sort values by y and x coordinate
 - tiff read uses libtiff scanline API if rows-per-strip is large
 - vips_region_shrink() knows about alpha, helps dzsave and tiffsave
 - use expat, not libxml, for XML load ... removes a required dependency, since
   we get expat as part of glib
 - new sequential mode infrastructure is faster and more flexible
 - add vips_smartcrop(), based on sharp's smartcropper
 - vipsthumbnail has a --smartcrop option
 - added vips_rot90() etc. convenience functions
 - fix vips_resize() bug when hscale and vscale were very different
 
 8/12/16 started 8.4.5
 - allow libgsf-1.14.26 to help centos, thanks tdiprima
 
 11/11/16 started 8.4.4
 - fix crash in vips.exe arg parsing on Windows, thanks Yury
 
 18/10/16 started 8.4.3
 - fix error detection in gif_close, thanks aaron42net
 - fix tiny threading memleak
 - improve compatibility with very old glib, see #548
 
 27/9/16 started 8.4.2
 - small doc improvements
 - fix error message for metadata fetch type mismatch
 - resolve a race condition in thread shutdown, thanks Lovell
 
 1/5/16 started 8.4
 - many more wepsave options [Felix BÃ¼nemann]
 - added quant_table option to wepsave [Felix BÃ¼nemann]
 - added @n option to pdfload, thanks andris
 - dzsave won't write empty tiles in google mode, thanks bverem, perog,
   felixbuenemann
 - allow nested [] in CLI args
 - restore BandFmt on unpremultiply in vipsthumbnail
 - better python detection and build [Felix BÃ¼nemann]
 - max-alpha defaults to 65535 for RGB16/GREY16
 - added radsave_buffer [Henri Chain]
 - support tiff orientation tag
 - autorotate option for tiff load
 - tiffsave converts for jpg if jpg compression is turned on
 - tiffsave supports --strip
 - conversions to GREY16 could lock
 - free pixel buffers on image close as well as thread exit ... stops main 
   thread buffers clogging up the system
 - dzsave can write compressed zips [Felix BÃ¼nemann]
 - vips_image_write() only refs the input when it has to ... makes it easier to
   combine many images in bounded memory
 - VImage::write() implementation was missing
 - VImage::write() return value changed from void to VImage to help chaining
 - added C++ arithmetic assignment overloads, += etc. 
 - VImage::ifthenelse() with double args was missing =0 on options
 - better accuracy for reducev with smarter multiplication
 - better quality for vips_resize() with linear/cubic kernels 
 - pyvips8 can create new metadata
 - better upsizing with vips_resize()
 - add imagemagick v7 support, thanks sachinwalia2k8 
 - added vips_worley(), vips_perlin() noise generators
 - added vips_convf(), vips_convi(), vips_convasep(), vips_conva() ... 
   im_conv*() functions rewritten as classes
 - vips_convsep() calls vips_convasep() for the approximate case
 - new fixed-point vector path for convi is up to about 2x faster
 - gif loader can make 1, 2, 3, or 4 bands depending on file contents
 - support --strip for pngsave
 - add svgz support [Felix BÃ¼nemann]
 - rename boostrap.sh -> autogen.sh to help snapcraft
 - support unicode filenames on Windows 
 - added VIPS_ROUND as well as VIPS_RINT
 - resize/reduce*/shrink*/affine now round output size to nearest rather than 
   rounding down, thanks ioquatix
 - better support for tile overlaps in google maps mode in dzsave
 - dzsave puts vips-properties.xml in the main dir for gm and zoomify layouts
 - resize and reduce have @centre option for centre convention downsampling
 - vipsthumbnail uses centre convention to better match imagemagick
diff --git a/fuzz/common_fuzzer_corpus/clusterfuzz-testcase-minimized-jpegsave_buffer_fuzzer-5673786296238080 b/fuzz/common_fuzzer_corpus/clusterfuzz-testcase-minimized-jpegsave_buffer_fuzzer-5673786296238080
new file mode 100644
index 000000000..447f0f65a
Binary files /dev/null and b/fuzz/common_fuzzer_corpus/clusterfuzz-testcase-minimized-jpegsave_buffer_fuzzer-5673786296238080 differ
diff --git a/libvips/foreign/jpeg2vips.c b/libvips/foreign/jpeg2vips.c
index aacb69187..8ae2782e4 100644
--- a/libvips/foreign/jpeg2vips.c
+++ b/libvips/foreign/jpeg2vips.c
@@ -342,29 +342,32 @@ static int
 attach_xmp_blob( VipsImage *im, void *data, int data_length )
 {
 	char *p = (char *) data;
 	int i;
 
-	if( !vips_isprefix( "http", p ) ) 
+	if( data_length < 4 ||
+		!vips_isprefix( "http", p ) ) 
 		return( 0 );
 
 	/* Search for a null char within the first few characters. 80
 	 * should be plenty for a basic URL.
+	 *
+	 * -2 for the extra null.
 	 */
-	for( i = 0; i < 80; i++ )
+	for( i = 0; i < VIPS_MIN( 80, data_length - 2 ); i++ )
 		if( !p[i] ) 
 			break;
 	if( p[i] )
 		return( 0 );
 
 	return( attach_blob( im, VIPS_META_XMP_NAME, 
 		p + i + 1, data_length - i - 1 ) );
 }
 
 /* Number of app2 sections we can capture. Each one can be 64k, so 6400k should
  * be enough for anyone (haha).
  */
 #define MAX_APP2_SECTIONS (100)
 
 /* Read a cinfo to a VIPS image. Set invert_pels if the pixel reader needs to
  * do 255-pel.
  */
diff --git a/libvips/iofuncs/header.c b/libvips/iofuncs/header.c
index cc23e674c..79bf8b1ac 100644
--- a/libvips/iofuncs/header.c
+++ b/libvips/iofuncs/header.c
@@ -1452,39 +1452,42 @@ void
 vips_image_set_blob_copy( VipsImage *image, 
 	const char *name, const void *data, size_t length )
 {
 	void *data_copy;
 
+	/* Cap at 100mb for sanity.
+	 */
 	if( !data ||
-		length == 0 )
+		length == 0 ||
+		length > 100 * 1024 * 1024 )
 		return;
 
 	/* We add an extra, secret null byte at the end, just in case this blob 
-	 * is read as a C string. The libtiff reader (for example) attaches
+	 * is read as a C string. The libtiff reader attaches
 	 * XMP XML as a blob, for example.
 	 */
 	if( !(data_copy = vips_malloc( NULL, length + 1 )) ) 
 		return;
 	memcpy( data_copy, data, length );
 	((unsigned char *) data_copy)[length] = '\0';
 
 	vips_image_set_blob( image, 
 		name, (VipsCallbackFn) vips_free, data_copy, length );
 }
 
 /** 
  * vips_image_get_blob: (method)
  * @image: image to get the metadata from
  * @name: metadata name
  * @data: pointer to area of memory
  * @length: return the blob length here, optionally
  *
  * Gets @blob from @image under the name @name, optionally returns its length in
  * @length. A convenience
  * function over vips_image_get(). Use vips_image_get_typeof() to test for the 
  * existence
  * of a piece of metadata.
  *
  * See also: vips_image_get(), vips_image_get_typeof(), vips_blob_get(), 
  *
  * Returns: 0 on success, -1 otherwise.
  */
