commit 603897d5e8a000c884a9d457027819c418fced6c
Author: Victor M. Alvarez <vmalvarez@virustotal.com>
Date:   Sun Oct 29 10:59:05 2017 +0100

    Fix read heap buffer overflow in PE module.
    
    Credit to OSS-Fuzz for finding this bug.

diff --git a/libyara/modules/pe.c b/libyara/modules/pe.c
index 4f41b2f1..ed325867 100644
--- a/libyara/modules/pe.c
+++ b/libyara/modules/pe.c
@@ -26,83 +26,79 @@ ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
 
 #define _GNU_SOURCE
 
 #include <stdio.h>
 #include <ctype.h>
 #include <time.h>
 
 #include "../crypto.h"
 #if defined(HAVE_LIBCRYPTO)
 #include <openssl/safestack.h>
 #include <openssl/asn1.h>
 #include <openssl/bio.h>
 #include <openssl/pkcs7.h>
 #include <openssl/x509.h>
 #if OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER)
 #define X509_get_signature_nid(o) OBJ_obj2nid((o)->sig_alg->algorithm)
 #endif
 #endif
 
 #include <yara/endian.h>
 #include <yara/pe.h>
 #include <yara/modules.h>
 #include <yara/mem.h>
 #include <yara/strutils.h>
 
 #include <yara/pe_utils.h>
 
 #define MODULE_NAME pe
 
 // http://msdn.microsoft.com/en-us/library/ms648009(v=vs.85).aspx
 #define RESOURCE_TYPE_CURSOR       1
 #define RESOURCE_TYPE_BITMAP       2
 #define RESOURCE_TYPE_ICON         3
 #define RESOURCE_TYPE_MENU         4
 #define RESOURCE_TYPE_DIALOG       5
 #define RESOURCE_TYPE_STRING       6
 #define RESOURCE_TYPE_FONTDIR      7
 #define RESOURCE_TYPE_FONT         8
 #define RESOURCE_TYPE_ACCELERATOR  9
 #define RESOURCE_TYPE_RCDATA       10
 #define RESOURCE_TYPE_MESSAGETABLE 11
 #define RESOURCE_TYPE_GROUP_CURSOR 12 // MAKEINTRESOURCE((ULONG_PTR)(RT_CURSOR) + 11)
 #define RESOURCE_TYPE_GROUP_ICON   14 // MAKEINTRESOURCE((ULONG_PTR)(RT_ICON) + 11)
 #define RESOURCE_TYPE_VERSION      16
 #define RESOURCE_TYPE_DLGINCLUDE   17
 #define RESOURCE_TYPE_PLUGPLAY     19
 #define RESOURCE_TYPE_VXD          20
 #define RESOURCE_TYPE_ANICURSOR    21
 #define RESOURCE_TYPE_ANIICON      22
 #define RESOURCE_TYPE_HTML         23
 #define RESOURCE_TYPE_MANIFEST     24
 
 
 #define RESOURCE_CALLBACK_CONTINUE   0
 #define RESOURCE_CALLBACK_ABORT      1
 
 
 #define RESOURCE_ITERATOR_FINISHED   0
 #define RESOURCE_ITERATOR_ABORTED    1
 
 
 #define MAX_PE_IMPORTS               16384
 #define MAX_PE_EXPORTS               65535
 
 
 #define IS_RESOURCE_SUBDIRECTORY(entry) \
     ((entry)->OffsetToData & 0x80000000)
 
 
 #define RESOURCE_OFFSET(entry) \
     ((entry)->OffsetToData & 0x7FFFFFFF)
 
 
-#define available_space(pe, pointer) \
-    (pe->data + pe->data_size - (uint8_t*)(pointer))
-
-
 typedef int (*RESOURCE_CALLBACK_FUNC) ( \
      PIMAGE_RESOURCE_DATA_ENTRY rsrc_data, \
      int rsrc_type, \
@@ -114,6 +110,20 @@ typedef int (*RESOURCE_CALLBACK_FUNC) ( \
      void* cb_data);
 
 
+static size_t available_space(
+    PE* pe,
+    void* pointer)
+{
+  if ((uint8_t*) pointer < pe->data)
+    return 0;
+
+  if ((uint8_t*) pointer >= pe->data + pe->data_size)
+    return 0;
+
+  return pe->data + pe->data_size - (uint8_t*) pointer;
+}
+
+
 int wide_string_fits_in_pe(
     PE* pe,
     char* data)
