commit 175408733fcffed7aa0618c6d5ad5390ed5c4f88
Author: John Cupitt <jcupitt@gmail.com>
Date:   Sun Feb 23 11:09:44 2020 +0000

    fix use-after-free
    
    see https://oss-fuzz.com/testcase-detail/5663684670259200

diff --git a/libvips/foreign/matrixload.c b/libvips/foreign/matrixload.c
index 305c17768..d9606b875 100644
--- a/libvips/foreign/matrixload.c
+++ b/libvips/foreign/matrixload.c
@@ -215,45 +215,45 @@ static int
 vips_foreign_load_matrix_load( VipsForeignLoad *load )
 {
 	VipsForeignLoadMatrix *matrix = (VipsForeignLoadMatrix *) load;
 	VipsObjectClass *class = VIPS_OBJECT_GET_CLASS( load );
 
 	int x, y;
 
 	vips_image_pipelinev( load->real, VIPS_DEMAND_STYLE_THINSTRIP, NULL );
 	vips_image_init_fields( load->real,
 		load->out->Xsize, load->out->Ysize, 1, 
 		VIPS_FORMAT_DOUBLE, 
 		VIPS_CODING_NONE, VIPS_INTERPRETATION_B_W, 1.0, 1.0 );
 
 	for( y = 0; y < load->real->Ysize; y++ ) {
 		char *line;
 		char *p, *q;
 
 		line = vips_sbuf_get_line_copy( matrix->sbuf );
 
 		for( x = 0, p = line; 
 			(q = vips_break_token( p, " \t" )) &&
 				x < load->out->Xsize;
 			x++, p = q )
 			if( vips_strtod( p, &matrix->linebuf[x] ) ) {
-				g_free( line );
 				vips_error( class->nickname, 
 					_( "bad number \"%s\"" ), p );
+				g_free( line );
 				return( -1 );
 			}
 
 		g_free( line );
 
 		if( x != load->out->Xsize ) {
 			vips_error( class->nickname, 
 				_( "line %d too short" ), y );
 			return( -1 );
 		}
 
 		if( vips_image_write_line( load->real, y, 
 			(VipsPel *) matrix->linebuf ) )
 			return( -1 );
 	}
 
 	return( 0 );
 }
