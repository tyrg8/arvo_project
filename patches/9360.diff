commit 9e53a942c9c972954c33b7effbafa5197f539265
Author: Cristy <urban-warrior@imagemagick.org>
Date:   Wed Jul 11 18:38:17 2018 -0400

    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9360

diff --git a/MagickCore/draw.c b/MagickCore/draw.c
index e46905778..29aad764d 100644
--- a/MagickCore/draw.c
+++ b/MagickCore/draw.c
@@ -2236,106 +2236,107 @@ static MagickBooleanType CheckPrimitiveExtent(MVGInfo *mvg_info,
 static SplayTreeInfo *GetMVGMacros(const char *primitive)
 {
   char
     *token;
 
   const char
     *q;
 
   size_t
     extent;
 
   SplayTreeInfo
     *macros;
 
   /*
     Scan graphic primitives for definitions and classes.
   */
   if (primitive == (const char *) NULL)
     return((SplayTreeInfo *) NULL);
   macros=NewSplayTree(CompareSplayTreeString,RelinquishMagickMemory,
     RelinquishMagickMemory);
   token=AcquireString(primitive);
   extent=strlen(token)+MagickPathExtent;
   for (q=primitive; *q != '\0'; )
   {
     GetNextToken(q,&q,extent,token);
     if (*token == '\0')
       break;
     if (*token == '#')
       {
         /*
           Skip comment.
         */
         while ((*q != '\n') && (*q != '\0'))
           q++;
         continue;
       }
     if (LocaleCompare("push",token) == 0)
       {
         register const char
           *end,
           *start;
 
         GetNextToken(q,&q,extent,token);
         if (*q == '"')
           {
             char
               name[MagickPathExtent];
 
             const char
               *p;
 
             ssize_t
              n;
 
             /*
               Named macro (e.g. push graphic-context "wheel").
             */
             GetNextToken(q,&q,extent,token);
             start=q;
+            end=q;
             (void) CopyMagickString(name,token,MagickPathExtent);
             n=0;
             for (p=q; *q != '\0'; )
             {
               GetNextToken(p,&p,extent,token);
               if (*token == '\0')
                 break;
               if (*token == '#')
                 {
                   /*
                     Skip comment.
                   */
                   while ((*p != '\n') && (*p != '\0'))
                     p++;
                   continue;
                 }
               if (LocaleCompare(token,"pop") == 0)
                 {
                   end=p-strlen(token)-1;
                   n--;
                 }
               if (LocaleCompare(token,"push") == 0)
                 n++;
-              if (n < 0)
+              if ((n < 0) && (end > start))
                 {
                   char
                     *macro;
 
                   /*
                     Extract macro.
                   */
                   GetNextToken(p,&p,extent,token);
                   macro=AcquireString(start);
                   macro[end-start]='\0';
                   (void) AddValueToSplayTree(macros,ConstantString(name),
                     ConstantString(macro));
                   macro=DestroyString(macro);
                   break;
                 }
             }
           }
       }
   }
   token=DestroyString(token);
   return(macros);
 }
