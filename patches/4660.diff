commit ac250458e556abfa2edbe7747911323d685110a3
Author: Even Rouault <even.rouault@mines-paris.org>
Date:   Sat Dec 16 10:41:03 2017 +0000

    MITAB: prevent out-of-bound read. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=4660. Credit to OSS Fuzz
    
    git-svn-id: https://svn.osgeo.org/gdal/trunk@41050 f0d54148-0727-0410-94bb-9a71ac55c965

diff --git a/gdal/ogr/ogrsf_frmts/mitab/mitab_indfile.cpp b/gdal/ogr/ogrsf_frmts/mitab/mitab_indfile.cpp
index 618a22aff6..8615408949 100644
--- a/gdal/ogr/ogrsf_frmts/mitab/mitab_indfile.cpp
+++ b/gdal/ogr/ogrsf_frmts/mitab/mitab_indfile.cpp
@@ -1037,30 +1037,33 @@ GInt32 TABINDNode::ReadIndexEntry(int nEntryNo, GByte *pKeyValue)
 /**********************************************************************
  *                   TABINDNode::IndexKeyCmp()
  *
  * Compare the specified index entry with the key value, and
  * return 0 if equal, an integer less than 0 if key is smaller than
  * index entry, and an integer greater than 0 if key is bigger than
  * index entry.
  *
  * nEntryNo is the 0-based index of the index entry that we are interested
  * in inside the current node.
  **********************************************************************/
 int   TABINDNode::IndexKeyCmp(GByte *pKeyValue, int nEntryNo)
 {
     CPLAssert(pKeyValue);
     CPLAssert(nEntryNo >= 0 && nEntryNo < m_numEntriesInNode);
 
     m_poDataBlock->GotoByteInBlock(12 + nEntryNo*(m_nKeyLength+4));
-
-    return memcmp(pKeyValue, m_poDataBlock->GetCurDataPtr(), m_nKeyLength);
+    CPLAssert( m_nKeyLength <= 255 );
+    GByte abyKey[255];
+    if( m_poDataBlock->ReadBytes(m_nKeyLength, abyKey) != 0 )
+        return -1;
+    return memcmp(pKeyValue, abyKey, m_nKeyLength);
 }
 
 /**********************************************************************
  *                   TABINDNode::SetFieldType()
  *
  * Sets the field type for the current index and recursively set all
  * children as well.
  * This information will then be used in building the key values, etc.
  *
  * Returns 0 on success, -1 on error.
  **********************************************************************/
