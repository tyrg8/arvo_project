commit 6d15222b066f82ad89e90cf07db08721ef53fe9a
Author: Dirk Lemstra <dirk@lemstra.org>
Date:   Thu Jul 18 22:05:23 2019 +0200

    Read one byte less to make sure we get a null terminated buffer.

diff --git a/coders/bytebuffer-private.h b/coders/bytebuffer-private.h
index c70219bc9..38b5467ba 100644
--- a/coders/bytebuffer-private.h
+++ b/coders/bytebuffer-private.h
@@ -34,17 +34,17 @@ typedef struct _MagickByteBuffer
 static inline int ReadMagickByteBuffer(MagickByteBuffer *buffer)
 {
   if ((buffer->offset == buffer->count) && (buffer->offset > 0))
     {
-      if (buffer->count != (ssize_t) sizeof(buffer->data))
+      if (buffer->count != (ssize_t) sizeof(buffer->data)-1)
         return(EOF);
       buffer->offset=0;
       buffer->count=0;
     }
   if ((buffer->offset == 0) && (buffer->count == 0))
     {
-      buffer->count=ReadBlob(buffer->image,sizeof(buffer->data),buffer->data);
+      buffer->count=ReadBlob(buffer->image,sizeof(buffer->data)-1,buffer->data);
       if (buffer->count < 1)
         return(EOF);
     }
   return(buffer->data[buffer->offset++]);
 }
@@ -52,16 +52,16 @@ static inline int ReadMagickByteBuffer(MagickByteBuffer *buffer)
 static inline char *GetMagickByteBufferDatum(MagickByteBuffer *buffer)
 {
   ssize_t
     count,
     i;
 
   i=0;
   while (buffer->offset < buffer->count)
     buffer->data[i++]=buffer->data[buffer->offset++];
-  count=ReadBlob(buffer->image,sizeof(buffer->data)-i,buffer->data+i);
+  count=ReadBlob(buffer->image,sizeof(buffer->data)-1-i,buffer->data+i);
   buffer->count=i;
   if (count > 0)
     buffer->count+=count;
   buffer->offset=0;
   return((char *) buffer->data);
 }
