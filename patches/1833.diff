commit 5238ba21f668308f9ff18eaf252e00113615940e
Author: Even Rouault <even.rouault@mines-paris.org>
Date:   Mon May 29 09:57:37 2017 +0000

    NTF: fix indx-out-of-bound access on corrupted files. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=1833. Credit to OSS Fuzz
    
    git-svn-id: https://svn.osgeo.org/gdal/trunk@38662 f0d54148-0727-0410-94bb-9a71ac55c965

diff --git a/gdal/ogr/ogrsf_frmts/ntf/ntf_generic.cpp b/gdal/ogr/ogrsf_frmts/ntf/ntf_generic.cpp
index e7eacf8505..b699bc818b 100644
--- a/gdal/ogr/ogrsf_frmts/ntf/ntf_generic.cpp
+++ b/gdal/ogr/ogrsf_frmts/ntf/ntf_generic.cpp
@@ -148,136 +148,138 @@ void NTFGenericClass::SetMultiple( const char *pszName )
 void OGRNTFDataSource::WorkupGeneric( NTFFileReader * poReader )
 
 {
     NTFRecord   **papoGroup = NULL;
 
     if( poReader->GetNTFLevel() > 2 )
     {
         poReader->IndexFile();
         if( CPLGetLastErrorType() == CE_Failure )
             return;
     }
     else
         poReader->Reset();
 
 /* ==================================================================== */
 /*      Read all record groups in the file.                             */
 /* ==================================================================== */
     while( true )
     {
 /* -------------------------------------------------------------------- */
 /*      Read a record group                                             */
 /* -------------------------------------------------------------------- */
         if( poReader->GetNTFLevel() > 2 )
             papoGroup = poReader->GetNextIndexedRecordGroup(papoGroup);
         else
             papoGroup = poReader->ReadRecordGroup();
 
-        if( papoGroup == NULL || papoGroup[0]->GetType() == 99 )
+        if( papoGroup == NULL ||
+            papoGroup[0]->GetType() < 0 ||
+            papoGroup[0]->GetType() >= 99 )
             break;
 
 /* -------------------------------------------------------------------- */
 /*      Get the class corresponding to the anchor record.               */
 /* -------------------------------------------------------------------- */
         NTFGenericClass *poClass = GetGClass( papoGroup[0]->GetType() );
         char           **papszFullAttList = NULL;
 
         poClass->nFeatureCount++;
 
 /* -------------------------------------------------------------------- */
 /*      Loop over constituent records collecting attributes.            */
 /* -------------------------------------------------------------------- */
         for( int iRec = 0; papoGroup[iRec] != NULL; iRec++ )
         {
             NTFRecord   *poRecord = papoGroup[iRec];
 
             switch( poRecord->GetType() )
             {
               case NRT_ATTREC:
               {
                   char  **papszTypes, **papszValues;
 
                   poReader->ProcessAttRec( poRecord, NULL,
                                            &papszTypes, &papszValues );
 
                   for( int iAtt = 0; papszTypes != NULL &&
                                      papszTypes[iAtt] != NULL; iAtt++ )
                   {
                       NTFAttDesc *poAttDesc =
                           poReader->GetAttDesc( papszTypes[iAtt] );
                       if( poAttDesc != NULL )
                       {
                           poClass->CheckAddAttr( poAttDesc->val_type,
                                                  poAttDesc->finter,
                                                  static_cast<int>(strlen(papszValues[iAtt])) );
                       }
 
                       if( CSLFindString( papszFullAttList,
                                          papszTypes[iAtt] ) == -1 )
                           papszFullAttList =
                               CSLAddString( papszFullAttList,
                                             papszTypes[iAtt] );
                       else if( poAttDesc != NULL )
                           poClass->SetMultiple( poAttDesc->val_type );
                   }
 
                   CSLDestroy( papszTypes );
                   CSLDestroy( papszValues );
               }
               break;
 
               case NRT_TEXTREP:
               case NRT_NAMEPOSTN:
                 poClass->CheckAddAttr( "FONT", "I4", 4 );
                 poClass->CheckAddAttr( "TEXT_HT", "R3,1", 3 );
                 poClass->CheckAddAttr( "TEXT_HT_GROUND", "R9,3", 9 );
                 poClass->CheckAddAttr( "TEXT_HT", "R3,1", 3 );
                 poClass->CheckAddAttr( "DIG_POSTN", "I1", 1 );
                 poClass->CheckAddAttr( "ORIENT", "R4,1", 4 );
                 break;
 
               case NRT_NAMEREC:
                 poClass->CheckAddAttr( "TEXT", "A*",
                                        atoi(poRecord->GetField(13,14)) );
                 break;
 
               case NRT_GEOMETRY:
               case NRT_GEOMETRY3D:
                   if( atoi(poRecord->GetField(3,8)) != 0 )
                       poClass->CheckAddAttr( "GEOM_ID", "I6", 6 );
                   if( poRecord->GetType() == NRT_GEOMETRY3D )
                       poClass->b3D = TRUE;
                   break;
 
               case NRT_POINTREC:
               case NRT_LINEREC:
                 if( poReader->GetNTFLevel() < 3 )
                 {
                     NTFAttDesc *poAttDesc =
                         poReader->GetAttDesc(poRecord->GetField(9,10));
                     if( poAttDesc != NULL )
                         poClass->CheckAddAttr( poAttDesc->val_type,
                                                poAttDesc->finter, 6 );
 
                     if( !EQUAL(poRecord->GetField(17,20),"    ") )
                         poClass->CheckAddAttr( "FEAT_CODE", "A4", 4 );
                 }
                 break;
 
               default:
                 break;
             }
         }
 
         CSLDestroy( papszFullAttList );
     }
 
     if( GetOption("CACHING") != NULL
         && EQUAL(GetOption("CACHING"),"OFF") )
         poReader->DestroyIndex();
 
     poReader->Reset();
 }
 
 /************************************************************************/
 /*                        AddGenericAttributes()                        */
 /************************************************************************/
