commit 581cf0dfc6b9ed83d6ede9a65dc6dd95546456b8
Author: Mike Klein <mtklein@google.com>
Date:   Mon Sep 17 11:41:15 2018 -0400

    erase _every_ row of F32 SkPixmaps
    
    We're doing a really thorough job of erasing the first row now.
    Yet another piece of code that should probably be a draw.
    
    Bug: oss-fuzz:9120
    
    Change-Id: Icd62c3ba3df127f0b89731ec004109c1b0144fc5
    Reviewed-on: https://skia-review.googlesource.com/154880
    Auto-Submit: Mike Klein <mtklein@google.com>
    Reviewed-by: Brian Osman <brianosman@google.com>
    Commit-Queue: Brian Osman <brianosman@google.com>

diff --git a/src/core/SkPixmap.cpp b/src/core/SkPixmap.cpp
index a799e5f0e0..f842afd8ce 100644
--- a/src/core/SkPixmap.cpp
+++ b/src/core/SkPixmap.cpp
@@ -245,36 +245,36 @@ bool SkPixmap::erase(SkColor color, const SkIRect& inArea) const {
 bool SkPixmap::erase(const SkColor4f& origColor, const SkIRect* subset) const {
     SkPixmap pm;
     if (subset) {
         if (!this->extractSubset(&pm, *subset)) {
             return false;
         }
     } else {
         pm = *this;
     }
 
     const SkColor4f color = origColor.pin();
 
     if (pm.colorType() == kRGBA_F16_SkColorType) {
         const uint64_t half4 = color.premul().toF16();
         for (int y = 0; y < pm.height(); ++y) {
             sk_memset64(pm.writable_addr64(0, y), half4, pm.width());
         }
         return true;
     }
 
     if (pm.colorType() == kRGBA_F32_SkColorType) {
         const SkPM4f rgba = color.premul();
         for (int y = 0; y < pm.height(); ++y) {
-            auto row = (float*)pm.writable_addr();
+            auto row = (float*)pm.writable_addr(0, y);
             for (int x = 0; x < pm.width(); ++x) {
                 row[4*x+0] = rgba.r();
                 row[4*x+1] = rgba.g();
                 row[4*x+2] = rgba.b();
                 row[4*x+3] = rgba.a();
             }
         }
         return true;
     }
 
     return pm.erase(color.toSkColor());
 }
