commit 74e53280dad7b29f85386c6a1286fb92643465da
Author: jeanlf <jeanlf@gpac.io>
Date:   Fri Nov 4 09:18:47 2022 +0100

    fixed #2294

diff --git a/src/isomedia/box_code_3gpp.c b/src/isomedia/box_code_3gpp.c
index d75eae60a..cee178fcf 100644
--- a/src/isomedia/box_code_3gpp.c
+++ b/src/isomedia/box_code_3gpp.c
@@ -1046,40 +1046,54 @@ void dimC_box_del(GF_Box *s)
 
 GF_Err dimC_box_read(GF_Box *s, GF_BitStream *bs)
 {
-	char str[1024];
-	u32 i;
+	u32 i, msize;
 	GF_DIMSSceneConfigBox *p = (GF_DIMSSceneConfigBox *)s;
 
 	ISOM_DECREASE_SIZE(p, 3);
 	p->profile = gf_bs_read_u8(bs);
 	p->level = gf_bs_read_u8(bs);
 	p->pathComponents = gf_bs_read_int(bs, 4);
 	p->fullRequestHost = gf_bs_read_int(bs, 1);
 	p->streamType = gf_bs_read_int(bs, 1);
 	p->containsRedundant = gf_bs_read_int(bs, 2);
 
+	char *str = gf_malloc(sizeof(char)*(p->size+1));
+	if (!str) return GF_OUT_OF_MEM;
+	msize = p->size;
+	str[msize] = 0;
 	i=0;
 	str[0]=0;
-	while (i < GF_ARRAY_LENGTH(str)) {
+	while (i < msize) {
 		str[i] = gf_bs_read_u8(bs);
 		if (!str[i]) break;
 		i++;
 	}
 	ISOM_DECREASE_SIZE(p, i);
+	if (i == msize) {
+		gf_free(str);
+		return GF_ISOM_INVALID_FILE;
+	}
 
 	p->textEncoding = gf_strdup(str);
 
 	i=0;
 	str[0]=0;
-	while (i < GF_ARRAY_LENGTH(str)) {
+	while (i < msize) {
 		str[i] = gf_bs_read_u8(bs);
 		if (!str[i]) break;
 		i++;
 	}
 	ISOM_DECREASE_SIZE(p, i);
+	if (i == msize) {
+		gf_free(str);
+		return GF_ISOM_INVALID_FILE;
+	}
 
 	p->contentEncoding = gf_strdup(str);
+	gf_free(str);
+	if (p->textEncoding || !p->contentEncoding)
+		return GF_OUT_OF_MEM;
 	return GF_OK;
 }
 
 #ifndef GPAC_DISABLE_ISOM_WRITE
