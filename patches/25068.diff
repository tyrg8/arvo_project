commit 46a618acfbb3a71f3ccabcbc26cd620636300868
Author: cochicde <cabral@fortiss.org>
Date:   Mon Aug 24 18:25:49 2020 +0200

    refactor(server): Reset the original configuration in UA_Server_newWithConfig

diff --git a/include/open62541/server.h b/include/open62541/server.h
index 3c208a0a8..15b1f7bcb 100644
--- a/include/open62541/server.h
+++ b/include/open62541/server.h
@@ -311,7 +311,7 @@ UA_ServerConfig_setCustomHostname(UA_ServerConfig *config,
 /* Creates a new server. Moves the config into the server with a shallow copy.
  * The config content is cleared together with the server. */
 UA_Server UA_EXPORT *
-UA_Server_newWithConfig(const UA_ServerConfig *config);
+UA_Server_newWithConfig(UA_ServerConfig *config);
 
 void UA_EXPORT UA_Server_delete(UA_Server *server);
 
diff --git a/plugins/ua_config_default.c b/plugins/ua_config_default.c
index f53c493f3..ba916c391 100644
--- a/plugins/ua_config_default.c
+++ b/plugins/ua_config_default.c
@@ -45,20 +45,15 @@ UA_Server *
 UA_Server_new() {
     UA_ServerConfig config;
     memset(&config, 0, sizeof(UA_ServerConfig));
     /* Set a default logger and NodeStore for the initialization */
     config.logger = UA_Log_Stdout_;
     if(UA_STATUSCODE_GOOD != UA_Nodestore_HashMap(&config.nodestore)) {
         return NULL;
     }
 
-    UA_Server *server = UA_Server_newWithConfig(&config);
-    if(!server) {
-        config.nodestore.clear(config.nodestore.context);
-    }
-
-    return server;
+    return UA_Server_newWithConfig(&config);
 }
 
 /*******************************/
 /* Default Connection Settings */
 /*******************************/
diff --git a/src/server/ua_server.c b/src/server/ua_server.c
index 97233ce6c..af1cf3d6f 100644
--- a/src/server/ua_server.c
+++ b/src/server/ua_server.c
@@ -345,14 +345,17 @@ UA_Server_init(UA_Server *server) {
 }
 
 UA_Server *
-UA_Server_newWithConfig(const UA_ServerConfig *config) {
+UA_Server_newWithConfig(UA_ServerConfig *config) {
     if(!config)
         return NULL;
     UA_Server *server = (UA_Server *)UA_calloc(1, sizeof(UA_Server));
-    if(!server)
+    if(!server) {
+        UA_ServerConfig_clean(config);
         return NULL;
+    }
     server->config = *config;
+    memset(config, 0, sizeof(UA_ServerConfig));
     return UA_Server_init(server);
 }
 
 /* Returns if the server should be shut down immediately */
