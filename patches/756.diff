commit 76d1dccf3e5ce0c67125964d0908b322e7d1afb9
Author: Marti Maria <info@littlecms.com>
Date:   Wed Mar 15 09:13:53 2017 +0100

    [oss-fuzz] added a check for LUT channels consistency
    
    Also added a conditional for VS  20123 on fpclassify(). Thanks to Robin
    Watts for providing the code.

diff --git a/src/cmsplugin.c b/src/cmsplugin.c
index dd6f7db..164061f 100644
--- a/src/cmsplugin.c
+++ b/src/cmsplugin.c
@@ -169,20 +169,24 @@ cmsBool CMSEXPORT  _cmsReadUInt32Number(cmsIOHANDLER* io, cmsUInt32Number* n)
 cmsBool CMSEXPORT  _cmsReadFloat32Number(cmsIOHANDLER* io, cmsFloat32Number* n)
 {
     cmsUInt32Number tmp;
 
     _cmsAssert(io != NULL);
 
     if (io->Read(io, &tmp, sizeof(cmsUInt32Number), 1) != 1)
         return FALSE;
 
     if (n != NULL) {
 
         tmp = _cmsAdjustEndianess32(tmp);
         *n = *(cmsFloat32Number*)(void*)&tmp;
 
-        // fpclassify() required by C99
-        return ((fpclassify(*n) == FP_ZERO) || (fpclassify(*n) == FP_NORMAL));
+        #if defined(_MSC_VER) && _MSC_VER < 1800
+           return TRUE;
+        #else
+           // fpclassify() required by C99 (only provided by MSVC >= 1800, VS2013 onwards)
+           return ((fpclassify(*n) == FP_ZERO) || (fpclassify(*n) == FP_NORMAL));
+        #endif        
     }
 
     return TRUE;
 }
diff --git a/src/cmstypes.c b/src/cmstypes.c
index 987ae19..09723f4 100644
--- a/src/cmstypes.c
+++ b/src/cmstypes.c
@@ -4456,29 +4456,33 @@ static
 void *Type_MPE_Read(struct _cms_typehandler_struct* self, cmsIOHANDLER* io, cmsUInt32Number* nItems, cmsUInt32Number SizeOfTag)
 {
     cmsUInt16Number InputChans, OutputChans;
     cmsUInt32Number ElementCount;
     cmsPipeline *NewLUT = NULL;
     cmsUInt32Number BaseOffset;
 
     // Get actual position as a basis for element offsets
     BaseOffset = io ->Tell(io) - sizeof(_cmsTagBase);
 
     // Read channels and element count
     if (!_cmsReadUInt16Number(io, &InputChans)) return NULL;
     if (!_cmsReadUInt16Number(io, &OutputChans)) return NULL;
 
     if (InputChans == 0 || InputChans >= cmsMAXCHANNELS) return NULL;
     if (OutputChans == 0 || OutputChans >= cmsMAXCHANNELS) return NULL;
 
     // Allocates an empty LUT
     NewLUT = cmsPipelineAlloc(self ->ContextID, InputChans, OutputChans);
     if (NewLUT == NULL) return NULL;
 
     if (!_cmsReadUInt32Number(io, &ElementCount)) goto Error;    
     if (!ReadPositionTable(self, io, ElementCount, BaseOffset, NewLUT, ReadMPEElem)) goto Error;
 
+    // Check channel count
+    if (InputChans != NewLUT->InputChannels ||
+        OutputChans != NewLUT->OutputChannels) goto Error;
+
     // Success
     *nItems = 1;
     return NewLUT;
 
     // Error
