commit ddc2a2d381843e086fc36388981d0b8ba1ea789d
Merge: c98e1747a8 c6fd37cee3
Author: Nikita Popov <nikita.ppv@gmail.com>
Date:   Wed Sep 2 10:53:44 2020 +0200

    Merge branch 'PHP-7.4'
    
    * PHP-7.4:
      Fix throwing of yield from related exceptions into generator

diff --git a/Zend/tests/generators/yield_from_valid_exception.phpt b/Zend/tests/generators/yield_from_valid_exception.phpt
index 3af35f53af..d3e054bfaf 100644
--- a/Zend/tests/generators/yield_from_valid_exception.phpt
+++ b/Zend/tests/generators/yield_from_valid_exception.phpt
@@ -15,15 +15,16 @@ function valid() {
 
 function gen() {
     try {
-        yield from new FooBar;
+        // the fact that the yield from result is used is relevant.
+        var_dump(yield from new FooBar);
     } catch (Exception $e) {
         echo $e->getMessage(), "\n";
     }
 }
 
 $x = gen();
 $x->current();
 
 ?>
 --EXPECT--
 Exception from valid()
diff --git a/Zend/zend_generators.c b/Zend/zend_generators.c
index 5e7492b7bc..13f06a4c34 100644
--- a/Zend/zend_generators.c
+++ b/Zend/zend_generators.c
@@ -632,83 +632,83 @@ ZEND_API zend_generator *zend_generator_update_current(zend_generator *generator
 static zend_result zend_generator_get_next_delegated_value(zend_generator *generator) /* {{{ */
 {
 	zval *value;
 	if (Z_TYPE(generator->values) == IS_ARRAY) {
 		HashTable *ht = Z_ARR(generator->values);
 		HashPosition pos = Z_FE_POS(generator->values);
 
 		Bucket *p;
 		do {
 			if (UNEXPECTED(pos >= ht->nNumUsed)) {
 				/* Reached end of array */
 				goto failure;
 			}
 
 			p = &ht->arData[pos];
 			value = &p->val;
 			if (Z_TYPE_P(value) == IS_INDIRECT) {
 				value = Z_INDIRECT_P(value);
 			}
 			pos++;
 		} while (Z_ISUNDEF_P(value));
 
 		zval_ptr_dtor(&generator->value);
 		ZVAL_COPY(&generator->value, value);
 
 		zval_ptr_dtor(&generator->key);
 		if (p->key) {
 			ZVAL_STR_COPY(&generator->key, p->key);
 		} else {
 			ZVAL_LONG(&generator->key, p->h);
 		}
 
 		Z_FE_POS(generator->values) = pos;
 	} else {
 		zend_object_iterator *iter = (zend_object_iterator *) Z_OBJ(generator->values);
 
 		if (iter->index++ > 0) {
 			iter->funcs->move_forward(iter);
 			if (UNEXPECTED(EG(exception) != NULL)) {
 				goto exception;
 			}
 		}
 
 		if (iter->funcs->valid(iter) == FAILURE) {
 			if (UNEXPECTED(EG(exception) != NULL)) {
 				goto exception;
 			}
 			/* reached end of iteration */
 			goto failure;
 		}
 
 		value = iter->funcs->get_current_data(iter);
 		if (UNEXPECTED(EG(exception) != NULL)) {
 			goto exception;
 		} else if (UNEXPECTED(!value)) {
 			goto failure;
 		}
 
 		zval_ptr_dtor(&generator->value);
 		ZVAL_COPY(&generator->value, value);
 
 		zval_ptr_dtor(&generator->key);
 		if (iter->funcs->get_current_key) {
 			iter->funcs->get_current_key(iter, &generator->key);
 			if (UNEXPECTED(EG(exception) != NULL)) {
 				ZVAL_UNDEF(&generator->key);
 				goto exception;
 			}
 		} else {
 			ZVAL_LONG(&generator->key, iter->index);
 		}
 	}
 	return SUCCESS;
 
 exception:
-	zend_rethrow_exception(generator->execute_data);
+	zend_generator_throw_exception(generator, NULL);
 
 failure:
 	zval_ptr_dtor(&generator->values);
 	ZVAL_UNDEF(&generator->values);
 	return FAILURE;
 }
 /* }}} */
