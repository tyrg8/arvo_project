commit 9b3a8f36418e8b6a601aa683506bb875f6dd9f12
Author: DRC <information@libjpeg-turbo.org>
Date:   Fri Jan 27 13:38:48 2023 -0600

    jcapimin.c: Revert changes made in fc01f467
    
    Those changes worked around an innocuous UBSan warning that was
    exposed by the new TurboJPEG 3 transform fuzz target, due to the fact
    that tj3Transform() no longer rejects images with unknown subsampling
    configurations.  That UBSan warning was a false positive, and attempting
    to fix it introduced a buffer overrun triggered by a malformed input
    image that causes jpeg_write_marker() to be called with datalen == 0.  I
    suspect that the UBSan false positive was only reproducible on my local
    machine, but I guess we'll see.
    
    Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=55413

diff --git a/jcapimin.c b/jcapimin.c
index 25ce9a11..cbb3d13e 100644
--- a/jcapimin.c
+++ b/jcapimin.c
@@ -1,32 +1,32 @@
 /*
  * jcapimin.c
  *
  * This file was part of the Independent JPEG Group's software:
  * Copyright (C) 1994-1998, Thomas G. Lane.
  * Modified 2003-2010 by Guido Vollbeding.
  * libjpeg-turbo Modifications:
- * Copyright (C) 2022-2023, D. R. Commander.
+ * Copyright (C) 2022, D. R. Commander.
  * For conditions of distribution and use, see the accompanying README.ijg
  * file.
  *
  * This file contains application interface code for the compression half
  * of the JPEG library.  These are the "minimum" API routines that may be
  * needed in either the normal full-compression case or the transcoding-only
  * case.
  *
  * Most of the routines intended to be called directly by an application
  * are in this file or in jcapistd.c.  But also see jcparam.c for
  * parameter-setup helper routines, jcomapi.c for routines shared by
  * compression and decompression, and jctrans.c for the transcoding case.
  */
 
 #define JPEG_INTERNALS
 #include "jinclude.h"
 #include "jpeglib.h"
 #include "jcmaster.h"
 
 
 /*
  * Initialization of a JPEG compression object.
  * The error manager must already be set up (in case memory manager fails).
  */
@@ -230,21 +230,20 @@ GLOBAL(void)
 jpeg_write_marker(j_compress_ptr cinfo, int marker, const JOCTET *dataptr,
                   unsigned int datalen)
 {
   void (*write_marker_byte) (j_compress_ptr info, int val);
 
   if (cinfo->next_scanline != 0 ||
       (cinfo->global_state != CSTATE_SCANNING &&
        cinfo->global_state != CSTATE_RAW_OK &&
        cinfo->global_state != CSTATE_WRCOEFS))
     ERREXIT1(cinfo, JERR_BAD_STATE, cinfo->global_state);
 
   (*cinfo->marker->write_marker_header) (cinfo, marker, datalen);
   write_marker_byte = cinfo->marker->write_marker_byte; /* copy for speed */
-  do {
+  while (datalen--) {
     (*write_marker_byte) (cinfo, *dataptr);
     dataptr++;
   }
-  while (--datalen);
 }
 
 /* Same, but piecemeal. */
