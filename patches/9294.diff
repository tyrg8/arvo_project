commit 4fe08016068514be7a8751d86f6ad30bde344949
Author: Ben Pfaff <blp@ovn.org>
Date:   Mon Jul 9 13:04:03 2018 -0700

    flow: Fix buffer overread for crafted IPv6 packets.
    
    The ipv6_sanity_check() function implemented a check for IPv6 payload
    length wrong: ip6_plen is the payload length but this function checked
    whether it was longer than the total length of IPv6 header plus payload.
    This meant that a packet with a crafted ip6_plen could result in a buffer
    overread of up to the length of an IPv6 header (40 bytes).
    
    The kernel datapath flow extraction code does not obviously have a similar
    problem.
    
    Reported-at: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9287
    Signed-off-by: Ben Pfaff <blp@ovn.org>
    Acked-by: Darrell Ball <dlu998@gmail.com>

diff --git a/lib/flow.c b/lib/flow.c
index a785e63a8..76a8b9aae 100644
--- a/lib/flow.c
+++ b/lib/flow.c
@@ -671,22 +671,22 @@ static inline bool
 ipv6_sanity_check(const struct ovs_16aligned_ip6_hdr *nh, size_t size)
 {
     uint16_t plen;
 
     if (OVS_UNLIKELY(size < sizeof *nh)) {
         return false;
     }
 
     plen = ntohs(nh->ip6_plen);
-    if (OVS_UNLIKELY(plen > size)) {
+    if (OVS_UNLIKELY(plen + IPV6_HEADER_LEN > size)) {
         return false;
     }
     /* Jumbo Payload option not supported yet. */
     if (OVS_UNLIKELY(size - plen > UINT8_MAX)) {
         return false;
     }
 
     return true;
 }
 
 /* Caller is responsible for initializing 'dst' with enough storage for
  * FLOW_U64S * 8 bytes. */
