commit c6eb5dc5fdf8373b3f6cd1c121100cad7e75f69a
Author: Dmitry Stogov <dmitry@zend.com>
Date:   Mon Jul 18 15:40:11 2022 +0300

    Fix possible crash in case of exception
    
    Fixes oss-fuzz #49068

diff --git a/ext/reflection/php_reflection.c b/ext/reflection/php_reflection.c
index f0f9e3dfe0..cf3b024c22 100644
--- a/ext/reflection/php_reflection.c
+++ b/ext/reflection/php_reflection.c
@@ -6963,21 +6963,24 @@ ZEND_METHOD(ReflectionEnumBackedCase, __construct)
 ZEND_METHOD(ReflectionEnumBackedCase, getBackingValue)
 {
 	reflection_object *intern;
 	zend_class_constant *ref;
 
 	if (zend_parse_parameters_none() == FAILURE) {
 		RETURN_THROWS();
 	}
 	GET_REFLECTION_OBJECT_PTR(ref);
 
 	if (Z_TYPE(ref->value) == IS_CONSTANT_AST) {
 		zval_update_constant_ex(&ref->value, ref->ce);
+		if (EG(exception)) {
+			return;
+		}
 	}
 
 	ZEND_ASSERT(intern->ce->enum_backing_type != IS_UNDEF);
 	zval *member_p = zend_enum_fetch_case_value(Z_OBJ(ref->value));
 
 	ZVAL_COPY_OR_DUP(return_value, member_p);
 }
 
 /* {{{ proto ReflectionFiber::__construct(Fiber $fiber) */
diff --git a/ext/reflection/tests/ReflectionEnumBackedCase_getBackingValue_002.phpt b/ext/reflection/tests/ReflectionEnumBackedCase_getBackingValue_002.phpt
new file mode 100644
index 0000000000..7a942e31ad
--- /dev/null
+++ b/ext/reflection/tests/ReflectionEnumBackedCase_getBackingValue_002.phpt
@@ -0,0 +1,15 @@
+--TEST--
+ReflectionEnumBackedCase::getBackingValue() exception
+--FILE--
+<?php
+enum Inm:int {
+    case Foo=y;
+}
+try {
+    var_dump((new ReflectionEnumBackedCase(Inm::class,'Foo'))->getBackingValue());
+} catch (Error $e) {
+    echo $e->getMessage() . "\n";
+}
+?>
+--EXPECT--
+Undefined constant "y"
