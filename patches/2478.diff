commit 9d5e81d3b160cd6688a6c382e816d4b7db071f66
Author: James Almer <jamrial@gmail.com>
Date:   Wed Jul 5 10:28:03 2017 -0300

    Revert "x86/sbrdsp: remove unnecessary sign extend instruction in apply_noise_main"
    
    This reverts commit 24bb7db4037876c5722b0eecf7412502e7225634.
    
    noise has to after all be sign extended, not zero extended, on tests
    other than checkasm.
    Fixes most aac tests broken by the now reverted commit.

diff --git a/libavcodec/x86/sbrdsp.asm b/libavcodec/x86/sbrdsp.asm
index 51680f048b..62bbe512ec 100644
--- a/libavcodec/x86/sbrdsp.asm
+++ b/libavcodec/x86/sbrdsp.asm
@@ -378,49 +378,50 @@ cglobal sbr_hf_apply_noise_3, 5,5+NREGS+UNIX64,8, Y,s_m,q_filt,noise,kx,m_max
 apply_noise_main:
 %if ARCH_X86_64 == 0 || WIN64
     mov       kxd, m_maxm
     DEFINE_ARGS Y, s_m, q_filt, noise, count
 %else
     DEFINE_ARGS Y, s_m, q_filt, noise, kx, count
 %endif
-    dec    noised
+    movsxdifnidn    noiseq, noised
+    dec    noiseq
     shl    countd, 2
 %ifdef PIC
     lea NOISE_TABLE, [sbr_noise_table]
 %endif
     lea        Yq, [Yq + 2*countq]
     add      s_mq, countq
     add   q_filtq, countq
     shl    noiseq, 3
     pxor       m5, m5
     neg    countq
 .loop:
     mova       m1, [q_filtq + countq]
     movu       m3, [noiseq + NOISE_TABLE + 1*mmsize]
     movu       m4, [noiseq + NOISE_TABLE + 2*mmsize]
     add    noiseq, 2*mmsize
     and    noiseq, 0x1ff<<3
     punpckhdq  m2, m1, m1
     punpckldq  m1, m1
     mulps      m1, m3 ; m2 = q_filt[m] * ff_sbr_noise_table[noise]
     mulps      m2, m4 ; m2 = q_filt[m] * ff_sbr_noise_table[noise]
     mova       m3, [s_mq + countq]
     ; TODO: replace by a vpermd in AVX2
     punpckhdq  m4, m3, m3
     punpckldq  m3, m3
     pcmpeqd    m6, m3, m5 ; m6 == 0
     pcmpeqd    m7, m4, m5 ; m7 == 0
     mulps      m3, m0 ; s_m[m] * phi_sign
     mulps      m4, m0 ; s_m[m] * phi_sign
     pand       m1, m6
     pand       m2, m7
     movu       m6, [Yq + 2*countq]
     movu       m7, [Yq + 2*countq + mmsize]
     addps      m3, m1
     addps      m4, m2
     addps      m6, m3
     addps      m7, m4
     movu    [Yq + 2*countq], m6
     movu    [Yq + 2*countq + mmsize], m7
     add    countq, mmsize
     jl      .loop
     RET
