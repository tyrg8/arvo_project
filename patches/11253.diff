commit 39976b99178eaa4862c43eaf00959f2653a01a6f
Author: Toms Atteka <cpp.code.lv@gmail.com>
Date:   Fri Jan 18 03:18:58 2019 -0800

    ofpbuf: Fix arithmetic error in ofpbuf_insert().
    
    memmove byte count was calculated incorrectly as ofpbuf_put_uninit
    is increasing b->size by n.
    
    This patch fixes it by reducing byte count by n.
    
    Reported-at: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=12296
    Signed-off-by: Toms Atteka <cpp.code.lv@gmail.com>
    Signed-off-by: Ben Pfaff <blp@ovn.org>

diff --git a/lib/ofpbuf.c b/lib/ofpbuf.c
index 9c0623688..1dab25b64 100644
--- a/lib/ofpbuf.c
+++ b/lib/ofpbuf.c
@@ -469,16 +469,16 @@ void
 ofpbuf_insert(struct ofpbuf *b, size_t offset, const void *data, size_t n)
 {
     if (offset < b->size) {
-        ofpbuf_put_uninit(b, n);
+        ofpbuf_put_uninit(b, n); /* b->size gets increased. */
         memmove((char *) b->data + offset + n, (char *) b->data + offset,
-                b->size - offset);
+                b->size - offset - n);
         memcpy((char *) b->data + offset, data, n);
     } else {
         ovs_assert(offset == b->size);
         ofpbuf_put(b, data, n);
     }
 }
 
 /* Returns the data in 'b' as a block of malloc()'d memory and frees the buffer
  * within 'b'.  (If 'b' itself was dynamically allocated, e.g. with
  * ofpbuf_new(), then it should still be freed with, e.g., ofpbuf_delete().) */
