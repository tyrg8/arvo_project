commit 772558119af66269742fe4dcc45ec6000a5a6ea7
Author: Bet4 <0xbet4@gmail.com>
Date:   Thu Jul 8 20:43:00 2021 +0800

    Add missing constants in rust bindings (#1423)
    
    * Update arm64.rs
    
    * Update mips.rs

diff --git a/bindings/rust/src/arm64.rs b/bindings/rust/src/arm64.rs
index 7c24368b..8b7c1254 100644
--- a/bindings/rust/src/arm64.rs
+++ b/bindings/rust/src/arm64.rs
@@ -1,268 +1,321 @@
+#![allow(non_camel_case_types)]
+
 // ARM64 registers
 #[repr(C)]
 #[derive(PartialEq, Debug, Clone, Copy)]
 pub enum RegisterARM64 {
     INVALID = 0,
-    FP = 1,
-    LR = 2,
+    X29 = 1,
+    X30 = 2,
     NZCV = 3,
     SP = 4,
     WSP = 5,
     WZR = 6,
     XZR = 7,
     B0 = 8,
     B1 = 9,
     B2 = 10,
     B3 = 11,
     B4 = 12,
     B5 = 13,
     B6 = 14,
     B7 = 15,
     B8 = 16,
     B9 = 17,
     B10 = 18,
     B11 = 19,
     B12 = 20,
     B13 = 21,
     B14 = 22,
     B15 = 23,
     B16 = 24,
     B17 = 25,
     B18 = 26,
     B19 = 27,
     B20 = 28,
     B21 = 29,
     B22 = 30,
     B23 = 31,
     B24 = 32,
     B25 = 33,
     B26 = 34,
     B27 = 35,
     B28 = 36,
     B29 = 37,
     B30 = 38,
     B31 = 39,
     D0 = 40,
     D1 = 41,
     D2 = 42,
     D3 = 43,
     D4 = 44,
     D5 = 45,
     D6 = 46,
     D7 = 47,
     D8 = 48,
     D9 = 49,
     D10 = 50,
     D11 = 51,
     D12 = 52,
     D13 = 53,
     D14 = 54,
     D15 = 55,
     D16 = 56,
     D17 = 57,
     D18 = 58,
     D19 = 59,
     D20 = 60,
     D21 = 61,
     D22 = 62,
     D23 = 63,
     D24 = 64,
     D25 = 65,
     D26 = 66,
     D27 = 67,
     D28 = 68,
     D29 = 69,
     D30 = 70,
     D31 = 71,
     H0 = 72,
     H1 = 73,
     H2 = 74,
     H3 = 75,
     H4 = 76,
     H5 = 77,
     H6 = 78,
     H7 = 79,
     H8 = 80,
     H9 = 81,
     H10 = 82,
     H11 = 83,
     H12 = 84,
     H13 = 85,
     H14 = 86,
     H15 = 87,
     H16 = 88,
     H17 = 89,
     H18 = 90,
     H19 = 91,
     H20 = 92,
     H21 = 93,
     H22 = 94,
     H23 = 95,
     H24 = 96,
     H25 = 97,
     H26 = 98,
     H27 = 99,
     H28 = 100,
     H29 = 101,
     H30 = 102,
     H31 = 103,
     Q0 = 104,
     Q1 = 105,
     Q2 = 106,
     Q3 = 107,
     Q4 = 108,
     Q5 = 109,
     Q6 = 110,
     Q7 = 111,
     Q8 = 112,
     Q9 = 113,
     Q10 = 114,
     Q11 = 115,
     Q12 = 116,
     Q13 = 117,
     Q14 = 118,
     Q15 = 119,
     Q16 = 120,
     Q17 = 121,
     Q18 = 122,
     Q19 = 123,
     Q20 = 124,
     Q21 = 125,
     Q22 = 126,
     Q23 = 127,
     Q24 = 128,
     Q25 = 129,
     Q26 = 130,
     Q27 = 131,
     Q28 = 132,
     Q29 = 133,
     Q30 = 134,
     Q31 = 135,
     S0 = 136,
     S1 = 137,
     S2 = 138,
     S3 = 139,
     S4 = 140,
     S5 = 141,
     S6 = 142,
     S7 = 143,
     S8 = 144,
     S9 = 145,
     S10 = 146,
     S11 = 147,
     S12 = 148,
     S13 = 149,
     S14 = 150,
     S15 = 151,
     S16 = 152,
     S17 = 153,
     S18 = 154,
     S19 = 155,
     S20 = 156,
     S21 = 157,
     S22 = 158,
     S23 = 159,
     S24 = 160,
     S25 = 161,
     S26 = 162,
     S27 = 163,
     S28 = 164,
     S29 = 165,
     S30 = 166,
     S31 = 167,
     W0 = 168,
     W1 = 169,
     W2 = 170,
     W3 = 171,
     W4 = 172,
     W5 = 173,
     W6 = 174,
     W7 = 175,
     W8 = 176,
     W9 = 177,
     W10 = 178,
     W11 = 179,
     W12 = 180,
     W13 = 181,
     W14 = 182,
     W15 = 183,
     W16 = 184,
     W17 = 185,
     W18 = 186,
     W19 = 187,
     W20 = 188,
     W21 = 189,
     W22 = 190,
     W23 = 191,
     W24 = 192,
     W25 = 193,
     W26 = 194,
     W27 = 195,
     W28 = 196,
     W29 = 197,
     W30 = 198,
     X0 = 199,
     X1 = 200,
     X2 = 201,
     X3 = 202,
     X4 = 203,
     X5 = 204,
     X6 = 205,
     X7 = 206,
     X8 = 207,
     X9 = 208,
     X10 = 209,
     X11 = 210,
     X12 = 211,
     X13 = 212,
     X14 = 213,
     X15 = 214,
-    IP1 = 215,
-    IP0 = 216,
+    X16 = 215,
+    X17 = 216,
     X18 = 217,
     X19 = 218,
     X20 = 219,
     X21 = 220,
     X22 = 221,
     X23 = 222,
     X24 = 223,
     X25 = 224,
     X26 = 225,
     X27 = 226,
     X28 = 227,
     V0 = 228,
     V1 = 229,
     V2 = 230,
     V3 = 231,
     V4 = 232,
     V5 = 233,
     V6 = 234,
     V7 = 235,
     V8 = 236,
     V9 = 237,
     V10 = 238,
     V11 = 239,
     V12 = 240,
     V13 = 241,
     V14 = 242,
     V15 = 243,
     V16 = 244,
     V17 = 245,
     V18 = 246,
     V19 = 247,
     V20 = 248,
     V21 = 249,
     V22 = 250,
     V23 = 251,
     V24 = 252,
     V25 = 253,
     V26 = 254,
     V27 = 255,
     V28 = 256,
     V29 = 257,
     V30 = 258,
     V31 = 259,
 
     // pseudo registers
     PC = 260,
+    CPACR_EL1 = 261,
+
+    // thread registers
+    TPIDR_EL0 = 262,
+    TPIDRRO_EL0 = 263,
+    TPIDR_EL1 = 264,
+    PSTATE = 265,
+
+    // exception link registers
+    ELR_EL0 = 266,
+    ELR_EL1 = 267,
+    ELR_EL2 = 268,
+    ELR_EL3 = 269,
+
+    // stack pointers registers
+    SP_EL0 = 270,
+    SP_EL1 = 271,
+    SP_EL2 = 272,
+    SP_EL3 = 273,
+
+    // other CP15 registers
+    TTBR0_EL1 = 274,
+    TTBR1_EL1 = 275,
+    ESR_EL0 = 276,
+    ESR_EL1 = 277,
+    ESR_EL2 = 278,
+    ESR_EL3 = 279,
+    FAR_EL0 = 280,
+    FAR_EL1 = 281,
+    FAR_EL2 = 282,
+    FAR_EL3 = 283,
+    PAR_EL1 = 284,
+    MAIR_EL1 = 285,
+    VBAR_EL0 = 286,
+    VBAR_EL1 = 287,
+    VBAR_EL2 = 288,
+    VBAR_EL3 = 289,
+    ENDING = 290,
+
+    // alias registers
+    // (assoc) IP0 = 215,
+    // (assoc) IP1 = 216,
+    // (assoc) FP = 1,
+    // (assoc) LR = 2,
+}
+
+impl RegisterARM64 {
+    pub const IP0: RegisterARM64 = RegisterARM64::X16;
+    pub const IP1: RegisterARM64 = RegisterARM64::X17;
+    pub const FP: RegisterARM64 = RegisterARM64::X29;
+    pub const LR: RegisterARM64 = RegisterARM64::X30;
 }
diff --git a/bindings/rust/src/mips.rs b/bindings/rust/src/mips.rs
index e6204664..a1b590c6 100644
--- a/bindings/rust/src/mips.rs
+++ b/bindings/rust/src/mips.rs
@@ -3,154 +3,244 @@
 // MIPS registers
 #[repr(C)]
 #[derive(PartialEq, Debug, Clone, Copy)]
 pub enum RegisterMIPS {
     INVALID = 0,
 
     // General purpose registers
     PC = 1,
-    ZERO = 2,
-    AT = 3,
-    V0 = 4,
-    V1 = 5,
-    A0 = 6,
-    A1 = 7,
-    A2 = 8,
-    A3 = 9,
-    T0 = 10,
-    T1 = 11,
-    T2 = 12,
-    T3 = 13,
-    T4 = 14,
-    T5 = 15,
-    T6 = 16,
-    T7 = 17,
-    S0 = 18,
-    S1 = 19,
-    S2 = 20,
-    S3 = 21,
-    S4 = 22,
-    S5 = 23,
-    S6 = 24,
-    S7 = 25,
-    T8 = 26,
-    T9 = 27,
-    K0 = 28,
-    K1 = 29,
-    GP = 30,
-    SP = 31,
-    FP = 32,
-    RA = 33,
+    GPR0 = 2,
+    GPR1 = 3,
+    GPR2 = 4,
+    GPR3 = 5,
+    GPR4 = 6,
+    GPR5 = 7,
+    GPR6 = 8,
+    GPR7 = 9,
+    GPR8 = 10,
+    GPR9 = 11,
+    GPR10 = 12,
+    GPR11 = 13,
+    GPR12 = 14,
+    GPR13 = 15,
+    GPR14 = 16,
+    GPR15 = 17,
+    GPR16 = 18,
+    GPR17 = 19,
+    GPR18 = 20,
+    GPR19 = 21,
+    GPR20 = 22,
+    GPR21 = 23,
+    GPR22 = 24,
+    GPR23 = 25,
+    GPR24 = 26,
+    GPR25 = 27,
+    GPR26 = 28,
+    GPR27 = 29,
+    GPR28 = 30,
+    GPR29 = 31,
+    GPR30 = 32,
+    GPR31 = 33,
 
     // DSP registers
     DSPCCOND = 34,
     DSPCARRY = 35,
     DSPEFI = 36,
     DSPOUTFLAG = 37,
     DSPOUTFLAG16_19 = 38,
     DSPOUTFLAG20 = 39,
     DSPOUTFLAG21 = 40,
     DSPOUTFLAG22 = 41,
     DSPOUTFLAG23 = 42,
     DSPPOS = 43,
     DSPSCOUNT = 44,
 
     // ACC registers
     AC0 = 45,
     AC1 = 46,
     AC2 = 47,
     AC3 = 48,
 
     // COP registers
     CC0 = 49,
     CC1 = 50,
     CC2 = 51,
     CC3 = 52,
     CC4 = 53,
     CC5 = 54,
     CC6 = 55,
     CC7 = 56,
 
     // FPU registers
     F0 = 57,
     F1 = 58,
     F2 = 59,
     F3 = 60,
     F4 = 61,
     F5 = 62,
     F6 = 63,
     F7 = 64,
     F8 = 65,
     F9 = 66,
     F10 = 67,
     F11 = 68,
     F12 = 69,
     F13 = 70,
     F14 = 71,
     F15 = 72,
     F16 = 73,
     F17 = 74,
     F18 = 75,
     F19 = 76,
     F20 = 77,
     F21 = 78,
     F22 = 79,
     F23 = 80,
     F24 = 81,
     F25 = 82,
     F26 = 83,
     F27 = 84,
     F28 = 85,
     F29 = 86,
     F30 = 87,
     F31 = 88,
     FCC0 = 89,
     FCC1 = 90,
     FCC2 = 91,
     FCC3 = 92,
     FCC4 = 93,
     FCC5 = 94,
     FCC6 = 95,
     FCC7 = 96,
 
     // AFPR128
     W0 = 97,
     W1 = 98,
     W2 = 99,
     W3 = 100,
     W4 = 101,
     W5 = 102,
     W6 = 103,
     W7 = 104,
     W8 = 105,
     W9 = 106,
     W10 = 107,
     W11 = 108,
     W12 = 109,
     W13 = 110,
     W14 = 111,
     W15 = 112,
     W16 = 113,
     W17 = 114,
     W18 = 115,
     W19 = 116,
     W20 = 117,
     W21 = 118,
     W22 = 119,
     W23 = 120,
     W24 = 121,
     W25 = 122,
     W26 = 123,
     W27 = 124,
     W28 = 125,
     W29 = 126,
     W30 = 127,
     W31 = 128,
     HI = 129,
     LO = 130,
     P0 = 131,
     P1 = 132,
     P2 = 133,
     MPL0 = 134,
     MPL1 = 135,
     MPL2 = 136,
+    CP0_CONFIG3 = 137,
+    CP0_USERLOCAL = 138,
+    ENDING = 139,
+
+    // alias registers
+    // (assoc) ZERO = 2,
+    // (assoc) AT = 3,
+    // (assoc) V0 = 4,
+    // (assoc) V1 = 5,
+    // (assoc) A0 = 6,
+    // (assoc) A1 = 7,
+    // (assoc) A2 = 8,
+    // (assoc) A3 = 9,
+    // (assoc) T0 = 10,
+    // (assoc) T1 = 11,
+    // (assoc) T2 = 12,
+    // (assoc) T3 = 13,
+    // (assoc) T4 = 14,
+    // (assoc) T5 = 15,
+    // (assoc) T6 = 16,
+    // (assoc) T7 = 17,
+    // (assoc) S0 = 18,
+    // (assoc) S1 = 19,
+    // (assoc) S2 = 20,
+    // (assoc) S3 = 21,
+    // (assoc) S4 = 22,
+    // (assoc) S5 = 23,
+    // (assoc) S6 = 24,
+    // (assoc) S7 = 25,
+    // (assoc) T8 = 26,
+    // (assoc) T9 = 27,
+    // (assoc) K0 = 28,
+    // (assoc) K1 = 29,
+    // (assoc) GP = 30,
+    // (assoc) SP = 31,
+    // (assoc) FP = 32,
+    // (assoc) S8 = 32,
+    // (assoc) RA = 33,
+    // (assoc) HI0 = 45,
+    // (assoc) HI1 = 46,
+    // (assoc) HI2 = 47,
+    // (assoc) HI3 = 48,
+    // (assoc) LO0 = 45,
+    // (assoc) LO1 = 46,
+    // (assoc) LO2 = 47,
+    // (assoc) LO3 = 48,
+}
+
+impl RegisterMIPS {
+    pub const ZERO: RegisterMIPS = RegisterMIPS::GPR0;
+    pub const AT: RegisterMIPS = RegisterMIPS::GPR1;
+    pub const V0: RegisterMIPS = RegisterMIPS::GPR2;
+    pub const V1: RegisterMIPS = RegisterMIPS::GPR3;
+    pub const A0: RegisterMIPS = RegisterMIPS::GPR4;
+    pub const A1: RegisterMIPS = RegisterMIPS::GPR5;
+    pub const A2: RegisterMIPS = RegisterMIPS::GPR6;
+    pub const A3: RegisterMIPS = RegisterMIPS::GPR7;
+    pub const T0: RegisterMIPS = RegisterMIPS::GPR8;
+    pub const T1: RegisterMIPS = RegisterMIPS::GPR9;
+    pub const T2: RegisterMIPS = RegisterMIPS::GPR10;
+    pub const T3: RegisterMIPS = RegisterMIPS::GPR11;
+    pub const T4: RegisterMIPS = RegisterMIPS::GPR12;
+    pub const T5: RegisterMIPS = RegisterMIPS::GPR13;
+    pub const T6: RegisterMIPS = RegisterMIPS::GPR14;
+    pub const T7: RegisterMIPS = RegisterMIPS::GPR15;
+    pub const S0: RegisterMIPS = RegisterMIPS::GPR16;
+    pub const S1: RegisterMIPS = RegisterMIPS::GPR17;
+    pub const S2: RegisterMIPS = RegisterMIPS::GPR18;
+    pub const S3: RegisterMIPS = RegisterMIPS::GPR19;
+    pub const S4: RegisterMIPS = RegisterMIPS::GPR20;
+    pub const S5: RegisterMIPS = RegisterMIPS::GPR21;
+    pub const S6: RegisterMIPS = RegisterMIPS::GPR22;
+    pub const S7: RegisterMIPS = RegisterMIPS::GPR23;
+    pub const T8: RegisterMIPS = RegisterMIPS::GPR24;
+    pub const T9: RegisterMIPS = RegisterMIPS::GPR25;
+    pub const K0: RegisterMIPS = RegisterMIPS::GPR26;
+    pub const K1: RegisterMIPS = RegisterMIPS::GPR27;
+    pub const GP: RegisterMIPS = RegisterMIPS::GPR28;
+    pub const SP: RegisterMIPS = RegisterMIPS::GPR29;
+    pub const FP: RegisterMIPS = RegisterMIPS::GPR30;
+    pub const S8: RegisterMIPS = RegisterMIPS::GPR30;
+    pub const RA: RegisterMIPS = RegisterMIPS::GPR31;
+    pub const HI0: RegisterMIPS = RegisterMIPS::AC0;
+    pub const HI1: RegisterMIPS = RegisterMIPS::AC1;
+    pub const HI2: RegisterMIPS = RegisterMIPS::AC2;
+    pub const HI3: RegisterMIPS = RegisterMIPS::AC3;
+    pub const LO0: RegisterMIPS = RegisterMIPS::AC0;
+    pub const LO1: RegisterMIPS = RegisterMIPS::AC1;
+    pub const LO2: RegisterMIPS = RegisterMIPS::AC2;
+    pub const LO3: RegisterMIPS = RegisterMIPS::AC3;
 }
