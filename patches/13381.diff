commit a3548df579617e737b075be4a88591e68195e115
Author: Jonathan Hui <jonhui@google.com>
Date:   Mon Feb 25 18:36:36 2019 -0800

    [network-data] add check for prefix length (#3626)

diff --git a/src/core/common/encoding.hpp b/src/core/common/encoding.hpp
index bf35678a0..786c8aa4f 100644
--- a/src/core/common/encoding.hpp
+++ b/src/core/common/encoding.hpp
@@ -68,15 +68,15 @@ inline uint64_t Swap64(uint64_t v)
 inline uint32_t Reverse32(uint32_t v)
 {
     v = ((v & 0x55555555) << 1) | ((v & 0xaaaaaaaa) >> 1);
     v = ((v & 0x33333333) << 2) | ((v & 0xcccccccc) >> 2);
     v = ((v & 0x0f0f0f0f) << 4) | ((v & 0xf0f0f0f0) >> 4);
     v = ((v & 0x00ff00ff) << 8) | ((v & 0xff00ff00) >> 8);
     v = ((v & 0x0000ffff) << 16) | ((v & 0xffff0000) >> 16);
 
     return v;
 }
 
-#define BitVectorBytes(x) (((x) + (CHAR_BIT - 1)) / CHAR_BIT)
+#define BitVectorBytes(x) static_cast<uint8_t>(((x) + (CHAR_BIT - 1)) / CHAR_BIT)
 
 namespace BigEndian {
 
diff --git a/src/core/thread/network_data_tlvs.hpp b/src/core/thread/network_data_tlvs.hpp
index 26de34ad2..4de23f10f 100644
--- a/src/core/thread/network_data_tlvs.hpp
+++ b/src/core/thread/network_data_tlvs.hpp
@@ -318,89 +318,90 @@ class PrefixTlv : public NetworkDataTlv
 {
 public:
     /**
      * This method initializes the TLV.
      *
      * @param[in]  aDomainId      The Domain ID.
      * @param[in]  aPrefixLength  The Prefix Length
      * @param[in]  aPrefix        A pointer to the prefix.
      *
      */
     void Init(uint8_t aDomainId, uint8_t aPrefixLength, const uint8_t *aPrefix)
     {
         NetworkDataTlv::Init();
         SetType(kTypePrefix);
         mDomainId     = aDomainId;
         mPrefixLength = aPrefixLength;
         memcpy(GetPrefix(), aPrefix, BitVectorBytes(aPrefixLength));
         SetSubTlvsLength(0);
     }
 
     /**
      * This method indicates whether or not the TLV appears to be well-formed.
      *
      * @retval TRUE   If the TLV appears to be well-formed.
      * @retval FALSE  If the TLV does not appear to be well-formed.
      *
      */
     bool IsValid(void) const
     {
         return ((GetLength() >= sizeof(*this) - sizeof(NetworkDataTlv)) &&
-                (GetLength() >= BitVectorBytes(mPrefixLength) + sizeof(*this) - sizeof(NetworkDataTlv)));
+                (GetLength() >= BitVectorBytes(mPrefixLength) + sizeof(*this) - sizeof(NetworkDataTlv)) &&
+                (BitVectorBytes(mPrefixLength) <= sizeof(Ip6::Address)));
     }
 
     /**
      * This method returns the Domain ID value.
      *
      * @returns The Domain ID value.
      *
      */
     uint8_t GetDomainId(void) const { return mDomainId; }
 
     /**
      * This method returns the Prefix Length value.
      *
      * @returns The Prefix Length value.
      *
      */
     uint8_t GetPrefixLength(void) const { return mPrefixLength; }
 
     /**
      * This method returns a pointer to the Prefix.
      *
      * @returns A pointer to the Prefix.
      *
      */
     uint8_t *GetPrefix(void) { return reinterpret_cast<uint8_t *>(this) + sizeof(*this); }
 
     /**
      * This method returns a pointer to the Sub-TLVs.
      *
      * @returns A pointer to the Sub-TLVs.
      *
      */
     NetworkDataTlv *GetSubTlvs(void)
     {
         return reinterpret_cast<NetworkDataTlv *>(GetPrefix() + BitVectorBytes(mPrefixLength));
     }
 
     /**
      * This method returns the Sub-TLVs length in bytes.
      *
      * @returns The Sub-TLVs length in bytes.
      *
      */
     uint8_t GetSubTlvsLength(void) const
     {
         return GetLength() - (sizeof(*this) - sizeof(NetworkDataTlv) + BitVectorBytes(mPrefixLength));
     }
 
     /**
      * This method sets the Sub-TLVs length in bytes.
      *
      * @param[in]  aLength  The Sub-TLVs length in bytes.
      *
      */
     void SetSubTlvsLength(uint8_t aLength)
     {
         SetLength(sizeof(*this) - sizeof(NetworkDataTlv) + BitVectorBytes(mPrefixLength) + aLength);
     }
