commit 2fb7cad53e051d21db0390b370bff07fcba9f2be
Author: Roman Lebedev <lebedev.ri@gmail.com>
Date:   Sun Nov 26 21:01:06 2017 +0300

    DngOpcodes::PixelOpcode: properly sanitize rowPitch, colPitch

diff --git a/src/librawspeed/common/DngOpcodes.cpp b/src/librawspeed/common/DngOpcodes.cpp
index c5082e3a..0f73677a 100644
--- a/src/librawspeed/common/DngOpcodes.cpp
+++ b/src/librawspeed/common/DngOpcodes.cpp
@@ -220,38 +220,41 @@ class DngOpcodes::PixelOpcode : public ROIOpcode {
 protected:
   explicit PixelOpcode(const RawImage& ri, ByteStream* bs) : ROIOpcode(ri, bs) {
     firstPlane = bs->getU32();
     planes = bs->getU32();
     rowPitch = bs->getU32();
     colPitch = bs->getU32();
 
+    const iRectangle2D& ROI = getRoi();
+
     if (planes == 0)
       ThrowRDE("Zero planes");
-    if (rowPitch == 0 || colPitch == 0)
+    if (rowPitch < 1 || rowPitch > static_cast<uint32>(ROI.getHeight()) ||
+        colPitch < 1 || colPitch > static_cast<uint32>(ROI.getWidth()))
       ThrowRDE("Invalid pitch");
   }
 
   void setup(const RawImage& ri) override {
     ROIOpcode::setup(ri);
     if (firstPlane + planes > ri->getCpp())
       ThrowRDE("Not that many planes in actual image");
   }
 
   // traverses the current ROI and applies the operation OP to each pixel,
   // i.e. each pixel value v is replaced by op(x, y, v), where x/y are the
   // coordinates of the pixel value v.
   template <typename T, typename OP> void applyOP(const RawImage& ri, OP op) {
     int cpp = ri->getCpp();
     const iRectangle2D& ROI = getRoi();
     for (auto y = ROI.getTop(); y < ROI.getBottom(); y += rowPitch) {
       auto* src = reinterpret_cast<T*>(ri->getData(0, y));
       // Add offset, so this is always first plane
       src += firstPlane;
       for (auto x = ROI.getLeft(); x < ROI.getRight(); x += colPitch) {
         for (auto p = 0U; p < planes; ++p)
           src[x * cpp + p] = op(x, y, src[x * cpp + p]);
       }
     }
   }
 };
 
 // ****************************************************************************
