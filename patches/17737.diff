commit 664f881008f40356c0502c8cc154e17e3c80e353
Author: Nick Wellnhofer <wellnhofer@aevum.de>
Date:   Thu Sep 26 11:01:58 2019 +0200

    Fix use-after-free in xmlTextReaderFreeNodeList
    
    Recent commit 1fbcf40 caused a use-after-free read because it didn't
    account for the fact that xmlTextReaderFreeDoc frees entities before
    freeing entity references via xmlTextReaderFreeNodeList.
    
    Found by OSS-Fuzz.

diff --git a/xmlreader.c b/xmlreader.c
index 9229c18c..b505f16e 100644
--- a/xmlreader.c
+++ b/xmlreader.c
@@ -349,94 +349,94 @@ static void
 xmlTextReaderFreeNodeList(xmlTextReaderPtr reader, xmlNodePtr cur) {
     xmlNodePtr next;
     xmlNodePtr parent;
     xmlDictPtr dict;
     size_t depth = 0;
 
     if ((reader != NULL) && (reader->ctxt != NULL))
 	dict = reader->ctxt->dict;
     else
         dict = NULL;
     if (cur == NULL) return;
     if (cur->type == XML_NAMESPACE_DECL) {
 	xmlFreeNsList((xmlNsPtr) cur);
 	return;
     }
     if ((cur->type == XML_DOCUMENT_NODE) ||
 	(cur->type == XML_HTML_DOCUMENT_NODE)) {
 	xmlFreeDoc((xmlDocPtr) cur);
 	return;
     }
     while (1) {
-        while ((cur->children != NULL) &&
-               (cur->children->parent == cur) &&
-               (cur->type != XML_DTD_NODE) &&
-               (cur->type != XML_ENTITY_REF_NODE)) {
+        while ((cur->type != XML_DTD_NODE) &&
+               (cur->type != XML_ENTITY_REF_NODE) &&
+               (cur->children != NULL) &&
+               (cur->children->parent == cur)) {
             cur = cur->children;
             depth += 1;
         }
 
         next = cur->next;
         parent = cur->parent;
 
 	/* unroll to speed up freeing the document */
 	if (cur->type != XML_DTD_NODE) {
 
 	    if ((__xmlRegisterCallbacks) && (xmlDeregisterNodeDefaultValue))
 		xmlDeregisterNodeDefaultValue(cur);
 
 	    if (((cur->type == XML_ELEMENT_NODE) ||
 		 (cur->type == XML_XINCLUDE_START) ||
 		 (cur->type == XML_XINCLUDE_END)) &&
 		(cur->properties != NULL))
 		xmlTextReaderFreePropList(reader, cur->properties);
 	    if ((cur->content != (xmlChar *) &(cur->properties)) &&
 	        (cur->type != XML_ELEMENT_NODE) &&
 		(cur->type != XML_XINCLUDE_START) &&
 		(cur->type != XML_XINCLUDE_END) &&
 		(cur->type != XML_ENTITY_REF_NODE)) {
 		DICT_FREE(cur->content);
 	    }
 	    if (((cur->type == XML_ELEMENT_NODE) ||
 	         (cur->type == XML_XINCLUDE_START) ||
 		 (cur->type == XML_XINCLUDE_END)) &&
 		(cur->nsDef != NULL))
 		xmlFreeNsList(cur->nsDef);
 
 	    /*
 	     * we don't free element names here they are interned now
 	     */
 	    if ((cur->type != XML_TEXT_NODE) &&
 		(cur->type != XML_COMMENT_NODE))
 		DICT_FREE(cur->name);
 	    if (((cur->type == XML_ELEMENT_NODE) ||
 		 (cur->type == XML_TEXT_NODE)) &&
 	        (reader != NULL) && (reader->ctxt != NULL) &&
 		(reader->ctxt->freeElemsNr < 100)) {
 	        cur->next = reader->ctxt->freeElems;
 		reader->ctxt->freeElems = cur;
 		reader->ctxt->freeElemsNr++;
 	    } else {
 		xmlFree(cur);
 	    }
 	}
 
         if (next != NULL) {
 	    cur = next;
         } else {
             if ((depth == 0) || (parent == NULL))
                 break;
             depth -= 1;
             cur = parent;
             cur->children = NULL;
         }
     }
 }
 
 /**
  * xmlTextReaderFreeNode:
  * @reader:  the xmlTextReaderPtr used
  * @cur:  the node
  *
  * Free a node, this is a recursive behaviour, all the children are freed too.
  * This doesn't unlink the child from the list, use xmlUnlinkNode() first.
  */
