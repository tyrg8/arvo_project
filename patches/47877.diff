commit b7e30a13d4e4557b87f977b76a6bb5e3cbe5ac78
Author: Michael Niedermayer <michael@niedermayer.cc>
Date:   Thu Jun 9 22:36:00 2022 +0200

    avcodec/cdgraphics: limit scrolling to the line
    
    Fixes: out of array access
    Fixes: 47877/clusterfuzz-testcase-minimized-ffmpeg_AV_CODEC_ID_CDGRAPHICS_fuzzer-5690504626438144
    
    Found-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg
    Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

diff --git a/libavcodec/cdgraphics.c b/libavcodec/cdgraphics.c
index b851ec430b..73654019e6 100644
--- a/libavcodec/cdgraphics.c
+++ b/libavcodec/cdgraphics.c
@@ -203,61 +203,61 @@ static void cdg_fill_wrapper(int out_tl_x, int out_tl_y, uint8_t *out,
 static void cdg_scroll(CDGraphicsContext *cc, uint8_t *data,
                        AVFrame *new_frame, int roll_over)
 {
     int color;
     int hscmd, h_off, hinc, vscmd, v_off, vinc;
     int y;
     int stride   = cc->frame->linesize[0];
     uint8_t *in  = cc->frame->data[0];
     uint8_t *out = new_frame->data[0];
 
     color =  data[0] & 0x0F;
     hscmd = (data[1] & 0x30) >> 4;
     vscmd = (data[2] & 0x30) >> 4;
 
     h_off =  FFMIN(data[1] & 0x07, CDG_BORDER_WIDTH  - 1);
     v_off =  FFMIN(data[2] & 0x0F, CDG_BORDER_HEIGHT - 1);
 
     /// find the difference and save the offset for cdg_tile_block usage
     hinc = h_off - cc->hscroll;
     vinc = cc->vscroll - v_off;
     cc->hscroll = h_off;
     cc->vscroll = v_off;
 
     if (vscmd == UP)
         vinc -= 12;
     if (vscmd == DOWN)
         vinc += 12;
     if (hscmd == LEFT)
         hinc -= 6;
     if (hscmd == RIGHT)
         hinc += 6;
 
     if (!hinc && !vinc)
         return;
 
     memcpy(new_frame->data[1], cc->frame->data[1], CDG_PALETTE_SIZE * 4);
 
     for (y = FFMAX(0, vinc); y < FFMIN(CDG_FULL_HEIGHT + vinc, CDG_FULL_HEIGHT); y++)
         memcpy(out + FFMAX(0, hinc) + stride * y,
                in + FFMAX(0, hinc) - hinc + (y - vinc) * stride,
-               FFMIN(stride + hinc, stride));
+               FFABS(stride) - FFABS(hinc));
 
     if (vinc > 0)
         cdg_fill_wrapper(0, 0, out,
                          0, CDG_FULL_HEIGHT - vinc, in, color,
                          stride, vinc, stride, roll_over);
     else if (vinc < 0)
         cdg_fill_wrapper(0, CDG_FULL_HEIGHT + vinc, out,
                          0, 0, in, color,
                          stride, -1 * vinc, stride, roll_over);
 
     if (hinc > 0)
         cdg_fill_wrapper(0, 0, out,
                          CDG_FULL_WIDTH - hinc, 0, in, color,
                          hinc, CDG_FULL_HEIGHT, stride, roll_over);
     else if (hinc < 0)
         cdg_fill_wrapper(CDG_FULL_WIDTH + hinc, 0, out,
                          0, 0, in, color,
                          -1 * hinc, CDG_FULL_HEIGHT, stride, roll_over);
 
 }
