commit efd716de3f4c7616aedd5c449bf8d27d565d4ab6
Author: Ebrahim Byagowi <ebrahim@gnu.org>
Date:   Fri Jul 31 08:58:53 2020 +0430

    [cff] Check for scalars array resize result
    
    Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=24504

diff --git a/src/hb-cff2-interp-cs.hh b/src/hb-cff2-interp-cs.hh
index afbc4a7cb..332ece31c 100644
--- a/src/hb-cff2-interp-cs.hh
+++ b/src/hb-cff2-interp-cs.hh
@@ -79,116 +79,118 @@ typedef biased_subrs_t<CFF2Subrs>   cff2_biased_subrs_t;
 struct cff2_cs_interp_env_t : cs_interp_env_t<blend_arg_t, CFF2Subrs>
 {
   template <typename ACC>
   void init (const byte_str_t &str, ACC &acc, unsigned int fd,
 	     const int *coords_=nullptr, unsigned int num_coords_=0)
   {
     SUPER::init (str, acc.globalSubrs, acc.privateDicts[fd].localSubrs);
 
     coords = coords_;
     num_coords = num_coords_;
     varStore = acc.varStore;
     seen_blend = false;
     seen_vsindex_ = false;
     scalars.init ();
     do_blend = num_coords && coords && varStore->size;
     set_ivs (acc.privateDicts[fd].ivs);
   }
 
   void fini ()
   {
     scalars.fini ();
     SUPER::fini ();
   }
 
   op_code_t fetch_op ()
   {
     if (this->str_ref.avail ())
       return SUPER::fetch_op ();
 
     /* make up return or endchar op */
     if (this->callStack.is_empty ())
       return OpCode_endchar;
     else
       return OpCode_return;
   }
 
   const blend_arg_t& eval_arg (unsigned int i)
   {
     blend_arg_t  &arg = argStack[i];
     blend_arg (arg);
     return arg;
   }
 
   const blend_arg_t& pop_arg ()
   {
     blend_arg_t  &arg = argStack.pop ();
     blend_arg (arg);
     return arg;
   }
 
   void process_blend ()
   {
     if (!seen_blend)
     {
       region_count = varStore->varStore.get_region_index_count (get_ivs ());
       if (do_blend)
       {
-	scalars.resize (region_count);
-	varStore->varStore.get_scalars (get_ivs (), coords, num_coords,
-					&scalars[0], region_count);
+	if (unlikely (!scalars.resize (region_count)))
+	  set_error ();
+	else
+	  varStore->varStore.get_scalars (get_ivs (), coords, num_coords,
+					  &scalars[0], region_count);
       }
       seen_blend = true;
     }
   }
 
   void process_vsindex ()
   {
     unsigned int  index = argStack.pop_uint ();
     if (unlikely (seen_vsindex () || seen_blend))
     {
       set_error ();
     }
     else
     {
       set_ivs (index);
     }
     seen_vsindex_ = true;
   }
 
   unsigned int get_region_count () const { return region_count; }
   void	 set_region_count (unsigned int region_count_) { region_count = region_count_; }
   unsigned int get_ivs () const { return ivs; }
   void	 set_ivs (unsigned int ivs_) { ivs = ivs_; }
   bool	 seen_vsindex () const { return seen_vsindex_; }
 
   protected:
   void blend_arg (blend_arg_t &arg)
   {
     if (do_blend && arg.blending ())
     {
       if (likely (scalars.length == arg.deltas.length))
       {
 	double v = arg.to_real ();
 	for (unsigned int i = 0; i < scalars.length; i++)
 	{
 	  v += (double)scalars[i] * arg.deltas[i].to_real ();
 	}
 	arg.set_real (v);
 	arg.deltas.resize (0);
       }
     }
   }
 
   protected:
   const int     *coords;
   unsigned int  num_coords;
   const	 CFF2VariationStore *varStore;
   unsigned int  region_count;
   unsigned int  ivs;
   hb_vector_t<float>  scalars;
   bool	  do_blend;
   bool	  seen_vsindex_;
   bool	  seen_blend;
 
   typedef cs_interp_env_t<blend_arg_t, CFF2Subrs> SUPER;
 };
diff --git a/test/fuzzing/fonts/clusterfuzz-testcase-minimized-hb-draw-fuzzer-6231698648596480 b/test/fuzzing/fonts/clusterfuzz-testcase-minimized-hb-draw-fuzzer-6231698648596480
new file mode 100644
index 000000000..f27e9956c
Binary files /dev/null and b/test/fuzzing/fonts/clusterfuzz-testcase-minimized-hb-draw-fuzzer-6231698648596480 differ
