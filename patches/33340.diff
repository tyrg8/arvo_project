commit 4de8f6922a9be7d0a51a429e367283fd40031b26
Author: DRC <information@libjpeg-turbo.org>
Date:   Fri Apr 16 16:34:12 2021 -0500

    jdhuff.h: Fix ASan regression caused by 8fa70367
    
    The 0xFF is, in fact, necessary.

diff --git a/jdhuff.h b/jdhuff.h
index 60d8e8b0..cfa0b7f5 100644
--- a/jdhuff.h
+++ b/jdhuff.h
@@ -197,47 +197,47 @@ EXTERN(boolean) jpeg_fill_bit_buffer(bitread_working_state *state,
 #define HUFF_DECODE(result, state, htbl, failaction, slowlabel) { \
   register int nb, look; \
   if (bits_left < HUFF_LOOKAHEAD) { \
     if (!jpeg_fill_bit_buffer(&state, get_buffer, bits_left, 0)) \
       { failaction; } \
     get_buffer = state.get_buffer;  bits_left = state.bits_left; \
     if (bits_left < HUFF_LOOKAHEAD) { \
       nb = 1;  goto slowlabel; \
     } \
   } \
   look = PEEK_BITS(HUFF_LOOKAHEAD); \
   if ((nb = (htbl->lookup[look] >> HUFF_LOOKAHEAD)) <= HUFF_LOOKAHEAD) { \
     DROP_BITS(nb); \
     result = htbl->lookup[look] & ((1 << HUFF_LOOKAHEAD) - 1); \
   } else { \
 slowlabel: \
     if ((result = \
          jpeg_huff_decode(&state, get_buffer, bits_left, htbl, nb)) < 0) \
       { failaction; } \
     get_buffer = state.get_buffer;  bits_left = state.bits_left; \
   } \
 }
 
 #define HUFF_DECODE_FAST(s, nb, htbl) \
   FILL_BIT_BUFFER_FAST; \
   s = PEEK_BITS(HUFF_LOOKAHEAD); \
   s = htbl->lookup[s]; \
   nb = s >> HUFF_LOOKAHEAD; \
   /* Pre-execute the common case of nb <= HUFF_LOOKAHEAD */ \
   DROP_BITS(nb); \
   s = s & ((1 << HUFF_LOOKAHEAD) - 1); \
   if (nb > HUFF_LOOKAHEAD) { \
     /* Equivalent of jpeg_huff_decode() */ \
     /* Don't use GET_BITS() here because we don't want to modify bits_left */ \
     s = (get_buffer >> bits_left) & ((1 << (nb)) - 1); \
     while (s > htbl->maxcode[nb]) { \
       s <<= 1; \
       s |= GET_BITS(1); \
       nb++; \
     } \
     if (nb > 16) \
       s = 0; \
     else \
-      s = htbl->pub->huffval[(int)(s + htbl->valoffset[nb])]; \
+      s = htbl->pub->huffval[(int)(s + htbl->valoffset[nb]) & 0xFF]; \
   }
 
 /* Out-of-line case for Huffman code fetching */
