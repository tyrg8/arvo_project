commit b7db73963a64861c488246235789c037d27d4dbc
Author: Cristy <urban-warrior@imagemagick.org>
Date:   Wed Feb 7 16:20:18 2018 -0500

    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=6070

diff --git a/MagickCore/string.c b/MagickCore/string.c
index b065ccd6e..9a0853dab 100644
--- a/MagickCore/string.c
+++ b/MagickCore/string.c
@@ -187,88 +187,90 @@ MagickExport StringInfo *AcquireStringInfo(const size_t length)
   string_info=AcquireStringInfoContainer();
   string_info->length=length;
   if (~string_info->length >= (MagickPathExtent-1))
     string_info->datum=(unsigned char *) AcquireQuantumMemory(
       string_info->length+MagickPathExtent,sizeof(*string_info->datum));
   if (string_info->datum == (unsigned char *) NULL)
     ThrowFatalException(ResourceLimitFatalError,"MemoryAllocationFailed");
   return(string_info);
 }
 
 /*
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %                                                                             %
 %                                                                             %
 %                                                                             %
 %   B l o b T o S t r i n g I n f o                                           %
 %                                                                             %
 %                                                                             %
 %                                                                             %
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %
 %  BlobToStringInfo() returns the contents of a blob as a StringInfo structure
 %  with MagickPathExtent extra space.
 %
 %  The format of the BlobToStringInfo method is:
 %
 %      StringInfo *BlobToStringInfo(const void *blob,const size_t length)
 %
 %  A description of each parameter follows:
 %
 %    o blob: the blob.
 %
 %    o length: the length of the blob.
 %
 */
 MagickExport StringInfo *BlobToStringInfo(const void *blob,const size_t length)
 {
   StringInfo
     *string_info;
 
   if (~length < MagickPathExtent)
     ThrowFatalException(ResourceLimitFatalError,"MemoryAllocationFailed");
   string_info=AcquireStringInfoContainer();
   string_info->length=length;
   string_info->datum=(unsigned char *) AcquireQuantumMemory(length+
     MagickPathExtent,sizeof(*string_info->datum));
   if (string_info->datum == (unsigned char *) NULL)
     {
       string_info=DestroyStringInfo(string_info);
       return((StringInfo *) NULL);
     }
   if (blob != (const void *) NULL)
     (void) memcpy(string_info->datum,blob,length);
+  else
+    (void) memset(string_info->datum,0,length);
   return(string_info);
 }
 
 /*
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %                                                                             %
 %                                                                             %
 %                                                                             %
 %   C l o n e S t r i n g                                                     %
 %                                                                             %
 %                                                                             %
 %                                                                             %
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %
 %  CloneString() replaces or frees the destination string to make it
 %  a clone of the input string plus MagickPathExtent more space so the string 
 %  may be worked on.
 %
 %  If source is a NULL pointer the destination string will be freed and set to
 %  a NULL pointer.  A pointer to the stored in the destination is also returned.
 %
 %  When finished the non-NULL string should be freed using DestoryString()
 %  or using CloneString() with a NULL pointed for the source.
 %
 %  The format of the CloneString method is:
 %
 %      char *CloneString(char **destination,const char *source)
 %
 %  A description of each parameter follows:
 %
 %    o destination:  A pointer to a character string.
 %
 %    o source: A character string.
 %
 */
