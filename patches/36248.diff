commit 692e6e0594ab861566d70a4ceadbfa5f22234e97
Author: Cristy <mikayla-grace@urban-warrior.org>
Date:   Fri Jul 16 22:17:35 2021 -0400

    cosmetic

diff --git a/coders/webp.c b/coders/webp.c
index d00ed53d7..9719310cc 100644
--- a/coders/webp.c
+++ b/coders/webp.c
@@ -789,73 +789,72 @@ static const char * WebPErrorCodeMessage(WebPEncodingError error_code)
 static MagickBooleanType WriteSingleWEBPPicture(const ImageInfo *image_info,
   Image *image,const WebPConfig *configure,WebPPicture *picture,
   MemoryInfo **memory_info,ExceptionInfo *exception)
 {
   MagickBooleanType
     status;
 
   uint32_t
     *magick_restrict q;
 
   ssize_t
     y;
 
 #if WEBP_ENCODER_ABI_VERSION >= 0x0100
   picture->progress_hook=WebPEncodeProgress;
   picture->user_data=(void *) image;
 #endif
   picture->width=(int) image->columns;
   picture->height=(int) image->rows;
   picture->argb_stride=(int) image->columns;
   picture->use_argb=1;
 
   /*
     Allocate memory for pixels.
   */
   (void) TransformImageColorspace(image,sRGBColorspace,exception);
   *memory_info=AcquireVirtualMemory(image->columns,image->rows*
     sizeof(*(picture->argb)));
 
   if (*memory_info == (MemoryInfo *) NULL)
     ThrowWriterException(ResourceLimitError,"MemoryAllocationFailed");
   picture->argb=(uint32_t *) GetVirtualMemoryBlob(*memory_info);
   /*
     Convert image to WebP raster pixels.
   */
   status=MagickFalse;
   q=picture->argb;
   for (y=0; y < (ssize_t) image->rows; y++)
   {
     const Quantum
       *magick_restrict p;
 
     ssize_t
       x;
 
     p=GetVirtualPixels(image,0,y,image->columns,1,exception);
     if (p == (const Quantum *) NULL)
       break;
     for (x=0; x < (ssize_t) image->columns; x++)
     {
       *q++=(uint32_t) (image->alpha_trait != UndefinedPixelTrait ? (uint32_t)
         ScaleQuantumToChar(GetPixelAlpha(image,p)) << 24 : 0xff000000) |
         ((uint32_t) ScaleQuantumToChar(GetPixelRed(image,p)) << 16) |
         ((uint32_t) ScaleQuantumToChar(GetPixelGreen(image,p)) << 8) |
         ((uint32_t) ScaleQuantumToChar(GetPixelBlue(image,p)));
       p+=GetPixelChannels(image);
     }
     status=SetImageProgress(image,SaveImageTag,(MagickOffsetType) y,
       image->rows);
     if (status == MagickFalse)
       break;
   }
 
   if (status != MagickFalse)
     status=(MagickBooleanType) WebPEncode(configure,picture);
 
   if (status == MagickFalse)
     (void) ThrowMagickException(exception,GetMagickModule(),CorruptImageError,
-      WebPErrorCodeMessage(picture->error_code),"`%s'",
-      image->filename);
+      WebPErrorCodeMessage(picture->error_code),"`%s'",image->filename);
 
   return(status);
 }
