commit 00fdbca4f6a5c4623b9c4838da502cccce8aaa74
Author: Behdad Esfahbod <behdad@behdad.org>
Date:   Sat Oct 20 12:04:51 2018 -0700

    [aat] Fix LookupFormat10 sanitize
    
    Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=11060

diff --git a/src/hb-aat-layout-common.hh b/src/hb-aat-layout-common.hh
index 60724c180..a99ccaf9f 100644
--- a/src/hb-aat-layout-common.hh
+++ b/src/hb-aat-layout-common.hh
@@ -250,42 +250,42 @@ template <typename T>
 struct LookupFormat10
 {
   friend struct Lookup<T>;
 
   private:
   inline const typename T::type get_value_or_null (hb_codepoint_t glyph_id) const
   {
     if (!(firstGlyph <= glyph_id && glyph_id - firstGlyph < glyphCount))
       return Null(T);
 
     const HBUINT8 *p = &valueArrayZ[(glyph_id - firstGlyph) * valueSize];
 
     unsigned int v = 0;
     unsigned int count = valueSize;
     for (unsigned int i = 0; i < count; i++)
       v = (v << 8) | *p++;
 
     return v;
   }
 
   inline bool sanitize (hb_sanitize_context_t *c) const
   {
     TRACE_SANITIZE (this);
     return_trace (c->check_struct (this) &&
 		  valueSize <= 4 &&
 		  valueArrayZ.sanitize (c, glyphCount * valueSize));
   }
 
   protected:
   HBUINT16	format;		/* Format identifier--format = 8 */
   HBUINT16	valueSize;	/* Byte size of each value. */
   GlyphID	firstGlyph;	/* First glyph index included in the trimmed array. */
   HBUINT16	glyphCount;	/* Total number of glyphs (equivalent to the last
 				 * glyph minus the value of firstGlyph plus 1). */
   UnsizedArrayOf<HBUINT8>
 		valueArrayZ;	/* The lookup values (indexed by the glyph index
 				 * minus the value of firstGlyph). */
   public:
-  DEFINE_SIZE_ARRAY (6, valueArrayZ);
+  DEFINE_SIZE_ARRAY (8, valueArrayZ);
 };
 
 template <typename T>
