commit b352e21fc6e697dbb9d060b4bc17d76d04b73e64
Author: Aurelien David <aurelien.david@telecom-paristech.fr>
Date:   Mon Jan 29 14:25:23 2024 +0100

    fix mem leak un m3u8
    
    oss-fuzz issue 66286

diff --git a/src/media_tools/m3u8.c b/src/media_tools/m3u8.c
index d0aba5fee..2603ddb46 100644
--- a/src/media_tools/m3u8.c
+++ b/src/media_tools/m3u8.c
@@ -319,60 +319,60 @@ static void reset_attributes(s_accumulated_attributes *attributes)
 static char** extract_attributes(const char *name, const char *line, const int num_attributes) {
 	int sz, i, curr_attribute, start;
 	char **ret;
 	u8 quote = 0;
 	int len = (u32) strlen(line);
 	start = (u32) strlen(name);
 	if (len <= start)
 		return NULL;
 	if (!safe_start_equals(name, line))
 		return NULL;
 	ret = gf_calloc((num_attributes + 1), sizeof(char*));
 	if (!ret) return NULL;
 	if (!num_attributes) return ret;
-	
+
 	curr_attribute = 0;
 	for (i=start; i<=len; i++) {
 		if (line[i] == '\0' || (!quote && line[i] == ',')  || (line[i] == quote)) {
 			u32 spaces = 0;
 			sz = i - start;
 			if (quote && (line[i] == quote))
 				sz++;
 
 			while (line[start+spaces] == ' ')
 				spaces++;
 			if ((sz-spaces<=1) && (line[start+spaces]==',')) {
 				//start = i+1;
 			} else {
 				if (!strncmp(&line[start+spaces], "\t", sz-spaces) || !strncmp(&line[start+spaces], "\n", sz-spaces)) {
 				} else {
 					ret[curr_attribute] = gf_calloc( (1+sz-spaces), sizeof(char));
 					strncpy(ret[curr_attribute], &(line[start+spaces]), sz-spaces);
 					curr_attribute++;
 					if (curr_attribute >= num_attributes)
 						break;
 				}
 			}
 			start = i+1;
 
 			if (start == len) {
 				return ret;
 			}
 		}
 		if ((line[i] == '\'') || (line[i] == '"'))  {
 			if (quote) {
 				quote = 0;
 			} else {
 				quote = line[i];
 			}
 		}
 	}
 	if (curr_attribute == 0) {
 		gf_free(ret);
 		return NULL;
 	}
 	return ret;
 }
 
 #define M3U8_COMPATIBILITY_VERSION(v) \
 	if (v > attributes->compatibility_version) \
 		attributes->compatibility_version = v;
@@ -1096,15 +1096,16 @@ typedef struct
 static void reset_attribs(s_accumulated_attributes *attribs, Bool is_cleanup)
 {
 	attribs->width = attribs->height = 0;
 #define RST_ATTR(_name) if (attribs->_name) { gf_free(attribs->_name); attribs->_name = NULL; }
 
 	RST_ATTR(codecs)
 	RST_ATTR(group.audio)
 	RST_ATTR(language)
 	RST_ATTR(title)
-	if (is_cleanup)
+	if (is_cleanup) {
 		RST_ATTR(key_url)
-
+		RST_ATTR(name)
+	}
 	RST_ATTR(init_url)
 	RST_ATTR(mediaURL)
 }
