commit 1a906274a66dd58bf81836db1306902d4a7dc185
Author: Nathan Hjelm <hjelmn@google.com>
Date:   Sun Aug 8 09:22:31 2021 -0600

    darwin: fix typo
    
    Signed-off-by: Nathan Hjelm <hjelmn@google.com>

diff --git a/libusb/os/darwin_usb.c b/libusb/os/darwin_usb.c
index b6cc3592..2f444718 100644
--- a/libusb/os/darwin_usb.c
+++ b/libusb/os/darwin_usb.c
@@ -2427,45 +2427,45 @@ static int darwin_reload_device (struct libusb_device_handle *dev_handle) {
 static int darwin_detach_kernel_driver (struct libusb_device_handle *dev_handle, uint8_t interface) {
   UNUSED(interface);
   struct darwin_cached_device *dpriv = DARWIN_CACHED_DEVICE(dev_handle->dev);
   IOReturn kresult;
   enum libusb_error err;
   struct libusb_context *ctx = HANDLE_CTX (dev_handle);
 
   if (HAS_CAPTURE_DEVICE()) {
   } else {
     return LIBUSB_ERROR_NOT_SUPPORTED;
   }
 
   if (dpriv->capture_count == 0) {
     usbi_dbg (ctx, "attempting to detach kernel driver from device");
 
     if (darwin_has_capture_entitlements ()) {
       /* request authorization */
       kresult = IOServiceAuthorize (dpriv->service, kIOServiceInteractionAllowed);
       if (kresult != kIOReturnSuccess) {
         usbi_warn (ctx, "IOServiceAuthorize: %s", darwin_error_str(kresult));
         return darwin_to_libusb (kresult);
       }
 
       /* we need start() to be called again for authorization status to refresh */
       err = darwin_reload_device (dev_handle);
       if (err != LIBUSB_SUCCESS) {
         return err;
       }
     } else {
       usbi_info (ctx, "no capture entitlements. may not be able to detach the kernel driver for this device");
       if (0 != geteuid()) {
-        usbi_warn (ctx, "USB device capture requires either an entitlement (com.apple.vm.device-access) or root privelege");
+        usbi_warn (ctx, "USB device capture requires either an entitlement (com.apple.vm.device-access) or root privilege");
         return LIBUSB_ERROR_ACCESS;
       }
     }
 
     /* reset device to release existing drivers */
     err = darwin_reenumerate_device (dev_handle, true);
     if (err != LIBUSB_SUCCESS) {
       return err;
     }
   }
   dpriv->capture_count++;
   return LIBUSB_SUCCESS;
 }
diff --git a/libusb/version_nano.h b/libusb/version_nano.h
index f5aaa732..1a8e712b 100644
--- a/libusb/version_nano.h
+++ b/libusb/version_nano.h
@@ -1 +1 @@
-#define LIBUSB_NANO 11649
+#define LIBUSB_NANO 11650
