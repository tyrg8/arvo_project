commit 3753c84ea46eeb86a0daf8da8c088342515b10dd
Author: Roman Lebedev <lebedev.ri@gmail.com>
Date:   Mon Nov 11 20:10:39 2019 +0300

    PhaseOneDecompressor::prepareStrips(): fixup per-row slice validation
    
    Ugh, not sure what i was thinking. That of course does not guarantee
    that in the middle we will have monothonically increasing values.

diff --git a/src/librawspeed/decompressors/PhaseOneDecompressor.cpp b/src/librawspeed/decompressors/PhaseOneDecompressor.cpp
index d0a530d3..508cea2d 100644
--- a/src/librawspeed/decompressors/PhaseOneDecompressor.cpp
+++ b/src/librawspeed/decompressors/PhaseOneDecompressor.cpp
@@ -57,24 +57,24 @@ PhaseOneDecompressor::PhaseOneDecompressor(const RawImage& img,
 void PhaseOneDecompressor::prepareStrips() {
   // The 'strips' vector should contain exactly one element per row of image.
 
   // If the length is different, then the 'strips' vector is clearly incorrect.
   if (strips.size() != static_cast<decltype(strips)::size_type>(mRaw->dim.y)) {
     ThrowRDE("Height (%u) vs strip count %zu mismatch", mRaw->dim.y,
              strips.size());
   }
 
   // Now, the strips in 'strips' vector aren't in order.
   // The 'decltype(strips)::value_type::n' is the row number of a strip.
   // We need to make sure that we have every row (0..mRaw->dim.y-1), once.
-  // For that, let's sort them to have monothonically increasting `n`,
-  // and then simply check that the edges are `0` and `mRaw->dim.y-1`.
+  // For that, first let's sort them to have monothonically increasting `n`.
   // This will also serialize the per-line outputting.
   std::sort(
       strips.begin(), strips.end(),
       [](const PhaseOneStrip& a, const PhaseOneStrip& b) { return a.n < b.n; });
-
-  if (strips.front().n != 0 || strips.back().n != (mRaw->dim.y - 1))
-    ThrowRDE("Strips validation issue.");
+  // And now ensure that slice number matches the slice's row.
+  for (decltype(strips)::size_type i = 0; i < strips.size(); ++i)
+    if (static_cast<decltype(strips)::size_type>(strips[i].n) != i)
+      ThrowRDE("Strips validation issue.");
   // All good.
 }
 
