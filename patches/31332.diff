commit 260cd3394d45bd51f2002936a63401419658ecd7
Author: dtldarek <dtl+github@google.com>
Date:   Wed Aug 25 15:02:38 2021 +0200

    Fix buffer overflow on input found with fuzzying (in c-string format):
    "\n# h1\nc  hh##e2ked\n\n A | rong__ ___strong \u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\n# h1\nh# #2\n### h3\n#### h4\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\\\n##### h5\n#*#####\u0000\n6"

diff --git a/src/md4c.c b/src/md4c.c
index 2864010..3565ddf 100644
--- a/src/md4c.c
+++ b/src/md4c.c
@@ -5647,55 +5647,56 @@ static int
 md_is_container_mark(MD_CTX* ctx, unsigned indent, OFF beg, OFF* p_end, MD_CONTAINER* p_container)
 {
     OFF off = beg;
     OFF max_end;
 
     if(off >= ctx->size  ||  indent >= ctx->code_indent_offset)
         return FALSE;
 
     /* Check for block quote mark. */
     if(CH(off) == _T('>')) {
         off++;
         p_container->ch = _T('>');
         p_container->is_loose = FALSE;
         p_container->is_task = FALSE;
         p_container->mark_indent = indent;
         p_container->contents_indent = indent + 1;
         *p_end = off;
         return TRUE;
     }
 
     /* Check for list item bullet mark. */
     if(ISANYOF(off, _T("-+*"))  &&  (off+1 >= ctx->size || ISBLANK(off+1) || ISNEWLINE(off+1))) {
         p_container->ch = CH(off);
         p_container->is_loose = FALSE;
         p_container->is_task = FALSE;
         p_container->mark_indent = indent;
         p_container->contents_indent = indent + 1;
         *p_end = off+1;
         return TRUE;
     }
 
     /* Check for ordered list item marks. */
     max_end = off + 9;
     if(max_end > ctx->size)
         max_end = ctx->size;
     p_container->start = 0;
     while(off < max_end  &&  ISDIGIT(off)) {
         p_container->start = p_container->start * 10 + CH(off) - _T('0');
         off++;
     }
     if(off > beg  &&
+       off < ctx->size  &&
        (CH(off) == _T('.') || CH(off) == _T(')'))  &&
        (off+1 >= ctx->size || ISBLANK(off+1) || ISNEWLINE(off+1)))
     {
         p_container->ch = CH(off);
         p_container->is_loose = FALSE;
         p_container->is_task = FALSE;
         p_container->mark_indent = indent;
         p_container->contents_indent = indent + off - beg + 1;
         *p_end = off+1;
         return TRUE;
     }
 
     return FALSE;
 }
