commit 0bf76154f1bb15aa2fc361eb725977313f103a58
Author: Behdad Esfahbod <behdad@behdad.org>
Date:   Wed Nov 7 19:11:43 2018 -0500

    [fuzzing] Take whatever text we can

diff --git a/test/fuzzing/hb-shape-fuzzer.cc b/test/fuzzing/hb-shape-fuzzer.cc
index 70ad08b45..5723db90c 100644
--- a/test/fuzzing/hb-shape-fuzzer.cc
+++ b/test/fuzzing/hb-shape-fuzzer.cc
@@ -10,36 +10,38 @@
 extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)
 {
   hb_blob_t *blob = hb_blob_create ((const char *)data, size,
 				    HB_MEMORY_MODE_READONLY, NULL, NULL);
   hb_face_t *face = hb_face_create (blob, 0);
   hb_font_t *font = hb_font_create (face);
   hb_ot_font_set_funcs (font);
   hb_font_set_scale (font, 12, 12);
 
   {
     const char text[] = "ABCDEXYZ123@_%&)*$!";
     hb_buffer_t *buffer = hb_buffer_create ();
     hb_buffer_add_utf8 (buffer, text, -1, 0, -1);
     hb_buffer_guess_segment_properties (buffer);
     hb_shape (font, buffer, NULL, 0);
     hb_buffer_destroy (buffer);
   }
 
-  uint32_t text32[16];
-  if (size > sizeof (text32)) {
-    memcpy(text32, data + size - sizeof (text32), sizeof (text32));
-    hb_buffer_t *buffer = hb_buffer_create ();
-    hb_buffer_add_utf32 (buffer, text32, sizeof (text32) / sizeof (text32[0]), 0, -1);
-    hb_buffer_guess_segment_properties (buffer);
-    hb_shape (font, buffer, NULL, 0);
-    hb_buffer_destroy (buffer);
+  uint32_t text32[16] = {0};
+  unsigned int len = sizeof (text32);
+  if (size < len)
+    len = size;
+  memcpy(text32, data + size - len, len);
 
-    /* Misc calls on face. */
-    test_face (face, text32[15]);
-  }
+  hb_buffer_t *buffer = hb_buffer_create ();
+  hb_buffer_add_utf32 (buffer, text32, sizeof (text32) / sizeof (text32[0]), 0, -1);
+  hb_buffer_guess_segment_properties (buffer);
+  hb_shape (font, buffer, NULL, 0);
+  hb_buffer_destroy (buffer);
+
+  /* Misc calls on face. */
+  test_face (face, text32[15]);
 
   hb_font_destroy (font);
   hb_face_destroy (face);
   hb_blob_destroy (blob);
   return 0;
 }
