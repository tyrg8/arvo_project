commit 37ca81137af2273686fc6d7d87827bdabd6bf234
Author: Martijn van Beurden <mvanb1@gmail.com>
Date:   Wed Mar 6 16:56:09 2024 +0100

    Refind import cuesheet op after appending seekpoints (#677)
    
    This fixes a heap-use-after-free. The free was part of a realloc,
    and the cuesheet op handle was still pointing to the old
    allocation
    
    Credit: Oss-Fuzz
    Issue: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=61292

diff --git a/src/metaflac/options.c b/src/metaflac/options.c
index 1b4b6f62..a78f7c57 100644
--- a/src/metaflac/options.c
+++ b/src/metaflac/options.c
@@ -163,99 +163,102 @@ void init_options(CommandLineOptions *options)
 FLAC__bool parse_options(int argc, char *argv[], CommandLineOptions *options)
 {
 	int ret;
 	int option_index = 1;
 	FLAC__bool had_error = false;
 
 	while ((ret = share__getopt_long(argc, argv, "", long_options_, &option_index)) != -1) {
 		switch (ret) {
 			case 0:
 				had_error |= !parse_option(option_index, share__optarg, options);
 				break;
 			case '?':
 			case ':':
 				had_error = true;
 				break;
 			default:
 				FLAC__ASSERT(0);
 				break;
 		}
 	}
 
 	if(options->prefix_with_filename == 2)
 		options->prefix_with_filename = (argc - share__optind > 1);
 
 	if(share__optind >= argc && !options->show_long_help && !options->show_version) {
 		flac_fprintf(stderr,"ERROR: you must specify at least one FLAC file;\n");
 		flac_fprintf(stderr,"       metaflac cannot be used as a pipe\n");
 		had_error = true;
 	}
 
 	options->num_files = argc - share__optind;
 
 	if(options->num_files > 0) {
 		unsigned i = 0;
 		if(0 == (options->filenames = safe_malloc_mul_2op_(sizeof(char*), /*times*/options->num_files)))
 			die("out of memory allocating space for file names list");
 		while(share__optind < argc)
 			options->filenames[i++] = local_strdup(argv[share__optind++]);
 	}
 
 	if(options->args.checks.num_major_ops > 0) {
 		if(options->args.checks.num_major_ops > 1) {
 			flac_fprintf(stderr, "ERROR: you may only specify one major operation at a time\n");
 			had_error = true;
 		}
 		else if(options->args.checks.num_shorthand_ops > 0) {
 			flac_fprintf(stderr, "ERROR: you may not mix shorthand and major operations\n");
 			had_error = true;
 		}
 	}
 
 	/* check for only one FLAC file used with certain options */
 	if(!had_error && options->num_files > 1) {
 		if(0 != find_shorthand_operation(options, OP__IMPORT_CUESHEET_FROM)) {
 			flac_fprintf(stderr, "ERROR: you may only specify one FLAC file when using '--import-cuesheet-from'\n");
 			had_error = true;
 		}
 		if(0 != find_shorthand_operation(options, OP__EXPORT_CUESHEET_TO)) {
 			flac_fprintf(stderr, "ERROR: you may only specify one FLAC file when using '--export-cuesheet-to'\n");
 			had_error = true;
 		}
 		if(0 != find_shorthand_operation(options, OP__EXPORT_PICTURE_TO)) {
 			flac_fprintf(stderr, "ERROR: you may only specify one FLAC file when using '--export-picture-to'\n");
 			had_error = true;
 		}
 		if(
 			0 != find_shorthand_operation(options, OP__IMPORT_VC_FROM) &&
 			0 == strcmp(find_shorthand_operation(options, OP__IMPORT_VC_FROM)->argument.filename.value, "-")
 		) {
 			flac_fprintf(stderr, "ERROR: you may only specify one FLAC file when using '--import-tags-from=-'\n");
 			had_error = true;
 		}
 	}
 
 	if(options->args.checks.has_block_type && options->args.checks.has_except_block_type) {
 		flac_fprintf(stderr, "ERROR: you may not specify both '--block-type' and '--except-block-type'\n");
 		had_error = true;
 	}
 
 	if(had_error)
 		short_usage(0);
 
 	/*
 	 * We need to create an OP__ADD_SEEKPOINT operation if there is
 	 * not one already, and --import-cuesheet-from was specified but
 	 * --no-cued-seekpoints was not:
 	 */
 	if(options->cued_seekpoints) {
 		Operation *op = find_shorthand_operation(options, OP__IMPORT_CUESHEET_FROM);
 		if(0 != op) {
 			Operation *op2 = find_shorthand_operation(options, OP__ADD_SEEKPOINT);
-			if(0 == op2)
+			if(0 == op2) {
 				op2 = append_shorthand_operation(options, OP__ADD_SEEKPOINT);
+				/* Need to re-find op, because the appending might have caused realloc */
+				op = find_shorthand_operation(options, OP__IMPORT_CUESHEET_FROM);
+			}
 			op->argument.import_cuesheet_from.add_seekpoint_link = &(op2->argument.add_seekpoint);
 		}
 	}
 
 	return had_error;
 }
