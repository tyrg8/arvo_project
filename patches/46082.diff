commit 80d028109d3a55792f3bcfcb799292891409bdab
Author: DavidKorczynski <david@adalogics.com>
Date:   Mon Sep 5 15:14:36 2022 +0100

    ra_key: handle error case (#5997)
    
    flb_sds_create_len may fail and this needs to be handled.
    
    Fixes: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=46082
    
    Signed-off-by: David Korczynski <david@adalogics.com>

diff --git a/src/flb_ra_key.c b/src/flb_ra_key.c
index 613e02ce8..f167a7664 100644
--- a/src/flb_ra_key.c
+++ b/src/flb_ra_key.c
@@ -30,45 +30,50 @@
 /* Map msgpack object into flb_ra_value representation */
 static int msgpack_object_to_ra_value(msgpack_object o,
                                       struct flb_ra_value *result)
 {
     result->o = o;
 
     /* Compose result with found value */
     if (o.type == MSGPACK_OBJECT_BOOLEAN) {
         result->type = FLB_RA_BOOL;
         result->val.boolean = o.via.boolean;
         return 0;
     }
     else if (o.type == MSGPACK_OBJECT_POSITIVE_INTEGER ||
              o.type == MSGPACK_OBJECT_NEGATIVE_INTEGER) {
         result->type = FLB_RA_INT;
         result->val.i64 = o.via.i64;
         return 0;
     }
     else if (o.type == MSGPACK_OBJECT_FLOAT32 ||
              o.type == MSGPACK_OBJECT_FLOAT) {
         result->type = FLB_RA_FLOAT;
         result->val.f64 = o.via.f64;
         return 0;
     }
     else if (o.type == MSGPACK_OBJECT_STR) {
         result->type = FLB_RA_STRING;
         result->val.string = flb_sds_create_len((char *) o.via.str.ptr,
                                                 o.via.str.size);
+
+        /* Handle cases where flb_sds_create_len fails */
+        if (result->val.string == NULL) {
+            return -1;
+        }
         return 0;
     }
     else if (o.type == MSGPACK_OBJECT_MAP) {
         /* return boolean 'true', just denoting the existence of the key */
         result->type = FLB_RA_BOOL;
         result->val.boolean = true;
         return 0;
     }
     else if (o.type == MSGPACK_OBJECT_NIL) {
         result->type = FLB_RA_NULL;
         return 0;
     }
 
     return -1;
 }
 
 /* Return the entry position of key/val in the map */
