commit 9eace34cbadef14980af15c4d43b012a29c2ae56
Author: Henrik Gramner <gramner@twoorioles.com>
Date:   Fri Jul 7 01:56:10 2023 +0200

    x86: Fix misaligned loads in high bit-depth pal_pred SSSE3 asm
    
    Regression introduced in 72e9c7c.

diff --git a/src/x86/ipred16_sse.asm b/src/x86/ipred16_sse.asm
index 74c1d68..5a311b1 100644
--- a/src/x86/ipred16_sse.asm
+++ b/src/x86/ipred16_sse.asm
@@ -3967,137 +3967,137 @@ cglobal ipred_cfl_ac_444_16bpc, 3, 7, 6, ac, ypx, stride, wpad, hpad, w, h
 cglobal pal_pred_16bpc, 4, 5, 6, dst, stride, pal, idx, w, h
 %define base r2-pal_pred_16bpc_ssse3_table
 %if ARCH_X86_32
     %define              hd  r2d
 %endif
     mova                 m4, [palq]
     LEA                  r2, pal_pred_16bpc_ssse3_table
     tzcnt                wd, wm
     pshufb               m4, [base+pal_pred_shuf]
     movsxd               wq, [r2+wq*4]
     pshufd               m5, m4, q1032
     add                  wq, r2
     movifnidn            hd, hm
     jmp                  wq
 .w4:
     movq                 m0, [idxq]
     add                idxq, 8
     psrlw                m1, m0, 4
     punpcklbw            m0, m1
     pshufb               m1, m4, m0
     pshufb               m2, m5, m0
     punpcklbw            m0, m1, m2
     punpckhbw            m1, m2
     movq   [dstq+strideq*0], m0
     movhps [dstq+strideq*1], m0
     lea                dstq, [dstq+strideq*2]
     movq   [dstq+strideq*0], m1
     movhps [dstq+strideq*1], m1
     lea                dstq, [dstq+strideq*2]
     sub                  hd, 4
     jg .w4
     RET
 .w8:
-    mova                 m3, [idxq]
+    movu                 m3, [idxq]
     add                idxq, 16
     psrlw                m1, m3, 4
     punpcklbw            m0, m3, m1
     punpckhbw            m3, m1
     pshufb               m1, m4, m0
     pshufb               m2, m5, m0
     punpcklbw            m0, m1, m2
     punpckhbw            m1, m2
     mova   [dstq+strideq*0], m0
     mova   [dstq+strideq*1], m1
     lea                dstq, [dstq+strideq*2]
     pshufb               m1, m4, m3
     pshufb               m2, m5, m3
     punpcklbw            m0, m1, m2
     punpckhbw            m1, m2
     mova   [dstq+strideq*0], m0
     mova   [dstq+strideq*1], m1
     lea                dstq, [dstq+strideq*2]
     sub                  hd, 4
     jg .w8
     RET
 .w16:
-    mova                 m3, [idxq]
+    movu                 m3, [idxq]
     add                idxq, 16
     psrlw                m1, m3, 4
     punpcklbw            m0, m3, m1
     punpckhbw            m3, m1
     pshufb               m1, m4, m0
     pshufb               m2, m5, m0
     punpcklbw            m0, m1, m2
     punpckhbw            m1, m2
     mova          [dstq+ 0], m0
     mova          [dstq+16], m1
     pshufb               m1, m4, m3
     pshufb               m2, m5, m3
     punpcklbw            m0, m1, m2
     punpckhbw            m1, m2
     mova  [dstq+strideq+ 0], m0
     mova  [dstq+strideq+16], m1
     lea                dstq, [dstq+strideq*2]
     sub                  hd, 2
     jg .w16
     RET
 .w32:
-    mova                 m3, [idxq]
+    movu                 m3, [idxq]
     add                idxq, 16
     psrlw                m1, m3, 4
     punpcklbw            m0, m3, m1
     punpckhbw            m3, m1
     pshufb               m1, m4, m0
     pshufb               m2, m5, m0
     punpcklbw            m0, m1, m2
     punpckhbw            m1, m2
     mova        [dstq+16*0], m0
     mova        [dstq+16*1], m1
     pshufb               m1, m4, m3
     pshufb               m2, m5, m3
     punpcklbw            m0, m1, m2
     punpckhbw            m1, m2
     mova        [dstq+16*2], m0
     mova        [dstq+16*3], m1
     add                dstq, strideq
     dec                  hd
     jg .w32
     RET
 .w64:
-    mova                 m3, [idxq+16*0]
+    movu                 m3, [idxq+16*0]
     psrlw                m1, m3, 4
     punpcklbw            m0, m3, m1
     punpckhbw            m3, m1
     pshufb               m1, m4, m0
     pshufb               m2, m5, m0
     punpcklbw            m0, m1, m2
     punpckhbw            m1, m2
     mova        [dstq+16*0], m0
     mova        [dstq+16*1], m1
     pshufb               m1, m4, m3
     pshufb               m2, m5, m3
-    mova                 m3, [idxq+16*1]
+    movu                 m3, [idxq+16*1]
     add                idxq, 32
     punpcklbw            m0, m1, m2
     punpckhbw            m1, m2
     mova        [dstq+16*2], m0
     mova        [dstq+16*3], m1
     psrlw                m1, m3, 4
     punpcklbw            m0, m3, m1
     punpckhbw            m3, m1
     pshufb               m1, m4, m0
     pshufb               m2, m5, m0
     punpcklbw            m0, m1, m2
     punpckhbw            m1, m2
     mova        [dstq+16*4], m0
     mova        [dstq+16*5], m1
     pshufb               m1, m4, m3
     pshufb               m2, m5, m3
     punpcklbw            m0, m1, m2
     punpckhbw            m1, m2
     mova        [dstq+16*6], m0
     mova        [dstq+16*7], m1
     add                dstq, strideq
     dec                  hd
     jg .w64
     RET
