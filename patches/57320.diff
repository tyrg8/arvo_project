commit af6df3b9532ec88ef6e2a8cfa4b84f5ae7cdb06e
Author: Martijn van Beurden <mvanb1@gmail.com>
Date:   Thu May 4 14:58:48 2023 +0200

    Fix cuesheet parsing code skipping a digit
    
    The code parsing cuepoints of the form MM:SS.SS, which is only
    allowed for non-CDDA, had a bug where the first S of the above
    template was skipped. That meant that 00:12.34 was parsed as
    00:02.34. This is not covered in the test suite, but fuzzing
    stumbled on it as 00: as input made the parser skip the string-
    terminating nul.
    
    Credit: Oss-Fuzz
    Issue: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=57320

diff --git a/src/share/grabbag/cuesheet.c b/src/share/grabbag/cuesheet.c
index 40e5f930..f6300c67 100644
--- a/src/share/grabbag/cuesheet.c
+++ b/src/share/grabbag/cuesheet.c
@@ -163,41 +163,40 @@ static FLAC__int64 local__parse_msf_(const char *s, uint32_t sample_rate)
 /* accept minute:second syntax of '[0-9]+:[0-9][0-9]?{,.[0-9]+}', but second < 60, e.g. 0:0.0, 3:5, 15:31.731
  * return sample number or <0 for error
  * WATCHOUT: depending on the sample rate, the resulting sample number may be approximate with fractional seconds
  */
 static FLAC__int64 local__parse_ms_(const char *s, uint32_t sample_rate)
 {
 	FLAC__int64 ret, field;
 	double x;
 	char c, *end;
 
 	c = *s++;
 	if(c >= '0' && c <= '9')
 		field = (c - '0');
 	else
 		return -1;
 	while(':' != (c = *s++)) {
 		if(c >= '0' && c <= '9') {
 			if(field >= (INT64_MAX / 10))
 				return -1;
 			else
 				field = field * 10 + (c - '0');
 		}
 		else
 			return -1;
 	}
 
 	ret = field * 60 * sample_rate;
 
-	s++; /* skip the ':' */
 	if(strspn(s, "0123456789.") != strlen(s))
 		return -1;
 	x = strtod(s, &end);
 	if(*end || end == s)
 		return -1;
 	if(x < 0.0 || x >= 60.0)
 		return -1;
 
 	ret += (FLAC__int64)(x * sample_rate);
 
 	return ret;
 }
