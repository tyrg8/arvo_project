commit 5ccca7e45b802051e00e3398ecf036f86ba92843
Author: Yukihiro "Matz" Matsumoto <matz@ruby.or.jp>
Date:   Fri Oct 28 16:59:09 2022 +0900

    mruby-bigint/bigint.c (udiv): skip loop if xd<yd.

diff --git a/mrbgems/mruby-bigint/core/bigint.c b/mrbgems/mruby-bigint/core/bigint.c
index 5964d0279..1d3edf588 100644
--- a/mrbgems/mruby-bigint/core/bigint.c
+++ b/mrbgems/mruby-bigint/core/bigint.c
@@ -432,66 +432,68 @@ static void
 udiv(mrb_state *mrb, mpz_t *qq, mpz_t *rr, mpz_t *xx, mpz_t *yy)
 {
   /* simple cases */
   int cmp = ucmp(xx, yy);
   if (cmp == 0) {
     mpz_set_int(mrb, qq, 1);
     zero(rr);
     return;
   }
   else if (cmp < 0) {
     zero(qq);
     mpz_set(mrb, rr, xx);
     return;
   }
 
   mpz_t q, x, y;
   size_t i;
 
   mrb_assert(!uzero(yy));       /* divided by zero */
   mpz_init(mrb, &q);
   mpz_init(mrb, &x);
   mpz_init(mrb, &y);
   mpz_realloc(mrb, &x, xx->sz+1);
   size_t yd = digits(yy);
   size_t ns = lzb(yy->p[yd-1]);
   ulshift(mrb, &x, xx, ns);
   ulshift(mrb, &y, yy, ns);
   size_t xd = digits(&x);
   mpz_realloc(mrb, &q, xd);
   mp_dbl_limb z = y.p[yd-1];
-  for (size_t j=xd-yd;; j--) {
-    mp_dbl_limb_signed b=0;
-    mp_dbl_limb qhat;
-
-    if (j+yd == xd)
-      qhat = x.p[j+yd-1] / z;
-    else
-      qhat = (((mp_dbl_limb)x.p[j+yd] << DIG_SIZE) + x.p[j+yd-1]) / z;
-    if (qhat) {
-      for (i=0; i<yd; i++) {
-        mp_dbl_limb zz = qhat * y.p[i];
-        mp_dbl_limb_signed u = LOW(b)+x.p[i+j]-LOW(zz);
-        x.p[i+j] = LOW(u);
-        b = HIGH(b) - HIGH(zz) + HIGH(u);
+  if (xd>=yd) {
+    for (size_t j=xd-yd;; j--) {
+      mp_dbl_limb_signed b=0;
+      mp_dbl_limb qhat;
+
+      if (j+yd == xd)
+        qhat = x.p[j+yd-1] / z;
+      else
+        qhat = (((mp_dbl_limb)x.p[j+yd] << DIG_SIZE) + x.p[j+yd-1]) / z;
+      if (qhat) {
+        for (i=0; i<yd; i++) {
+          mp_dbl_limb zz = qhat * y.p[i];
+          mp_dbl_limb_signed u = LOW(b)+x.p[i+j]-LOW(zz);
+          x.p[i+j] = LOW(u);
+          b = HIGH(b) - HIGH(zz) + HIGH(u);
+        }
+        b += x.p[i+j];
       }
-      b += x.p[i+j];
-    }
-    for (; b!=0; qhat--) {
-      mp_dbl_limb c = 0;
-      for (i=0; i<yd; i++) {
-        c += (mp_dbl_limb)x.p[i+j] + (mp_dbl_limb)y.p[i];
-        x.p[i+j] = LOW(c);
-        c = HIGH(c);
+      for (; b!=0; qhat--) {
+        mp_dbl_limb c = 0;
+        for (i=0; i<yd; i++) {
+          c += (mp_dbl_limb)x.p[i+j] + (mp_dbl_limb)y.p[i];
+          x.p[i+j] = LOW(c);
+          c = HIGH(c);
+        }
+        b += c;
       }
-      b += c;
+      q.p[j] = (mp_limb)qhat;
+      if (j == 0) break;
     }
-    q.p[j] = (mp_limb)qhat;
-    if (j == 0) break;
   }
   x.sz = yy->sz;
   urshift(mrb, rr, &x, ns);
   trim(&q);
   mpz_move(mrb, qq, &q);
   mpz_clear(mrb, &x);
   mpz_clear(mrb, &y);
 }
