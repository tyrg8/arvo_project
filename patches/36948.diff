commit cc46dac3c0dd55b06c53206744db058f03c2b10a
Author: Joshua Haberman <jhaberman@gmail.com>
Date:   Mon Aug 9 11:39:30 2021 -0700

    [pe] Fixed bug on i386 where size_t addition could overflow.

diff --git a/src/pe.cc b/src/pe.cc
index 6326450..02824ba 100644
--- a/src/pe.cc
+++ b/src/pe.cc
@@ -100,46 +100,42 @@ class PeFile {
 bool PeFile::Initialize() {
   if (data_.size() < sizeof(dos_header_)) {
     return false;
   }
 
   memcpy(&dos_header_, data_.data(), sizeof(dos_header_));
 
   if (dos_header_.Magic != dos_magic) {
     // Not a PE file.
     return false;
   }
 
-  if ((dos_header_.AddressOfNewExeHeader + sizeof(pe_header)) > data_.size()) {
-    // Cannot fit the headers
-    return false;
-  }
-
-  memcpy(&pe_header_, data_.data() + dos_header_.AddressOfNewExeHeader,
-         sizeof(pe_header_));
+  string_view exe_header =
+      GetRegion(dos_header_.AddressOfNewExeHeader, sizeof(pe_header));
+  memcpy(&pe_header_, exe_header.data(), exe_header.size());
 
   if (!std::equal(pe_header_.signature, pe_header_.signature + sizeof(PE_Magic),
                   std::begin(PE_Magic))) {
     // Not a PE file.
     return false;
   }
 
   // TODO(mj): Parse PE header further to determine this
   is_64bit_ = false;
 
   section_count_ = pe_header_.NumberOfSections;
 
   const uint32_t sections_offset = dos_header_.AddressOfNewExeHeader +
                                    sizeof(pe_header) +
                                    pe_header_.SizeOfOptionalHeader;
 
   auto sections_size = CheckedMul(section_count_, sizeof(pe_section));
   if ((sections_offset + sections_size) > data_.size()) {
     // Cannot fit the headers
     return false;
   }
 
   header_region_ = GetRegion(0, sections_offset);
   section_headers_ = GetRegion(sections_offset, sections_size);
 
   return true;
 }
diff --git a/tests/testdata/fuzz_corpus/clusterfuzz-testcase-minimized-fuzz_target-4987539889979392 b/tests/testdata/fuzz_corpus/clusterfuzz-testcase-minimized-fuzz_target-4987539889979392
new file mode 100644
index 0000000..52ac840
--- /dev/null
+++ b/tests/testdata/fuzz_corpus/clusterfuzz-testcase-minimized-fuzz_target-4987539889979392
@@ -0,0 +1 @@
+MZ   ÿÿÿÿÿÿÿ  ÿÿÿÿÿÿÿÿÿ    ÿÿ          ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ ÿÿÿÿÿÿÿ
\ No newline at end of file
