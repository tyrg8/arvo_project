commit 949d38e6dc7330712b50697d7fe833eec85dede1
Author: itchyny <itchyny@cybozu.co.jp>
Date:   Thu Aug 3 23:19:52 2023 +0900

    Fix crash on numeric comparison (ref #2804) (#2818)

diff --git a/src/jv.c b/src/jv.c
index 3812777..933ed7b 100644
--- a/src/jv.c
+++ b/src/jv.c
@@ -525,30 +525,30 @@ void jv_tsd_dec_ctx_init() {
 static decContext* tsd_dec_ctx_get(pthread_key_t *key) {
 #ifndef WIN32
   pthread_once(&dec_ctx_once, jv_tsd_dec_ctx_init); // cannot fail
 #endif
   decContext *ctx = (decContext*)pthread_getspecific(*key);
   if (ctx) {
     return ctx;
   }
 
   ctx = malloc(sizeof(decContext));
   if (ctx) {
     if (key == &dec_ctx_key)
     {
       decContextDefault(ctx, DEC_INIT_BASE);
-      ctx->digits = DEC_MAX_DIGITS;
+      ctx->digits = DEC_MAX_DIGITS - 1;
       ctx->traps = 0; /*no errors*/
     }
     else if (key == &dec_ctx_dbl_key)
     {
       decContextDefault(ctx, DEC_INIT_DECIMAL64);
       // just to make sure we got this right
       assert(ctx->digits <= DEC_NUBMER_DOUBLE_PRECISION);
     }
     if (pthread_setspecific(*key, ctx) != 0) {
       fprintf(stderr, "error: cannot store thread specific data");
       abort();
     }
   }
   return ctx;
 }
diff --git a/tests/jq.test b/tests/jq.test
index 246da0f..3ba29ad 100644
--- a/tests/jq.test
+++ b/tests/jq.test
@@ -555,7 +555,11 @@ null
 1 / 1e-17
 null
 1e+17
 
+5E500000000>5E-5000000000
+null
+true
+
 25 % 7
 null
 4
