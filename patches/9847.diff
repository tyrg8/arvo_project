commit 473e039b48fd72660dd00f4b52a2880cc0dd5632
Author: Christos Zoulas <christos@zoulas.com>
Date:   Mon Aug 13 12:59:05 2018 +0000

    Avoid read out of bounds (found by oss-fuzz)

diff --git a/src/is_json.c b/src/is_json.c
index 059ba669..5d4e8b90 100644
--- a/src/is_json.c
+++ b/src/is_json.c
@@ -32,34 +32,34 @@
 #include "file.h"
 
 #ifndef lint
-FILE_RCSID("@(#)$File: is_json.c,v 1.5 2018/08/11 14:43:43 christos Exp $")
+FILE_RCSID("@(#)$File: is_json.c,v 1.6 2018/08/13 12:59:05 christos Exp $")
 #endif
 
 #include <string.h>
 #include "magic.h"
 #endif
 
 #ifdef DEBUG
 #include <stdio.h>
 #define DPRINTF(a, b, c)	\
     printf("%s [%.2x/%c] %.20s\n", (a), *(b), *(b), (const char *)(c))
 #else
 #define DPRINTF(a, b, c)	(void)0
 #endif
 
 #define JSON_ARRAY	0
 #define JSON_CONSTANT	1
 #define JSON_NUMBER	2
 #define JSON_OBJECT	3
 #define JSON_STRING	4
 #define JSON_MAX	5
 
 /*
  * if JSON_COUNT != 0:
  *	count all the objects, require that we have the whole data file
  * otherwise:
  *	stop if we find an object or an array
  */
 #ifndef JSON_COUNT
 #define JSON_COUNT 0
 #endif
@@ -195,42 +195,44 @@ static int
 json_parse_object(const unsigned char **ucp, const unsigned char *ue, 
 	size_t *st, size_t lvl)
 {
 	const unsigned char *uc = *ucp;
 	DPRINTF("Parse object: ", uc, *ucp);
 	while (uc < ue) {
 		uc = json_skip_space(uc, ue);
 		if (uc == ue)
 			goto out;
 		if (*uc++ != '"') {
 			DPRINTF("not string", uc, *ucp);
 			goto out;
 		}
 		DPRINTF("next field", uc, *ucp);
 		if (!json_parse_string(&uc, ue)) {
 			DPRINTF("not string", uc, *ucp);
 			goto out;
 		}
 		uc = json_skip_space(uc, ue);
 		if (uc == ue)
 			goto out;
 		if (*uc++ != ':') {
 			DPRINTF("not colon", uc, *ucp);
 			goto out;
 		}
 		if (!json_parse(&uc, ue, st, lvl + 1)) {
 			DPRINTF("not json", uc, *ucp);
 			goto out;
 		}
+		if (uc == ue)
+			goto out;
 		switch (*uc++) {
 		case ',':
 			continue;
 		case '}': /* { */
 			*ucp = uc;
 			DPRINTF("Good object: ", uc, *ucp);
 			return 1;
 		default:
 			*ucp = uc - 1;
 			DPRINTF("not more", uc, *ucp);
 			goto out;
 		}
 	}
