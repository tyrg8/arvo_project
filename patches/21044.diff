commit 6db645ceb7190735134d13deed846f61d0b0ed0e
Author: Even Rouault <even.rouault@spatialys.com>
Date:   Thu Mar 5 12:42:06 2020 +0100

    Internal libtiff: fix recent master fax3/fax4 regression. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=21044

diff --git a/gdal/frmts/gtiff/libtiff/tif_fax3.h b/gdal/frmts/gtiff/libtiff/tif_fax3.h
index f3073ef805..b8edc26ed3 100644
--- a/gdal/frmts/gtiff/libtiff/tif_fax3.h
+++ b/gdal/frmts/gtiff/libtiff/tif_fax3.h
@@ -367,164 +367,166 @@ eof1d:									\
     prematureEOF(a0);							\
     CLEANUP_RUNS();							\
     goto eoflab;							\
 done1d:									\
     CLEANUP_RUNS();							\
 } while (0)
 
 /*
  * Update the value of b1 using the array
  * of runs for the reference line.
  */
 #define CHECK_b1 do {							\
     if (pa != thisrun) while (b1 <= a0 && b1 < lastx) {			\
 	b1 += pb[0] + pb[1];						\
 	pb += 2;							\
     }									\
 } while (0)
 
 /*
  * Expand a row of 2D-encoded data.
  */
 #define EXPAND2D(eoflab) do {						\
     while (a0 < lastx) {						\
 	if (pa >= thisrun + sp->nruns) {				\
 		TIFFErrorExt(tif->tif_clientdata, module, "Buffer overflow at line %u of %s %u",	\
 		             sp->line, isTiled(tif) ? "tile" : "strip", isTiled(tif) ? tif->tif_curtile : tif->tif_curstrip);	\
 		break;					\
 	}									\
 	LOOKUP8(7, TIFFFaxMainTable, eof2d);				\
 	switch (TabEnt->State) {					\
 	case S_Pass:							\
 	    CHECK_b1;							\
 	    b1 += *pb++;						\
 	    RunLength += b1 - a0;					\
 	    a0 = b1;							\
 	    b1 += *pb++;						\
 	    break;							\
 	case S_Horiz:							\
 	    if ((pa-thisrun)&1) {					\
 		for (;;) {	/* black first */			\
 		    LOOKUP16(13, TIFFFaxBlackTable, eof2d);		\
 		    switch (TabEnt->State) {				\
 		    case S_TermB:					\
 			SETVALUE(TabEnt->Param);				\
 			goto doneWhite2da;				\
 		    case S_MakeUpB:					\
 		    case S_MakeUp:					\
 			a0 += TabEnt->Param;				\
 			RunLength += TabEnt->Param;			\
 			break;						\
 		    default:						\
 			goto badBlack2d;				\
 		    }							\
 		}							\
 	    doneWhite2da:;						\
 		for (;;) {	/* then white */			\
 		    LOOKUP16(12, TIFFFaxWhiteTable, eof2d);		\
 		    switch (TabEnt->State) {				\
 		    case S_TermW:					\
 			SETVALUE(TabEnt->Param);				\
 			goto doneBlack2da;				\
 		    case S_MakeUpW:					\
 		    case S_MakeUp:					\
 			a0 += TabEnt->Param;				\
 			RunLength += TabEnt->Param;			\
 			break;						\
 		    default:						\
 			goto badWhite2d;				\
 		    }							\
 		}							\
 	    doneBlack2da:;						\
 	    } else {							\
 		for (;;) {	/* white first */			\
 		    LOOKUP16(12, TIFFFaxWhiteTable, eof2d);		\
 		    switch (TabEnt->State) {				\
 		    case S_TermW:					\
 			SETVALUE(TabEnt->Param);				\
 			goto doneWhite2db;				\
 		    case S_MakeUpW:					\
 		    case S_MakeUp:					\
 			a0 += TabEnt->Param;				\
 			RunLength += TabEnt->Param;			\
 			break;						\
 		    default:						\
 			goto badWhite2d;				\
 		    }							\
 		}							\
 	    doneWhite2db:;						\
 		for (;;) {	/* then black */			\
 		    LOOKUP16(13, TIFFFaxBlackTable, eof2d);		\
 		    switch (TabEnt->State) {				\
 		    case S_TermB:					\
 			SETVALUE(TabEnt->Param);				\
 			goto doneBlack2db;				\
 		    case S_MakeUpB:					\
 		    case S_MakeUp:					\
 			a0 += TabEnt->Param;				\
 			RunLength += TabEnt->Param;			\
 			break;						\
 		    default:						\
 			goto badBlack2d;				\
 		    }							\
 		}							\
 	    doneBlack2db:;						\
 	    }								\
 	    CHECK_b1;							\
 	    break;							\
 	case S_V0:							\
 	    CHECK_b1;							\
 	    SETVALUE(b1 - a0);						\
 	    b1 += *pb++;						\
 	    break;							\
 	case S_VR:							\
 	    CHECK_b1;							\
 	    SETVALUE(b1 - a0 + TabEnt->Param);				\
 	    b1 += *pb++;						\
 	    break;							\
 	case S_VL:							\
 	    CHECK_b1;							\
 	    if (b1 < (int) (a0 + TabEnt->Param)) {			\
 		unexpected("VL", a0);				\
 		goto eol2d;						\
 	    }								\
 	    SETVALUE(b1 - a0 - TabEnt->Param);				\
 	    b1 -= *--pb;						\
 	    break;							\
 	case S_Ext:							\
 	    *pa++ = lastx - a0;						\
 	    extension(a0);						\
 	    goto eol2d;							\
 	case S_EOL:							\
 	    *pa++ = lastx - a0;						\
 	    NeedBits8(4,eof2d);						\
 	    if (GetBits(4))						\
 		unexpected("EOL", a0);					\
             ClrBits(4);                                                 \
 	    EOLcnt = 1;							\
 	    goto eol2d;							\
 	default:							\
 	badMain2d:							\
 	    unexpected("MainTable", a0);				\
 	    goto eol2d;							\
 	badBlack2d:							\
 	    unexpected("BlackTable", a0);				\
 	    goto eol2d;							\
 	badWhite2d:							\
 	    unexpected("WhiteTable", a0);				\
 	    goto eol2d;							\
 	eof2d:								\
 	    prematureEOF(a0);						\
-	    CLEANUP_RUNS();						\
+		if (pa < thisrun + sp->nruns) {	\
+		    CLEANUP_RUNS();					\
+		}								\
 	    goto eoflab;						\
 	}								\
     }									\
     if (RunLength) {							\
 	if (RunLength + a0 < lastx) {					\
 	    /* expect a final V0 */					\
 	    NeedBits8(1,eof2d);						\
 	    if (!GetBits(1))						\
 		goto badMain2d;						\
 	    ClrBits(1);							\
 	}								\
 	SETVALUE(0);							\
     }									\
