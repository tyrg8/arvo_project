commit 45c8663b92cc29eb330dbcc6c500fa798f05ae37
Author: Alan Modra <amodra@gmail.com>
Date:   Sat Aug 6 19:54:46 2022 +0930

    asan: heap buffer overflow in _bfd_error_handler
    
    On coff_slurp_symbol_table printing "unrecognized storage class"
    for a symbol error.  If the symbol name is the last string in its
    section and not terminated, we run off the end of the buffer.
    
            * coffgen.c (build_debug_section): Terminate the section with
            an extra 0.

diff --git a/bfd/coffgen.c b/bfd/coffgen.c
index 4d2b82e4a6f..90fba3b8554 100644
--- a/bfd/coffgen.c
+++ b/bfd/coffgen.c
@@ -1519,37 +1519,38 @@ static char *
 build_debug_section (bfd *abfd, asection ** sect_return)
 {
   char *debug_section;
   file_ptr position;
   bfd_size_type sec_size;
 
   asection *sect = bfd_get_section_by_name (abfd, ".debug");
 
   if (!sect)
     {
       bfd_set_error (bfd_error_no_debug_section);
       return NULL;
     }
 
   /* Seek to the beginning of the `.debug' section and read it.
      Save the current position first; it is needed by our caller.
      Then read debug section and reset the file pointer.  */
 
   position = bfd_tell (abfd);
   if (bfd_seek (abfd, sect->filepos, SEEK_SET) != 0)
     return NULL;
 
   sec_size = sect->size;
-  debug_section = (char *) _bfd_alloc_and_read (abfd, sec_size, sec_size);
+  debug_section = (char *) _bfd_alloc_and_read (abfd, sec_size + 1, sec_size);
   if (debug_section == NULL)
     return NULL;
+  debug_section[sec_size] = 0;
 
   if (bfd_seek (abfd, position, SEEK_SET) != 0)
     return NULL;
 
   * sect_return = sect;
   return debug_section;
 }
 
 /* Return a pointer to a malloc'd copy of 'name'.  'name' may not be
    \0-terminated, but will not exceed 'maxlen' characters.  The copy *will*
    be \0-terminated.  */
