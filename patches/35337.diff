commit 37340aa599e177597f81748a14951c0d3d38efaf
Author: Idan Horowitz <idan.horowitz@gmail.com>
Date:   Thu Jun 17 14:12:38 2021 +0300

    LibJS: Add the Object.prototype.__proto__ native accessor property
    
    This is part of the Annex B extension of the specification.

diff --git a/Userland/Libraries/LibJS/Runtime/CommonPropertyNames.h b/Userland/Libraries/LibJS/Runtime/CommonPropertyNames.h
index 445f3e120d..a2bbf9e2b1 100644
--- a/Userland/Libraries/LibJS/Runtime/CommonPropertyNames.h
+++ b/Userland/Libraries/LibJS/Runtime/CommonPropertyNames.h
@@ -12,311 +12,312 @@
 namespace JS {
 
 #define ENUMERATE_STANDARD_PROPERTY_NAMES(P) \
+    P(__proto__)                             \
     P(BYTES_PER_ELEMENT)                     \
     P(BigInt)                                \
     P(Boolean)                               \
     P(E)                                     \
     P(EPSILON)                               \
     P(Infinity)                              \
     P(JSON)                                  \
     P(LN10)                                  \
     P(LN2)                                   \
     P(LOG10E)                                \
     P(LOG2E)                                 \
     P(MAX_SAFE_INTEGER)                      \
     P(MAX_VALUE)                             \
     P(MIN_SAFE_INTEGER)                      \
     P(MIN_VALUE)                             \
     P(Math)                                  \
     P(NEGATIVE_INFINITY)                     \
     P(NaN)                                   \
     P(Number)                                \
     P(PI)                                    \
     P(POSITIVE_INFINITY)                     \
     P(Proxy)                                 \
     P(Reflect)                               \
     P(RegExp)                                \
     P(SQRT1_2)                               \
     P(SQRT2)                                 \
     P(String)                                \
     P(Symbol)                                \
     P(UTC)                                   \
     P(abs)                                   \
     P(acos)                                  \
     P(acosh)                                 \
     P(add)                                   \
     P(all)                                   \
     P(allSettled)                            \
     P(anchor)                                \
     P(any)                                   \
     P(apply)                                 \
     P(arguments)                             \
     P(asIntN)                                \
     P(asUintN)                               \
     P(asin)                                  \
     P(asinh)                                 \
     P(assert)                                \
     P(assign)                                \
     P(at)                                    \
     P(atan)                                  \
     P(atan2)                                 \
     P(atanh)                                 \
     P(big)                                   \
     P(bind)                                  \
     P(blink)                                 \
     P(bold)                                  \
     P(buffer)                                \
     P(byteLength)                            \
     P(byteOffset)                            \
     P(call)                                  \
     P(callee)                                \
     P(cause)                                 \
     P(cbrt)                                  \
     P(ceil)                                  \
     P(charAt)                                \
     P(charCodeAt)                            \
     P(cleanupSome)                           \
     P(clear)                                 \
     P(clz32)                                 \
     P(codePointAt)                           \
     P(concat)                                \
     P(configurable)                          \
     P(console)                               \
     P(construct)                             \
     P(constructor)                           \
     P(copyWithin)                            \
     P(cos)                                   \
     P(cosh)                                  \
     P(count)                                 \
     P(countReset)                            \
     P(create)                                \
     P(debug)                                 \
     P(decodeURI)                             \
     P(decodeURIComponent)                    \
     P(defineProperties)                      \
     P(defineProperty)                        \
     P(deleteProperty)                        \
     P(deref)                                 \
     P(description)                           \
     P(done)                                  \
     P(dotAll)                                \
     P(encodeURI)                             \
     P(encodeURIComponent)                    \
     P(endsWith)                              \
     P(entries)                               \
     P(enumerable)                            \
     P(error)                                 \
     P(errors)                                \
     P(escape)                                \
     P(eval)                                  \
     P(every)                                 \
     P(exec)                                  \
     P(exp)                                   \
     P(expm1)                                 \
     P(fill)                                  \
     P(filter)                                \
     P(finally)                               \
     P(find)                                  \
     P(findIndex)                             \
     P(fixed)                                 \
     P(flags)                                 \
     P(flat)                                  \
     P(flatMap)                               \
     P(floor)                                 \
     P(fontcolor)                             \
     P(fontsize)                              \
     P(forEach)                               \
     P(freeze)                                \
     P(from)                                  \
     P(fromCharCode)                          \
     P(fromCodePoint)                         \
     P(fromEntries)                           \
     P(fround)                                \
     P(gc)                                    \
     P(get)                                   \
     P(getBigInt64)                           \
     P(getBigUint64)                          \
     P(getDate)                               \
     P(getDay)                                \
     P(getFloat32)                            \
     P(getFloat64)                            \
     P(getFullYear)                           \
     P(getHours)                              \
     P(getInt8)                               \
     P(getInt16)                              \
     P(getInt32)                              \
     P(getMilliseconds)                       \
     P(getMinutes)                            \
     P(getMonth)                              \
     P(getOwnPropertyDescriptor)              \
     P(getOwnPropertyNames)                   \
     P(getOwnPropertySymbols)                 \
     P(getPrototypeOf)                        \
     P(getSeconds)                            \
     P(getTime)                               \
     P(getTimezoneOffset)                     \
     P(getUint8)                              \
     P(getUint16)                             \
     P(getUint32)                             \
     P(getUTCDate)                            \
     P(getUTCDay)                             \
     P(getUTCFullYear)                        \
     P(getUTCHours)                           \
     P(getUTCMilliseconds)                    \
     P(getUTCMinutes)                         \
     P(getUTCMonth)                           \
     P(getUTCSeconds)                         \
     P(getYear)                               \
     P(global)                                \
     P(globalThis)                            \
     P(groups)                                \
     P(has)                                   \
     P(hasOwn)                                \
     P(hasOwnProperty)                        \
     P(hypot)                                 \
     P(ignoreCase)                            \
     P(imul)                                  \
     P(includes)                              \
     P(index)                                 \
     P(indexOf)                               \
     P(info)                                  \
     P(input)                                 \
     P(is)                                    \
     P(isArray)                               \
     P(isExtensible)                          \
     P(isFinite)                              \
     P(isFrozen)                              \
     P(isInteger)                             \
     P(isNaN)                                 \
     P(isPrototypeOf)                         \
     P(isSafeInteger)                         \
     P(isSealed)                              \
     P(isView)                                \
     P(italics)                               \
     P(join)                                  \
     P(keyFor)                                \
     P(keys)                                  \
     P(lastIndex)                             \
     P(lastIndexOf)                           \
     P(length)                                \
     P(link)                                  \
     P(log)                                   \
     P(log1p)                                 \
     P(log2)                                  \
     P(log10)                                 \
     P(map)                                   \
     P(max)                                   \
     P(message)                               \
     P(min)                                   \
     P(multiline)                             \
     P(name)                                  \
     P(next)                                  \
     P(now)                                   \
     P(of)                                    \
     P(ownKeys)                               \
     P(padEnd)                                \
     P(padStart)                              \
     P(parse)                                 \
     P(parseFloat)                            \
     P(parseInt)                              \
     P(pop)                                   \
     P(pow)                                   \
     P(preventExtensions)                     \
     P(propertyIsEnumerable)                  \
     P(prototype)                             \
     P(proxy)                                 \
     P(push)                                  \
     P(race)                                  \
     P(random)                                \
     P(raw)                                   \
     P(reduce)                                \
     P(reduceRight)                           \
     P(reject)                                \
     P(repeat)                                \
     P(resolve)                               \
     P(reverse)                               \
     P(revocable)                             \
     P(revoke)                                \
     P(round)                                 \
     P(seal)                                  \
     P(set)                                   \
     P(setBigInt64)                           \
     P(setBigUint64)                          \
     P(setDate)                               \
     P(setFloat32)                            \
     P(setFloat64)                            \
     P(setFullYear)                           \
     P(setHours)                              \
     P(setInt8)                               \
     P(setInt16)                              \
     P(setInt32)                              \
     P(setMilliseconds)                       \
     P(setMinutes)                            \
     P(setMonth)                              \
     P(setPrototypeOf)                        \
     P(setSeconds)                            \
     P(setTime)                               \
     P(setUint8)                              \
     P(setUint16)                             \
     P(setUint32)                             \
     P(setUTCDate)                            \
     P(setUTCFullYear)                        \
     P(setUTCHours)                           \
     P(setUTCMilliseconds)                    \
     P(setUTCMinutes)                         \
     P(setUTCMonth)                           \
     P(setUTCSeconds)                         \
     P(setYear)                               \
     P(shift)                                 \
     P(sign)                                  \
     P(sin)                                   \
     P(sinh)                                  \
     P(size)                                  \
     P(slice)                                 \
     P(small)                                 \
     P(some)                                  \
     P(sort)                                  \
     P(source)                                \
     P(splice)                                \
     P(sqrt)                                  \
     P(startsWith)                            \
     P(sticky)                                \
     P(strike)                                \
     P(stringify)                             \
     P(sub)                                   \
     P(substr)                                \
     P(substring)                             \
     P(sup)                                   \
     P(tan)                                   \
     P(tanh)                                  \
     P(test)                                  \
     P(then)                                  \
     P(toDateString)                          \
     P(toGMTString)                           \
     P(toISOString)                           \
     P(toJSON)                                \
     P(toLocaleDateString)                    \
     P(toLocaleString)                        \
     P(toLocaleTimeString)                    \
     P(toLowerCase)                           \
     P(toString)                              \
     P(toTimeString)                          \
     P(toUpperCase)                           \
     P(toUTCString)                           \
     P(trace)                                 \
     P(trim)                                  \
     P(trimEnd)                               \
     P(trimLeft)                              \
     P(trimRight)                             \
     P(trimStart)                             \
     P(trunc)                                 \
     P(undefined)                             \
     P(unescape)                              \
     P(unicode)                               \
     P(unregister)                            \
     P(unshift)                               \
     P(value)                                 \
     P(valueOf)                               \
     P(values)                                \
     P(warn)                                  \
     P(writable)
diff --git a/Userland/Libraries/LibJS/Runtime/ObjectPrototype.cpp b/Userland/Libraries/LibJS/Runtime/ObjectPrototype.cpp
index cbb0730149..97e2049c36 100644
--- a/Userland/Libraries/LibJS/Runtime/ObjectPrototype.cpp
+++ b/Userland/Libraries/LibJS/Runtime/ObjectPrototype.cpp
@@ -25,16 +25,19 @@ ObjectPrototype::ObjectPrototype(GlobalObject& global_object)
 void ObjectPrototype::initialize(GlobalObject& global_object)
 {
     auto& vm = this->vm();
     Object::initialize(global_object);
     // This must be called after the constructor has returned, so that the below code
     // can find the ObjectPrototype through normal paths.
     u8 attr = Attribute::Writable | Attribute::Configurable;
     define_native_function(vm.names.hasOwnProperty, has_own_property, 1, attr);
     define_native_function(vm.names.toString, to_string, 0, attr);
     define_native_function(vm.names.toLocaleString, to_locale_string, 0, attr);
     define_native_function(vm.names.valueOf, value_of, 0, attr);
     define_native_function(vm.names.propertyIsEnumerable, property_is_enumerable, 1, attr);
     define_native_function(vm.names.isPrototypeOf, is_prototype_of, 1, attr);
+
+    // Annex B
+    define_native_accessor(vm.names.__proto__, proto_getter, proto_setter, Attribute::Configurable);
 }
 
 ObjectPrototype::~ObjectPrototype()
@@ -127,21 +130,57 @@ JS_DEFINE_NATIVE_FUNCTION(ObjectPrototype::property_is_enumerable)
 // 20.1.3.3 Object.prototype.isPrototypeOf ( V ), https://tc39.es/ecma262/#sec-object.prototype.isprototypeof
 JS_DEFINE_NATIVE_FUNCTION(ObjectPrototype::is_prototype_of)
 {
     auto object_argument = vm.argument(0);
     if (!object_argument.is_object())
         return Value(false);
     auto* object = &object_argument.as_object();
     auto* this_object = vm.this_value(global_object).to_object(global_object);
     if (!this_object)
         return {};
 
     for (;;) {
         object = object->prototype();
         if (!object)
             return Value(false);
         if (same_value(this_object, object))
             return Value(true);
     }
 }
 
+// B.2.2.1.1 get Object.prototype.__proto__, https://tc39.es/ecma262/#sec-get-object.prototype.__proto__
+JS_DEFINE_NATIVE_FUNCTION(ObjectPrototype::proto_getter)
+{
+    auto object = vm.this_value(global_object).to_object(global_object);
+    if (vm.exception())
+        return {};
+    auto proto = object->prototype();
+    if (vm.exception())
+        return {};
+    return proto;
+}
+
+// B.2.2.1.2 set Object.prototype.__proto__, https://tc39.es/ecma262/#sec-set-object.prototype.__proto__
+JS_DEFINE_NATIVE_FUNCTION(ObjectPrototype::proto_setter)
+{
+    auto object = require_object_coercible(global_object, vm.this_value(global_object));
+    if (vm.exception())
+        return {};
+
+    auto proto = vm.argument(0);
+    if (!proto.is_object() && !proto.is_null())
+        return js_undefined();
+
+    if (!object.is_object())
+        return js_undefined();
+
+    auto status = object.as_object().set_prototype(proto.is_object() ? &proto.as_object() : nullptr);
+    if (vm.exception())
+        return {};
+    if (!status) {
+        vm.throw_exception<TypeError>(global_object, ErrorType::ObjectSetPrototypeOfReturnedFalse);
+        return {};
+    }
+    return js_undefined();
+}
+
 }
diff --git a/Userland/Libraries/LibJS/Runtime/ObjectPrototype.h b/Userland/Libraries/LibJS/Runtime/ObjectPrototype.h
index e303c03718..b01208a93b 100644
--- a/Userland/Libraries/LibJS/Runtime/ObjectPrototype.h
+++ b/Userland/Libraries/LibJS/Runtime/ObjectPrototype.h
@@ -24,9 +24,11 @@ public:
 private:
     JS_DECLARE_NATIVE_FUNCTION(has_own_property);
     JS_DECLARE_NATIVE_FUNCTION(to_locale_string);
     JS_DECLARE_NATIVE_FUNCTION(value_of);
     JS_DECLARE_NATIVE_FUNCTION(property_is_enumerable);
     JS_DECLARE_NATIVE_FUNCTION(is_prototype_of);
+    JS_DECLARE_NATIVE_FUNCTION(proto_getter);
+    JS_DECLARE_NATIVE_FUNCTION(proto_setter);
 };
 
 }
