commit 9343a91ef8ff16c7716dfe8e31fe9c2b0f6fd8a6
Author: Even Rouault <even.rouault@spatialys.com>
Date:   Sun May 26 11:34:10 2019 +0200

    libtiff: Fix vulnerability in 'D' (DeferStrileLoad) mode (master only) (fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=14908)

diff --git a/gdal/frmts/gtiff/libtiff/tif_dirread.c b/gdal/frmts/gtiff/libtiff/tif_dirread.c
index d1a557e3a2..bb5f3a6590 100644
--- a/gdal/frmts/gtiff/libtiff/tif_dirread.c
+++ b/gdal/frmts/gtiff/libtiff/tif_dirread.c
@@ -6193,42 +6193,44 @@ static int _TIFFFetchStrileValue(TIFF* tif,
 static uint64 _TIFFGetStrileOffsetOrByteCountValue(TIFF *tif, uint32 strile,
                                                    TIFFDirEntry* dirent,
                                                    uint64** parray,
                                                    int *pbErr)
 {
     TIFFDirectory *td = &tif->tif_dir;
     if( pbErr )
         *pbErr = 0;
     if( (tif->tif_flags&TIFF_DEFERSTRILELOAD) && !(tif->tif_flags&TIFF_CHOPPEDUPARRAYS) )
     {
         if( !(tif->tif_flags&TIFF_LAZYSTRILELOAD) ||
             /* If the values may fit in the toff_long/toff_long8 member */
             /* then use _TIFFFillStriles to simplify _TIFFFetchStrileValue */
             dirent->tdir_count <= 4 )
         {
             if( !_TIFFFillStriles(tif) )
             {
                 if( pbErr )
                     *pbErr = 1;
-                return 0;
+                /* Do not return, as we want this function to always */
+                /* return the same value if called several times with */
+                /* the same arguments */
             }
         }
         else
         {
              if( !_TIFFFetchStrileValue(tif, strile, dirent, parray) )
              {
                 if( pbErr )
                     *pbErr = 1;
                  return 0;
              }
         }
     }
     if( *parray == NULL || strile >= td->td_nstrips )
     {
         if( pbErr )
             *pbErr = 1;
         return 0;
     }
     return (*parray)[strile];
 }
 
 /* Return the value of the TileOffsets/StripOffsets array for the specified tile/strile */
diff --git a/gdal/fuzzers/GNUmakefile b/gdal/fuzzers/GNUmakefile
index 150a2e1dea..260f4902ab 100644
--- a/gdal/fuzzers/GNUmakefile
+++ b/gdal/fuzzers/GNUmakefile
@@ -51,6 +51,9 @@ ogr_sdts_fuzzer$(EXE): ogr_fuzzer.$(OBJ_EXT) $(DEP_LIBS)
 mitab_tab_fuzzer$(EXE): ogr_fuzzer.$(OBJ_EXT) $(DEP_LIBS)
 	$(LD) $(LDFLAGS) $(LNK_FLAGS) $(CXXFLAGS) $(GDAL_INCLUDE) ogr_fuzzer.cpp fuzzingengine.cpp $(XTRAOBJ) $(CONFIG_LIBS) -o $@ -DREGISTER_FUNC=OGRRegisterAll -DMEM_FILENAME="\"/vsimem/test.tar\"" -DGDAL_FILENAME="\"/vsitar//vsimem/test.tar/my.tab\""
 
+gtiff_mmap_fuzzer$(EXE): gdal_fuzzer.$(OBJ_EXT) $(DEP_LIBS)
+	$(LD) $(LDFLAGS) $(LNK_FLAGS) $(CXXFLAGS) $(GDAL_INCLUDE) gdal_fuzzer.cpp fuzzingengine.cpp $(XTRAOBJ) $(CONFIG_LIBS) -o $@ -DREGISTER_FUNC=GDALRegister_GTiff -DGTIFF_USE_MMAP
+
 dummyfuzzers: fuzzingengine.o
 	$(AR) r libFuzzingEngine.a fuzzingengine.o
 	CXX="${CXX}" CXXFLAGS="${CXXFLAGS} -L." EXTRA_LIBS="${LIBS}" SRC=/tmp OUT=/tmp ./build_google_oss_fuzzers.sh
