commit 4470ba1491e555c4bb9d6695eb444b6a1b3a0c6b
Author: skia-autoroll <skia-autoroll@skia-public.iam.gserviceaccount.com>
Date:   Fri Jul 31 13:25:30 2020 +0000

    Roll skcms from 8da4cb002cb4 to b1f9041ffe31 (1 revision)
    
    https://skia.googlesource.com/skcms.git/+log/8da4cb002cb4..b1f9041ffe31
    
    2020-07-31 mtklein@google.com allow Gray and RGB profiles to be equal
    
    If this roll has caused a breakage, revert this CL and stop the roller
    using the controls here:
    https://autoroll.skia.org/r/skcms-skia-autoroll
    Please CC mtklein@google.com,borenet@google.com on the revert to ensure that a human
    is aware of the problem.
    
    To report a problem with the AutoRoller itself, please file a bug:
    https://bugs.chromium.org/p/skia/issues/entry?template=Autoroller+Bug
    
    Documentation for the AutoRoller is here:
    https://skia.googlesource.com/buildbot/+doc/master/autoroll/README.md
    
    Change-Id: I52534519ef7c092b313ea83ceb5faa59d1af47b6
    Cq-Include-Trybots: luci.chromium.try:linux-blink-rel
    Tbr: mtklein@google.com,borenet@google.com
    Reviewed-on: https://skia-review.googlesource.com/c/skia/+/307166
    Reviewed-by: skia-autoroll <skia-autoroll@skia-public.iam.gserviceaccount.com>
    Commit-Queue: skia-autoroll <skia-autoroll@skia-public.iam.gserviceaccount.com>

diff --git a/third_party/skcms/skcms.cc b/third_party/skcms/skcms.cc
index 0489a8a4d9..3b7806081c 100644
--- a/third_party/skcms/skcms.cc
+++ b/third_party/skcms/skcms.cc
@@ -1301,54 +1301,57 @@ const uint8_t skcms_252_random_bytes[] = {
 bool skcms_ApproximatelyEqualProfiles(const skcms_ICCProfile* A, const skcms_ICCProfile* B) {
     // Test for exactly equal profiles first.
     if (A == B || 0 == memcmp(A,B, sizeof(skcms_ICCProfile))) {
         return true;
     }
 
     // For now this is the essentially the same strategy we use in test_only.c
     // for our skcms_Transform() smoke tests:
     //    1) transform A to XYZD50
     //    2) transform B to XYZD50
     //    3) return true if they're similar enough
     // Our current criterion in 3) is maximum 1 bit error per XYZD50 byte.
 
     // skcms_252_random_bytes are 252 of a random shuffle of all possible bytes.
     // 252 is evenly divisible by 3 and 4.  Only 192, 10, 241, and 43 are missing.
 
-    if (A->data_color_space != B->data_color_space) {
+    // We want to allow otherwise equivalent profiles tagged as grayscale and RGB
+    // to be treated as equal.  But CMYK profiles are a totally different ballgame.
+    const auto CMYK = skcms_Signature_CMYK;
+    if ((A->data_color_space == CMYK) != (B->data_color_space == CMYK)) {
         return false;
     }
 
     // Interpret as RGB_888 if data color space is RGB or GRAY, RGBA_8888 if CMYK.
     // TODO: working with RGBA_8888 either way is probably fastest.
     skcms_PixelFormat fmt = skcms_PixelFormat_RGB_888;
     size_t npixels = 84;
     if (A->data_color_space == skcms_Signature_CMYK) {
         fmt = skcms_PixelFormat_RGBA_8888;
         npixels = 63;
     }
 
     // TODO: if A or B is a known profile (skcms_sRGB_profile, skcms_XYZD50_profile),
     // use pre-canned results and skip that skcms_Transform() call?
     uint8_t dstA[252],
             dstB[252];
     if (!skcms_Transform(
                 skcms_252_random_bytes,     fmt, skcms_AlphaFormat_Unpremul, A,
                 dstA, skcms_PixelFormat_RGB_888, skcms_AlphaFormat_Unpremul, skcms_XYZD50_profile(),
                 npixels)) {
         return false;
     }
     if (!skcms_Transform(
                 skcms_252_random_bytes,     fmt, skcms_AlphaFormat_Unpremul, B,
                 dstB, skcms_PixelFormat_RGB_888, skcms_AlphaFormat_Unpremul, skcms_XYZD50_profile(),
                 npixels)) {
         return false;
     }
 
     // TODO: make sure this final check has reasonable codegen.
     for (size_t i = 0; i < 252; i++) {
         if (abs((int)dstA[i] - (int)dstB[i]) > 1) {
             return false;
         }
     }
     return true;
 }
diff --git a/third_party/skcms/version.sha1 b/third_party/skcms/version.sha1
index 468e9bd182..ec34288a6c 100755
--- a/third_party/skcms/version.sha1
+++ b/third_party/skcms/version.sha1
@@ -1 +1 @@
-8da4cb002cb43834cf9b4e8929f2a064a536b2b1
+b1f9041ffe31d604fe15883415a32daed476316c
