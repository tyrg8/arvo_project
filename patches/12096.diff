commit 1f876a46746af3135cb3ae303045bd871e58f2ed
Author: Frederik Deweerdt <fdeweerdt@fastly.com>
Date:   Fri Dec 21 15:06:03 2018 -0800

    Fix leak in `h2o_http2_scheduler_relocate` if `src` has no children

diff --git a/lib/http2/scheduler.c b/lib/http2/scheduler.c
index bcaa4f187..5d557676c 100644
--- a/lib/http2/scheduler.c
+++ b/lib/http2/scheduler.c
@@ -247,36 +247,38 @@ void h2o_http2_scheduler_close(h2o_http2_scheduler_openref_t *ref)
 void h2o_http2_scheduler_relocate(h2o_http2_scheduler_openref_t *dst, h2o_http2_scheduler_openref_t *src)
 {
     init_node(&dst->node, src->node._parent);
     dst->weight = src->weight;
     dst->_all_link = (h2o_linklist_t){NULL};
     dst->_active_cnt = src->_active_cnt;
     dst->_self_is_active = src->_self_is_active;
     dst->_queue_node._link = (h2o_linklist_t){NULL};
     dst->_queue_node._deficit = dst->_queue_node._deficit;
 
     /* update refs from descendants */
     if (!h2o_linklist_is_empty(&src->node._all_refs)) {
         h2o_linklist_t *link;
         /* update back reference */
         for (link = src->node._all_refs.next; link != &src->node._all_refs; link = link->next) {
             h2o_http2_scheduler_openref_t *child = H2O_STRUCT_FROM_MEMBER(h2o_http2_scheduler_openref_t, _all_link, link);
             assert(child->node._parent == &src->node);
             child->node._parent = &dst->node;
         }
         /* attach the list to dst */
         h2o_linklist_insert_list(&dst->node._all_refs, &src->node._all_refs);
         /* node._queue */
         dst->node._queue = src->node._queue;
-        src->node._queue = NULL;
+    } else {
+        free(src->node._queue);
     }
+    src->node._queue = NULL;
 
     /* swap all_link */
     h2o_linklist_insert(&src->_all_link, &dst->_all_link);
     h2o_linklist_unlink(&src->_all_link);
 
     /* swap _queue_node._link */
     if (h2o_linklist_is_linked(&src->_queue_node._link)) {
         h2o_linklist_insert(&src->_queue_node._link, &dst->_queue_node._link);
         h2o_linklist_unlink(&src->_queue_node._link);
     }
 }
