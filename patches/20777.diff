commit 8f45f51e6ccb8b3bf65edc2f1252da1a1dad24df
Author: Luca Deri <deri@ntop.org>
Date:   Fri Feb 28 15:28:41 2020 +0100

    Compilation fix

diff --git a/src/lib/protocols/bittorrent.c b/src/lib/protocols/bittorrent.c
index d0773e43..f1c62d43 100644
--- a/src/lib/protocols/bittorrent.c
+++ b/src/lib/protocols/bittorrent.c
@@ -58,22 +58,23 @@ static u_int8_t is_utp_pkt(const u_int8_t *payload, u_int payload_len) {
 static void ndpi_add_connection_as_bittorrent(struct ndpi_detection_module_struct *ndpi_struct,
 					      struct ndpi_flow_struct *flow,
 					      int bt_offset, int check_hash,
 					      const u_int8_t save_detection, const u_int8_t encrypted_connection)
 {
   if(check_hash) {
     const char *bt_hash = NULL; /* 20 bytes long */
-
+    
     if(bt_offset == -1) {
       const char *bt_magic = ndpi_strnstr((const char *)flow->packet.payload,
 					  "BitTorrent protocol", flow->packet.payload_packet_len);
 
       if(bt_magic)
 	bt_hash = &bt_magic[19];
     } else
       bt_hash = (const char*)&flow->packet.payload[28];
 
-    if(bt_hash && flow->packet.payload_packet_len >= 20 + (bt_hash-flow->packet.payload)) memcpy(flow->protos.bittorrent.hash, bt_hash, 20);
+    if(bt_hash && (flow->packet.payload_packet_len >= (20 + (bt_hash-(const char*)flow->packet.payload))))
+      memcpy(flow->protos.bittorrent.hash, bt_hash, 20);
   }
 
   ndpi_int_change_protocol(ndpi_struct, flow, NDPI_PROTOCOL_BITTORRENT, NDPI_PROTOCOL_UNKNOWN);
 }
