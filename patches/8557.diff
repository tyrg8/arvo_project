changeset:   15681:a144920b08b8
user:        Bob Friesenhahn <bfriesen@GraphicsMagick.org>
date:        Sat Jun 02 15:35:00 2018 -0500
summary:     ReadImage(): Assure that an error exception is thrown if coder returns null without properly reporting an exception.

diff -r 45b749c1b44c -r a144920b08b8 ChangeLog
--- a/ChangeLog	Sat Jun 02 15:24:57 2018 -0500
+++ b/ChangeLog	Sat Jun 02 15:35:00 2018 -0500
@@ -1,5 +1,9 @@
 2018-06-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>
 
+	* magick/constitute.c (ReadImage): Assure that an error exception
+	is thrown if coder returns null without properly reporting an
+	exception.
+
 	* magick/blob.c (BlobToImage): Assure that an error exception is
 	thrown if coder returns null without properly reporting an
 	exception.
diff -r 45b749c1b44c -r a144920b08b8 magick/constitute.c
--- a/magick/constitute.c	Sat Jun 02 15:24:57 2018 -0500
+++ b/magick/constitute.c	Sat Jun 02 15:35:00 2018 -0500
@@ -1536,8 +1536,8 @@
               }
             else
               {
-              ThrowException(exception,FileOpenError,UnableToOpenFile,
-                             clone_info->filename);
+                ThrowException(exception,FileOpenError,UnableToOpenFile,
+                               clone_info->filename);
               }
           }
         DestroyExceptionInfo(&module_exception);
@@ -1609,19 +1609,26 @@
         UnlockSemaphoreInfo(constitute_semaphore);
 
       if (image != (Image *) NULL)
-        (void) LogMagickEvent(CoderEvent,GetMagickModule(),
-          "Returned from \"%.1024s\" decoder: frames=%lu cache=%s monochrome=%s grayscale=%s class=%s colorspace=%s",
-                              magick_info->name,
-                              GetImageListLength(image),
-                              (GetPixelCachePresent(image) ? "present" : "missing"),
-                              MagickBoolToString(image->is_monochrome),
-                              MagickBoolToString(image->is_grayscale),
-                              ClassTypeToString(image->storage_class),
-                              ColorspaceTypeToString(image->colorspace));
+        {
+          (void) LogMagickEvent(CoderEvent,GetMagickModule(),
+                                "Returned from \"%.1024s\" decoder: frames=%lu cache=%s"
+                                " monochrome=%s grayscale=%s class=%s colorspace=%s",
+                                magick_info->name,
+                                GetImageListLength(image),
+                                (GetPixelCachePresent(image) ? "present" : "missing"),
+                                MagickBoolToString(image->is_monochrome),
+                                MagickBoolToString(image->is_grayscale),
+                                ClassTypeToString(image->storage_class),
+                                ColorspaceTypeToString(image->colorspace));
+        }
       else
-        (void) LogMagickEvent(CoderEvent,GetMagickModule(),
-          "Returned from \"%.1024s\" decoder, returned image is NULL!",
-                              magick_info->name);
+        {
+          (void) LogMagickEvent(CoderEvent,GetMagickModule(),
+                                "Returned from \"%.1024s\" decoder, returned image is NULL!",
+                                magick_info->name);
+          if (exception->severity < ErrorException)
+            ThrowException(exception,CoderError,DecodedImageNotReturned,filename);
+        }
 
       /*
         Enforce that returned images do not have open blobs.
@@ -1718,19 +1725,27 @@
         UnlockSemaphoreInfo(constitute_semaphore);
 
       if (image != (Image *) NULL)
-        (void) LogMagickEvent(CoderEvent,GetMagickModule(),
-          "Returned from \"%.1024s\" decoder: frames=%lu cache=%s monochrome=%s grayscale=%s class=%s colorspace=%s",
-                              magick_info->name,
-                              GetImageListLength(image),
-                              (GetPixelCachePresent(image) ? "present" : "missing"),
-                              MagickBoolToString(image->is_monochrome),
-                              MagickBoolToString(image->is_grayscale),
-                              ClassTypeToString(image->storage_class),
-                              ColorspaceTypeToString(image->colorspace));
+        {
+          (void) LogMagickEvent(CoderEvent,GetMagickModule(),
+                                "Returned from \"%.1024s\" decoder: frames=%lu"
+                                " cache=%s monochrome=%s grayscale=%s class=%s"
+                                " colorspace=%s",
+                                magick_info->name,
+                                GetImageListLength(image),
+                                (GetPixelCachePresent(image) ? "present" : "missing"),
+                                MagickBoolToString(image->is_monochrome),
+                                MagickBoolToString(image->is_grayscale),
+                                ClassTypeToString(image->storage_class),
+                                ColorspaceTypeToString(image->colorspace));
+        }
       else
-        (void) LogMagickEvent(CoderEvent,GetMagickModule(),
-          "Returned from \"%.1024s\" decoder: returned image is NULL!",
-                              magick_info->name);
+        {
+          (void) LogMagickEvent(CoderEvent,GetMagickModule(),
+                                "Returned from \"%.1024s\" decoder: returned image is NULL!",
+                                magick_info->name);
+          if (exception->severity < ErrorException)
+            ThrowException(exception,CoderError,DecodedImageNotReturned,filename);
+        }
 
       /*
         Enforce that returned images do not have open blobs.
diff -r 45b749c1b44c -r a144920b08b8 www/Changelog.html
--- a/www/Changelog.html	Sat Jun 02 15:24:57 2018 -0500
+++ b/www/Changelog.html	Sat Jun 02 15:35:00 2018 -0500
@@ -38,6 +38,9 @@
 <p>2018-06-02  Bob Friesenhahn  &lt;<a class="reference external" href="mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>
 <blockquote>
 <ul class="simple">
+<li>magick/constitute.c (ReadImage): Assure that an error exception
+is thrown if coder returns null without properly reporting an
+exception.</li>
 <li>magick/blob.c (BlobToImage): Assure that an error exception is
 thrown if coder returns null without properly reporting an
 exception.</li>

