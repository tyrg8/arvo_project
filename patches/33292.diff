commit 8d6bb0d7ddbd3cc00c09c39f2fd9faf473e8fd51
Author: Francesc Alted <francesc@blosc.org>
Date:   Mon Oct 11 16:09:27 2021 +0200

    Update README.md

diff --git a/plugins/README.md b/plugins/README.md
index 1b92fc6e..d6bd03b8 100644
--- a/plugins/README.md
+++ b/plugins/README.md
@@ -91,41 +91,42 @@ say and will decide if a plugin is to be accepted or not.
 Steps
 -----
 
 1. First, tests must be provided and be passing.
 
    **It is completely mandatory and necessary to add these lines to `main()` in each test to make plugins machinery work:**
    - `blosc_init()` at the beginning
    - `blosc_destroy()` in the end
 
 
 2. Then, the user must make a fork of the C-Blosc2 Github repository,
    adding a new folder within the plugin sources to the path `plugins/codecs` or
    `plugins/filters` depending on the plugin type.
 
 3. Furthermore, a text file named `README.rst` must be provided where it is explained:
 
    * The plugin motivation, why and for what purpose was the plugin created.
 
    * How to use the plugin.
 
    * What does the plugin do and how it works.
 
    * The advantages and disadvantages of the plugin compared to the rest.
 
 4. To register a plugin the user must choose a plugin ID between *BLOSC2_GLOBAL_REGISTERED_FILTERS_START* and *BLOSC2_GLOBAL_REGISTERED_FILTERS_STOP* and
    write it at `include/blosc2/codecs-registry.h`
    or `include/blosc2/filters-registry.h` depending on the plugin type. Then, you have to edit `include/blosc2/codecs-registry.c`or 
    
    `include/blosc2/filters-registry.c` in the next way:
   
    At the top it must be added `#include "plugin_folder/plugin_header.h"`, 
    
    and into the register function you must follow the same steps that were done for the existing plugins.   
 
 5. Finally, the Blosc development team will carry out the evaluation process
    (probably via a votation process, with the BDFL having the last say in case of the team is undecided)
    so as to decide whether the plugin is useful and hence, candidate to be integrated into the C-Blosc2
-   source code distribution.  In case of a negative decision, this will be properly stated.
+   source code distribution.  In case of a negative decision, the original author will be informed,
+   together with a series of advices for starting a new iteration if desired.
 
 
 Examples
