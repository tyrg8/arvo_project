commit 68426e236fe8a15884c3893a2083663687b2610f
Author: Jonathan Hui <jonhui@google.com>
Date:   Tue Sep 17 17:11:29 2019 -0700

    [network-data] set max length to 254 (#4177)
    
    As specified by Thread Conformance Specification.

diff --git a/src/core/thread/network_data.hpp b/src/core/thread/network_data.hpp
index b5d2d3605..37ae414e1 100644
--- a/src/core/thread/network_data.hpp
+++ b/src/core/thread/network_data.hpp
@@ -91,195 +91,195 @@ class NetworkData : public InstanceLocator
 {
 public:
     enum
     {
-        kMaxSize = 255, ///< Maximum size of Thread Network Data in bytes.
+        kMaxSize = 254, ///< Maximum size of Thread Network Data in bytes.
     };
 
     /**
      * This enumeration specifies the type of Network Data (local or leader).
      *
      */
     enum Type
     {
         kTypeLocal,  ///< Local Network Data.
         kTypeLeader, ///< Leader Network Data.
     };
 
     /**
      * This constructor initializes the object.
      *
      * @param[in]  aInstance     A reference to the OpenThread instance.
      * @param[in]  aType         Network data type
      *
      */
     NetworkData(Instance &aInstance, Type aType);
 
     /**
      * This method clears the network data.
      *
      */
     void Clear(void);
 
     /**
      * This method provides a full or stable copy of the Thread Network Data.
      *
      * @param[in]     aStable      TRUE when copying the stable version, FALSE when copying the full version.
      * @param[out]    aData        A pointer to the data buffer.
      * @param[inout]  aDataLength  On entry, size of the data buffer pointed to by @p aData.
      *                             On exit, number of copied bytes.
      *
      * @retval OT_ERROR_NONE       Successfully copied full Thread Network Data.
      * @retval OT_ERROR_NO_BUFS    Not enough space to fully copy Thread Network Data.
      *
      */
     otError GetNetworkData(bool aStable, uint8_t *aData, uint8_t &aDataLength);
 
     /**
      * This method provides the next On Mesh prefix in the Thread Network Data.
      *
      * @param[inout]  aIterator  A pointer to the Network Data iterator context.
      * @param[out]    aConfig    A pointer to where the On Mesh Prefix information will be placed.
      *
      * @retval OT_ERROR_NONE       Successfully found the next On Mesh prefix.
      * @retval OT_ERROR_NOT_FOUND  No subsequent On Mesh prefix exists in the Thread Network Data.
      *
      */
     otError GetNextOnMeshPrefix(otNetworkDataIterator *aIterator, otBorderRouterConfig *aConfig);
 
     /**
      * This method provides the next On Mesh prefix in the Thread Network Data for a given RLOC16.
      *
      * @param[inout]  aIterator  A pointer to the Network Data iterator context.
      * @param[in]     aRloc16    The RLOC16 value.
      * @param[out]    aConfig    A pointer to where the On Mesh Prefix information will be placed.
      *
      * @retval OT_ERROR_NONE       Successfully found the next On Mesh prefix.
      * @retval OT_ERROR_NOT_FOUND  No subsequent On Mesh prefix exists in the Thread Network Data.
      *
      */
     otError GetNextOnMeshPrefix(otNetworkDataIterator *aIterator, uint16_t aRloc16, otBorderRouterConfig *aConfig);
 
     /**
      * This method provides the next external route in the Thread Network Data.
      *
      * @param[inout]  aIterator  A pointer to the Network Data iterator context.
      * @param[out]    aConfig    A pointer to where the external route information will be placed.
      *
      * @retval OT_ERROR_NONE       Successfully found the next external route.
      * @retval OT_ERROR_NOT_FOUND  No subsequent external route exists in the Thread Network Data.
      *
      */
     otError GetNextExternalRoute(otNetworkDataIterator *aIterator, otExternalRouteConfig *aConfig);
 
     /**
      * This method provides the next external route in the Thread Network Data for a given RLOC16.
      *
      * @param[inout]  aIterator  A pointer to the Network Data iterator context.
      * @param[in]     aRloc16    The RLOC16 value.
      * @param[out]    aConfig    A pointer to where the external route information will be placed.
      *
      * @retval OT_ERROR_NONE       Successfully found the next external route.
      * @retval OT_ERROR_NOT_FOUND  No subsequent external route exists in the Thread Network Data.
      *
      */
     otError GetNextExternalRoute(otNetworkDataIterator *aIterator, uint16_t aRloc16, otExternalRouteConfig *aConfig);
 
 #if OPENTHREAD_CONFIG_TMF_NETDATA_SERVICE_ENABLE
     /**
      * This method provides the next service in the Thread Network Data.
      *
      * @param[inout]  aIterator  A pointer to the Network Data iterator context.
      * @param[out]    aConfig    A pointer to where the service information will be placed.
      *
      * @retval OT_ERROR_NONE       Successfully found the next service.
      * @retval OT_ERROR_NOT_FOUND  No subsequent service exists in the Thread Network Data.
      *
      */
     otError GetNextService(otNetworkDataIterator *aIterator, otServiceConfig *aConfig);
 
     /**
      * This method provides the next service in the Thread Network Data for a given RLOC16.
      *
      * @param[inout]  aIterator  A pointer to the Network Data iterator context.
      * @param[in]     aRloc16    The RLOC16 value.
      * @param[out]    aConfig    A pointer to where the service information will be placed.
      *
      * @retval OT_ERROR_NONE       Successfully found the next service.
      * @retval OT_ERROR_NOT_FOUND  No subsequent service exists in the Thread Network Data.
      *
      */
     otError GetNextService(otNetworkDataIterator *aIterator, uint16_t aRloc16, otServiceConfig *aConfig);
 
     /**
      * This method provides the next service ID in the Thread Network Data for a given RLOC16.
      *
      * @param[inout]  aIterator  A pointer to the Network Data iterator context.
      * @param[in]     aRloc16    The RLOC16 value.
      * @param[out]    aServiceID A pointer to where the service ID will be placed.
      *
      * @retval OT_ERROR_NONE       Successfully found the next service.
      * @retval OT_ERROR_NOT_FOUND  No subsequent service exists in the Thread Network Data.
      *
      */
     otError GetNextServiceId(otNetworkDataIterator *aIterator, uint16_t aRloc16, uint8_t *aServiceId);
 #endif
 
     /**
      * This method indicates whether or not the Thread Network Data contains all of the on mesh prefix information
      * in @p aCompare associated with @p aRloc16.
      *
      * @param[in]  aCompare  The Network Data to use for the query.
      * @param[in]  aRloc16   The RLOC16 to consider.
      *
      * @returns TRUE if this object contains all on mesh prefix information in @p aCompare associated with @p aRloc16,
      *          FALSE otherwise.
      *
      */
     bool ContainsOnMeshPrefixes(NetworkData &aCompare, uint16_t aRloc16);
 
     /**
      * This method indicates whether or not the Thread Network Data contains all of the external route information
      * in @p aCompare associated with @p aRloc16.
      *
      * @param[in]  aCompare  The Network Data to use for the query.
      * @param[in]  aRloc16   The RLOC16 to consider.
      *
      * @returns TRUE if this object contains all external route information in @p aCompare associated with @p aRloc16,
      *          FALSE otherwise.
      *
      */
     bool ContainsExternalRoutes(NetworkData &aCompare, uint16_t aRloc16);
 
 #if OPENTHREAD_CONFIG_TMF_NETDATA_SERVICE_ENABLE
     /**
      * This method indicates whether or not the Thread Network Data contains all of the service information
      * in @p aCompare associated with @p aRloc16.
      *
      * @param[in]  aCompare  The Network Data to use for the query.
      * @param[in]  aRloc16   The RLOC16 to consider.
      *
      * @returns TRUE if this object contains all service information in @p aCompare associated with @p aRloc16,
      *          FALSE otherwise.
      *
      */
     bool ContainsServices(NetworkData &aCompare, uint16_t aRloc16);
 
     /**
      * This method indicates whether or not the Thread Network Data contains the service with given Service ID
      * associated with @p aRloc16.
      *
      * @param[in]  aServiceID The Service ID to search for.
      * @param[in]  aRloc16    The RLOC16 to consider.
      *
      * @returns TRUE if this object contains the service with given ID associated with @p aRloc16,
      *          FALSE otherwise.
      *
      */
     bool ContainsService(uint8_t aServiceId, uint16_t aRloc16);
 #endif
 
     /**
      * This method cancels the data resubmit delay timer.
      *
      */
     void ClearResubmitDelayTimer(void);
