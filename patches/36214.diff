commit 45683703f1d7aad0b7b2ace59debf341dbaecb01
Author: Dmitry Stogov <dmitry@zend.com>
Date:   Wed Nov 10 12:49:20 2021 +0300

    JIT: Fixed memory leak

diff --git a/ext/opcache/jit/zend_jit_x86.dasc b/ext/opcache/jit/zend_jit_x86.dasc
index 9969ad532a..f44f2a3336 100644
--- a/ext/opcache/jit/zend_jit_x86.dasc
+++ b/ext/opcache/jit/zend_jit_x86.dasc
@@ -2149,28 +2149,41 @@ static int zend_jit_undefined_function_stub(dasm_State **Dst)
 static int zend_jit_negative_shift_stub(dasm_State **Dst)
 {
 	|->negative_shift:
+	|	mov RX, EX->opline
 	|	UNDEF_OPLINE_RESULT_IF_USED
 	|.if X64
 		|.if WIN
 		|	LOAD_ADDR CARG1, &zend_ce_arithmetic_error
 		|	mov CARG1, aword [CARG1]
 		|.else
 		|	LOAD_ADDR CARG1, zend_ce_arithmetic_error
 		|.endif
 		|	LOAD_ADDR CARG2, "Bit shift by negative number"
 		|	EXT_CALL zend_throw_error, r0
 	|.else
 		|	sub r4, 8
 		|	push "Bit shift by negative number"
 		|.if WIN
 		|	LOAD_ADDR r0, &zend_ce_arithmetic_error
 		|	push aword [r0]
 		|.else
 		|	PUSH_ADDR zend_ce_arithmetic_error, r0
 		|.endif
 		|	EXT_CALL zend_throw_error, r0
 		|	add r4, 16
 	|.endif
+	|	test byte OP:RX->op1_type, (IS_TMP_VAR|IS_VAR)
+	|	je >9
+	|	mov eax, dword OP:RX->op1.var
+	|	add r0, FP
+	|	ZVAL_PTR_DTOR ZEND_ADDR_MEM_ZVAL(ZREG_R0, 0), MAY_BE_ANY|MAY_BE_RC1|MAY_BE_RCN|MAY_BE_REF, 0, 0, NULL
+	|9:
+	|	test byte OP:RX->op2_type, (IS_TMP_VAR|IS_VAR)
+	|	je >9
+	|	mov eax, dword OP:RX->op2.var
+	|	add r0, FP
+	|	ZVAL_PTR_DTOR ZEND_ADDR_MEM_ZVAL(ZREG_R0, 0), MAY_BE_ANY|MAY_BE_RC1|MAY_BE_RCN|MAY_BE_REF, 0, 0, NULL
+	|9:
 	|	jmp ->exception_handler
 	return 1;
 }
@@ -2178,28 +2191,41 @@ static int zend_jit_negative_shift_stub(dasm_State **Dst)
 static int zend_jit_mod_by_zero_stub(dasm_State **Dst)
 {
 	|->mod_by_zero:
+	|	mov RX, EX->opline
 	|	UNDEF_OPLINE_RESULT_IF_USED
 	|.if X64
 		|.if WIN
 		|	LOAD_ADDR CARG1, &zend_ce_division_by_zero_error
 		|	mov CARG1, aword [CARG1]
 		|.else
 		|	LOAD_ADDR CARG1, zend_ce_division_by_zero_error
 		|.endif
 		|	LOAD_ADDR CARG2, "Modulo by zero"
 		|	EXT_CALL zend_throw_error, r0
 	|.else
 		|	sub r4, 8
 		|	push "Modulo by zero"
 		|.if WIN
 		|	LOAD_ADDR r0, &zend_ce_division_by_zero_error
 		|	push aword [r0]
 		|.else
 		|	PUSH_ADDR zend_ce_division_by_zero_error, r0
 		|.endif
 		|	EXT_CALL zend_throw_error, r0
 		|	add r4, 16
 	|.endif
+	|	test byte OP:RX->op1_type, (IS_TMP_VAR|IS_VAR)
+	|	je >9
+	|	mov eax, dword OP:RX->op1.var
+	|	add r0, FP
+	|	ZVAL_PTR_DTOR ZEND_ADDR_MEM_ZVAL(ZREG_R0, 0), MAY_BE_ANY|MAY_BE_RC1|MAY_BE_RCN|MAY_BE_REF, 0, 0, NULL
+	|9:
+	|	test byte OP:RX->op2_type, (IS_TMP_VAR|IS_VAR)
+	|	je >9
+	|	mov eax, dword OP:RX->op2.var
+	|	add r0, FP
+	|	ZVAL_PTR_DTOR ZEND_ADDR_MEM_ZVAL(ZREG_R0, 0), MAY_BE_ANY|MAY_BE_RC1|MAY_BE_RCN|MAY_BE_REF, 0, 0, NULL
+	|9:
 	|	jmp ->exception_handler
 	return 1;
 }
diff --git a/ext/opcache/tests/jit/assign_op_005.phpt b/ext/opcache/tests/jit/assign_op_005.phpt
new file mode 100644
index 0000000000..bc349f65c9
--- /dev/null
+++ b/ext/opcache/tests/jit/assign_op_005.phpt
@@ -0,0 +1,18 @@
+--TEST--
+JIT ASSIGN_OP: 005
+--INI--
+opcache.enable=1
+opcache.enable_cli=1
+opcache.file_update_protection=0
+opcache.jit_buffer_size=1M
+--FILE--
+<?php
+$a = ["xy" => 0];
+$x = "";
+$a["x{$x}y"] %= 0;
+?>
+--EXPECTF--
+Fatal error: Uncaught DivisionByZeroError: Modulo by zero in %sassign_op_005.php:4
+Stack trace:
+#0 {main}
+  thrown in %sassign_op_005.php on line 4
