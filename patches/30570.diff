commit e81547f313af6f6733ccc25eb3c0cea8e6008578
Author: Konstantin Varlamov <var-const@users.noreply.github.com>
Date:   Tue Mar 30 19:02:56 2021 -0400

    Fix fuzzer build failure (#7739)

diff --git a/Firestore/core/CMakeLists.txt b/Firestore/core/CMakeLists.txt
index 3270297fe..ec4806bc3 100644
--- a/Firestore/core/CMakeLists.txt
+++ b/Firestore/core/CMakeLists.txt
@@ -132,10 +132,11 @@ target_compile_definitions(
 target_link_libraries(
   firestore_util PUBLIC
   absl_base
   absl_memory
   absl_meta
   absl_optional
   absl_strings
+  absl::time
 )
 
 if(HAVE_OPENSSL_RAND_H)
diff --git a/Firestore/fuzzing/CMakeLists.txt b/Firestore/fuzzing/CMakeLists.txt
index 55699911d..a404fb4c0 100644
--- a/Firestore/fuzzing/CMakeLists.txt
+++ b/Firestore/fuzzing/CMakeLists.txt
@@ -32,11 +32,11 @@ set(
   ${FIREBASE_SOURCE_DIR}/Firestore/Example/FuzzTests/FuzzingResources
 )
 
-link_libraries(firestore_core)
+link_libraries(firestore_core firestore_util)
 
 
 # Serializer fuzzing target.
 # TODO(minafarid): Do not define a CORPUS in this target, but rather generate
 # the serializer corpus by converting the text protos from the serializer
 # corpus in the iOS FuzzingResources to binary protos. This conversion requires
 # the protoc binary that is not currently available.
diff --git a/Firestore/fuzzing/serializer_fuzzer.cc b/Firestore/fuzzing/serializer_fuzzer.cc
index af7fe8e6e..66844e620 100644
--- a/Firestore/fuzzing/serializer_fuzzer.cc
+++ b/Firestore/fuzzing/serializer_fuzzer.cc
@@ -1,44 +1,47 @@
 /*
  * Copyright 2018 Google
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
 
 #include <cstddef>
 #include <cstdint>
 
 #include "Firestore/Protos/nanopb/google/firestore/v1/document.nanopb.h"
 #include "Firestore/core/src/model/database_id.h"
 #include "Firestore/core/src/nanopb/message.h"
 #include "Firestore/core/src/nanopb/reader.h"
 #include "Firestore/core/src/remote/serializer.h"
+#include "Firestore/core/src/util/read_context.h"
 
 using firebase::firestore::google_firestore_v1_Value;
 using firebase::firestore::model::DatabaseId;
 using firebase::firestore::nanopb::Message;
 using firebase::firestore::nanopb::StringReader;
 using firebase::firestore::remote::Serializer;
+using firebase::firestore::util::ReadContext;
 
 extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
   Serializer serializer{DatabaseId{"project", DatabaseId::kDefault}};
   try {
     // Try to decode the received data using the serializer.
     StringReader reader{data, size};
     auto message = Message<google_firestore_v1_Value>::TryParse(&reader);
-    serializer.DecodeFieldValue(&reader, *message);
+    ReadContext context;
+    serializer.DecodeFieldValue(&context, *message);
   } catch (...) {
     // Ignore caught errors and assertions because fuzz testing is looking for
     // crashes and memory errors.
   }
   return 0;
 }
