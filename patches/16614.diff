commit 9b4b080be788a602fa8f01ac8d7e29cdaad07902
Author: Frank Morgner <frankmorgner@gmail.com>
Date:   Tue Aug 27 15:27:15 2019 +0200

    fixed compiler warning

diff --git a/src/libopensc/asn1.c b/src/libopensc/asn1.c
index 77ed4d7b..7df3e0a2 100644
--- a/src/libopensc/asn1.c
+++ b/src/libopensc/asn1.c
@@ -568,44 +568,43 @@ const u8 *sc_asn1_verify_tag(sc_context_t *ctx, const u8 * buf, size_t buflen,
 static int decode_bit_string(const u8 * inbuf, size_t inlen, void *outbuf,
 			     size_t outlen, int invert)
 {
 	const u8 *in = inbuf;
 	u8 *out = (u8 *) outbuf;
 	int i, count = 0;
 	int zero_bits;
 	size_t octets_left;
 
-	if (outlen < octets_left)
-		return SC_ERROR_BUFFER_TOO_SMALL;
 	if (inlen < 1)
 		return SC_ERROR_INVALID_ASN1_OBJECT;
-
+	memset(outbuf, 0, outlen);
 	zero_bits = *in & 0x07;
-	octets_left = inlen - 1;
 	in++;
-	memset(outbuf, 0, outlen);
+	octets_left = inlen - 1;
+	if (outlen < octets_left)
+		return SC_ERROR_BUFFER_TOO_SMALL;
 
 	while (octets_left) {
 		/* 1st octet of input:  ABCDEFGH, where A is the MSB */
 		/* 1st octet of output: HGFEDCBA, where A is the LSB */
 		/* first bit in bit string is the LSB in first resulting octet */
 		int bits_to_go;
 
 		*out = 0;
 		if (octets_left == 1)
 			bits_to_go = 8 - zero_bits;
 		else
 			bits_to_go = 8;
 		if (invert)
 			for (i = 0; i < bits_to_go; i++) {
 				*out |= ((*in >> (7 - i)) & 1) << i;
 			}
 		else {
 			*out = *in;
 		}
 		out++;
 		in++;
 		octets_left--;
 		count++;
 	}
 	return (count * 8) - zero_bits;
 }
