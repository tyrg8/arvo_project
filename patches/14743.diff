commit d661a22ae283c604e9e95eceeaf4e6b47e7e1753
Author: Andrew den Exter <andrew.den.exter@qinetic.com.au>
Date:   Mon May 13 12:09:04 2019 +1000

    Write an anchor-type attribute when embedding images in an ODF document
    
    Without this some readers will fail to display the image or position
    the image at the start of a paragraph rather than inline.
    
    Change-Id: I2b9257e3193e5e68eb20112017a0c23be1d06cb0
    Reviewed-by: Lars Knoll <lars.knoll@qt.io>

diff --git a/src/gui/text/qtextodfwriter.cpp b/src/gui/text/qtextodfwriter.cpp
index 1a96f7608f..1906502c10 100644
--- a/src/gui/text/qtextodfwriter.cpp
+++ b/src/gui/text/qtextodfwriter.cpp
@@ -437,83 +437,84 @@ static bool probeImageData(QIODevice *device, QImage *image, QString *mimeType,
 void QTextOdfWriter::writeInlineCharacter(QXmlStreamWriter &writer, const QTextFragment &fragment) const
 {
     writer.writeStartElement(drawNS, QString::fromLatin1("frame"));
     if (m_strategy == 0) {
         // don't do anything.
     }
     else if (fragment.charFormat().isImageFormat()) {
         QTextImageFormat imageFormat = fragment.charFormat().toImageFormat();
         writer.writeAttribute(drawNS, QString::fromLatin1("name"), imageFormat.name());
 
         QByteArray data;
         QString mimeType;
         qreal width = 0;
         qreal height = 0;
 
         QImage image;
         QString name = imageFormat.name();
         if (name.startsWith(QLatin1String(":/"))) // auto-detect resources
             name.prepend(QLatin1String("qrc"));
         QUrl url = QUrl(name);
         const QVariant variant = m_document->resource(QTextDocument::ImageResource, url);
         if (variant.type() == QVariant::Image) {
             image = qvariant_cast<QImage>(variant);
         } else if (variant.type() == QVariant::ByteArray) {
             data = variant.toByteArray();
 
             QBuffer buffer(&data);
             buffer.open(QIODevice::ReadOnly);
             probeImageData(&buffer, &image, &mimeType, &width, &height);
         } else {
             // try direct loading
             QFile file(imageFormat.name());
             if (file.open(QIODevice::ReadOnly) && !probeImageData(&file, &image, &mimeType, &width, &height)) {
                 file.seek(0);
                 data = file.readAll();
             }
         }
 
         if (! image.isNull()) {
             QBuffer imageBytes;
 
             int imgQuality = imageFormat.quality();
             if (imgQuality >= 100 || imgQuality < 0 || image.hasAlphaChannel()) {
                 QImageWriter imageWriter(&imageBytes, "png");
                 imageWriter.write(image);
 
                 data = imageBytes.data();
                 mimeType = QStringLiteral("image/png");
             } else {
                 // Write images without alpha channel as jpg with quality set by QTextImageFormat
                 QImageWriter imageWriter(&imageBytes, "jpg");
                 imageWriter.setQuality(imgQuality);
                 imageWriter.write(image);
 
                 data = imageBytes.data();
                 mimeType = QStringLiteral("image/jpg");
             }
 
             width = image.width();
             height = image.height();
         }
 
         if (!data.isEmpty()) {
             if (imageFormat.hasProperty(QTextFormat::ImageWidth)) {
                 width = imageFormat.width();
             }
             if (imageFormat.hasProperty(QTextFormat::ImageHeight)) {
                 height = imageFormat.height();
             }
 
             QString filename = m_strategy->createUniqueImageName();
 
             m_strategy->addFile(filename, mimeType, data);
 
             writer.writeAttribute(svgNS, QString::fromLatin1("width"), pixelToPoint(width));
             writer.writeAttribute(svgNS, QString::fromLatin1("height"), pixelToPoint(height));
+            writer.writeAttribute(textNS, QStringLiteral("anchor-type"), QStringLiteral("as-char"));
             writer.writeStartElement(drawNS, QString::fromLatin1("image"));
             writer.writeAttribute(xlinkNS, QString::fromLatin1("href"), filename);
             writer.writeEndElement(); // image
         }
     }
     writer.writeEndElement(); // frame
 }
