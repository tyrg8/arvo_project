commit ab1e3c9309330e8e3562d3e77c90fb1edb971f09
Author: Philip.Hazel <Philip.Hazel@gmail.com>
Date:   Wed May 10 18:21:03 2017 +0000

    Refactor to avoid sanitize warnings when accessing the variable size ovector in
    the backtracking frame. Fixes oss-fuzz issue 1465. Also make -bigstack in
    RunTest allocate a 64Mb stack for use with clang sanitizing.

diff --git a/ChangeLog b/ChangeLog
index b22a58a..9be4acc 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -19,25 +19,28 @@ before release, but after the code was made available in the repository. These
 bugs were never in fully released code, but are noted here for the record.
 
   (a) If a pattern had fewer capturing parentheses than the ovector supplied in 
       the match data block, a memory error (detectable by ASAN) occurred after
       a match, because the external block was being set from non-existent
       internal ovector fields. Fixes oss-fuzz issue 781.
 
   (b) A pattern with very many capturing parentheses (when the internal frame 
       size was greater than the initial frame vector on the stack) caused a 
       crash. A vector on the heap is now set up at the start of matching if the 
       vector on the stack is not big enough to handle at least 10 frames. 
       Fixes oss-fuzz issue 783. 
       
   (c) Handling of (*VERB)s in recursions was wrong in some cases.
   
   (d) Captures in negative assertions that were used as conditions were not
       happening if the assertion matched via (*ACCEPT).   
       
   (e) Mark values were not being passed out of recursions. 
   
   (f) Refactor some code in do_callout() to avoid picky compiler warnings about 
       negative indices. Fixes oss-fuzz issue 1454.
+      
+  (g) Similarly refactor the way the variable length ovector is addressed for
+      similar reasons. Fixes oss-fuzz issue 1465.
  
       
 2. Now that pcre2_match() no longer uses recursive function calls (see above),
@@ -160,6 +163,9 @@ tests to improve coverage.
 31. If more than one of "push", "pushcopy", or "pushtablescopy" were set in 
 pcre2test, a crash could occur.
 
+32. Make -bigstack in RunTest allocate a 64Mb stack (instead of 16 MB) so that 
+all the tests can run with clang's sanitizing options.
+
 
 
 Version 10.23 14-February-2017
diff --git a/RunTest b/RunTest
index c15b68e..89c4b77 100755
--- a/RunTest
+++ b/RunTest
@@ -321,7 +321,7 @@ fi
 
 $sim ./pcre2test -S 1 /dev/null /dev/null
 if [ $? -eq 0 -a "$bigstack" != "" ] ; then
-  setstack="-S 16"
+  setstack="-S 64"
 else
   setstack=""
 fi
diff --git a/src/pcre2_match.c b/src/pcre2_match.c
index 41d0fcb..373ee9e 100644
--- a/src/pcre2_match.c
+++ b/src/pcre2_match.c
@@ -169,26 +169,32 @@ localised backtracking memory. These are #defined with Lxxx names at the point
 of use and undefined afterwards. */
 
 #define Fback_frame        F->back_frame
 #define Fcapture_last      F->capture_last
 #define Fcurrent_recurse   F->current_recurse
 #define Fecode             F->ecode
 #define Feptr              F->eptr
 #define Fgroup_frame_type  F->group_frame_type
 #define Flast_group_offset F->last_group_offset
 #define Flength            F->length
 #define Fmark              F->mark
 #define Frdepth            F->rdepth
 #define Fstart_match       F->start_match
 #define Foffset_top        F->offset_top
 #define Foccu              F->occu
 #define Fop                F->op
-#define Fovector           F->ovector
 #define Freturn_id         F->return_id
 
+/* We need a cast for this one because F->ovector is a vector of size 2, at the 
+end of the backtrack frame, but when there are capturing parentheses the space 
+allocated is bigger so we want to be able to address more elements. Without the 
+case, -fsanitize=undefined grumbles at this. */
+
+#define Fovector           ((PCRE2_SIZE *)(F->ovector))
+
 
 #ifdef DEBUG_FRAMES_DISPLAY
 /*************************************************
 *      Display current frames and contents       *
 *************************************************/
 
 /* This debugging function displays the current set of frames and their
