commit e9948b7041c7aa9d6d368d3fedc8496020d8b48f
Author: Diego F. Aranha <dfaranha@gmail.com>
Date:   Wed Jul 14 00:48:40 2021 +0200

    Initialize buffers with 0.

diff --git a/src/eb/relic_eb_util.c b/src/eb/relic_eb_util.c
index 94236635..b22f4227 100644
--- a/src/eb/relic_eb_util.c
+++ b/src/eb/relic_eb_util.c
@@ -548,44 +548,45 @@ void eb_read_bin(eb_t a, const uint8_t *bin, int len) {
 void eb_write_bin(uint8_t *bin, int len, const eb_t a, int pack) {
 	eb_t t;
 
 	eb_null(t);
 
+	memset(bin, 0, len);
+
 	if (eb_is_infty(a)) {
 		if (len < 1) {
 			RLC_THROW(ERR_NO_BUFFER);
 			return;
 		} else {
-			bin[0] = 0;
 			return;
 		}
 	}
 
 	RLC_TRY {
 		eb_new(t);
 
 		eb_norm(t, a);
 
 		if (pack) {
 			if (len < RLC_FB_BYTES + 1) {
 				RLC_THROW(ERR_NO_BUFFER);
 			} else {
 				eb_pck(t, t);
 				bin[0] = 2 | fb_get_bit(t->y, 0);
 				fb_write_bin(bin + 1, RLC_FB_BYTES, t->x);
 			}
 		} else {
 			if (len < 2 * RLC_FB_BYTES + 1) {
 				RLC_THROW(ERR_NO_BUFFER);
 			} else {
 				bin[0] = 4;
 				fb_write_bin(bin + 1, RLC_FB_BYTES, t->x);
 				fb_write_bin(bin + RLC_FB_BYTES + 1, RLC_FB_BYTES, t->y);
 			}
 		}
 	} RLC_CATCH_ANY {
 		RLC_THROW(ERR_CAUGHT);
 	}
 	RLC_FINALLY {
 		eb_free(t);
 	}
 }
diff --git a/src/ed/relic_ed_util.c b/src/ed/relic_ed_util.c
index c43fbaf4..a526378f 100644
--- a/src/ed/relic_ed_util.c
+++ b/src/ed/relic_ed_util.c
@@ -292,45 +292,46 @@ void ed_read_bin(ed_t a, const uint8_t *bin, int len) {
 void ed_write_bin(uint8_t *bin, int len, const ed_t a, int pack) {
 	ed_t t;
 
 	ed_null(t);
 
+	memset(bin, 0, len);
+
 	if (ed_is_infty(a)) {
 		if (len < 1) {
 			RLC_THROW(ERR_NO_BUFFER);
 			return;
 		} else {
-			bin[0] = 0;
 			return;
 		}
 	}
 
 	RLC_TRY {
 		ed_new(t);
 
 		ed_norm(t, a);
 
 		if (pack) {
 			if (len != RLC_FP_BYTES + 1) {
 				RLC_THROW(ERR_NO_BUFFER);
 			} else {
 				ed_pck(t, t);
 				bin[0] = 2 | fp_get_bit(t->x, 0);
 				fp_write_bin(bin + 1, RLC_FP_BYTES, t->y);
 			}
 		} else {
 			if (len != 2 * RLC_FP_BYTES + 1) {
 				RLC_THROW(ERR_NO_BUFFER);
 			} else {
 				bin[0] = 4;
 				fp_write_bin(bin + 1, RLC_FP_BYTES, t->y);
 				fp_write_bin(bin + RLC_FP_BYTES + 1, RLC_FP_BYTES, t->x);
 			}
 		}
 	}
 	RLC_CATCH_ANY {
 		RLC_THROW(ERR_CAUGHT);
 	}
 	RLC_FINALLY {
 		ed_free(t);
 	}
 }
diff --git a/src/ep/relic_ep_util.c b/src/ep/relic_ep_util.c
index e1694548..a7af2a1a 100644
--- a/src/ep/relic_ep_util.c
+++ b/src/ep/relic_ep_util.c
@@ -282,44 +282,46 @@ void ep_read_bin(ep_t a, const uint8_t *bin, int len) {
 void ep_write_bin(uint8_t *bin, int len, const ep_t a, int pack) {
 	ep_t t;
 
 	ep_null(t);
 
+	memset(bin, 0, len);
+
 	if (ep_is_infty(a)) {
 		if (len < 1) {
 			RLC_THROW(ERR_NO_BUFFER);
 			return;
 		} else {
 			bin[0] = 0;
 			return;
 		}
 	}
 
 	RLC_TRY {
 		ep_new(t);
 
 		ep_norm(t, a);
 
 		if (pack) {
 			if (len < RLC_FP_BYTES + 1) {
 				RLC_THROW(ERR_NO_BUFFER);
 			} else {
 				ep_pck(t, t);
 				bin[0] = 2 | fp_get_bit(t->y, 0);
 				fp_write_bin(bin + 1, RLC_FP_BYTES, t->x);
 			}
 		} else {
 			if (len < 2 * RLC_FP_BYTES + 1) {
 				RLC_THROW(ERR_NO_BUFFER);
 			} else {
 				bin[0] = 4;
 				fp_write_bin(bin + 1, RLC_FP_BYTES, t->x);
 				fp_write_bin(bin + RLC_FP_BYTES + 1, RLC_FP_BYTES, t->y);
 			}
 		}
 	} RLC_CATCH_ANY {
 		RLC_THROW(ERR_CAUGHT);
 	}
 	RLC_FINALLY {
 		ep_free(t);
 	}
 }
diff --git a/src/epx/relic_ep2_util.c b/src/epx/relic_ep2_util.c
index a814c8b0..69fd7712 100644
--- a/src/epx/relic_ep2_util.c
+++ b/src/epx/relic_ep2_util.c
@@ -292,43 +292,44 @@ void ep2_read_bin(ep2_t a, const uint8_t *bin, int len) {
 void ep2_write_bin(uint8_t *bin, int len, ep2_t a, int pack) {
 	ep2_t t;
 
 	ep2_null(t);
 
+	memset(bin, 0, len);
+
 	if (ep2_is_infty(a)) {
 		if (len < 1) {
 			RLC_THROW(ERR_NO_BUFFER);
 			return;
 		} else {
-			bin[0] = 0;
 			return;
 		}
 	}
 
 	RLC_TRY {
 		ep2_new(t);
 
 		ep2_norm(t, a);
 
 		if (pack) {
 			if (len < 2 * RLC_FP_BYTES + 1) {
 				RLC_THROW(ERR_NO_BUFFER);
 			} else {
 				ep2_pck(t, t);
 				bin[0] = 2 | fp_get_bit(t->y[0], 0);
 				fp2_write_bin(bin + 1, 2 * RLC_FP_BYTES, t->x, 0);
 			}
 		} else {
 			if (len < 4 * RLC_FP_BYTES + 1) {
 				RLC_THROW(ERR_NO_BUFFER);
 			} else {
 				bin[0] = 4;
 				fp2_write_bin(bin + 1, 2 * RLC_FP_BYTES, t->x, 0);
 				fp2_write_bin(bin + 2 * RLC_FP_BYTES + 1, 2 * RLC_FP_BYTES, t->y, 0);
 			}
 		}
 	} RLC_CATCH_ANY {
 		RLC_THROW(ERR_CAUGHT);
 	} RLC_FINALLY {
 		ep2_free(t);
 	}
 }
diff --git a/src/epx/relic_ep4_util.c b/src/epx/relic_ep4_util.c
index 2e684393..c305b7a3 100644
--- a/src/epx/relic_ep4_util.c
+++ b/src/epx/relic_ep4_util.c
@@ -281,33 +281,34 @@ void ep4_read_bin(ep4_t a, const uint8_t *bin, int len) {
 void ep4_write_bin(uint8_t *bin, int len, ep4_t a, int pack) {
 	ep4_t t;
 
 	ep4_null(t);
 
+	memset(bin, 0, len);
+
 	if (ep4_is_infty(a)) {
 		if (len < 1) {
 			RLC_THROW(ERR_NO_BUFFER);
 			return;
 		} else {
-			bin[0] = 0;
 			return;
 		}
 	}
 
 	RLC_TRY {
 		ep4_new(t);
 
 		ep4_norm(t, a);
 
 		if (len < 8 * RLC_FP_BYTES + 1) {
 			RLC_THROW(ERR_NO_BUFFER);
 		} else {
 			bin[0] = 4;
 			fp4_write_bin(bin + 1, 4 * RLC_FP_BYTES, t->x);
 			fp4_write_bin(bin + 4 * RLC_FP_BYTES + 1, 4 * RLC_FP_BYTES, t->y);
 		}
 	} RLC_CATCH_ANY {
 		RLC_THROW(ERR_CAUGHT);
 	} RLC_FINALLY {
 		ep4_free(t);
 	}
 }
