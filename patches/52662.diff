commit e6593b237eea851072e0d545795ee23ec0b4b524
Author: Veronika Hanulikova <xhanulik@fi.muni.cz>
Date:   Thu Nov 3 10:21:47 2022 +0100

    Check buffer size before dereferencing
    
    Thanks OSS-Fuzz
    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=52662

diff --git a/src/libopensc/card-authentic.c b/src/libopensc/card-authentic.c
index f0ee6757..563210d8 100644
--- a/src/libopensc/card-authentic.c
+++ b/src/libopensc/card-authentic.c
@@ -152,23 +152,27 @@ authentic_update_blob(struct sc_context *ctx, unsigned tag, unsigned char *data,
 
 
 static int
-authentic_parse_size(unsigned char *in, size_t *out)
+authentic_parse_size(unsigned char *in, size_t in_len, size_t *out)
 {
-	if (!in || !out)
+	if (!in || !out || in_len < 1)
 		return SC_ERROR_INVALID_ARGUMENTS;
 
 	if (*in < 0x80)   {
 		*out = *in;
 		return 1;
 	}
 	else if (*in == 0x81)   {
+		if (in_len < 2)
+			return SC_ERROR_INVALID_DATA;
 		*out = *(in + 1);
 		return 2;
 	}
 	else if (*in == 0x82)   {
+		if (in_len < 3)
+			return SC_ERROR_INVALID_DATA;
 		*out = *(in + 1) * 0x100 + *(in + 2);
 		return 3;
 	}
 
 	return SC_ERROR_INVALID_DATA;
 }
@@ -178,34 +182,40 @@ static int
 authentic_get_tagged_data(struct sc_context *ctx, unsigned char *in, size_t in_len,
 		unsigned in_tag, unsigned char **out, size_t *out_len)
 {
 	size_t size_len, tag_len, offs, size;
 	unsigned tag;
 
 	if (!out || !out_len)
 		LOG_FUNC_RETURN(ctx, SC_ERROR_INVALID_ARGUMENTS);
 
 	for (offs = 0; offs < in_len; )   {
 		if ((*(in + offs) == 0x7F) || (*(in + offs) == 0x5F))   {
 			tag = *(in + offs) * 0x100 + *(in + offs + 1);
 			tag_len = 2;
 		}
 		else   {
 			tag = *(in + offs);
 			tag_len = 1;
 		}
 
-		size_len = authentic_parse_size(in + offs + tag_len, &size);
+		if (offs + tag_len >= in_len)
+			LOG_TEST_RET(ctx, SC_ERROR_INTERNAL, "parse error: invalid data");
+
+		size_len = authentic_parse_size(in + offs + tag_len, in_len - (offs + tag_len), &size);
 		LOG_TEST_RET(ctx, size_len, "parse error: invalid size data");
 
 		if (tag == in_tag)   {
+			if (offs + tag_len + size_len >= in_len)
+				LOG_TEST_RET(ctx, SC_ERROR_INTERNAL, "parse error: invalid data");
+
 			*out = in + offs + tag_len + size_len;
 			*out_len = size;
 
 			return SC_SUCCESS;
 		}
 
 		offs += tag_len + size_len + size;
 	}
 
 	return SC_ERROR_ASN1_OBJECT_NOT_FOUND;
 }
