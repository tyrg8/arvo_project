commit 5e737279c6e832a757f0326128e5a5f96fbdd291
Author: Alan Modra <amodra@gmail.com>
Date:   Mon Mar 23 21:20:54 2020 +1030

    i386msdos uninitialised read
    
    Also reinstate ld i386aout for i386-msdos target, which doesn't build
    otherwise.
    
    bfd/
            * i386msdos.c (msdos_object_p): Don't access e_lfanew when that
            field hasn't been read.  Remove unnecessary casts.
    ld/
            * Makefile.am (ALL_EMULATION_SOURCES): Reinstate ei386aout.c.
            Include ei386aout dep file.
            * Makefile.in: Regenerate.
            * po/BLD-POTFILES.in: Regenerate.

diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index 2e0abc83599..c513ebd7537 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,1614 +1,1619 @@
+2020-03-23  Alan Modra  <amodra@gmail.com>
+
+	* i386msdos.c (msdos_object_p): Don't access e_lfanew when that
+	field hasn't been read.  Remove unnecessary casts.
+
 2020-03-22  Alan Modra  <amodra@gmail.com>
 
 	* coff64-rs6000.c (xcoff64_slurp_armap): Ensure size is large
 	enough to read number of symbols.
 
 2020-03-20  H.J. Lu  <hongjiu.lu@intel.com>
 
 	* configure.ac (HAVE_EXECUTABLE_SUFFIX): Removed.
 	(EXECUTABLE_SUFFIX): Likewise.
 	* config.in: Regenerated.
 	* configure: Likewise.
 	* plugin.c (bfd_plugin_close_and_cleanup): Defined as
 	_bfd_generic_close_and_cleanup.
 	(plugin_list_entry): Remove resolution_file, resolution_option,
 	real_bfd, real_nsyms, real_syms, lto_nsyms, lto_syms, gcc,
 	lto_wrapper, gcc_env and initialized,
 	(need_lto_wrapper_p): Removed.
 	(get_lto_wrapper): Likewise.
 	(setup_lto_wrapper_env): Likewise.
 	(register_all_symbols_read): Likewise.
 	(egister_cleanup): Likewise.
 	(get_symbols): Likewise.
 	(add_input_file): Likewise.
 	(bfd_plugin_set_program_name): Remove need_lto_wrapper.
 	(add_symbols): Updated.
 	(try_claim): Likewise.
 	(try_load_plugin): Likewise.
 	(bfd_plugin_canonicalize_symtab): Likewise.
 	* plugin.h (bfd_plugin_set_program_name): Remove int argument.
 	(plugin_data_struct): Remove real_bfd, real_nsyms and real_syms.
 
 2020-03-19  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR binutils/25640
 	* plugin.c (plugin_list_entry): Add has_symbol_type.
 	(add_symbols_v2): New function.
 	(bfd_plugin_open_input): Don't invoke LTO wrapper if LTO plugin
 	provides symbol type.
 	(try_load_plugin): Add LDPT_ADD_SYMBOLS_V2.
 	(bfd_plugin_canonicalize_symtab): Use LTO plugin symbol type if
 	available.
 
 2020-03-20  Alan Modra  <amodra@gmail.com>
 
 	* coff-rs6000.c (_bfd_xcoff_slurp_armap): Ensure size is large
 	enough to read number of symbols.
 
 2020-03-20  Alan Modra  <amodra@gmail.com>
 
 	* elf.c (_bfd_elf_setup_sections): Don't test known non-NULL
 	backend functions for NULL before calling.
 	(copy_special_section_fields, _bfd_elf_copy_private_bfd_data),
 	(bfd_section_from_shdr, assign_section_numbers): Likewise.
 	* elfcode.h (elf_write_relocs, elf_slurp_reloc_table): Likewise.
 	* elfnn-ia64.c (ignore_errors): New function.
 	(elf_backend_link_order_error_handler): Redefine as ignore_errors.
 
 2020-03-19  Nick Clifton  <nickc@redhat.com>
 
 	PR 25676
 	* dwarf2.c (struct varinfo): Add unit_offset field to record the
 	location of the varinfo in the unit's debug info data.  Change the
 	type of the stack field to a boolean.
 	(lookup_var_by_offset): New function.  Returns the varinfo
 	structure for the variable described at the given offset in the
 	unit's debug info.
 	(scan_unit_for_symbols): Add support for variables which have the
 	DW_AT_specification attribute.
 
 2020-03-19  Nick Clifton  <nickc@redhat.com>
 
 	PR 25699
 	* elf.c (bfd_elf_set_group_contents): Replace assertion with an
 	error return.
 
 2020-03-19  Sebastian Huber  <sebastian.huber@embedded-brains.de>
 
 	* elfxx-riscv.c (riscv_parse_subset): Don't use C99.
 
 2020-03-18  Nick Clifton  <nickc@redhat.com>
 
 	PR 25673
 	* elf.c (_bfd_elf_write_secondary_reloc_section): Fix illegal
 	memory access when processing a corrupt secondary reloc section.
 
 2020-03-18  Christophe Lyon  <christophe.lyon@linaro.org>
 
 	* elf32-arm.c (arm_build_one_stub): Emit a fatal error message
 	instead of calling abort.
 	* elf32-csky.c (csky_build_one_stub): Likewise.
 	* elf32-hppa.c (hppa_build_one_stub): Likewise.
 	* elf32-m68hc11.c (m68hc11_elf_build_one_stub): Likewise.
 	* elf32-m68hc12.c (m68hc12_elf_build_one_stub): Likewise.
 	* elf32-metag.c (metag_build_one_stub): Likewise.
 	* elf32-nios2.c (nios2_build_one_stub): Likewise.
 	* elf64-ppc.c (ppc_build_one_stub): Likewise.
 	(ppc_size_one_stub): Likewise.
 	* elfnn-aarch64.c (aarch64_build_one_stub): Likewise.
 
 2020-03-17  Nick Clifton  <nickc@redhat.com>
 
 	PR 25688
 	* elf.c (_bfd_elf_copy_special_section_fields): Replace assertions
 	with error messages.
 
 2020-03-17  Nick Clifton  <nickc@redhat.com>
 
 	PR 25687
 	* elf.c (_bfd_elf_slurp_secondary_reloc_section): Remove redundant
 	free.  Add free on another failure path.
 
 2020-03-16  Alan Modra  <amodra@gmail.com>
 
 	PR 25675
 	* elf.c (elf_sort_segments): Don't call bfd_octets_per_byte unless
 	we have a non-zero section count.  Do lma comparison in octets.
 
 2020-03-16  Alan Modra  <amodra@gmail.com>
 
 	* vms-alpha.c (dst_restore_location): Validate index into
 	dst_ptr_offsets array before accessing.  Return status.
 	(dst_retrieve_location): Similarly, making "loc" parameter a
 	pointer to return value.
 	(_bfd_vms_slurp_etir): Update calls to above functions.
 
 2020-03-14  Kamil Rytarowski  <n54@gmx.com>
 
 	* configure.ac: Include netbsd-core.lo for all NetBSD arm and mips
 	targets.
 	* configure: Regenerated.
 
 2020-03-14  Alan Modra  <amodra@gmail.com>
 
 	* section.c (BFD_FAKE_SECTIONS): Formatting.
 	* bfd-in2.h: Regenerate.
 
 2020-03-13  Kamil Rytarowski  <n54@gmx.com>
 
 	* elf.c (elfcore_grok_netbsd_note): Add support for
 	NT_NETBSDCORE_LWPSTATUS notes.
 
 2020-03-13  Christophe Lyon  <christophe.lyon@linaro.org>
 
 	* bfd-in2.h: Regenerate.
 	* section.c (asection): Add already_assigned field.
 	(BFD_FAKE_SECTION): Add default initializer for it.
 	* ecoff.c (bfd_debug_section): Initialize already_assigned field.
 	* elf32-arm.c (arm_build_one_stub): Add support for
 	non_contiguous_regions.
 	* elf32-csky.c (csky_build_one_stub): Likewise.
 	* elf32-hppa.c (hppa_build_one_stub): Likewise.
 	* elf32-m68hc11.c (m68hc11_elf_build_one_stub): Likewise.
 	* elf32-m68hc12.c (m68hc12_elf_build_one_stub): Likewise.
 	* elf32-metag.c (metag_build_one_stub): Likewise.
 	* elf32-nios2.c (nios2_build_one_stub): Likewise.
 	* elf64-ppc.c (ppc_build_one_stub): Likewise.
 	(ppc_size_one_stub): Likewise.
 	* elfnn-aarch64.c (aarch64_build_one_stub): Likewise.
 	* elflink.c (elf_link_input_bfd): Likewise.
 
 2020-03-13  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR ld/24920
 	* elf-linker-x86.h (elf_linker_x86_params): Add
 	static_before_all_inputs and has_dynamic_linker.
 	* elfxx-x86.c (_bfd_x86_elf_link_setup_gnu_properties): Report
 	dynamic input objects if -static is passed at command-line
 	before all input files without --dynamic-linker unless
 	--no-dynamic-linker is used.
 
 2020-03-13  Kamil Rytarowski  <n54@gmx.com>
 
 	* elf.c (elfcore_grok_netbsd_note): Add support for aarch64.
 
 2020-03-13  Christian Eggers  <ceggers@gmx.de>
 
 	* bfd.c (bfd_record_phdr): New local "opb".  Fix assignment of
 	"p_paddr" from "at".
 	* elfcode.h (bfd_from_remote_memory): Add units to several
 	parameters.  New local "opb".  Fix usage of p_align.  Fix
 	calculation of "localbase" from "ehdr_vma" and "p_vaddr".  Fix
 	call of target_read_memory.
 	* elflink.c (elf_fixup_link_order): Fix scope of "s" local.  Fix
 	calculation of "offset" and "output_offset".
 	(bfd_elf_final_link): New local "opb".  Fix calculation of "size"
 	from "offset" and fix calculation of "end" from "vma+size".  Fix
 	comparison between "sh_addr" and "vma"/"output_offset".
 	(bfd_elf_discard_info): Fix calculation of "eh_alignment".
 	* elf-bfd.h (struct elf_link_hash_table): Add unit to tls_size
 	member.
 	* elf.c (_bfd_elf_map_sections_to_segments): Add unit (bytes/
 	octets) to "wrap_to2 and "phdr_size" locals.  Fix calculation of
 	"wrap_to" value.  Add unit (bytes) to phdr_lma variable.  Fix
 	assignment of p_paddr from phdr_lma.  Fix comparison between
 	"lma+size" and "next->lma".
 	(elf_sort_segments): Fix assignment from p_paddr to lma.
 	(assign_file_positions_for_load_sections): Add unit (bytes) to
 	local "align".  Fix calculation of local "off_adjust".  Fix
 	calculation of local "filehdr_vaddr".
 	(assign_file_positions_for_non_load_sections): New local "opb".
 	Fix calculation of "end" from "p_size". Fix comparison between
 	"vma+SECTION_SIZE" and "start".  Fix calculation of "p_memsz"
 	from "end" and "p_vaddr".
 	(rewrite_elf_program_header): Fix comparison between p_vaddr and
 	vma.  Fix assignment to p_paddr from lma.  Fix comparison between
 	p_paddr and lma.  Fix assignment to p_paddr from lma.
 	* merge.c (sec_merge_emit): New local "opb". Convert
 	"alignment_power" to octets.
 	(_bfd_add_merge_section): New locals "alignment_power" and
 	"opb".  Fix comparison between "alignment_power" and
 	"sizeof(align)".
 	(_bfd_merge_sections): New local "opb".  Divide size by opb
 	before checking align mask.
 
 2020-03-13  Christian Eggers  <ceggers@gmx.de>
 
 	* elf.c (_bfd_elf_make_section_from_shdr): Introduce new temp
 	opb.  Divide Elf_Internal_Shdr::sh_addr by opb when setting
 	section LMA/VMA.
 	(_bfd_elf_make_section_from_phdr): Similarly.
 	(elf_fake_sections): Fix calculation of
 	Elf_Internal_shdr::sh_addr from section VMA.
 	(_bfd_elf_map_sections_to_segments): Fix mixup between octets
 	and bytes.
 	(assign_file_positions_for_load_sections): Fix calculations of
 	Elf_Internal_shdr::p_vaddr and p_paddr from section LMA/VMA.  Fix
 	comparison between program header address and section LMA.
 	(assign_file_positions_for_non_load_sections): Likewise.
 	(rewrite_elf_program_header): Likewise.  Introduce new temp opb.
 	(IS_CONTAINED_BY_VMA): Add parameter opb.
 	(IS_CONTAINED_BY_LMA,IS_SECTION_IN_INPUT_SEGMENT,
 	INCLUDE_SECTION_IN_SEGMENT): Likewise.
 	(copy_elf_program_header): Update call to ELF_SECTION_IN_SEGMENT.
 	Fix calculations of p_addr_valid and p_vaddr_offset.
 	* elflink.c (elf_link_add_object_symbols): Multiply section VMA
 	with octets per byte when comparing against p_vaddr.
 
 2020-03-11  Alan Modra  <amodra@gmail.com>
 
 	* som.c (setup_sections): Sanity check subspace.name.
 
 2020-03-11  Alan Modra  <amodra@gmail.com>
 
 	* elf64-ppc.c (ppc64_elf_inline_plt): Do increment rel in for loop.
 
 2020-03-10  Alan Modra  <amodra@gmail.com>
 
 	PR 25648
 	* ihex.c (ihex_write_object_contents): Don't assume ordering of
 	addresses here.
 
 2020-03-09  Alan Modra  <amodra@gmail.com>
 
 	* wasm-module.c (wasm_scan): Sanity check file name length
 	before allocating memory.  Move common section setup code.  Do
 	without bfd_tell to calculate section size.
 
 2020-03-06  Nick Clifton  <nickc@redhat.com>
 
 	* elf.c (_bfd_elf_set_section_contents): Replace call to abort
 	with error messages and failure return values.
 
 2020-03-05  Max Filippov  <jcmvbkbc@gmail.com>
 
 	* elf32-xtensa.c (shrink_dynamic_reloc_sections): Shrink dynamic
 	relocation sections for any removed reference to a dynamic symbol.
 
 2020-03-05  Nick Clifton  <nickc@redhat.com>
 
 	* elf-bfd.h (struct elf_backend_data): Add new fields:
 	init_secondary_reloc_section, slurp_secondary_reloc_section,
 	write_secondary_reloc_section.
 	(_bfd_elf_init_secondary_reloc_section): Prototype.
 	(_bfd_elf_slurp_secondary_reloc_section): Prototype.
 	(_bfd_elf_write_secondary_reloc_section): Prototype.
 	* elf.c ( bfd_section_from_shdr): Invoke the new
 	init_secondary_reloc_section backend function, if defined, when a
 	second reloc section is encountered.
 	(swap_out_syms): Invoke the new symbol_section_index function, if
 	defined, when computing the section index of an OS/PROC specific
 	symbol.
 	(_bfd_elf_init_secondary_reloc_section): New function.
 	(_bfd_elf_slurp_secondary_reloc_section): New function.
 	(_bfd_elf_write_secondary_reloc_section): New function.
 	(_bfd_elf_copy_special_section_fields): New function.
 	* elfcode.h (elf_write_relocs): Invoke the new
 	write_secondary_relocs function, if defined, in order to emit
 	secondary relocs.
 	(elf_slurp_reloc_table): Invoke the new slurp_secondary_relocs
 	function, if defined, in order to read in secondary relocs.
 	* elfxx-target.h (elf_backend_copy_special_section_fields):
 	Provide a non-NULL default definition.
 	(elf_backend_init_secondary_reloc_section): Likewise.
 	(elf_backend_slurp_secondary_reloc_section): Likewise.
 	(elf_backend_write_secondary_reloc_section): Likewise.
 	(struct elf_backend_data elfNN_bed): Add initialisers for the new
 	fields.
         * configure.ac (score_elf32_[bl]e_vec): Add elf64.lo
         * configure: Regenerate.
 
 2020-03-05  Alan Modra  <amodra@gmail.com>
 
 	* archive64.c (_bfd_archive_64_bit_slurp_armap): Check parsed_size
 	against file size before allocating memory.  Use bfd_alloc rather
 	than bfd_zalloc for carsym/strings memory.
 
 2020-03-04  Alan Modra  <amodra@gmail.com>
 
 	* elf.c (elf_fake_sections): Ensure sh_addralign is such that
 	sh_addr mod sh_addalign is zero.
 
 2020-03-04  Alan Modra  <amodra@gmail.com>
 
 	* format.c (bfd_check_format_matches): Call cleanup on error exit.
 
 2020-03-03  Alan Modra  <amodra@gmail.com>
 
 	* format.c (struct bfd_preserve): Add cleanup field.
 	(bfd_preserve_save): Add cleanup param and save.
 	(bfd_preserve_restore): Return cleanup.
 	(bfd_preserve_finish): Call the cleanup for the discarded match.
 	(bfd_check_format_matches): Pass cleanup to bfd_preserve_save,
 	and clear when preserving a match.  Restore cleanup too when
 	restoring that match.
 
 2020-03-02  Alan Modra  <amodra@gmail.com>
 
 	* cisco-core.c (cisco_core_file_p): Return bfd_cleanup.
 	* hpux-core.c (hpux_core_core_file_p): Update prototype.
 	* sco5-core.c (sco5_core_file_p): Return bfd_cleanup.
 	(core_sco5_vec): Correct initialisers.
 
 2020-03-02  Alan Modra  <amodra@gmail.com>
 
 	* aix386-core.c (aix386_core_file_p): Return bfd_cleanup.
 	* aix5ppc-core.c (xcoff64_core_p): Likewise.
 	* cisco-core.c (cisco_core_file_validate): Likewise.
 	* hppabsd-core.c (hppabsd_core_core_file_p): Likewise.
 	* hpux-core.c (hpux_core_core_file_p): Likewise.
 	* irix-core.c (irix_core_core_file_p): Likewise.
 	* lynx-core.c (lynx_core_file_p): Likewise.
 	* netbsd-core.c (netbsd_core_file_p): Likewise.
 	* osf-core.c (osf_core_core_file_p): Likewise.
 	* ptrace-core.c (ptrace_unix_core_file_p): Likewise.
 	* sco5-core.c (sco5_core_file_p): Likewise.
 
 2020-03-02  H.J. Lu  <hongjiu.lu@intel.com>
 
 	* trad-core.c (trad_unix_core_file_p): Return bfd_cleanup.
 
 2020-03-02  Alan Modra  <amodra@gmail.com>
 
 	* targets.c (bfd_cleanup): New typedef.
 	(struct bfd <_bfd_check_format>): Return a bfd_cleanup.
 	* libbfd-in.h (_bfd_no_cleanup): Define.
 	* format.c (bfd_reinit): Add cleanup parameter, call it.
 	(bfd_check_format_matches): Set cleanup from _bfd_check_format
 	call and pass to bfd_reinit.  Delete temp, use abfd->xvec instead.
 	* aout-target.h (callback, object_p): Return bfd_cleanup.
 	* aout-tic30.c (tic30_aout_callback, tic30_aout_object_p): Likewise.
 	* archive.c (bfd_generic_archive_p): Likewise.
 	* binary.c (binary_object_p): Likewise.
 	* coff-alpha.c (alpha_ecoff_object_p): Likewise.
 	* coff-ia64.c (ia64coff_object_p): Likewise.
 	* coff-rs6000.c (_bfd_xcoff_archive_p, rs6000coff_core_p): Likewise.
 	* coff-sh.c (coff_small_object_p): Likewise.
 	* coff-stgo32.c (go32_check_format): Likewise.
 	* coff64-rs6000.c (xcoff64_archive_p, rs6000coff_core_p),
 	(xcoff64_core_p): Likewise.
 	* coffgen.c (coff_real_object_p, coff_object_p): Likewise.
 	* elf-bfd.h (bfd_elf32_object_p, bfd_elf32_core_file_p),
 	(bfd_elf64_object_p, bfd_elf64_core_file_p): Likewise.
 	* elfcode.h (elf_object_p): Likewise.
 	* elfcore.h (elf_core_file_p): Likewise.
 	* i386msdos.c (msdos_object_p): Likewise.
 	* ihex.c (ihex_object_p): Likewise.
 	* libaout.h (some_aout_object_p): Likewise.
 	* libbfd-in.h (bfd_generic_archive_p, _bfd_dummy_target),
 	(_bfd_vms_lib_alpha_archive_p, _bfd_vms_lib_ia64_archive_p): Likewise.
 	* libbfd.c (_bfd_dummy_target): Likewise.
 	* libcoff-in.h (coff_object_p): Likewise.
 	* mach-o-aarch64.c (bfd_mach_o_arm64_object_p),
 	(bfd_mach_o_arm64_core_p): Likewise.
 	* mach-o-arm.c (bfd_mach_o_arm_object_p),
 	(bfd_mach_o_arm_core_p): Likewise.
 	* mach-o-i386.c (bfd_mach_o_i386_object_p),
 	(bfd_mach_o_i386_core_p): Likewise.
 	* mach-o-x86-64.c (bfd_mach_o_x86_64_object_p),
 	(bfd_mach_o_x86_64_core_p): Likewise.
 	* mach-o.c (bfd_mach_o_header_p, bfd_mach_o_gen_object_p),
 	(bfd_mach_o_gen_core_p, bfd_mach_o_fat_archive_p): Likewise.
 	* mach-o.h (bfd_mach_o_object_p, bfd_mach_o_core_p),
 	(bfd_mach_o_fat_archive_p, bfd_mach_o_header_p): Likewise.
 	* mmo.c (mmo_object_p): Likewise.
 	* pef.c (bfd_pef_object_p, bfd_pef_xlib_object_p): Likewise.
 	* peicode.h (coff_real_object_p, pe_ILF_object_p),
 	(pe_bfd_object_p): Likewise.
 	* plugin.c (ld_plugin_object_p, bfd_plugin_object_p): Likewise.
 	* ppcboot.c (ppcboot_object_p): Likewise.
 	* rs6000-core.c (rs6000coff_core_p): Likewise.
 	* som.c (som_object_setup, som_object_p): Likewise.
 	* srec.c (srec_object_p, symbolsrec_object_p): Likewise.
 	* tekhex.c (tekhex_object_p): Likewise.
 	* vms-alpha.c (alpha_vms_object_p): Likewise.
 	* vms-lib.c (_bfd_vms_lib_archive_p, _bfd_vms_lib_alpha_archive_p),
 	(_bfd_vms_lib_ia64_archive_p, _bfd_vms_lib_txt_archive_p): Likewise.
 	* wasm-module.c (wasm_object_p): Likewise.
 	* xsym.c (bfd_sym_object_p): Likewise.
 	* xsym.h (bfd_sym_object_p): Likewise.
 	* aoutx.h (some_aout_object_p): Likewise, and callback parameter
 	return type.
 	* pdp11.c (some_aout_object_p): Likewise.
 	* plugin.c (register_ld_plugin_object_p): Update object_p
 	parameter type.
 	* plugin.h (register_ld_plugin_object_p): Likewise.
 	* bfd-in2.h: Regenerate.
 	* libbfd.h: Regenerate.
 	* libcoff.h: Regenerate.
 
 2020-03-02  Alan Modra  <amodra@gmail.com>
 
 	* coff-alpha.c (alpha_ecoff_le_vec): Add SEC_SMALL_DATA to
 	applicable section flags.
 	* coff-mips.c (mips_ecoff_le_vec, mips_ecoff_be_vec): Likewise.
 	(mips_ecoff_bele_vec): Likewise.
 	* coffcode.h (sec_to_styp_flags): Set SEC_SMALL_DATA for .sdata
 	and .sbss sections.
 	* ecoff.c (_bfd_ecoff_new_section_hook): Likewise.
 	(_bfd_ecoff_styp_to_sec_flags): Likewise.
 
 2020-03-02  Alan Modra  <amodra@gmail.com>
 
 	* elf32-m32r.c (m32r_elf_section_flags): New function.
 	(elf_backend_section_flags): Define.
 	* elf32-nds32.c (nds32_elf_section_flags): New function.
 	(elf_backend_section_flags): Define.
 	* elf32-ppc.c (ppc_elf_section_from_shdr): Set SEC_SMALL_DATA for
 	.sbss and .sdata sections.
 	* elf32-v850.c (v850_elf_section_from_shdr): Set SEC_SMALL_DATA
 	for SHF_V850_GPREL sections.
 	* elf64-alpha.c (elf64_alpha_section_from_shdr): Delete outdated
 	FIXME.
 	* elf64-hppa.c (elf64_hppa_section_from_shdr): Set SEC_SMALL_DATA
 	for SHF_PARISC_SHORT sections.
 	* elf64-ppc.c (ppc64_elf_section_flags): New function.
 	(elf_backend_section_flags): Define.
 	* elfxx-mips.c (_bfd_mips_elf_section_from_shdr): Set SEC_SMALL_DATA
 	for SHF_MIPS_GPREL sections.  Delete FIXME.
 
 2020-03-02  Alan Modra  <amodra@gmail.com>
 
 	* elf-bfd.h (elf_backend_section_flags): Remove flagword* param.
 	* elf.c (_bfd_elf_make_section_from_shdr): Set section flags before
 	calling elf_backend_section_flags with adjusted params.  Use
 	newsect->flags past that point.
 	(_bfd_elf_new_section_hook): Always set sh_type and sh_flags for
 	special sections.
 	(_bfd_elf_init_private_section_data): Allow normal sh_type sections
 	to have their type overridden, and all sh_flags but processor and
 	os specific.
 	* elf32-arm.c (elf32_arm_section_flags): Adjust for changed params.
 	* elf32-mep.c (mep_elf_section_flags): Likewise.
 	* elf32-nios2.c (nios2_elf32_section_flags): Likewise.
 	* elf64-alpha.c (elf64_alpha_section_flags): Likewise.
 	* elf64-ia64-vms.c (elf64_ia64_section_flags): Likewise.
 	* elfnn-ia64.c (elfNN_ia64_section_flags): Likewise.
 	* elfnn-aarch64.c (elfNN_aarch64_size_stubs): Exclude the linker
 	stub BFD and non-aarch64 input files when scanning for stubs.
 
 2020-03-02  Alan Modra  <amodra@gmail.com>
 
 	* coff-alpha.c (alpha_ecoff_get_elt_at_filepos): Provide an upper
 	limit to decompressed element size.
 
 2020-03-02  Alan Modra  <amodra@gmail.com>
 
 	* vms-lib.c (vms_traverse_index): Add recur_count param and
 	update calls.  Fail on excessive recursion.
 
 2020-03-02  Alan Modra  <amodra@gmail.com>
 
 	* vms-alpha.c (vms_get_remaining_object_record): Use
 	bfd_realloc_or_free rather than bfd_realloc.
 	(add_symbol_entry, vector_grow1, alpha_vms_slurp_relocs): Likewise.
 	(dst_define_location, parse_module): Likewise, and check realloc
 	return status before using memory.  Return status from function
 	adjusting all callers.
 
 2020-02-28  Alan Modra  <amodra@gmail.com>
 
 	* vms-lib.c (_bfd_vms_lib_archive_p): Free memory on error paths.
 
 2020-02-28  Alan Modra  <amodra@gmail.com>
 
 	* vms-alpha.c (alpha_vms_object_p): Use _bfd_malloc_and_read.
 	Remove duplicate undersize check.
 
 2020-02-27  Alan Modra  <amodra@gmail.com>
 
 	PR 24511
 	* mmo.c (mmo_scan): Set SEC_DATA for .data.
 
 2020-02-27  Alan Modra  <amodra@gmail.com>
 
 	PR 24511
 	* syms.c (stt): Trim off all but 'e', 'i' and 'p' entries.
 	(coff_section_type): Adjust comment.
 	(decode_section_type): Likewise.  Call coff_section_type before
 	decode_section_type.
 	(bfd_decode_symclass): Use 'c' for common sections other than
 	the standard one.
 
 2020-02-27  Alan Modra  <amodra@gmail.com>
 
 	* coff-rs6000.c (_bfd_xcoff_read_ar_hdr): Put all data in one
 	malloc'd block.
 
 2020-02-27  Alan Modra  <amodra@gmail.com>
 
 	* bfd.c (bfd_stat_arch_elt): Use vector of containing archive,
 	if file is an archive element.
 	* bfd-in2.h: Regenerate.
 
 2020-02-26  Alan Modra  <amodra@gmail.com>
 
 	* archive.c (do_slurp_bsd_armap): Increase minimum parsed_size, and
 	bfd_set_error on failing test.  Don't bother changing bfd_error on
 	file read error.  Check symdef_count is multiple of BSD_SYMDEF_SIZE.
 	Check sym name is within string buffer.  Use size_t for some vars.
 	(do_slurp_coff_armap): Use size_t for some variables, fix size of
 	int_buf.  Don't change bfd_error on file read error.  Use
 	_bfd_mul_overflow when calculating carsym buffer size.  Reorder
 	calculations to catch overflows before they occur.  malloc and
 	free raw armap rather than using bfd_alloc.  Read raw armap before
 	allocating carsym+strings buffer.
 	(_bfd_slurp_extended_name_table): Localize variables.  Check
 	name size against file size.
 
 2020-02-26  Alan Modra  <amodra@gmail.com>
 
 	* vms-lib.c (vms_lib_read_index): Release correct buffer.
 
 2020-02-26  Alan Modra  <amodra@gmail.com>
 
 	* elf32-rx.c (rx_elf_relocate_section): Use bfd_malloc rather than
 	malloc.  Check for NULL return from bfd_malloc.
 	(rx_table_find, rx_table_map): Likewise.
 	(rx_set_section_contents): Check bfd_alloc return.
 	(rx_dump_symtab): Don't alloc internal_syms or external_syms.
 
 2020-02-26  Alan Modra  <amodra@gmail.com>
 
 	* aoutx.h: Indent labels correctly.  Format error strings.
 	* archive.c: Likewise.
 	* archive64.c: Likewise.
 	* coff-arm.c: Likewise.
 	* coff-rs6000.c: Likewise.
 	* coff-stgo32.c: Likewise.
 	* cpu-arm.c: Likewise.
 	* dwarf2.c: Likewise.
 	* elf-ifunc.c: Likewise.
 	* elf-properties.c: Likewise.
 	* elf-s390-common.c: Likewise.
 	* elf-strtab.c: Likewise.
 	* elf.c: Likewise.
 	* elf32-arm.c: Likewise.
 	* elf32-bfin.c: Likewise.
 	* elf32-cr16.c: Likewise.
 	* elf32-csky.c: Likewise.
 	* elf32-i386.c: Likewise.
 	* elf32-m68k.c: Likewise.
 	* elf32-msp430.c: Likewise.
 	* elf32-nds32.c: Likewise.
 	* elf32-nios2.c: Likewise.
 	* elf32-pru.c: Likewise.
 	* elf32-xtensa.c: Likewise.
 	* elf64-ia64-vms.c: Likewise.
 	* elf64-x86-64.c: Likewise.
 	* elfcode.h: Likewise.
 	* elfcore.h: Likewise.
 	* elflink.c: Likewise.
 	* elfnn-aarch64.c: Likewise.
 	* elfnn-ia64.c: Likewise.
 	* elfnn-riscv.c: Likewise.
 	* elfxx-mips.c: Likewise.
 	* elfxx-sparc.c: Likewise.
 	* elfxx-x86.c: Likewise.
 	* i386lynx.c: Likewise.
 	* merge.c: Likewise.
 	* pdp11.c: Likewise.
 	* plugin.c: Likewise.
 	* reloc.c: Likewise.
 
 2020-02-26  Alan Modra  <amodra@gmail.com>
 
 	PR 25593
 	* elf-bfd.h (struct elf_link_hash_table): Rename "loaded" to
 	"dyn_loaded".
 	(bfd_elf_add_dt_needed_tag): Declare.
 	* elf-strtab.c (_bfd_elf_strtab_restore): Handle NULL buf.
 	* elflink.c (bfd_elf_add_dt_needed_tag): Make global and rename
 	from elf_add_dt_needed_tag.  Remove soname and doit param.
 	(elf_link_add_object_symbols): Don't use elf_add_dt_needed_tag
 	to see whether as-needed lib is already loaded, use dyn_loaded
 	list instead.  When saving and restoring around as-needed lib
 	handle possibility that dynstr has not been initialised.  Don't
 	add DT_NEEDED tags here.  Limit dyn_loaded list to dynamic libs.
 	Mark libs loaded via DT_NEEDED entries of other libs with
 	DYN_NO_NEEDED if they should not be mentioned in DT_NEEDED of
 	the output.
 	(elf_link_check_versioned_symbol): Remove now unneccesary
 	DYNAMIC check when traversing dyn_loaded list.
 
 2020-02-26  Alan Modra  <amodra@gmail.com>
 
 	* bfdio.c (bfd_get_file_size): Ignore bogus archive element sizes.
 
 2020-02-25  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR binutils/25584
 	* plugin.c (need_lto_wrapper_p): New.
 	(bfd_plugin_set_program_name): Add an int argument to set
 	need_lto_wrapper_p.
 	(get_lto_wrapper): Return FALSE if need_lto_wrapper_p isn't
 	set.
 	* plugin.h (bfd_plugin_set_program_name): Add an int argument.
 
 2020-02-24  Alan Modra  <amodra@gmail.com>
 
 	* vms-lib.c (_bfd_vms_lib_archive_p): Correct overflow checks.
 
 2020-02-24  Alan Modra  <amodra@gmail.com>
 
 	* vms-lib.c (struct carsym_mem): Add limit.
 	(vms_add_index): Heed limit.
 	(vms_traverse_index): Catch buffer overflows.  Remove outdated fixme.
 	(vms_lib_read_index): Set up limit.  Catch 32-bit overflow.
 	Always return actual number read.
 	(_bfd_vms_lib_archive_p): Catch buffer overflows.  Replace
 	assertion with error exit.
 
 2020-02-22  Alan Modra  <amodra@gmail.com>
 
 	PR 25585
 	* elf.c (assign_file_positions_for_load_sections): Continue linking
 	on "PHDR segment not covered by LOAD segment" errors.
 
 2020-02-21  Alan Modra  <amodra@gmail.com>
 
 	* mach-o.c (bfd_mach_o_canonicalize_relocs): Fix ineffective
 	overflow check.
 	(bfd_mach_o_canonicalize_reloc): Likewise.
 	(bfd_mach_o_canonicalize_dynamic_reloc): Likewise.  Sanity check
 	counts and offsets against file size.
 	(bfd_mach_o_build_dysymtab): Fix ineffective overflow check.
 	(bfd_mach_o_mangle_sections): Remove unnecessary overflow check.
 	(bfd_mach_o_read_symtab_symbols): Sanity check count and offset
 	against file size.  Delete symbol table error message.
 	(bfd_mach_o_read_dysymtab): Sanity check counts and offsets
 	against file size.
 	(bfd_mach_o_read_symtab): Likewise.
 	(bfd_mach_o_read_command): Pass file size.
 	(bfd_mach_o_scan): Sanity check command count against file size.
 
 2020-02-21  Alan Modra  <amodra@gmail.com>
 
 	PR 25569
 	* aoutx.h (adjust_o_magic, adjust_z_magic, adjust_n_magic): Use
 	"text", "data" and "bss" section pointer vars.  Don't update
 	section size, just exec header sizes.
 	(adjust_sizes_and_vmas): Don't update text section size.  Set
 	initial exec header a_text.  Print exec headers sizes.
 	* pdp11.c (adjust_o_magic, adjust_z_magic, adjust_n_magic),
 	(adjust_sizes_and_vmas): Similarly.  Formatting.
 	(final_link): Correct final file extension.
 
 2020-02-20  Nick Clifton  <nickc@redhat.com>
 
 	* elf-bfd.h (struct elf_backend_data): Add symbol_section_index
 	callback.
 	* elfxx-target.h (elf_backend_symbol_section_index): Provide
 	default definition.
 	(elfNN_bed): Initialise the symbol_section_index field.
 	* elf.c (swap_out_syms): Call symbol_section_index, if defined, on
 	OS and PROC specific section indicies.  Warn if converting other
 	reserved incidies to SHN_ABS.
 
 2020-02-19  Sergey Belyashov  <sergey.belyashov@gmail.com>
 
 	PR 25537
 	* cpu-z80.c: Add machine type compatibility checking.
 
 2020-02-19  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR binutils/25355
 	* plugin.c (plugin_list_entry): Remove handle.
 	(try_load_plugin): Call dlclose before return.
 
 2020-02-19  Alan Modra  <amodra@gmail.com>
 
 	* libbfd-in.h (_bfd_constant_p): Define.
 	(_bfd_alloc_and_read, _bfd_malloc_and_read): Check read size against
 	file size before allocating memory.
 	* coffgen.c (_bfd_coff_get_external_symbols): Remove file size check.
 	* elf.c (bfd_elf_get_str_section): Likewise.
 	(_bfd_elf_slurp_version_tables): Likewise.
 	* libbfd.h: Regenerate.
 
 2020-02-19  Alan Modra  <amodra@gmail.com>
 
 	* libbfd-in.h (_bfd_alloc_and_read, _bfd_malloc_and_read): New.
 	* aoutx.h (aout_get_external_symbols): Replace calls to
 	bfd_[m]alloc and bfd_bread with call to _bfd_[m]alloc_and_read.
 	(slurp_reloc_table): Likewise.
 	* archive.c (do_slurp_bsd_armap): Likewise.
 	(do_slurp_coff_armap): Likewise.
 	* archive64.c (_bfd_archive_64_bit_slurp_armap): Likewise.
 	* coff-rs6000.c (_bfd_xcoff_slurp_armap): Likewise.
 	* coff64-rs6000.c (xcoff64_slurp_armap): Likewise.
 	* coffcode.h (coff_set_arch_mach_hook, buy_and_read): Likewise.
 	* coffgen.c (coff_real_object_p, coff_object_p, build_debug_section),
 	(_bfd_coff_get_external_symbols): Likewise.
 	* ecoff.c (ecoff_slurp_symbolic_header),
 	(_bfd_ecoff_slurp_symbolic_info, ecoff_slurp_reloc_table),
 	(_bfd_ecoff_slurp_armap, ecoff_link_add_object_symbols, READ),
 	(ecoff_indirect_link_order): Likewise.
 	* elf.c (bfd_elf_get_str_section, setup_group, elf_read_notes),
 	(_bfd_elf_slurp_version_tables): Likewise.
 	* elf32-m32c.c (m32c_elf_relax_section): Likewise.
 	* elf32-rl78.c (rl78_elf_relax_section): Likewise.
 	* elf32-rx.c (elf32_rx_relax_section): Likewise.
 	* elf64-alpha.c (READ): Likewise.
 	* elf64-mips.c (mips_elf64_slurp_one_reloc_table): Likewise.
 	* elf64-sparc.c (elf64_sparc_slurp_one_reloc_table): Likewise.
 	* elfcode.h (elf_slurp_symbol_table),
 	(elf_slurp_reloc_table_from_section): Likewise.
 	* elflink.c (elf_link_add_object_symbols),
 	(elf_link_check_versioned_symbol): Likewise.
 	* elfxx-mips.c (READ): Likewise.
 	* i386lynx.c (slurp_reloc_table): Likewise.
 	* lynx-core.c (lynx_core_file_p): Likewise.
 	* mach-o.c (bfd_mach_o_canonicalize_relocs),
 	(bfd_mach_o_read_symtab_strtab, bfd_mach_o_alloc_and_read),
 	(bfd_mach_o_read_prebound_dylib, bfd_mach_o_read_dyld_content
 	* pdp11.c (aout_get_external_symbols, slurp_reloc_table
 	* pef.c (bfd_pef_print_loader_section, bfd_pef_scan_start_address),
 	(bfd_pef_parse_symbols): Likewise.
 	* peicode.h (pe_ILF_object_p, pe_bfd_object_p
 	* som.c (setup_sections, som_slurp_string_table),
 	(som_slurp_reloc_table, som_bfd_count_ar_symbols),
 	(som_bfd_fill_in_ar_symbols): Likewise.
 	* vms-alpha.c (module_find_nearest_line, evax_bfd_print_dst),
 	(evax_bfd_print_image): Likewise.
 	* vms-lib.c (_bfd_vms_lib_archive_p): Likewise.
 	* wasm-module.c (wasm_scan): Likewise.
 	* xcofflink.c (xcoff_link_add_symbols): Likewise.
 	* xsym.c (bfd_sym_read_name_table),
 	(bfd_sym_print_type_information_table_entry): Likewise.
 	* libbfd.h: Regenerate.
 
 2020-02-19  Alan Modra  <amodra@gmail.com>
 
 	* aoutx.h (slurp_reloc_table): Allocate reloc_cache after
 	reading external relocs.
 	* ecoff.c (ecoff_slurp_reloc_table): Likewise.
 	* archive.c (_bfd_write_archive_contents): Don't twiddle bfd_error
 	after bfd_bread.
 	* archive64.c (_bfd_archive_64_bit_slurp_armap): Remove unnecessary
 	bfd_release.
 	* elf32-m32c.c (m32c_offset_for_reloc): Make shndx_buf a bfd_byte*.
 	(m32c_elf_relax_section): Likewise.
 	* elf32-rl78.c (rl78_offset_for_reloc): Likewise.
 	(rl78_elf_relax_section): Likewise.
 	* elf32-rx.c (rx_offset_for_reloc): Likewise.
 	(elf32_rx_relax_section): Likewise.
 	* mach-o.c (bfd_mach_o_alloc_and_read): Move earlier with better
 	parameter types and use..
 	(bfd_mach_o_read_dylinker, bfd_mach_o_read_dylib),
 	(bfd_mach_o_read_fvmlib, bfd_mach_o_read_str): ..in these functions.
 	* peicode.h (pe_bfd_object_p): Don't zero the part of opthdr
 	being read from file, just the extra.
 	* som.c (som_slurp_symbol_table): Allocate internal symbol buffer
 	after reading external syms.  Free on failure.
 
 2020-02-19  Alan Modra  <amodra@gmail.com>
 
 	* coffcode.h (buy_and_read, coff_slurp_line_table),
 	(coff_slurp_symbol_table, coff_slurp_reloc_table): Replace
 	bfd_[z][m]alloc2 calls with _bfd_mul_overflow followed by the
 	corresponding bfd_alloc call.  Adjust variables to suit.
 	* coffgen.c (_bfd_coff_get_external_symbols): Likewise.
 	* ecoff.c (_bfd_ecoff_slurp_symbolic_info),
 	(_bfd_ecoff_slurp_symbol_table, READ): Likewise.
 	* elf.c (bfd_elf_get_elf_syms, setup_group, bfd_section_from_shdr),
 	(swap_out_syms, _bfd_elf_slurp_version_tables): Likewise.
 	* elf32-m32c.c (m32c_elf_relax_section): Likewise.
 	* elf32-rl78.c (rl78_elf_relax_section): Likewise.
 	* elf32-rx.c (elf32_rx_relax_section): Likewise.
 	* elf64-alpha.c (READ): Likewise.
 	* elfcode.h (elf_object_p, elf_write_relocs, elf_write_shdrs_and_ehdr),
 	(elf_slurp_symbol_table, elf_slurp_reloc_table),
 	(bfd_from_remote_memory): Likewise.
 	* elfcore.h (core_find_build_id): Likewise.
 	* elfxx-mips.c (READ): Likewise.
 	* mach-o.c (bfd_mach_o_mangle_sections),
 	(bfd_mach_o_read_symtab_symbols, bfd_mach_o_read_thread),
 	(bfd_mach_o_read_dysymtab, bfd_mach_o_flatten_sections),
 	(bfd_mach_o_scan, bfd_mach_o_fat_archive_p): Likewise.
 	* som.c (setup_sections, som_prep_for_fixups)
 	(som_build_and_write_symbol_table, som_slurp_symbol_table),
 	(som_slurp_reloc_table, som_bfd_count_ar_symbols),
 	(som_bfd_fill_in_ar_symbols, som_slurp_armap),
 	(som_bfd_ar_write_symbol_stuff): Likewise.
 	* vms-alpha.c (vector_grow1): Likewise.
 	* vms-lib.c (vms_add_index): Likewise.
 	* wasm-module.c (wasm_scan_name_function_section): Likewise.
 	* libbfd.c (bfd_malloc2, bfd_realloc2, bfd_zmalloc2): Delete.
 	* opncls.c (bfd_alloc2, bfd_zalloc2): Delete.
 	* libbfd-in.h (bfd_malloc2, bfd_realloc2, bfd_zmalloc2),
 	(bfd_alloc2, bfd_zalloc2): Delete.
 	(_bfd_mul_overflow): Define.
 	* libbfd.h: Regenerate.
 
 2020-02-19  Alan Modra  <amodra@gmail.com>
 
 	* elf.c (bfd_section_from_shdr): Use bfd_zalloc rather than
 	bfd_zalloc2.
 	(assign_section_numbers): Likewise.
 	(elf_map_symbols): Likewise, and bfd_alloc rather than bfd_alloc2.
 	(_bfd_elf_map_sections_to_segments): Use bfd_malloc rather than
 	bfd_malloc2, size_t amt, and unsigned tls_count.
 	(rewrite_elf_program_header): Use bfd_malloc and size_t amt.
 	* elflink.c (elf_create_symbuf): Use bfd_malloc.
 	(elf_output_implib): Use bfd_alloc.
 
 2020-02-19  Alan Modra  <amodra@gmail.com>
 
 	* bfd.c (struct bfd): Move format and direction to other
 	bitfields.  Add "size".
 	* bfdio.c (bfd_get_size): Cache size when not writing file.
 	* opncls.c (bfd_get_debug_link_info_1): Allow for bfd_get_size
 	returning zero, ie. unknown.
 	(bfd_get_alt_debug_link_info): Likewise.
 	* bfd-in2.h: Regenerate.
 
 2020-02-19  Alan Modra  <amodra@gmail.com>
 
 	* coffgen.c (_bfd_coff_get_external_symbols): Don't call
 	bfd_get_file_size twice.
 	(_bfd_coff_read_string_table): Allow for bfd_get_file_size
 	zero, ie. unknown, return.
 	* elf-attrs.c (_bfd_elf_parse_attributes): Likewise.
 	* elfcode.h (elf_swap_shdr_in): Likewise.
 	(elf_object_p): Don't call bfd_get_file_size twice and correct
 	file size check.
 
 2020-02-19  Alan Modra  <amodra@gmail.com>
 
 	* mach-o.c (bfd_mach_o_flatten_sections): Return a bfd_boolean,
 	FALSE if memory alloc fails.  Adjust calls.
 	* som.c (som_prep_for_fixups): Likewise.
 	* vms-alpha.c (alpha_vms_add_fixup_lp, alpha_vms_add_fixup_ca),
 	(alpha_vms_add_fixup_qr, alpha_vms_add_fixup_lr),
 	(alpha_vms_add_lw_reloc, alpha_vms_add_qw_reloc): Likewise.
 	* som.c (som_build_and_write_symbol_table): Return via error_return
 	on seek failure.
 	* vms-alpha.c (VEC_APPEND): Adjust for vector_grow1 changes.
 	(VEC_APPEND_EL): Delete.
 	(vector_grow1): Return pointer to element.  Catch overflow.
 	Return NULL on memory allocation failure.
 	(alpha_vms_add_fixup_lp): Replace VEC_APPEND_EL with VEC_APPEND.
 	(alpha_vms_add_fixup_ca): Likewise.
 	(alpha_vms_link_add_object_symbols): Check VEC_APPEND result
 	before using.
 	* elf.c (bfd_section_from_shdr): Check bfd_zalloc2 result.
 
 2020-02-19  Alan Modra  <amodra@gmail.com>
 
 	* aix386-core.c (aix386_core_file_p): Use size_t for "amt".
 	* aout-target.h (object_p): Likewise.
 	* aout-tic30.c (tic30_aout_object_p): Likewise.
 	* aoutx.h (some_aout_object_p, mkobject, make_empty_symbol),
 	(emit_stringtab, write_syms, link_hash_table_create),
 	(aout_link_write_other_symbol): Likewise.
 	* archive.c (_bfd_generic_mkarchive, bfd_generic_archive_p),
 	(bfd_ar_hdr_from_filesystem, _bfd_write_archive_contents),
 	(_bfd_compute_and_write_armap): Likewise.
 	* archures.c (bfd_arch_list): Likewise.
 	* bfd.c (bfd_record_phdr): Likewise.
 	* binary.c (binary_canonicalize_symtab): Likewise.
 	* cisco-core.c (cisco_core_file_validate): Likewise.
 	* coff-arm.c (coff_arm_link_hash_table_create, find_thumb_glue),
 	(find_arm_glue, record_arm_to_thumb_glue),
 	(record_thumb_to_arm_glue): Likewise.
 	* coff-ppc.c (ppc_coff_link_hash_table_create, record_toc),
 	(ppc_allocate_toc_section): Likewise.
 	* coff-rs6000.c (_bfd_xcoff_mkobject, _bfd_xcoff_archive_p): Likewise.
 	* coff-sh.c (sh_relax_section): Likewise.
 	* coff64-rs6000.c (xcoff64_archive_p): Likewise.
 	* coffcode.h (handle_COMDAT, coff_new_section_hook),
 	(coff_set_alignment_hook, coff_mkobject),
 	(coff_compute_section_file_positions): Likewise.
 	* coffgen.c (coff_make_empty_symbol, coff_bfd_make_debug_symbol),
 	(coff_find_nearest_line_with_names),
 	( bfd_coff_set_symbol_class): Likewise.
 	* cofflink.c (_bfd_coff_link_hash_table_create),
 	(_bfd_coff_link_input_bfd): Likewise.
 	* dwarf1.c (alloc_dwarf1_unit, alloc_dwarf1_func): Likewise.
 	* dwarf2.c (read_abbrevs, read_attribute_value, add_line_info),
 	(build_line_info_table, sort_line_sequences),
 	(line_info_add_include_dir, line_info_add_file_name),
 	(decode_line_info, scan_unit_for_symbols, parse_comp_unit),
 	(place_sections, _bfd_dwarf2_slurp_debug_info): Likewise.
 	* ecoff.c (_bfd_ecoff_mkobject, _bfd_ecoff_make_empty_symbol),
 	(_bfd_ecoff_find_nearest_line),
 	(_bfd_ecoff_bfd_link_hash_table_create): Likewise.
 	* ecofflink.c (bfd_ecoff_debug_init): Likewise.
 	* elf-hppa.h (_bfd_elf_hppa_gen_reloc_type): Likewise.
 	* elf-m10300.c (mn10300_elf_relax_section),
 	(elf32_mn10300_link_hash_table_create): Likewise.
 	* elf-strtab.c (_bfd_elf_strtab_init): Likewise.
 	* elf.c (make_mapping, copy_elf_program_header): Likewise.
 	* elf32-arm.c (elf32_arm_link_hash_table_create),
 	(elf32_arm_setup_section_lists, elf32_arm_check_relocs),
 	(elf32_arm_new_section_hook): Likewise.
 	* elf32-avr.c (elf_avr_new_section_hook),
 	(elf32_avr_link_hash_table_create, get_local_syms),
 	(elf32_avr_setup_section_lists): Likewise.
 	* elf32-bfin.c (bfinfdpic_elf_link_hash_table_create),
 	(bfin_link_hash_table_create): Likewise.
 	* elf32-cr16.c (elf32_cr16_link_hash_table_create): Likewise.
 	* elf32-cris.c (elf_cris_link_hash_table_create): Likewise.
 	* elf32-csky.c (csky_elf_link_hash_table_create),
 	(csky_elf_check_relocs, elf32_csky_setup_section_lists): Likewise.
 	* elf32-frv.c (frvfdpic_elf_link_hash_table_create): Likewise.
 	* elf32-hppa.c (elf32_hppa_link_hash_table_create),
 	(elf32_hppa_setup_section_lists, get_local_syms): Likewise.
 	* elf32-i386.c (elf_i386_check_relocs): Likewise.
 	* elf32-lm32.c (lm32_elf_link_hash_table_create): Likewise.
 	* elf32-m32r.c (m32r_elf_link_hash_table_create),
 	(m32r_elf_check_relocs): Likewise.
 	* elf32-m68hc1x.c (m68hc11_elf_hash_table_create),
 	(elf32_m68hc11_setup_section_lists),
 	(elf32_m68hc11_size_stubs): Likewise.
 	* elf32-m68k.c (elf_m68k_link_hash_table_create): Likewise.
 	* elf32-metag.c (elf_metag_link_hash_table_create),
 	(elf_metag_setup_section_lists): Likewise.
 	* elf32-microblaze.c (microblaze_elf_link_hash_table_create),
 	(microblaze_elf_check_relocs): Likewise.
 	* elf32-nds32.c (nds32_elf_link_hash_table_create),
 	(nds32_elf_check_relocs): Likewise.
 	* elf32-nios2.c (nios2_elf32_setup_section_lists),
 	(get_local_syms, nios2_elf32_check_relocs),
 	(nios2_elf32_link_hash_table_create): Likewise.
 	* elf32-or1k.c (or1k_elf_link_hash_table_create),
 	(or1k_elf_check_relocs): Likewise.
 	* elf32-ppc.c (ppc_elf_modify_segment_map, update_plt_info): Likewise.
 	* elf32-pru.c (pru_elf32_link_hash_table_create): Likewise.
 	* elf32-s390.c (elf_s390_link_hash_table_create),
 	(elf_s390_check_relocs): Likewise.
 	* elf32-score.c (score_elf_create_got_section),
 	(s3_elf32_score_new_section_hook),
 	(elf32_score_link_hash_table_create): Likewise.
 	* elf32-score7.c (score_elf_create_got_section),
 	(s7_elf32_score_new_section_hook): Likewise.
 	* elf32-sh.c (sh_elf_link_hash_table_create),
 	(sh_elf_check_relocs): Likewise.
 	* elf32-tic6x.c (elf32_tic6x_link_hash_table_create),
 	(elf32_tic6x_new_section_hook, elf32_tic6x_check_relocs): Likewise.
 	* elf32-tilepro.c (tilepro_elf_link_hash_table_create),
 	(tilepro_elf_check_relocs): Likewise.
 	* elf32-v850.c (remember_hi16s_reloc): Likewise.
 	* elf32-vax.c (elf_vax_link_hash_table_create): Likewise.
 	* elf32-xtensa.c (elf_xtensa_link_hash_table_create),
 	(elf_xtensa_new_section_hook): Likewise.
 	* elf64-alpha.c (elf64_alpha_bfd_link_hash_table_create),
 	(get_got_entry, elf64_alpha_check_relocs): Likewise.
 	* elf64-hppa.c (elf64_hppa_hash_table_create): Likewise.
 	* elf64-ia64-vms.c (elf64_ia64_object_p): Likewise.
 	* elf64-mmix.c (mmix_elf_new_section_hook): Likewise.
 	* elf64-ppc.c (ppc64_elf_new_section_hook),
 	(ppc64_elf_link_hash_table_create, update_local_sym_info),
 	(update_plt_info, ppc64_elf_check_relocs): Likewise.
 	* elf64-s390.c (elf_s390_link_hash_table_create),
 	(elf_s390_check_relocs): Likewise.
 	* elf64-x86-64.c (elf_x86_64_check_relocs): Likewise.
 	* elflink.c (bfd_elf_link_record_local_dynamic_symbol),
 	(_bfd_elf_link_find_version_dependencies, elf_link_add_object_symbols),
 	(elf_link_add_archive_symbols, compute_bucket_count),
 	(bfd_elf_size_dynsym_hash_dynstr, _bfd_elf_link_hash_table_create),
 	(bfd_elf_get_bfd_needed_list, elf_link_swap_symbols_out),
 	(bfd_elf_final_link): Likewise.
 	* elfnn-aarch64.c (elfNN_aarch64_link_hash_table_create),
 	(elfNN_aarch64_setup_section_lists, elfNN_aarch64_check_relocs),
 	(elfNN_aarch64_new_section_hook): Likewise.
 	* elfnn-ia64.c (elfNN_ia64_object_p): Likewise.
 	* elfnn-riscv.c (riscv_elf_link_hash_table_create),
 	(riscv_elf_check_relocs): Likewise.
 	* elfxx-mips.c (_bfd_mips_elf_new_section_hook),
 	(_bfd_mips_elf_add_symbol_hook, _bfd_mips_elf_check_relocs),
 	(_bfd_mips_elf_modify_segment_map, _bfd_mips_elf_set_section_contents),
 	(_bfd_mips_elf_link_hash_table_create): Likewise.
 	* elfxx-sparc.c (_bfd_sparc_elf_link_hash_table_create),
 	(_bfd_sparc_elf_check_relocs),
 	(_bfd_sparc_elf_new_section_hook): Likewise.
 	* elfxx-tilegx.c (tilegx_elf_link_hash_table_create),
 	(tilegx_elf_check_relocs): Likewise.
 	* elfxx-x86.c (_bfd_x86_elf_link_hash_table_create): Likewise.
 	* format.c (bfd_check_format_matches): Likewise.
 	* hash.c (_bfd_stringtab_init): Likewise.
 	* ihex.c (ihex_scan): Likewise.
 	* irix-core.c (irix_core_core_file_p): Likewise.
 	* linker.c (bfd_wrapped_link_hash_lookup),
 	(_bfd_generic_link_hash_table_create),
 	(_bfd_generic_reloc_link_order): Likewise.
 	* lynx-core.c (lynx_core_file_p): Likewise.
 	* netbsd-core.c (netbsd_core_file_p): Likewise.
 	* osf-core.c (osf_core_core_file_p): Likewise.
 	* pdp11.c (some_aout_object_p, mkobject, make_empty_symbol),
 	(link_hash_table_create, aout_link_write_other_symbol): Likewise.
 	* peXXigen.c (_bfd_XX_bfd_copy_private_section_data): Likewise.
 	* peicode.h (pe_mkobject): Likewise.
 	* ppcboot.c (ppcboot_mkobject, ppcboot_canonicalize_symtab): Likewise.
 	* ptrace-core.c (ptrace_unix_core_file_p): Likewise.
 	* sco5-core.c (read_uarea): Likewise.
 	* som.c (hppa_som_gen_reloc_type, som_object_p, som_prep_headers),
 	(som_write_fixups, som_write_space_strings, som_write_symbol_strings),
 	(som_finish_writing, som_canonicalize_symtab, som_new_section_hook),
 	(som_bfd_copy_private_section_data, bfd_som_set_section_attributes),
 	(bfd_som_attach_aux_hdr, som_write_armap): Likewise.
 	* srec.c (srec_scan): Likewise.
 	* syms.c (_bfd_generic_make_empty_symbol): Likewise.
 	* targets.c (bfd_target_list): Likewise.
 	* tekhex.c (first_phase, tekhex_sizeof_headers): Likewise.
 	* trad-core.c (trad_unix_core_file_p): Likewise.
 	* vms-alpha.c (vms_initialize, alpha_vms_bfd_link_hash_table_create),
 	(vms_new_section_hook): Likewise.
 	* wasm-module.c (wasm_make_empty_symbol): Likewise.
 	* xcofflink.c (xcoff_get_section_contents),
 	(_bfd_xcoff_bfd_link_hash_table_create, xcoff_set_import_path),
 	(xcoff_find_function, bfd_xcoff_link_record_set, xcoff_build_ldsym),
 	(bfd_xcoff_size_dynamic_sections, xcoff_link_input_bfd): Likewise.
 
 2020-02-19  Alan Modra  <amodra@gmail.com>
 
 	* elfxx-riscv.c (riscv_multi_letter_ext_valid_p): Don't use C99.
 
 2020-02-13  H.J. Lu  <hongjiu.lu@intel.com>
 
 	* plugin.c (try_load_plugin): Make plugin_list_iter an argument
 	and use it if it isn't NULL.  Remove has_plugin_p argument.  Add
 	a build_list_p argument.  Don't search plugin_list.  Short circuit
 	when building the plugin list.
 	(has_plugin): Renamed to has_plugin_list.
 	(bfd_plugin_set_plugin): Don't set has_plugin.
 	(bfd_plugin_specified_p): Check plugin_list instead.
 	(build_plugin_list): New function.
 	(load_plugin): Call build_plugin_list and use plugin_list.
 
 2020-02-11  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR binutils/25355
 	* plugin.c (try_claim): Always clean up for LTO wrapper.
 	(try_load_plugin): Treat each object as independent.  Create a
 	copy for plugin name.
 
 2020-02-11  Nick Clifton  <nickc@redhat.com>
 
 	* elf32-msp430.c (msp430_final_link_relocate): Always use longs
 	for addresses in print statements.
 	(msp430_elf_relax_delete_bytes): Likewise.
 	(msp430_elf_relax_add_words): Likewise.
 	(msp430_elf_relax_section): Likewise.
 
 2020-02-11  H.J. Lu  <hongjiu.lu@intel.com>
 
 	* plugin.c (add_symbols): Clear plugin_data memory.
 
 2020-02-10  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR binutils/25355
 	* configure.ac (HAVE_EXECUTABLE_SUFFIX): New AC_DEFINE.
 	(EXECUTABLE_SUFFIX): Likewise.
 	* config.in: Regenerated.
 	* configure: Likewise.
 	* plugin.c (bfd_plugin_close_and_cleanup): Removed.
 	(plugin_list_entry): Add all_symbols_read, cleanup_handler,
 	gcc, lto_wrapper, resolution_file, resolution_option, gcc_env,
 	real_bfd, real_nsyms, real_syms, lto_nsyms and lto_syms.
 	(get_lto_wrapper): New.
 	(setup_lto_wrapper_env): Likewise.
 	(current_plugin): Likewise.
 	(register_all_symbols_read): Likewise.
 	(register_cleanup): Likewise.
 	(get_symbols): Likewise.
 	(add_input_file): Likewise.
 	(bfd_plugin_close_and_cleanup): Likewise.
 	(claim_file): Removed.
 	(register_claim_file): Set current_plugin->claim_file.
 	(add_symbols): Make a copy of LTO symbols.  Set lto_nsyms and
 	lto_syms in current_plugin.
 	(try_claim): Use current_plugin->claim_file.  Call LTO plugin
 	all_symbols_read handler.  Copy real symbols to plugin_data.
 	Call LTO plugin cleanup handler.  Clean up for LTO wrapper.
 	(try_load_plugin): Don't reuse the previous plugin for LTO
 	wrapper.  Set up GCC LTO wrapper if possible.  Don't set
 	plugin_list_iter->claim_file.
 	(bfd_plugin_canonicalize_symtab): Use real LTO symbols if
 	possible.
 	* plugin.h (plugin_data_struct): Add real_bfd, real_nsyms and
 	real_syms.
 
 2020-02-10  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
 
 	* elf32-msp430.c (msp430_elf_relax_section): Before relaxing a branch,
 	check if previous instruction matches a conditional jump inserted
 	earlier. Invert conditional jump and delete branch in this case.
 
 2020-02-10  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
 
 	* elf32-msp430.c (msp430_elf_relax_add_two_words): Rename to
 	msp430_elf_relax_add_words. Support insertion of either one or two
 	words.
 	(msp430_elf_relax_section): Catch opcode of 0x3c00 when relocation
 	needs to be grown. Handle insertion of branch instruction to replace
 	jump.
 
 2020-02-10  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
 
 	* elf32-msp430.c (msp430_final_link_relocate): Add printf statements for
 	debugging relocations.
 	(msp430_elf_relax_delete_bytes): Likewise.
 	(msp430_elf_relax_add_two_words): Likewise.
 	(msp430_elf_relax_section): Likewise.
 
 2020-02-10  Alan Modra  <amodra@gmail.com>
 
 	* archures.c: Wrap overlong z80 comments.
 	* bfd-in2.h: Regenerate.
 
 2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>
 
 	PR 25469
 	* archures.c: Add GBZ80 and Z80N machine values.
 	* reloc.c: Add BFD_RELOC_Z80_16_BE.
 	* coff-z80.c: Add support for new reloc.
 	* coffcode.h: Add support for new machine values.
 	* cpu-z80.c: Add support for new machine names.
 	* elf32-z80.c: Add support for new reloc.
 	* bfd-in2.h: Regenerate.
 	* libbfd.h: Regenerate.
 
 2020-02-07  Nick Clifton  <nickc@redhat.com>
 
 	PR 23932
 	* elf.c (rewrite_elf_program_header): Do not complain if no
 	sections are mapped to a segment.
 
 2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR ld/25490
 	* elflink.c (_bfd_elf_gc_mark_extra_sections): Issue an error
 	for garbage collection on __patchable_function_entries section
 	without linked-to section.
 
 2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR gas/25381
 	* bfd-in2.h: Regenerated.
 	* elflink.c (_bfd_elf_gc_mark_extra_sections): Call mark_hook
 	on section if gc_mark of any of its linked-to sections is set
 	and don't set gc_mark again.
 	* section.c (asection): Add linked_to_symbol_name to map_head
 	union.
 
 2020-02-06  Maciej W. Rozycki  <macro@wdc.com>
 
 	* elf32-v850.c (v850_elf_relax_section): Fix the index used for
 	reporting an unrecognized instruction with R_V850_LONGJUMP.
 
 2020-02-05  Alan Modra  <amodra@gmail.com>
 
 	* elf64-ppc.c (ppc_stub_plt_branch): Match comment with reality.
 
 2020-02-04  Alan Modra  <amodra@gmail.com>
 
 	* elf32-ppc.c (ppc_elf_relocate_section): After applying
 	R_PPC_VLE_ADDR20, goto copy_reloc.
 
 2020-02-02  H.J. Lu  <hongjiu.lu@intel.com>
 
 	* bfd-in2.h: Regenerated.
 	* section.c (SEC_ASSEMBLER_SECTION_ID): Fix a typo in comments.
 
 2020-02-02  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR gas/25380
 	* bfd-in2.h: Regenerated.
 	* ecoff.c (bfd_debug_section): Add section_id.
 	* section.c (bfd_section): Add section_id.
 	(SEC_ASSEMBLER_SECTION_ID): New.
 	(BFD_FAKE_SECTION): Add section_id.
 
 2020-02-01  Nick Clifton  <nickc@redhat.com>
 
 	* config.bfd: Move the c30-aout and tic30-aout targets onto the
 	obsolete list.
 
 2020-01-31  Sandra Loosemore  <sandra@codesourcery.com>
 
 	* elf-eh-frame.c (_bfd_elf_write_section_eh_frame): DW_EH_PE_datarel
 	encodings are relative to the GOT on nios2, too.
 
 2020-01-31  Alan Modra  <amodra@gmail.com>
 
 	* Makefile.am (elf32-target.h, elf64-target.h): Don't use a temp
 	file.  Use $< and $@ in rules.
 	(elf32-aarch64.c, elf64-aarch64.c): Likewise.
 	(elf32-ia64.c, elf64-ia64.c): Likewise.
 	(elf32-riscv.c, elf64-riscv.c): Likewise.
 	(peigen.c, pepigen.c, pex64igen.c): Likewise.
 	(elf32-aarch64.c, elf64-aarch64.c): Don't emit $srcdir on #line.
 	(elf32-riscv.c, elf64-riscv.c): Likewise, and use $(SED).
 	(elf32-ia64.c, elf64-ia64.c): Do emit #line.
 	(peigen.c, pepigen.c, pex64igen.c): Likewise.
 	* Makefile.in: Regenerate.
 
 2020-01-31  Alan Modra  <amodra@gmail.com>
 
 	PR 4110
 	* elf.c (setup_group): Don't clear entire section contents,
 	just the padding after group flags.  Release alloc'd memory
 	after a seek or read failure.
 
 2020-01-16  Jon Turney  <jon.turney@dronecode.org.uk>
 
 	* peXXigen.c (pe_is_repro): New function.
 	(_bfd_XX_print_private_bfd_data_common): Note timestamp is
 	actually a build hash if PE_IMAGE_DEBUG_TYPE_REPRO is present.
 
 2020-01-16  Jon Turney  <jon.turney@dronecode.org.uk>
 
 	* peXXigen.c (debug_type_names): Add names for new debug data type
 	values.
 
 2020-01-16  Jon Turney  <jon.turney@dronecode.org.uk>
 
 	* peXXigen.c (pe_print_debugdata): Fix the iteration variable for
 	inner loop.  Fix a memory leak.
 
 2020-01-30  Alan Modra  <amodra@gmail.com>
 
 	* coffgen.c (coff_real_object_p): Don't clear obj_coff_keep_syms
 	or obj_coff_keep_strings here.
 	(coff_get_normalized_symtab): Free external syms directly.
 	* xcofflink.c (xcoff_link_input_bfd): Restore obj_coff_keep_syms
 	on error exit path.
 
 2020-01-27  Jim Wilson  <jimw@sifive.com>
 
 	* cpu-riscv.c (riscv_scan): New.
 	(N): Change bfd_default_scan to riscv_scan.
 
 2020-01-27  Andreas Schwab  <schwab@suse.de>
 
 	* Makefile.am (ALL_MACHINES): Remove cpu-plugin.lo.
 	(ALL_MACHINES_CFILES): Remove cpu-plugin.c.
 	* Makefile.in: Regenerate.
 	* cpu-plugin.c: Remove.
 	* archures.c (enum bfd_architecture): Remove bfd_arch_plugin.
 	(bfd_plugin_arch): Remove declaration.
 	* bfd-in2.h: Regenerate.
 	* po/SRC-POTFILES.in: Regenerate.
 
 2020-01-27  H.J. Lu  <hongjiu.lu@intel.com>
 	    Alan Modra  <amodra@gmail.com>
 
 	PR ld/25458
 	* elflink.c (_bfd_elf_gc_mark_rsec): Mark all weak aliases.
 
 2020-01-24  Jim Wilson  <jimw@sifive.com>
 
 	* elfxx-riscv.c (riscv_get_prefix_class): Format s case like others.
 	(riscv_parse_prefixed_ext): Fix s extension comment and reword to
 	avoid over long line.
 
 2020-01-24  Nick Clifton  <nickc@redhat.com>
 
 	PR 25447
 	* coffgen.c (_bfd_coff_close_and_cleanup): Do not clear the keep
 	syms and keep strings flags as these may have been set in order to
 	prevent a bogus call to free.
 
 2020-01-23  Nick Clifton  <nickc@redhat.com>
 
 	* po/fr.po: Updated French translation.
 
 2020-01-23  Alan Modra  <amodra@gmail.com>
 
 	PR 25444
 	* elf.c (assign_file_positions_for_load_sections): Avoid divide
 	by zero when p_align is zero.
 
 2020-01-22  Maxim Blinov  <maxim.blinov@embecosm.com>
 
 	* bfd/elfnn-riscv.c (riscv_skip_prefix): New.
 	(riscv_prefix_cmp): Likewise.
 	(riscv_non_std_ext_p): Deleted.
 	(riscv_std_sv_ext_p): Likewise.
 	(riscv_non_std_sv_ext_p): Likewise.
 	(riscv_merge_non_std_and_sv_ext): Rename to...
 	(riscv_merge_multi_letter_ext): and modified to use riscv_prefix_cmp.
 	(riscv_merge_arch_attr_info): Replace 3 calls to
 	riscv_merge_non_std_and_sv_ext with single call to
 	riscv_merge_multi_letter_ext.
 	* bfd/elfxx-riscv.c (riscv_parse_std_ext): Break if we
 	encounter a 'z' prefix.
 	(riscv_get_prefix_class): New function, return prefix class based
 	on first few characters of input string.
 	(riscv_parse_config): New structure to factor out minor differences
 	in extension class parsing behaviour.
 	(riscv_parse_sv_or_non_std_ext): Rename to...
 	(riscv_parse_prefixed_ext): and parameterise with
 	riscv_parse_config.
 	(riscv_std_z_ext_strtab, riscv_std_s_ext_strtab): New.
 	(riscv_multi_letter_ext_valid_p): New.
 	(riscv_ext_x_valid_p, riscv_ext_z_valid_p, riscv_ext_s_valid_p): New.
 	(riscv_parse_subset): Delegate all non-single-letter parsing work
 	to riscv_parse_prefixed_ext.
 	* bfd/elfxx-riscv.h (riscv_isa_ext_class): New type.
 	(riscv_get_prefix_class): Declare.
 
 2020-01-22  Alan Modra  <amodra@gmail.com>
 
 	* elf64-ppc.c (struct ppc_link_hash_table): Add tga_group.
 	(ppc64_elf_archive_symbol_lookup): Extract __tls_get_addr_opt for
 	__tls_get_addr_desc.
 	(ppc64_elf_size_stubs): Add section for linker generated
 	__tls_get_addr_desc wrapper function.  Loop at least once if
 	generating this function.
 	(emit_tga_desc, emit_tga_desc_eh_frame): New functions.
 	(ppc64_elf_build_stubs): Generate __tls_get_addr_desc.
 
 2020-01-22  Alan Modra  <amodra@gmail.com>
 
 	* elf64-ppc.h (struct ppc64_elf_params): Add no_tls_get_addr_regsave.
 	* elf64-ppc.c (struct ppc_link_hash_table): Add tga_desc and
 	tga_desc_fd.
 	(is_tls_get_addr): Match tga_desc and tga_desc_df too.
 	(STDU_R1_0R1, ADDI_R1_R1): Define.
 	(tls_get_addr_prologue, tls_get_addr_epilogue): New functions.
 	(ppc64_elf_tls_setup): Set up tga_desc and tga_desc_fd.  Indirect
 	tga_desc_fd to opt_fd, and tga_desc to opt.  Set
 	no_tls_get_addr_regsave.
 	(branch_reloc_hash_match): Add hash3 and hash4.
 	(ppc64_elf_tls_optimize): Handle tga_desc_fd and tga_desc too.
 	(ppc64_elf_size_dynamic_sections): Likewise.
 	(ppc64_elf_relocate_section): Likewise.
 	(plt_stub_size, build_plt_stub): Likewise.  Size regsave
 	__tls_get_addr stub.
 	(build_tls_get_addr_stub): Build regsave __tls_get_addr stub and
 	eh_frame.
 	(ppc_size_one_stub): Handle tga_desc_fd and tga_desc too.  Size
 	eh_frame for regsave __tls_get_addr.
 
 2020-01-22  Alan Modra  <amodra@gmail.com>
 
 	* elf64-ppc.c (ppc64_elf_size_stubs): Correct condition under
 	which __tls_get_addr calls will be eliminated.
 
 2020-01-20  Nick Clifton  <nickc@redhat.com>
 
 	* po/pt.po: Updates Portuguese translation.
 	* po/ru.po: Updated Russian translation.
 	* po/uk.po: Updated Ukranian translation.
 
 2020-01-20  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR ld/25416
 	* elf64-x86-64.c (elf_x86_64_check_tls_transition): Support
 	"rex leal x@tlsdesc(%rip), %reg" and "call *x@tlsdesc(%eax)" in
 	X32 mode.
 	(elf_x86_64_relocate_section): In x32 mode, for GDesc -> LE
 	transition, relax "rex leal x@tlsdesc(%rip), %reg" to
 	"rex movl $x@tpoff, %reg", for GDesc -> IE transition, relax
 	"rex leal x@tlsdesc(%rip), %reg" to
 	"rex movl x@gottpoff(%rip), %eax".  For both transitions, relax
 	"call *(%eax)" to "nopl (%rax)".
 
 2020-01-20  Alan Modra  <amodra@gmail.com>
 
 	* elf64-ppc.c (LD_R11_0R3, CMPDI_R11_0, STD_R11_0R1, LD_R11_0R1),
 	(MTLR_R11): Don't define.
 	(LD_R0_0R3, CMPDI_R0_0): Define.
 	(build_tls_get_addr_stub): Don't use r11 in stub.
 
 2020-01-20  Alan Modra  <amodra@gmail.com>
 
 	* elf64-ppc.c (ppc_elf_hash_entry): New function, use throughout file.
 	(defined_sym_val, is_tls_get_addr): Likewise.
 
 2020-01-18  Nick Clifton  <nickc@redhat.com>
 
 	* version.m4 (BFD_VERSION): Set to 2.34.50.
 	* configure: Regenerate.
 	* po/bfd.pot: Regenerate.
 
 2020-01-18  Nick Clifton  <nickc@redhat.com>
 
 	Binutils 2.34 branch created.
 
 2020-01-17  Christian Biesinger  <cbiesinger@google.com>
 
 	* coff-arm.c: Fix spelling error (seperate).
 	* elfxx-riscv.c (riscv_parse_sv_or_non_std_ext): Fix spelling
 	error (seperate).
 	* sysdep.h (strnlen): Fix spelling error (seperate).
 
 2020-01-15  Lars Brinkhoff  <lars@nocrew.org>
 
 	PR 20694
 	* pdp11.c (TARGET_PAGE_SIZE): Set to 8192.
 
 2020-01-15  Alan Modra  <amodra@gmail.com>
 
 	PR 25384
 	* elf64-ppc.c (ELIMINATE_COPY_RELOCS): Update comment.
 	(ppc64_elf_adjust_dynamic_symbol): Don't allow .dynbss copies
 	of function symbols unless dot symbols are present.  Do warn
 	whenever one is created, regardles of whether a PLT entry is
 	also emitted for the function symbol.
 
 2020-01-14  Alan Modra  <amodra@gmail.com>
 
 	* som.c (som_bfd_count_ar_symbols): Error when file position
 	of symbols on chains is not strictly increasing.
 
 2020-01-14  Alan Modra  <amodra@gmail.com>
 
 	* vms.h (VMS_DEBUG): Define as 0.
 	* vms-alpha.c (image_write): Move debug output after bounds check.
 	Tidy bounds check.
 	(_bfd_vms_slurp_eihd): Warning fix.
 	(_bfd_vms_slurp_etir): Init variables to avoid bogus warnings.
 
 2020-01-13  Alan Modra  <amodra@gmail.com>
 
 	* vms-alpha.c (_bfd_vms_slurp_egsd): Ensure minimum size even
 	for "ignored" records.
 
 2020-01-13  Alan Modra  <amodra@gmail.com>
 
 	* wasm-module.c (wasm_scan_name_function_section): Formatting.
 	Delete asect name check.  Move asect NULL check to wasm_object_p.
 	Correct bounds check of sizes against end.  Replace uses of
 	bfd_zalloc with bfd_alloc, zeroing only necessary bytes.  Use
 	just one bfd_release.
 	(wasm_scan): Don't use malloc/strdup for section names,
 	bfd_alloc instead.  Simplify code prefixing section name.
 	Formatting.  Don't attempt to free memory here..
 	(wasm_object_p): ..do so here.
 
 2020-01-10  Szabolcs Nagy  <szabolcs.nagy@arm.com>
 
 	PR ld/22269
 	* elf32-arm.c (elf32_arm_final_link_relocate): Use
 	UNDEFWEAK_NO_DYNAMIC_RELOC.
 	(allocate_dynrelocs_for_symbol): Likewise.
 
 2020-01-10  Tamar Christina  <tamar.christina@arm.com>
 
 	PR 25210
 	* elfnn-aarch64.c (_bfd_aarch64_create_stub_section): Remove elfclass.
 
 2020-01-10  Alan Modra  <amodra@gmail.com>
 
 	* coff-alpha.c (alpha_ecoff_object_p): Calculate size in bfd_size_type.
 
 2020-01-09  Nick Clifton  <nickc@redhat.com>
 
 	PR 25221
 	* bfd.c (bfd_convert_section_contents): Check for a compress
 	header size that is larger than the actual section size.
 
 2020-01-08  Alan Modra  <amodra@gmail.com>
 
 	PR 25351
 	* elflink.c (bfd_elf_final_link): Call _bfd_fix_excluded_sec_syms
 	after removing sections.
 
 2020-01-06  Jim Wilson  <jimw@sifive.com>
 
 	PR 25205
 	* elfnn-riscv.c (riscv_elf_relocate_section) <R_RISCV_CALL>: Add
 	check for !bfd_link_pic (info).
 	<R_RISCV_CALL_PLT>: Move next to R_RISCV_CALL.
 	<R_RISCV_JAL>: Add comment.
 	(_bfd_riscv_relax_section): For plt.offset check, add check for
 	bfd_link_pic (info).  Add comment.
 
 2020-01-06  Alan Modra  <amodra@gmail.com>
 
 	* format.c (bfd_check_format_matches): Ignore bfd_error on target
 	match failures.  Don't init to bfd_error_wrong_format before
 	calling _bfd_check_format.
 
 2020-01-06  Alan Modra  <amodra@gmail.com>
 
 	* vms-alpha.c (_bfd_vms_push, _bfd_vms_pop): Return pass/fail
 	status rather than exiting on stack overflow or underflow.
 	(_bfd_vms_slurp_etir): Adjust to suit.
 
 2020-01-06  Alan Modra  <amodra@gmail.com>
 
 	* som.c (som_bfd_fill_in_ar_symbols): Bounds check som_dict index.
 
 2020-01-06  Alan Modra  <amodra@gmail.com>
 
 	* mach-o.c (bfd_mach_o_read_dylinker): Don't read past end of
 	command.  Check name offset is within command.
 	(bfd_mach_o_read_dylib, bfd_mach_o_read_prebound_dylib),
 	(bfd_mach_o_read_prebind_cksum, bfd_mach_o_read_twolevel_hints),
 	(bfd_mach_o_read_fvmlib, bfd_mach_o_read_dysymtab),
 	(bfd_mach_o_read_symtab, bfd_mach_o_read_uuid),
 	(bfd_mach_o_read_linkedit, bfd_mach_o_read_str),
 	(bfd_mach_o_read_dyld_info, bfd_mach_o_read_version_min),
 	(bfd_mach_o_read_encryption_info, bfd_mach_o_read_source_version),
 	(bfd_mach_o_read_encryption_info_64, bfd_mach_o_read_main),
 	(bfd_mach_o_read_note, bfd_mach_o_read_build_version),
 	(bfd_mach_o_read_segment): Similarly.
 	(bfd_mach_o_read_thread): Properly bound check thread struct.
 	Don't repeat checks on second loop.
 	(bfd_mach_o_read_command): Fail on invalid command length.
 
 2020-01-04  Alan Modra  <amodra@gmail.com>
 
 	* format.c (bfd_check_format_matches): Add preserve_match.
 	Save initial bfd state in "preserve", matched bfd state in
 	"preserve_match".  Save just the first match.  Release
 	bfd_alloc memory.  Restore and finish preserved state as
 	appropriate on all function exit paths.
 
 2020-01-04  Alan Modra  <amodra@gmail.com>
 
 	* mmo.c (mmo_mkobject): Allocate tdata with bfd_zalloc.
 
 2020-01-04  Alan Modra  <amodra@gmail.com>
 
 	* coffgen.c (coff_real_object_p): Free malloc'd memory on target
 	match too.
 
 2020-01-03  Nick Clifton  <nickc@redhat.com>
 
 	PR 25307
 	(bfd_pef_parse_function_stubs): Correct the test that ensures that
 	there is enough data remaining in the code buffer before
 	attempting to read a function stub.
 
 2020-01-03  Nick Clifton  <nickc@redhat.com>
 
 	PR 25308
 	* elf-properties.c (_bfd_elf_convert_gnu_properties): Check the
 	return value from bfd_malloc.
 	* elf32-arm.c (bfd_elf32_arm_vfp11_fix_veneer_locations): Likewise.
 	(bfd_elf32_arm_stm32l4xx_fix_veneer_locations): Likewise.
 	(elf32_arm_filter_cmse_symbols): Likewise.
 	(elf32_arm_write_section): Likewise.
 	* mach-o.c (bfd_mach_o_core_fetch_environment): Likewise.
 	(bfd_mach_o_follow_dsym): Likewise.
 	* pef.c (bfd_pef_print_loader_section): Likewise.
 	(bfd_pef_scan_start_address): Likewise.
 	(bfd_pef_parse_function_stubs): Likewise.
 	(bfd_pef_parse_symbols): Likewise.
 
 2020-01-03  Sergei Trofimovich  <siarheit@google.com>
 
         * elfnn-ia64.c (elfNN_ia64_merge_private_bfd_data): don't fail
         on binary inputs ld/PR25316.
         (is_ia64_elf): new helper to filter on ia64 objects.
 
 2020-01-03  Jan Beulich  <jbeulich@suse.com>
 
 	* mach-o.c (cpusubtype, bfd_mach_o_header_p): Insert underscore
 	in parameter names.
 	(bfd_mach_o_scan): Insert underscore in two variable names.
 
 2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>
 
 	* Makefile.am: Add z80-elf target support.
 	* configure.ac: Likewise.
 	* targets.c: Likewise.
 	* Makefile.in: Regenerate.
 	* configure: Regenerate.
 	* config.bfd: Add z80-elf target support and new arches: ez80 and
 	z180.
 	* elf32-z80.c: New file.
 	* archures.c: Add new z80 architectures: eZ80 and Z180.
 	* coffcode.h: Likewise.
 	* cpu-z80.c: Likewise.
 	* coff-z80.c: Add new relocations for Z80 target and local label
 	check.
 	* reloc.c: Add new relocs.
 	* bfd-in2.h: Regenerate.
 	* libbfd.h: Regenerate.
 
 2020-01-02  Tamar Christina  <tamar.christina@arm.com>
 
 	PR 25210
 	PR 24753
 	* elfnn-aarch64.c (_bfd_aarch64_create_stub_section): Set ELF class.
 
 2020-01-01  Alan Modra  <amodra@gmail.com>
 
 	Update year range in copyright notice of all files.
diff --git a/bfd/i386msdos.c b/bfd/i386msdos.c
index 5b56751cd30..e9307a7a424 100644
--- a/bfd/i386msdos.c
+++ b/bfd/i386msdos.c
@@ -45,72 +45,74 @@ static bfd_cleanup
 msdos_object_p (bfd *abfd)
 {
   struct external_DOS_hdr hdr;
   bfd_byte buffer[2];
   asection *section;
-  unsigned int size;
+  bfd_size_type size;
 
   if (bfd_seek (abfd, (file_ptr) 0, SEEK_SET) != 0
-      || bfd_bread (&hdr, (bfd_size_type) sizeof (hdr), abfd) < DOS_HDR_SIZE)
+      || (size = bfd_bread (&hdr, sizeof (hdr), abfd)) < DOS_HDR_SIZE)
     {
       if (bfd_get_error () != bfd_error_system_call)
 	bfd_set_error (bfd_error_wrong_format);
       return NULL;
     }
 
   if (H_GET_16 (abfd, hdr.e_magic) != IMAGE_DOS_SIGNATURE)
     {
       bfd_set_error (bfd_error_wrong_format);
       return NULL;
     }
 
   /* Check that this isn't actually a PE, NE, or LE file. If it is, the
      e_lfanew field will be valid and point to a header beginning with one of
      the relevant signatures.  If not, e_lfanew might point to anything, so
      don't bail if we can't read there.  */
-  if (H_GET_16 (abfd, hdr.e_cparhdr) < 4
-      || bfd_seek (abfd, (file_ptr) H_GET_32 (abfd, hdr.e_lfanew), SEEK_SET) != 0
-      || bfd_bread (buffer, (bfd_size_type) 2, abfd) != 2)
+  if (size < offsetof (struct external_DOS_hdr, e_lfanew) + 4
+      || H_GET_16 (abfd, hdr.e_cparhdr) < 4)
+    ;
+  else if (bfd_seek (abfd, H_GET_32 (abfd, hdr.e_lfanew), SEEK_SET) != 0
+	   || bfd_bread (buffer, (bfd_size_type) 2, abfd) != 2)
     {
       if (bfd_get_error () == bfd_error_system_call)
 	return NULL;
     }
   else
     {
       if (H_GET_16 (abfd, buffer) == IMAGE_NT_SIGNATURE
 	  || H_GET_16 (abfd, buffer) == IMAGE_OS2_SIGNATURE
 	  || H_GET_16 (abfd, buffer) == IMAGE_OS2_SIGNATURE_LE
 	  || H_GET_16 (abfd, buffer) == IMAGE_OS2_SIGNATURE_LX)
 	{
 	  bfd_set_error (bfd_error_wrong_format);
 	  return NULL;
 	}
     }
 
   if (!msdos_mkobject (abfd))
     return NULL;
 
   abfd->flags = EXEC_P;
   abfd->start_address = H_GET_16 (abfd, hdr.e_ip);
 
   section = bfd_make_section (abfd, ".text");
   if (section == NULL)
     return NULL;
 
   section->flags = (SEC_ALLOC | SEC_LOAD | SEC_CODE | SEC_HAS_CONTENTS);
   section->filepos = H_GET_16 (abfd, hdr.e_cparhdr) * 16;
   size = (H_GET_16 (abfd, hdr.e_cp) - 1) * EXE_PAGE_SIZE - section->filepos;
   size += H_GET_16 (abfd, hdr.e_cblp);
 
   /* Check that the size is valid.  */
-  if (bfd_seek (abfd, (file_ptr) (section->filepos + size), SEEK_SET) != 0)
+  if (bfd_seek (abfd, section->filepos + size, SEEK_SET) != 0)
     {
       if (bfd_get_error () != bfd_error_system_call)
 	bfd_set_error (bfd_error_wrong_format);
       return NULL;
     }
 
   bfd_set_section_size (section, size);
   section->alignment_power = 4;
 
   return _bfd_no_cleanup;
 }
diff --git a/ld/ChangeLog b/ld/ChangeLog
index 16c8b8b0698..12efa1117fe 100644
--- a/ld/ChangeLog
+++ b/ld/ChangeLog
@@ -1,675 +1,682 @@
+2020-03-23  Alan Modra  <amodra@gmail.com>
+
+	* Makefile.am (ALL_EMULATION_SOURCES): Reinstate ei386aout.c.
+	Include ei386aout dep file.
+	* Makefile.in: Regenerate.
+	* po/BLD-POTFILES.in: Regenerate.
+
 2020-03-20  H.J. Lu  <hongjiu.lu@intel.com>
 
 	* testsuite/ld-plugin/lto.exp (lto_link_tests): Run PR ld/25355
 	test only for GCC 10 or newer.
 
 2020-03-20  Alan Modra  <amodra@gmail.com>
 
 	* testplug.c (parse_symdefstr): Use %hhi to read sym->def, and
 	clear new fields.
 	* testplug2.c (parse_symdefstr): Likewise.
 	* testplug3.c (parse_symdefstr): Likewise.
 	* testplug4.c (parse_symdefstr): Likewise.
 
 2020-03-18  Christophe Lyon  <christophe.lyon@linaro.org>
 
 	* testsuite/ld-arm/non-contiguous-arm4.d: Fix expected output.
 	* testsuite/ld-powerpc/non-contiguous-powerpc.d: Likewise.
 
 2020-03-18  Christophe Lyon  <christophe.lyon@linaro.org>
 
 	* emultempl/xtensaelf.em: Emit a fatal error message
 	instead of calling abort.
 	* ldlang.c: Likewise.
 
 2020-03-14  Alan Modra  <amodra@gmail.com>
 
 	* testsuite/ld-elf/non-contiguous.d: Don't xfail generic ELF
 	targets.  Don't skip xtensa, xfail instead.
 
 2020-03-13  Christophe Lyon  <christophe.lyon@linaro.org>
 
 	* ldlang.c (lang_add_section): Add support for
 	non_contiguous_regions.
 	(size_input_section): Likewise.
 	(lang_size_sections_1): Likewise.
 	(process_insert_statements): Likewise.
 	* ldlex.h (option_values): Add OPTION_NON_CONTIGUOUS_REGIONS and
 	OPTION_NON_CONTIGUOUS_REGIONS_WARNINGS.
 	* lexsup.c (ld_options): Add entries for
 	--enable-non-contiguous-regions and
 	--enable-non-contiguous-regions-warnings.
 	(parse_args): Handle it.
 	* NEWS: Add --enable-non-contiguous-regions and
 	--enable-non-contiguous-regions-warnings.
 	* ld.texi: Add --enable-non-contiguous-regions and
 	--enable-non-contiguous-regions-warnings documentation.
 	* emultempl/armelf.em (elf32_arm_add_stub_section): Add
 	SEC_LINKER_CREATED flag.
 	* emultempl/xtensaelf.em (ld_build_required_section_dependence):
 	Emit an error when --enable-non-contiguous-regions is used.
 	* testsuite/ld-elf/non-contiguous.d: New.
 	* testsuite/ld-elf/non-contiguous.ld: New.
 	* testsuite/ld-elf/non-contiguous.s: New.
 	* testsuite/ld-arm/arm-elf.exp: Run the new tests.
 	* testsuite/ld-arm/arm-elf/non-contiguous-arm.s: New.
 	* testsuite/ld-arm/arm-elf/non-contiguous-arm.d: New.
 	* testsuite/ld-arm/arm-elf/non-contiguous-arm.ld: New.
 	* testsuite/ld-arm/arm-elf/non-contiguous-arm2.d: New.
 	* testsuite/ld-arm/arm-elf/non-contiguous-arm3.ld: New.
 	* testsuite/ld-arm/arm-elf/non-contiguous-arm3.d: New.
 	* testsuite/ld-arm/arm-elf/non-contiguous-arm3.ld: New.
 	* testsuite/ld-arm/arm-elf/non-contiguous-arm4.d: New.
 	* testsuite/ld-arm/arm-elf/non-contiguous-arm4.ld: New.
 	* testsuite/ld-arm/arm-elf/non-contiguous-arm5.d: New.
 	* testsuite/ld-arm/arm-elf/non-contiguous-arm5.ld: New.
 	* testsuite/ld-arm/arm-elf/non-contiguous-arm6.d: New.
 	* testsuite/ld-arm/arm-elf/non-contiguous-arm6.ld: New.
 	* testsuite/ld-powerpc/powerpc.exp: Run new tests.
 	* testsuite/ld-powerpc/non-contiguous-powerpc.d: New.
 	* testsuite/ld-powerpc/non-contiguous-powerpc.ld: New.
 	* testsuite/ld-powerpc/non-contiguous-powerpc.sd: New.
 	* testsuite/ld-powerpc/non-contiguous-powerpc64.d: New.
 
 2020-03-13  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR ld/24920
 	* emulparams/elf32_x86_64.sh: Use static.sh.
 	* emulparams/elf_i386.sh: Likewise.
 	* emulparams/elf_x86_64.sh: Likewise.
 	* emulparams/static.sh: New file.
 	* emultempl/elf-x86.em: Include "ldlex.h".
 	* testsuite/ld-elf/pr24920.err: New file.
 	* testsuite/ld-elf/linux-x86.exp: Run ld/24920 tests.
 
 2020-03-13  Christian Eggers  <ceggers@gmx.de>
 
 	* ldexp.c (fold_name): Return SIZEOF_HEADERS in bytes.
 
 2020-03-11  Alan Modra  <amodra@gmail.com>
 
 	* ldelf.c (elf_orphan_compatible): Return false when two sections
 	have differing SHF_MASKPROC or SHF_MASKOS flags.
 
 2020-03-05  Alan Modra  <amodra@gmail.com>
 
 	PR 25570
 	* ldlang.c (lang_size_sections_1): Don't report changes on
 	second and subsequent iterations that make no change in
 	alignment from that already reported.
 
 2020-03-05  Alan Modra  <amodra@gmail.com>
 
 	PR 25570
 	* ldlang.c (lang_sizing_iteration): New static var.
 	(lang_size_sections_1): Warn about no memory region only on first
 	iteration.  Warn about changing start address on first iteration
 	then any delta from that on subsequent iterations.  Report a signed
 	delta.
 	(one_lang_size_sections_pass): Increment lang_sizing_iteration.
 
 2020-03-03  Nick Clifton  <nickc@redhat.com>
 
 	PR 25588
 	* ld.texi (Options): Update the description of the --rpath-link
 	option.
 
 2020-03-02  Alan Modra  <amodra@gmail.com>
 
 	* plugin.c (plugin_object_p): Return a bfd_cleanup.
 	(plugin_cleanup): New function.
 
 2020-03-01  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR ld/25618
 	* plugin.c (plugin_object_p): Copy the no_export field to the IR
 	dummy object.
 	* testsuite/ld-plugin/lto.exp (lto_link_elf_tests): Add
 	PR ld/25618 tests.
 	* testsuite/ld-plugin/pr25618.d: New file.
 	* testsuite/ld-plugin/pr25618a.cc: Likewise.
 	* testsuite/ld-plugin/pr25618a.h: Likewise.
 	* testsuite/ld-plugin/pr25618b.cc: Likewise.
 	* testsuite/ld-plugin/pr25618b.h: Likewise.
 
 2020-02-27  Alan Modra  <amodra@gmail.com>
 
 	PR 24511
 	* testsuite/ld-mmix/b-fixo2.d: Adjust for .data change.
 	* testsuite/ld-mmix/sec-2.d: Likewise.
 	* testsuite/ld-mmix/sec-3.d: Likewise.
 	* testsuite/ld-mmix/sec-4.d: Likewise.
 	* testsuite/ld-mmix/spec802.d: Likewise.
 	* testsuite/ld-mmix/spec803.d: Likewise.
 	* testsuite/ld-mmix/spec804.d: Likewise.
 	* testsuite/ld-mmix/spec805.d: Likewise.
 	* testsuite/ld-mmix/spec806.d: Likewise.
 	* testsuite/ld-mmix/spec807.d: Likewise.
 	* testsuite/ld-mmix/spec808.d: Likewise.
 
 2020-02-26  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR ld/25593
 	* testsuite/ld-plugin/lto.exp: Run PR ld/25593 tests.
 	* testsuite/ld-plugin/pr25593.d: New file.
 	* testsuite/ld-plugin/pr25593a-1.c: Likewise.
 	* testsuite/ld-plugin/pr25593a-2.c: Likewise.
 	* testsuite/ld-plugin/pr25593b.c: Likewise.
 	* testsuite/ld-plugin/pr25593c.c: Likewise.
 	* testsuite/ld-plugin/pr25593d.c: Likewise.
 	* testsuite/ld-plugin/pr25593e.c: Likewise.
 
 2020-02-26  Alan Modra  <amodra@gmail.com>
 
 	* emultempl/cskyelf.em: Indent labels correctly.
 	* ldfile.c: Likewise.
 	* ldlang.c: Likewise.
 	* plugin.c: Likewise.
 
 2020-02-26  Alan Modra  <amodra@gmail.com>
 
 	PR 25593
 	* ldelf.c (ldelf_try_needed): Add DT_NEEDED lib to input_bfds.
 	(ldelf_after_open): Save state of input_bfds list before loading
 	DT_NEEDED libs.  Traverse input_bfds list adding DT_NEEDED tags.
 	Restore input_bfds list.
 	* testsuite/ld-cris/gotplt1.d: Adjust for changed .dynstr order.
 
 2020-02-24  Nick Clifton  <nickc@redhat.com>
 
 	* po/fr.po: Update French translation.
 
 2020-02-22  Alan Modra  <amodra@gmail.com>
 
 	PR 25585
 	* NEWS: Mention better "PHDR segment not covered by LOAD segment"
 	checking.
 
 2020-02-19  Sergey Belyashov  <sergey.belyashov@gmail.com>
 
 	PR 25537
 	* emultempl/z80.em: Remove machine compatability checking.
 
 2020-02-19  Sergey Belyashov  <sergey.belyashov@gmail.com>
 
 	PR 25517
 	* testsuite/ld-z80/arch_ez80_adl.d: Update command line.
 	* testsuite/ld-z80/arch_ez80_z80.d: Likewise.
 	* testsuite/ld-z80/arch_r800.d: Likewise.
 	* testsuite/ld-z80/arch_z180.d: Likewise.
 	* testsuite/ld-z80/arch_z80n.d: Likewise.
 	* testsuite/ld-z80/comb_arch_ez80_z80.d: Likewise.
 	* testsuite/ld-z80/comb_arch_z180_z80.d: Likewise.
 	* testsuite/ld-z80/comb_arch_z80_ez80.d: Likewise.
 	* testsuite/ld-z80/comb_arch_z80_z180.d: Likewise.
 	* testsuite/ld-z80/comb_arch_z80_z80n.d: Likewise.
 	* testsuite/ld-z80/relocs_b_ez80.d: Likewise.
 	* testsuite/ld-z80/relocs_b_z80.d: Likewise.
 	* testsuite/ld-z80/relocs_f_ez80.d: Likewise.
 	* testsuite/ld-z80/relocs_f_z80.d: Likewise.
 	* testsuite/ld-z80/relocs_f_z80n.d: Likewise.
 
 2020-02-19  Alan Modra  <amodra@gmail.com>
 
 	* testsuite/ld-plugin/pr25355.d: Allow alpha-linux nm result.
 
 2020-02-10  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR binutils/25355
 	* testsuite/ld-plugin/lto.exp: Run PR binutils/25355 test.
 	* testsuite/ld-plugin/pr25355.c: New file.
 	* testsuite/ld-plugin/pr25355.d: Likewise.
 	* testsuite/lib/ld-lib.exp (run_cc_link_tests): Support compile
 	only dump.
 
 2020-02-07  H.J. Lu  <hongjiu.lu@intel.com>
 
 	* testsuite/ld-unique/unique.exp (contains_unique_symbol): Updated.
 
 2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>
 
 	PR 25469
 	* emulparams/elf32z80.sh: Use z80 emulation.
 	* emultempl/z80.em: Make generic to both COFF and ELF Z80 emulations.
 	* emultempl/z80elf.em: Delete.
 	* testsuite/ld-elf/pr22450.d: Expect to fail for the Z80.
 	* testsuite/ld-elf/sec64k.exp: Fix Z80 assembly.
 	* testsuite/ld-unique/pr21529.s: Avoid register name conflict.
 	* testsuite/ld-unique/unique.s: Likewise.
 	* testsuite/ld-unique/unique_empty.s: Likewise.
 	* testsuite/ld-unique/unique_shared.s: Likewise.
 	* testsuite/ld-unique/unique.d: Updated expected output.
 	* testsuite/ld-z80/arch_z80n.d: New file.
 	* testsuite/ld-z80/comb_arch_z80_z80n.d: New file.
 	* testsuite/ld-z80/labels.s: Add more labels.
 	* testsuite/ld-z80/relocs.s: Add more reloc tests.
 	* testsuite/ld-z80/relocs_f_z80n.d: New file
 
 2020-02-07  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR ld/25022
 	* testsuite/ld-elf/pr25022.d: Xfail more targets which don't use
 	ldelf_before_place_orphans.
 
 2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR ld/25022
 	* emultempl/aix.em (ld_${EMULATION_NAME}_emulation): Add
 	before_place_orphans_default.
 	* emultempl/armcoff.em (ld_${EMULATION_NAME}_emulation): Likewise.
 	* emultempl/beos.em (ld_${EMULATION_NAME}_emulation): Likewise.
 	* emultempl/generic.em (ld_${EMULATION_NAME}_emulation): Likewise.
 	* emultempl/linux.em (ld_${EMULATION_NAME}_emulation): Likewise.
 	* emultempl/msp430.em (ld_${EMULATION_NAME}_emulation): Likewise.
 	* emultempl/pe.em (ld_${EMULATION_NAME}_emulation): Likewise.
 	* emultempl/pep.em (ld_${EMULATION_NAME}_emulation): Likewise.
 	* emultempl/ticoff.em (ld_${EMULATION_NAME}_emulation): Likewise.
 	* emultempl/vanilla.em (ld_${EMULATION_NAME}_emulation): Likewise.
 	* emultempl/elf.em (ld_${EMULATION_NAME}_emulation): Use
 	ldelf_before_place_orphans.
 	* ldelf.c (ldelf_before_place_orphans): New.
 	* ldelf.h (ldelf_before_place_orphans): Likewise.
 	* ldemul.c (ldemul_before_place_orphans): Likewise.
 	(before_place_orphans_default): Likewise.
 	* ldemul.h (ldemul_before_place_orphans): Likewise.
 	(before_place_orphans_default): Likewise.
 	(ld_emulation_xfer_struct): Add before_place_orphans.
 	* ldlang.c (lang_process): Call ldemul_before_place_orphans
 	before lang_place_orphans.
 	* testsuite/ld-elf/pr25022.d: New file.
 	* testsuite/ld-elf/pr25022.s: Likewise.
 	* testsuite/ld-elf/pr25022.t: Likewise.
 
 2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR ld/25490
 	* testsuite/ld-elf/pr25490-1.d: New file.
 	* testsuite/ld-elf/pr25490-1.s: Likewise.
 
 2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR ld/24526
 	PR ld/25021
 	PR ld/25490
 	* testsuite/ld-elf/elf.exp: Run PR ld/25490 tests.
 	* testsuite/ld-elf/pr24526.d: New file.
 	* testsuite/ld-elf/pr24526.s: Likewise.
 	* testsuite/ld-elf/pr25021.d: Likewise.
 	* testsuite/ld-elf/pr25021.s: Likewise.
 	* testsuite/ld-elf/pr25490-2-16.rd: Likewise.
 	* testsuite/ld-elf/pr25490-2-32.rd: Likewise.
 	* testsuite/ld-elf/pr25490-2-64.rd: Likewise.
 	* testsuite/ld-elf/pr25490-2.s: Likewise.
 	* testsuite/ld-elf/pr25490-3-16.rd: Likewise.
 	* testsuite/ld-elf/pr25490-3-32.rd: Likewise.
 	* testsuite/ld-elf/pr25490-3-64.rd: Likewise.
 	* testsuite/ld-elf/pr25490-3.s: Likewise.
 	* testsuite/ld-elf/pr25490-4-16.rd: Likewise.
 	* testsuite/ld-elf/pr25490-4-32.rd: Likewise.
 	* testsuite/ld-elf/pr25490-4-64.rd: Likewise.
 	* testsuite/ld-elf/pr25490-4.s: Likewise.
 	* testsuite/ld-elf/pr25490-5-16.rd: Likewise.
 	* testsuite/ld-elf/pr25490-5-32.rd: Likewise.
 	* testsuite/ld-elf/pr25490-5-64.rd: Likewise.
 	* testsuite/ld-elf/pr25490-5.s: Likewise.
 	* testsuite/ld-elf/pr25490-6-16.rd: Likewise.
 	* testsuite/ld-elf/pr25490-6-32.rd: Likewise.
 	* testsuite/ld-elf/pr25490-6-64.rd: Likewise.
 	* testsuite/ld-elf/pr25490-6.s: Likewise.
 
 2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
 
 	* testsuite/lib/ld-lib.exp (check_gc_sections_available): Mark
 	z80 as not supported.
 
 2020-02-06  Alan Modra  <amodra@gmail.com>
 
 	* testsuite/ld-ifunc/ifunc.exp: Enable for more targets, specifying
 	targets that don't support ifunc rather than ones that do.
 	(contains_irelative_reloc): Match R_PARISC_IPLT.
 	* testsuite/ld-ifunc/lib.c: Don't use .set in asm.
 	* testsuite/ld-ifunc/ifunc-23-x86.s,
 	* testsuite/ld-ifunc/ifunc-24-x86.s,
 	* testsuite/ld-ifunc/ifunc-25-x86.s,
 	* testsuite/ld-ifunc/ifunc-4-local-x86.s,
 	* testsuite/ld-ifunc/ifunc-4-x86.s: Define _main.
 	* testsuite/ld-ifunc/ifunc-10-i386.d,
 	* testsuite/ld-ifunc/ifunc-11-i386.d,
 	* testsuite/ld-ifunc/ifunc-12-i386.d,
 	* testsuite/ld-ifunc/ifunc-13-i386.d,
 	* testsuite/ld-ifunc/ifunc-14a-i386.d,
 	* testsuite/ld-ifunc/ifunc-14b-i386.d,
 	* testsuite/ld-ifunc/ifunc-14c-i386.d,
 	* testsuite/ld-ifunc/ifunc-14d-i386.d,
 	* testsuite/ld-ifunc/ifunc-14e-i386.d,
 	* testsuite/ld-ifunc/ifunc-14f-i386.d,
 	* testsuite/ld-ifunc/ifunc-15-i386.d,
 	* testsuite/ld-ifunc/ifunc-16-i386-now.d,
 	* testsuite/ld-ifunc/ifunc-16-i386.d,
 	* testsuite/ld-ifunc/ifunc-17a-i386.d,
 	* testsuite/ld-ifunc/ifunc-17b-i386.d,
 	* testsuite/ld-ifunc/ifunc-18a-i386.d,
 	* testsuite/ld-ifunc/ifunc-18b-i386.d,
 	* testsuite/ld-ifunc/ifunc-19a-i386.d,
 	* testsuite/ld-ifunc/ifunc-19b-i386.d,
 	* testsuite/ld-ifunc/ifunc-2-i386-now.d,
 	* testsuite/ld-ifunc/ifunc-2-i386.d,
 	* testsuite/ld-ifunc/ifunc-2-local-i386-now.d,
 	* testsuite/ld-ifunc/ifunc-2-local-i386.d,
 	* testsuite/ld-ifunc/ifunc-20-i386.d,
 	* testsuite/ld-ifunc/ifunc-21-i386.d,
 	* testsuite/ld-ifunc/ifunc-22-i386.d,
 	* testsuite/ld-ifunc/ifunc-26.d,
 	* testsuite/ld-ifunc/ifunc-5a-i386.d,
 	* testsuite/ld-ifunc/ifunc-5a-local-i386.d,
 	* testsuite/ld-ifunc/ifunc-5b-i386.d,
 	* testsuite/ld-ifunc/ifunc-5b-local-i386.d,
 	* testsuite/ld-ifunc/ifunc-5r-local-i386.d,
 	* testsuite/ld-ifunc/ifunc-6a-i386.d,
 	* testsuite/ld-ifunc/ifunc-6b-i386.d,
 	* testsuite/ld-ifunc/ifunc-7a-i386.d,
 	* testsuite/ld-ifunc/ifunc-7b-i386.d,
 	* testsuite/ld-ifunc/ifunc-8-i386.d,
 	* testsuite/ld-ifunc/ifunc-9-i386.d,
 	* testsuite/ld-ifunc/pr17154-i386-now.d,
 	* testsuite/ld-ifunc/pr17154-i386.d: xfail lynxos, nto, and solaris.
 
 2020-02-06  Alan Modra  <amodra@gmail.com>
 
 	* testsuite/lib/ld-lib.exp (is_generic): Delete.
 	* testsuite/ld-unique/unique.exp: Exclude tic6x.
 
 2020-02-06  Alan Modra  <amodra@gmail.com>
 
 	* configure.tgt (i[3-7]86-*-moss*): Don't clear targ_extra_ofiles.
 	(i[3-7]86-*-openbsd*, x86_64-*-openbsd*): Add.
 
 2020-02-02  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR gas/25380
 	* testsuite/ld-i386/pr22001-1c.S: Use "unique,N" in .section
 	directives.
 	* testsuite/ld-i386/tls-gd1.S: Likewise.
 	* testsuite/ld-x86-64/pr21481b.S: Likewise.
 
 2020-01-30  Jan Beulich  <jbeulich@suse.com>
 
 	* ld.texi: Remove space between @option and brace.
 
 2020-01-29  Alan Modra  <amodra@gmail.com>
 
 	PR 25477
 	* ldelf.c (ldelf_check_ld_so_conf): Add prefix parameter and
 	correct concat.
 	(ldelf_after_open): Add prefix parameter.
 	* ldelf.h (ldelf_after_open): Update prototype.
 	* emultempl/elf.em (gld${EMULATION_NAME}_after_open): Pass $prefix
 	to ldelf_after_open.
 	* Makefile.am: Correct z80 dependencies.
 	* Makefile.in: Regenerate.
 
 2020-01-28  Alan Modra  <amodra@gmail.com>
 
 	* ldexp.c (fold_name): Don't print bfd_link_hash_lookup failed
 	in first phase.
 
 2020-01-27  Alan Modra  <amodra@gmail.com>
 
 	* testsuite/ld-elfvers/vers.exp: Replace case statements with
 	switch statements.
 	* testsuite/ld-ifunc/ifunc.exp: Likewise.
 	* testsuite/ld-unique/unique.exp: Likewise.
 
 2020-01-27  H.J. Lu  <hongjiu.lu@intel.com>
 	    Alan Modra  <amodra@gmail.com>
 
 	PR ld/25458
 	* testsuite/ld-elf/pr25458.map: New file.
 	* testsuite/ld-elf/pr25458.rd: Likewise.
 	* testsuite/ld-elf/pr25458a.s: Likewise.
 	* testsuite/ld-elf/pr25458b.s: Likewise.
 	* testsuite/ld-elf/shared.exp: Run PR ld/25458 test.
 
 2020-01-22  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR ld/25416
 	* testsuite/ld-x86-64/tls.exp: Skip GNU2 TLS tests only without
 	compiler support.
 
 2020-01-22  Alan Modra  <amodra@gmail.com>
 
 	* testsuite/ld-powerpc/tlsdesc3.d,
 	* testsuite/ld-powerpc/tlsdesc3.wf,
 	* testsuite/ld-powerpc/tlsdesc4.d,
 	* testsuite/ld-powerpc/tlsdesc4.s,
 	* testsuite/ld-powerpc/tlsdesc4.wf: New tests.
 	* testsuite/ld-powerpc/powerpc.exp: Run them.
 
 2020-01-22  Alan Modra  <amodra@gmail.com>
 
 	* emultempl/ppc64elf.em (ppc64_opt, PARSE_AND_LIST_LONGOPTS),
 	(PARSE_AND_LIST_OPTIONS, PARSE_AND_LIST_ARGS_CASES): Support
 	--tls-get-addr-regsave and --no-tls-get-addr-regsave.
 	(params): Init new field.
 	* ld.texi (--tls-get-addr-regsave, --no-tls-get-addr-regsave):
 	Document.
 	* testsuite/ld-powerpc/tlsdesc.s,
 	* testsuite/ld-powerpc/tlsdesc.d,
 	* testsuite/ld-powerpc/tlsdesc.wf,
 	* testsuite/ld-powerpc/tlsdesc2.d,
 	* testsuite/ld-powerpc/tlsdesc2.wf,
 	* testsuite/ld-powerpc/tlsexenors.d,
 	* testsuite/ld-powerpc/tlsexenors.r,
 	* testsuite/ld-powerpc/tlsexers.d,
 	* testsuite/ld-powerpc/tlsexers.r,
 	* testsuite/ld-powerpc/tlsexetocnors.d,
 	* testsuite/ld-powerpc/tlsexetocrs.d,
 	* testsuite/ld-powerpc/tlsexetocrs.r,
 	* testsuite/ld-powerpc/tlsopt6.d,
 	* testsuite/ld-powerpc/tlsopt6.wf: New.
 	* testsuite/ld-powerpc/powerpc.exp: Run new tests.
 
 2020-01-22  Yuri Chornoivan  <yurchor@mageia.org>
 
 	PR 25417
 	* ldlang.c (ldlang_open_ctf): Fix error message typo.
 	* emultempl/z80elf.em (z80_elf_after_open): Likewise.
 
 2020-01-21  H.J. Lu  <hongjiu.lu@intel.com>
 
 	* testsuite/ld-elf/pr23900-1.d: Adjusted.
 
 2020-01-21  H.J. Lu  <hongjiu.lu@intel.com>
 
 	* testsuite/ld-elf/pr23900-1.d: Also pass -l to readelf.
 
 2020-01-20  Nick Clifton  <nickc@redhat.com>
 
 	* po/pt_BR.po: Updated Brazilian Portuguese translation.
 	* po/uk.po: Updated Ukranian translation.
 
 2020-01-20  H.J. Lu  <hongjiu.lu@intel.com>
 
 	PR ld/25416
 	* testsuite/ld-x86-64/pr25416-1.s: New file
 	* testsuite/ld-x86-64/pr25416-1a.d: Likewise.
 	* testsuite/ld-x86-64/pr25416-1b.d: Likewise.
 	* testsuite/ld-x86-64/pr25416-1.s: Likewise.
 	* testsuite/ld-x86-64/pr25416-2.s: Likewise.
 	* testsuite/ld-x86-64/pr25416-2a.d: Likewise.
 	* testsuite/ld-x86-64/pr25416-2b.d: Likewise.
 	* testsuite/ld-x86-64/pr25416-3.d: Likewise.
 	* testsuite/ld-x86-64/pr25416-3.s: Likewise.
 	* testsuite/ld-x86-64/pr25416-4.d: Likewise.
 	* testsuite/ld-x86-64/pr25416-4.s: Likewise.
 	* testsuite/ld-x86-64/pr25416-5a.c: Likewise.
 	* testsuite/ld-x86-64/pr25416-5b.s: Likewise.
 	* testsuite/ld-x86-64/pr25416-5c.s: Likewise.
 	* testsuite/ld-x86-64/pr25416-5d.s: Likewise.
 	* testsuite/ld-x86-64/pr25416-5e.s: Likewise.
 	* testsuite/ld-x86-64/x86-64.exp: Run PR ld/25416 tests.
 
 2020-01-20  Alan Modra  <amodra@gmail.com>
 
 	* testsuite/ld-powerpc/tlsexe.d: Match new __tls_get_addr stub.
 	* testsuite/ld-powerpc/tlsexeno.d: Likewise.
 	* testsuite/ld-powerpc/tlsexetoc.d: Likewise.
 	* testsuite/ld-powerpc/tlsexetocno.d: Likewise.
 	* testsuite/ld-powerpc/tlsopt5.d: Likewise.
 
 2020-01-18  Roland McGrath  <mcgrathr@google.com>
 
 	* testsuite/ld-x86-64/align-branch-1.d: Loosen instruction regexps
 	to admit whatever absolute address.  The label-relative address is
 	what the test needs to verify.
 
 2020-01-18  Nick Clifton  <nickc@redhat.com>
 
 	* configure: Regenerate.
 	* po/ld.pot: Regenerate.
 
 2020-01-18  Nick Clifton  <nickc@redhat.com>
 
 	Binutils 2.34 branch created.
 
 2020-01-16  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
 
 	* scripttempl/elf32msp430_3.sc: Remove.
 
 2020-01-16  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
 
 	* scripttempl/elf32msp430.sc: Add input section rules for
 	.upper.{text,data,rodata,bss}.
 	* testsuite/ld-msp430-elf/msp430-elf.exp: Run new test.
 	* testsuite/ld-msp430-elf/upper-input-sections.s: New test.
 
 2020-01-15  Lars Brinkhoff  <lars@nocrew.org>
 
 	PR 20694
 	* temulparams/pdp11.sh (TARGET_PAGE_SIZE): Set to 8192.
 
 2020-01-15  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
 
 	* testsuite/ld-msp430-elf/msp430-elf.exp: Run new test.
 	* testsuite/ld-msp430-elf/reloc-lo-430x.s: New test.
 
 2020-01-15  Alan Modra  <amodra@gmail.com>
 
 	* testsuite/ld-powerpc/ambiguousv1b.d: Adjust expected output.
 	* testsuite/ld-powerpc/funref.s: Align func_tab.
 	* testsuite/ld-powerpc/funref2.s: Likewise.
 	* testsuite/ld-powerpc/funv1.s: Add dot symbols.
 
 2020-01-14  Lili Cui <lili.cui@intel.com>
 
 	* testsuite/ld-i386/align-branch-1.d: Updated for i686-pc-elf.
 
 2020-01-13  Alan Modra  <amodra@gmail.com>
 
 	* po/BLD-POTFILES.in: Regenerate.
 
 2020-01-13  Claudiu Zissulescu  <claziss@gmail.com>
 
 	* testsuite/ld-arc/relax-local-pic.d: Improve matching patterns.
 
 2020-01-13  Claudiu Zissulescu  <claziss@gmail.com>
 
 	* Makefile.am: Remove earcelf_prof.c and earclinux_prof.c
 	emulations.
 	* configure.tgt: Likewise.
 	* Makefile.in: Regenerate.
 	* emulparams/arcelf_prof.sh: Remove file.
 	* emulparams/arclinux_prof.sh: Likewise.
 
 2020-01-13  Claudiu Zissulescu  <claziss@gmail.com>
 
 	* scripttempl/elfarcv2.sc : Allow interrupt vector table to be
 	located at an arbitrary address.  Use DWARF.sc file.
 	* scripttempl/elfarc.sc: Use DWARF.sc file.
 
 2020-01-07  Alan Modra  <amodra@gmail.com>
 
 	* testsuite/ld-mips-elf/eh-frame5.s,
 	* testsuite/ld-mips-elf/ehdr_start-new.s,
 	* testsuite/ld-mips-elf/ehdr_start-o32.s,
 	* testsuite/ld-mips-elf/mips16-call-global-1.s,
 	* testsuite/ld-mips-elf/mips16-intermix-1.s,
 	* testsuite/ld-mips-elf/mips16-pic-1b.s,
 	* testsuite/ld-mips-elf/mips16-pic-4c.s,
 	* testsuite/ld-mips-elf/no-shared-1-n64.s,
 	* testsuite/ld-mips-elf/no-shared-1-o32.s,
 	* testsuite/ld-mips-elf/pic-and-nonpic-1b-micromips.s,
 	* testsuite/ld-mips-elf/pic-and-nonpic-1b.s,
 	* testsuite/ld-mips-elf/pic-and-nonpic-2a.s,
 	* testsuite/ld-mips-elf/pic-and-nonpic-3b.s,
 	* testsuite/ld-mips-elf/pic-and-nonpic-4b.s,
 	* testsuite/ld-mips-elf/pic-and-nonpic-5a.s,
 	* testsuite/ld-mips-elf/pic-and-nonpic-6-n32c.s,
 	* testsuite/ld-mips-elf/pic-and-nonpic-6-n64c.s,
 	* testsuite/ld-mips-elf/pic-and-nonpic-6-o32c.s,
 	* testsuite/ld-mips-elf/pie.s,
 	* testsuite/ld-mips-elf/relax-jalr.s: Revert 2019-12-17 change.
 
 2020-01-06  Nick Clifton  <nickc@redhat.com>
 
 	PR 25327
 	* testsuite/ld-elf/shared.exp: Add -fcommon option to compiler
 	command line when building libcomm1.o and pr13250 tests.
 	* testsuite/ld-plugin/lto.exp: Likewise for pr20267 tests.
 
 2020-01-06  Nick Clifton  <nickc@redhat.com>
 
 	PR 25326
 	* testsuite/ld-elf/shared.exp: Add -fcommon option to compiler
 	command line when building pr19579 binaries.
 
 2020-01-03  Hannes Domani  <ssbssa@yahoo.de>
 
 	* emultempl/pe.em: Add new option --enable-reloc-section.
 	* emultempl/pep.em: Likewise.
 	* ld.texi: Document --enable-reloc-section.
 	* pe-dll.c (pe_dll_build_sections): Use pe_dll_enable_reloc_section.
 	(pe_dll_fill_sections): Simplify by calling pe_exe_fill_sections.
 	* pe-dll.h: Add extern declaration of option flag.
 	* pep-dll.c (pe_dll_enable_reloc_section):
 	Add alias define for pep_dll_enable_reloc_section.
 	* pep-dll.h: Add extern declaration of option flag.
 
 2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>
 
 	* Makefile.am: Add new target z80-elf
 	* configure.tgt: Likewise.
 	* Makefile.in: Regenerate.
 	* emultempl/z80.em: Add support for eZ80 and Z180 architectures.
 	* emulparams/elf32z80.sh: New file.
 	* emultempl/z80elf.em: Likewise.
 	* testsuite/ld-elf/comm-data4.s: Fix for Z80.
 	* testsuite/ld-elf/comm-data5.s: Fix for Z80.
 	* testsuite/ld-scripts/fill16.d: Fix for Z80.
 	* testsuite/ld-z80/arch_ez80_adl.d: Likewise.
 	* testsuite/ld-z80/arch_ez80_z80.d: Likewise.
 	* testsuite/ld-z80/arch_r800.d: Likewise.
 	* testsuite/ld-z80/arch_z180.d: Likewise.
 	* testsuite/ld-z80/arch_z80.d: Likewise.
 	* testsuite/ld-z80/comb_arch_ez80_z80.d: Likewise.
 	* testsuite/ld-z80/comb_arch_z180.d: Likewise.
 	* testsuite/ld-z80/labels.s: Likewise.
 	* testsuite/ld-z80/relocs.s: Likewise.
 	* testsuite/ld-z80/relocs_b_ez80.d: Likewise.
 	* testsuite/ld-z80/relocs_b_z80.d: Likewise.
 	* testsuite/ld-z80/relocs_f_z80.d: Likewise.
 	* testsuite/ld-z80/z80.exp: Likewise.
 	* NEWS: Mention the new support.
 
 2020-01-02  Tamar Christina  <tamar.christina@arm.com>
 
 	PR 25210
 	PR 24753
 	* emultempl/aarch64elf.em (elf${ELFSIZE}_aarch64_add_stub_section):
 	Remove SEC_LINKER_CREATED.
 	* testsuite/ld-aarch64/aarch64-elf.exp: Add erratum835769-843419.
 	* testsuite/ld-aarch64/erratum835769-843419.d: New test.
 
 2020-01-01  Alan Modra  <amodra@gmail.com>
 
 	Update year range in copyright notice of all files.
diff --git a/ld/Makefile.am b/ld/Makefile.am
index 4a9b8404b7b..a64899fc091 100644
--- a/ld/Makefile.am
+++ b/ld/Makefile.am
@@ -162,227 +162,228 @@ LIBCTF = ../libctf/libctf.la
 # These all start with e so 'make clean' can find them.
 ALL_EMULATION_SOURCES = \
 	eaix5ppc.c \
 	eaix5rs6.c \
 	eaixppc.c \
 	eaixrs6.c \
 	ealpha.c \
 	ealphavms.c \
 	earcv2elf.c \
 	earcv2elfx.c \
 	earcelf.c \
 	earclinux.c \
 	earclinux_nps.c \
 	earm_wince_pe.c \
 	earmelf.c \
 	earmelf_fbsd.c \
 	earmelf_fuchsia.c \
 	earmelf_linux.c \
 	earmelf_linux_eabi.c \
 	earmelf_linux_fdpiceabi.c \
 	earmelf_nacl.c \
 	earmelf_nbsd.c \
 	earmelf_phoenix.c \
 	earmelf_vxworks.c \
 	earmelfb.c \
 	earmelfb_fbsd.c \
 	earmelfb_fuchsia.c \
 	earmelfb_linux.c \
 	earmelfb_linux_eabi.c \
 	earmelfb_linux_fdpiceabi.c \
 	earmelfb_nacl.c \
 	earmelfb_nbsd.c \
 	earmnto.c \
 	earmpe.c \
 	earmsymbian.c \
 	eavr1.c \
 	eavr2.c \
 	eavr25.c \
 	eavr3.c \
 	eavr31.c \
 	eavr35.c \
 	eavr4.c \
 	eavr5.c \
 	eavr51.c \
 	eavr6.c \
 	eavrxmega1.c \
 	eavrxmega2.c \
 	eavrxmega3.c \
 	eavrxmega4.c \
 	eavrxmega5.c \
 	eavrxmega6.c \
 	eavrxmega7.c \
 	eavrtiny.c   \
 	ecrisaout.c \
 	ecriself.c \
 	ecrislinux.c \
 	ecskyelf.c \
 	ecskyelf_linux.c \
 	ed10velf.c \
 	ed30v_e.c \
 	ed30v_o.c \
 	ed30velf.c \
 	eelf32_dlx.c \
 	eelf32_sparc.c \
 	eelf32_sparc_sol2.c \
 	eelf32_sparc_vxworks.c \
 	eelf32_spu.c \
 	eelf32_tic6x_be.c \
 	eelf32_tic6x_le.c \
 	eelf32_tic6x_linux_be.c \
 	eelf32_tic6x_linux_le.c \
 	eelf32_tic6x_elf_be.c \
 	eelf32_tic6x_elf_le.c \
 	eelf32am33lin.c \
 	eelf32bfin.c \
 	eelf32bfinfd.c \
 	eelf32cr16.c \
 	eelf32crx.c \
 	eelf32epiphany.c \
 	eelf32epiphany_4x4.c \
 	eelf32fr30.c \
 	eelf32frv.c \
 	eelf32frvfd.c \
 	eelf32ft32.c \
 	eelf32ip2k.c \
 	eelf32iq10.c \
 	eelf32iq2000.c \
 	eelf32lm32.c \
 	eelf32lm32fd.c \
 	eelf32lppc.c \
 	eelf32lppclinux.c \
 	eelf32lppcnto.c \
 	eelf32lppcsim.c \
 	eelf32m32c.c \
 	eelf32mb_linux.c \
 	eelf32mbel_linux.c \
 	eelf32mcore.c \
 	eelf32mep.c \
 	eelf32metag.c \
 	eelf32microblazeel.c \
 	eelf32microblaze.c \
 	eelf32moxie.c \
 	emoxiebox.c \
 	eelf32mt.c \
 	eelf32or1k.c \
 	eelf32or1k_linux.c \
 	eelf32ppc.c \
 	eelf32ppc_fbsd.c \
 	eelf32ppclinux.c \
 	eelf32ppcnto.c \
 	eelf32ppcsim.c \
 	eelf32ppcvxworks.c \
 	eelf32ppcwindiss.c \
 	eelf32lriscv.c \
 	eelf32lriscv_ilp32f.c \
 	eelf32lriscv_ilp32.c \
 	eelf32rl78.c \
 	eelf32rx.c \
 	eelf32tilegx.c \
 	eelf32tilegx_be.c \
 	eelf32tilepro.c \
 	eelf32vax.c \
 	eelf32visium.c \
 	eelf32xc16x.c \
 	eelf32xc16xl.c \
 	eelf32xc16xs.c \
 	eelf32xstormy16.c \
 	eelf32xtensa.c \
 	eelf32z80.c \
 	eelf_i386.c \
 	eelf_i386_be.c \
 	eelf_i386_fbsd.c \
 	eelf_i386_ldso.c \
 	eelf_i386_nacl.c \
 	eelf_i386_sol2.c \
 	eelf_i386_vxworks.c \
 	eelf_iamcu.c \
 	eelf_s390.c \
 	eh8300elf.c \
 	eh8300elf_linux.c \
 	eh8300helf.c \
 	eh8300helf_linux.c \
 	eh8300hnelf.c \
 	eh8300self.c \
 	eh8300self_linux.c \
 	eh8300snelf.c \
 	eh8300sxelf.c \
 	eh8300sxelf_linux.c \
 	eh8300sxnelf.c \
 	ehppaelf.c \
 	ehppalinux.c \
 	ehppanbsd.c \
 	ehppaobsd.c \
+	ei386aout.c \
 	ei386beos.c \
 	ei386bsd.c \
 	ei386go32.c \
 	ei386lynx.c \
 	ei386moss.c \
 	ei386msdos.c \
 	ei386nto.c \
 	ei386pe.c \
 	ei386pe_posix.c \
 	em32relf.c \
 	em32relf_linux.c \
 	em32rlelf.c \
 	em32rlelf_linux.c \
 	em68hc11elf.c \
 	em68hc11elfb.c \
 	em68hc12elf.c \
 	em68hc12elfb.c \
 	em68kelf.c \
 	em68kelfnbsd.c \
 	em9s12zelf.c \
 	emcorepe.c \
 	emn10200.c \
 	emn10300.c \
 	emsp430elf.c \
 	emsp430X.c \
 	ends32elf.c \
 	ends32elf16m.c \
 	ends32elf_linux.c \
 	ends32belf.c \
 	ends32belf16m.c \
 	ends32belf_linux.c \
 	ens32knbsd.c \
 	enios2elf.c \
 	enios2linux.c \
 	epc532macha.c \
 	epdp11.c \
 	epjelf.c \
 	epjlelf.c \
 	eppclynx.c \
 	eppcmacos.c \
 	eppcpe.c \
 	epruelf.c \
 	escore3_elf.c \
 	escore7_elf.c \
 	esh.c \
 	eshelf.c \
 	eshelf_fd.c \
 	eshelf_linux.c \
 	eshelf_nbsd.c \
 	eshelf_nto.c \
 	eshelf_uclinux.c \
 	eshelf_vxworks.c \
 	eshl.c \
 	eshlelf.c \
 	eshlelf_fd.c \
 	eshlelf_linux.c \
 	eshlelf_nbsd.c \
 	eshlelf_nto.c \
 	eshlelf_vxworks.c \
 	eshpe.c \
 	etic30aout.c \
 	etic30coff.c \
 	etic3xcoff.c \
 	etic3xcoff_onchip.c \
 	etic4xcoff.c \
 	etic54xcoff.c \
 	ev850.c \
 	ev850_rh850.c \
 	evanilla.c \
 	evaxnbsd.c \
 	exgateelf.c \
 	ez80.c \
 	ez8001.c \
 	ez8002.c
@@ -642,313 +643,314 @@ run-genscripts:
 $(ALL_EMULATION_SOURCES) $(ALL_64_EMULATION_SOURCES): $(GEN_DEPENDS)
 	base=`echo $@ | sed -e 's,e\(.*\).c,\1,'`; \
 	$(MAKE) run-genscripts "script_target=$$base" "script_tdirname=tdir_$$base"
 
 # It's a pity we can't generate these include "./deps/e*.Pc" lines
 # from ALL_EMULATION_SOURCES and ALL_64_EMULATION_SOURCES, but that isn't
 # so easy to do.  What we'd like to do is have automake generate these
 # lines in Makefile.in, but I can't see a way of doing that.  Generating
 # the includes at configure time is possible but then we'd need to
 # duplicate autoconf/automake handling of dependency files.
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaix5ppc.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaix5rs6.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaixppc.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaixrs6.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ealpha.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ealphavms.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earcv2elf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earcv2elfx.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earcelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earclinux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earclinux_nps.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earm_wince_pe.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_fuchsia.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_linux_eabi.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_linux_fdpiceabi.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_nacl.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_nbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_phoenix.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_vxworks.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_fuchsia.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_linux_eabi.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_linux_fdpiceabi.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_nacl.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_nbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmnto.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmpe.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmsymbian.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr1.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr2.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr25.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr3.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr31.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr35.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr4.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr5.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr51.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr6.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavrxmega1.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavrxmega2.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavrxmega3.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavrxmega4.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavrxmega5.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavrxmega6.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavrxmega7.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavrtiny.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ecrisaout.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ecriself.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ecrislinux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ecskyelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ecskyelf_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ed10velf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ed30v_e.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ed30v_o.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ed30velf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_dlx.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_sparc.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_sparc_sol2.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_sparc_vxworks.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_spu.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_tic6x_be.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_tic6x_le.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_tic6x_linux_be.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_tic6x_linux_le.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_tic6x_elf_be.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_tic6x_elf_le.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32am33lin.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32bfin.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32bfinfd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32cr16.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32crx.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32epiphany.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32epiphany_4x4.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32fr30.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32frv.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32frvfd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ft32.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ip2k.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32iq10.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32iq2000.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lm32.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lm32fd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lppc.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lppclinux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lppcnto.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lppcsim.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32m32c.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32mb_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32mbel_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32mcore.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32mep.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32metag.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32microblazeel.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32microblaze.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32moxie.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emoxiebox.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32mt.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32or1k.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32or1k_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppc.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppc_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppclinux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppcnto.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppcsim.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppcvxworks.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppcwindiss.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lriscv.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lriscv_ilp32f.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lriscv_ilp32.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32rl78.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32rx.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32tilegx.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32tilegx_be.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32tilepro.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32vax.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32visium.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32xc16x.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32xc16xl.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32xc16xs.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32xstormy16.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32xtensa.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32z80.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_i386.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_i386_be.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_i386_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_i386_ldso.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_i386_nacl.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_i386_sol2.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_i386_vxworks.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_iamcu.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_s390.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300elf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300elf_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300helf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300helf_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300hnelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300self.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300self_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300snelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300sxelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300sxelf_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300sxnelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ehppaelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ehppalinux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ehppanbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ehppaobsd.Pc@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386aout.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386beos.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386bsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386go32.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386lynx.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386moss.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386msdos.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386nto.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386pe.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386pe_posix.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em32relf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em32relf_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em32rlelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em32rlelf_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em68hc11elf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em68hc11elfb.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em68hc12elf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em68hc12elfb.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em68kelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em68kelfnbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em9s12zelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emcorepe.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emn10200.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emn10300.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emsp430elf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emsp430X.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ends32elf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ends32elf16m.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ends32elf_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ends32belf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ends32belf16m.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ends32belf_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ens32knbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/enios2elf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/enios2linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epc532macha.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epdp11.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epjelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epjlelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eppclynx.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eppcmacos.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eppcpe.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epruelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/escore3_elf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/escore7_elf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/esh.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshelf_fd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshelf_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshelf_nbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshelf_nto.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshelf_uclinux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshelf_vxworks.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshl.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshlelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshlelf_fd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshlelf_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshlelf_nbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshlelf_nto.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshlelf_vxworks.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshpe.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/etic30aout.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/etic30coff.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/etic3xcoff.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/etic3xcoff_onchip.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/etic4xcoff.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/etic54xcoff.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ev850.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ev850_rh850.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/evanilla.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/evaxnbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exgateelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ez80.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ez8001.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ez8002.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64elf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64elf32.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64elfb.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64elf32b.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64cloudabi.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64cloudabib.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64fbsdb.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64linuxb.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64linux32.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64linux32b.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_x86_64.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_x86_64_nacl.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32b4300.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32bmip.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32bmipn32.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32bsmip.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32btsmip.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32btsmip_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32btsmipn32.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32btsmipn32_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ebmip.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ebmipvxworks.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32elmip.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32elmipvxworks.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32l4300.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lmip.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lr5900.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lr5900n32.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lsmip.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ltsmip.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ltsmip_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ltsmipn32.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ltsmipn32_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32mipswindiss.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_aix.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64bpf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_ia64.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_ia64_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_ia64_vms.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_s390.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_sparc.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_sparc_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_sparc_sol2.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64alpha.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64alpha_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64alpha_nbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64bmip.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64btsmip.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64btsmip_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64hppa.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64lppc.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64lriscv.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64lriscv_lp64f.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64lriscv_lp64.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64ltsmip.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64ltsmip_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64mmix.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64ppc.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64ppc_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64rdos.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64tilegx.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64tilegx_be.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_l1om.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_l1om_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_k1om.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_k1om_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_x86_64.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_x86_64_cloudabi.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_x86_64_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_x86_64_nacl.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_x86_64_sol2.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ehppa64linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386pep.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emmo.Pc@am__quote@
 
 # We need this for automake to use YLWRAP.
diff --git a/ld/Makefile.in b/ld/Makefile.in
index 46d9b140779..b34455b1f86 100644
--- a/ld/Makefile.in
+++ b/ld/Makefile.in
@@ -652,227 +652,228 @@ LIBCTF = ../libctf/libctf.la
 # These all start with e so 'make clean' can find them.
 ALL_EMULATION_SOURCES = \
 	eaix5ppc.c \
 	eaix5rs6.c \
 	eaixppc.c \
 	eaixrs6.c \
 	ealpha.c \
 	ealphavms.c \
 	earcv2elf.c \
 	earcv2elfx.c \
 	earcelf.c \
 	earclinux.c \
 	earclinux_nps.c \
 	earm_wince_pe.c \
 	earmelf.c \
 	earmelf_fbsd.c \
 	earmelf_fuchsia.c \
 	earmelf_linux.c \
 	earmelf_linux_eabi.c \
 	earmelf_linux_fdpiceabi.c \
 	earmelf_nacl.c \
 	earmelf_nbsd.c \
 	earmelf_phoenix.c \
 	earmelf_vxworks.c \
 	earmelfb.c \
 	earmelfb_fbsd.c \
 	earmelfb_fuchsia.c \
 	earmelfb_linux.c \
 	earmelfb_linux_eabi.c \
 	earmelfb_linux_fdpiceabi.c \
 	earmelfb_nacl.c \
 	earmelfb_nbsd.c \
 	earmnto.c \
 	earmpe.c \
 	earmsymbian.c \
 	eavr1.c \
 	eavr2.c \
 	eavr25.c \
 	eavr3.c \
 	eavr31.c \
 	eavr35.c \
 	eavr4.c \
 	eavr5.c \
 	eavr51.c \
 	eavr6.c \
 	eavrxmega1.c \
 	eavrxmega2.c \
 	eavrxmega3.c \
 	eavrxmega4.c \
 	eavrxmega5.c \
 	eavrxmega6.c \
 	eavrxmega7.c \
 	eavrtiny.c   \
 	ecrisaout.c \
 	ecriself.c \
 	ecrislinux.c \
 	ecskyelf.c \
 	ecskyelf_linux.c \
 	ed10velf.c \
 	ed30v_e.c \
 	ed30v_o.c \
 	ed30velf.c \
 	eelf32_dlx.c \
 	eelf32_sparc.c \
 	eelf32_sparc_sol2.c \
 	eelf32_sparc_vxworks.c \
 	eelf32_spu.c \
 	eelf32_tic6x_be.c \
 	eelf32_tic6x_le.c \
 	eelf32_tic6x_linux_be.c \
 	eelf32_tic6x_linux_le.c \
 	eelf32_tic6x_elf_be.c \
 	eelf32_tic6x_elf_le.c \
 	eelf32am33lin.c \
 	eelf32bfin.c \
 	eelf32bfinfd.c \
 	eelf32cr16.c \
 	eelf32crx.c \
 	eelf32epiphany.c \
 	eelf32epiphany_4x4.c \
 	eelf32fr30.c \
 	eelf32frv.c \
 	eelf32frvfd.c \
 	eelf32ft32.c \
 	eelf32ip2k.c \
 	eelf32iq10.c \
 	eelf32iq2000.c \
 	eelf32lm32.c \
 	eelf32lm32fd.c \
 	eelf32lppc.c \
 	eelf32lppclinux.c \
 	eelf32lppcnto.c \
 	eelf32lppcsim.c \
 	eelf32m32c.c \
 	eelf32mb_linux.c \
 	eelf32mbel_linux.c \
 	eelf32mcore.c \
 	eelf32mep.c \
 	eelf32metag.c \
 	eelf32microblazeel.c \
 	eelf32microblaze.c \
 	eelf32moxie.c \
 	emoxiebox.c \
 	eelf32mt.c \
 	eelf32or1k.c \
 	eelf32or1k_linux.c \
 	eelf32ppc.c \
 	eelf32ppc_fbsd.c \
 	eelf32ppclinux.c \
 	eelf32ppcnto.c \
 	eelf32ppcsim.c \
 	eelf32ppcvxworks.c \
 	eelf32ppcwindiss.c \
 	eelf32lriscv.c \
 	eelf32lriscv_ilp32f.c \
 	eelf32lriscv_ilp32.c \
 	eelf32rl78.c \
 	eelf32rx.c \
 	eelf32tilegx.c \
 	eelf32tilegx_be.c \
 	eelf32tilepro.c \
 	eelf32vax.c \
 	eelf32visium.c \
 	eelf32xc16x.c \
 	eelf32xc16xl.c \
 	eelf32xc16xs.c \
 	eelf32xstormy16.c \
 	eelf32xtensa.c \
 	eelf32z80.c \
 	eelf_i386.c \
 	eelf_i386_be.c \
 	eelf_i386_fbsd.c \
 	eelf_i386_ldso.c \
 	eelf_i386_nacl.c \
 	eelf_i386_sol2.c \
 	eelf_i386_vxworks.c \
 	eelf_iamcu.c \
 	eelf_s390.c \
 	eh8300elf.c \
 	eh8300elf_linux.c \
 	eh8300helf.c \
 	eh8300helf_linux.c \
 	eh8300hnelf.c \
 	eh8300self.c \
 	eh8300self_linux.c \
 	eh8300snelf.c \
 	eh8300sxelf.c \
 	eh8300sxelf_linux.c \
 	eh8300sxnelf.c \
 	ehppaelf.c \
 	ehppalinux.c \
 	ehppanbsd.c \
 	ehppaobsd.c \
+	ei386aout.c \
 	ei386beos.c \
 	ei386bsd.c \
 	ei386go32.c \
 	ei386lynx.c \
 	ei386moss.c \
 	ei386msdos.c \
 	ei386nto.c \
 	ei386pe.c \
 	ei386pe_posix.c \
 	em32relf.c \
 	em32relf_linux.c \
 	em32rlelf.c \
 	em32rlelf_linux.c \
 	em68hc11elf.c \
 	em68hc11elfb.c \
 	em68hc12elf.c \
 	em68hc12elfb.c \
 	em68kelf.c \
 	em68kelfnbsd.c \
 	em9s12zelf.c \
 	emcorepe.c \
 	emn10200.c \
 	emn10300.c \
 	emsp430elf.c \
 	emsp430X.c \
 	ends32elf.c \
 	ends32elf16m.c \
 	ends32elf_linux.c \
 	ends32belf.c \
 	ends32belf16m.c \
 	ends32belf_linux.c \
 	ens32knbsd.c \
 	enios2elf.c \
 	enios2linux.c \
 	epc532macha.c \
 	epdp11.c \
 	epjelf.c \
 	epjlelf.c \
 	eppclynx.c \
 	eppcmacos.c \
 	eppcpe.c \
 	epruelf.c \
 	escore3_elf.c \
 	escore7_elf.c \
 	esh.c \
 	eshelf.c \
 	eshelf_fd.c \
 	eshelf_linux.c \
 	eshelf_nbsd.c \
 	eshelf_nto.c \
 	eshelf_uclinux.c \
 	eshelf_vxworks.c \
 	eshl.c \
 	eshlelf.c \
 	eshlelf_fd.c \
 	eshlelf_linux.c \
 	eshlelf_nbsd.c \
 	eshlelf_nto.c \
 	eshlelf_vxworks.c \
 	eshpe.c \
 	etic30aout.c \
 	etic30coff.c \
 	etic3xcoff.c \
 	etic3xcoff_onchip.c \
 	etic4xcoff.c \
 	etic54xcoff.c \
 	ev850.c \
 	ev850_rh850.c \
 	evanilla.c \
 	evaxnbsd.c \
 	exgateelf.c \
 	ez80.c \
 	ez8001.c \
 	ez8002.c
@@ -1193,351 +1194,352 @@ mostlyclean-compile:
 distclean-compile:
 	-rm -f *.tab.c
 
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/deffilep.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64cloudabi.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64cloudabib.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64elf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64elf32.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64elf32b.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64elfb.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64fbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64fbsdb.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64linux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64linux32.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64linux32b.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64linuxb.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaix5ppc.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaix5rs6.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaixppc.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaixrs6.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ealpha.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ealphavms.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earcelf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earclinux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earclinux_nps.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earcv2elf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earcv2elfx.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earm_wince_pe.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_fbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_fuchsia.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_linux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_linux_eabi.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_linux_fdpiceabi.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_nacl.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_nbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_phoenix.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_vxworks.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_fbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_fuchsia.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_linux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_linux_eabi.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_linux_fdpiceabi.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_nacl.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_nbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmnto.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmpe.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmsymbian.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr1.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr2.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr25.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr3.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr31.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr35.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr4.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr5.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr51.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr6.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavrtiny.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavrxmega1.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavrxmega2.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavrxmega3.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavrxmega4.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavrxmega5.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavrxmega6.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavrxmega7.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ecrisaout.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ecriself.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ecrislinux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ecskyelf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ecskyelf_linux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ed10velf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ed30v_e.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ed30v_o.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ed30velf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_dlx.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_sparc.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_sparc_sol2.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_sparc_vxworks.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_spu.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_tic6x_be.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_tic6x_elf_be.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_tic6x_elf_le.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_tic6x_le.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_tic6x_linux_be.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_tic6x_linux_le.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_x86_64.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_x86_64_nacl.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32am33lin.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32b4300.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32bfin.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32bfinfd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32bmip.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32bmipn32.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32bsmip.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32btsmip.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32btsmip_fbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32btsmipn32.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32btsmipn32_fbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32cr16.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32crx.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ebmip.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ebmipvxworks.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32elmip.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32elmipvxworks.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32epiphany.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32epiphany_4x4.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32fr30.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32frv.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32frvfd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ft32.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ip2k.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32iq10.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32iq2000.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32l4300.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lm32.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lm32fd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lmip.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lppc.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lppclinux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lppcnto.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lppcsim.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lr5900.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lr5900n32.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lriscv.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lriscv_ilp32.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lriscv_ilp32f.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lsmip.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ltsmip.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ltsmip_fbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ltsmipn32.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ltsmipn32_fbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32m32c.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32mb_linux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32mbel_linux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32mcore.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32mep.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32metag.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32microblaze.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32microblazeel.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32mipswindiss.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32moxie.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32mt.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32or1k.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32or1k_linux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppc.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppc_fbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppclinux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppcnto.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppcsim.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppcvxworks.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppcwindiss.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32rl78.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32rx.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32tilegx.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32tilegx_be.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32tilepro.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32vax.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32visium.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32xc16x.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32xc16xl.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32xc16xs.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32xstormy16.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32xtensa.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32z80.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_aix.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_ia64.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_ia64_fbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_ia64_vms.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_s390.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_sparc.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_sparc_fbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_sparc_sol2.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64alpha.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64alpha_fbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64alpha_nbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64bmip.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64bpf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64btsmip.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64btsmip_fbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64hppa.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64lppc.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64lriscv.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64lriscv_lp64.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64lriscv_lp64f.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64ltsmip.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64ltsmip_fbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64mmix.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64ppc.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64ppc_fbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64rdos.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64tilegx.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64tilegx_be.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_i386.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_i386_be.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_i386_fbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_i386_ldso.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_i386_nacl.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_i386_sol2.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_i386_vxworks.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_iamcu.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_k1om.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_k1om_fbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_l1om.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_l1om_fbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_s390.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_x86_64.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_x86_64_cloudabi.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_x86_64_fbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_x86_64_nacl.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_x86_64_sol2.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300elf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300elf_linux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300helf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300helf_linux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300hnelf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300self.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300self_linux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300snelf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300sxelf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300sxelf_linux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300sxnelf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ehppa64linux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ehppaelf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ehppalinux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ehppanbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ehppaobsd.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386aout.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386beos.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386bsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386go32.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386lynx.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386moss.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386msdos.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386nto.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386pe.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386pe_posix.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386pep.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em32relf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em32relf_linux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em32rlelf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em32rlelf_linux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em68hc11elf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em68hc11elfb.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em68hc12elf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em68hc12elfb.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em68kelf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em68kelfnbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em9s12zelf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emcorepe.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emmo.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emn10200.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emn10300.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emoxiebox.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emsp430X.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emsp430elf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ends32belf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ends32belf16m.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ends32belf_linux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ends32elf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ends32elf16m.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ends32elf_linux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/enios2elf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/enios2linux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ens32knbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epc532macha.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epdp11.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epjelf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epjlelf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eppclynx.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eppcmacos.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eppcpe.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epruelf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/escore3_elf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/escore7_elf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/esh.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshelf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshelf_fd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshelf_linux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshelf_nbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshelf_nto.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshelf_uclinux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshelf_vxworks.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshl.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshlelf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshlelf_fd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshlelf_linux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshlelf_nbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshlelf_nto.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshlelf_vxworks.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshpe.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/etic30aout.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/etic30coff.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/etic3xcoff.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/etic3xcoff_onchip.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/etic4xcoff.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/etic54xcoff.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ev850.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ev850_rh850.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/evanilla.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/evaxnbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exgateelf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ez80.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ez8001.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ez8002.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ldbuildid.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ldcref.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ldctor.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ldelf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ldelfgen.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ldemul.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ldexp.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ldfile.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ldgram.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ldlang.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ldlex-wrapper.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ldlex.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ldmain.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ldmisc.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ldver.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ldwrite.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lexsup.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libldtestplug2_la-testplug2.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libldtestplug3_la-testplug3.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libldtestplug4_la-testplug4.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libldtestplug_la-testplug.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mri.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pe-dll.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pep-dll.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/plugin.Po@am__quote@
 
 .c.o:
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
 @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<
 
 .c.obj:
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
 @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
 
 .c.lo:
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
 @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<
@@ -2246,311 +2248,312 @@ run-genscripts:
 $(ALL_EMULATION_SOURCES) $(ALL_64_EMULATION_SOURCES): $(GEN_DEPENDS)
 	base=`echo $@ | sed -e 's,e\(.*\).c,\1,'`; \
 	$(MAKE) run-genscripts "script_target=$$base" "script_tdirname=tdir_$$base"
 
 # It's a pity we can't generate these include "./deps/e*.Pc" lines
 # from ALL_EMULATION_SOURCES and ALL_64_EMULATION_SOURCES, but that isn't
 # so easy to do.  What we'd like to do is have automake generate these
 # lines in Makefile.in, but I can't see a way of doing that.  Generating
 # the includes at configure time is possible but then we'd need to
 # duplicate autoconf/automake handling of dependency files.
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaix5ppc.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaix5rs6.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaixppc.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaixrs6.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ealpha.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ealphavms.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earcv2elf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earcv2elfx.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earcelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earclinux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earclinux_nps.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earm_wince_pe.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_fuchsia.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_linux_eabi.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_linux_fdpiceabi.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_nacl.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_nbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_phoenix.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_vxworks.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_fuchsia.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_linux_eabi.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_linux_fdpiceabi.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_nacl.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_nbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmnto.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmpe.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmsymbian.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr1.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr2.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr25.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr3.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr31.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr35.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr4.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr5.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr51.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr6.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavrxmega1.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavrxmega2.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavrxmega3.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavrxmega4.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavrxmega5.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavrxmega6.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavrxmega7.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavrtiny.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ecrisaout.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ecriself.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ecrislinux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ecskyelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ecskyelf_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ed10velf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ed30v_e.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ed30v_o.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ed30velf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_dlx.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_sparc.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_sparc_sol2.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_sparc_vxworks.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_spu.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_tic6x_be.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_tic6x_le.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_tic6x_linux_be.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_tic6x_linux_le.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_tic6x_elf_be.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_tic6x_elf_le.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32am33lin.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32bfin.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32bfinfd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32cr16.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32crx.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32epiphany.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32epiphany_4x4.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32fr30.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32frv.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32frvfd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ft32.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ip2k.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32iq10.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32iq2000.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lm32.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lm32fd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lppc.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lppclinux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lppcnto.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lppcsim.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32m32c.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32mb_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32mbel_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32mcore.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32mep.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32metag.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32microblazeel.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32microblaze.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32moxie.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emoxiebox.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32mt.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32or1k.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32or1k_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppc.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppc_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppclinux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppcnto.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppcsim.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppcvxworks.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppcwindiss.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lriscv.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lriscv_ilp32f.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lriscv_ilp32.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32rl78.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32rx.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32tilegx.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32tilegx_be.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32tilepro.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32vax.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32visium.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32xc16x.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32xc16xl.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32xc16xs.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32xstormy16.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32xtensa.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32z80.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_i386.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_i386_be.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_i386_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_i386_ldso.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_i386_nacl.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_i386_sol2.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_i386_vxworks.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_iamcu.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_s390.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300elf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300elf_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300helf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300helf_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300hnelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300self.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300self_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300snelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300sxelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300sxelf_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eh8300sxnelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ehppaelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ehppalinux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ehppanbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ehppaobsd.Pc@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386aout.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386beos.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386bsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386go32.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386lynx.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386moss.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386msdos.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386nto.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386pe.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386pe_posix.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em32relf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em32relf_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em32rlelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em32rlelf_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em68hc11elf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em68hc11elfb.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em68hc12elf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em68hc12elfb.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em68kelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em68kelfnbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em9s12zelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emcorepe.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emn10200.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emn10300.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emsp430elf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emsp430X.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ends32elf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ends32elf16m.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ends32elf_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ends32belf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ends32belf16m.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ends32belf_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ens32knbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/enios2elf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/enios2linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epc532macha.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epdp11.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epjelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epjlelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eppclynx.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eppcmacos.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eppcpe.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epruelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/escore3_elf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/escore7_elf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/esh.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshelf_fd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshelf_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshelf_nbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshelf_nto.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshelf_uclinux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshelf_vxworks.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshl.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshlelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshlelf_fd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshlelf_linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshlelf_nbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshlelf_nto.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshlelf_vxworks.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eshpe.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/etic30aout.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/etic30coff.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/etic3xcoff.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/etic3xcoff_onchip.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/etic4xcoff.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/etic54xcoff.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ev850.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ev850_rh850.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/evanilla.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/evaxnbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exgateelf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ez80.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ez8001.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ez8002.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64elf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64elf32.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64elfb.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64elf32b.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64cloudabi.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64cloudabib.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64fbsdb.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64linuxb.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64linux32.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64linux32b.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_x86_64.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32_x86_64_nacl.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32b4300.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32bmip.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32bmipn32.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32bsmip.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32btsmip.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32btsmip_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32btsmipn32.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32btsmipn32_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ebmip.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ebmipvxworks.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32elmip.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32elmipvxworks.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32l4300.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lmip.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lr5900.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lr5900n32.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lsmip.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ltsmip.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ltsmip_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ltsmipn32.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ltsmipn32_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32mipswindiss.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_aix.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64bpf.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_ia64.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_ia64_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_ia64_vms.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_s390.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_sparc.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_sparc_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_sparc_sol2.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64alpha.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64alpha_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64alpha_nbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64bmip.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64btsmip.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64btsmip_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64hppa.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64lppc.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64lriscv.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64lriscv_lp64f.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64lriscv_lp64.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64ltsmip.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64ltsmip_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64mmix.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64ppc.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64ppc_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64rdos.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64tilegx.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64tilegx_be.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_l1om.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_l1om_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_k1om.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_k1om_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_x86_64.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_x86_64_cloudabi.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_x86_64_fbsd.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_x86_64_nacl.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf_x86_64_sol2.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ehppa64linux.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ei386pep.Pc@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emmo.Pc@am__quote@
diff --git a/ld/po/BLD-POTFILES.in b/ld/po/BLD-POTFILES.in
index 3157480c6f7..70f5ea9fa4b 100644
--- a/ld/po/BLD-POTFILES.in
+++ b/ld/po/BLD-POTFILES.in
@@ -222,6 +222,7 @@ ehppaelf.c
 ehppalinux.c
 ehppanbsd.c
 ehppaobsd.c
+ei386aout.c
 ei386beos.c
 ei386bsd.c
 ei386go32.c
