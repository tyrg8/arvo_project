commit 6c8cdebe8751ce2077ce6c1d5e0936434d9fd89c
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Dec 26 10:52:21 2022 -0800

    epan: Add a bounds check to get_utf_8_string
    
    Check our current buffer position as well as our length.
    Fixes #18758.

diff --git a/epan/charsets.c b/epan/charsets.c
index 69bd870ac6..5b5c3b3dfa 100644
--- a/epan/charsets.c
+++ b/epan/charsets.c
@@ -251,32 +251,31 @@ guint8 *
 get_utf_8_string(wmem_allocator_t *scope, const guint8 *ptr, gint length)
 {
     wmem_strbuf_t *str;
-    const guint8 *prev = ptr;
-    size_t valid_bytes = 0;
 
     str = wmem_strbuf_new_sized(scope, length+1);
 
     /* See the Unicode Standard conformance chapter at
      * https://www.unicode.org/versions/Unicode15.0.0/ch03.pdf especially
      * Table 3-7 "Well-Formed UTF-8 Byte Sequences" and
      * U+FFFD Substitution of Maximal Subparts. */
 
     while (length > 0) {
+        const guint8 *prev = ptr;
+        size_t valid_bytes = utf_8_validate(prev, length, &ptr);
 
-        prev = ptr;
-        valid_bytes = utf_8_validate(prev, length, &ptr);
         if (valid_bytes) {
             wmem_strbuf_append_len(str, prev, valid_bytes);
         }
-        length -= (gint)valid_bytes;
-        if (length) {
+        length -= (gint)(ptr - prev);
+        prev += valid_bytes;
+        if (ptr - prev) {
             wmem_strbuf_append_unichar_repl(str);
         }
     }
 
     return (guint8 *) wmem_strbuf_finalize(str);
 }
 
 /*
  * ISO 646 "Basic code table".
  */
