commit 990779c4bf935d2741ef6514f4d070231c388d05
Author: Frank Tang <ftang@chromium.org>
Date:   Mon Sep 18 17:33:04 2023 -0700

    ICU-22509 Limit the dateStyle and timeStyle in fuzzer to only valid enum

diff --git a/icu4c/source/test/fuzzer/date_format_fuzzer.cpp b/icu4c/source/test/fuzzer/date_format_fuzzer.cpp
index 4578e82f7a3..fa9fbd0edce 100644
--- a/icu4c/source/test/fuzzer/date_format_fuzzer.cpp
+++ b/icu4c/source/test/fuzzer/date_format_fuzzer.cpp
@@ -12,41 +12,61 @@
 
 extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
     uint16_t rnd;
+    uint8_t rnd2;
     UDate date;
-    icu::DateFormat::EStyle dateStyle;
-    icu::DateFormat::EStyle timeStyle;
-    if (size < sizeof(rnd) + sizeof(date) + sizeof(dateStyle) + sizeof(timeStyle)) return 0;
+    icu::DateFormat::EStyle styles[] = {
+        icu::DateFormat::EStyle::kNone,
+        icu::DateFormat::EStyle::kFull,
+        icu::DateFormat::EStyle::kLong,
+        icu::DateFormat::EStyle::kMedium,
+        icu::DateFormat::EStyle::kShort,
+        icu::DateFormat::EStyle::kDateOffset,
+        icu::DateFormat::EStyle::kDateTime,
+        icu::DateFormat::EStyle::kDateTimeOffset,
+        icu::DateFormat::EStyle::kRelative,
+        icu::DateFormat::EStyle::kFullRelative,
+        icu::DateFormat::EStyle::kLongRelative,
+        icu::DateFormat::EStyle::kMediumRelative,
+        icu::DateFormat::EStyle::kShortRelative,
+    };
+    int32_t numStyles = sizeof(styles) / sizeof(icu::DateFormat::EStyle);
+
+    if (size < sizeof(rnd) + sizeof(date) + 2*sizeof(rnd2)) return 0;
     icu::StringPiece fuzzData(reinterpret_cast<const char *>(data), size);
 
     std::memcpy(&rnd, fuzzData.data(), sizeof(rnd));
     fuzzData.remove_prefix(sizeof(rnd));
     icu::Locale locale = GetRandomLocale(rnd);
 
-    std::memcpy(&dateStyle, fuzzData.data(), sizeof(dateStyle));
-    fuzzData.remove_prefix(sizeof(dateStyle));
-    std::memcpy(&timeStyle, fuzzData.data(), sizeof(timeStyle));
-    fuzzData.remove_prefix(sizeof(timeStyle));
+    std::memcpy(&rnd2, fuzzData.data(), sizeof(rnd2));
+    icu::DateFormat::EStyle dateStyle = styles[rnd2 % numStyles];
+    fuzzData.remove_prefix(sizeof(rnd2));
+
+    std::memcpy(&rnd2, fuzzData.data(), sizeof(rnd2));
+    icu::DateFormat::EStyle timeStyle = styles[rnd2 % numStyles];
+    fuzzData.remove_prefix(sizeof(rnd2));
+
     std::memcpy(&date, fuzzData.data(), sizeof(date));
     fuzzData.remove_prefix(sizeof(date));
 
     std::unique_ptr<icu::DateFormat> df(
         icu::DateFormat::createDateTimeInstance(dateStyle, timeStyle, locale));
     icu::UnicodeString appendTo;
     df->format(date, appendTo);
     icu::UnicodeString skeleton = icu::UnicodeString::fromUTF8(fuzzData);
 
     UErrorCode status = U_ZERO_ERROR;
     appendTo.remove();
     df.reset(icu::DateFormat::createInstanceForSkeleton(skeleton, status));
     if (U_SUCCESS(status)) {
         df->format(date, appendTo);
     }
 
     status = U_ZERO_ERROR;
     appendTo.remove();
     df.reset(icu::DateFormat::createInstanceForSkeleton(skeleton, locale, status));
     if (U_SUCCESS(status)) {
         df->format(date, appendTo);
     }
     return EXIT_SUCCESS;
 }
