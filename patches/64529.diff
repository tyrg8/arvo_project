commit c7e91db654127765a2d2238752ce76a836b55e02
Author: pancake <pancake@nopcode.org>
Date:   Mon Nov 27 10:49:55 2023 +0100

    Fix OOBwrite introduced last week in the mach0 class parsing logic

diff --git a/libr/bin/format/objc/mach0_classes.c b/libr/bin/format/objc/mach0_classes.c
index a71e2a24f0..917dfcc83f 100644
--- a/libr/bin/format/objc/mach0_classes.c
+++ b/libr/bin/format/objc/mach0_classes.c
@@ -619,78 +619,85 @@ error:
 ///////////////////////////////////////////////////////////////////////////////
 static void iterate_list_of_lists(RBinFile *bf, OnList cb, void * ctx, mach0_ut p) {
 	if (!bf || !bf->bo || !bf->bo->bin_obj || !bf->bo->info) {
 		R_LOG_WARN ("incorrect RBinFile pointer");
 		return;
 	}
 
 	bool bigendian = bf->bo->info->big_endian;
 	ut32 offset, left;
 	mach0_ut r = va2pa (p, &offset, &left, bf);
 	if (!r) {
 		return;
 	}
 
-	ut32 entsize, count;
+	ut32 count;
 	ut8 tmp[sizeof (ut32) * 2];
 
 	if (r + left < r || r + sizeof (tmp) < r) {
 		return;
 	}
 	if (r > bf->size) {
 		return;
 	}
 	if (r + sizeof (tmp) > bf->size) {
 		return;
 	}
 	if (left < sizeof (tmp)) {
 		return;
 	}
 
 	if (r_buf_read_at (bf->buf, r, tmp, sizeof (tmp)) != sizeof (tmp)) {
 		return;
 	}
 
-	entsize = r_read_ble (&tmp[0], bigendian, 32);
+	ut32 entsize = r_read_ble (&tmp[0], bigendian, 32);
 	count = r_read_ble (&tmp[4], bigendian, 32);
 	if (count < 1 || count > ST32_MAX) {
 		return;
 	}
 	if (r + count * entsize > bf->size) {
 		return;
 	}
 
 	p += sizeof (tmp);
 
 	int i;
 	for (i = 0; i < count; i++) {
 		r = va2pa (p, &offset, &left, bf);
 		if (!r || r == -1) {
 			return;
 		}
 
 		ListOfListsEntry entry;
 		memset (&entry, '\0', sizeof (entry));
 		if (r + left < r || r + entsize < r) {
 			break;
 		}
 		if (r > bf->size) {
 			break;
 		}
 		if (r + entsize > bf->size) {
 			break;
 		}
 		if (left < entsize) {
 			break;
 		}
-		if (r_buf_read_at (bf->buf, r, (ut8*)&entry, entsize) != entsize) {
+		size_t mines = R_MIN (entsize, sizeof (entry));
+		if (entsize < sizeof (entry)) {
+			R_LOG_WARN ("wrong lole size, breaking, not enough to read");
+			break;
+		} else if (entsize != sizeof (entry)) {
+			R_LOG_WARN ("wrong lole size. fuzzed blob?");
+		}
+		if (r_buf_read_at (bf->buf, r, (ut8*)&entry, mines) != mines) {
 			break;
 		}
 
 		mach0_ut list_address = p + entry.list_offset;
 		cb (list_address, ctx);
 
 		p += entsize;
 	}
 }
 
 // TODO: remove class_name, because it's already in klass->name
