commit d165c2a37f7d072cc88db88ec97f057a9ac6e4aa
Merge: c7cbef52c d62b7454c
Author: Dmitry Baryshkov <dbaryshkov@gmail.com>
Date:   Tue Sep 18 12:02:24 2018 +0000

    Merge branch 'fix-gost-docs' into 'master'
    
    gnutls.h: correct GOST R number references
    
    See merge request gnutls/gnutls!750

diff --git a/lib/includes/gnutls/gnutls.h.in b/lib/includes/gnutls/gnutls.h.in
index 4d138b844..2ee3e4fc8 100644
--- a/lib/includes/gnutls/gnutls.h.in
+++ b/lib/includes/gnutls/gnutls.h.in
@@ -232,93 +232,93 @@ typedef enum {
 /**
  * gnutls_credentials_type_t:
  * @GNUTLS_CRD_CERTIFICATE: Certificate credential.
  * @GNUTLS_CRD_ANON: Anonymous credential.
  * @GNUTLS_CRD_SRP: SRP credential.
  * @GNUTLS_CRD_PSK: PSK credential.
  * @GNUTLS_CRD_IA: IA credential.
  *
  * Enumeration of different credential types.
  */
 typedef enum {
 	GNUTLS_CRD_CERTIFICATE = 1,
 	GNUTLS_CRD_ANON,
 	GNUTLS_CRD_SRP,
 	GNUTLS_CRD_PSK,
 	GNUTLS_CRD_IA
 } gnutls_credentials_type_t;
 
 #define GNUTLS_MAC_SHA GNUTLS_MAC_SHA1
 #define GNUTLS_DIG_SHA GNUTLS_DIG_SHA1
 
 /**
  * gnutls_mac_algorithm_t:
  * @GNUTLS_MAC_UNKNOWN: Unknown MAC algorithm.
  * @GNUTLS_MAC_NULL: NULL MAC algorithm (empty output).
  * @GNUTLS_MAC_MD5: HMAC-MD5 algorithm.
  * @GNUTLS_MAC_SHA1: HMAC-SHA-1 algorithm.
  * @GNUTLS_MAC_RMD160: HMAC-RMD160 algorithm.
  * @GNUTLS_MAC_MD2: HMAC-MD2 algorithm.
  * @GNUTLS_MAC_SHA256: HMAC-SHA-256 algorithm.
  * @GNUTLS_MAC_SHA384: HMAC-SHA-384 algorithm.
  * @GNUTLS_MAC_SHA512: HMAC-SHA-512 algorithm.
  * @GNUTLS_MAC_SHA224: HMAC-SHA-224 algorithm.
  * @GNUTLS_MAC_MD5_SHA1: Combined MD5+SHA1 MAC placeholder.
- * @GNUTLS_MAC_GOSTR_94: HMAC GOST R 34.10-94 algorithm.
- * @GNUTLS_MAC_STREEBOG_256: HMAC GOST R 34.10-2001 (Streebog) algorithm, 256 bit.
- * @GNUTLS_MAC_STREEBOG_512: HMAC GOST R 34.10-2001 (Streebog) algorithm, 512 bit.
+ * @GNUTLS_MAC_GOSTR_94: HMAC GOST R 34.11-94 algorithm.
+ * @GNUTLS_MAC_STREEBOG_256: HMAC GOST R 34.11-2001 (Streebog) algorithm, 256 bit.
+ * @GNUTLS_MAC_STREEBOG_512: HMAC GOST R 34.11-2001 (Streebog) algorithm, 512 bit.
  * @GNUTLS_MAC_AEAD: MAC implicit through AEAD cipher.
  * @GNUTLS_MAC_UMAC_96: The UMAC-96 MAC algorithm.
  * @GNUTLS_MAC_UMAC_128: The UMAC-128 MAC algorithm.
  *
  * Enumeration of different Message Authentication Code (MAC)
  * algorithms.
  */
 typedef enum {
 	GNUTLS_MAC_UNKNOWN = 0,
 	GNUTLS_MAC_NULL = 1,
 	GNUTLS_MAC_MD5 = 2,
 	GNUTLS_MAC_SHA1 = 3,
 	GNUTLS_MAC_RMD160 = 4,
 	GNUTLS_MAC_MD2 = 5,
 	GNUTLS_MAC_SHA256 = 6,
 	GNUTLS_MAC_SHA384 = 7,
 	GNUTLS_MAC_SHA512 = 8,
 	GNUTLS_MAC_SHA224 = 9,
 	GNUTLS_MAC_SHA3_224 = 10, /* reserved: no implementation */
 	GNUTLS_MAC_SHA3_256 = 11, /* reserved: no implementation */
 	GNUTLS_MAC_SHA3_384 = 12, /* reserved: no implementation */
 	GNUTLS_MAC_SHA3_512 = 13, /* reserved: no implementation */
 	GNUTLS_MAC_MD5_SHA1 = 14, /* reserved: no implementation */
 	GNUTLS_MAC_GOSTR_94 = 15,
 	GNUTLS_MAC_STREEBOG_256 = 16,
 	GNUTLS_MAC_STREEBOG_512 = 17,
 	/* If you add anything here, make sure you align with
 	   gnutls_digest_algorithm_t. */
 	GNUTLS_MAC_AEAD = 200,	/* indicates that MAC is on the cipher */
 	GNUTLS_MAC_UMAC_96 = 201,
 	GNUTLS_MAC_UMAC_128 = 202,
 } gnutls_mac_algorithm_t;
 
 /**
  * gnutls_digest_algorithm_t:
  * @GNUTLS_DIG_UNKNOWN: Unknown hash algorithm.
  * @GNUTLS_DIG_NULL: NULL hash algorithm (empty output).
  * @GNUTLS_DIG_MD5: MD5 algorithm.
  * @GNUTLS_DIG_SHA1: SHA-1 algorithm.
  * @GNUTLS_DIG_RMD160: RMD160 algorithm.
  * @GNUTLS_DIG_MD2: MD2 algorithm.
  * @GNUTLS_DIG_SHA256: SHA-256 algorithm.
  * @GNUTLS_DIG_SHA384: SHA-384 algorithm.
  * @GNUTLS_DIG_SHA512: SHA-512 algorithm.
  * @GNUTLS_DIG_SHA224: SHA-224 algorithm.
  * @GNUTLS_DIG_SHA3_224: SHA3-224 algorithm.
  * @GNUTLS_DIG_SHA3_256: SHA3-256 algorithm.
  * @GNUTLS_DIG_SHA3_384: SHA3-384 algorithm.
  * @GNUTLS_DIG_SHA3_512: SHA3-512 algorithm.
  * @GNUTLS_DIG_MD5_SHA1: Combined MD5+SHA1 algorithm.
- * @GNUTLS_DIG_GOSTR_94: GOST R 34.10-94 algorithm.
- * @GNUTLS_DIG_STREEBOG_256: GOST R 34.10-2001 (Streebog) algorithm, 256 bit.
- * @GNUTLS_DIG_STREEBOG_512: GOST R 34.10-2001 (Streebog) algorithm, 512 bit.
+ * @GNUTLS_DIG_GOSTR_94: GOST R 34.11-94 algorithm.
+ * @GNUTLS_DIG_STREEBOG_256: GOST R 34.11-2001 (Streebog) algorithm, 256 bit.
+ * @GNUTLS_DIG_STREEBOG_512: GOST R 34.11-2001 (Streebog) algorithm, 512 bit.
  *
  * Enumeration of different digest (hash) algorithms.
  */
@@ -802,63 +802,63 @@ typedef enum {
 const char *gnutls_pk_algorithm_get_name(gnutls_pk_algorithm_t algorithm);
 
 /**
  * gnutls_sign_algorithm_t:
  * @GNUTLS_SIGN_UNKNOWN: Unknown signature algorithm.
  * @GNUTLS_SIGN_RSA_RAW: Digital signature algorithm RSA with DigestInfo formatted data
  * @GNUTLS_SIGN_RSA_SHA1: Digital signature algorithm RSA with SHA-1
  * @GNUTLS_SIGN_RSA_SHA: Same as %GNUTLS_SIGN_RSA_SHA1.
  * @GNUTLS_SIGN_DSA_SHA1: Digital signature algorithm DSA with SHA-1
  * @GNUTLS_SIGN_DSA_SHA224: Digital signature algorithm DSA with SHA-224
  * @GNUTLS_SIGN_DSA_SHA256: Digital signature algorithm DSA with SHA-256
  * @GNUTLS_SIGN_DSA_SHA384: Digital signature algorithm DSA with SHA-384
  * @GNUTLS_SIGN_DSA_SHA512: Digital signature algorithm DSA with SHA-512
  * @GNUTLS_SIGN_DSA_SHA: Same as %GNUTLS_SIGN_DSA_SHA1.
  * @GNUTLS_SIGN_RSA_MD5: Digital signature algorithm RSA with MD5.
  * @GNUTLS_SIGN_RSA_MD2: Digital signature algorithm RSA with MD2.
  * @GNUTLS_SIGN_RSA_RMD160: Digital signature algorithm RSA with RMD-160.
  * @GNUTLS_SIGN_RSA_SHA256: Digital signature algorithm RSA with SHA-256.
  * @GNUTLS_SIGN_RSA_SHA384: Digital signature algorithm RSA with SHA-384.
  * @GNUTLS_SIGN_RSA_SHA512: Digital signature algorithm RSA with SHA-512.
  * @GNUTLS_SIGN_RSA_SHA224: Digital signature algorithm RSA with SHA-224.
  * @GNUTLS_SIGN_ECDSA_SHA1: ECDSA with SHA1.
  * @GNUTLS_SIGN_ECDSA_SHA224: Digital signature algorithm ECDSA with SHA-224.
  * @GNUTLS_SIGN_ECDSA_SHA256: Digital signature algorithm ECDSA with SHA-256.
  * @GNUTLS_SIGN_ECDSA_SHA384: Digital signature algorithm ECDSA with SHA-384.
  * @GNUTLS_SIGN_ECDSA_SHA512: Digital signature algorithm ECDSA with SHA-512.
  * @GNUTLS_SIGN_ECDSA_SECP256R1_SHA256: Digital signature algorithm ECDSA-SECP256R1 with SHA-256 (used in TLS 1.3 but not PKIX).
  * @GNUTLS_SIGN_ECDSA_SECP384R1_SHA384: Digital signature algorithm ECDSA-SECP384R1 with SHA-384 (used in TLS 1.3 but not PKIX).
  * @GNUTLS_SIGN_ECDSA_SECP521R1_SHA512: Digital signature algorithm ECDSA-SECP521R1 with SHA-512 (used in TLS 1.3 but not PKIX).
  * @GNUTLS_SIGN_ECDSA_SHA3_224: Digital signature algorithm ECDSA with SHA3-224.
  * @GNUTLS_SIGN_ECDSA_SHA3_256: Digital signature algorithm ECDSA with SHA3-256.
  * @GNUTLS_SIGN_ECDSA_SHA3_384: Digital signature algorithm ECDSA with SHA3-384.
  * @GNUTLS_SIGN_ECDSA_SHA3_512: Digital signature algorithm ECDSA with SHA3-512.
  * @GNUTLS_SIGN_DSA_SHA3_224: Digital signature algorithm DSA with SHA3-224.
  * @GNUTLS_SIGN_DSA_SHA3_256: Digital signature algorithm DSA with SHA3-256.
  * @GNUTLS_SIGN_DSA_SHA3_384: Digital signature algorithm DSA with SHA3-384.
  * @GNUTLS_SIGN_DSA_SHA3_512: Digital signature algorithm DSA with SHA3-512.
  * @GNUTLS_SIGN_RSA_SHA3_224: Digital signature algorithm RSA with SHA3-224.
  * @GNUTLS_SIGN_RSA_SHA3_256: Digital signature algorithm RSA with SHA3-256.
  * @GNUTLS_SIGN_RSA_SHA3_384: Digital signature algorithm RSA with SHA3-384.
  * @GNUTLS_SIGN_RSA_SHA3_512: Digital signature algorithm RSA with SHA3-512.
  * @GNUTLS_SIGN_RSA_PSS_RSAE_SHA256: Digital signature algorithm RSA with SHA-256,
  *      with PSS padding (RSA PKCS#1 1.5 certificate). This signature is identical
  *      to #GNUTLS_SIGN_RSA_PSS_SHA256, but they are distinct as the TLS1.3 protocol
  *      treats them differently.
  * @GNUTLS_SIGN_RSA_PSS_RSAE_SHA384: Digital signature algorithm RSA with SHA-384,
  *      with PSS padding (RSA PKCS#1 1.5 certificate). This signature is identical
  *      to #GNUTLS_SIGN_RSA_PSS_SHA384, but they are distinct as the TLS1.3 protocol
  *      treats them differently.
  * @GNUTLS_SIGN_RSA_PSS_RSAE_SHA512: Digital signature algorithm RSA with SHA-512,
  *      with PSS padding (RSA PKCS#1 1.5 certificate). This signature is identical
  *      to #GNUTLS_SIGN_RSA_PSS_SHA512, but they are distinct as the TLS1.3 protocol
  *      treats them differently.
  * @GNUTLS_SIGN_RSA_PSS_SHA256: Digital signature algorithm RSA with SHA-256, with PSS padding (RSA-PSS certificate).
  * @GNUTLS_SIGN_RSA_PSS_SHA384: Digital signature algorithm RSA with SHA-384, with PSS padding (RSA-PSS certificate).
  * @GNUTLS_SIGN_RSA_PSS_SHA512: Digital signature algorithm RSA with SHA-512, with PSS padding (RSA-PSS certificate).
  * @GNUTLS_SIGN_EDDSA_ED25519: Digital signature algorithm EdDSA with Ed25519 curve.
  * @GNUTLS_SIGN_GOST_94: Digital signature algorithm GOST R 34.10-2001 with GOST R 34.11-94
- * @GNUTLS_SIGN_GOST_256: Digital signature algorithm GOST R 34.10-2001 with GOST R 34.11-2012 256 bit
- * @GNUTLS_SIGN_GOST_512: Digital signature algorithm GOST R 34.10-2001 with GOST R 34.11-2012 512 bit
+ * @GNUTLS_SIGN_GOST_256: Digital signature algorithm GOST R 34.10-2012 with GOST R 34.11-2012 256 bit
+ * @GNUTLS_SIGN_GOST_512: Digital signature algorithm GOST R 34.10-2012 with GOST R 34.11-2012 512 bit
  *
  * Enumeration of different digital signature algorithms.
  */
