commit dc67c64d6d61f5fa9b065c03cabd237d67158802
Author: Michael Vrhel <michael.vrhel@artifex.com>
Date:   Mon Mar 21 12:42:54 2022 -0700

    Bug 705090 oss-fuzz #45892  Bug 705092 oss-fuzz #45823
    
    If begin transparency group returns an error, do not set the
    GroupPushed state variable to true.  Otherwise we will end
    up doing an unmatched end group command later, leading to
    the seg fault.

diff --git a/pdf/pdf_trans.c b/pdf/pdf_trans.c
index 0fa750b4d..df0194d73 100644
--- a/pdf/pdf_trans.c
+++ b/pdf/pdf_trans.c
@@ -697,77 +697,81 @@ bool pdfi_trans_okOPcs(pdf_context *ctx)
 int pdfi_trans_setup(pdf_context *ctx, pdfi_trans_state_t *state, gs_rect *bbox,
                            pdfi_transparency_caller_t caller)
 {
     pdfi_int_gstate *igs = (pdfi_int_gstate *)ctx->pgs->client_data;
     int code;
     bool stroked_bbox;
     bool current_overprint;
     bool okOPcs = false;
     bool ChangeBM = false;
     gs_blend_mode_t mode;
     bool need_group = false;
 
     memset(state, 0, sizeof(*state));
 
     if (!ctx->page.has_transparency)
         return 0;
 
     if (ctx->page.needs_OP) {
         okOPcs = pdfi_trans_okOPcs(ctx);
         if (okOPcs) {
             if (caller == TRANSPARENCY_Caller_Stroke)
                 current_overprint = gs_currentstrokeoverprint(ctx->pgs);
             else {
                 current_overprint = gs_currentfilloverprint(ctx->pgs);
                 if (caller == TRANSPARENCY_Caller_FillStroke)
                     current_overprint |= gs_currentstrokeoverprint(ctx->pgs);
             }
             ChangeBM = current_overprint;
             mode = gs_currentblendmode(ctx->pgs);
             if (mode != BLEND_MODE_Normal && mode != BLEND_MODE_Compatible)
                 need_group = ChangeBM;
             else
                 need_group = false;
         } else {
             need_group = false;
         }
         need_group = need_group || (igs->SMask != NULL);
     } else {
         if (caller == TRANSPARENCY_Caller_Image || igs->SMask == NULL)
             need_group = false;
         else
             need_group = true;
     }
 
     code = pdfi_trans_set_params(ctx);
     if (code != 0)
         return 0;
 
     if (!need_group && !ChangeBM)
         return 0;
 
     /* TODO: error handling... */
     if (need_group) {
         bool isolated = false;
         mode = gs_currentblendmode(ctx->pgs);
 
         stroked_bbox = (caller == TRANSPARENCY_Caller_Stroke || caller == TRANSPARENCY_Caller_FillStroke);
 
         /* When changing to compatible overprint bm, the group pushed must be non-isolated. The exception
            is if we have a softmask AND the blend mode is not normal and not compatible.
            See /setupOPtrans in pdf_ops.ps  */
         if (igs->SMask != NULL && mode != BLEND_MODE_Normal && mode != BLEND_MODE_Compatible)
             isolated = true;
         code = pdfi_trans_begin_simple_group(ctx, bbox, stroked_bbox, isolated, false);
-        state->GroupPushed = true;
+
+        /* Group was not pushed if error */
+        if (code >= 0)
+            state->GroupPushed = true;
+
         state->saveStrokeAlpha = gs_getstrokeconstantalpha(ctx->pgs);
         state->saveFillAlpha = gs_getfillconstantalpha(ctx->pgs);
         code = gs_setfillconstantalpha(ctx->pgs, 1.0);
         code = gs_setstrokeconstantalpha(ctx->pgs, 1.0);
     }
     if (ChangeBM) {
         state->saveBM = mode;
         state->ChangeBM = true;
         code = gs_setblendmode(ctx->pgs, BLEND_MODE_CompatibleOverprint);
     }
     return code;
 }
