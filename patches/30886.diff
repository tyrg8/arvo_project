commit 94fb86f89b131814201596d301f584dfe4547526
Author: Yukihiro "Matz" Matsumoto <matz@ruby.or.jp>
Date:   Sat Feb 13 14:06:37 2021 +0900

    parse.y: string buffer (`tokbuf`) can overflow.
    
    Check if `esclen` is smaller than `len` (original string length).

diff --git a/mrbgems/mruby-compiler/core/parse.y b/mrbgems/mruby-compiler/core/parse.y
index 1a97b3ec6..56b9bb38a 100644
--- a/mrbgems/mruby-compiler/core/parse.y
+++ b/mrbgems/mruby-compiler/core/parse.y
@@ -4664,45 +4664,46 @@ static void
 heredoc_remove_indent(parser_state *p, parser_heredoc_info *hinf)
 {
   if (!hinf->remove_indent || hinf->indent == 0)
     return;
   node *indented, *n, *pair, *escaped, *nspaces;
   const char *str;
   size_t len, spaces, offset, start, end;
   indented = hinf->indented;
   while (indented) {
     n = indented->car;
     pair = n->car;
     str = (char*)pair->car;
     len = (size_t)pair->cdr;
     escaped = n->cdr->car;
     nspaces = n->cdr->cdr;
     if (escaped) {
       char *newstr = strndup(str, len);
       size_t newlen = 0;
       start = 0;
       while (start < len) {
         end = escaped ? (size_t)escaped->car : len;
+        if (end > len) end = len;
         spaces = (size_t)nspaces->car;
         size_t esclen = end - start;
         heredoc_count_indent(hinf, str + start, esclen, spaces, &offset);
         esclen -= offset;
         memcpy(newstr + newlen, str + start + offset, esclen);
         newlen += esclen;
         start = end;
         if (escaped)
           escaped = escaped->cdr;
         nspaces = nspaces->cdr;
       }
       if (newlen < len)
         newstr[newlen] = '\0';
       pair->car = (node*)newstr;
       pair->cdr = (node*)newlen;
     } else {
       spaces = (size_t)nspaces->car;
       heredoc_count_indent(hinf, str, len, spaces, &offset);
       pair->car = (node*)(str + offset);
       pair->cdr = (node*)(len - offset);
     }
     indented = indented->cdr;
   }
 }
diff --git a/mrbgems/mruby-compiler/core/y.tab.c b/mrbgems/mruby-compiler/core/y.tab.c
index 6c7940a7b..0ba1c8d7f 100644
--- a/mrbgems/mruby-compiler/core/y.tab.c
+++ b/mrbgems/mruby-compiler/core/y.tab.c
@@ -10700,45 +10700,46 @@ static void
 heredoc_remove_indent(parser_state *p, parser_heredoc_info *hinf)
 {
   if (!hinf->remove_indent || hinf->indent == 0)
     return;
   node *indented, *n, *pair, *escaped, *nspaces;
   const char *str;
   size_t len, spaces, offset, start, end;
   indented = hinf->indented;
   while (indented) {
     n = indented->car;
     pair = n->car;
     str = (char*)pair->car;
     len = (size_t)pair->cdr;
     escaped = n->cdr->car;
     nspaces = n->cdr->cdr;
     if (escaped) {
       char *newstr = strndup(str, len);
       size_t newlen = 0;
       start = 0;
       while (start < len) {
         end = escaped ? (size_t)escaped->car : len;
+        if (end > len) end = len;
         spaces = (size_t)nspaces->car;
         size_t esclen = end - start;
         heredoc_count_indent(hinf, str + start, esclen, spaces, &offset);
         esclen -= offset;
         memcpy(newstr + newlen, str + start + offset, esclen);
         newlen += esclen;
         start = end;
         if (escaped)
           escaped = escaped->cdr;
         nspaces = nspaces->cdr;
       }
       if (newlen < len)
         newstr[newlen] = '\0';
       pair->car = (node*)newstr;
       pair->cdr = (node*)newlen;
     } else {
       spaces = (size_t)nspaces->car;
       heredoc_count_indent(hinf, str, len, spaces, &offset);
       pair->car = (node*)(str + offset);
       pair->cdr = (node*)(len - offset);
     }
     indented = indented->cdr;
   }
 }
