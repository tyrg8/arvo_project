commit b8b5d4094f4c1a34ca58d1acbaab2650df7fb228
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Wed Nov 3 14:06:38 2021 +0000

    build(deps): bump actions/checkout from 2.3.5 to 2.4.0
    
    Bumps [actions/checkout](https://github.com/actions/checkout) from 2.3.5 to 2.4.0.
    - [Release notes](https://github.com/actions/checkout/releases)
    - [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)
    - [Commits](https://github.com/actions/checkout/compare/v2.3.5...v2.4.0)
    
    ---
    updated-dependencies:
    - dependency-name: actions/checkout
      dependency-type: direct:production
      update-type: version-update:semver-minor
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

diff --git a/.github/workflows/build.yml b/.github/workflows/build.yml
index 00141695a..07a24d994 100644
--- a/.github/workflows/build.yml
+++ b/.github/workflows/build.yml
@@ -5,151 +5,151 @@ on: [push, pull_request]
 jobs:
   Ubuntu-1804-gcc:
     runs-on: ubuntu-18.04
     timeout-minutes: 10
     env:
       MRUBY_CONFIG: ci/gcc-clang
       CC: gcc
     steps:
-      - uses: actions/checkout@v2.3.5
+      - uses: actions/checkout@v2.4.0
       - name: Ruby version
         run: ruby -v
       - name: Compiler version
         run: ${{ env.CC }} --version
       - name: Build and test
         run: rake -m test:build && rake test:run
 
   Ubuntu-1804-clang:
     runs-on: ubuntu-18.04
     timeout-minutes: 10
     env:
       MRUBY_CONFIG: ci/gcc-clang
       CC: clang
     steps:
-      - uses: actions/checkout@v2.3.5
+      - uses: actions/checkout@v2.4.0
       - name: Ruby version
         run: ruby -v
       - name: Compiler version
         run: ${{ env.CC }} --version
       - name: Build and test
         run: rake -m test:build && rake test:run
 
   Ubuntu-2004-gcc:
     runs-on: ubuntu-20.04
     timeout-minutes: 10
     env:
       MRUBY_CONFIG: ci/gcc-clang
       CC: gcc
     steps:
-      - uses: actions/checkout@v2.3.5
+      - uses: actions/checkout@v2.4.0
       - name: Ruby version
         run: ruby -v
       - name: Compiler version
         run: ${{ env.CC }} --version
       - name: Build and test
         run: rake -m test:build && rake test:run
 
   Ubuntu-2004-clang:
     runs-on: ubuntu-20.04
     timeout-minutes: 10
     env:
       MRUBY_CONFIG: ci/gcc-clang
       CC: clang
     steps:
-      - uses: actions/checkout@v2.3.5
+      - uses: actions/checkout@v2.4.0
       - name: Ruby version
         run: ruby -v
       - name: Compiler version
         run: ${{ env.CC }} --version
       - name: Build and test
         run: rake -m test:build && rake test:run
 
   macOS:
     runs-on: macos-latest
     timeout-minutes: 10
     env:
       MRUBY_CONFIG: ci/gcc-clang
       CC: clang
     steps:
-      - uses: actions/checkout@v2.3.5
+      - uses: actions/checkout@v2.4.0
       - name: Ruby version
         run: ruby -v
       - name: Compiler version
         run: ${{ env.CC }} --version
       - name: Build and test
         run: rake -m test:build && rake test:run
 
   Windows-MinGW:
     runs-on: windows-latest
     timeout-minutes: 10
     env:
       MRUBY_CONFIG: ci/gcc-clang
       CC: gcc
     steps:
-      - uses: actions/checkout@v2.3.5
+      - uses: actions/checkout@v2.4.0
       - name: Ruby version
         run: ruby -v
       - name: Compiler version
         run: ${{ env.CC }} --version
       - name: Build and test
         run: rake -m test:build && rake test:run
 
   Windows-Cygwin:
     runs-on: windows-latest
     timeout-minutes: 10
     env:
       ACTIONS_ALLOW_UNSECURE_COMMANDS: true
       MRUBY_CONFIG: ci/gcc-clang
       CC: gcc
       installer-path: '%TMP%\cygwin-setup.exe'
       cygwin-root: C:\cygwin
       package-dir: C:\cygwin-package
       cache-version: v1
     steps:
-      - uses: actions/checkout@v2.3.5
+      - uses: actions/checkout@v2.4.0
       - uses: actions/cache@v2.1.6
         with:
           path: ${{ env.package-dir }}
           key: ${{ runner.os }}-cygwin-${{ env.cache-version }}
       - name: Download Cygwin installer
         shell: cmd
         run: >
           bitsadmin /transfer download /priority foreground
           https://cygwin.com/setup-x86_64.exe ${{ env.installer-path }}
       - name: Install Cygwin
         shell: cmd
         run: >
           ${{ env.installer-path }}
           --quiet-mode --no-shortcuts --no-startmenu --no-desktop --no-admin
           --only-site --site http://mirrors.kernel.org/sourceware/cygwin/
           --root ${{ env.cygwin-root }}
           --local-package-dir ${{ env.package-dir }}
           --packages gcc-core,gcc-g++,ruby
       - name: Set PATH for Cygwin
         run: |
           echo '::set-env name=PATH::${{ env.cygwin-root }}\bin;${{ env.cygwin-root }}\usr\bin'
       - name: Ruby version
         shell: cmd
         run: ruby -v
       - name: Compiler version
         run: ${{ env.CC }} --version
       - name: Build and test
         shell: cmd
         run: ruby /usr/bin/rake -m test:build && ruby /usr/bin/rake test:run
       - name: Set PATH for cache archiving (tar)
         # set Windows path so that Cygwin tar is not used for cache archiving
         run: echo '::set-env name=PATH::C:\windows\System32'
 
   Windows-VC:
     runs-on: windows-latest
     timeout-minutes: 10
     env:
       MRUBY_CONFIG: ci/msvc
     steps:
-      - uses: actions/checkout@v2.3.5
+      - uses: actions/checkout@v2.4.0
       - name: Ruby version
         run: ruby -v
       - name: Build and test
         shell: cmd
         run: |
           call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
           rake -m test:build && rake test:run
diff --git a/.github/workflows/codeql-analysis.yml b/.github/workflows/codeql-analysis.yml
index 28bcb3ae5..184ca54c3 100644
--- a/.github/workflows/codeql-analysis.yml
+++ b/.github/workflows/codeql-analysis.yml
@@ -9,38 +9,38 @@ on:
 jobs:
   CodeQL-Build:
 
     runs-on: ubuntu-latest
 
     steps:
       - name: Checkout repository
-        uses: actions/checkout@v2.3.5
+        uses: actions/checkout@v2.4.0
         with:
           # We must fetch at least the immediate parents so that if this is
           # a pull request then we can checkout the head.
           fetch-depth: 2
 
       # Initializes the CodeQL tools for scanning.
       - name: Initialize CodeQL
         uses: github/codeql-action/init@v1
         # Override language selection by uncommenting this and choosing your languages
         # with:
         #   languages: go, javascript, csharp, python, cpp, java
 
       # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
       # If this step fails, then you should remove it and run the build manually (see below)
       - name: Autobuild
         uses: github/codeql-action/autobuild@v1
 
       # ℹ️ Command-line programs to run using the OS shell.
       # 📚 https://git.io/JvXDl
 
       # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines
       #    and modify them (or add more) to build your code if your project
       #    uses a compiled language
 
       # - run: |
       #    make bootstrap
       #    make release
 
       - name: Perform CodeQL Analysis
         uses: github/codeql-action/analyze@v1
diff --git a/.github/workflows/lint.yml b/.github/workflows/lint.yml
index 6c08915c4..51c50faf9 100644
--- a/.github/workflows/lint.yml
+++ b/.github/workflows/lint.yml
@@ -5,28 +5,28 @@ on: [pull_request]
 jobs:
   misspell:
     name: Check spelling with misspell
     runs-on: ubuntu-latest
     steps:
       - name: Check Out
-        uses: actions/checkout@v2.3.5
+        uses: actions/checkout@v2.4.0
       - name: Install
         run: wget -O - -q https://git.io/misspell | sh -s -- -b .
       - name: Misspell
         run: git ls-files --empty-directory | xargs ./misspell -error
   pre-commit:
     name: Run pre-commit
     runs-on: ubuntu-latest
     steps:
-      - uses: actions/checkout@v2.3.5
+      - uses: actions/checkout@v2.4.0
       - name: Check merge conflict
         run: |
           python -m pip install --upgrade pip
           pip install pre-commit
       - name: Set PY
         run: echo "PY=$(python -VV | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV
       - uses: actions/cache@v1
         with:
           path: ~/.cache/pre-commit
           key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}
       - name: Run pre-commit
         run: pre-commit run --all-files
diff --git a/.github/workflows/super-linter.yml b/.github/workflows/super-linter.yml
index 043cac9de..df453bdce 100644
--- a/.github/workflows/super-linter.yml
+++ b/.github/workflows/super-linter.yml
@@ -10,14 +10,14 @@ on:
 jobs:
   build:
     name: Lint Code Base
     runs-on: ubuntu-latest
     steps:
-      - uses: actions/checkout@v2.3.5
+      - uses: actions/checkout@v2.4.0
       - uses: github/super-linter@v4.8.1
         env:
           ERROR_ON_MISSING_EXEC_BIT: true
           VALIDATE_BASH: true
           # VALIDATE_BASH_EXEC: true
           # VALIDATE_EDITORCONFIG: true
           # VALIDATE_SHELL_SHFMT: true
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
