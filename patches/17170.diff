commit d965156fe61df9f892b1c0555198b7b37daff437
Author: Frank Morgner <frankmorgner@gmail.com>
Date:   Mon Sep 30 20:02:12 2019 +0200

    fuzz_pkcs15_decode: fixed use after free

diff --git a/src/tests/fuzzing/fuzz_pkcs15_decode.c b/src/tests/fuzzing/fuzz_pkcs15_decode.c
index 0704c66a..ef79f0d2 100644
--- a/src/tests/fuzzing/fuzz_pkcs15_decode.c
+++ b/src/tests/fuzzing/fuzz_pkcs15_decode.c
@@ -32,43 +32,44 @@ static sc_card_t card = {0};
 int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size)
 {
     int (* decode_entries[])(struct sc_pkcs15_card *, struct sc_pkcs15_object *,
             const u8 **nbuf, size_t *nbufsize) = {
         sc_pkcs15_decode_prkdf_entry, sc_pkcs15_decode_pukdf_entry,
         sc_pkcs15_decode_skdf_entry, sc_pkcs15_decode_cdf_entry,
         sc_pkcs15_decode_dodf_entry, sc_pkcs15_decode_aodf_entry
     };
     size_t i;
 
     if (!ctx)
         sc_establish_context(&ctx, "fuzz");
     if (!p15card) {
         card.ctx = ctx;
         p15card = sc_pkcs15_card_new();
         if (p15card) {
             p15card->card = &card;
         }
     }
 
     for (i = 0; i < sizeof decode_entries/sizeof *decode_entries; i++) {
         struct sc_pkcs15_object *obj;
         const u8 *p = Data;
         size_t len = Size;
         obj = calloc(1, sizeof *obj);
         while (SC_SUCCESS == decode_entries[i](p15card, obj, &p, &len)) {
             sc_pkcs15_free_object(obj);
+            obj = calloc(1, sizeof *obj);
         }
         sc_pkcs15_free_object(obj);
     }
 
     struct sc_pkcs15_pubkey *pubkey = calloc(1, sizeof *pubkey);
     sc_pkcs15_decode_pubkey(ctx, pubkey, Data, Size);
     sc_pkcs15_free_pubkey(pubkey);
 
     struct sc_pkcs15_tokeninfo *tokeninfo = sc_pkcs15_tokeninfo_new();
     sc_pkcs15_parse_tokeninfo(ctx, tokeninfo, Data, Size);
     sc_pkcs15_free_tokeninfo(tokeninfo);
 
     sc_pkcs15_parse_unusedspace(Data, Size, p15card);
 
     return 0;
 }
