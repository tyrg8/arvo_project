commit 5f50f8837f918ca1d176355d1538e0e6c9703f41
Author: Behdad Esfahbod <behdad@behdad.org>
Date:   Sat Oct 7 13:17:33 2017 +0200

    [arabic] Fix cluster merging

diff --git a/src/hb-ot-shape-complex-arabic.cc b/src/hb-ot-shape-complex-arabic.cc
index 28dd4e1fe..f74196112 100644
--- a/src/hb-ot-shape-complex-arabic.cc
+++ b/src/hb-ot-shape-complex-arabic.cc
@@ -642,47 +642,47 @@ static void
 reorder_marks_arabic (const hb_ot_shape_plan_t *plan,
 		      hb_buffer_t              *buffer,
 		      unsigned int              start,
 		      unsigned int              end)
 {
   hb_glyph_info_t *info = buffer->info;
 
   unsigned int i = start;
   for (unsigned int cc = 220; cc <= 230; cc += 10)
   {
     DEBUG_MSG (ARABIC, buffer, "Looking for %d's starting at %d\n", cc, i);
     while (i < end && info_cc(info[i]) < cc)
       i++;
     DEBUG_MSG (ARABIC, buffer, "Looking for %d's stopped at %d\n", cc, i);
 
     if (i == end)
       break;
 
     if (info_cc(info[i]) > cc)
       continue;
 
     /* Technically we should also check "info_cc(info[j]) == cc"
      * in the following loop.  But not doing it is safe; we might
      * end up moving all the 220 MCMs and 230 MCMs together in one
      * move and be done. */
     unsigned int j = i;
     while (j < end && info_is_mcm (info[j]))
       j++;
     DEBUG_MSG (ARABIC, buffer, "Found %d's from %d to %d\n", cc, i, j);
 
     if (i == j)
       continue;
 
     /* Shift it! */
     DEBUG_MSG (ARABIC, buffer, "Shifting %d's: %d %d\n", cc, i, j);
     hb_glyph_info_t temp[HB_OT_SHAPE_COMPLEX_MAX_COMBINING_MARKS];
     assert (j - i <= ARRAY_LENGTH (temp));
-    buffer->merge_out_clusters (start, j);
+    buffer->merge_clusters (start, j);
     memmove (temp, &info[i], (j - i) * sizeof (hb_glyph_info_t));
     memmove (&info[start + j - i], &info[start], (i - start) * sizeof (hb_glyph_info_t));
     memmove (&info[start], temp, (j - i) * sizeof (hb_glyph_info_t));
 
     start += j - i;
 
     i = j;
   }
 }
