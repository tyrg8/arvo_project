commit ad9a5637f9fa35dc380d0718af3c8c1a81f6c0b0
Author: Nick Wellnhofer <wellnhofer@aevum.de>
Date:   Fri Mar 22 19:37:12 2024 +0100

    tree: Fix uninitialized value in xmlSearchNsSafe
    
    Short-lived regression.

diff --git a/tree.c b/tree.c
index b28f224f..2a5dbe0b 100644
--- a/tree.c
+++ b/tree.c
@@ -5950,86 +5950,87 @@ int
 xmlSearchNsSafe(xmlNodePtr node, const xmlChar *prefix,
                 xmlNsPtr *out) {
     xmlNsPtr cur;
     xmlDocPtr doc;
     xmlNodePtr orig = node;
     xmlNodePtr parent;
 
-    if ((out == NULL) ||
-        (node == NULL) || (node->type == XML_NAMESPACE_DECL))
+    if (out == NULL)
         return(1);
     *out = NULL;
+    if ((node == NULL) || (node->type == XML_NAMESPACE_DECL))
+        return(1);
 
     doc = node->doc;
 
     if ((doc != NULL) && (IS_STR_XML(prefix))) {
         cur = xmlTreeEnsureXMLDecl(doc);
         if (cur == NULL)
             return(-1);
         *out = cur;
         return(0);
     }
 
     while (node->type != XML_ELEMENT_NODE) {
         node = node->parent;
         if (node == NULL)
             return(0);
     }
 
     parent = node;
 
     while ((node != NULL) && (node->type == XML_ELEMENT_NODE)) {
         cur = node->nsDef;
         while (cur != NULL) {
             if (xmlStrEqual(cur->prefix, prefix)) {
                 *out = cur;
                 return(0);
             }
             cur = cur->next;
         }
         if (orig != node) {
             cur = node->ns;
             if ((cur != NULL) &&
                 (xmlStrEqual(cur->prefix, prefix))) {
                 *out = cur;
                 return(0);
             }
         }
 
 	node = node->parent;
     }
 
     /*
      * The XML-1.0 namespace is normally held on the document
      * element. In this case exceptionally create it on the
      * node element.
      */
     if ((doc == NULL) && (IS_STR_XML(prefix))) {
         cur = xmlNewXmlNs();
         if (cur == NULL)
             return(-1);
         cur->next = parent->nsDef;
         parent->nsDef = cur;
         *out = cur;
     }
 
     return(0);
 }
 
 /**
  * xmlSearchNs:
  * @doc:  the document
  * @node:  the current node
  * @nameSpace:  the namespace prefix
  *
  * Search a Ns registered under a given name space for a document.
  * recurse on the parents until it finds the defined namespace
  * or return NULL otherwise.
  * @nameSpace can be NULL, this is a search for the default namespace.
  * We don't allow to cross entities boundaries. If you don't declare
  * the namespace within those you will be in troubles !!! A warning
  * is generated to cover this case.
  *
  * Returns the namespace pointer or NULL if no namespace was found or
  * a memory allocation failed. Allocations can only fail if the "xml"
  * namespace is queried.
  */
