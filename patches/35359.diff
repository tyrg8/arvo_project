commit 6dd6fafa2a65310ca7cef7681a77a3d430261d6d
Merge: d14d5eed2 ee865253a
Author: John Cupitt <jcupitt@gmail.com>
Date:   Sat Jul 3 11:47:26 2021 +0100

    Merge branch '8.11'

diff --git a/ChangeLog b/ChangeLog
index 80ebebb7c..d38b88bfd 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,624 +1,624 @@
-<<<<<<< HEAD
 14/6/21 started 8.12
 - all tools support `--version`
 - add vips_svgload_string() convenience function
-=======
+
 14/8/20 started 8.11.2
 - better libdir guessing [remi]
->>>>>>> 8.11
+- fix tiff pyramid creation with jp2k compression (was broken by 8.11.1)
+- don't load modules if we're built without modules
 
 14/8/20 started 8.11.1
 - add more example code to C docs
 - update libtool support in configure.ac 
 - more startup info if VIPS_INFO is set
 - command-line programs set glib prgname (no longer set for you by VIPS_INIT)
 - enable strip chopping for TIFF read [DavidStorm]
 - disable modules by default for static builds [kleisauke]
 - fix jpeg tiff pyramid save
 
 14/8/20 started 8.11
 - add vips_jpegload_source() and vips_svgload_source() to public C API
 - integrate doxygen in build system to generate C++ API docs
 - improve C++ API doc comments
 - add VipsInterpolate and guint64 support to C++ API 
 - add VImage::new_from_memory_steal [Zeranoe]
 - vipsthumbnail supports stdin / stdout thumbnailing
 - have a lock just for pdfium [DarthSim]
 - get pdfium load building again [Projkt-James]
 - add _source load support for pdfium
 - add "seed" param to perlin, worley and gaussnoise
 - add vips_source_g_input_stream_new() to load images from a GInputStream
 - add openslideload_source(), vipsload_source(), vipssave_target()
 - add hist path to rank for large windows on uchar images
 - better 8/16-bit choice for pngsave
 - avoid NaN in mapim [afontenot]
 - hist_find outputs a double histogram for large images [erdmann]
 - fix ref leaks in mosaicing package
 - run libvips leak test in CI 
 - add vips_fitsload_source(), vips_niftiload_source()
 - png and gif load note background colour as metadata [781545872]
 - add vips_image_[set|get]_array_double()
 - add GIF load with libnsgif
 - add jp2kload, jp2ksave
 - add jp2k compression to tiff load and save
 - add JPEG-XL load and save
 - add black_point_compensation flag for icc transforms
 - add "rgba" flag to vips_text() to enable full colour text rendering
 - move openslide, libheif, poppler and magick to loadable modules [kleisauke]
 - better detection of invalid ICC profiles, better fallback paths
 - add "premultiply" flag to tiffsave
 - new threading model has a singe threadpool shared by all pipelines [kleisauke]
 
 30/4/21 start 8.10.7
 - better vips7 PNG load compatibility [SkyDiverCool]
 - fix load of large PPM images from a pipe [ewelot]
 
 22/12/20 start 8.10.6
 - don't seek on bad file descriptors [kleisauke]
 - check for null memory sources [kleisauke]
 - improve ppmload, fixing a couple of small bugs
 - improve EOF detection in jpegload [bozaro]
 - improve error detection in spngload [randy408]
 - fix includes of glib headers in C++ [lovell]
 - fix build with more modern librsvg [lovell]
 - fix a possible segv with very wide images [f1ac]
 - fix issue thumbnailing RGBA images in linear mode [jjonesrs]
 - improve vipsthumbnail profile handling
 - fix tiff deflate predictor setting [Adios]
 - fix vector path for composite on i386 [kleisauke]
 
 18/12/20 started 8.10.5
 - fix potential /0 in animated webp load [lovell]
 
 14/12/20 started 8.10.4
 - fix spng detection
 
 18/10/20 started 8.10.3
 - relax heic is_a rules [hisham]
 - fix vips7 webp load [barryspearce]
 - fix out of bounds exif read in heifload
 - fix out of bounds read in tiffload
 - fix tiffsave region shrink mode [imgifty]
 - add missing flushes on write to target [harukizaemon]
 - hide info messages you could get with some older glibs [kleisauke]
 - fix --no-strip on dzsave with icc-profiles [altert]
 - better GraphicsMagick image write [bfriesen]
 - add missing read loops to spng, heif, giflib and ppm load [kleisauke]
 - block zero width or height images from imagemagick load [Koen1999]
 - check for overflow in gifload height [lovell]
 - fix msb_first default in ppm load and save [ewelot]
 - force binary mode on win for connection read / write [Alreiber]
 - better testing for output to target [barryspearce]
 - ppmload_source was missing is_a [ewelot]
 - improve webpload rounding and blending behaviour [lovell]
 - fix range clip in int32 -> unsigned casts [ewelot]
 - fix precision error in clip of float -> int casts [ewelot]
 - fix load of HEIC images with 0 length metadata [ddennedy-gpsw]
 - revise rounding in reduce [kleisauke]
 
 6/9/20 started 8.10.2
 - update magicksave/load profile handling [kelilevi]
 - better demand hint rules [kaas3000]
 - fix tiff thumbnail from buffer and source [vansante]
 - in jpegsave, don't set JFIF resolution if we set EXIF resolution
 - bump minimum libheif version to 1.3 [lovell]
 - dzsave in iiif mode could set info.json dimensions off by one [Linden6]
 - pdfload allows dpi and scale to both be set [le0daniel]
 - allow gaussblur sigma zero, meaning no blur
 - better heif signature detection [lovell]
 - fix vips_fractsurf() typo [kleisauke]
 - better heif EOF detection [lovell]
 - fix gir build with g-o-i 1.66+ [László]
 - improve seek behaviour on pipes
 - add "speed" param to heifsave [lovell]
 - fix regression in C path for dilate / erode [kleisauke]
 - fix build with libheif save but no load [estepnv]
 
 9/8/20 started 8.10.1
 - fix markdown -> xml conversion in doc generation
 - remove typedef redefinitions to please old gccs
 - fix regression in tiff pyramid thumbnailing [tand826]
 - stop 0-length buffer being passed to imagemagick [lovell]
 - convert no-profile CMYK to RGB on save [augustocdias]
 - ensure SVG loader skips input with chars outside x09-x7F range [lovell]
 - better mask sizing in gaussmat [johntrunc]
 - fix tiffsave "squash" handling [barryspearce]
 - fix jpegload autorotate [chregu]
 - only start the background render thread on first use
 
 24/1/20 started 8.10.0
 - more conformat IIIF output from dzsave [regisrob]
 - add @id to dzsave to set IIIF id property [regisrob]
 - add max and min to region shrink [rgluskin]
 - allow \ as an escape character in vips_break_token() [akemrir]
 - tiffsave has a "depth" param to set max pyr depth
 - libtiff LOGLUV images load and save as libvips XYZ 
 - add gifload_source, csvload_source, csvsave_target, matrixload_source,
   matrixsave_source, pdfload_source, heifload_source, heifsave_target,
   ppmload_source, ppmsave_target
 - revise vipsthumbnail flags
 - add VIPS_LEAK env var
 - add vips_pipe_read_limit_set(), --vips-pipe-read-limit,
   VIPS_PIPE_READ_LIMIT
 - revise gifload to fix BACKGROUND and PREVIOUS dispose [alon-ne]
 - add subsample_mode, deprecate no_subsample in jpegsave [Elad-Laufer]
 - add vips_isdirf()
 - add PAGENUMBER support to tiff write [jclavoie-jive]
 - add "all" mode to smartcrop 
 - flood fill could stop half-way for some very complex shapes
 - better handling of unaligned reads in multipage tiffs [petoor]
 - mark old --delete option to vipsthumbnail as deprecated [UweOhse]
 - png save with a bad ICC profile just gives a warning
 - add "premultipled" option to vips_affine(), clarified vips_resize() 
   behaviour with alpha channels
 - improve bioformats support with read and write of tiff subifd pyramids
 - thumbnail exploits subifd pyramids
 - handle all EXIF orientation cases, deprecate 
   vips_autorot_get_angle() [Elad-Laufer]
 - load PNGs with libspng, if possible
 - deprecate heifload autorotate -- it's now always on
 - revised resize improves accuracy [kleisauke]
 - add --vips-config flag to show configuration info
 - add "bitdepth" param to tiff save, deprecate "squash" [MathemanFlo]
 - tiff load and save now supports 2 and 4 bit data [MathemanFlo]
 - pngsave @bitdepth parameter lets you write 1, 2 and 4 bit PNGs
 - ppmsave also uses "bitdepth" now, for consistency
 - reduce operation cache max to 100
 - rework the final bits of vips7 for vips8 [kleisauke]
 - --disable-deprecated now works [kleisauke]
 - vipsheader allows "stdin" as a filename
 - gifload allows gifs with images outside the canvas
 - wasm compatibility patches [kleisauke]
 - webpsave has a @profile param
 
 24/4/20 started 8.9.3
 - better iiif tile naming [IllyaMoskvin]
 
 31/1/19 started 8.9.2
 - fix a deadlock with --vips-leak [DarthSim]
 - better gifload behaviour for DISPOSAL_UNSPECIFIED [DarthSim]
 - ban ppm max_value < 0 
 - add fuzz corpus to dist
 - detect read errors correctly in source_sniff
 - fix regression in autorot [malomalo]
 - thumbnail on HEIC images could select the thumbnail incorrectly under some
   size modes [ZorinArsenij]
 
 20/6/19 started 8.9.1
 - don't use the new source loaders for new_from_file or new_from_buffer, it
   will break the loader priority system
 - fix thumbnail autorot [janko]
 - fix a warning with magicksave with no delay array [chregu]
 - fix a race in tiled tiff load [kleisauke]
 - better imagemagick init [LebronCurry]
 - lock for metadata changes [jcupitt]
 
 20/6/19 started 8.9.0
 - add vips_image_get/set_array_int()
 - disable webp alpha output if all frame fill the canvas and are solid
 - support arrays of delays for animated images [deftomat]
 - add "unlimited" flag to svgload
 - disable webp alpha output if all frames fill the canvas and are solid
 - add "compression" option to heifsave [lovell]
 - support webp and zstd compression in tiff
 - loaders use "minimise" to close input files earlier
 - integrate support for oss-fuzz [omira-sch]
 - add vips_switch() / vips_case() ... fast many-way ifthenelse
 - better const handling for arithmetic operators fixes comparisons against out
   of range values
 - sharpen restores input colourspace
 - handle alpha in heifload / heifsave [meyermarcel]
 - add @interpretation and @format to rawload
 - nifti load/save uses double for all floating point metadata
 - add vips_error_buffer_copy()
 - add VipsSource and VipsTarget: a universal IO class for loaders and savers
 - jpeg, png, tiff (though not tiffsave), rad, svg, ppm and webp use the 
   new IO class
 - rewritten ppm load/save is faster and uses less memory
 - add @no_strip option to dzsave [kalozka1]
 - add iiif layout to dzsave
 - fix use of resolution-unit metadata on tiff save [kayarre]
 - support TIFF CIELAB images with alpha [angelmixu]
 - support TIFF with premultiplied alpha in any band 
 - block metadata changes on shared images [pvdz]
 - RGB and sRGB are synonmous
 
 17/9/19 started 8.8.4
 - improve compatibility with older imagemagick versions
 - remove realpath, since it can fail on systems with grsec
 
 31/8/19 started 8.8.3
 - revert sharpen restoring the input colourspace
 - xres/yres tiffsave params were in pixels/cm [f--f]
 
 9/7/19 started 8.8.2
 - better early shutdown in readers
 - don't attempt to save large XMP to jpeg [tnextday]
 - always fetch HEIC metadata from the main image [zhoux2016]
 - fix loop in malformed ppm [Kyle-Kyle]
 - better support for PNGs with long comment names
 - fix build with GM
 - add locks for pdfium load
 - fix build with MSVC 
 - fix a problem with shinkv tail processing [angelmixu]
 - fix a read one byte beyond buffer bug in jpegload
 - make GIF parsing less strict
 - better feof() handling in GIF load
 - clip coding and interpretation on vips image read
 - check image bounds for GIF load
 - prevent over-pre-shrink in thumbnail [kleisauke]
 - fix sharpen with sigma 0.5 [2h4dl]
 - sharpen restores input colourspace
 - verify bands/format for coded images
 - improve data_length handling for jpeg metadata
 
 24/5/19 started 8.8.1
 - improve realpath() use on older libc
 - better magickload error messages
 - more consistent behaviour for page-height metadata
 - fix for composite with many small images and some combinations of blend modes
 - fix memleak in tiff pyr save to memory [scossu]
 - istiff attempts to read the first directory rather than just testing the
   magic number [przemyslawpluta]
 - much faster ismagick() [jcupitt]
 - better behaviour for vips_region_fetch() if request lies partly ouside image
 - remove 256 band limit in arithmetic.c [erdmann]
 - disable Orc if building with CET [lovell]
 - fix vipsthumbnail with pyr tiff [kleisauke]
 - text autofit could occasionally terminate early [levmorozov]
 - fewer warnings on tiffload [chregu]
 - vips_resize() breaks aspect ratio and limits shrink to prevent <1px 
   dimensions [lovell]
 
 21/9/18 started 8.8.0
 - much faster smartcrop [lovell]
 - add low/high to smartcrop [jcupitt]
 - add XMP support to png read/write [jcupitt]
 - deprecate thumbnail auto_rotate, add no_rotate [jcupitt]
 - implement thumbnail shrink-on-load for openslide images [jcupitt]
 - add animated webp support [jcupitt]
 - revise vips_cast() to improve behaviour with uint images [erdmann]
 - add bandand()/or()/eor() to cplusplus binding [clcaalu]
 - implement shrink-on-load for tiff pyramids [jcupitt]
 - added vips_image_set_blob_copy() [jcupitt]
 - don't stop composite on first non-transparent image [felixbuenemann, GDmac]
 - add vips_rect_overlapsrect()
 - composite is much faster at positioning subimages
 - stop tiff pyr layers if width or height drop to 1 [gvincke]
 - dzsave has a new skip_blanks option
 - add vips_CMYK2XYZ() and vips_XYZ2CMYK(), plus associated routes 
 - include cmyk and srgb fallback profiles
 - add vips_profile_load() and use it everywhere
 - fix race in temp filename creation [lhecker]
 - add @reduction_effort param to webpsave [lovell]
 - add @option_string param to thumbnail_buffer [kleisauke]
 - add XMP, IPCT, ICC, EXIF etc. support to magickload/magicksave
 - much lower memuse for gifload
 - tilecache speedups
 - add vips_heifload(), vips_heifsave()
 - add heif thumbnail support to vips_thumbnail()
 - free threadpool earlier, reducing mem growth for some long-running 
   processes [jtorresfabra]
 - add vips_region_fetch() / _width() / _height() for language bindings
 - vips_text() supports justification
 - move vips_image_set_kill() and iskilled() to the public API
 - dzsave to szi sets suffix correctly [martinweihrauch]
 - dzsave szi writes "scan-properties.xml"
 - add vips_image_(get|set)_image()
 - add openslideload option to attach all associated images as metadata
 - dzsave to szi will write all associated images
 - remove old c++ and python interfaces
 - vipsthumbnail can thumbnail animated and multipage images
 - deprecate webpload @shrink, use @scale instead
 
 31/3/19 started 8.7.5
 - better buffer sizing in tiff reader [omira-sch]
 
 4/1/19 started 8.7.4
 - magickload with magick6 API did not chain exceptions correctly causing a
   memory leak under some conditions [kleisauke]
 - zero memory on allocate to prevent write of uninitialized memory under some 
   error conditions [Balint Varga-Perke]
 
 21/11/18 started 8.7.3
 - fix infinite loop for autofit with non-scaleable font 
 - mapim was not offsetting by window offset [erdmann]
 - better rounding for scale [kleisauke]
 - fix a memleak in magick6load [kleisauke]
 
 21/11/18 started 8.7.2
 - more info output for temp files to help diagnose problems
 - vips_text() could set the wrong DPI
 - vips_text() leaked in autofit mode
 
 23/9/18 started 8.7.1
 - update function list in docs [janko-m] 
 - test for g_str_to_ascii() [jcupitt]
 - fix temp file open on Windows and fallback on linux [lovell]
 
 23/12/17 started 8.7.0
 - add magicksave, save image with libMagick [dlemstra]
 - remove jpeg thumbnail from EXIF if "jpeg-thumbnail-data" has been removed by
   user
 - hough_line scales width to 0 - 180, not 0 - 360
 - hough_line is 4x faster
 - hough_circle is 2x faster
 - add vips_sobel() and vips_canny() edge detectors
 - add vips_rotate() ... a convenience method for vips_similarity()
 - svgload was missing is_a [lovell]
 - better header sniffing for small files
 - drop incompatible ICC profiles before save
 - better hasalpha rules
 - create funcs always make MULTIBAND (ie. no alpha)
 - use O_TMPFILE, if available [Alexander--]
 - set "interlaced=1" for interlaced JPG and PNG images
 - add PDFium PDF loader
 - jpegload adds a jpeg-chroma-subsample field with eg. 4:4:4 for no
   chrominance subsampling. 
 - tiffload, pdfload, magickload set VIPS_META_N_PAGES "n-pages" metadata item
 - add fontfile option to vips_text() [fangqiao]
 - add vips_transpose3d() -- swap major dimensions in a volumetric image
 - remove vips7 stuff from default API ... you must now #include it explicitly
 - added vips_argument_get_id() to fix derived classes on win32 [angelmixu]
 - fix compile with MSVC 2017 [angelmixu]
 - pdfload has a option for background 
 - vips7 C++ interface defaults off
 - make members, getters and operators "const" in cpp API
 - composite has params for x/y position of sub-images [medakk]
 - add Mitchell kernel
 - pyramid builders have a choice of 2x2 shrinkers [harukizaemon]
 - add `palette` option to pngsave [felixbuenemann]
 - add basic nifti load/save support
 - support writing string-valued fields via libexif
 - paste in the test suite from pyvips
 - get EXIF tag names from tag plus ifd [@Nan619]
 - escape ASCII control characters in XML
 - magickload now sniffs some file types itself
 - update radiance load from upstream
 - add region_shrink to tiffsave
 - mapim could fail for float index images with coordinates out of int range
 - scale openexr alpha to 0 - 255
 - close input earlier, when we can [kleisauke]
 - add vips_object_get_args() for language bindings [kleisauke]
 
 12/3/18 started 8.6.4
 - better fitting of fonts with overhanging edges [Adrià]
 - revise C++ example [fangqiao]
 - strict round down on jpeg shrink on load [davidwood]
 - configure test for g++ 7.2 and composite.cpp
 - don't Ping in magickload, too unreliable
 - ensure WebP can add metadata when compiled with libwebpmux [lovell]
 - improve accuracy of vector path convolution [felixbuenemann]
 
 12/2/18 started 8.6.3
 - use pkg-config to find libjpeg, if we can
 - better clean of output image in vips_image_write() fixes a crash 
   writing twice to memory
 - better rounding behaviour in convolution means we hit the vector path more
   often
 - fix a crash if a delayed load failed [gsharpsh00ter]
 - icc_import attaches the fallback profile if it used it
 
 5/1/18 started 8.6.2
 - vips_sink_screen() keeps a ref to the input image ... stops a rare race
 - fix a minor accidental ABI break in 8.6.0 -> 8.6.1 [remicollet]
 - fix read of plane-separate TIFFs with large strips [remicollet]
 - fix a C++ warning in composite.cpp [lovell]
 - remove number of images limit in composite
 - composite allows 1 mode ... reused for all joins
 - fix race in vips_sink() for seq read 
 
 10/12/17 started 8.6.1
 - fix mmap window new/free cycling 
 - fix some compiler warnings
 - remove the 64-image limit on bandary operations
 - better version date [bmwiedemann]
 - bump wrapper script version [bgilbert]
 - fix a memleak on error during jpeg buffer write [lovell]
 - fix misspelling of IPTC as IPCT [lovell]
 - seq could be set on small images opened in random-access mode [aferrero2707]
 - fix small memleak in dzsave [lovell]
 - small speedup for rgb->g [lovell]
 
 15/4/17 started 8.6.0
 - supports fits images with leading non-image HDUs, thanks benepo
 - add vips_image_new_from_image() and vips_image_new_from_image1() ... make a
   constant image
 - add new_from_image() to Python as well
 - slight change to cpp new_from_image() to match py/C behaviour
 - vips_conv(), vips_compass(), vips_convsep() default to FLOAT precision
 - add FORCE resize mode to break aspect ratio
 - add vips_thumbnail_image()
 - better prefix guessing on Windows, thanks tumagonx
 - savers support a "page_height" option for multipage save
 - rename 'disc' as 'memory' and default off
 - add vips_find_trim(), search for non-background areas 
 - remove lcms1 support, it had bitrotted
 - `join` tagged as seq
 - support tiffsave_buffer for pyramids, thanks bubba
 - thumbnail and vipsthumbnail have an option for rendering intent, thanks 
   kleisauke 
 - set file create time on Windows, thanks dlong500
 - remove python tests ... moved to pyvips test suite
 - vips7 and vips8 python bindings default to off ... use the new pyvips
   binding instead
 - better svgload: larger output, handle missing width/height, thanks lovell
 - add vips_gravity() ... embed, but with direction rather than position
 - vips_text() can autofit text to a box, thanks gargsms
 - add vips_composite() / vips_composite2(): merge a set of images with 
   a set of blend modes
 - better gobject-introspection annotations, thanks astavale 
 - vips_image_write() severs all links between images, when it can ... thanks
   Warren and Nakilon
 - vector path for convolution is more accurate and can handle larger masks
 - linear and cubic kernels for reduce are higher quality
 - added vips_value_set_blob_free()
 - "--size Nx" to vipsthumbnail was broken, thanks jrochkind 
 - fix build with gcc 7
 - add vips_fill_nearest() ... fill pixels with nearest colour
 - add VIPS_COMBINE_MIN, a new combining mode for vips_compass()
 - vips_hist_find_indexed() now has a @combine parameter
 - vips_affine() and vips_similarity() have a "background" parameter
 - fix nasty jaggies on the edges of affine output, thanks chregu
 - add gif-delay, gif-comment and gif-loop metadata
 - add dispose handling to gifload
 - dzsave outputs extra right and bottom overlap-only tiles, for closer spec
   adherence
 - deprecate the "centre" option for vips_resize(): it's now always on
 - setting the EXIF data block automatically sets other image tags
 - add "extend" option to affine; resize uses it to stop black edges
 
 29/8/17 started 8.5.9
 - make --fail stop jpeg read on any libjpeg warning, thanks @mceachen
 - don't build enumtypes so often, removing perl as a compile dependency
 - fix a crash with heavy use of draw operations from language bindings, 
   thanks @Nakilon 
 
 2/8/17 started 8.5.8
 - fix transparency detection in merge, thanks Haida
 - define env var VIPS_WARNING to hide warning messages
 - shut down dzsave output earlier to help mark-sweep bindings
 - fix webp thumbnail upscale, thanks Kleis
 
 9/6/17 started 8.5.7
 - better smartcrop
 - transform cmyk->rgb automatically on write if there's an embedded profile
   and the saver does not support cmyk
 - fix DPI mixup in svgload ... we were writing images about 20% too large,
   thanks Fosk
 
 19/5/17 started 8.5.6
 - tiff read with start page > 0 could break edge tiles or strips
 - raise b64 limit to allow for huge profiles (thanks jaume)
 - fix error return in blob save (thanks jaume)
 - tag vipsprofile as py2 (thanks ioquatix)
 - don't cache thumbnail (thanks tomasc)
 
 23/4/17 started 8.5.5
 - doc polishing
 - more improvements for truncated PNG files, thanks juyunsang 
 - improve corrupted jpg handling, thanks juyunsang
 - fix small test suite issues on os x
 
 23/4/17 started 8.5.4
 - don't depend on image width when setting n_lines, thanks kleisauke
 
 7/4/17 started 8.5.3
 - more link fixing in docs 
 - revise cache sizing again to help out of order errors under heavy load, thanks
   kleisauke
 
 25/3/17 started 8.5.2
 - better behaviour for truncated PNG files, thanks Yury
 - missing proto for vips_tiffsave_buffer(), thanks greut
 - move some docs from the wiki and blog into core libvips docs
 - add support for markdown in docs
 
 25/3/17 started 8.5.1
 - init more classes earlier, thanks David
 
 13/10/16 started 8.5.0
 - rewritten buffer system is safer and frees memory earlier
 - added tiff save to buffer
 - added dzsave save to buffer (zip only)
 - revise header get/set functions
 - better vipsheader behaviour with complex field types
 - added vips_image_hasalpha()
 - added vips_thumbnail() / vips_thumbnail_buffer()
 - webpload/webpsave read and write icc, xmp, exif metadata
 - better >4gb detect for zip dzsave output [Felix Bünemann]
 - all loaders have a @fail option, meaning fail on first warning, though it
   only does anything for jpg and csv
 - add vips_image_get_fields() to help bindings
 - add tiff multi-page read/write
 - add VIPS_META_PAGE_HEIGHT metadata
 - IM6/IM7 magickload supports page/n/page-height, all_frames deprecated
 - gifload supports n/page-height
 - added #defines for VIPS_SONAME, VIPS_LIBRARY_CURRENT, VIPS_LIBRARY_REVISION,
   VIPS_LIBRARY_AGE
 - better support for bscale / bzero in fits images
 - deprecate vips_warn() / vips_info(); use g_warning() / g_info() instead
 - vipsthumbnail supports much fancier geometry strings, thanks tomasc
 - vips_thumbnail() has new @size option
 - fix --vips-cache-max etc. 
 - add compute reordering, plus some new API to support it:
   vips_reorder_margin_hint() and vips_reorder_prepare_many(), thanks
   aferrero2707
 - kick load operations from cache on read error, thanks gaillard 
 - fix return from C++ assignment operator overloads (+=, -= etc) 
 - add @max_slope to vips_hist_local() to implement CLAHE, thanks hunter-87
 - vips_gaussnoise() pixels are reproducible on recalc, thanks MvGulik
 - max/min sort values by y and x coordinate
 - tiff read uses libtiff scanline API if rows-per-strip is large
 - vips_region_shrink() knows about alpha, helps dzsave and tiffsave
 - use expat, not libxml, for XML load ... removes a required dependency, since
   we get expat as part of glib
 - new sequential mode infrastructure is faster and more flexible
 - add vips_smartcrop(), based on sharp's smartcropper
 - vipsthumbnail has a --smartcrop option
 - added vips_rot90() etc. convenience functions
 - fix vips_resize() bug when hscale and vscale were very different
 
 8/12/16 started 8.4.5
 - allow libgsf-1.14.26 to help centos, thanks tdiprima
 
 11/11/16 started 8.4.4
 - fix crash in vips.exe arg parsing on Windows, thanks Yury
 
 18/10/16 started 8.4.3
 - fix error detection in gif_close, thanks aaron42net
 - fix tiny threading memleak
 - improve compatibility with very old glib, see #548
 
 27/9/16 started 8.4.2
 - small doc improvements
 - fix error message for metadata fetch type mismatch
 - resolve a race condition in thread shutdown, thanks Lovell
 
 1/5/16 started 8.4
 - many more wepsave options [Felix Bünemann]
 - added quant_table option to wepsave [Felix Bünemann]
 - added @n option to pdfload, thanks andris
 - dzsave won't write empty tiles in google mode, thanks bverem, perog,
   felixbuenemann
 - allow nested [] in CLI args
 - restore BandFmt on unpremultiply in vipsthumbnail
 - better python detection and build [Felix Bünemann]
 - max-alpha defaults to 65535 for RGB16/GREY16
 - added radsave_buffer [Henri Chain]
 - support tiff orientation tag
 - autorotate option for tiff load
 - tiffsave converts for jpg if jpg compression is turned on
 - tiffsave supports --strip
 - conversions to GREY16 could lock
 - free pixel buffers on image close as well as thread exit ... stops main 
   thread buffers clogging up the system
 - dzsave can write compressed zips [Felix Bünemann]
 - vips_image_write() only refs the input when it has to ... makes it easier to
   combine many images in bounded memory
 - VImage::write() implementation was missing
 - VImage::write() return value changed from void to VImage to help chaining
 - added C++ arithmetic assignment overloads, += etc. 
 - VImage::ifthenelse() with double args was missing =0 on options
 - better accuracy for reducev with smarter multiplication
 - better quality for vips_resize() with linear/cubic kernels 
 - pyvips8 can create new metadata
 - better upsizing with vips_resize()
 - add imagemagick v7 support, thanks sachinwalia2k8 
 - added vips_worley(), vips_perlin() noise generators
 - added vips_convf(), vips_convi(), vips_convasep(), vips_conva() ... 
   im_conv*() functions rewritten as classes
 - vips_convsep() calls vips_convasep() for the approximate case
 - new fixed-point vector path for convi is up to about 2x faster
 - gif loader can make 1, 2, 3, or 4 bands depending on file contents
 - support --strip for pngsave
 - add svgz support [Felix Bünemann]
 - rename boostrap.sh -> autogen.sh to help snapcraft
 - support unicode filenames on Windows 
 - added VIPS_ROUND as well as VIPS_RINT
 - resize/reduce*/shrink*/affine now round output size to nearest rather than 
   rounding down, thanks ioquatix
 - better support for tile overlaps in google maps mode in dzsave
 - dzsave puts vips-properties.xml in the main dir for gm and zoomify layouts
 - resize and reduce have @centre option for centre convention downsampling
 - vipsthumbnail uses centre convention to better match imagemagick
diff --git a/configure.ac b/configure.ac
index 938f38d57..b8f72105d 100644
--- a/configure.ac
+++ b/configure.ac
@@ -454,12 +454,13 @@ if test x"$enable_modules" = x"no"; then
   AC_MSG_RESULT([no])
 else
   AC_MSG_RESULT([yes])
   AC_MSG_CHECKING([whether dynamic modules work])
   PKG_CHECK_VAR([gmodule_supported], [gmodule-no-export-2.0], [gmodule_supported])
   if test x"$gmodule_supported" = x"true"; then
     gmodule_supported_flag=yes
     gmodule_with_flag='module'
+    AC_DEFINE(ENABLE_MODULES,1,[define to enable loadable module support.])
     AC_MSG_RESULT([yes])
   else
     AC_MSG_RESULT([no])
   fi
diff --git a/libvips/iofuncs/init.c b/libvips/iofuncs/init.c
index 74f9d6b5d..b4bd30ccc 100644
--- a/libvips/iofuncs/init.c
+++ b/libvips/iofuncs/init.c
@@ -384,237 +384,243 @@ int
 vips_init( const char *argv0 )
 {
 	extern GType vips_system_get_type( void );
 	extern GType write_thread_state_get_type( void );
 	extern GType sink_memory_thread_state_get_type( void ); 
 	extern GType render_thread_state_get_type( void ); 
 	extern GType vips_source_get_type( void ); 
 	extern GType vips_source_custom_get_type( void ); 
 	extern GType vips_target_get_type( void ); 
 	extern GType vips_target_custom_get_type( void ); 
 	extern GType vips_g_input_stream_get_type( void ); 
 
 	static gboolean started = FALSE;
 	static gboolean done = FALSE;
 	const char *vips_min_stack_size;
 	const char *prefix;
 	const char *libdir;
 	char *locale;
 
 	/* Two stage done handling: 'done' means we've completed, 'started'
 	 * means we're currently initialising. Use this to prevent recursive
 	 * invocation.
 	 */
 	if( done )
 		/* Called more than once, we succeeded, just return OK.
 		 */
 		return( 0 );
 	if( started ) 
 		/* Recursive invocation, something has broken horribly.
 		 * Hopefully the first init will handle it.
 		 */
 		return( 0 );
 	started = TRUE;
 
 	if( g_getenv( "VIPS_INFO" )
 #if ENABLE_DEPRECATED
 		|| g_getenv( "IM_INFO" )
 #endif
 	)
 		vips_verbose();
 	if( g_getenv( "VIPS_PROFILE" ) )
 		vips_profile_set( TRUE );
 	if( g_getenv( "VIPS_LEAK" ) )
 		vips_leak_set( TRUE );
 	if( g_getenv( "VIPS_TRACE" ) )
 		vips_cache_set_trace( TRUE );
 	if( g_getenv( "VIPS_PIPE_READ_LIMIT" ) ) 
 		vips_pipe_read_limit = 
 			g_ascii_strtoll( g_getenv( "VIPS_PIPE_READ_LIMIT" ),
 				NULL, 10 );
 	vips_pipe_read_limit_set( vips_pipe_read_limit );
 
 #ifdef G_OS_WIN32
 	/* Windows has a limit of 512 files open at once for the fopen() family
 	 * of functions, and 2048 for the _open() family. This raises the limit
 	 * of fopen() to the same level as _open().
 	 *
 	 * It will not go any higher than this, unfortunately.  
 	 */
 	(void) _setmaxstdio( 2048 );
 #endif /*G_OS_WIN32*/
 
 	vips__threadpool_init();
 	vips__buffer_init();
 	vips__meta_init();
 
 	/* This does an unsynchronised static hash table init on first call --
 	 * we have to make sure we do this single-threaded. See: 
 	 * https://github.com/openslide/openslide/issues/161
 	 */
 #if !GLIB_CHECK_VERSION( 2, 48, 1 )
 	(void) g_get_language_names(); 
 #endif
 
 	if( !vips__global_lock )
 		vips__global_lock = vips_g_mutex_new();
 
 	if( !vips__global_timer )
 		vips__global_timer = g_timer_new();
 
 	VIPS_SETSTR( vips__argv0, argv0 );
 	vips__prgname = g_path_get_basename( argv0 );
 
 	vips__thread_profile_attach( "main" );
 
 	/* We can't do VIPS_GATE_START() until command-line processing
 	 * happens, since vips__thread_profile may not be set yet. Call
 	 * directly. 
 	 */
 	vips__thread_gate_start( "init: main" ); 
 	vips__thread_gate_start( "init: startup" ); 
 
 	/* Try to discover our prefix. 
 	 */
         if( (prefix = g_getenv( "VIPSHOME" )) )
 		g_info( "VIPSHOME = %s", prefix );
 	if( !(prefix = vips_guess_prefix( argv0, "VIPSHOME" )) || 
 		!(libdir = vips_guess_libdir( argv0, "VIPSHOME" )) ) 
 		return( -1 );
 
 	g_info( "VIPS_PREFIX = %s", VIPS_PREFIX );
 	g_info( "VIPS_LIBDIR = %s", VIPS_LIBDIR );
 	g_info( "prefix = %s", prefix );
 	g_info( "libdir = %s", libdir );
 
 	/* Get i18n .mo files from $VIPSHOME/share/locale/.
 	 */
 	locale = g_build_filename( prefix, "share", "locale", NULL );
 	bindtextdomain( GETTEXT_PACKAGE, locale );
 	g_free( locale );
 	bind_textdomain_codeset( GETTEXT_PACKAGE, "UTF-8" );
 
 	/* Register base vips types.
 	 */
 	(void) vips_image_get_type();
 	(void) vips_region_get_type();
 	(void) write_thread_state_get_type();
 	(void) sink_memory_thread_state_get_type(); 
 	(void) render_thread_state_get_type(); 
 	(void) vips_source_get_type(); 
 	(void) vips_source_custom_get_type(); 
 	(void) vips_target_get_type(); 
 	(void) vips_target_custom_get_type(); 
 	vips__meta_init_types();
 	vips__interpolate_init();
 
 #if ENABLE_DEPRECATED
 	im__format_init();
 #endif
 
 	/* Start up operator cache.
 	 */
 	vips__cache_init();
 
 	/* Recomp reordering system.
 	 */
 	vips__reorder_init();
 
 	/* Start up packages.
 	 */
 	(void) vips_system_get_type();
 	vips_arithmetic_operation_init();
 	vips_conversion_operation_init();
 	vips_create_operation_init();
 	vips_foreign_operation_init();
 	vips_resample_operation_init();
 	vips_colour_operation_init();
 	vips_histogram_operation_init();
 	vips_convolution_operation_init();
 	vips_freqfilt_operation_init();
 	vips_morphology_operation_init();
 	vips_draw_operation_init();
 	vips_mosaicing_operation_init();
 	vips_g_input_stream_get_type(); 
 
+#ifdef ENABLE_MODULES
 	/* Load any vips8 modules from the vips libdir. Keep going, even if
 	 * some modules fail to load. 
+	 *
+	 * Only do this if we have been built as a set of loadable
+	 * modules, or we might try loading an operation into a library that
+	 * already has that operation built in.
 	 */
 	(void) vips_load_plugins( "%s/vips-modules-%d.%d", 
 		libdir, VIPS_MAJOR_VERSION, VIPS_MINOR_VERSION );
+#endif /*ENABLE_MODULES*/
 
 #if ENABLE_DEPRECATED
 	/* Load any vips8 plugins from the vips libdir.
 	 */
 	(void) vips_load_plugins( "%s/vips-plugins-%d.%d", 
 		libdir, VIPS_MAJOR_VERSION, VIPS_MINOR_VERSION );
 
 	/* Load up any vips7 plugins in the vips libdir. We don't error on 
 	 * failure, it's too annoying to have VIPS refuse to start because of 
 	 * a broken plugin.
 	 */
 	if( im_load_plugins( "%s/vips-%d.%d", 
 		libdir, VIPS_MAJOR_VERSION, VIPS_MINOR_VERSION ) ) {
 		g_warning( "%s", vips_error_buffer() );
 		vips_error_clear();
 	}
 
 	/* Also load from libdir. This is old and slightly broken behaviour
 	 * :-( kept for back compat convenience.
 	 */
 	if( im_load_plugins( "%s", libdir ) ) {
 		g_warning( "%s", vips_error_buffer() );
 		vips_error_clear();
 	}
 #endif
 
 	/* Get the run-time compiler going.
 	 */
 	vips_vector_init();
 
 #ifdef HAVE_GSF
 	/* Use this for structured file write.
 	 */
 	gsf_init();
 #endif /*HAVE_GSF*/
 
 	/* Register vips_shutdown(). This may well not get called and many
 	 * platforms don't support it anyway.
 	 */
 #ifdef HAVE_ATEXIT
 	atexit( vips_shutdown );
 #endif /*HAVE_ATEXIT*/
 
 #ifdef DEBUG_LEAK
 	vips__image_pixels_quark = 
 		g_quark_from_static_string( "vips-image-pixels" ); 
 #endif /*DEBUG_LEAK*/
 
 	done = TRUE;
 
 	/* If VIPS_WARNING is defined, suppress all warning messages from vips.
 	 *
 	 * Libraries should not call g_log_set_handler(), it is
 	 * supposed to be for the application layer, but this can be awkward to
 	 * set up if you are using libvips from something like Ruby. Allow this
 	 * env var hack as a workaround. 
 	 */
 	if( g_getenv( "VIPS_WARNING" )
 #if ENABLE_DEPRECATED
 		|| g_getenv( "IM_WARNING" )
 #endif
 	)
 		g_log_set_handler( G_LOG_DOMAIN, G_LOG_LEVEL_WARNING, 
 			empty_log_handler, NULL );
 
 	/* Set a minimum stacksize, if we can.
 	 */
         if( (vips_min_stack_size = g_getenv( "VIPS_MIN_STACK_SIZE" )) )
 		(void) set_stacksize( vips__parse_size( vips_min_stack_size ) );
 
 	vips__thread_gate_stop( "init: startup" ); 
 
 	return( 0 );
 }
 
 /* Call this before vips stuff that uses stuff we need to have inited.
  */
