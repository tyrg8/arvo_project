commit 34eac8830181bc348dab845932ae3368d1bcf3ff
Author: K.Kosako <kkosako0@gmail.com>
Date:   Sat Nov 5 11:36:50 2022 +0900

    fix oss-fuzz issue 49746: Heap-buffer-overflow in onigenc_unicode_mbc_case_fold

diff --git a/harnesses/base.c b/harnesses/base.c
index 949c0e0..de77e4b 100644
--- a/harnesses/base.c
+++ b/harnesses/base.c
@@ -318,59 +318,62 @@ static int
 exec(OnigEncoding enc, OnigOptionType options, OnigSyntaxType* syntax,
      char* apattern, char* apattern_end,
      char* adata_pattern, char* adata_pattern_end,
      char* astr, UChar* end, int backward, int sl)
 {
   int r;
   regex_t* reg;
   OnigErrorInfo einfo;
   UChar* str     = (UChar* )astr;
   UChar* pattern = (UChar* )apattern;
   UChar* pattern_end = (UChar* )apattern_end;
   UChar* data_pattern = (UChar* )adata_pattern;
   UChar* data_pattern_end = (UChar* )adata_pattern_end;
 
   EXEC_COUNT++;
   EXEC_COUNT_INTERVAL++;
 
   onig_initialize(&enc, 1);
   (void)onig_set_progress_callout(progress_callout_func);
 #ifdef PARSE_DEPTH_LIMIT
   onig_set_parse_depth_limit(PARSE_DEPTH_LIMIT);
 #endif
   onig_set_subexp_call_max_nest_level(MAX_SUBEXP_CALL_NEST_LEVEL);
   onig_set_callback_each_match(each_match_callback_func);
 
   r = onig_new(&reg, pattern, pattern_end,
                (options & OPTIONS_AT_COMPILE), enc, syntax, &einfo);
   if (r != ONIG_NORMAL) {
     char s[ONIG_MAX_ERROR_MESSAGE_LEN];
     onig_error_code_to_str((UChar* )s, r, &einfo);
 #ifdef STANDALONE
     fprintf(stdout, "ERROR: %s\n", s);
 #endif
     onig_end();
 
     if (r == ONIGERR_PARSER_BUG ||
         r == ONIGERR_STACK_BUG  ||
         r == ONIGERR_UNDEFINED_BYTECODE ||
         r == ONIGERR_UNEXPECTED_BYTECODE) {
       return -2;
     }
     else
       return -1;
   }
   REGEX_SUCCESS_COUNT++;
 
-  r = search(reg, data_pattern, data_pattern_end, options, backward, sl);
-  if (r == -2) return -2;
+  if (data_pattern == pattern ||
+      onigenc_is_valid_mbc_string(enc, data_pattern, data_pattern_end) != 0) {
+    r = search(reg, data_pattern, data_pattern_end, options, backward, sl);
+    if (r == -2) return -2;
+  }
 
   if (onigenc_is_valid_mbc_string(enc, str, end) != 0) {
     VALID_STRING_COUNT++;
     r = search(reg, str, end, options, backward, sl);
     if (r == -2) return -2;
   }
 
   onig_free(reg);
   onig_end();
   return 0;
 }
