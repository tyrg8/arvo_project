commit b52dd6c9e4ef7cf95c2a6ae5ab7ccac7f6d462a1
Author: Joerg Sonnenberger <joerg@bec.de>
Date:   Mon Jan 7 21:34:28 2019 +0100

    Do something useful for directories by setting the mask to 0.
    
    This avoids buffer overflows by always truncating the window correctly.
    
    Reported-By: OSS-Fuzz issue 11011

diff --git a/libarchive/archive_read_support_format_rar5.c b/libarchive/archive_read_support_format_rar5.c
index 31f9dd53..99d81768 100644
--- a/libarchive/archive_read_support_format_rar5.c
+++ b/libarchive/archive_read_support_format_rar5.c
@@ -1836,23 +1836,26 @@ static int rar5_read_header(struct archive_read *a,
 
 static void init_unpack(struct rar5* rar) {
     rar->file.calculated_crc32 = 0;
-    rar->cstate.window_mask = rar->cstate.window_size - 1;
+    if (rar->cstate.window_size)
+        rar->cstate.window_mask = rar->cstate.window_size - 1;
+    else
+        rar->cstate.window_mask = 0;
 
     if(rar->cstate.window_buf)
         free(rar->cstate.window_buf);
 
     if(rar->cstate.filtered_buf)
         free(rar->cstate.filtered_buf);
 
     rar->cstate.window_buf = calloc(1, rar->cstate.window_size);
     rar->cstate.filtered_buf = calloc(1, rar->cstate.window_size);
 
     rar->cstate.write_ptr = 0;
     rar->cstate.last_write_ptr = 0;
 
     memset(&rar->cstate.bd, 0, sizeof(rar->cstate.bd));
     memset(&rar->cstate.ld, 0, sizeof(rar->cstate.ld));
     memset(&rar->cstate.dd, 0, sizeof(rar->cstate.dd));
     memset(&rar->cstate.ldd, 0, sizeof(rar->cstate.ldd));
     memset(&rar->cstate.rd, 0, sizeof(rar->cstate.rd));
 }
