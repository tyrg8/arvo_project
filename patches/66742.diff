commit 6268329b7ce88f13cb092e9f3de86d3036dcff97
Author: Aurelien David <aurelien.david@telecom-paristech.fr>
Date:   Fri Feb 16 09:53:26 2024 +0100

    check text size in rtsp unpack
    
    ossfuzz issue 66742

diff --git a/src/ietf/rtsp_session.c b/src/ietf/rtsp_session.c
index a07d0692b..b0c9855bf 100644
--- a/src/ietf/rtsp_session.c
+++ b/src/ietf/rtsp_session.c
@@ -83,87 +83,88 @@ GF_Err RTSP_UnpackURL(char *sURL, char Server[1024], u16 *Port, char Service[102
 found:
 	schema[i] = 0;
 	if (stricmp(schema, "rtsp") && stricmp(schema, "rtspu") && stricmp(schema, "rtsph")  && stricmp(schema, "rtsps") && stricmp(schema, "satip")) return GF_URL_ERROR;
 	//check for user/pass - not allowed
 	/*
 		test = strstr(sURL, "@");
 		if (test) return GF_NOT_SUPPORTED;
 	*/
 	test = strstr(sURL, "://");
 	if (!test) {
 		if (sep) sep[0] = '?';
 		return GF_URL_ERROR;
 	}
 	test += 3;
 	//check for service
 	retest = strstr(test, "/");
 	if (!retest) {
 		if (sep) sep[0] = '?';
 		return GF_URL_ERROR;
 	}
 	if (!stricmp(schema, "rtsp") || !stricmp(schema, "satip") || !stricmp(schema, "rtsph") || !stricmp(schema, "rtsps"))
 		*useTCP = GF_TRUE;
 
 	service_start = retest;
 	//check for port
 	char *port = strrchr(test, ':');
 	retest = (port<retest) ? port : NULL;
 	/*IPV6 address*/
 	if (retest && strchr(retest, ']')) retest = NULL;
 
 	if (retest && strstr(retest, "/")) {
 		retest += 1;
 		i=0;
 		while (i<strlen(retest) && i<1023) {
 			if (retest[i] == '/') break;
 			text[i] = retest[i];
 			i += 1;
 		}
 		text[i] = 0;
 		*Port = atoi(text);
 	}
 
 	char *sep_auth = strchr(test, '@');
 	if (sep_auth>service_start) sep_auth=NULL;
 	if (sep_auth) {
 		sep_auth[0] = 0;
 		char *psep = strchr(test, ':');
 		if (psep) psep[0] = 0;
 		strncpy(User, test, 1023);
 		User[1023]=0;
 		if (psep) {
 			strncpy(Pass, psep+1, 1023);
 			Pass[1023]=0;
 			if (psep) psep[0] = ':';
 		}
 
 		sep_auth[0] = '@';
 		test = sep_auth+1;
 	}
 
 	//get the server name
 	is_ipv6 = GF_FALSE;
 	len = (u32) strlen(test);
 	i=0;
 	while (i<len) {
 		if (test[i]=='[') is_ipv6 = GF_TRUE;
 		else if (test[i]==']') is_ipv6 = GF_FALSE;
 		if ( (test[i] == '/') || (!is_ipv6 && (test[i] == ':')) ) break;
+		if (i>=GF_ARRAY_LENGTH(text)) break;
 		text[i] = test[i];
 		i += 1;
 	}
 	text[MIN(i, GF_ARRAY_LENGTH(text)-1)] = 0;
 	strncpy(Server, text, 1024);
 	Server[1023]=0;
 	if (sep) sep[0] = '?';
 
 	if (service_start) {
 		strncpy(Service, service_start+1, 1023);
 		Service[1023]=0;
 	} else {
 		Service[0]=0;
 	}
 	return GF_OK;
 }
 
 
 //create a new GF_RTSPSession from URL - DO NOT USE WITH SDP
