commit c246f6f69a749d4f68626b40795a4f69168008f4
Author: Jakub Jelen <jjelen@redhat.com>
Date:   Wed Dec 4 15:54:43 2019 +0100

    coolkey: Make sure the object ID is unique when filling list
    
    Thanks to oss-fuzz
    
    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=19208

diff --git a/src/libopensc/card-coolkey.c b/src/libopensc/card-coolkey.c
index d492d715..c95a5035 100644
--- a/src/libopensc/card-coolkey.c
+++ b/src/libopensc/card-coolkey.c
@@ -1936,33 +1936,38 @@ static int
 coolkey_add_object(coolkey_private_data_t *priv, unsigned long object_id, const u8 *object_data, size_t object_length, int add_v1_record)
 {
 	sc_cardctl_coolkey_object_t new_object;
 	int r;
 
 	memset(&new_object, 0, sizeof(new_object));
 	new_object.path = coolkey_template_path;
 	new_object.path.len = 4;
 	ulong2bebytes(new_object.path.value, object_id);
 	new_object.id = object_id;
 	new_object.length = object_length;
 
+	/* The object ID needs to be unique */
+	if (coolkey_find_object_by_id(&priv->objects_list, object_id) != NULL) {
+		return SC_ERROR_INTERNAL;
+	}
+
 	if (object_data) {
 		new_object.data = malloc(object_length + add_v1_record);
 		if (new_object.data == NULL) {
 			return SC_ERROR_OUT_OF_MEMORY;
 		}
 		if (add_v1_record) {
 			new_object.data[0] = COOLKEY_V1_OBJECT;
 			new_object.length++;
 		}
 		memcpy(&new_object.data[add_v1_record], object_data, object_length);
 	}
 
 	r = coolkey_add_object_to_list(&priv->objects_list, &new_object);
 	if (r != SC_SUCCESS) {
 		/* if we didn't successfully put the object on the list,
 		 * the data space didn't get adopted. free it before we return */
 		free(new_object.data);
 		new_object.data = NULL;
 	}
 	return r;
 }
