commit 82491dabaa9e2d6004519371b67dd36aa4dec3c9
Author: Micah Snyder <micasnyd@cisco.com>
Date:   Mon Jan 29 16:59:16 2024 -0500

    PDF: Fix 1-byte overread
    
    An overread may occur if attempting to decrypt an empty string.
    Issue introduced during 1.3 development.
    
    Fixes: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=66281

diff --git a/libclamav/pdfng.c b/libclamav/pdfng.c
index 707c4ac9c..00cfaee5c 100644
--- a/libclamav/pdfng.c
+++ b/libclamav/pdfng.c
@@ -229,62 +229,69 @@ int is_object_reference(char *begin, char **endchar, uint32_t *id)
 static char *pdf_decrypt_string(struct pdf_struct *pdf, struct pdf_obj *obj, const char *in, size_t *length)
 {
     enum enc_method enc;
     const char *hex   = NULL;
     const char *bin   = NULL;
     char *decoded_bin = NULL;
     char *dec         = NULL;
     size_t bin_length;
 
     /* handled only once in cli_pdf() */
     // pdf_handle_enc(pdf);
     if (pdf->flags & (1 << DECRYPTABLE_PDF)) {
         int hex2str_ret;
         bool hex_encoded_binary = false;
+        const char *start       = NULL;
+        const char *end         = NULL;
 
         enc = get_enc_method(pdf, obj);
 
+        if (*length < 2) {
+            cli_dbgmsg("pdf_decrypt_string: length < 2\n");
+            return NULL;
+        }
+
         // Strip off the leading `<` and trailing `>`
-        const char *start = in;
+        start = in;
         if (start[0] == '<') {
             start++;
             hex_encoded_binary = true;
         }
-        const char *end = in + *length;
+        end = in + *length;
         if (end[-1] == '>') {
             end--;
         }
 
         *length = (end - start);
 
         if (hex_encoded_binary) {
             hex        = start;
             bin_length = *length / 2;
 
             // Convert the hex string to binary
             decoded_bin = cli_calloc(1, bin_length);
             if (!decoded_bin) {
                 return NULL;
             }
 
             hex2str_ret = cli_hex2str_to(hex, decoded_bin, *length);
             if (hex2str_ret != 0) {
                 cli_dbgmsg("pdf_decrypt_string: cli_hex2str_to() failed\n");
                 goto done;
             }
 
             bin = decoded_bin;
         } else {
             // Binary is just embedded directly in the file, no encoding.
             bin        = start;
             bin_length = *length;
         }
 
         // Decrypt the binary
         dec = decrypt_any(pdf, obj->id, bin, &bin_length, enc);
         if (!dec) {
             cli_dbgmsg("pdf_decrypt_string: decrypt_any() failed\n");
             goto done;
         }
 
         *length = bin_length;
     }
