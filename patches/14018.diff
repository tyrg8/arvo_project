commit fbd7bc474766673cde8b4a87bf76e82049e23f05
Merge: a59cff1e2 2ee3f9751
Author: Treehugger Robot <treehugger-gerrit@google.com>
Date:   Tue Apr 2 16:18:27 2019 +0000

    Merge "trace_processor: ParsePowerRails: skip huge power rail indices"

diff --git a/src/trace_processor/proto_trace_parser.cc b/src/trace_processor/proto_trace_parser.cc
index c6e4a75d8..821ed8009 100644
--- a/src/trace_processor/proto_trace_parser.cc
+++ b/src/trace_processor/proto_trace_parser.cc
@@ -841,31 +841,36 @@ void ProtoTraceParser::ParseBatteryCounters(int64_t ts, ConstBytes blob) {
 void ProtoTraceParser::ParsePowerRails(ConstBytes blob) {
   protos::pbzero::PowerRails::Decoder evt(blob.data, blob.size);
   if (evt.has_rail_descriptor()) {
     for (auto it = evt.rail_descriptor(); it; ++it) {
       protos::pbzero::PowerRails::RailDescriptor::Decoder desc(it->data(),
                                                                it->size());
-      auto idx = desc.index();
+      uint32_t idx = desc.index();
+      if (PERFETTO_UNLIKELY(idx > 256)) {
+        PERFETTO_DLOG("Skipping excessively large power_rail index %" PRIu32,
+                      idx);
+        continue;
+      }
       if (power_rails_strs_id_.size() <= idx)
         power_rails_strs_id_.resize(idx + 1);
       char counter_name[255];
       snprintf(counter_name, sizeof(counter_name), "power.%.*s_uws",
                int(desc.rail_name().size), desc.rail_name().data);
       power_rails_strs_id_[idx] = context_->storage->InternString(counter_name);
     }
   }
 
   if (evt.has_energy_data()) {
     for (auto it = evt.energy_data(); it; ++it) {
       protos::pbzero::PowerRails::EnergyData::Decoder desc(it->data(),
                                                            it->size());
       if (desc.index() < power_rails_strs_id_.size()) {
         int64_t ts = static_cast<int64_t>(desc.timestamp_ms()) * 1000000;
         context_->event_tracker->PushCounter(ts, desc.energy(),
                                              power_rails_strs_id_[desc.index()],
                                              0, RefType::kRefNoRef);
       } else {
         context_->storage->IncrementStats(stats::power_rail_unknown_index);
       }
     }
   }
 }
